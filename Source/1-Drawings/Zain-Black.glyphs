{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:48:01 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    130,\012    130,\012    126,\012    126,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    135,\012    135,\012    118,\012    118,\012    556,\012    0,\012    556,\012    386,\012    0,\012    \"-160\",\012    556,\012    \"-9\",\012    556,\012    397,\012    \"-9\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    566,\012    217,\012    566,\012    209\012)";
}
);
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = Black;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,-85,o),
(251,-85,qs),
(275,-85,o),
(305,-54,o),
(305,-29,qs),
(305,-5,o),
(275,27,o),
(251,27,qs),
(227,27,o),
(195,-5,o),
(195,-29,qs),
(195,-53,o)
);
},
{
closed = 1;
nodes = (
(221,54,qs),
(277,54,ls),
(288,54,o),
(288,64,qs),
(288,75,ls),
(288,91,o),
(302,101,qs),
(367,148,o),
(414,217,o),
(414,263,qs),
(414,315,o),
(376,345,qs),
(334,379,o),
(261,379,qs),
(211,379,o),
(163,360,qs),
(113,340,o),
(129,290,qs),
(135,269,ls),
(137,262,o),
(143,262,qs),
(147,262,o),
(153,265,qs),
(211,294,o),
(258,294,qs),
(317,294,o),
(317,247,qs),
(317,216,o),
(269,177,qs),
(235,148,o),
(211,112,o),
(211,88,qs),
(211,64,ls),
(211,54,o)
);
},
{
closed = 1;
nodes = (
(509,-268,l),
(509,559,l),
(21,559,l),
(21,-268,l)
);
},
{
closed = 1;
nodes = (
(434,-193,l),
(96,-193,l),
(96,484,l),
(434,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 3 2 5 2 3 5 128 0 5 0 2 5 0 126 0 6 10 1 9 4 6 9 103 0 4 0 2 3 4 2 105 0 0 0 1 8 0 1 105 0 8 7 7 8 87 0 8 8 7 95 0 7 8 7 79 50 50 50 53 50 53 18 17 17 58 37 34 41 36 34 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 531;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 136;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,146,o),
(101,146,qs),
(135,146,o),
(178,102,o),
(178,68,qs),
(178,34,o),
(135,-9,o),
(101,-9,qs),
(68,-9,o),
(24,35,o),
(24,68,qs),
(24,101,o)
);
},
{
closed = 1;
nodes = (
(32,556,o),
(45,556,qs),
(73,556,ls),
(170,556,o),
(167,456,qs),
(158,180,ls),
(158,167,o),
(145,167,qs),
(58,167,ls),
(45,167,o),
(45,180,qs),
(32,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 2 2 3 97 0 3 3 39 77 0 1 1 0 97 0 0 0 46 0 78 51 51 36 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 206;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,556,o),
(38,556,qs),
(78,556,ls),
(127,556,o),
(158,517,o),
(153,462,qs),
(142,356,ls),
(141,343,o),
(129,343,qs),
(57,343,ls),
(46,343,o),
(44,356,qs),
(25,542,ls)
);
},
{
closed = 1;
nodes = (
(180,556,o),
(194,556,qs),
(234,556,ls),
(284,556,o),
(315,517,o),
(309,462,qs),
(298,356,ls),
(296,343,o),
(285,343,qs),
(213,343,ls),
(202,343,o),
(200,356,qs),
(181,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
2 1 0 0 1 97 3 1 1 1 39 0 78 52 51 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,329,l),
(264,329,l),
(238,226,l),
(333,226,l)
);
},
{
closed = 1;
nodes = (
(19,134,o),
(22,147,qs),
(39,213,ls),
(43,226,o),
(55,226,qs),
(113,226,l),
(139,329,l),
(80,329,ls),
(67,329,o),
(70,343,qs),
(87,408,ls),
(91,422,o),
(102,422,qs),
(161,422,l),
(191,542,ls),
(194,556,o),
(208,556,qs),
(255,556,ls),
(319,556,o),
(302,487,qs),
(285,422,l),
(381,422,l),
(411,542,ls),
(414,556,o),
(428,556,qs),
(474,556,ls),
(540,556,o),
(522,487,qs),
(504,422,l),
(564,422,ls),
(578,422,o),
(574,408,qs),
(558,343,ls),
(554,329,o),
(542,329,qs),
(483,329,l),
(458,226,l),
(517,226,ls),
(530,226,o),
(527,213,qs),
(509,147,ls),
(506,134,o),
(494,134,qs),
(436,134,l),
(408,13,ls),
(404,0,o),
(394,0,qs),
(292,0,ls),
(279,0,o),
(283,13,qs),
(311,134,l),
(216,134,l),
(187,13,ls),
(184,0,o),
(173,0,qs),
(72,0,ls),
(59,0,o),
(63,13,qs),
(92,134,l),
(32,134,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
12 10 2 8 13 7 2 0 1 8 0 104 14 6 16 3 1 17 15 5 3 3 2 1 3 103 11 1 9 9 39 77 4 1 2 2 40 2 78 4 4 0 0 4 63 4 62 59 57 56 54 51 49 47 44 42 41 39 36 34 32 29 27 26 24 21 19 17 14 12 11 9 6 0 3 0 3 17 18 9 23 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,259,o),
(39,338,o),
(39,402,qs),
(39,467,o),
(82,511,qs),
(128,556,o),
(208,566,q),
(208,611,ls),
(208,623,o),
(220,623,qs),
(274,623,ls),
(286,623,o),
(286,611,qs),
(286,566,l),
(338,562,o),
(385,547,qs),
(419,535,o),
(439,495,o),
(429,461,qs),
(419,427,ls),
(415,413,o),
(408,413,qs),
(401,413,o),
(390,418,qs),
(337,443,o),
(286,448,q),
(286,339,l),
(376,311,o),
(452,234,o),
(452,171,qs),
(452,109,o),
(413,63,qs),
(368,10,o),
(286,-6,q),
(286,-52,ls),
(286,-65,o),
(274,-65,qs),
(220,-65,ls),
(208,-65,o),
(208,-52,qs),
(208,-10,l),
(125,-5,o),
(74,41,qs),
(22,87,o),
(22,152,qs),
(22,178,o),
(40,178,qs),
(46,178,o),
(50,174,qs),
(116,114,o),
(208,109,q),
(208,228,l)
);
},
{
closed = 1;
nodes = (
(324,129,o),
(324,161,qs),
(324,187,o),
(286,203,q),
(286,117,l)
);
},
{
closed = 1;
nodes = (
(166,440,o),
(166,408,qs),
(166,382,o),
(208,363,q),
(208,449,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
61 44 37 25 4 4 5 57 52 51 24 4 1 4 56 1 0 1 17 1 2 0 4 76 0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 5 0 3 5 3 101 0 0 0 2 97 0 2 2 46 2 78 57 45 50 20 34 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,13,q),
(505,542,l),
(511,556,o),
(525,556,qs),
(571,556,ls),
(604,556,o),
(626,513,o),
(610,483,qs),
(350,13,ls),
(342,0,o),
(331,0,qs),
(221,0,ls),
(208,0,o)
);
},
{
closed = 1;
nodes = (
(569,35,qs),
(520,84,o),
(520,169,qs),
(520,242,o),
(558,290,qs),
(601,344,o),
(677,344,qs),
(745,344,o),
(788,302,qs),
(839,253,o),
(839,169,qs),
(839,95,o),
(800,48,qs),
(755,-8,o),
(677,-8,qs),
(611,-8,o)
);
},
{
closed = 1;
nodes = (
(734,167,qs),
(734,248,o),
(677,248,qs),
(626,248,o),
(626,167,qs),
(626,90,o),
(677,90,qs),
(734,90,o)
);
},
{
closed = 1;
nodes = (
(72,256,qs),
(23,305,o),
(23,391,qs),
(23,463,o),
(61,511,qs),
(105,566,o),
(181,566,qs),
(248,566,o),
(292,523,qs),
(342,474,o),
(342,391,qs),
(342,317,o),
(303,269,qs),
(258,214,o),
(181,214,qs),
(115,214,o)
);
},
{
closed = 1;
nodes = (
(237,388,qs),
(237,468,o),
(181,468,qs),
(128,468,o),
(128,388,qs),
(128,311,o),
(181,311,qs),
(237,311,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 9 9 1 97 7 1 1 1 39 77 12 1 4 4 0 97 11 2 10 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 39 77 0 9 9 7 97 0 7 7 39 77 12 1 4 4 0 97 11 2 10 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 39 77 0 9 9 7 97 0 7 7 39 77 10 1 0 0 40 77 12 1 4 4 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 9 3 7 9 105 0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 39 77 10 1 0 0 40 77 12 1 4 4 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
54 53 38 37 30 29 14 13 2 0 58 56 53 60 54 60 46 44 37 52 38 52 34 32 29 36 30 36 22 20 13 28 14 28 9 6 0 12 2 12 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,279,ls),
(413,292,o),
(428,292,qs),
(533,292,ls),
(538,292,o),
(542,283,o),
(539,279,qs),
(443,152,l),
(546,13,l),
(550,9,o),
(545,0,o),
(540,0,qs),
(456,0,ls),
(392,0,o),
(358,42,qs),
(354,47,l),
(302,-10,o),
(213,-10,qs),
(133,-10,o),
(83,32,qs),
(27,78,o),
(27,155,qs),
(27,249,o),
(136,304,q),
(86,358,o),
(86,422,qs),
(86,482,o),
(129,521,qs),
(179,566,o),
(265,566,qs),
(345,566,o),
(391,534,qs),
(443,498,o),
(443,427,qs),
(443,346,o),
(324,277,q),
(365,231,l)
);
},
{
closed = 1;
nodes = (
(164,190,o),
(164,156,qs),
(164,132,o),
(198,99,o),
(224,99,qs),
(256,99,o),
(285,129,q),
(210,220,l)
);
},
{
closed = 1;
nodes = (
(319,422,qs),
(319,440,o),
(291,463,o),
(269,463,qs),
(249,463,o),
(224,440,o),
(224,421,qs),
(224,392,o),
(260,357,q),
(319,386,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
12 1 3 5 44 36 28 3 4 3 20 1 1 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
12 1 3 5 44 36 28 3 4 3 20 1 2 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 46 77 0 4 4 1 97 2 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 0 97 0 0 0 39 77 0 3 3 2 95 0 2 2 40 77 0 4 4 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 5 3 0 5 105 0 3 3 2 95 0 2 2 40 77 0 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
41 36 55 35 42 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,556,o),
(38,556,qs),
(78,556,ls),
(127,556,o),
(158,517,o),
(153,462,qs),
(142,356,ls),
(141,343,o),
(129,343,qs),
(57,343,ls),
(46,343,o),
(44,356,qs),
(25,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 39 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,508,qs),
(120,594,o),
(182,646,qs),
(237,692,o),
(291,697,qs),
(292,697,o),
(293,697,qs),
(301,699,o),
(301,690,qs),
(301,687,o),
(302,679,qs),
(302,670,o),
(302,667,qs),
(302,632,o),
(289,594,o),
(271,579,qs),
(262,570,o),
(260,568,qs),
(203,510,o),
(155,376,o),
(155,276,qs),
(155,177,o),
(203,42,o),
(260,-16,q),
(262,-19,o),
(267,-23,qs),
(288,-42,o),
(302,-78,o),
(302,-114,qs),
(302,-118,o),
(302,-125,qs),
(301,-135,o),
(301,-138,qs),
(301,-146,o),
(294,-145,qs),
(291,-145,ls),
(210,-137,o),
(139,-50,qs),
(39,73,o),
(39,276,qs),
(39,407,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
32 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,44,qs),
(239,-42,o),
(176,-94,qs),
(121,-140,o),
(68,-145,qs),
(67,-145,o),
(65,-145,qs),
(58,-146,o),
(57,-138,qs),
(57,-135,o),
(57,-127,qs),
(56,-118,o),
(56,-114,qs),
(56,-54,o),
(87,-26,qs),
(96,-18,o),
(99,-16,q),
(155,42,o),
(203,177,o),
(203,276,qs),
(203,376,o),
(155,510,o),
(99,568,qs),
(96,571,o),
(91,575,qs),
(70,594,o),
(56,630,o),
(56,667,qs),
(56,670,o),
(57,678,qs),
(57,687,o),
(57,690,qs),
(58,698,o),
(64,698,q),
(67,697,o),
(68,697,qs),
(149,689,o),
(220,602,qs),
(319,479,o),
(319,276,qs),
(319,145,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
32 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,375,o),
(30,388,qs),
(55,467,ls),
(59,480,o),
(71,476,qs),
(150,444,l),
(144,529,ls),
(143,542,o),
(158,542,qs),
(241,542,ls),
(256,542,o),
(254,529,q),
(248,444,l),
(327,476,ls),
(339,480,o),
(343,467,qs),
(369,388,ls),
(373,375,o),
(361,372,qs),
(277,351,l),
(330,284,ls),
(338,275,o),
(327,268,qs),
(260,218,ls),
(249,210,o),
(243,221,qs),
(199,289,l),
(156,221,ls),
(150,210,o),
(139,218,qs),
(71,268,ls),
(61,275,o),
(69,284,qs),
(121,351,l),
(38,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
28 27 22 21 14 7 6 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 393;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,217,o),
(25,230,qs),
(25,316,ls),
(25,329,o),
(38,329,qs),
(156,329,l),
(156,457,ls),
(156,468,o),
(169,468,qs),
(187,468,ls),
(236,468,o),
(276,431,o),
(276,386,qs),
(276,329,l),
(393,329,ls),
(407,329,o),
(407,316,qs),
(407,230,ls),
(407,217,o),
(393,217,qs),
(276,217,l),
(276,90,ls),
(276,77,o),
(263,77,qs),
(169,77,ls),
(156,77,o),
(156,90,qs),
(156,217,l),
(38,217,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 95 0 0 3 0 79 0 0 0 28 0 27 34 51 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,41,o),
(18,68,qs),
(18,101,o),
(63,146,o),
(95,146,qs),
(130,146,o),
(172,103,o),
(172,68,qs),
(172,-29,o),
(66,-109,qs),
(58,-115,o),
(52,-109,qs),
(35,-94,o),
(28,-62,o),
(38,-52,qs),
(64,-28,o),
(74,-6,q),
(48,1,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 43 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,158,qs),
(28,257,ls),
(28,269,o),
(41,269,qs),
(265,269,ls),
(277,269,o),
(277,257,qs),
(277,158,ls),
(277,145,o),
(265,145,qs),
(41,145,ls),
(28,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,100,o),
(180,68,qs),
(180,35,o),
(136,-10,o),
(104,-10,qs),
(73,-10,o),
(28,36,o),
(28,68,qs),
(28,100,o),
(73,146,o),
(104,146,qs),
(136,146,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,13,qs),
(232,542,ls),
(237,556,o),
(253,556,qs),
(286,556,ls),
(319,556,o),
(344,508,o),
(329,473,qs),
(135,13,ls),
(129,0,o),
(115,0,qs),
(16,0,ls),
(2,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,279,qs),
(373,357,o),
(347,400,qs),
(320,442,o),
(271,442,qs),
(229,442,o),
(203,410,qs),
(169,368,o),
(169,279,qs),
(169,115,o),
(271,115,qs),
(373,115,o)
);
},
{
closed = 1;
nodes = (
(107,55,qs),
(32,132,o),
(32,279,qs),
(32,407,o),
(91,482,qs),
(155,566,o),
(271,566,qs),
(372,566,o),
(435,502,qs),
(510,425,o),
(510,279,qs),
(510,151,o),
(452,75,qs),
(388,-10,o),
(271,-10,qs),
(170,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,393,ls),
(23,388,o),
(23,403,qs),
(23,506,ls),
(23,520,o),
(38,526,qs),
(93,546,ls),
(120,556,o),
(146,556,qs),
(185,556,ls),
(255,556,o),
(255,488,qs),
(255,123,l),
(298,123,ls),
(368,123,o),
(368,57,qs),
(368,17,ls),
(368,0,o),
(351,0,qs),
(35,0,ls),
(22,0,o),
(22,13,qs),
(22,110,ls),
(22,123,o),
(35,123,qs),
(121,123,l),
(121,424,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 39 77 2 1 0 0 1 96 0 1 1 40 1 78 50 35 51 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,123,o),
(432,59,qs),
(432,17,ls),
(432,0,o),
(416,0,qs),
(36,0,ls),
(23,0,o),
(23,13,qs),
(23,114,o),
(69,182,qs),
(104,233,o),
(194,289,qs),
(250,324,o),
(287,366,o),
(287,396,qs),
(287,448,o),
(215,448,qs),
(162,448,o),
(85,413,q),
(84,412,l),
(76,408,o),
(70,408,qs),
(61,408,o),
(58,419,qs),
(45,457,ls),
(25,517,o),
(89,542,qs),
(149,566,o),
(224,566,qs),
(306,566,o),
(359,530,qs),
(425,486,o),
(425,401,qs),
(425,340,o),
(389,291,qs),
(359,251,o),
(288,204,qs),
(227,164,o),
(198,140,o),
(189,123,q),
(362,123,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 57 36 21 42 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,167,qs),
(427,95,o),
(378,47,qs),
(319,-10,o),
(218,-10,qs),
(127,-10,o),
(70,38,qs),
(14,85,o),
(14,148,qs),
(14,177,o),
(35,177,qs),
(43,177,o),
(52,168,q),
(123,108,o),
(204,108,qs),
(245,108,o),
(291,143,o),
(291,176,qs),
(291,224,o),
(221,224,qs),
(158,224,ls),
(122,224,o),
(93,250,o),
(93,281,qs),
(93,327,ls),
(93,346,o),
(108,346,qs),
(204,346,ls),
(273,346,o),
(273,401,qs),
(273,449,o),
(201,449,qs),
(140,449,o),
(72,413,qs),
(63,408,o),
(57,408,qs),
(51,408,o),
(47,418,qs),
(33,458,ls),
(13,519,o),
(77,543,qs),
(134,566,o),
(215,566,qs),
(295,566,o),
(344,535,qs),
(408,496,o),
(408,414,qs),
(408,331,o),
(333,293,q),
(427,269,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 37 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,106,o),
(6,119,qs),
(6,193,ls),
(6,208,o),
(16,224,qs),
(208,531,ls),
(224,556,o),
(253,556,qs),
(324,556,ls),
(394,556,o),
(394,488,qs),
(394,230,l),
(418,230,ls),
(487,230,o),
(487,163,qs),
(487,123,ls),
(487,106,o),
(470,106,qs),
(394,106,l),
(394,13,ls),
(394,0,o),
(383,0,qs),
(275,0,ls),
(264,0,o),
(264,13,qs),
(264,106,l),
(19,106,ls)
);
},
{
closed = 1;
nodes = (
(264,404,l),
(155,230,l),
(264,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,377,o),
(236,377,qs),
(323,377,o),
(375,334,qs),
(434,286,o),
(434,193,qs),
(434,106,o),
(379,51,qs),
(318,-10,o),
(218,-10,qs),
(133,-10,o),
(76,33,qs),
(17,78,o),
(17,143,qs),
(17,173,o),
(38,173,qs),
(46,173,o),
(56,164,qs),
(120,108,o),
(203,108,qs),
(299,108,o),
(299,192,qs),
(299,224,o),
(248,259,o),
(201,259,qs),
(128,259,o),
(56,237,qs),
(40,232,o),
(40,248,qs),
(40,542,ls),
(40,556,o),
(53,556,qs),
(334,556,ls),
(404,556,o),
(404,488,qs),
(404,449,ls),
(404,433,o),
(388,433,qs),
(161,433,l),
(161,369,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,394,o),
(405,341,qs),
(463,285,o),
(463,203,qs),
(463,117,o),
(413,60,qs),
(353,-9,o),
(250,-9,qs),
(159,-9,o),
(98,40,qs),
(27,97,o),
(27,191,qs),
(27,233,o),
(56,309,o),
(100,381,qs),
(208,554,ls),
(215,566,o),
(230,566,qs),
(272,566,o),
(292,534,qs),
(317,494,o),
(288,443,qs),
(259,394,l),
(268,394,ls)
);
},
{
closed = 1;
nodes = (
(210,110,o),
(249,110,qs),
(284,110,o),
(329,158,o),
(329,194,qs),
(329,230,o),
(282,279,o),
(246,279,qs),
(210,279,o),
(161,231,o),
(161,194,qs),
(161,157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 39 77 0 3 3 2 97 5 1 2 2 48 77 0 4 4 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 2 0 133 0 3 3 2 97 5 1 2 2 48 77 0 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 34 32 28 26 0 23 0 22 40 36 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,433,o),
(15,446,qs),
(15,542,ls),
(15,556,o),
(28,556,qs),
(326,556,ls),
(396,556,o),
(396,488,qs),
(396,476,ls),
(396,448,o),
(383,419,qs),
(202,13,ls),
(196,0,o),
(183,0,qs),
(67,0,ls),
(53,0,o),
(59,13,qs),
(247,433,l),
(28,433,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 17 54 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,413,qs),
(34,479,o),
(85,520,qs),
(142,566,o),
(244,566,qs),
(331,566,o),
(387,530,qs),
(453,488,o),
(453,413,qs),
(453,331,o),
(384,289,q),
(464,253,o),
(464,164,qs),
(464,93,o),
(415,47,qs),
(355,-9,o),
(244,-9,qs),
(146,-9,o),
(87,35,qs),
(22,82,o),
(22,164,qs),
(22,249,o),
(100,291,q),
(34,330,o)
);
},
{
closed = 1;
nodes = (
(205,100,o),
(244,100,qs),
(282,100,o),
(329,136,o),
(329,165,qs),
(329,233,o),
(244,233,qs),
(156,233,o),
(156,165,qs),
(156,136,o)
);
},
{
closed = 1;
nodes = (
(208,339,o),
(244,339,qs),
(279,339,o),
(320,371,o),
(320,398,qs),
(320,426,o),
(279,458,o),
(244,458,qs),
(208,458,o),
(165,426,o),
(165,398,qs),
(165,371,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 2 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 2 3 5 2 105 0 4 4 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 35 38 42 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,163,o),
(79,215,qs),
(22,271,o),
(22,351,qs),
(22,439,o),
(74,498,qs),
(135,566,o),
(239,566,qs),
(330,566,o),
(390,518,qs),
(458,462,o),
(458,367,qs),
(458,326,o),
(427,243,o),
(388,181,qs),
(276,3,l),
(270,-10,o),
(253,-10,qs),
(212,-10,o),
(191,25,qs),
(166,67,o),
(195,114,qs),
(225,163,l),
(213,163,ls)
);
},
{
closed = 1;
nodes = (
(323,326,o),
(323,363,qs),
(323,400,o),
(274,448,o),
(236,448,qs),
(201,448,o),
(155,400,o),
(155,363,qs),
(155,324,o),
(201,277,o),
(239,277,qs),
(274,277,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 3 5 1 2 0 3 2 105 0 4 4 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 4 3 1 4 105 6 1 3 5 1 2 0 3 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 0 0 31 29 24 35 25 35 0 23 0 22 40 36 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,329,o),
(185,297,qs),
(185,264,o),
(141,219,o),
(109,219,qs),
(78,219,o),
(33,264,o),
(33,297,qs),
(33,329,o),
(78,374,o),
(109,374,qs),
(141,374,o)
);
},
{
closed = 1;
nodes = (
(185,100,o),
(185,68,qs),
(185,35,o),
(141,-10,o),
(109,-10,qs),
(78,-10,o),
(33,36,o),
(33,68,qs),
(33,100,o),
(78,146,o),
(109,146,qs),
(141,146,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 0 97 4 1 0 0 42 77 5 1 2 2 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,41,o),
(29,68,qs),
(29,101,o),
(74,146,o),
(106,146,qs),
(141,146,o),
(183,103,o),
(183,68,qs),
(183,-28,o),
(77,-109,q),
(68,-114,o),
(63,-109,qs),
(46,-93,o),
(38,-62,o),
(49,-52,qs),
(78,-23,o),
(85,-6,q),
(60,1,o)
);
},
{
closed = 1;
nodes = (
(73,373,o),
(106,373,qs),
(140,373,o),
(183,330,o),
(183,296,qs),
(183,262,o),
(140,219,o),
(106,219,qs),
(73,219,o),
(28,263,o),
(28,296,qs),
(28,328,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 0 134 0 1 1 2 97 0 2 2 42 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 134 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 39 43 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,190,o),
(428,134,o),
(428,82,qs),
(428,65,ls),
(428,53,o),
(417,58,qs),
(43,221,ls),
(30,226,o),
(30,242,qs),
(30,303,ls),
(30,316,o),
(43,322,qs),
(413,484,ls),
(419,487,o),
(428,483,o),
(428,477,qs),
(428,386,ls),
(428,370,o),
(413,363,qs),
(199,272,l),
(348,209,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,427,o),
(38,427,qs),
(337,427,ls),
(407,427,o),
(407,359,qs),
(407,327,ls),
(407,314,o),
(393,314,qs),
(38,314,ls),
(25,314,o),
(25,327,qs),
(25,413,ls)
);
},
{
closed = 1;
nodes = (
(25,231,o),
(38,231,qs),
(337,231,ls),
(407,231,o),
(407,164,qs),
(407,131,ls),
(407,118,o),
(393,118,qs),
(38,118,ls),
(25,118,o),
(25,131,qs),
(25,218,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 51 51 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,370,o),
(35,386,qs),
(35,477,ls),
(35,483,o),
(44,487,o),
(50,484,qs),
(421,322,ls),
(433,316,o),
(433,303,qs),
(433,242,ls),
(433,226,o),
(421,221,qs),
(47,58,ls),
(35,53,o),
(35,65,qs),
(35,82,ls),
(35,134,o),
(70,190,o),
(115,209,qs),
(264,272,l),
(50,363,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,146,o),
(183,146,qs),
(216,146,o),
(259,102,o),
(259,68,qs),
(259,34,o),
(217,-9,o),
(183,-9,qs),
(149,-9,o),
(104,35,o),
(104,68,qs),
(104,101,o)
);
},
{
closed = 1;
nodes = (
(124,241,o),
(154,289,o),
(194,321,qs),
(229,349,o),
(252,379,o),
(252,398,qs),
(252,446,o),
(192,446,qs),
(130,446,o),
(60,409,q),
(52,406,o),
(47,406,qs),
(40,406,o),
(37,414,qs),
(24,453,ls),
(13,485,o),
(32,524,o),
(65,539,qs),
(123,566,o),
(198,566,qs),
(277,566,o),
(327,534,qs),
(391,494,o),
(391,417,qs),
(391,359,o),
(359,314,qs),
(331,276,o),
(254,220,qs),
(238,208,o),
(238,190,qs),
(238,180,ls),
(238,167,o),
(224,167,qs),
(137,167,ls),
(124,167,o),
(124,180,qs),
(124,210,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 5 5 3 97 0 3 3 39 77 0 1 1 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 3 0 5 4 3 5 105 0 1 1 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 22 43 51 36 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(366,33,qs),
(303,33,o),
(262,75,qs),
(212,125,o),
(212,218,qs),
(212,293,o),
(257,347,qs),
(310,409,o),
(391,409,qs),
(454,409,o),
(489,366,q),
(511,399,o),
(567,399,qs),
(586,399,ls),
(598,399,o),
(596,386,qs),
(576,175,l),
(573,160,o),
(573,151,qs),
(573,133,o),
(592,133,qs),
(615,133,o),
(633,162,qs),
(656,200,o),
(656,264,qs),
(656,361,o),
(594,413,qs),
(530,467,o),
(408,467,qs),
(307,467,o),
(236,407,qs),
(153,336,o),
(153,218,qs),
(153,104,o),
(215,36,qs),
(286,-42,o),
(427,-42,qs),
(492,-42,o),
(578,-19,o),
(643,15,q),
(646,16,o),
(648,18,qs),
(655,23,o),
(660,23,qs),
(669,23,o),
(669,11,qs),
(669,-33,o),
(618,-76,qs),
(541,-142,o),
(404,-142,qs),
(252,-142,o),
(153,-59,qs),
(35,39,o),
(35,215,qs),
(35,362,o),
(132,460,qs),
(241,571,o),
(411,571,qs),
(551,571,o),
(647,507,qs),
(770,426,o),
(770,269,qs),
(770,180,o),
(722,112,qs),
(665,33,o),
(577,33,qs),
(504,33,o),
(476,85,q),
(436,33,o)
);
},
{
closed = 1;
nodes = (
(461,195,o),
(461,239,qs),
(461,298,o),
(407,298,qs),
(377,298,o),
(339,251,o),
(339,213,qs),
(339,182,o),
(371,143,o),
(396,143,qs),
(425,143,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
57 1 11 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 0 3 4 128 12 10 2 6 9 1 0 3 6 0 106 0 5 5 1 97 0 1 1 39 77 0 11 11 7 97 8 1 7 7 48 77 0 4 4 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 3 0 4 0 3 4 128 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 5 5 1 97 0 1 1 39 77 0 7 7 48 77 0 11 11 8 97 0 8 8 48 77 0 4 4 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 3 0 4 0 3 4 128 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 5 5 1 97 0 1 1 39 77 0 7 7 48 77 0 11 11 8 97 0 8 8 48 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 0 4 0 3 4 128 0 1 0 5 8 1 5 105 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 7 7 48 77 0 11 11 8 97 0 8 8 48 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 0 1 0 5 8 1 5 105 0 8 0 11 10 8 11 105 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 7 7 48 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
70 69 76 74 69 79 70 79 68 66 34 53 38 38 38 20 38 38 33 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 805;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 22 19 16 13 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,162,qs),
(465,0,o),
(274,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(257,556,ls),
(343,556,o),
(391,522,qs),
(448,484,o),
(448,406,qs),
(448,332,o),
(380,289,q),
(465,253,o)
);
},
{
closed = 1;
nodes = (
(328,118,o),
(328,176,qs),
(328,202,o),
(292,235,o),
(262,235,qs),
(180,235,l),
(180,118,l),
(262,118,ls)
);
},
{
closed = 1;
nodes = (
(312,342,o),
(312,392,qs),
(312,438,o),
(260,438,qs),
(180,438,l),
(180,342,l),
(264,342,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 0 2 3 5 2 103 0 4 4 0 95 0 0 0 39 77 6 1 3 3 1 95 0 1 1 40 1 78 25 25 17 17 25 31 25 30 28 26 17 24 17 23 36 51 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,186,o),
(478,186,qs),
(497,186,o),
(497,159,qs),
(497,106,o),
(459,60,qs),
(403,-9,o),
(291,-9,qs),
(184,-9,o),
(115,58,qs),
(34,136,o),
(34,276,qs),
(34,401,o),
(101,479,qs),
(176,566,o),
(305,566,qs),
(387,566,o),
(440,543,qs),
(498,518,o),
(482,457,qs),
(471,413,ls),
(467,401,o),
(458,401,qs),
(453,401,o),
(436,408,q),
(375,439,o),
(309,439,qs),
(251,439,o),
(216,405,qs),
(173,363,o),
(173,276,qs),
(173,204,o),
(209,162,qs),
(248,118,o),
(318,118,qs),
(397,118,o),
(461,177,qs),
(462,178,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 0 1 5 0 126 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 0 1 5 0 126 0 3 0 1 2 3 1 105 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
20 38 37 34 38 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,125,o),
(339,160,qs),
(383,201,o),
(383,284,qs),
(383,358,o),
(348,394,qs),
(312,431,o),
(230,431,qs),
(180,431,l),
(180,125,l),
(235,125,ls)
);
},
{
closed = 1;
nodes = (
(46,556,o),
(59,556,qs),
(230,556,ls),
(349,556,o),
(421,509,qs),
(523,443,o),
(523,288,qs),
(523,153,o),
(452,80,qs),
(375,0,o),
(224,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 0 2 2 40 2 78 0 0 24 21 15 12 0 10 0 9 33 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,125,o),
(407,59,qs),
(407,17,ls),
(407,0,o),
(391,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(329,556,ls),
(399,556,o),
(399,489,qs),
(399,447,ls),
(399,430,o),
(383,430,qs),
(182,430,l),
(182,344,l),
(310,344,ls),
(380,344,o),
(380,277,qs),
(380,237,ls),
(380,221,o),
(364,221,qs),
(182,221,l),
(182,125,l),
(337,125,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 51 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(329,556,ls),
(398,556,o),
(398,488,qs),
(398,448,ls),
(398,431,o),
(383,431,qs),
(180,431,l),
(180,338,l),
(305,338,ls),
(375,338,o),
(375,272,qs),
(375,232,ls),
(375,215,o),
(359,215,qs),
(180,215,l),
(180,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 51 51 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,199,ls),
(275,199,o),
(275,266,qs),
(275,307,ls),
(275,324,o),
(290,324,qs),
(508,324,ls),
(525,324,o),
(525,307,qs),
(525,95,ls),
(525,68,o),
(502,52,qs),
(457,18,o),
(372,-9,o),
(313,-9,qs),
(199,-9,o),
(128,47,qs),
(34,121,o),
(34,282,qs),
(34,406,o),
(101,481,qs),
(177,566,o),
(318,566,qs),
(404,566,o),
(457,543,qs),
(515,518,o),
(498,457,qs),
(487,413,ls),
(484,401,o),
(475,401,qs),
(469,401,o),
(456,406,qs),
(452,408,ls),
(392,439,o),
(328,439,qs),
(176,439,o),
(176,274,qs),
(176,205,o),
(207,164,qs),
(242,117,o),
(311,117,qs),
(355,117,o),
(395,138,q),
(395,199,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 105 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 105 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 54 38 37 35 36 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(87,556,ls),
(136,556,o),
(180,508,o),
(180,456,qs),
(180,339,l),
(350,339,l),
(350,542,ls),
(350,556,o),
(363,556,qs),
(392,556,ls),
(441,556,o),
(485,508,o),
(485,456,qs),
(485,13,ls),
(485,0,o),
(472,0,qs),
(363,0,ls),
(350,0,o),
(350,13,qs),
(350,215,l),
(180,215,l),
(180,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 3 0 0 1 3 0 103 4 1 2 2 39 77 5 1 1 1 40 1 78 51 51 18 52 50 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,556,o),
(59,556,qs),
(87,556,ls),
(137,556,o),
(182,508,o),
(182,455,qs),
(182,13,ls),
(182,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,129,qs),
(28,129,o),
(36,121,q),
(39,119,o),
(40,118,qs),
(60,99,o),
(92,99,qs),
(143,99,o),
(143,157,qs),
(143,542,ls),
(143,556,o),
(156,556,qs),
(184,556,ls),
(234,556,o),
(278,508,o),
(278,456,qs),
(278,153,ls),
(278,-10,o),
(135,-10,qs),
(76,-10,o),
(38,23,qs),
(0,57,o),
(0,104,qs),
(0,129,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 36 35 52 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 322;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(87,556,ls),
(136,556,o),
(180,508,o),
(180,456,qs),
(180,359,l),
(330,539,ls),
(344,556,o),
(362,556,qs),
(477,556,ls),
(484,556,o),
(489,547,o),
(484,542,qs),
(318,343,l),
(512,14,ls),
(515,9,o),
(509,0,o),
(503,0,qs),
(385,0,ls),
(365,0,o),
(354,16,q),
(225,233,l),
(180,181,l),
(180,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
17 9 1 0 4 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 53 55 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,125,o),
(377,59,qs),
(377,17,ls),
(377,0,o),
(360,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(87,556,ls),
(136,556,o),
(180,508,o),
(180,456,qs),
(180,125,l),
(307,125,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 16 0 15 51 51 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(153,0,qs),
(40,0,ls),
(29,0,o),
(29,13,qs),
(60,542,ls),
(60,556,o),
(72,556,qs),
(168,556,ls),
(243,556,o),
(257,503,qs),
(329,227,l),
(412,542,ls),
(416,556,o),
(428,556,qs),
(522,556,ls),
(556,556,o),
(600,518,o),
(601,487,qs),
(627,13,ls),
(627,0,o),
(617,0,qs),
(505,0,ls),
(492,0,o),
(492,13,qs),
(477,319,l),
(393,13,ls),
(390,0,o),
(378,0,qs),
(276,0,ls),
(265,0,o),
(261,13,qs),
(180,318,l),
(164,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
21 7 0 3 0 2 1 76 3 1 2 2 39 77 4 1 2 0 0 40 0 78 51 52 52 52 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(111,556,ls),
(147,556,o),
(190,531,o),
(209,500,qs),
(357,261,l),
(357,542,ls),
(357,556,o),
(370,556,qs),
(398,556,ls),
(447,556,o),
(492,508,o),
(492,455,qs),
(492,13,ls),
(492,0,o),
(479,0,qs),
(385,0,ls),
(364,0,o),
(354,18,qs),
(182,297,l),
(182,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
14 0 2 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
9 8 1 0 17 15 8 23 9 23 5 3 0 7 1 7 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,303,o),
(338,368,qs),
(338,431,o),
(267,431,qs),
(180,431,l),
(180,303,l),
(267,303,ls)
);
},
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(258,556,ls),
(472,556,o),
(472,372,qs),
(472,294,o),
(425,241,qs),
(369,178,o),
(273,178,qs),
(180,178,l),
(180,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 1 0 2 4 1 2 103 0 0 0 3 95 0 3 3 39 77 0 4 4 40 4 78 0 0 22 19 16 13 9 7 0 6 0 5 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,72,qs),
(34,147,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,187,o),
(540,122,qs),
(503,48,o),
(428,15,q),
(448,0,o),
(468,0,qs),
(496,0,o),
(522,18,qs),
(529,22,o),
(537,22,qs),
(561,22,o),
(561,-8,qs),
(561,-44,o),
(531,-74,qs),
(494,-113,o),
(433,-113,qs),
(373,-113,o),
(292,-63,o),
(260,-6,q),
(159,6,o)
);
},
{
closed = 1;
nodes = (
(435,277,qs),
(435,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(435,118,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
15 1 0 1 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
6 1 4 5 1 1 4 114 2 1 1 0 0 1 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
32 31 36 34 31 38 32 38 40 34 36 34 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,299,o),
(338,367,qs),
(338,397,o),
(300,431,o),
(267,431,qs),
(180,431,l),
(180,299,l),
(267,299,ls)
);
},
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(257,556,ls),
(360,556,o),
(414,510,qs),
(472,463,o),
(472,369,qs),
(472,251,o),
(370,200,q),
(482,15,ls),
(485,9,o),
(480,0,o),
(473,0,qs),
(355,0,ls),
(335,0,o),
(327,15,qs),
(237,179,l),
(180,179,l),
(180,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
17 1 2 1 1 76 6 1 1 0 2 3 1 2 103 0 0 0 4 95 0 4 4 39 77 5 1 3 3 40 3 78 0 0 31 28 25 22 14 11 9 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,187,qs),
(38,187,o),
(48,177,qs),
(109,115,o),
(218,115,qs),
(301,115,o),
(301,162,qs),
(301,190,o),
(230,214,qs),
(129,247,o),
(98,268,qs),
(27,315,o),
(27,401,qs),
(27,475,o),
(81,519,qs),
(138,566,o),
(233,566,qs),
(310,566,o),
(373,546,qs),
(406,534,o),
(426,494,o),
(416,460,qs),
(406,424,l),
(404,411,o),
(394,411,qs),
(388,411,o),
(377,416,qs),
(301,448,o),
(237,448,qs),
(166,448,o),
(166,408,qs),
(166,378,o),
(237,355,qs),
(290,338,ls),
(340,322,o),
(370,303,qs),
(441,257,o),
(441,170,qs),
(441,95,o),
(391,47,qs),
(333,-10,o),
(227,-10,qs),
(132,-10,o),
(71,41,qs),
(10,92,o),
(10,162,qs),
(10,187,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 42 38 34 43 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,431,o),
(5,443,qs),
(5,542,ls),
(5,556,o),
(18,556,qs),
(388,556,ls),
(457,556,o),
(457,488,qs),
(457,448,ls),
(457,431,o),
(442,431,qs),
(296,431,l),
(296,13,ls),
(296,0,o),
(283,0,qs),
(174,0,ls),
(161,0,o),
(161,13,qs),
(161,431,l),
(18,431,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 18 51 34 50 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,556,o),
(56,556,qs),
(84,556,ls),
(133,556,o),
(178,508,o),
(178,455,qs),
(178,233,ls),
(178,117,o),
(262,117,qs),
(351,117,o),
(351,232,qs),
(351,542,ls),
(351,556,o),
(364,556,qs),
(392,556,ls),
(441,556,o),
(486,508,o),
(486,455,qs),
(486,211,ls),
(486,137,o),
(454,83,qs),
(399,-9,o),
(262,-9,qs),
(142,-9,o),
(86,65,qs),
(43,122,o),
(43,211,qs),
(43,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 52 35 54 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,556,o),
(403,556,qs),
(510,556,ls),
(524,556,o),
(520,542,qs),
(343,13,ls),
(339,0,o),
(328,0,qs),
(205,0,ls),
(191,0,o),
(187,13,qs),
(11,542,ls),
(6,556,o),
(19,556,qs),
(77,556,ls),
(123,556,o),
(168,517,o),
(184,466,qs),
(271,182,l),
(383,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,556,o),
(314,556,qs),
(367,556,ls),
(417,556,o),
(463,516,o),
(474,466,qs),
(531,196,l),
(602,542,l),
(606,556,o),
(619,556,qs),
(734,556,ls),
(746,556,o),
(742,542,qs),
(612,13,ls),
(609,0,o),
(597,0,qs),
(476,0,ls),
(463,0,o),
(461,13,q),
(376,358,l),
(291,13,ls),
(287,0,o),
(276,0,qs),
(154,0,ls),
(141,0,o),
(137,13,q),
(14,542,l),
(12,556,o),
(24,556,qs),
(65,556,ls),
(115,556,o),
(163,515,o),
(172,466,qs),
(223,197,l),
(299,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,0,o),
(135,0,qs),
(13,0,ls),
(7,0,o),
(2,8,o),
(5,13,qs),
(166,291,l),
(18,542,l),
(16,547,o),
(20,556,o),
(25,556,qs),
(92,556,ls),
(138,556,o),
(176,531,o),
(204,483,qs),
(258,393,l),
(345,542,ls),
(353,556,o),
(365,556,qs),
(485,556,ls),
(500,556,o),
(493,542,qs),
(351,299,l),
(520,13,ls),
(523,8,o),
(519,0,o),
(513,0,qs),
(391,0,ls),
(376,0,o),
(369,13,qs),
(260,199,l),
(154,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 15 8 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 55 37 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,556,o),
(14,556,qs),
(84,556,ls),
(152,556,o),
(183,495,qs),
(259,346,l),
(357,542,ls),
(364,556,o),
(377,556,qs),
(495,556,ls),
(509,556,o),
(503,542,q),
(321,199,l),
(321,13,ls),
(321,0,o),
(308,0,qs),
(199,0,ls),
(186,0,o),
(186,13,qs),
(186,203,l),
(6,542,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 7 0 3 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 52 52 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,125,o),
(436,59,qs),
(436,17,ls),
(436,0,o),
(420,0,qs),
(40,0,ls),
(27,0,o),
(27,13,qs),
(27,94,ls),
(27,116,o),
(42,136,qs),
(258,430,l),
(46,430,ls),
(33,430,o),
(33,443,qs),
(33,542,ls),
(33,556,o),
(46,556,qs),
(366,556,ls),
(436,556,o),
(436,489,qs),
(436,467,ls),
(436,448,o),
(421,429,qs),
(199,125,l),
(366,125,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,-144,o),
(44,-68,qs),
(44,620,ls),
(44,696,o),
(123,696,qs),
(242,696,ls),
(268,696,o),
(268,670,qs),
(268,661,ls),
(268,585,o),
(188,585,qs),
(167,585,ls),
(162,585,o),
(162,581,qs),
(162,-29,ls),
(162,-33,o),
(167,-33,qs),
(188,-33,ls),
(268,-33,o),
(268,-109,qs),
(268,-118,ls),
(268,-144,o),
(242,-144,qs),
(123,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
9 8 2 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 16 13 11 6 4 0 23 1 22 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,556,o),
(17,556,qs),
(58,556,ls),
(100,556,o),
(142,526,o),
(159,484,qs),
(359,13,l),
(363,0,o),
(351,0,qs),
(252,0,ls),
(238,0,o),
(232,13,qs),
(8,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,-144,o),
(44,-118,qs),
(44,-109,ls),
(44,-33,o),
(123,-33,qs),
(145,-33,ls),
(150,-33,o),
(150,-29,qs),
(150,581,ls),
(150,585,o),
(145,585,qs),
(123,585,ls),
(44,585,o),
(44,661,qs),
(44,670,ls),
(44,696,o),
(70,696,qs),
(189,696,ls),
(268,696,o),
(268,620,qs),
(268,-68,ls),
(268,-144,o),
(189,-144,qs),
(70,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
15 14 2 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 12 10 7 4 0 23 1 22 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,259,o),
(131,259,qs),
(32,259,ls),
(26,259,o),
(21,268,o),
(23,273,q),
(171,542,ls),
(179,556,o),
(194,556,qs),
(209,556,ls),
(242,556,o),
(281,533,o),
(296,504,qs),
(428,273,ls),
(431,268,o),
(424,259,o),
(419,259,qs),
(319,259,ls),
(306,259,o),
(298,274,qs),
(226,417,l),
(151,274,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 52 54 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 449;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,-186,qs),
(-6,-94,ls),
(-6,-82,o),
(7,-82,qs),
(467,-82,ls),
(481,-82,o),
(481,-94,qs),
(481,-186,ls),
(481,-199,o),
(467,-199,qs),
(7,-199,ls),
(-6,-199,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 474;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,543,o),
(10,543,qs),
(125,543,ls),
(142,543,o),
(155,532,qs),
(255,441,ls),
(260,437,o),
(256,426,o),
(249,426,qs),
(147,426,ls),
(125,426,o),
(111,438,qs),
(5,528,ls),
(0,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 52 50 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 259;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 34 25 34 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,157,o),
(304,195,qs),
(304,273,o),
(235,273,qs),
(168,273,o),
(168,195,qs),
(168,157,o),
(204,114,o),
(235,114,qs),
(267,114,o)
);
},
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,542,ls),
(36,556,o),
(49,556,qs),
(72,556,ls),
(168,556,o),
(168,458,qs),
(168,357,l),
(207,398,o),
(268,398,qs),
(341,398,o),
(388,350,qs),
(442,295,o),
(442,196,qs),
(442,115,o),
(403,60,qs),
(355,-8,o),
(269,-8,qs),
(204,-8,o),
(168,33,q),
(168,13,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
22 1 1 3 10 1 2 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
22 1 1 3 10 1 5 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 39 77 0 1 1 3 97 0 3 3 48 77 0 5 5 40 77 6 1 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 33 30 27 24 21 19 13 11 6 4 0 9 1 9 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,38,qs),
(24,93,o),
(24,194,qs),
(24,281,o),
(73,336,qs),
(127,397,o),
(224,397,qs),
(270,397,o),
(306,384,qs),
(335,374,o),
(353,335,o),
(345,299,qs),
(335,261,ls),
(332,251,o),
(326,251,qs),
(322,251,o),
(315,254,qs),
(273,274,o),
(233,274,qs),
(200,274,o),
(161,229,o),
(161,191,qs),
(161,149,o),
(204,104,o),
(244,104,qs),
(291,104,o),
(325,129,qs),
(335,136,o),
(342,136,qs),
(357,136,o),
(357,117,qs),
(357,66,o),
(321,31,qs),
(280,-9,o),
(212,-9,qs),
(132,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 48 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 29 27 21 19 17 15 11 9 7 5 0 35 1 35 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,157,o),
(297,195,qs),
(297,273,o),
(231,273,qs),
(161,273,o),
(161,195,qs),
(161,158,o),
(198,114,o),
(231,114,qs),
(261,114,o)
);
},
{
closed = 1;
nodes = (
(297,556,o),
(310,556,qs),
(333,556,ls),
(383,556,o),
(430,509,o),
(430,458,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,31,l),
(258,-8,o),
(194,-8,qs),
(122,-8,o),
(75,46,qs),
(24,104,o),
(24,196,qs),
(24,275,o),
(66,330,qs),
(116,398,o),
(203,398,qs),
(264,398,o),
(297,363,q),
(297,542,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
10 1 1 2 22 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
10 1 1 2 22 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 39 77 0 1 1 2 97 0 2 2 48 77 6 1 0 0 3 97 4 1 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 5 39 77 0 1 1 2 97 0 2 2 48 77 0 4 4 40 77 6 1 0 0 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 34 31 27 24 21 19 13 11 6 4 0 9 1 9 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,260,o),
(243,291,o),
(216,291,qs),
(191,291,o),
(159,260,o),
(158,237,q),
(270,237,l)
);
},
{
closed = 1;
nodes = (
(211,94,o),
(246,94,qs),
(297,94,o),
(363,123,qs),
(374,128,o),
(380,128,qs),
(392,128,o),
(392,113,qs),
(392,73,o),
(361,39,qs),
(315,-10,o),
(224,-10,qs),
(139,-10,o),
(86,38,qs),
(24,93,o),
(24,193,qs),
(24,275,o),
(69,331,qs),
(124,397,o),
(220,397,qs),
(303,397,o),
(351,349,qs),
(400,300,o),
(400,222,qs),
(400,200,o),
(398,172,qs),
(398,167,ls),
(396,152,o),
(379,152,qs),
(159,152,l),
(164,126,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
10 1 2 1 1 76 0 5 2 6 2 5 6 128 7 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 0 0 36 34 31 30 26 24 18 16 9 7 0 6 0 6 34 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,269,o),
(5,282,qs),
(5,373,ls),
(5,386,o),
(18,386,qs),
(69,386,l),
(69,402,ls),
(69,476,o),
(99,517,qs),
(132,561,o),
(196,561,qs),
(246,561,o),
(280,529,qs),
(316,496,o),
(316,452,qs),
(316,431,o),
(301,431,qs),
(298,431,o),
(294,433,qs),
(291,434,o),
(290,434,q),
(257,449,o),
(238,449,qs),
(217,449,o),
(202,425,o),
(202,392,qs),
(202,386,l),
(292,386,ls),
(305,386,o),
(305,373,qs),
(305,282,ls),
(305,269,o),
(292,269,qs),
(202,269,l),
(202,13,ls),
(202,0,o),
(189,0,qs),
(82,0,ls),
(69,0,o),
(69,13,qs),
(69,269,l),
(18,269,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 41 0 40 36 36 36 35 35 34 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,-53,qs),
(297,-53,o),
(297,20,qs),
(297,36,l),
(258,0,o),
(201,0,qs),
(122,0,o),
(75,49,qs),
(24,102,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,398,o),
(203,398,qs),
(274,398,o),
(318,356,q),
(341,386,o),
(397,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,21,ls),
(430,-62,o),
(386,-111,qs),
(334,-171,o),
(229,-171,qs),
(154,-171,o),
(101,-130,qs),
(43,-85,o),
(43,-26,qs),
(43,-3,o),
(57,-3,qs),
(60,-3,o),
(66,-7,qs),
(70,-9,o),
(71,-10,qs),
(126,-53,o)
);
},
{
closed = 1;
nodes = (
(297,157,o),
(297,195,qs),
(297,273,o),
(231,273,qs),
(161,273,o),
(161,195,qs),
(161,158,o),
(198,114,o),
(231,114,qs),
(261,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 7 2 32 1 4 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 4 5 4 0 5 128 0 7 7 2 97 3 1 2 2 42 77 8 1 6 6 4 97 0 4 4 40 77 0 5 5 1 97 0 1 1 50 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 4 5 4 0 5 128 0 2 2 42 77 0 7 7 3 97 0 3 3 48 77 8 1 6 6 4 97 0 4 4 40 77 0 5 5 1 97 0 1 1 50 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
38 37 43 41 37 46 38 46 35 38 34 53 36 35 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,396,qs),
(322,396,o),
(362,359,qs),
(412,313,o),
(412,222,qs),
(412,13,ls),
(412,0,o),
(398,0,qs),
(292,0,ls),
(279,0,o),
(279,13,qs),
(279,201,ls),
(279,276,o),
(224,276,qs),
(168,276,o),
(168,207,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,542,ls),
(36,556,o),
(49,556,qs),
(72,556,ls),
(122,556,o),
(168,509,o),
(168,458,qs),
(168,363,l),
(200,396,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 1 76 0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 37 51 35 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(168,339,o),
(168,288,qs),
(168,13,ls),
(168,0,o),
(154,0,qs),
(48,0,ls),
(35,0,o),
(35,13,qs),
(35,373,ls)
);
},
{
closed = 1;
nodes = (
(69,556,o),
(99,556,qs),
(128,556,o),
(170,514,o),
(170,484,qs),
(170,454,o),
(129,412,o),
(99,412,qs),
(69,412,o),
(27,454,o),
(27,484,qs),
(27,513,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 2 2 3 97 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 36 36 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-68,-36,qs),
(-63,-36,o),
(-56,-40,qs),
(-29,-56,o),
(-5,-56,qs),
(18,-56,o),
(35,-30,o),
(35,3,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,-17,ls),
(167,-89,o),
(135,-128,qs),
(101,-171,o),
(39,-171,qs),
(-13,-171,o),
(-47,-138,qs),
(-81,-106,o),
(-81,-61,qs),
(-81,-36,o)
);
},
{
closed = 1;
nodes = (
(69,556,o),
(98,556,qs),
(128,556,o),
(170,513,o),
(170,483,qs),
(170,454,o),
(128,413,o),
(98,413,qs),
(69,413,o),
(27,454,o),
(27,483,qs),
(27,513,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 5 97 0 5 5 39 77 0 1 1 42 77 3 1 2 2 0 98 0 0 0 50 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 4 4 5 97 0 5 5 39 77 0 1 1 42 77 0 2 2 0 98 0 0 0 50 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 35 34 36 54 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,542,ls),
(36,556,o),
(49,556,qs),
(72,556,ls),
(122,556,o),
(168,509,o),
(168,458,qs),
(168,283,l),
(247,373,ls),
(258,386,o),
(270,386,qs),
(394,386,ls),
(400,386,o),
(403,377,o),
(399,373,qs),
(282,243,l),
(410,13,l),
(416,0,o),
(403,0,qs),
(283,0,ls),
(266,0,o),
(259,13,qs),
(192,142,l),
(168,116,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
16 8 1 0 4 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 51 53 53 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,21,qs),
(36,56,o),
(36,129,qs),
(36,542,ls),
(36,556,o),
(49,556,qs),
(72,556,ls),
(122,556,o),
(168,509,o),
(168,458,qs),
(168,144,ls),
(168,103,o),
(200,103,qs),
(218,103,o),
(240,120,qs),
(247,125,o),
(253,125,qs),
(265,125,o),
(265,106,qs),
(265,65,o),
(243,34,qs),
(212,-8,o),
(153,-8,qs),
(103,-8,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 39 77 2 1 1 1 0 98 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 15 11 9 6 5 0 23 1 23 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 261;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,396,qs),
(339,396,o),
(372,331,q),
(421,396,o),
(494,396,qs),
(641,396,o),
(641,222,qs),
(641,13,ls),
(641,0,o),
(628,0,qs),
(523,0,ls),
(509,0,o),
(509,13,qs),
(509,205,ls),
(509,276,o),
(457,276,qs),
(404,276,o),
(404,203,qs),
(404,13,ls),
(404,0,o),
(392,0,qs),
(284,0,ls),
(273,0,o),
(273,13,qs),
(273,205,ls),
(273,276,o),
(220,276,qs),
(168,276,o),
(168,203,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(67,386,ls),
(130,386,o),
(150,349,q),
(193,396,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 35 51 35 51 35 51 49 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,396,qs),
(322,396,o),
(363,359,qs),
(412,314,o),
(412,222,qs),
(412,13,ls),
(412,0,o),
(398,0,qs),
(292,0,ls),
(279,0,o),
(279,13,qs),
(279,202,ls),
(279,275,o),
(224,275,qs),
(168,275,o),
(168,207,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(69,386,ls),
(131,386,o),
(152,349,q),
(196,396,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 51 35 51 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 1 3 97 0 3 3 48 77 4 1 0 0 2 97 5 1 2 2 46 2 78 9 8 1 0 17 15 8 23 9 23 5 3 0 7 1 7 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,-160,o),
(155,-160,qs),
(49,-160,ls),
(36,-160,o),
(36,-147,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(67,386,ls),
(126,386,o),
(149,352,q),
(196,397,o),
(260,397,qs),
(343,397,o),
(391,345,qs),
(442,291,o),
(442,196,qs),
(442,114,o),
(402,60,qs),
(354,-8,o),
(264,-8,qs),
(201,-8,o),
(168,27,q),
(168,-147,ls)
);
},
{
closed = 1;
nodes = (
(304,157,o),
(304,195,qs),
(304,273,o),
(235,273,qs),
(168,273,o),
(168,195,qs),
(168,157,o),
(204,114,o),
(235,114,qs),
(267,114,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 2 0 1 0 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 30 28 24 33 25 33 51 50 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,398,o),
(203,398,qs),
(271,398,o),
(319,354,q),
(340,386,o),
(398,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,-147,ls),
(430,-160,o),
(417,-160,qs),
(310,-160,ls),
(297,-160,o),
(297,-147,qs),
(297,25,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,157,o),
(297,195,qs),
(297,273,o),
(231,273,qs),
(161,273,o),
(161,195,qs),
(161,158,o),
(198,114,o),
(231,114,qs),
(261,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 97 0 3 3 46 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 46 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 30 28 24 33 25 33 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(208,386,o),
(247,386,qs),
(274,386,ls),
(285,386,o),
(285,373,qs),
(285,277,ls),
(285,264,o),
(274,264,qs),
(250,264,ls),
(201,264,o),
(183,245,qs),
(168,227,o),
(168,170,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(67,386,ls),
(130,386,o),
(152,346,q),
(167,368,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 2 2 0 97 3 1 0 0 42 77 0 1 1 40 1 78 51 53 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,138,qs),
(30,138,o),
(41,131,qs),
(45,129,o),
(46,128,qs),
(96,96,o),
(150,96,qs),
(188,96,o),
(188,117,qs),
(188,130,o),
(145,145,qs),
(75,169,o),
(23,223,o),
(23,270,qs),
(23,329,o),
(65,363,qs),
(106,397,o),
(172,397,qs),
(228,397,o),
(267,381,qs),
(297,367,o),
(315,329,o),
(305,296,qs),
(298,273,ls),
(295,265,o),
(289,265,qs),
(285,265,o),
(278,268,qs),
(276,269,o),
(275,269,q),
(225,290,o),
(183,290,qs),
(157,290,o),
(157,274,qs),
(157,260,o),
(200,245,qs),
(272,219,o),
(322,170,o),
(322,125,qs),
(322,69,o),
(286,33,qs),
(244,-10,o),
(172,-10,qs),
(110,-10,o),
(64,23,qs),
(11,61,o),
(11,116,qs),
(11,138,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 48 77 0 4 4 0 97 0 0 0 46 0 78 36 41 38 36 41 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(7,269,o),
(7,282,qs),
(7,373,ls),
(7,386,o),
(20,386,qs),
(83,386,l),
(83,506,ls),
(83,518,o),
(95,518,qs),
(118,518,ls),
(168,518,o),
(215,472,o),
(215,422,qs),
(215,386,l),
(293,386,ls),
(305,386,o),
(305,373,qs),
(305,282,ls),
(305,269,o),
(293,269,qs),
(215,269,l),
(215,13,ls),
(215,0,o),
(201,0,qs),
(95,0,ls),
(83,0,o),
(83,13,qs),
(83,269,l),
(20,269,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 5 2 1 1 2 95 4 1 2 2 42 77 0 3 3 0 95 0 0 0 40 0 78 0 0 0 28 0 27 34 51 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,194,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,175,ls),
(167,108,o),
(222,108,qs),
(278,108,o),
(278,174,qs),
(278,373,ls),
(278,386,o),
(291,386,qs),
(314,386,ls),
(364,386,o),
(411,339,o),
(411,288,qs),
(411,188,ls),
(411,-9,o),
(222,-9,qs),
(35,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 42 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 20 17 13 11 8 5 0 23 1 23 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,386,o),
(292,386,qs),
(402,386,ls),
(415,386,o),
(411,373,qs),
(287,13,ls),
(283,0,o),
(271,0,qs),
(147,0,ls),
(133,0,o),
(129,13,qs),
(7,373,ls),
(2,386,o),
(14,386,qs),
(52,386,ls),
(104,386,o),
(152,346,o),
(169,288,qs),
(210,148,l),
(277,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 409;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,386,o),
(263,386,qs),
(281,386,ls),
(333,386,o),
(358,369,qs),
(391,349,o),
(405,288,qs),
(431,174,l),
(483,373,ls),
(486,386,o),
(500,386,qs),
(597,386,ls),
(609,386,o),
(605,373,qs),
(500,13,ls),
(496,0,o),
(483,0,qs),
(379,0,ls),
(365,0,o),
(362,13,qs),
(310,204,l),
(261,13,ls),
(258,0,o),
(245,0,qs),
(138,0,ls),
(124,0,o),
(120,13,qs),
(8,373,ls),
(4,386,o),
(17,386,qs),
(53,386,ls),
(107,386,o),
(154,346,o),
(168,288,qs),
(195,179,l),
(245,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 54 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,0,o),
(123,0,qs),
(13,0,ls),
(8,0,o),
(5,8,o),
(8,13,qs),
(125,202,l),
(18,373,ls),
(15,378,o),
(19,386,o),
(25,386,qs),
(85,386,ls),
(127,386,o),
(165,361,o),
(195,314,qs),
(207,294,l),
(257,373,ls),
(266,386,o),
(280,386,qs),
(383,386,ls),
(397,386,o),
(390,373,qs),
(290,209,l),
(411,13,ls),
(414,8,o),
(409,0,o),
(404,0,qs),
(293,0,ls),
(278,0,o),
(270,13,qs),
(207,118,l),
(145,13,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 15 8 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 55 37 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,377,o),
(5,386,o),
(10,386,qs),
(51,386,ls),
(102,386,o),
(148,347,o),
(168,288,qs),
(212,162,l),
(283,373,ls),
(288,386,o),
(299,386,qs),
(405,386,ls),
(416,386,o),
(413,373,q),
(277,-9,ls),
(242,-103,o),
(174,-171,o),
(114,-171,qs),
(63,-171,o),
(30,-140,qs),
(-4,-107,o),
(-4,-59,qs),
(-4,-37,o),
(12,-37,qs),
(17,-37,o),
(21,-40,qs),
(51,-59,o),
(74,-59,qs),
(119,-59,o),
(142,-5,q),
(3,373,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 1 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
4 1 3 3 42 77 1 1 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 52 36 34 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,116,o),
(342,103,qs),
(342,13,ls),
(342,0,o),
(329,0,qs),
(32,0,ls),
(19,0,o),
(19,13,qs),
(19,71,ls),
(19,91,o),
(32,106,qs),
(168,269,l),
(39,269,ls),
(26,269,o),
(26,282,qs),
(26,373,ls),
(26,386,o),
(39,386,qs),
(266,386,ls),
(305,386,o),
(336,353,o),
(336,313,qs),
(336,286,o),
(320,267,qs),
(195,116,l),
(329,116,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,-144,o),
(98,-68,qs),
(98,151,ls),
(98,215,o),
(57,223,qs),
(39,227,o),
(39,245,qs),
(39,308,ls),
(39,326,o),
(57,328,qs),
(98,336,o),
(98,402,qs),
(98,620,ls),
(98,696,o),
(177,696,qs),
(296,696,ls),
(322,696,o),
(322,670,qs),
(322,661,ls),
(322,585,o),
(242,585,qs),
(221,585,ls),
(216,585,o),
(216,581,qs),
(216,394,ls),
(216,311,o),
(176,276,q),
(216,243,o),
(216,157,qs),
(216,-29,ls),
(216,-33,o),
(221,-33,qs),
(242,-33,ls),
(322,-33,o),
(322,-109,qs),
(322,-118,ls),
(322,-144,o),
(296,-144,qs),
(177,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
14 11 8 3 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 24 21 18 16 6 4 0 38 1 37 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,566,o),
(58,566,qs),
(76,566,ls),
(163,566,o),
(163,468,qs),
(163,-136,ls),
(163,-149,o),
(150,-149,qs),
(58,-149,ls),
(45,-149,o),
(45,-136,qs),
(45,553,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 39 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 95 0 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
51 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,-144,o),
(44,-118,qs),
(44,-109,ls),
(44,-33,o),
(123,-33,qs),
(145,-33,ls),
(150,-33,o),
(150,-29,qs),
(150,157,ls),
(150,243,o),
(190,276,q),
(150,311,o),
(150,394,qs),
(150,581,ls),
(150,585,o),
(145,585,qs),
(123,585,ls),
(44,585,o),
(44,661,qs),
(44,670,ls),
(44,696,o),
(70,696,qs),
(189,696,ls),
(268,696,o),
(268,620,qs),
(268,402,ls),
(268,336,o),
(309,328,qs),
(327,326,o),
(327,308,qs),
(327,245,ls),
(327,227,o),
(309,223,qs),
(268,215,o),
(268,151,qs),
(268,-68,ls),
(268,-144,o),
(189,-144,qs),
(70,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
30 27 24 3 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 34 32 22 20 17 14 0 38 1 37 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,216,o),
(35,222,qs),
(35,307,ls),
(35,326,o),
(45,336,qs),
(82,369,o),
(136,369,qs),
(174,369,o),
(230,348,qs),
(298,323,o),
(326,323,qs),
(378,323,o),
(412,359,qs),
(416,363,o),
(423,361,o),
(423,356,qs),
(423,271,ls),
(423,250,o),
(413,242,qs),
(376,208,o),
(326,208,qs),
(286,208,o),
(231,229,qs),
(164,254,o),
(136,254,qs),
(81,254,o),
(46,218,q),
(43,214,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
11 1 2 3 25 1 1 0 2 76 0 2 0 1 2 89 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 457;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,286,o),
(28,319,qs),
(28,353,o),
(71,397,o),
(103,397,qs),
(137,397,o),
(182,352,o),
(182,319,qs),
(182,286,o),
(137,242,o),
(103,242,qs),
(71,242,o)
);
},
{
closed = 1;
nodes = (
(50,221,o),
(63,221,qs),
(81,221,ls),
(162,221,o),
(166,120,qs),
(176,-159,ls),
(176,-172,o),
(163,-172,qs),
(51,-172,ls),
(38,-172,o),
(38,-159,qs),
(50,208,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 0 0 1 97 0 1 1 48 77 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 3 2 99 4 1 0 0 1 97 0 1 1 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 22 19 16 13 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,-65,o),
(264,-65,qs),
(215,-65,ls),
(202,-65,o),
(202,-52,qs),
(202,-8,l),
(128,-3,o),
(80,44,qs),
(24,99,o),
(24,194,qs),
(24,276,o),
(67,329,qs),
(115,388,o),
(202,396,q),
(202,452,ls),
(202,463,o),
(215,463,qs),
(264,463,ls),
(276,463,o),
(276,452,qs),
(276,393,l),
(285,391,o),
(300,386,qs),
(306,384,ls),
(363,365,o),
(345,299,qs),
(336,268,ls),
(333,258,o),
(327,258,qs),
(322,258,o),
(316,261,qs),
(292,272,o),
(276,276,q),
(276,103,l),
(304,109,o),
(325,124,qs),
(335,131,o),
(342,131,qs),
(357,131,o),
(357,112,qs),
(357,72,o),
(314,13,o),
(276,0,q),
(276,-52,ls)
);
},
{
closed = 1;
nodes = (
(153,257,o),
(153,191,qs),
(153,126,o),
(202,106,q),
(202,276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
48 29 22 10 4 1 2 44 9 0 3 3 0 2 76 0 1 2 0 2 1 0 128 0 0 3 2 0 3 126 0 2 0 4 2 4 101 0 3 3 46 3 78 50 25 57 39 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,223,o),
(32,236,qs),
(32,333,ls),
(32,346,o),
(45,346,qs),
(91,346,l),
(81,373,o),
(81,404,qs),
(81,481,o),
(129,522,qs),
(179,566,o),
(275,566,qs),
(326,566,o),
(368,553,qs),
(438,532,o),
(438,484,qs),
(438,474,o),
(431,452,qs),
(423,423,l),
(419,414,o),
(413,414,qs),
(408,414,o),
(398,419,qs),
(332,451,o),
(276,451,qs),
(218,451,o),
(218,398,qs),
(218,381,o),
(230,346,q),
(323,346,ls),
(393,346,o),
(393,279,qs),
(393,240,ls),
(393,223,o),
(376,223,qs),
(274,223,l),
(275,216,o),
(274,203,qs),
(274,198,o),
(274,196,qs),
(274,160,o),
(261,123,q),
(369,123,ls),
(439,123,o),
(439,57,qs),
(439,17,ls),
(439,0,o),
(423,0,qs),
(45,0,ls),
(32,0,o),
(32,13,qs),
(32,110,ls),
(32,123,o),
(45,123,qs),
(129,123,l),
(144,169,o),
(144,196,qs),
(144,212,o),
(141,223,q),
(45,223,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 4 5 6 4 128 8 1 4 10 9 2 3 0 4 3 103 0 5 5 7 97 0 7 7 39 77 2 1 0 0 1 95 0 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 8 1 4 10 9 2 3 0 4 3 103 2 1 0 0 1 95 0 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 59 0 58 37 39 34 35 35 38 35 51 36 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,114,o),
(46,127,qs),
(46,200,ls),
(46,213,o),
(58,213,qs),
(181,213,l),
(160,252,l),
(58,252,ls),
(46,252,o),
(46,264,qs),
(46,337,ls),
(46,349,o),
(58,349,qs),
(108,349,l),
(7,542,l),
(1,556,o),
(15,556,qs),
(85,556,ls),
(153,556,o),
(183,494,qs),
(257,349,l),
(261,349,l),
(358,542,ls),
(364,556,o),
(378,556,qs),
(495,556,ls),
(501,556,o),
(506,547,o),
(503,542,qs),
(401,349,l),
(450,349,ls),
(463,349,o),
(463,337,qs),
(463,264,ls),
(463,252,o),
(450,252,qs),
(349,252,l),
(328,213,l),
(450,213,ls),
(463,213,o),
(463,200,qs),
(463,127,ls),
(463,114,o),
(450,114,qs),
(321,114,l),
(321,13,ls),
(321,0,o),
(308,0,qs),
(200,0,ls),
(186,0,o),
(186,13,qs),
(186,114,l),
(58,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
30 1 4 1 75 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 52 0 51 48 46 35 34 53 51 35 33 35 34 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,566,o),
(58,566,qs),
(76,566,ls),
(163,566,o),
(163,468,qs),
(163,258,ls),
(163,245,o),
(150,245,qs),
(58,245,ls),
(45,245,o),
(45,258,qs),
(45,553,ls)
);
},
{
closed = 1;
nodes = (
(45,173,o),
(58,173,qs),
(150,173,ls),
(163,173,o),
(163,160,qs),
(163,-136,ls),
(163,-149,o),
(150,-149,qs),
(58,-149,ls),
(45,-149,o),
(45,-136,qs),
(45,160,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 97 0 1 1 39 77 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 99 0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
51 51 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,1,o),
(217,1,qs),
(268,1,o),
(268,36,qs),
(268,51,o),
(238,76,o),
(193,97,qs),
(114,135,o),
(54,199,o),
(54,246,qs),
(54,306,o),
(117,353,q),
(84,391,o),
(84,439,qs),
(84,493,o),
(126,527,qs),
(172,566,o),
(247,566,qs),
(311,566,o),
(348,547,qs),
(401,523,o),
(380,462,qs),
(372,443,ls),
(369,434,o),
(363,434,qs),
(360,434,o),
(356,438,qs),
(352,441,o),
(351,442,qs),
(309,469,o),
(262,469,qs),
(219,469,o),
(219,442,qs),
(219,419,o),
(273,393,qs),
(353,354,o),
(373,339,qs),
(427,298,o),
(427,241,qs),
(427,172,o),
(372,128,q),
(405,93,o),
(405,44,qs),
(405,-12,o),
(366,-51,qs),
(318,-99,o),
(229,-99,qs),
(144,-99,o),
(90,-58,qs),
(38,-19,o),
(60,34,qs),
(72,63,ls),
(74,67,o),
(83,68,o),
(86,65,qs),
(112,36,o)
);
},
{
closed = 1;
nodes = (
(295,223,qs),
(295,240,o),
(265,266,o),
(225,284,qs),
(204,293,o),
(197,297,q),
(182,278,o),
(182,259,qs),
(182,244,o),
(211,218,o),
(250,200,qs),
(275,189,o),
(278,187,q),
(295,205,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
63 43 14 3 4 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 1 4 1 2 4 128 0 4 0 0 4 0 101 0 1 1 3 97 0 3 3 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 4 1 2 4 128 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 0 0 4 0 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
46 37 36 46 39 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,556,o),
(72,556,qs),
(101,556,o),
(143,513,o),
(143,484,qs),
(143,454,o),
(101,412,o),
(72,412,qs),
(42,412,o),
(0,454,o),
(0,484,qs),
(0,514,o)
);
},
{
closed = 1;
nodes = (
(213,556,o),
(242,556,qs),
(272,556,o),
(314,514,o),
(314,484,qs),
(314,454,o),
(272,412,o),
(242,412,qs),
(213,412,o),
(171,454,o),
(171,484,qs),
(171,514,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 314;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,496,qs),
(142,567,o),
(252,567,qs),
(347,567,o),
(408,512,qs),
(478,449,o),
(478,339,qs),
(478,244,o),
(424,183,qs),
(361,113,o),
(252,113,qs),
(156,113,o),
(94,167,qs),
(24,230,o),
(24,339,qs),
(24,435,o)
);
},
{
closed = 1;
nodes = (
(359,220,qs),
(408,263,o),
(408,339,qs),
(408,406,o),
(370,449,qs),
(327,498,o),
(252,498,qs),
(186,498,o),
(144,460,qs),
(95,416,o),
(95,339,qs),
(95,273,o),
(133,231,qs),
(176,182,o),
(252,182,qs),
(317,182,o)
);
},
{
closed = 1;
nodes = (
(330,307,q),
(336,311,o),
(338,311,qs),
(346,311,o),
(346,299,qs),
(346,275,o),
(331,253,qs),
(306,216,o),
(254,216,qs),
(204,216,o),
(172,245,qs),
(135,279,o),
(135,338,qs),
(135,390,o),
(170,425,qs),
(207,463,o),
(264,463,qs),
(298,463,o),
(325,452,qs),
(348,443,o),
(342,417,qs),
(335,387,ls),
(333,377,o),
(322,383,qs),
(292,398,o),
(266,398,qs),
(214,398,o),
(214,338,qs),
(214,282,o),
(268,282,qs),
(302,282,o),
(329,306,q),
(330,306,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 73 values pushed */
0 8 5 4 5 8 4 128 0 1 0 3 6 1 3 105 0 6 0 5 8 6 5 105 0 4 0 7 2 4 7 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 17 16 61 60 56 54 48 46 39 37 35 33 25 23 16 31 17 31 38 35 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 502;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,241,qs),
(101,241,o),
(60,282,qs),
(15,328,o),
(15,403,qs),
(15,467,o),
(53,512,qs),
(97,564,o),
(169,564,qs),
(226,564,o),
(266,529,q),
(289,556,o),
(334,556,qs),
(349,556,ls),
(359,556,o),
(359,546,qs),
(359,258,ls),
(359,248,o),
(351,248,qs),
(254,248,ls),
(246,248,o),
(246,258,qs),
(246,266,l),
(213,241,o)
);
},
{
closed = 1;
nodes = (
(246,377,o),
(246,404,qs),
(246,463,o),
(190,463,qs),
(164,463,o),
(133,431,o),
(133,404,qs),
(133,377,o),
(164,343,o),
(190,343,qs),
(215,343,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 34 25 34 38 34 51 50 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 379;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,46,o),
(262,38,o),
(257,38,qs),
(160,38,ls),
(143,38,o),
(133,51,qs),
(28,186,ls),
(21,194,o),
(21,200,qs),
(21,205,o),
(28,214,qs),
(132,349,ls),
(141,362,o),
(160,362,qs),
(255,362,ls),
(261,362,o),
(265,354,o),
(262,349,q),
(148,200,l),
(263,51,l)
);
},
{
closed = 1;
nodes = (
(453,46,o),
(450,38,o),
(444,38,qs),
(349,38,ls),
(331,38,o),
(320,51,qs),
(215,186,ls),
(209,194,o),
(209,200,qs),
(209,205,o),
(215,214,qs),
(319,349,ls),
(329,362,o),
(348,362,qs),
(443,362,ls),
(448,362,o),
(452,354,o),
(449,349,q),
(335,200,l),
(450,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,158,qs),
(30,257,ls),
(30,269,o),
(43,269,qs),
(267,269,ls),
(279,269,o),
(279,257,qs),
(279,158,ls),
(279,145,o),
(267,145,qs),
(43,145,ls),
(30,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,496,qs),
(142,567,o),
(252,567,qs),
(347,567,o),
(408,512,qs),
(478,449,o),
(478,339,qs),
(478,244,o),
(424,183,qs),
(361,113,o),
(252,113,qs),
(156,113,o),
(94,167,qs),
(24,230,o),
(24,339,qs),
(24,435,o)
);
},
{
closed = 1;
nodes = (
(225,222,o),
(218,222,qs),
(163,222,ls),
(156,222,o),
(156,230,qs),
(156,454,ls),
(156,462,o),
(163,462,qs),
(259,462,ls),
(304,462,o),
(355,419,o),
(355,381,qs),
(355,328,o),
(312,309,q),
(362,231,ls),
(364,228,o),
(361,222,o),
(358,222,qs),
(299,222,ls),
(288,222,o),
(285,230,q),
(246,297,l),
(225,297,l),
(225,230,ls)
);
},
{
closed = 1;
nodes = (
(359,220,qs),
(408,263,o),
(408,339,qs),
(408,406,o),
(370,449,qs),
(327,498,o),
(252,498,qs),
(186,498,o),
(144,460,qs),
(95,416,o),
(95,339,qs),
(95,273,o),
(133,231,qs),
(176,182,o),
(252,182,qs),
(317,182,o)
);
},
{
closed = 1;
nodes = (
(288,348,o),
(288,381,qs),
(288,412,o),
(250,412,qs),
(225,412,l),
(225,348,l),
(250,348,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 83 values pushed */
25 1 2 9 1 76 5 1 3 2 6 2 3 6 128 0 1 0 7 4 1 7 105 0 4 0 8 9 4 8 105 11 1 9 0 2 3 9 2 103 10 1 6 0 0 6 89 10 1 6 6 0 97 0 0 6 0 81 56 56 41 40 56 62 56 61 59 57 49 47 40 55 41 55 51 56 34 19 38 35 12 9 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 502;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,439,qs),
(0,512,ls),
(0,526,o),
(13,526,qs),
(277,526,ls),
(289,526,o),
(289,512,qs),
(289,439,ls),
(289,427,o),
(277,427,qs),
(13,427,ls),
(0,427,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 289;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,548,qs),
(76,584,o),
(130,584,qs),
(178,584,o),
(209,556,qs),
(245,524,o),
(245,471,qs),
(245,425,o),
(217,395,qs),
(184,358,o),
(130,358,qs),
(83,358,o),
(52,387,qs),
(17,418,o),
(17,471,qs),
(17,517,o)
);
},
{
closed = 1;
nodes = (
(170,452,o),
(170,472,qs),
(170,492,o),
(147,517,o),
(130,517,qs),
(113,517,o),
(91,492,o),
(91,472,qs),
(91,452,o),
(113,426,o),
(130,426,qs),
(147,426,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 17 16 23 21 16 27 17 27 38 35 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 262;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,291,o),
(25,304,qs),
(25,391,ls),
(25,403,o),
(38,403,qs),
(156,403,l),
(156,531,ls),
(156,543,o),
(169,543,qs),
(187,543,ls),
(235,543,o),
(276,505,o),
(276,459,qs),
(276,403,l),
(393,403,ls),
(407,403,o),
(407,391,qs),
(407,304,ls),
(407,291,o),
(393,291,qs),
(276,291,l),
(276,164,ls),
(276,151,o),
(263,151,qs),
(169,151,ls),
(156,151,o),
(156,164,qs),
(156,291,l),
(38,291,ls)
);
},
{
closed = 1;
nodes = (
(25,112,o),
(38,112,qs),
(337,112,ls),
(407,112,o),
(407,46,qs),
(407,13,ls),
(407,0,o),
(393,0,qs),
(38,0,ls),
(25,0,o),
(25,13,qs),
(25,99,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 3 97 0 3 3 39 77 0 7 7 6 95 0 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 0 0 3 97 0 3 3 39 77 0 7 7 6 95 0 6 6 40 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 103 0 7 7 6 95 0 6 6 40 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 39 36 33 30 0 28 0 27 34 51 35 34 50 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,308,o),
(313,269,qs),
(313,228,ls),
(313,217,o),
(302,217,qs),
(43,217,ls),
(32,217,o),
(32,228,qs),
(32,286,o),
(60,327,qs),
(83,361,o),
(136,394,qs),
(174,418,o),
(193,435,o),
(193,448,qs),
(193,473,o),
(158,473,qs),
(125,473,o),
(78,447,q),
(65,438,o),
(60,451,qs),
(40,494,ls),
(25,528,o),
(68,547,qs),
(113,566,o),
(169,566,qs),
(304,566,o),
(304,466,qs),
(304,419,o),
(273,385,qs),
(255,365,o),
(214,339,qs),
(179,318,o),
(176,308,q),
(270,308,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 34 0 33 57 39 39 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,318,qs),
(306,274,o),
(275,244,qs),
(238,209,o),
(172,209,qs),
(112,209,o),
(73,241,qs),
(33,274,o),
(33,322,qs),
(33,338,o),
(46,338,qs),
(53,338,o),
(60,331,qs),
(74,316,o),
(128,297,o),
(153,297,qs),
(204,297,o),
(204,327,qs),
(204,348,o),
(165,348,qs),
(133,348,ls),
(93,348,o),
(93,382,qs),
(93,421,ls),
(93,433,o),
(102,433,qs),
(143,433,ls),
(192,433,o),
(192,457,qs),
(192,479,o),
(152,479,qs),
(122,479,o),
(75,458,q),
(61,450,o),
(56,461,qs),
(41,497,ls),
(26,533,o),
(69,549,qs),
(111,566,o),
(164,566,qs),
(224,566,o),
(294,517,o),
(294,474,qs),
(294,425,o),
(259,398,q),
(306,375,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 58 6 78 36 35 34 51 50 39 36 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,437,o),
(6,441,qs),
(106,532,ls),
(119,543,o),
(136,543,qs),
(251,543,ls),
(258,543,o),
(262,532,o),
(256,528,q),
(150,438,ls),
(136,426,o),
(114,426,qs),
(12,426,ls),
(5,426,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 9 6 0 13 2 13 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 259;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,0,o),
(258,0,qs),
(195,0,ls),
(183,0,o),
(183,12,qs),
(183,222,l),
(115,227,o),
(72,268,qs),
(24,315,o),
(24,391,qs),
(24,461,o),
(63,503,qs),
(112,556,o),
(215,556,qs),
(307,556,ls),
(357,556,o),
(403,509,o),
(403,458,qs),
(403,12,ls),
(403,0,o),
(392,0,qs),
(329,0,ls),
(317,0,o),
(317,12,qs),
(317,484,l),
(270,484,l),
(270,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
20 1 1 0 1 76 0 0 0 2 95 0 2 2 39 77 3 1 1 1 40 1 78 57 52 50 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,359,o),
(97,359,qs),
(130,359,o),
(174,315,o),
(174,281,qs),
(174,248,o),
(130,205,o),
(97,205,qs),
(64,205,o),
(20,248,o),
(20,281,qs),
(20,314,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,-112,q),
(76,-7,ls),
(84,5,o),
(105,5,qs),
(177,5,ls),
(189,5,o),
(184,-7,qs),
(139,-110,ls),
(131,-127,o),
(108,-127,qs),
(15,-127,ls),
(1,-127,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 180;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,428,o),
(35,439,qs),
(35,519,ls),
(35,534,o),
(50,539,qs),
(80,549,ls),
(97,556,o),
(112,556,qs),
(167,556,ls),
(211,556,o),
(211,516,qs),
(211,228,ls),
(211,217,o),
(200,217,qs),
(110,217,ls),
(99,217,o),
(99,228,qs),
(99,449,l),
(48,432,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 55 77 0 0 0 56 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 133 0 0 0 56 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
51 50 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,402,qs),
(241,462,o),
(187,462,qs),
(133,462,o),
(133,402,qs),
(133,341,o),
(186,341,qs),
(241,341,o)
);
},
{
closed = 1;
nodes = (
(55,514,qs),
(102,564,o),
(186,564,qs),
(259,564,o),
(305,526,qs),
(358,481,o),
(358,403,qs),
(358,334,o),
(318,291,qs),
(271,240,o),
(188,240,qs),
(115,240,o),
(68,279,qs),
(15,324,o),
(15,403,qs),
(15,471,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
4 1 0 0 2 0 2 101 0 1 1 3 97 0 3 3 55 1 78 1 0 21 19 13 11 5 3 0 7 1 7 5 10 22 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,353,o),
(213,362,o),
(219,362,qs),
(314,362,ls),
(332,362,o),
(342,349,qs),
(447,214,ls),
(453,205,o),
(453,200,qs),
(453,194,o),
(447,186,qs),
(341,51,ls),
(330,38,o),
(313,38,qs),
(218,38,ls),
(212,38,o),
(208,47,o),
(212,51,q),
(326,200,l),
(213,349,l)
);
},
{
closed = 1;
nodes = (
(22,353,o),
(26,362,o),
(31,362,qs),
(126,362,ls),
(144,362,o),
(154,349,qs),
(259,214,ls),
(266,205,o),
(266,200,qs),
(266,194,o),
(259,186,qs),
(153,51,ls),
(143,38,o),
(125,38,qs),
(30,38,ls),
(24,38,o),
(20,47,o),
(24,51,q),
(138,200,l),
(25,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 2 1 0 1 0 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,428,o),
(35,439,qs),
(35,519,ls),
(35,534,o),
(50,539,qs),
(80,549,ls),
(97,556,o),
(112,556,qs),
(167,556,ls),
(211,556,o),
(211,516,qs),
(211,228,ls),
(211,217,o),
(200,217,qs),
(110,217,ls),
(99,217,o),
(99,228,qs),
(99,449,l),
(48,432,ls)
);
},
{
closed = 1;
nodes = (
(135,13,q),
(426,542,ls),
(433,556,o),
(447,556,qs),
(477,556,ls),
(510,556,o),
(533,513,o),
(516,482,qs),
(259,13,ls),
(252,0,o),
(240,0,qs),
(143,0,ls),
(129,0,o)
);
},
{
closed = 1;
nodes = (
(389,64,o),
(389,75,qs),
(389,127,ls),
(389,138,o),
(396,146,q),
(517,324,ls),
(526,339,o),
(544,339,qs),
(616,339,ls),
(659,339,o),
(659,299,qs),
(659,148,l),
(675,148,ls),
(719,148,o),
(719,108,qs),
(719,74,ls),
(719,64,o),
(709,64,qs),
(659,64,l),
(659,11,ls),
(659,0,o),
(648,0,qs),
(569,0,ls),
(558,0,o),
(558,11,qs),
(558,64,l),
(401,64,ls)
);
},
{
closed = 1;
nodes = (
(558,244,l),
(494,148,l),
(558,148,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
0 1 7 1 60 1 0 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 0 1 7 0 128 4 10 2 2 5 5 2 113 3 1 1 0 0 6 1 0 103 12 9 2 6 5 5 6 89 12 9 2 6 6 5 98 11 8 2 5 6 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 0 1 7 0 128 4 10 2 2 5 2 134 3 1 1 0 0 6 1 0 103 12 9 2 6 5 5 6 89 12 9 2 6 6 5 98 11 8 2 5 6 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
59 59 32 32 21 19 59 61 59 61 32 58 32 57 51 48 46 44 41 39 37 34 28 25 19 31 21 31 51 50 13 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 752;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(733,92,o),
(733,53,qs),
(733,11,ls),
(733,0,o),
(722,0,qs),
(462,0,ls),
(452,0,o),
(452,11,qs),
(452,69,o),
(480,111,qs),
(503,144,o),
(557,177,qs),
(595,201,o),
(613,218,o),
(613,231,qs),
(613,258,o),
(578,258,qs),
(543,258,o),
(497,230,qs),
(484,222,o),
(479,234,qs),
(459,278,ls),
(446,311,o),
(487,329,qs),
(533,349,o),
(589,349,qs),
(654,349,o),
(724,298,o),
(724,250,qs),
(724,203,o),
(693,168,qs),
(675,148,o),
(634,122,qs),
(599,101,o),
(596,92,q),
(689,92,ls)
);
},
{
closed = 1;
nodes = (
(35,428,o),
(35,439,qs),
(35,519,ls),
(35,534,o),
(50,539,qs),
(80,549,ls),
(97,556,o),
(112,556,qs),
(167,556,ls),
(211,556,o),
(211,516,qs),
(211,228,ls),
(211,217,o),
(200,217,qs),
(110,217,ls),
(99,217,o),
(99,228,qs),
(99,449,l),
(48,432,ls)
);
},
{
closed = 1;
nodes = (
(135,13,q),
(426,542,ls),
(433,556,o),
(447,556,qs),
(477,556,ls),
(510,556,o),
(533,513,o),
(516,482,qs),
(259,13,ls),
(252,0,o),
(240,0,qs),
(143,0,ls),
(129,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 67 values pushed */
36 1 0 5 1 76 0 0 0 1 4 0 1 105 7 1 5 0 4 3 5 4 103 8 1 3 2 2 3 87 8 1 3 3 2 96 9 6 2 2 3 2 80 57 55 0 0 64 61 55 67 57 67 47 44 41 38 0 35 0 34 57 39 40 10 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 785;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,318,qs),
(306,274,o),
(275,244,qs),
(238,209,o),
(172,209,qs),
(112,209,o),
(73,241,qs),
(33,274,o),
(33,322,qs),
(33,338,o),
(46,338,qs),
(53,338,o),
(60,331,qs),
(74,316,o),
(128,297,o),
(153,297,qs),
(204,297,o),
(204,327,qs),
(204,348,o),
(165,348,qs),
(133,348,ls),
(93,348,o),
(93,382,qs),
(93,421,ls),
(93,433,o),
(102,433,qs),
(143,433,ls),
(192,433,o),
(192,457,qs),
(192,479,o),
(152,479,qs),
(122,479,o),
(75,458,q),
(61,450,o),
(56,461,qs),
(41,497,ls),
(26,533,o),
(69,549,qs),
(112,566,o),
(164,566,qs),
(224,566,o),
(294,517,o),
(294,474,qs),
(294,425,o),
(259,398,q),
(306,375,o)
);
},
{
closed = 1;
nodes = (
(194,13,q),
(484,542,ls),
(491,556,o),
(504,556,qs),
(537,556,ls),
(570,556,o),
(591,513,o),
(574,482,qs),
(318,13,ls),
(311,0,o),
(298,0,qs),
(202,0,ls),
(188,0,o)
);
},
{
closed = 1;
nodes = (
(449,64,o),
(449,75,qs),
(449,127,ls),
(449,137,o),
(455,146,qs),
(575,324,l),
(587,339,o),
(603,339,qs),
(674,339,ls),
(718,339,o),
(718,299,qs),
(718,148,l),
(734,148,ls),
(778,148,o),
(778,108,qs),
(778,74,ls),
(778,64,o),
(768,64,qs),
(718,64,l),
(718,11,ls),
(718,0,o),
(707,0,qs),
(628,0,ls),
(618,0,o),
(618,11,qs),
(618,64,l),
(459,64,ls)
);
},
{
closed = 1;
nodes = (
(618,244,l),
(554,148,l),
(618,148,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
87 1 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
12 1 5 3 4 3 5 4 128 9 15 2 7 10 10 7 113 8 1 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 11 4 6 105 17 14 2 11 10 10 11 89 17 14 2 11 11 10 98 16 13 2 10 11 10 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
12 1 5 3 4 3 5 4 128 9 15 2 7 10 7 134 8 1 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 11 4 6 105 17 14 2 11 10 10 11 89 17 14 2 11 11 10 98 16 13 2 10 11 10 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 8 0 1 0 8 1 128 12 1 5 3 4 3 5 4 128 9 15 2 7 10 7 134 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 11 4 6 105 17 14 2 11 10 10 11 89 17 14 2 11 11 10 98 16 13 2 10 11 10 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
86 86 59 59 48 46 86 88 86 88 59 85 59 84 78 75 73 71 68 66 64 61 55 52 46 58 48 58 36 35 34 51 50 39 36 18 9 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 804;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,285,o),
(140,319,qs),
(140,353,o),
(183,397,o),
(217,397,qs),
(250,397,o),
(295,353,o),
(295,319,qs),
(295,286,o),
(250,242,o),
(217,242,qs),
(183,242,o)
);
},
{
closed = 1;
nodes = (
(42,66,qs),
(66,97,o),
(148,158,qs),
(162,167,o),
(162,181,qs),
(162,195,ls),
(162,217,o),
(185,217,qs),
(208,217,ls),
(236,217,o),
(276,181,o),
(276,156,qs),
(276,116,o),
(218,73,qs),
(173,39,o),
(148,8,o),
(148,-14,qs),
(148,-62,o),
(208,-62,qs),
(268,-62,o),
(340,-26,qs),
(348,-22,o),
(353,-22,qs),
(360,-22,o),
(363,-31,qs),
(391,-111,ls),
(396,-127,o),
(382,-135,qs),
(294,-183,o),
(205,-183,qs),
(124,-183,o),
(73,-150,qs),
(9,-110,o),
(9,-34,qs),
(9,24,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 6 1 0 0 1 97 0 1 1 48 77 0 4 4 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 39 36 28 26 23 22 17 15 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(124,702,o),
(131,702,qs),
(246,702,ls),
(263,702,o),
(276,691,qs),
(376,600,ls),
(381,596,o),
(376,585,o),
(370,585,qs),
(268,585,ls),
(246,585,o),
(232,597,qs),
(126,687,l),
(120,691,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
1 1 0 3 1 76 0 6 0 5 3 6 5 103 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(153,596,o),
(158,600,qs),
(258,691,ls),
(271,702,o),
(288,702,qs),
(403,702,ls),
(410,702,o),
(413,691,o),
(408,687,qs),
(302,597,ls),
(288,585,o),
(266,585,qs),
(163,585,ls),
(157,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
1 1 0 3 1 76 0 6 8 1 5 3 6 5 103 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 26 24 0 0 33 30 24 37 26 37 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(227,585,o),
(206,585,qs),
(116,585,ls),
(110,585,o),
(105,596,o),
(109,600,qs),
(196,691,ls),
(206,702,o),
(226,702,qs),
(327,702,ls),
(346,702,o),
(357,691,qs),
(443,600,l),
(448,596,o),
(443,585,o),
(437,585,qs),
(347,585,ls),
(326,585,o),
(313,599,qs),
(277,642,l),
(239,599,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
1 1 0 3 1 76 0 6 7 1 5 3 6 5 103 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 43 40 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(104,594,qs),
(106,645,o),
(153,706,o),
(191,706,qs),
(220,706,o),
(264,690,qs),
(300,677,o),
(311,677,qs),
(326,677,o),
(333,697,qs),
(336,709,o),
(346,709,qs),
(402,709,ls),
(415,709,o),
(413,696,qs),
(402,587,o),
(326,587,qs),
(302,587,o),
(256,601,qs),
(218,613,o),
(211,613,qs),
(194,613,o),
(191,593,qs),
(189,581,o),
(178,581,qs),
(116,581,ls),
(104,581,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 9 8 6 8 9 114 0 6 5 5 6 112 10 1 8 7 12 2 5 3 8 5 105 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 8 6 8 9 6 128 0 6 7 8 6 7 126 0 7 5 8 7 89 10 1 8 12 1 5 3 8 5 103 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
26 24 0 0 47 45 43 41 39 36 34 32 30 28 24 50 26 50 22 19 16 13 9 6 4 3 0 2 0 2 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(152,714,o),
(182,714,qs),
(212,714,o),
(254,672,o),
(254,643,qs),
(254,613,o),
(212,571,o),
(182,571,qs),
(152,571,o),
(111,613,o),
(111,643,qs),
(111,673,o)
);
},
{
closed = 1;
nodes = (
(323,714,o),
(353,714,qs),
(383,714,o),
(424,673,o),
(424,643,qs),
(424,613,o),
(383,571,o),
(353,571,qs),
(323,571,o),
(282,613,o),
(282,643,qs),
(282,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 46 44 40 38 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,384,l),
(221,241,l),
(317,241,l)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(129,0,qs),
(16,0,ls),
(3,0,o),
(7,13,qs),
(193,544,ls),
(197,556,o),
(208,556,qs),
(267,556,ls),
(310,556,o),
(356,518,o),
(374,466,qs),
(537,13,l),
(540,0,o),
(527,0,qs),
(412,0,ls),
(398,0,o),
(392,13,q),
(354,125,l),
(182,125,l),
(144,13,ls)
);
},
{
closed = 1;
nodes = (
(229,753,o),
(268,753,qs),
(306,753,o),
(360,700,o),
(360,663,qs),
(360,625,o),
(306,571,o),
(268,571,qs),
(229,571,o),
(174,624,o),
(174,663,qs),
(174,700,o)
);
},
{
closed = 1;
nodes = (
(297,650,o),
(297,663,qs),
(297,674,o),
(279,692,o),
(268,692,qs),
(256,692,o),
(238,675,o),
(238,663,qs),
(238,650,o),
(255,632,o),
(268,632,qs),
(279,632,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
1 1 0 3 1 76 0 6 0 8 7 6 8 105 10 1 7 0 5 3 7 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 37 36 0 0 43 41 36 47 37 47 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,0,o),
(136,0,qs),
(16,0,ls),
(1,0,o),
(8,13,qs),
(292,542,ls),
(300,556,o),
(315,556,qs),
(657,556,ls),
(727,556,o),
(727,488,qs),
(727,448,ls),
(727,431,o),
(711,431,qs),
(509,431,l),
(509,344,l),
(639,344,ls),
(708,344,o),
(708,277,qs),
(708,238,ls),
(708,221,o),
(692,221,qs),
(509,221,l),
(509,125,l),
(665,125,ls),
(735,125,o),
(735,59,qs),
(735,17,ls),
(735,0,o),
(719,0,qs),
(387,0,ls),
(374,0,o),
(374,13,qs),
(374,118,l),
(211,118,l),
(157,13,ls)
);
},
{
closed = 1;
nodes = (
(374,432,l),
(272,234,l),
(374,234,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
37 1 5 6 1 76 0 4 0 3 2 4 3 103 9 1 8 0 0 1 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 95 7 1 1 1 40 1 78 36 36 36 38 36 38 51 51 33 35 33 35 50 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,-127,o),
(265,-127,qs),
(171,-127,ls),
(157,-127,o),
(165,-112,q),
(235,-3,l),
(149,14,o),
(96,78,qs),
(34,154,o),
(34,276,qs),
(34,401,o),
(101,479,qs),
(176,566,o),
(305,566,qs),
(387,566,o),
(440,543,qs),
(498,518,o),
(482,457,qs),
(471,413,ls),
(467,401,o),
(458,401,qs),
(453,401,o),
(436,408,q),
(375,439,o),
(309,439,qs),
(251,439,o),
(216,405,qs),
(173,363,o),
(173,276,qs),
(173,204,o),
(209,162,qs),
(248,118,o),
(318,118,qs),
(397,118,o),
(461,177,qs),
(462,178,ls),
(472,186,o),
(478,186,qs),
(497,186,o),
(497,159,qs),
(497,114,o),
(468,72,qs),
(425,9,o),
(341,-5,q),
(295,-110,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 2 3 4 2 105 0 1 5 5 1 89 0 1 1 5 95 0 5 1 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 37 34 38 36 21 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,125,o),
(407,59,qs),
(407,17,ls),
(407,0,o),
(391,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(329,556,ls),
(399,556,o),
(399,489,qs),
(399,447,ls),
(399,430,o),
(383,430,qs),
(182,430,l),
(182,344,l),
(310,344,ls),
(380,344,o),
(380,277,qs),
(380,237,ls),
(380,221,o),
(364,221,qs),
(182,221,l),
(182,125,l),
(337,125,ls)
);
},
{
closed = 1;
nodes = (
(59,702,o),
(65,702,qs),
(181,702,ls),
(198,702,o),
(210,691,qs),
(311,600,ls),
(316,596,o),
(311,585,o),
(305,585,qs),
(203,585,ls),
(181,585,o),
(167,597,qs),
(60,687,ls),
(55,691,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 7 0 6 3 7 6 103 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 39 37 32 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,125,o),
(407,59,qs),
(407,17,ls),
(407,0,o),
(391,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(329,556,ls),
(399,556,o),
(399,489,qs),
(399,447,ls),
(399,430,o),
(383,430,qs),
(182,430,l),
(182,344,l),
(310,344,ls),
(380,344,o),
(380,277,qs),
(380,237,ls),
(380,221,o),
(364,221,qs),
(182,221,l),
(182,125,l),
(337,125,ls)
);
},
{
closed = 1;
nodes = (
(107,596,o),
(112,600,qs),
(212,691,ls),
(225,702,o),
(242,702,qs),
(357,702,ls),
(363,702,o),
(367,691,o),
(362,687,qs),
(255,597,ls),
(242,585,o),
(220,585,qs),
(117,585,ls),
(111,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 7 9 1 6 3 7 6 103 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 30 28 0 0 37 34 28 41 30 41 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,125,o),
(409,59,qs),
(409,17,ls),
(409,0,o),
(393,0,qs),
(61,0,ls),
(48,0,o),
(48,13,qs),
(48,542,ls),
(48,556,o),
(61,556,qs),
(331,556,ls),
(401,556,o),
(401,489,qs),
(401,447,ls),
(401,430,o),
(385,430,qs),
(183,430,l),
(183,344,l),
(312,344,ls),
(382,344,o),
(382,277,qs),
(382,237,ls),
(382,221,o),
(366,221,qs),
(183,221,l),
(183,125,l),
(339,125,ls)
);
},
{
closed = 1;
nodes = (
(168,585,o),
(147,585,qs),
(56,585,ls),
(50,585,o),
(46,596,o),
(50,600,qs),
(137,691,ls),
(147,702,o),
(166,702,qs),
(268,702,ls),
(286,702,o),
(297,691,qs),
(384,600,ls),
(388,596,o),
(384,585,o),
(378,585,qs),
(288,585,ls),
(266,585,o),
(254,599,qs),
(217,642,l),
(180,599,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 7 8 1 6 3 7 6 103 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 47 44 40 37 32 30 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,125,o),
(407,59,qs),
(407,17,ls),
(407,0,o),
(391,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(329,556,ls),
(399,556,o),
(399,489,qs),
(399,447,ls),
(399,430,o),
(383,430,qs),
(182,430,l),
(182,344,l),
(310,344,ls),
(380,344,o),
(380,277,qs),
(380,237,ls),
(380,221,o),
(364,221,qs),
(182,221,l),
(182,125,l),
(337,125,ls)
);
},
{
closed = 1;
nodes = (
(106,714,o),
(136,714,qs),
(166,714,o),
(208,672,o),
(208,643,qs),
(208,613,o),
(166,571,o),
(136,571,qs),
(106,571,o),
(64,613,o),
(64,643,qs),
(64,673,o)
);
},
{
closed = 1;
nodes = (
(277,714,o),
(307,714,qs),
(336,714,o),
(378,673,o),
(378,643,qs),
(378,613,o),
(337,571,o),
(307,571,qs),
(277,571,o),
(235,613,o),
(235,643,qs),
(235,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 50 48 44 42 38 36 32 30 0 27 0 26 51 51 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,556,o),
(64,556,qs),
(92,556,ls),
(142,556,o),
(187,508,o),
(187,455,qs),
(187,13,ls),
(187,0,o),
(173,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,542,ls)
);
},
{
closed = 1;
nodes = (
(-15,702,o),
(-8,702,qs),
(107,702,ls),
(124,702,o),
(137,691,qs),
(237,600,ls),
(242,596,o),
(238,585,o),
(231,585,qs),
(129,585,ls),
(107,585,o),
(93,597,qs),
(-13,687,ls),
(-18,691,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 3 0 2 1 3 2 103 0 1 1 39 77 0 0 0 40 0 78 52 52 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,556,o),
(53,556,qs),
(80,556,ls),
(130,556,o),
(175,508,o),
(175,455,qs),
(175,13,ls),
(175,0,o),
(162,0,qs),
(53,0,ls),
(39,0,o),
(39,13,qs),
(39,542,ls)
);
},
{
closed = 1;
nodes = (
(-18,596,o),
(-13,600,qs),
(87,691,ls),
(100,702,o),
(117,702,qs),
(232,702,ls),
(239,702,o),
(243,691,o),
(237,687,q),
(131,597,ls),
(117,585,o),
(95,585,qs),
(-7,585,ls),
(-14,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 39 77 0 0 0 40 0 78 15 13 22 19 13 26 15 26 52 49 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,556,o),
(55,556,qs),
(83,556,ls),
(132,556,o),
(177,508,o),
(177,455,qs),
(177,13,ls),
(177,0,o),
(164,0,qs),
(55,0,ls),
(42,0,o),
(42,13,qs),
(42,542,ls)
);
},
{
closed = 1;
nodes = (
(63,585,o),
(42,585,qs),
(-49,585,ls),
(-55,585,o),
(-59,596,o),
(-55,600,qs),
(32,691,ls),
(42,702,o),
(61,702,qs),
(163,702,ls),
(181,702,o),
(192,691,qs),
(279,600,ls),
(283,596,o),
(279,585,o),
(273,585,qs),
(183,585,ls),
(161,585,o),
(149,599,qs),
(112,642,l),
(75,599,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 39 77 0 0 0 40 0 78 52 53 36 52 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,556,o),
(59,556,qs),
(87,556,ls),
(136,556,o),
(181,508,o),
(181,455,qs),
(181,13,ls),
(181,0,o),
(168,0,qs),
(59,0,ls),
(45,0,o),
(45,13,qs),
(45,542,ls)
);
},
{
closed = 1;
nodes = (
(-2,714,o),
(28,714,qs),
(57,714,o),
(99,672,o),
(99,643,qs),
(99,613,o),
(57,571,o),
(28,571,qs),
(-2,571,o),
(-44,613,o),
(-44,643,qs),
(-44,673,o)
);
},
{
closed = 1;
nodes = (
(169,714,o),
(198,714,qs),
(228,714,o),
(270,673,o),
(270,643,qs),
(270,613,o),
(228,571,o),
(198,571,qs),
(169,571,o),
(127,613,o),
(127,643,qs),
(127,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 0 0 0 40 0 78 36 36 36 36 52 49 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 227;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,222,o),
(15,235,qs),
(15,332,ls),
(15,344,o),
(28,344,qs),
(80,344,l),
(80,542,ls),
(80,556,o),
(92,556,qs),
(264,556,ls),
(383,556,o),
(455,509,qs),
(557,443,o),
(557,288,qs),
(557,153,o),
(486,80,qs),
(409,0,o),
(258,0,qs),
(92,0,ls),
(80,0,o),
(80,13,qs),
(80,222,l),
(28,222,ls)
);
},
{
closed = 1;
nodes = (
(335,125,o),
(373,160,qs),
(418,201,o),
(418,284,qs),
(418,358,o),
(382,394,qs),
(346,431,o),
(264,431,qs),
(215,431,l),
(215,344,l),
(272,344,ls),
(341,344,o),
(341,278,qs),
(341,239,ls),
(341,222,o),
(324,222,qs),
(215,222,l),
(215,125,l),
(269,125,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 2 4 8 2 3 7 2 3 105 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 23 23 0 0 23 41 23 40 34 32 31 29 26 24 0 22 0 21 34 54 50 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(111,556,ls),
(147,556,o),
(190,531,o),
(209,500,qs),
(357,261,l),
(357,542,ls),
(357,556,o),
(370,556,qs),
(398,556,ls),
(447,556,o),
(492,508,o),
(492,455,qs),
(492,13,ls),
(492,0,o),
(479,0,qs),
(385,0,ls),
(364,0,o),
(354,18,qs),
(182,297,l),
(182,13,ls)
);
},
{
closed = 1;
nodes = (
(117,594,qs),
(119,645,o),
(166,706,o),
(203,706,qs),
(232,706,o),
(276,690,qs),
(312,677,o),
(323,677,qs),
(338,677,o),
(345,697,qs),
(348,709,o),
(358,709,qs),
(414,709,ls),
(427,709,o),
(425,696,qs),
(414,587,o),
(338,587,qs),
(314,587,o),
(268,601,qs),
(230,613,o),
(223,613,qs),
(206,613,o),
(203,593,qs),
(202,581,o),
(190,581,qs),
(128,581,ls),
(117,581,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
14 0 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 7 5 7 8 114 0 5 4 4 5 112 9 1 7 6 10 2 4 1 7 4 105 2 1 1 1 39 77 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 6 4 7 6 89 9 1 7 10 1 4 1 7 4 103 2 1 1 1 39 77 3 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
30 28 51 49 47 45 43 40 38 36 34 32 28 54 30 54 51 53 52 50 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
},
{
closed = 1;
nodes = (
(161,702,o),
(168,702,qs),
(283,702,ls),
(300,702,o),
(313,691,qs),
(413,600,ls),
(418,596,o),
(414,585,o),
(407,585,qs),
(305,585,ls),
(283,585,o),
(270,597,qs),
(163,687,ls),
(158,691,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 0 4 3 5 4 103 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 4 3 5 4 103 0 3 0 1 0 3 1 105 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
9 8 1 0 36 33 29 26 17 15 8 23 9 23 5 3 0 7 1 7 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
},
{
closed = 1;
nodes = (
(190,596,o),
(195,600,qs),
(295,691,ls),
(308,702,o),
(325,702,qs),
(440,702,ls),
(447,702,o),
(451,691,o),
(445,687,q),
(339,597,ls),
(325,585,o),
(303,585,qs),
(201,585,ls),
(194,585,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 8 1 4 3 5 4 103 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 8 1 4 3 5 4 103 0 3 0 1 0 3 1 105 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
26 24 9 8 1 0 33 30 24 37 26 37 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
},
{
closed = 1;
nodes = (
(258,585,o),
(237,585,qs),
(147,585,ls),
(141,585,o),
(136,596,o),
(141,600,q),
(227,691,ls),
(238,702,o),
(257,702,qs),
(358,702,ls),
(377,702,o),
(388,691,qs),
(475,600,ls),
(479,596,o),
(474,585,o),
(468,585,qs),
(378,585,ls),
(357,585,o),
(345,599,qs),
(308,642,l),
(271,599,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 1 4 3 5 4 103 0 1 1 3 97 0 3 3 39 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 6 1 4 3 5 4 103 0 3 0 1 0 3 1 105 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
9 8 1 0 43 40 36 33 28 26 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
},
{
closed = 1;
nodes = (
(146,594,qs),
(148,645,o),
(195,706,o),
(233,706,qs),
(262,706,o),
(306,690,qs),
(342,677,o),
(353,677,qs),
(368,677,o),
(375,697,qs),
(378,709,o),
(388,709,qs),
(444,709,ls),
(457,709,o),
(455,696,qs),
(444,587,o),
(368,587,qs),
(344,587,o),
(297,601,qs),
(260,613,o),
(252,613,qs),
(236,613,o),
(233,593,qs),
(231,581,o),
(220,581,qs),
(157,581,ls),
(146,581,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 8 7 5 7 8 114 0 5 4 4 5 112 9 1 7 6 12 2 4 3 7 4 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 6 4 7 6 89 9 1 7 12 1 4 3 7 4 103 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 6 4 7 6 89 9 1 7 12 1 4 3 7 4 103 0 3 0 1 0 3 1 105 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
26 24 9 8 1 0 47 45 43 41 39 36 34 32 30 28 24 50 26 50 17 15 8 23 9 23 5 3 0 7 1 7 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,277,qs),
(434,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(434,118,o)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,153,o),
(511,78,qs),
(440,-9,o),
(303,-9,qs),
(184,-9,o)
);
},
{
closed = 1;
nodes = (
(193,714,o),
(222,714,qs),
(252,714,o),
(294,672,o),
(294,643,qs),
(294,613,o),
(252,571,o),
(222,571,qs),
(192,571,o),
(151,613,o),
(151,643,qs),
(151,673,o)
);
},
{
closed = 1;
nodes = (
(363,714,o),
(393,714,qs),
(423,714,o),
(465,673,o),
(465,643,qs),
(465,613,o),
(423,571,o),
(393,571,qs),
(363,571,o),
(322,613,o),
(322,643,qs),
(322,673,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 39 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 3 5 4 105 0 3 0 1 0 3 1 105 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
9 8 1 0 46 44 40 38 34 32 28 26 17 15 8 23 9 23 5 3 0 7 1 7 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,389,o),
(37,398,qs),
(43,404,ls),
(78,439,o),
(132,441,o),
(164,408,qs),
(221,352,l),
(315,447,ls),
(324,456,o),
(334,447,qs),
(391,389,ls),
(400,381,o),
(391,372,qs),
(296,276,l),
(402,171,ls),
(412,161,o),
(402,152,qs),
(397,147,ls),
(362,112,o),
(307,110,o),
(275,143,qs),
(219,200,l),
(123,104,ls),
(114,95,o),
(105,104,qs),
(49,161,ls),
(40,170,o),
(49,180,qs),
(143,274,l),
(37,381,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
22 15 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 30 25 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,233,o),
(185,195,q),
(337,437,l)
);
},
{
closed = 1;
nodes = (
(284,118,o),
(303,118,qs),
(435,118,o),
(435,277,qs),
(435,326,o),
(423,359,q),
(271,121,l)
);
},
{
closed = 1;
nodes = (
(113,58,qs),
(34,134,o),
(34,277,qs),
(34,402,o),
(96,478,qs),
(168,566,o),
(303,566,qs),
(421,566,o),
(492,498,qs),
(572,420,o),
(572,277,qs),
(572,152,o),
(511,78,qs),
(439,-9,o),
(303,-9,qs),
(184,-9,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
13 6 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
15 14 23 21 14 29 15 29 37 35 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,556,o),
(56,556,qs),
(84,556,ls),
(133,556,o),
(178,508,o),
(178,455,qs),
(178,233,ls),
(178,117,o),
(262,117,qs),
(351,117,o),
(351,232,qs),
(351,542,ls),
(351,556,o),
(364,556,qs),
(392,556,ls),
(441,556,o),
(486,508,o),
(486,455,qs),
(486,211,ls),
(486,137,o),
(454,83,qs),
(399,-9,o),
(262,-9,qs),
(142,-9,o),
(86,65,qs),
(43,122,o),
(43,211,qs),
(43,542,ls)
);
},
{
closed = 1;
nodes = (
(111,702,o),
(118,702,qs),
(234,702,ls),
(251,702,o),
(263,691,qs),
(364,600,ls),
(368,596,o),
(364,585,o),
(357,585,qs),
(255,585,ls),
(233,585,o),
(220,597,qs),
(113,687,ls),
(108,691,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 5 0 4 1 5 4 103 3 1 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 52 52 52 35 54 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,556,o),
(56,556,qs),
(84,556,ls),
(133,556,o),
(178,508,o),
(178,455,qs),
(178,233,ls),
(178,117,o),
(262,117,qs),
(351,117,o),
(351,232,qs),
(351,542,ls),
(351,556,o),
(364,556,qs),
(392,556,ls),
(441,556,o),
(486,508,o),
(486,455,qs),
(486,211,ls),
(486,137,o),
(454,83,qs),
(399,-9,o),
(262,-9,qs),
(142,-9,o),
(86,65,qs),
(43,122,o),
(43,211,qs),
(43,542,ls)
);
},
{
closed = 1;
nodes = (
(141,596,o),
(146,600,qs),
(246,691,ls),
(259,702,o),
(276,702,qs),
(391,702,ls),
(398,702,o),
(401,691,o),
(396,687,qs),
(290,597,ls),
(276,585,o),
(254,585,qs),
(151,585,ls),
(145,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 5 6 1 4 1 5 4 103 3 1 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 30 28 37 34 28 41 30 41 52 35 54 35 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,556,o),
(56,556,qs),
(84,556,ls),
(133,556,o),
(178,508,o),
(178,455,qs),
(178,233,ls),
(178,117,o),
(262,117,qs),
(351,117,o),
(351,232,qs),
(351,542,ls),
(351,556,o),
(364,556,qs),
(392,556,ls),
(441,556,o),
(486,508,o),
(486,455,qs),
(486,211,ls),
(486,137,o),
(454,83,qs),
(399,-9,o),
(262,-9,qs),
(142,-9,o),
(86,65,qs),
(43,122,o),
(43,211,qs),
(43,542,ls)
);
},
{
closed = 1;
nodes = (
(217,585,o),
(196,585,qs),
(106,585,ls),
(100,585,o),
(95,596,o),
(100,600,q),
(186,691,ls),
(197,702,o),
(216,702,qs),
(317,702,ls),
(336,702,o),
(347,691,qs),
(434,600,ls),
(438,596,o),
(433,585,o),
(427,585,qs),
(337,585,ls),
(316,585,o),
(304,599,qs),
(267,642,l),
(230,599,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 5 6 1 4 1 5 4 103 3 1 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 52 53 36 52 35 54 35 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,556,o),
(56,556,qs),
(84,556,ls),
(133,556,o),
(178,508,o),
(178,455,qs),
(178,233,ls),
(178,117,o),
(262,117,qs),
(351,117,o),
(351,232,qs),
(351,542,ls),
(351,556,o),
(364,556,qs),
(392,556,ls),
(441,556,o),
(486,508,o),
(486,455,qs),
(486,211,ls),
(486,137,o),
(454,83,qs),
(399,-9,o),
(262,-9,qs),
(142,-9,o),
(86,65,qs),
(43,122,o),
(43,211,qs),
(43,542,ls)
);
},
{
closed = 1;
nodes = (
(147,714,o),
(177,714,qs),
(206,714,o),
(249,672,o),
(249,643,qs),
(249,613,o),
(207,571,o),
(177,571,qs),
(147,571,o),
(105,613,o),
(105,643,qs),
(105,673,o)
);
},
{
closed = 1;
nodes = (
(318,714,o),
(347,714,qs),
(377,714,o),
(419,673,o),
(419,643,qs),
(419,613,o),
(377,571,o),
(347,571,qs),
(318,571,o),
(276,613,o),
(276,643,qs),
(276,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 36 36 36 36 52 35 54 35 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,556,o),
(10,556,qs),
(80,556,ls),
(148,556,o),
(179,495,qs),
(255,346,l),
(353,542,ls),
(360,556,o),
(373,556,qs),
(491,556,ls),
(505,556,o),
(499,542,q),
(317,199,l),
(317,13,ls),
(317,0,o),
(304,0,qs),
(195,0,ls),
(182,0,o),
(182,13,qs),
(182,203,l),
(2,542,l)
);
},
{
closed = 1;
nodes = (
(141,596,o),
(146,600,qs),
(246,691,ls),
(259,702,o),
(276,702,qs),
(391,702,ls),
(398,702,o),
(402,691,o),
(396,687,q),
(290,597,ls),
(276,585,o),
(255,585,qs),
(152,585,ls),
(145,585,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
14 7 0 3 0 1 1 76 0 4 5 1 3 1 4 3 103 2 1 1 1 39 77 0 0 0 40 0 78 23 21 30 27 21 34 23 34 52 52 50 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,0,o),
(168,0,qs),
(59,0,ls),
(46,0,o),
(46,13,qs),
(46,542,ls),
(46,556,o),
(59,556,qs),
(87,556,ls),
(134,556,o),
(178,512,o),
(180,464,q),
(258,464,ls),
(472,464,o),
(472,281,qs),
(472,203,o),
(425,150,qs),
(369,88,o),
(273,88,qs),
(180,88,l),
(180,13,ls)
);
},
{
closed = 1;
nodes = (
(338,213,o),
(338,278,qs),
(338,339,o),
(267,339,qs),
(180,339,l),
(180,213,l),
(267,213,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 103 6 1 5 0 0 3 5 0 103 0 2 2 39 77 0 3 3 40 3 78 21 21 21 27 21 26 35 51 50 36 32 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,13,qs),
(36,399,ls),
(36,472,o),
(83,516,qs),
(136,566,o),
(229,566,qs),
(316,566,o),
(362,526,qs),
(402,491,o),
(402,443,qs),
(402,409,o),
(367,363,qs),
(339,325,o),
(339,314,qs),
(339,295,o),
(376,272,qs),
(429,239,o),
(445,223,qs),
(482,185,o),
(482,131,qs),
(482,74,o),
(451,37,qs),
(412,-10,o),
(335,-10,qs),
(275,-10,o),
(235,26,qs),
(193,64,o),
(193,118,qs),
(193,140,o),
(208,140,qs),
(213,140,o),
(218,135,qs),
(259,95,o),
(307,95,qs),
(340,95,o),
(340,124,qs),
(340,143,o),
(296,168,qs),
(250,195,o),
(215,243,o),
(215,279,qs),
(215,307,o),
(246,347,qs),
(272,381,o),
(284,402,o),
(284,416,qs),
(284,435,o),
(255,458,o),
(230,458,qs),
(169,458,o),
(169,386,qs),
(169,13,ls),
(169,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 0 2 2 0 97 4 6 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 1 2 1 3 2 128 0 5 0 1 3 5 1 105 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 50 48 32 30 26 24 22 20 7 5 0 55 2 55 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(87,543,o),
(94,543,qs),
(210,543,ls),
(227,543,o),
(239,532,qs),
(340,441,ls),
(344,437,o),
(340,426,o),
(333,426,qs),
(231,426,ls),
(209,426,o),
(196,438,qs),
(89,528,ls),
(84,532,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 6 7 95 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 6 2 7 6 103 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 47 44 40 37 31 29 24 34 25 34 38 34 51 50 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(126,437,o),
(131,441,qs),
(231,532,ls),
(244,543,o),
(261,543,qs),
(376,543,ls),
(383,543,o),
(387,532,o),
(381,528,q),
(275,438,ls),
(261,426,o),
(240,426,qs),
(137,426,ls),
(130,426,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
9 1 6 6 7 95 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
9 1 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 9 1 6 2 7 6 103 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
37 35 25 24 44 41 35 48 37 48 31 29 24 34 25 34 38 34 51 50 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(191,426,o),
(170,426,qs),
(79,426,ls),
(73,426,o),
(69,437,o),
(73,441,qs),
(160,532,ls),
(170,543,o),
(189,543,qs),
(291,543,ls),
(309,543,o),
(320,532,qs),
(407,441,ls),
(411,437,o),
(407,426,o),
(401,426,qs),
(311,426,ls),
(289,426,o),
(277,440,qs),
(240,483,l),
(203,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 9 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 9 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 8 1 6 2 7 6 103 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 24 54 51 47 44 39 37 31 29 24 34 25 34 38 34 51 50 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(86,435,qs),
(88,486,o),
(135,547,o),
(173,547,qs),
(202,547,o),
(246,531,qs),
(282,518,o),
(293,518,qs),
(308,518,o),
(315,538,qs),
(318,551,o),
(328,551,qs),
(384,551,ls),
(397,551,o),
(395,537,qs),
(384,428,o),
(308,428,qs),
(284,428,o),
(237,442,qs),
(200,454,o),
(192,454,qs),
(176,454,o),
(173,434,qs),
(171,422,o),
(160,422,qs),
(97,422,ls),
(86,422,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 10 9 7 9 10 114 0 7 6 6 7 112 8 13 2 6 6 9 98 11 1 9 9 39 77 0 5 5 1 97 2 1 1 1 42 77 12 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 9 7 9 10 114 0 7 6 6 7 112 8 13 2 6 6 9 98 11 1 9 9 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 12 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 10 9 7 9 10 114 0 7 6 6 7 112 8 13 2 6 6 9 98 11 1 9 9 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 9 7 9 10 7 128 0 7 6 6 7 112 8 13 2 6 6 9 98 11 1 9 9 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 10 9 7 9 10 7 128 0 7 8 9 7 8 126 0 8 8 9 97 11 1 9 9 39 77 13 1 6 6 9 98 11 1 9 9 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 10 11 7 11 10 7 128 0 7 8 11 7 8 126 0 11 13 1 6 2 11 6 103 0 8 8 9 97 0 9 9 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
37 35 25 24 58 56 54 52 50 47 45 43 41 39 35 61 37 61 31 29 24 34 25 34 38 34 51 50 14 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(119,556,o),
(148,556,qs),
(178,556,o),
(220,513,o),
(220,484,qs),
(220,454,o),
(178,412,o),
(148,412,qs),
(118,412,o),
(77,454,o),
(77,484,qs),
(77,514,o)
);
},
{
closed = 1;
nodes = (
(289,556,o),
(319,556,qs),
(349,556,o),
(391,514,o),
(391,484,qs),
(391,454,o),
(349,412,o),
(319,412,qs),
(289,412,o),
(248,454,o),
(248,484,qs),
(248,514,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 57 55 51 49 45 43 39 37 31 29 24 34 25 34 38 34 51 50 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,397,o),
(203,397,qs),
(277,397,o),
(318,353,q),
(338,386,o),
(400,386,qs),
(417,386,ls),
(430,386,o),
(430,373,qs),
(430,13,ls),
(430,0,o),
(417,0,qs),
(310,0,ls),
(297,0,o),
(297,13,qs),
(297,28,l),
(258,-8,o)
);
},
{
closed = 1;
nodes = (
(297,158,o),
(297,195,qs),
(297,272,o),
(231,272,qs),
(198,272,o),
(161,231,o),
(161,195,qs),
(161,158,o),
(199,114,o),
(231,114,qs),
(262,114,o)
);
},
{
closed = 1;
nodes = (
(195,594,o),
(235,594,qs),
(273,594,o),
(327,541,o),
(327,504,qs),
(327,466,o),
(273,412,o),
(235,412,qs),
(195,412,o),
(141,465,o),
(141,504,qs),
(141,542,o)
);
},
{
closed = 1;
nodes = (
(263,491,o),
(263,504,qs),
(263,515,o),
(246,533,o),
(235,533,qs),
(223,533,o),
(205,516,o),
(205,504,qs),
(205,491,o),
(222,473,o),
(235,473,qs),
(246,473,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 1 8 6 105 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 2 8 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 2 8 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
48 47 25 24 54 52 47 58 48 58 45 43 39 37 31 29 24 34 25 34 38 34 51 50 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,0,o),
(408,0,qs),
(319,0,ls),
(306,0,o),
(306,13,qs),
(306,37,l),
(265,-8,o),
(201,-8,qs),
(122,-8,o),
(75,45,qs),
(24,101,o),
(24,196,qs),
(24,276,o),
(66,331,qs),
(116,398,o),
(203,398,qs),
(274,398,o),
(317,353,q),
(338,386,o),
(398,386,qs),
(408,386,ls),
(421,386,o),
(421,373,qs),
(421,343,l),
(476,398,o),
(558,398,qs),
(638,398,o),
(686,349,qs),
(733,299,o),
(733,222,qs),
(733,191,o),
(731,167,qs),
(730,152,o),
(712,152,qs),
(492,152,l),
(497,125,o),
(544,94,o),
(580,94,qs),
(611,94,o),
(654,105,o),
(696,123,qs),
(707,128,o),
(713,128,qs),
(725,128,o),
(725,113,qs),
(725,72,o),
(694,39,qs),
(648,-10,o),
(557,-10,qs),
(475,-10,o),
(421,42,q),
(421,13,ls)
);
},
{
closed = 1;
nodes = (
(297,157,o),
(297,195,qs),
(297,273,o),
(231,273,qs),
(161,273,o),
(161,195,qs),
(161,158,o),
(198,114,o),
(231,114,qs),
(261,114,o)
);
},
{
closed = 1;
nodes = (
(607,260,o),
(577,291,o),
(550,291,qs),
(525,291,o),
(493,261,o),
(492,237,q),
(603,237,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
33 27 2 10 4 19 1 3 12 45 0 2 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
33 27 2 11 4 19 1 3 12 45 0 2 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
33 27 2 11 5 19 1 3 12 45 0 2 0 2 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
33 27 2 11 5 19 1 3 12 45 0 2 8 2 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 1 1 0 97 8 7 2 0 0 46 77 0 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
14 1 12 0 3 1 12 3 103 0 11 11 4 97 6 5 2 4 4 48 77 0 10 10 4 97 6 5 2 4 4 48 77 13 9 2 1 1 0 97 8 7 2 0 0 46 77 0 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 11 11 4 97 6 5 2 4 4 48 77 0 10 10 4 97 6 5 2 4 4 48 77 13 1 9 9 0 97 8 7 2 0 0 46 77 0 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 8 7 2 0 0 46 77 0 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 7 1 0 0 46 77 0 8 8 40 77 0 2 2 0 97 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
62 62 53 52 62 68 62 68 66 64 58 56 52 61 53 61 51 38 34 51 38 34 36 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 755;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,-127,o),
(193,-127,qs),
(99,-127,ls),
(87,-127,o),
(93,-112,q),
(162,-4,l),
(102,9,o),
(66,55,qs),
(24,109,o),
(24,194,qs),
(24,281,o),
(73,336,qs),
(127,397,o),
(224,397,qs),
(270,397,o),
(306,384,qs),
(335,374,o),
(353,335,o),
(345,299,qs),
(335,261,l),
(331,251,o),
(326,251,qs),
(322,251,o),
(315,254,qs),
(273,274,o),
(233,274,qs),
(200,274,o),
(161,229,o),
(161,191,qs),
(161,149,o),
(204,104,o),
(244,104,qs),
(291,104,o),
(325,129,qs),
(335,136,o),
(342,136,qs),
(357,136,o),
(357,117,qs),
(357,76,o),
(310,14,o),
(270,0,q),
(224,-110,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
35 1 5 1 1 76 0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 48 2 78 57 38 34 36 34 36 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,260,o),
(246,291,o),
(219,291,qs),
(194,291,o),
(162,260,o),
(161,237,q),
(273,237,l)
);
},
{
closed = 1;
nodes = (
(214,94,o),
(249,94,qs),
(300,94,o),
(366,123,qs),
(377,128,o),
(383,128,qs),
(395,128,o),
(395,113,qs),
(395,73,o),
(364,39,qs),
(318,-10,o),
(227,-10,qs),
(142,-10,o),
(89,38,qs),
(27,93,o),
(27,193,qs),
(27,275,o),
(72,331,qs),
(127,397,o),
(223,397,qs),
(306,397,o),
(354,349,qs),
(403,300,o),
(403,222,qs),
(403,200,o),
(401,172,qs),
(401,167,ls),
(399,152,o),
(382,152,qs),
(162,152,l),
(167,126,o)
);
},
{
closed = 1;
nodes = (
(62,543,o),
(68,543,qs),
(184,543,ls),
(201,543,o),
(213,532,qs),
(314,441,ls),
(319,437,o),
(314,426,o),
(308,426,qs),
(205,426,ls),
(184,426,o),
(170,438,qs),
(63,528,ls),
(58,532,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 0 7 7 8 95 0 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 2 5 6 128 0 8 0 7 3 8 7 103 9 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 49 47 42 40 36 34 31 30 26 24 18 16 9 7 0 6 0 6 34 10 9 23 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,260,o),
(246,291,o),
(219,291,qs),
(194,291,o),
(162,260,o),
(161,237,q),
(273,237,l)
);
},
{
closed = 1;
nodes = (
(214,94,o),
(249,94,qs),
(300,94,o),
(366,123,qs),
(377,128,o),
(383,128,qs),
(395,128,o),
(395,113,qs),
(395,73,o),
(364,39,qs),
(318,-10,o),
(227,-10,qs),
(142,-10,o),
(89,38,qs),
(27,93,o),
(27,193,qs),
(27,275,o),
(72,331,qs),
(127,397,o),
(223,397,qs),
(306,397,o),
(354,349,qs),
(403,300,o),
(403,222,qs),
(403,200,o),
(401,172,qs),
(401,167,ls),
(399,152,o),
(382,152,qs),
(162,152,l),
(167,126,o)
);
},
{
closed = 1;
nodes = (
(100,437,o),
(105,441,qs),
(205,532,ls),
(218,543,o),
(235,543,qs),
(350,543,ls),
(357,543,o),
(360,532,o),
(355,528,qs),
(249,438,ls),
(235,426,o),
(213,426,qs),
(110,426,ls),
(104,426,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 10 1 7 7 8 95 0 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 2 6 2 5 6 128 0 8 10 1 7 3 8 7 103 9 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
40 38 0 0 47 44 38 51 40 51 36 34 31 30 26 24 18 16 9 7 0 6 0 6 34 11 9 23 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,260,o),
(246,291,o),
(219,291,qs),
(194,291,o),
(162,260,o),
(161,237,q),
(273,237,l)
);
},
{
closed = 1;
nodes = (
(214,94,o),
(249,94,qs),
(300,94,o),
(366,123,qs),
(377,128,o),
(383,128,qs),
(395,128,o),
(395,113,qs),
(395,73,o),
(364,39,qs),
(318,-10,o),
(227,-10,qs),
(142,-10,o),
(89,38,qs),
(27,93,o),
(27,193,qs),
(27,275,o),
(72,331,qs),
(127,397,o),
(223,397,qs),
(306,397,o),
(354,349,qs),
(403,300,o),
(403,222,qs),
(403,200,o),
(401,172,qs),
(401,167,ls),
(399,152,o),
(382,152,qs),
(162,152,l),
(167,126,o)
);
},
{
closed = 1;
nodes = (
(176,426,o),
(155,426,qs),
(64,426,ls),
(58,426,o),
(54,437,o),
(58,441,qs),
(145,532,ls),
(155,543,o),
(174,543,qs),
(276,543,ls),
(294,543,o),
(305,532,qs),
(392,441,ls),
(396,437,o),
(392,426,o),
(386,426,qs),
(296,426,ls),
(274,426,o),
(262,440,qs),
(225,483,l),
(188,440,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 2 6 2 5 6 128 10 1 1 0 2 5 1 2 103 9 1 7 7 8 95 0 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 2 6 2 5 6 128 0 8 9 1 7 3 8 7 103 10 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 57 54 50 47 42 40 36 34 31 30 26 24 18 16 9 7 0 6 0 6 34 11 9 23 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,260,o),
(246,291,o),
(219,291,qs),
(194,291,o),
(162,260,o),
(161,237,q),
(273,237,l)
);
},
{
closed = 1;
nodes = (
(214,94,o),
(249,94,qs),
(300,94,o),
(366,123,qs),
(377,128,o),
(383,128,qs),
(395,128,o),
(395,113,qs),
(395,73,o),
(364,39,qs),
(318,-10,o),
(227,-10,qs),
(142,-10,o),
(89,38,qs),
(27,93,o),
(27,193,qs),
(27,275,o),
(72,331,qs),
(127,397,o),
(223,397,qs),
(306,397,o),
(354,349,qs),
(403,300,o),
(403,222,qs),
(403,200,o),
(401,172,qs),
(401,167,ls),
(399,152,o),
(382,152,qs),
(162,152,l),
(167,126,o)
);
},
{
closed = 1;
nodes = (
(111,556,o),
(141,556,qs),
(170,556,o),
(213,513,o),
(213,484,qs),
(213,454,o),
(171,412,o),
(141,412,qs),
(111,412,o),
(69,454,o),
(69,484,qs),
(69,514,o)
);
},
{
closed = 1;
nodes = (
(282,556,o),
(311,556,qs),
(341,556,o),
(383,514,o),
(383,484,qs),
(383,454,o),
(341,412,o),
(311,412,qs),
(282,412,o),
(240,454,o),
(240,484,qs),
(240,514,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
10 1 2 1 1 76 0 5 2 6 2 5 6 128 11 1 1 0 2 5 1 2 103 9 1 7 7 8 97 10 1 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 0 0 60 58 54 52 48 46 42 40 36 34 31 30 26 24 18 16 9 7 0 6 0 6 34 12 9 23 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,386,o),
(55,386,qs),
(77,386,ls),
(128,386,o),
(174,339,o),
(174,288,qs),
(174,13,ls),
(174,0,o),
(161,0,qs),
(55,0,ls),
(41,0,o),
(41,13,qs),
(41,373,ls)
);
},
{
closed = 1;
nodes = (
(-27,543,o),
(-20,543,qs),
(95,543,ls),
(112,543,o),
(125,532,qs),
(225,441,ls),
(230,437,o),
(226,426,o),
(219,426,qs),
(117,426,ls),
(95,426,o),
(81,438,qs),
(-25,528,ls),
(-30,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 3 95 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 1 3 2 103 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
52 52 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,386,o),
(42,386,qs),
(65,386,ls),
(115,386,o),
(161,339,o),
(161,288,qs),
(161,13,ls),
(161,0,o),
(148,0,qs),
(42,0,ls),
(29,0,o),
(29,13,qs),
(29,373,ls)
);
},
{
closed = 1;
nodes = (
(-30,437,o),
(-25,441,qs),
(75,532,ls),
(88,543,o),
(105,543,qs),
(220,543,ls),
(227,543,o),
(231,532,o),
(225,528,q),
(119,438,ls),
(105,426,o),
(83,426,qs),
(-19,426,ls),
(-26,426,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 3 95 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
15 13 22 19 13 26 15 26 52 49 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,386,o),
(46,386,qs),
(69,386,ls),
(119,386,o),
(165,339,o),
(165,288,qs),
(165,13,ls),
(165,0,o),
(152,0,qs),
(46,0,ls),
(33,0,o),
(33,13,qs),
(33,373,ls)
);
},
{
closed = 1;
nodes = (
(52,426,o),
(31,426,qs),
(-60,426,ls),
(-66,426,o),
(-70,437,o),
(-66,441,qs),
(21,532,ls),
(31,543,o),
(50,543,qs),
(152,543,ls),
(170,543,o),
(181,532,qs),
(268,441,ls),
(272,437,o),
(268,426,o),
(262,426,qs),
(172,426,ls),
(150,426,o),
(138,440,qs),
(101,483,l),
(64,440,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 3 95 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 53 36 52 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,386,o),
(47,386,qs),
(69,386,ls),
(120,386,o),
(166,339,o),
(166,288,qs),
(166,13,ls),
(166,0,o),
(153,0,qs),
(47,0,ls),
(33,0,o),
(33,13,qs),
(33,373,ls)
);
},
{
closed = 1;
nodes = (
(-13,556,o),
(17,556,qs),
(46,556,o),
(88,513,o),
(88,484,qs),
(88,454,o),
(46,412,o),
(17,412,qs),
(-13,412,o),
(-55,454,o),
(-55,484,qs),
(-55,514,o)
);
},
{
closed = 1;
nodes = (
(158,556,o),
(187,556,qs),
(217,556,o),
(259,514,o),
(259,484,qs),
(259,454,o),
(217,412,o),
(187,412,qs),
(158,412,o),
(116,454,o),
(116,484,qs),
(116,514,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 2 2 3 97 5 1 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 36 36 36 36 52 49 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,401,ls),
(94,395,o),
(89,406,q),
(73,429,ls),
(66,439,o),
(77,444,qs),
(130,472,l),
(83,542,ls),
(80,547,o),
(84,556,o),
(89,556,qs),
(150,556,ls),
(191,556,o),
(227,544,o),
(243,527,q),
(292,552,ls),
(303,557,o),
(309,547,qs),
(325,523,ls),
(332,512,o),
(322,508,qs),
(275,484,l),
(363,356,ls),
(413,284,o),
(413,194,qs),
(413,107,o),
(368,53,qs),
(315,-9,o),
(220,-9,qs),
(136,-9,o),
(84,39,qs),
(24,93,o),
(24,188,qs),
(24,264,o),
(64,314,qs),
(109,373,o),
(194,381,q),
(160,428,l)
);
},
{
closed = 1;
nodes = (
(282,186,qs),
(282,269,o),
(219,269,qs),
(154,269,o),
(154,186,qs),
(154,105,o),
(218,105,qs),
(282,105,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
37 30 22 15 4 3 1 1 76 0 3 3 1 95 0 1 1 39 77 4 1 2 2 0 97 0 0 0 46 0 78 39 38 43 41 38 45 39 45 47 39 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,396,qs),
(322,396,o),
(363,359,qs),
(412,314,o),
(412,222,qs),
(412,13,ls),
(412,0,o),
(398,0,qs),
(292,0,ls),
(279,0,o),
(279,13,qs),
(279,202,ls),
(279,275,o),
(224,275,qs),
(168,275,o),
(168,207,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(69,386,ls),
(131,386,o),
(152,349,q),
(196,396,o)
);
},
{
closed = 1;
nodes = (
(72,435,qs),
(74,486,o),
(121,547,o),
(158,547,qs),
(187,547,o),
(231,531,qs),
(267,518,o),
(278,518,qs),
(293,518,o),
(300,538,qs),
(303,551,o),
(313,551,qs),
(369,551,ls),
(382,551,o),
(380,537,qs),
(369,428,o),
(293,428,qs),
(269,428,o),
(223,442,qs),
(185,454,o),
(178,454,qs),
(161,454,o),
(158,434,qs),
(157,422,o),
(145,422,qs),
(83,422,ls),
(72,422,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 8 6 8 9 114 0 6 5 5 6 112 7 11 2 5 5 8 98 10 1 8 8 39 77 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 8 6 8 9 114 0 6 5 5 6 112 7 11 2 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 8 6 8 9 6 128 0 6 5 5 6 112 7 11 2 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 9 8 6 8 9 6 128 0 6 7 8 6 7 126 0 7 7 8 97 10 1 8 8 39 77 11 1 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 9 10 6 10 9 6 128 0 6 7 10 6 7 126 0 10 11 1 5 4 10 5 103 0 7 7 8 97 0 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
31 29 52 50 48 46 44 41 39 37 35 33 29 55 31 55 37 51 35 51 49 12 9 27 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
},
{
closed = 1;
nodes = (
(84,543,o),
(90,543,qs),
(206,543,ls),
(223,543,o),
(235,532,qs),
(336,441,ls),
(341,437,o),
(336,426,o),
(330,426,qs),
(227,426,ls),
(206,426,o),
(192,438,qs),
(85,528,ls),
(80,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 5 95 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 0 4 3 5 4 103 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
9 8 1 0 35 33 28 26 17 15 8 23 9 23 5 3 0 7 1 7 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
},
{
closed = 1;
nodes = (
(112,437,o),
(117,441,qs),
(217,532,ls),
(230,543,o),
(247,543,qs),
(362,543,ls),
(369,543,o),
(373,532,o),
(367,528,q),
(261,438,ls),
(247,426,o),
(226,426,qs),
(123,426,ls),
(117,426,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 4 4 5 95 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 8 1 4 3 5 4 103 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
26 24 9 8 1 0 33 30 24 37 26 37 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
},
{
closed = 1;
nodes = (
(182,426,o),
(161,426,qs),
(70,426,ls),
(64,426,o),
(60,437,o),
(64,441,qs),
(151,532,ls),
(161,543,o),
(180,543,qs),
(282,543,ls),
(300,543,o),
(311,532,qs),
(398,441,ls),
(402,437,o),
(398,426,o),
(392,426,qs),
(302,426,ls),
(280,426,o),
(268,440,qs),
(231,483,l),
(194,440,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 4 5 95 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 1 4 3 5 4 103 0 1 1 3 97 0 3 3 48 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
9 8 1 0 43 40 36 33 28 26 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
},
{
closed = 1;
nodes = (
(68,435,qs),
(70,486,o),
(117,547,o),
(155,547,qs),
(183,547,o),
(228,531,qs),
(264,518,o),
(275,518,qs),
(290,518,o),
(296,538,qs),
(300,551,o),
(310,551,qs),
(366,551,ls),
(379,551,o),
(377,537,qs),
(366,428,o),
(290,428,qs),
(265,428,o),
(219,442,qs),
(181,454,o),
(174,454,qs),
(157,454,o),
(155,434,qs),
(153,422,o),
(141,422,qs),
(79,422,ls),
(68,422,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 5 7 8 114 0 5 4 4 5 112 6 12 2 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 8 7 5 7 8 5 128 0 5 4 4 5 112 6 12 2 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 6 6 7 97 9 1 7 7 39 77 12 1 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 9 5 9 8 5 128 0 5 6 9 5 6 126 0 9 12 1 4 3 9 4 103 0 6 6 7 97 0 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
26 24 9 8 1 0 47 45 43 41 39 36 34 32 30 28 24 50 26 50 17 15 8 23 9 23 5 3 0 7 1 7 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,96,o),
(24,195,qs),
(24,280,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(365,348,qs),
(427,292,o),
(427,194,qs),
(427,108,o),
(380,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
},
{
closed = 1;
nodes = (
(116,556,o),
(146,556,qs),
(175,556,o),
(217,514,o),
(217,484,qs),
(217,454,o),
(175,412,o),
(146,412,qs),
(116,412,o),
(74,454,o),
(74,484,qs),
(74,514,o)
);
},
{
closed = 1;
nodes = (
(287,556,o),
(316,556,qs),
(346,556,o),
(388,514,o),
(388,484,qs),
(388,454,o),
(346,412,o),
(316,412,qs),
(287,412,o),
(245,454,o),
(245,484,qs),
(245,514,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
6 1 4 4 5 97 7 1 5 5 39 77 0 1 1 3 97 0 3 3 48 77 8 1 0 0 2 97 9 1 2 2 46 2 78 9 8 1 0 46 44 40 38 34 32 28 26 17 15 8 23 9 23 5 3 0 7 1 7 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,329,o),
(38,329,qs),
(337,329,ls),
(407,329,o),
(407,263,qs),
(407,230,ls),
(407,217,o),
(393,217,qs),
(38,217,ls),
(25,217,o),
(25,230,qs),
(25,316,ls)
);
},
{
closed = 1;
nodes = (
(186,189,o),
(217,189,qs),
(247,189,o),
(287,148,o),
(287,117,qs),
(287,86,o),
(247,46,o),
(217,46,qs),
(185,46,o),
(144,86,o),
(144,117,qs),
(144,147,o)
);
},
{
closed = 1;
nodes = (
(186,499,o),
(217,499,qs),
(247,499,o),
(287,459,o),
(287,428,qs),
(287,397,o),
(247,357,o),
(217,357,qs),
(185,357,o),
(144,397,o),
(144,428,qs),
(144,458,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 5 0 4 1 5 4 105 0 1 0 0 3 1 0 103 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 36 36 36 36 51 49 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,177,o),
(163,159,q),
(239,277,l)
);
},
{
closed = 1;
nodes = (
(216,110,o),
(220,110,qs),
(224,109,o),
(225,109,qs),
(292,109,o),
(292,193,qs),
(292,213,o),
(289,226,q),
(215,110,l)
);
},
{
closed = 1;
nodes = (
(86,40,qs),
(24,97,o),
(24,195,qs),
(24,281,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(311,397,o),
(366,348,qs),
(428,292,o),
(428,194,qs),
(428,108,o),
(381,54,qs),
(326,-9,o),
(227,-9,qs),
(140,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 0 0 3 97 0 3 3 48 77 0 1 1 2 97 4 1 2 2 46 2 78 17 16 25 23 16 31 17 31 21 35 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,194,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,175,ls),
(167,108,o),
(222,108,qs),
(278,108,o),
(278,174,qs),
(278,373,ls),
(278,386,o),
(291,386,qs),
(314,386,ls),
(364,386,o),
(411,339,o),
(411,288,qs),
(411,188,ls),
(411,-9,o),
(222,-9,qs),
(35,-9,o)
);
},
{
closed = 1;
nodes = (
(69,543,o),
(76,543,qs),
(191,543,ls),
(208,543,o),
(221,532,qs),
(321,441,ls),
(326,437,o),
(321,426,o),
(315,426,qs),
(213,426,ls),
(191,426,o),
(177,438,qs),
(71,528,l),
(65,532,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 5 0 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 36 33 28 26 20 17 13 11 8 5 0 23 1 23 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,194,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,175,ls),
(167,108,o),
(222,108,qs),
(278,108,o),
(278,174,qs),
(278,373,ls),
(278,386,o),
(291,386,qs),
(314,386,ls),
(364,386,o),
(411,339,o),
(411,288,qs),
(411,188,ls),
(411,-9,o),
(222,-9,qs),
(35,-9,o)
);
},
{
closed = 1;
nodes = (
(100,437,o),
(104,441,qs),
(204,532,l),
(218,543,o),
(234,543,qs),
(349,543,ls),
(356,543,o),
(360,532,o),
(354,528,q),
(248,438,ls),
(235,426,o),
(213,426,qs),
(110,426,ls),
(104,426,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 7 1 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
26 24 1 0 33 30 24 37 26 37 20 17 13 11 8 5 0 23 1 23 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,194,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,175,ls),
(167,108,o),
(222,108,qs),
(278,108,o),
(278,174,qs),
(278,373,ls),
(278,386,o),
(291,386,qs),
(314,386,ls),
(364,386,o),
(411,339,o),
(411,288,qs),
(411,188,ls),
(411,-9,o),
(222,-9,qs),
(35,-9,o)
);
},
{
closed = 1;
nodes = (
(174,426,o),
(153,426,qs),
(63,426,ls),
(57,426,o),
(52,437,o),
(57,441,q),
(143,532,ls),
(154,543,o),
(173,543,qs),
(274,543,ls),
(293,543,o),
(304,532,qs),
(391,441,ls),
(395,437,o),
(390,426,o),
(384,426,qs),
(294,426,ls),
(273,426,o),
(261,440,qs),
(224,483,l),
(187,440,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 6 1 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 43 40 36 33 28 26 20 17 13 11 8 5 0 23 1 23 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,194,qs),
(35,373,ls),
(35,386,o),
(48,386,qs),
(71,386,ls),
(121,386,o),
(167,339,o),
(167,288,qs),
(167,175,ls),
(167,108,o),
(222,108,qs),
(278,108,o),
(278,174,qs),
(278,373,ls),
(278,386,o),
(291,386,qs),
(314,386,ls),
(364,386,o),
(411,339,o),
(411,288,qs),
(411,188,ls),
(411,-9,o),
(222,-9,qs),
(35,-9,o)
);
},
{
closed = 1;
nodes = (
(113,556,o),
(143,556,qs),
(172,556,o),
(214,514,o),
(214,484,qs),
(214,454,o),
(173,412,o),
(143,412,qs),
(113,412,o),
(71,454,o),
(71,484,qs),
(71,514,o)
);
},
{
closed = 1;
nodes = (
(284,556,o),
(313,556,qs),
(343,556,o),
(385,514,o),
(385,484,qs),
(385,454,o),
(343,412,o),
(313,412,qs),
(284,412,o),
(242,454,o),
(242,484,qs),
(242,514,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
6 1 4 4 5 97 7 1 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 8 1 0 0 46 0 78 1 0 46 44 40 38 34 32 28 26 20 17 13 11 8 5 0 23 1 23 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,377,o),
(5,386,o),
(10,386,qs),
(51,386,ls),
(102,386,o),
(148,347,o),
(168,288,qs),
(212,162,l),
(283,373,ls),
(288,386,o),
(299,386,qs),
(405,386,ls),
(416,386,o),
(413,373,q),
(277,-9,ls),
(242,-103,o),
(174,-171,o),
(114,-171,qs),
(63,-171,o),
(30,-140,qs),
(-4,-107,o),
(-4,-59,qs),
(-4,-37,o),
(12,-37,qs),
(17,-37,o),
(21,-40,qs),
(51,-59,o),
(74,-59,qs),
(119,-59,o),
(142,-5,q),
(3,373,ls)
);
},
{
closed = 1;
nodes = (
(93,437,o),
(98,441,qs),
(198,532,ls),
(211,543,o),
(228,543,qs),
(343,543,ls),
(349,543,o),
(353,532,o),
(348,528,qs),
(242,438,ls),
(228,426,o),
(206,426,qs),
(103,426,ls),
(97,426,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 1 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 5 5 6 95 0 6 6 39 77 4 1 3 3 42 77 1 1 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 3 0 3 1 0 128 7 1 5 5 6 95 0 6 6 39 77 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 3 0 3 1 0 128 0 6 7 1 5 3 6 5 103 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
33 31 40 37 31 44 33 44 37 52 36 34 33 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,-160,o),
(155,-160,qs),
(49,-160,ls),
(36,-160,o),
(36,-147,qs),
(36,542,ls),
(36,556,o),
(49,556,qs),
(72,556,ls),
(122,556,o),
(168,509,o),
(168,458,qs),
(168,368,l),
(210,397,o),
(260,397,qs),
(343,397,o),
(391,345,qs),
(442,291,o),
(442,196,qs),
(442,114,o),
(402,60,qs),
(354,-8,o),
(264,-8,qs),
(201,-8,o),
(168,27,q),
(168,-147,ls)
);
},
{
closed = 1;
nodes = (
(304,157,o),
(304,195,qs),
(304,273,o),
(235,273,qs),
(168,273,o),
(168,195,qs),
(168,157,o),
(204,114,o),
(235,114,qs),
(267,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
12 1 5 1 0 1 0 4 2 76 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 27 26 32 30 26 35 27 35 51 52 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,377,o),
(5,386,o),
(10,386,qs),
(51,386,ls),
(102,386,o),
(148,347,o),
(168,288,qs),
(212,162,l),
(283,373,ls),
(288,386,o),
(299,386,qs),
(405,386,ls),
(416,386,o),
(413,373,q),
(277,-9,ls),
(242,-103,o),
(174,-171,o),
(114,-171,qs),
(63,-171,o),
(30,-140,qs),
(-4,-107,o),
(-4,-59,qs),
(-4,-37,o),
(12,-37,qs),
(17,-37,o),
(21,-40,qs),
(51,-59,o),
(74,-59,qs),
(119,-59,o),
(142,-5,q),
(3,373,ls)
);
},
{
closed = 1;
nodes = (
(90,556,o),
(120,556,qs),
(149,556,o),
(192,513,o),
(192,484,qs),
(192,454,o),
(150,412,o),
(120,412,qs),
(90,412,o),
(48,454,o),
(48,484,qs),
(48,514,o)
);
},
{
closed = 1;
nodes = (
(261,556,o),
(290,556,qs),
(320,556,o),
(362,514,o),
(362,484,qs),
(362,454,o),
(320,412,o),
(290,412,qs),
(261,412,o),
(219,454,o),
(219,484,qs),
(219,514,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 0 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 1 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
7 1 5 5 6 97 8 1 6 6 39 77 4 1 3 3 42 77 1 1 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 3 0 3 1 0 128 7 1 5 5 6 97 8 1 6 6 39 77 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 36 36 38 37 52 36 34 33 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,386,o),
(49,386,qs),
(72,386,ls),
(122,386,o),
(168,339,o),
(168,288,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(49,0,ls),
(36,0,o),
(36,13,qs),
(36,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 42 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 204;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,142,o),
(15,147,o),
(15,153,qs),
(15,241,ls),
(15,257,o),
(29,264,qs),
(75,288,l),
(75,542,ls),
(75,556,o),
(88,556,qs),
(115,556,ls),
(165,556,o),
(210,508,o),
(210,456,qs),
(210,363,l),
(312,418,ls),
(317,421,o),
(327,416,o),
(327,411,qs),
(327,323,ls),
(327,306,o),
(313,299,qs),
(210,244,l),
(210,125,l),
(336,125,ls),
(406,125,o),
(406,59,qs),
(406,17,ls),
(406,0,o),
(389,0,qs),
(88,0,ls),
(75,0,o),
(75,13,qs),
(75,170,l),
(30,145,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
31 27 19 15 11 0 6 1 2 1 76 0 2 2 39 77 0 1 1 0 96 0 0 0 40 0 78 60 35 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,153,o),
(13,158,o),
(13,164,qs),
(13,252,ls),
(13,265,o),
(27,274,qs),
(63,294,l),
(63,542,ls),
(63,556,o),
(76,556,qs),
(98,556,ls),
(149,556,o),
(195,509,o),
(195,458,qs),
(195,367,l),
(236,388,ls),
(241,391,o),
(251,386,o),
(251,381,qs),
(251,293,ls),
(251,278,o),
(237,271,qs),
(195,248,l),
(195,144,ls),
(195,103,o),
(227,103,qs),
(244,103,o),
(268,120,q),
(273,125,o),
(279,125,qs),
(292,125,o),
(292,105,qs),
(292,65,o),
(270,34,qs),
(239,-8,o),
(180,-8,qs),
(130,-8,o),
(100,21,qs),
(63,56,o),
(63,129,qs),
(63,175,l),
(28,156,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
38 34 26 22 18 0 6 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 3 3 39 77 2 1 1 1 0 98 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
61 35 20 36 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(795,125,o),
(795,59,qs),
(795,17,ls),
(795,0,o),
(779,0,qs),
(448,0,ls),
(435,0,o),
(435,13,qs),
(435,28,l),
(377,-9,o),
(297,-9,qs),
(182,-9,o),
(113,58,qs),
(34,135,o),
(34,277,qs),
(34,401,o),
(96,478,qs),
(168,566,o),
(297,566,qs),
(373,566,o),
(435,528,q),
(435,542,ls),
(435,556,o),
(448,556,qs),
(717,556,ls),
(787,556,o),
(787,488,qs),
(787,448,ls),
(787,431,o),
(771,431,qs),
(570,431,l),
(570,344,l),
(698,344,ls),
(768,344,o),
(768,277,qs),
(768,238,ls),
(768,221,o),
(752,221,qs),
(570,221,l),
(570,125,l),
(725,125,ls)
);
},
{
closed = 1;
nodes = (
(435,277,qs),
(435,439,o),
(303,439,qs),
(172,439,o),
(172,277,qs),
(172,118,o),
(303,118,qs),
(435,118,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 5 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 8 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 3 97 4 1 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 4 97 0 4 4 39 77 9 1 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 4 97 0 4 4 39 77 9 1 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 46 44 41 48 42 48 0 40 0 39 51 38 35 51 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,-9,qs),
(140,-9,o),
(86,40,qs),
(24,97,o),
(24,195,qs),
(24,281,o),
(71,334,qs),
(126,397,o),
(225,397,qs),
(310,397,o),
(360,343,q),
(412,398,o),
(492,398,qs),
(573,398,o),
(620,349,qs),
(667,300,o),
(667,222,qs),
(667,192,o),
(665,167,qs),
(663,152,o),
(646,152,qs),
(428,152,l),
(433,125,o),
(479,94,o),
(513,94,qs),
(545,94,o),
(590,105,o),
(631,123,qs),
(642,128,o),
(647,128,qs),
(660,128,o),
(660,113,qs),
(660,72,o),
(629,39,qs),
(583,-10,o),
(492,-10,qs),
(411,-10,o),
(358,43,q),
(309,-9,o)
);
},
{
closed = 1;
nodes = (
(292,193,qs),
(292,278,o),
(226,278,qs),
(159,278,o),
(159,193,qs),
(159,109,o),
(225,109,qs),
(292,109,o)
);
},
{
closed = 1;
nodes = (
(541,260,o),
(511,291,o),
(483,291,qs),
(459,291,o),
(428,261,o),
(427,237,q),
(537,237,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 8 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 9 4 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 46 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 0 9 9 4 97 5 1 4 4 48 77 0 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 46 77 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
47 47 40 39 47 53 47 53 51 49 44 42 39 46 40 46 38 34 38 34 36 20 33 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 689;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,187,qs),
(38,187,o),
(48,177,qs),
(109,115,o),
(218,115,qs),
(301,115,o),
(301,162,qs),
(301,190,o),
(230,214,qs),
(129,247,o),
(98,268,qs),
(27,315,o),
(27,401,qs),
(27,475,o),
(81,519,qs),
(138,566,o),
(233,566,qs),
(310,566,o),
(373,546,qs),
(406,534,o),
(426,494,o),
(416,460,qs),
(406,424,l),
(404,411,o),
(394,411,qs),
(388,411,o),
(377,416,qs),
(301,448,o),
(237,448,qs),
(166,448,o),
(166,408,qs),
(166,378,o),
(237,355,qs),
(290,338,ls),
(340,322,o),
(370,303,qs),
(441,257,o),
(441,170,qs),
(441,95,o),
(391,47,qs),
(333,-10,o),
(227,-10,qs),
(132,-10,o),
(71,41,qs),
(10,92,o),
(10,162,qs),
(10,187,o)
);
},
{
closed = 1;
nodes = (
(282,702,o),
(303,702,qs),
(393,702,ls),
(399,702,o),
(404,691,o),
(399,687,q),
(313,597,ls),
(302,585,o),
(283,585,qs),
(182,585,ls),
(164,585,o),
(152,597,qs),
(66,687,l),
(61,691,o),
(66,702,o),
(72,702,qs),
(162,702,ls),
(183,702,o),
(196,688,qs),
(233,646,l),
(269,688,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 103 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 103 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 34 42 38 34 43 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,138,qs),
(44,138,o),
(54,131,qs),
(58,129,o),
(59,128,qs),
(109,96,o),
(163,96,qs),
(201,96,o),
(201,117,qs),
(201,130,o),
(158,145,qs),
(88,169,o),
(36,223,o),
(36,270,qs),
(36,329,o),
(78,363,qs),
(120,397,o),
(186,397,qs),
(242,397,o),
(280,381,qs),
(311,367,o),
(328,329,o),
(318,296,qs),
(312,273,ls),
(309,265,o),
(303,265,qs),
(299,265,o),
(292,268,qs),
(289,269,ls),
(239,290,o),
(196,290,qs),
(171,290,o),
(171,274,qs),
(171,260,o),
(213,245,qs),
(285,219,o),
(336,170,o),
(336,125,qs),
(336,69,o),
(299,33,qs),
(257,-10,o),
(186,-10,qs),
(123,-10,o),
(77,23,qs),
(24,61,o),
(24,116,qs),
(24,138,o)
);
},
{
closed = 1;
nodes = (
(231,543,o),
(253,543,qs),
(343,543,ls),
(349,543,o),
(353,533,o),
(349,528,qs),
(262,438,ls),
(251,426,o),
(233,426,qs),
(131,426,ls),
(114,426,o),
(102,438,qs),
(15,528,ls),
(11,533,o),
(15,543,o),
(21,543,qs),
(112,543,ls),
(133,543,o),
(145,529,qs),
(182,487,l),
(219,529,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 7 7 6 95 8 1 6 6 39 77 0 1 1 3 97 0 3 3 48 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 103 0 1 1 3 97 0 3 3 48 77 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 36 41 38 35 41 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,556,o),
(10,556,qs),
(80,556,ls),
(148,556,o),
(179,495,qs),
(255,346,l),
(353,542,ls),
(360,556,o),
(373,556,qs),
(491,556,ls),
(505,556,o),
(499,542,q),
(317,199,l),
(317,13,ls),
(317,0,o),
(304,0,qs),
(195,0,ls),
(182,0,o),
(182,13,qs),
(182,203,l),
(2,542,l)
);
},
{
closed = 1;
nodes = (
(134,714,o),
(163,714,qs),
(193,714,o),
(235,672,o),
(235,643,qs),
(235,613,o),
(193,571,o),
(163,571,qs),
(133,571,o),
(92,613,o),
(92,643,qs),
(92,673,o)
);
},
{
closed = 1;
nodes = (
(305,714,o),
(334,714,qs),
(364,714,o),
(406,673,o),
(406,643,qs),
(406,613,o),
(364,571,o),
(334,571,qs),
(304,571,o),
(263,613,o),
(263,643,qs),
(263,673,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
14 7 0 3 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 36 36 36 36 52 52 50 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,125,o),
(436,59,qs),
(436,17,ls),
(436,0,o),
(420,0,qs),
(40,0,ls),
(27,0,o),
(27,13,qs),
(27,94,ls),
(27,116,o),
(42,136,qs),
(258,430,l),
(46,430,ls),
(33,430,o),
(33,443,qs),
(33,542,ls),
(33,556,o),
(46,556,qs),
(366,556,ls),
(436,556,o),
(436,489,qs),
(436,467,ls),
(436,448,o),
(421,429,qs),
(199,125,l),
(366,125,ls)
);
},
{
closed = 1;
nodes = (
(278,702,o),
(299,702,qs),
(389,702,ls),
(395,702,o),
(400,691,o),
(395,687,q),
(309,597,ls),
(298,585,o),
(279,585,qs),
(178,585,ls),
(160,585,o),
(148,597,qs),
(61,687,ls),
(57,691,o),
(62,702,o),
(68,702,qs),
(158,702,ls),
(179,702,o),
(191,688,qs),
(229,646,l),
(265,688,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 4 0 5 0 4 5 103 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,116,o),
(349,103,qs),
(349,13,ls),
(349,0,o),
(336,0,qs),
(39,0,ls),
(26,0,o),
(26,13,qs),
(26,71,ls),
(26,91,o),
(39,106,qs),
(175,269,l),
(46,269,ls),
(34,269,o),
(34,282,qs),
(34,373,ls),
(34,386,o),
(46,386,qs),
(274,386,ls),
(312,386,o),
(344,353,o),
(344,313,qs),
(344,286,o),
(327,267,qs),
(202,116,l),
(336,116,ls)
);
},
{
closed = 1;
nodes = (
(239,543,o),
(261,543,qs),
(351,543,ls),
(357,543,o),
(361,533,o),
(357,528,qs),
(270,438,ls),
(259,426,o),
(241,426,qs),
(139,426,ls),
(122,426,o),
(110,438,qs),
(23,528,ls),
(19,533,o),
(23,543,o),
(29,543,qs),
(120,543,ls),
(141,543,o),
(153,529,qs),
(190,487,l),
(227,529,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 4 95 6 1 4 4 39 77 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
6 1 4 0 5 0 4 5 103 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,269,o),
(49,282,qs),
(65,373,ls),
(68,386,o),
(81,386,qs),
(152,386,l),
(156,408,ls),
(168,479,o),
(205,519,qs),
(245,561,o),
(306,561,qs),
(354,561,o),
(420,511,o),
(420,473,qs),
(420,433,o),
(403,433,qs),
(399,433,o),
(393,436,qs),
(362,449,o),
(344,449,qs),
(295,449,o),
(285,386,q),
(381,386,ls),
(394,386,o),
(391,373,qs),
(375,282,l),
(371,269,o),
(360,269,qs),
(266,269,l),
(215,-17,ls),
(187,-171,o),
(61,-171,qs),
(17,-171,o),
(-46,-115,o),
(-46,-77,qs),
(-46,-43,o),
(-24,-43,qs),
(-19,-43,o),
(-7,-48,qs),
(15,-59,o),
(30,-59,qs),
(55,-59,o),
(80,-30,o),
(86,5,qs),
(132,269,l),
(60,269,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 1 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 1 1 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 45 0 44 36 35 34 33 35 34 35 34 35 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,426,o),
(101,426,qs),
(10,426,ls),
(4,426,o),
(0,437,o),
(4,441,qs),
(91,532,ls),
(101,543,o),
(120,543,qs),
(222,543,ls),
(240,543,o),
(251,532,qs),
(338,441,ls),
(342,437,o),
(338,426,o),
(332,426,qs),
(242,426,ls),
(220,426,o),
(208,440,qs),
(171,483,l),
(134,440,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 339;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,543,o),
(242,543,qs),
(332,543,ls),
(338,543,o),
(342,533,o),
(338,528,qs),
(251,438,ls),
(240,426,o),
(222,426,qs),
(120,426,ls),
(103,426,o),
(91,438,qs),
(4,528,ls),
(0,533,o),
(4,543,o),
(10,543,qs),
(101,543,ls),
(122,543,o),
(134,529,qs),
(171,487,l),
(208,529,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 339;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,543,qs),
(89,543,ls),
(97,543,o),
(99,533,qs),
(105,492,o),
(146,492,qs),
(186,492,o),
(193,533,qs),
(194,543,o),
(204,543,qs),
(281,543,ls),
(291,543,o),
(289,532,qs),
(281,485,o),
(248,453,qs),
(208,413,o),
(146,413,qs),
(92,413,o),
(54,444,qs),
(12,477,o),
(3,532,qs),
(1,543,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
50 34 52 35 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 288;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,556,o),
(72,556,qs),
(101,556,o),
(143,513,o),
(143,483,qs),
(143,454,o),
(101,413,o),
(72,413,qs),
(42,413,o),
(0,454,o),
(0,483,qs),
(0,513,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 143;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,594,o),
(93,594,qs),
(132,594,o),
(186,541,o),
(186,504,qs),
(186,466,o),
(132,412,o),
(93,412,qs),
(54,412,o),
(0,465,o),
(0,504,qs),
(0,542,o)
);
},
{
closed = 1;
nodes = (
(122,491,o),
(122,504,qs),
(122,515,o),
(105,533,o),
(93,533,qs),
(81,533,o),
(63,516,o),
(63,504,qs),
(63,491,o),
(81,473,o),
(93,473,qs),
(105,473,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 186;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,3,q),
(59,7,o),
(64,7,qs),
(148,7,ls),
(151,7,o),
(152,4,o),
(149,2,qs),
(99,-25,o),
(99,-57,qs),
(99,-84,o),
(131,-84,qs),
(141,-84,o),
(158,-79,qs),
(170,-75,o),
(170,-88,qs),
(170,-139,ls),
(170,-147,o),
(159,-151,qs),
(136,-158,o),
(105,-158,qs),
(57,-158,o),
(0,-114,o),
(0,-77,qs),
(0,-22,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 1 2 112 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
37 39 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 170;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,435,qs),
(2,486,o),
(49,547,o),
(87,547,qs),
(116,547,o),
(160,531,qs),
(196,518,o),
(207,518,qs),
(222,518,o),
(228,538,qs),
(232,551,o),
(242,551,qs),
(298,551,ls),
(311,551,o),
(309,537,qs),
(298,428,o),
(222,428,qs),
(197,428,o),
(151,442,qs),
(113,454,o),
(106,454,qs),
(89,454,o),
(87,434,qs),
(85,422,o),
(73,422,qs),
(11,422,ls),
(0,422,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 1 3 4 114 0 1 0 0 1 112 5 1 3 4 0 3 90 5 1 3 3 0 97 2 6 2 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 3 1 3 4 1 128 0 1 0 0 1 112 5 1 3 4 0 3 90 5 1 3 3 0 97 2 6 2 0 3 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 5 1 3 0 2 0 3 2 105 5 1 3 3 0 95 6 1 0 3 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 5 4 0 5 90 0 3 0 2 0 3 2 105 0 5 5 0 95 6 1 0 5 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 23 21 19 17 15 12 10 8 6 4 0 26 2 26 7 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 309;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,436,o),
(5,442,qs),
(74,529,ls),
(85,543,o),
(103,543,qs),
(197,543,ls),
(204,543,o),
(209,532,o),
(205,527,qs),
(131,441,ls),
(120,427,o),
(100,427,qs),
(12,427,ls),
(6,427,o)
);
},
{
closed = 1;
nodes = (
(184,436,o),
(187,442,q),
(256,529,ls),
(267,543,o),
(285,543,qs),
(379,543,ls),
(385,543,o),
(391,532,o),
(387,527,qs),
(313,441,ls),
(302,427,o),
(282,427,qs),
(194,427,ls),
(188,427,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 5 2 4 3 0 1 0 79 16 14 2 0 23 20 14 27 16 27 9 6 0 13 2 13 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 388;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,-160,o),
(155,-160,qs),
(49,-160,ls),
(36,-160,o),
(36,-147,qs),
(36,373,ls),
(36,386,o),
(49,386,qs),
(72,386,ls),
(122,386,o),
(168,339,o),
(168,288,qs),
(168,175,ls),
(168,108,o),
(223,108,qs),
(279,108,o),
(279,174,qs),
(279,373,ls),
(279,386,o),
(292,386,qs),
(314,386,ls),
(365,386,o),
(412,339,o),
(412,288,qs),
(412,188,ls),
(412,-9,o),
(234,-9,qs),
(198,-9,o),
(168,2,q),
(168,-147,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 2 1 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 51 52 35 52 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,97,o),
(180,67,qs),
(180,35,o),
(135,-10,o),
(104,-10,qs),
(72,-10,o),
(28,35,o),
(28,67,qs),
(28,167,o),
(136,249,q),
(139,253,o),
(142,249,q),
(173,220,o),
(145,193,qs),
(122,169,o),
(115,144,q),
(144,140,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
42 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,265,o),
(34,297,qs),
(34,396,o),
(142,479,q),
(145,482,o),
(148,479,qs),
(179,450,o),
(151,422,qs),
(128,399,o),
(121,374,q),
(149,370,o),
(185,326,o),
(185,297,qs),
(185,264,o),
(141,219,o),
(109,219,qs),
(78,219,o)
);
},
{
closed = 1;
nodes = (
(185,100,o),
(185,68,qs),
(185,35,o),
(141,-10,o),
(109,-10,qs),
(78,-10,o),
(33,36,o),
(33,68,qs),
(33,100,o),
(78,146,o),
(109,146,qs),
(141,146,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
10 6 2 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 0 1 0 133 4 1 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
3 1 0 1 0 133 4 1 1 2 2 1 89 4 1 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
18 17 1 0 24 22 17 28 18 28 0 16 1 16 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,180,o),
(159,194,qs),
(158,213,ls),
(156,242,o),
(114,276,qs),
(70,312,o),
(39,366,o),
(39,407,qs),
(39,467,o),
(81,510,qs),
(130,559,o),
(207,559,qs),
(260,559,o),
(297,529,qs),
(340,494,o),
(337,442,qs),
(335,416,o),
(320,416,qs),
(312,416,o),
(297,422,qs),
(254,436,o),
(222,434,qs),
(175,433,o),
(175,398,qs),
(175,380,o),
(216,346,qs),
(259,311,o),
(292,260,o),
(292,228,qs),
(293,194,ls),
(293,180,o),
(279,180,qs),
(173,180,ls)
);
},
{
closed = 1;
nodes = (
(301,100,o),
(301,68,qs),
(301,35,o),
(257,-10,o),
(225,-10,qs),
(194,-10,o),
(149,36,o),
(149,68,qs),
(149,100,o),
(194,146,o),
(225,146,qs),
(257,146,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
16 1 1 3 30 1 0 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
16 1 1 3 30 1 0 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 0 1 4 1 0 4 128 2 1 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 33 1 0 40 38 33 44 34 44 21 19 15 13 11 9 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 371;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,121,o),
(436,73,o),
(436,33,qs),
(436,23,ls),
(436,9,o),
(426,0,o),
(411,0,qs),
(147,0,ls),
(105,0,o),
(71,-21,qs),
(63,-26,o),
(57,-26,qs),
(48,-26,o),
(43,-18,qs),
(33,2,o),
(38,58,o),
(52,76,qs),
(70,100,o),
(106,111,q),
(86,147,o),
(86,186,qs),
(86,256,o),
(129,305,qs),
(179,363,o),
(259,363,qs),
(330,363,o),
(368,319,qs),
(394,291,o),
(394,252,qs),
(394,219,o),
(377,219,qs),
(371,219,o),
(357,226,qs),
(313,248,o),
(278,248,qs),
(210,248,o),
(210,183,qs),
(210,157,o),
(245,121,o),
(270,121,qs),
(336,121,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
21 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 6 1 0 0 5 95 0 5 5 24 5 78 1 0 34 31 28 27 16 14 10 8 6 4 0 40 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,622,qs),
(88,639,o),
(78,639,qs),
(63,639,o),
(50,620,qs),
(38,603,o),
(32,613,qs),
(14,642,o),
(26,669,qs),
(40,699,o),
(74,696,qs),
(88,696,o),
(121,682,qs),
(161,665,o),
(171,665,qs),
(186,665,o),
(199,684,qs),
(211,701,o),
(217,691,qs),
(236,662,o),
(223,634,qs),
(209,605,o),
(176,608,qs),
(161,608,o)
);
},
{
closed = 1;
nodes = (
(52,0,o),
(52,14,qs),
(52,450,ls),
(52,531,o),
(109,549,qs),
(129,556,o),
(158,556,qs),
(170,556,ls),
(185,556,o),
(185,542,qs),
(185,106,ls),
(185,25,o),
(128,6,qs),
(108,0,o),
(79,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
0 1 0 2 3 1 2 105 0 0 6 1 3 5 0 3 105 0 5 5 23 77 7 1 4 4 24 4 78 25 24 0 0 33 30 24 39 25 38 0 23 0 23 39 18 39 8 7 25 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,672,o),
(211,631,qs),
(211,624,ls),
(211,616,o),
(200,616,qs),
(74,616,ls),
(54,616,o),
(37,606,qs),
(33,603,o),
(30,603,qs),
(28,603,o),
(25,607,q),
(21,616,o),
(21,625,qs),
(21,657,o),
(54,667,q),
(44,685,o),
(44,705,qs),
(44,743,o),
(90,791,o),
(125,792,qs),
(154,792,o),
(190,760,o),
(190,734,qs),
(190,721,o),
(185,721,qs),
(183,721,o),
(174,726,qs),
(153,736,o),
(136,736,qs),
(103,736,o),
(103,704,qs),
(103,691,o),
(122,672,o),
(136,672,qs),
(164,672,ls)
);
},
{
closed = 1;
nodes = (
(178,556,o),
(178,542,qs),
(178,106,ls),
(178,25,o),
(121,6,qs),
(101,0,o),
(72,0,qs),
(60,0,ls),
(45,0,o),
(45,14,qs),
(45,450,ls),
(45,531,o),
(102,549,qs),
(122,556,o),
(151,556,qs),
(163,556,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 2 1 1 0 3 1 105 7 1 0 0 4 5 0 4 103 8 1 5 5 23 77 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 7 1 0 0 4 5 0 4 103 8 1 5 5 23 77 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
37 36 1 0 45 42 36 51 37 50 31 28 15 13 10 8 6 4 0 35 1 34 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,448,q),
(134,457,o),
(134,466,qs),
(134,498,o),
(167,508,q),
(157,526,o),
(157,546,qs),
(157,584,o),
(203,632,o),
(238,633,qs),
(267,633,o),
(303,601,o),
(303,576,qs),
(303,562,o),
(298,562,qs),
(296,562,o),
(287,567,qs),
(266,577,o),
(249,577,qs),
(216,577,o),
(216,546,qs),
(216,532,o),
(235,513,o),
(249,513,qs),
(277,513,ls),
(324,513,o),
(324,472,qs),
(324,466,ls),
(324,457,o),
(313,457,qs),
(187,457,ls),
(167,457,o),
(150,447,qs),
(146,444,o),
(143,444,qs),
(141,444,o)
);
},
{
closed = 1;
nodes = (
(420,132,qs),
(420,-32,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(142,-213,o),
(98,-169,qs),
(67,-138,o),
(57,-89,qs),
(54,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(275,-39,o),
(281,2,q),
(250,-10,o),
(218,-10,qs),
(146,-10,o),
(96,40,qs),
(39,97,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(354,397,o),
(397,284,qs),
(420,227,o)
);
},
{
closed = 1;
nodes = (
(281,133,q),
(281,135,o),
(281,139,qs),
(282,146,o),
(282,149,qs),
(283,209,o),
(275,233,qs),
(262,271,o),
(228,271,qs),
(205,271,o),
(176,231,o),
(176,197,qs),
(176,119,o),
(231,119,qs),
(262,119,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
30 1 0 1 78 1 10 11 48 1 6 10 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 8 1 7 0 9 7 9 101 12 1 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 7 6 8 7 128 0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 12 1 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 12 1 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 12 1 10 0 6 8 10 6 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
70 69 75 73 69 83 70 83 63 61 35 35 38 43 35 34 35 51 51 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,450,ls),
(44,531,o),
(102,549,qs),
(121,556,o),
(151,556,qs),
(162,556,ls),
(178,556,o),
(178,542,qs),
(178,106,ls),
(178,25,o),
(121,6,qs),
(101,0,o),
(72,0,qs),
(60,0,ls)
);
},
{
closed = 1;
nodes = (
(205,-178,o),
(205,-219,qs),
(205,-226,ls),
(205,-235,o),
(194,-235,qs),
(68,-235,ls),
(48,-235,o),
(31,-245,qs),
(27,-248,o),
(24,-248,qs),
(22,-248,o),
(19,-243,qs),
(15,-235,o),
(15,-226,qs),
(15,-193,o),
(48,-183,q),
(38,-166,o),
(38,-146,qs),
(38,-108,o),
(84,-59,o),
(119,-59,qs),
(148,-58,o),
(184,-91,o),
(184,-116,qs),
(184,-129,o),
(179,-129,qs),
(178,-129,o),
(172,-127,qs),
(168,-125,ls),
(143,-114,o),
(130,-114,qs),
(97,-114,o),
(97,-146,qs),
(97,-160,o),
(116,-178,o),
(130,-178,qs),
(158,-178,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
28 1 2 3 36 1 5 2 2 76 0 4 0 3 2 4 3 106 7 1 2 0 5 2 5 99 0 1 1 23 77 6 1 0 0 24 0 78 17 16 1 0 48 45 32 30 22 20 16 52 17 51 9 6 0 15 1 14 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,311,qs),
(42,319,o),
(42,328,qs),
(42,361,o),
(76,371,q),
(66,388,o),
(66,408,qs),
(66,446,o),
(111,495,o),
(147,495,qs),
(175,495,o),
(212,463,o),
(212,438,qs),
(212,424,o),
(207,424,qs),
(204,424,o),
(195,429,qs),
(174,439,o),
(157,439,qs),
(125,439,o),
(125,408,qs),
(125,394,o),
(143,376,o),
(157,376,qs),
(185,376,ls),
(232,376,o),
(232,334,qs),
(232,328,ls),
(232,319,o),
(221,319,qs),
(95,319,ls),
(75,319,o),
(58,309,qs),
(54,306,o),
(52,306,qs),
(49,306,o)
);
},
{
closed = 1;
nodes = (
(646,28,qs),
(637,-75,o),
(560,-141,qs),
(474,-214,o),
(343,-214,qs),
(209,-214,o),
(125,-140,qs),
(39,-64,o),
(39,48,qs),
(39,115,o),
(75,170,qs),
(115,231,o),
(178,251,qs),
(189,254,o),
(194,254,qs),
(210,254,o),
(210,238,qs),
(210,232,o),
(203,221,qs),
(167,162,o),
(167,81,qs),
(167,6,o),
(207,-37,qs),
(253,-88,o),
(343,-88,qs),
(400,-88,o),
(483,-42,o),
(502,-1,qs),
(510,17,o),
(476,28,qs),
(455,36,o),
(431,41,qs),
(272,77,o),
(272,204,qs),
(272,280,o),
(318,334,qs),
(373,397,o),
(462,397,qs),
(545,397,o),
(586,347,qs),
(611,317,o),
(611,276,qs),
(611,239,o),
(591,238,qs),
(584,238,o),
(573,245,qs),
(530,271,o),
(485,271,qs),
(449,271,o),
(407,236,o),
(407,206,qs),
(407,179,o),
(474,161,qs),
(543,142,o),
(581,123,qs),
(651,87,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 5 6 5 9 6 128 0 6 8 5 6 8 126 0 4 3 1 2 1 4 2 105 0 0 5 1 0 87 7 1 1 0 5 9 1 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 9 5 6 5 9 6 128 0 6 8 5 6 8 126 0 4 3 1 2 7 4 2 105 0 1 0 0 5 1 0 103 0 7 0 5 9 7 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 3 2 7 2 3 7 128 0 9 5 6 5 9 6 128 0 6 8 5 6 8 126 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 7 0 5 9 7 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
87 85 76 75 67 65 54 52 48 46 44 42 35 34 35 51 51 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,450,ls),
(44,531,o),
(101,549,qs),
(121,556,o),
(150,556,qs),
(162,556,ls),
(177,556,o),
(177,542,qs),
(177,106,ls),
(177,25,o),
(120,6,qs),
(100,0,o),
(71,0,qs),
(60,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 9 6 0 15 1 14 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(162,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls)
);
},
{
closed = 1;
nodes = (
(452,-98,o),
(452,-126,qs),
(452,-154,o),
(415,-192,o),
(387,-192,qs),
(360,-192,o),
(322,-154,o),
(322,-126,qs),
(322,-98,o),
(360,-61,o),
(387,-61,qs),
(415,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 1 3 133 0 1 0 1 133 7 1 4 0 5 4 5 101 6 1 0 0 2 96 0 2 2 24 2 78 39 38 1 0 45 43 38 49 39 49 31 28 23 20 11 10 0 37 1 36 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,578,o),
(57,604,qs),
(57,631,o),
(94,668,o),
(120,668,qs),
(146,668,o),
(182,631,o),
(182,604,qs),
(182,578,o),
(146,541,o),
(120,541,qs),
(94,541,o)
);
},
{
closed = 1;
nodes = (
(195,578,o),
(195,604,qs),
(195,631,o),
(232,668,o),
(258,668,qs),
(284,668,o),
(320,631,o),
(320,604,qs),
(320,578,o),
(284,541,o),
(258,541,qs),
(232,541,o)
);
},
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
55 38 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
51 50 13 12 1 0 50 61 51 61 45 43 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,412,o),
(256,438,qs),
(256,465,o),
(292,502,o),
(318,502,qs),
(344,502,o),
(380,465,o),
(380,438,qs),
(380,412,o),
(344,375,o),
(318,375,qs),
(292,375,o)
);
},
{
closed = 1;
nodes = (
(393,412,o),
(393,438,qs),
(393,465,o),
(430,502,o),
(456,502,qs),
(482,502,o),
(518,465,o),
(518,438,qs),
(518,412,o),
(482,375,o),
(456,375,qs),
(430,375,o)
);
},
{
closed = 1;
nodes = (
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 7 1 0 1 7 0 128 0 5 0 4 0 5 4 128 3 1 1 9 2 8 3 0 5 1 0 105 10 1 4 4 6 96 0 6 6 24 6 78 25 24 13 12 1 0 55 52 47 44 35 34 24 61 25 60 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,537,o),
(330,561,qs),
(330,585,o),
(363,618,o),
(386,618,qs),
(410,618,o),
(443,584,o),
(443,561,qs),
(443,537,o),
(409,503,o),
(386,503,qs),
(363,503,o)
);
},
{
closed = 1;
nodes = (
(255,411,o),
(255,437,qs),
(255,464,o),
(291,501,o),
(317,501,qs),
(343,501,o),
(380,464,o),
(380,437,qs),
(380,411,o),
(343,374,o),
(317,374,qs),
(291,374,o)
);
},
{
closed = 1;
nodes = (
(393,411,o),
(393,437,qs),
(393,464,o),
(429,501,o),
(455,501,qs),
(481,501,o),
(517,464,o),
(517,437,qs),
(517,411,o),
(481,374,o),
(455,374,qs),
(429,374,o)
);
},
{
closed = 1;
nodes = (
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
0 9 3 2 3 9 2 128 0 7 2 6 2 7 6 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 13 1 6 6 8 96 0 8 8 24 8 78 37 36 25 24 13 12 1 0 67 64 59 56 47 46 36 73 37 72 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,-271,qs),
(39,-202,o),
(41,-97,qs),
(41,-1,o),
(101,61,qs),
(170,133,o),
(288,133,qs),
(381,133,l),
(371,147,o),
(358,176,qs),
(353,188,o),
(350,194,qs),
(315,271,o),
(252,271,qs),
(218,271,o),
(186,258,qs),
(161,247,o),
(139,227,qs),
(127,216,o),
(118,216,qs),
(106,216,o),
(103,231,qs),
(101,239,o),
(102,253,qs),
(108,314,o),
(158,357,qs),
(204,397,o),
(273,397,qs),
(424,397,o),
(489,217,qs),
(506,168,o),
(522,149,qs),
(533,136,o),
(549,134,qs),
(559,132,o),
(565,127,o),
(565,117,qs),
(565,70,o),
(538,39,qs),
(505,1,o),
(442,0,qs),
(289,0,ls),
(244,0,o),
(185,-58,o),
(185,-102,qs),
(185,-152,o),
(221,-180,qs),
(253,-206,o),
(304,-206,qs),
(322,-206,o),
(332,-204,qs),
(336,-203,ls),
(347,-201,o),
(350,-201,qs),
(367,-201,o),
(366,-223,qs),
(365,-273,o),
(327,-301,qs),
(294,-324,o),
(240,-324,qs),
(172,-324,o)
);
},
{
closed = 1;
nodes = (
(374,-145,o),
(374,-119,qs),
(374,-94,o),
(409,-59,o),
(434,-59,qs),
(459,-59,o),
(494,-94,o),
(494,-119,qs),
(494,-146,o),
(458,-182,o),
(432,-182,qs),
(408,-182,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 7 6 5 7 128 0 4 0 6 5 4 6 105 0 9 11 1 8 1 9 8 105 2 1 1 10 1 0 1 0 101 0 7 7 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 6 7 6 5 7 128 0 1 8 2 8 1 2 128 0 4 0 6 5 4 6 105 0 9 11 1 8 1 9 8 105 0 2 10 1 0 2 0 101 0 7 7 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
62 61 1 0 68 66 61 72 62 72 54 52 47 45 41 39 33 31 20 17 12 10 6 5 0 60 1 60 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(379,133,l),
(369,147,o),
(356,176,qs),
(351,189,o),
(348,194,q),
(314,271,o),
(251,271,qs),
(216,271,o),
(185,258,qs),
(159,247,o),
(137,227,qs),
(125,216,o),
(116,216,qs),
(104,216,o),
(101,231,qs),
(100,239,o),
(101,253,qs),
(107,314,o),
(156,357,qs),
(202,397,o),
(271,397,qs),
(422,397,o),
(487,217,qs),
(504,168,o),
(520,149,qs),
(531,136,o),
(547,134,qs),
(558,132,o),
(563,127,o),
(563,117,qs),
(563,70,o),
(536,39,qs),
(503,1,o),
(441,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(388,-197,qs),
(410,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-263,o),
(405,-303,qs),
(354,-331,o),
(281,-331,qs),
(182,-331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
0 5 6 7 6 5 7 128 0 1 3 2 3 1 2 128 0 4 0 6 5 4 6 105 0 2 8 1 0 2 0 101 0 7 7 3 95 0 3 3 24 3 78 1 0 57 55 50 48 44 42 36 34 23 20 15 13 6 5 0 63 1 63 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,543,o),
(333,515,qs),
(333,487,o),
(296,449,o),
(269,449,qs),
(242,449,o),
(204,487,o),
(204,515,qs),
(204,543,o),
(242,581,o),
(269,581,qs),
(296,581,o)
);
},
{
closed = 1;
nodes = (
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(379,133,l),
(369,147,o),
(356,176,qs),
(351,189,o),
(348,194,q),
(314,271,o),
(251,271,qs),
(216,271,o),
(185,258,qs),
(159,247,o),
(137,227,qs),
(125,216,o),
(116,216,qs),
(104,216,o),
(101,231,qs),
(100,239,o),
(101,253,qs),
(107,314,o),
(156,357,qs),
(202,397,o),
(271,397,qs),
(422,397,o),
(487,217,qs),
(504,168,o),
(520,149,qs),
(531,136,o),
(547,134,qs),
(558,132,o),
(563,127,o),
(563,117,qs),
(563,70,o),
(536,39,qs),
(503,1,o),
(441,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(388,-197,qs),
(410,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-263,o),
(405,-303,qs),
(354,-331,o),
(281,-331,qs),
(182,-331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
0 7 8 9 8 7 9 128 0 3 5 4 5 3 4 128 10 1 0 0 1 6 0 1 105 0 6 0 8 7 6 8 105 0 4 11 1 2 4 2 101 0 9 9 5 95 0 5 5 24 5 78 13 12 1 0 69 67 62 60 56 54 48 46 35 32 27 25 18 17 12 75 13 75 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o),
(337,345,qs),
(390,288,o),
(390,192,qs),
(390,114,o),
(342,61,qs),
(288,0,o),
(198,0,qs),
(60,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
12 1 2 1 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
12 1 3 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 3 1 2 4 1 2 105 0 4 4 0 95 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 28 25 21 19 14 13 9 7 0 35 1 34 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,536,o),
(221,508,qs),
(221,480,o),
(184,442,o),
(156,442,qs),
(129,442,o),
(91,480,o),
(91,508,qs),
(91,535,o),
(129,573,o),
(156,573,qs),
(184,573,o)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o),
(337,345,qs),
(390,288,o),
(390,192,qs),
(390,114,o),
(342,61,qs),
(288,0,o),
(198,0,qs),
(60,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
24 1 4 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
24 1 5 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 5 1 4 6 3 4 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 40 37 33 31 26 25 21 19 12 47 13 46 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 3 133 1 4 2 0 2 2 0 89 1 4 2 0 0 2 97 0 2 0 2 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 97 0 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 16 11 9 5 3 0 25 1 25 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,523,o),
(240,495,qs),
(240,467,o),
(202,429,o),
(175,429,qs),
(148,429,o),
(110,467,o),
(110,495,qs),
(110,523,o),
(148,561,o),
(175,561,qs),
(203,561,o)
);
},
{
closed = 1;
nodes = (
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 1 2 1 5 2 128 3 7 2 2 0 4 2 4 101 0 1 1 0 97 6 1 0 0 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 7 1 2 0 4 2 4 101 0 1 1 0 97 6 1 0 0 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
13 12 1 0 31 28 23 21 17 15 12 37 13 37 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1072,378,o),
(1072,364,qs),
(1072,186,ls),
(1072,102,o),
(1030,51,qs),
(981,-10,o),
(884,-10,qs),
(809,-10,o),
(761,27,q),
(716,-10,o),
(653,-10,qs),
(612,-10,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,240,ls),
(450,321,o),
(507,339,qs),
(527,346,o),
(556,346,qs),
(567,346,ls),
(583,346,o),
(583,332,qs),
(583,188,ls),
(583,119,o),
(638,119,qs),
(694,119,o),
(694,188,qs),
(694,256,ls),
(694,336,o),
(751,355,qs),
(771,361,o),
(800,361,qs),
(812,361,ls),
(827,361,o),
(827,347,qs),
(827,188,ls),
(827,119,o),
(882,119,qs),
(938,119,o),
(938,188,qs),
(938,272,ls),
(938,353,o),
(996,372,qs),
(1015,378,o),
(1045,378,qs),
(1056,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 59 2 8 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
2 10 2 0 4 0 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 102 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
10 1 0 2 0 133 4 1 2 6 2 133 0 6 1 6 133 0 5 0 7 5 7 102 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 102 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 106 0 5 7 7 5 89 0 5 5 7 98 0 7 5 7 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 66 64 62 60 56 54 45 44 36 34 27 24 21 19 14 11 8 6 0 72 1 71 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1116;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,578,o),
(701,602,qs),
(701,626,o),
(734,659,o),
(757,659,qs),
(781,659,o),
(814,625,o),
(814,602,qs),
(814,578,o),
(780,544,o),
(757,544,qs),
(734,544,o)
);
},
{
closed = 1;
nodes = (
(626,452,o),
(626,478,qs),
(626,505,o),
(662,542,o),
(688,542,qs),
(714,542,o),
(751,505,o),
(751,478,qs),
(751,452,o),
(714,415,o),
(688,415,qs),
(662,415,o)
);
},
{
closed = 1;
nodes = (
(800,542,o),
(826,542,qs),
(852,542,o),
(888,505,o),
(888,478,qs),
(888,452,o),
(852,415,o),
(826,415,qs),
(800,415,o),
(764,452,o),
(764,478,qs),
(764,505,o)
);
},
{
closed = 1;
nodes = (
(1072,378,o),
(1072,364,qs),
(1072,186,ls),
(1072,102,o),
(1030,51,qs),
(981,-10,o),
(884,-10,qs),
(809,-10,o),
(761,27,q),
(716,-10,o),
(653,-10,qs),
(612,-10,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,240,ls),
(450,321,o),
(507,339,qs),
(527,346,o),
(556,346,qs),
(567,346,ls),
(583,346,o),
(583,332,qs),
(583,188,ls),
(583,119,o),
(638,119,qs),
(694,119,o),
(694,188,qs),
(694,256,ls),
(694,336,o),
(751,355,qs),
(771,361,o),
(800,361,qs),
(812,361,ls),
(827,361,o),
(827,347,qs),
(827,188,ls),
(827,119,o),
(882,119,qs),
(938,119,o),
(938,188,qs),
(938,272,ls),
(938,353,o),
(996,372,qs),
(1015,378,o),
(1045,378,qs),
(1056,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
99 95 2 14 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
8 18 2 6 2 10 2 6 10 128 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 0 11 0 13 11 13 102 4 17 2 2 2 3 97 5 1 3 3 23 77 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
18 1 6 2 8 2 6 8 128 10 1 8 12 2 8 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 0 11 0 13 11 13 102 4 17 2 2 2 3 97 5 1 3 3 23 77 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 0 11 0 13 11 13 102 4 17 2 2 2 3 97 5 1 3 3 23 77 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 102 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 106 0 11 13 13 11 89 0 11 11 13 98 0 13 11 13 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
37 36 13 12 1 0 102 100 98 96 92 90 81 80 72 70 63 60 57 55 50 47 44 42 36 108 37 107 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1116;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1138,343,qs),
(1198,286,o),
(1198,193,qs),
(1198,111,o),
(1149,58,qs),
(1095,0,o),
(1010,0,qs),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,135,o),
(636,133,q),
(680,245,o),
(762,314,qs),
(860,397,o),
(988,397,qs),
(1081,397,o)
);
},
{
closed = 1;
nodes = (
(1029,133,o),
(1062,171,o),
(1062,201,qs),
(1062,234,o),
(1018,271,o),
(980,271,qs),
(856,271,o),
(783,133,q),
(1003,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 7 1 7 4 1 128 2 9 2 0 0 7 4 0 7 105 0 3 0 5 3 5 102 10 8 2 1 1 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 102 10 8 2 1 1 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
54 54 1 0 54 62 54 61 57 55 47 44 40 38 29 28 20 18 11 8 5 4 0 53 1 53 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1237;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(886,486,o),
(886,513,qs),
(886,541,o),
(924,579,o),
(951,579,qs),
(979,579,o),
(1016,541,o),
(1016,513,qs),
(1016,485,o),
(978,447,o),
(951,447,qs),
(924,447,o)
);
},
{
closed = 1;
nodes = (
(1138,343,qs),
(1198,286,o),
(1198,193,qs),
(1198,111,o),
(1149,58,qs),
(1095,0,o),
(1010,0,qs),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,135,o),
(636,133,q),
(680,245,o),
(762,314,qs),
(860,397,o),
(988,397,qs),
(1081,397,o)
);
},
{
closed = 1;
nodes = (
(1029,133,o),
(1062,171,o),
(1062,201,qs),
(1062,234,o),
(1018,271,o),
(980,271,qs),
(856,271,o),
(783,133,q),
(1003,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 4 12 2 2 0 9 6 2 9 105 0 5 0 7 5 7 102 13 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 102 13 10 2 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
66 66 13 12 1 0 66 74 66 73 69 67 59 56 52 50 41 40 32 30 23 20 17 16 12 65 13 65 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1237;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,343,qs),
(702,287,o),
(702,193,qs),
(702,111,o),
(653,58,qs),
(599,0,o),
(513,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(154,133,l),
(154,450,ls),
(154,531,o),
(211,549,qs),
(230,556,o),
(260,556,qs),
(271,556,ls),
(287,556,o),
(287,542,qs),
(287,331,l),
(379,397,o),
(491,397,qs),
(585,397,o)
);
},
{
closed = 1;
nodes = (
(532,133,o),
(565,171,o),
(565,201,qs),
(565,234,o),
(521,271,o),
(483,271,qs),
(360,271,o),
(287,133,q),
(506,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 0 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 29 29 1 0 29 37 29 36 32 30 22 19 13 11 7 4 0 28 1 28 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 741;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,487,o),
(392,514,qs),
(392,542,o),
(430,580,o),
(457,580,qs),
(485,580,o),
(522,542,o),
(522,514,qs),
(522,487,o),
(485,448,o),
(457,448,qs),
(430,448,o)
);
},
{
closed = 1;
nodes = (
(642,343,qs),
(702,287,o),
(702,193,qs),
(702,111,o),
(653,58,qs),
(599,0,o),
(513,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(154,133,l),
(154,450,ls),
(154,531,o),
(211,549,qs),
(230,556,o),
(260,556,qs),
(271,556,ls),
(287,556,o),
(287,542,qs),
(287,331,l),
(379,397,o),
(491,397,qs),
(585,397,o)
);
},
{
closed = 1;
nodes = (
(532,133,o),
(565,171,o),
(565,201,qs),
(565,234,o),
(521,271,o),
(483,271,qs),
(360,271,o),
(287,133,q),
(506,133,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 0 3 3 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 41 13 12 1 0 41 49 41 48 44 42 34 31 25 23 19 16 12 40 13 40 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 741;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,-187,qs),
(479,-269,o),
(395,-308,qs),
(346,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,21,o),
(126,86,q),
(81,133,o),
(80,202,qs),
(79,278,o),
(128,333,qs),
(185,397,o),
(274,397,qs),
(337,397,o),
(379,366,qs),
(427,331,o),
(425,272,qs),
(423,239,o),
(405,238,qs),
(398,238,o),
(387,245,qs),
(344,271,o),
(297,271,qs),
(259,271,o),
(216,234,o),
(215,201,qs),
(215,172,o),
(251,133,o),
(280,133,qs),
(366,133,ls),
(417,133,o),
(478,80,o),
(478,36,qs),
(478,24,ls),
(478,9,o),
(468,0,o),
(451,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(354,-206,o),
(387,-197,qs),
(408,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
46 1 1 2 1 76 0 4 3 2 3 4 2 128 8 1 7 1 0 1 7 0 128 0 5 0 3 4 5 3 105 0 0 0 6 0 6 101 0 2 2 1 95 0 1 1 24 1 78 0 0 0 57 0 57 42 36 34 36 53 53 39 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,484,o),
(201,512,qs),
(201,539,o),
(239,577,o),
(266,577,qs),
(294,577,o),
(331,540,o),
(331,512,qs),
(331,484,o),
(293,446,o),
(266,446,qs),
(239,446,o)
);
},
{
closed = 1;
nodes = (
(480,-187,qs),
(479,-269,o),
(395,-308,qs),
(346,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,21,o),
(126,86,q),
(81,133,o),
(80,202,qs),
(79,278,o),
(128,333,qs),
(185,397,o),
(274,397,qs),
(337,397,o),
(379,366,qs),
(427,331,o),
(425,272,qs),
(423,239,o),
(405,238,qs),
(398,238,o),
(387,245,qs),
(344,271,o),
(297,271,qs),
(259,271,o),
(216,234,o),
(215,201,qs),
(215,172,o),
(251,133,o),
(280,133,qs),
(366,133,ls),
(417,133,o),
(478,80,o),
(478,36,qs),
(478,24,ls),
(478,9,o),
(468,0,o),
(451,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(354,-206,o),
(387,-197,qs),
(408,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
58 1 3 4 1 76 0 6 5 4 5 6 4 128 11 1 9 3 2 3 9 2 128 0 1 10 1 0 7 1 0 105 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 0 4 4 3 95 0 3 3 24 3 78 12 12 1 0 12 69 12 69 65 63 53 51 47 45 43 41 37 34 29 26 21 19 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,0,l),
(0,0,l),
(0,133,l),
(116,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(572,484,o),
(572,512,qs),
(572,539,o),
(610,577,o),
(637,577,qs),
(665,577,o),
(702,540,o),
(702,512,qs),
(702,484,o),
(665,446,o),
(637,446,qs),
(610,446,o)
);
},
{
closed = 1;
nodes = (
(764,351,qs),
(826,296,o),
(826,198,qs),
(826,114,o),
(778,60,qs),
(726,1,o),
(640,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(462,133,l),
(449,167,o),
(448,198,qs),
(448,283,o),
(497,337,qs),
(550,397,o),
(637,397,qs),
(712,397,o)
);
},
{
closed = 1;
nodes = (
(690,173,o),
(690,203,qs),
(690,233,o),
(660,271,o),
(638,271,qs),
(615,271,o),
(585,232,o),
(585,203,qs),
(585,173,o),
(615,133,o),
(638,133,qs),
(660,133,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 4 2 7 2 4 7 128 0 1 8 1 0 2 1 0 105 9 1 2 0 7 3 2 7 105 10 6 2 3 3 5 96 0 5 5 24 5 78 50 49 13 12 1 0 56 54 49 60 50 60 42 39 30 29 20 18 12 48 13 48 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,485,o),
(335,511,qs),
(335,538,o),
(371,574,o),
(397,574,qs),
(423,574,o),
(459,538,o),
(459,511,qs),
(459,485,o),
(423,448,o),
(397,448,qs),
(371,448,o)
);
},
{
closed = 1;
nodes = (
(472,485,o),
(472,511,qs),
(472,538,o),
(509,574,o),
(535,574,qs),
(561,574,o),
(597,538,o),
(597,511,qs),
(597,485,o),
(561,448,o),
(535,448,qs),
(509,448,o)
);
},
{
closed = 1;
nodes = (
(659,126,qs),
(659,-5,o),
(613,-81,qs),
(575,-143,o),
(510,-177,qs),
(439,-215,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(431,-88,o),
(476,-45,qs),
(495,-26,o),
(506,-3,q),
(481,-10,o),
(456,-10,qs),
(383,-10,o),
(334,40,qs),
(276,97,o),
(276,190,qs),
(276,282,o),
(325,337,qs),
(377,397,o),
(466,397,qs),
(595,397,o),
(638,284,qs),
(659,233,o)
);
},
{
closed = 1;
nodes = (
(468,119,qs),
(504,119,o),
(522,136,q),
(523,141,o),
(523,149,qs),
(524,197,o),
(512,233,qs),
(499,271,o),
(466,271,qs),
(442,271,o),
(413,231,o),
(413,197,qs),
(413,119,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 9 10 9 7 10 128 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 10 0 5 6 10 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 80 78 72 70 61 59 50 49 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 694;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(715,556,o),
(715,542,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,450,ls),
(582,531,o),
(639,549,qs),
(659,556,o),
(688,556,qs),
(700,556,ls)
);
},
{
closed = 1;
nodes = (
(275,267,qs),
(271,274,o),
(271,287,qs),
(271,324,o),
(311,334,q),
(296,356,o),
(296,377,qs),
(296,417,o),
(349,473,o),
(388,473,qs),
(422,474,o),
(465,441,o),
(465,414,qs),
(465,396,o),
(456,396,qs),
(452,396,o),
(441,402,qs),
(423,412,o),
(401,412,qs),
(361,412,o),
(361,377,qs),
(361,361,o),
(387,338,o),
(405,338,qs),
(436,338,ls),
(487,338,o),
(487,293,qs),
(487,288,ls),
(487,276,o),
(475,276,qs),
(332,276,ls),
(308,276,o),
(293,268,qs),
(287,264,ls),
(284,262,o),
(281,262,qs),
(277,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
69 1 2 7 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
69 1 2 6 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 8 1 7 2 9 7 105 6 1 2 5 11 2 4 1 2 4 105 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 6 4 6 2 4 128 0 9 8 1 7 6 9 7 105 0 6 5 11 2 4 1 6 4 105 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 7 6 7 8 6 128 0 2 6 4 6 2 4 128 0 9 0 7 8 9 7 105 0 6 5 11 2 4 1 6 4 105 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 2 6 5 6 2 5 128 11 1 4 5 1 5 4 1 128 0 9 0 7 8 9 7 105 0 6 0 5 4 6 5 103 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
39 38 1 0 65 63 60 58 56 54 51 48 45 42 38 74 39 74 31 28 19 18 9 6 0 37 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 102 0 1 1 23 1 78 1 0 27 26 18 16 9 6 0 36 1 36 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,327,qs),
(576,267,o),
(576,187,qs),
(576,103,o),
(533,51,qs),
(482,-10,o),
(385,-10,qs),
(311,-10,o),
(237,26,q),
(215,26,ls),
(188,26,o),
(165,-1,o),
(165,-33,qs),
(165,-183,ls),
(165,-264,o),
(108,-283,qs),
(88,-289,o),
(59,-289,qs),
(48,-289,ls),
(32,-289,o),
(32,-275,qs),
(32,-31,ls),
(32,129,o),
(167,155,q),
(175,165,o),
(189,194,qs),
(195,208,o),
(198,214,qs),
(250,321,o),
(329,397,o),
(390,397,qs),
(484,397,o)
);
},
{
closed = 1;
nodes = (
(439,153,o),
(439,189,qs),
(439,271,o),
(398,271,qs),
(384,271,o),
(357,233,o),
(330,174,qs),
(319,150,o),
(310,138,q),
(358,116,o),
(392,119,qs),
(417,121,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 2 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 5 1 0 0 4 2 0 4 105 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 4 3 4 2 3 128 0 3 1 4 3 1 126 0 1 1 132 5 1 0 4 4 0 89 5 1 0 0 4 97 0 4 0 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 40 38 25 23 22 20 14 11 0 31 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 614;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,422,o),
(372,394,qs),
(372,366,o),
(335,328,o),
(307,328,qs),
(280,328,o),
(242,366,o),
(242,394,qs),
(242,422,o),
(280,459,o),
(307,459,qs),
(335,459,o)
);
},
{
closed = 1;
nodes = (
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 98 7 1 2 4 2 82 13 12 1 0 39 38 30 28 21 18 12 48 13 48 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
31 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 37 27 37 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,132,qs),
(420,-32,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(142,-213,o),
(98,-169,qs),
(67,-138,o),
(57,-89,qs),
(54,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(275,-39,o),
(281,2,q),
(250,-10,o),
(218,-10,qs),
(146,-10,o),
(96,40,qs),
(39,97,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(354,397,o),
(397,284,qs),
(420,227,o)
);
},
{
closed = 1;
nodes = (
(281,133,q),
(281,135,o),
(281,139,qs),
(282,146,o),
(282,149,qs),
(283,209,o),
(275,233,qs),
(262,271,o),
(228,271,qs),
(205,271,o),
(176,231,o),
(176,197,qs),
(176,119,o),
(231,119,qs),
(262,119,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 5 6 12 1 1 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 6 5 0 6 105 3 1 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 7 1 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
34 33 39 37 33 47 34 47 36 35 35 38 33 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,-140,qs),
(39,-64,o),
(39,48,qs),
(39,115,o),
(75,170,qs),
(115,231,o),
(178,251,qs),
(189,254,o),
(194,254,qs),
(210,254,o),
(210,238,qs),
(210,232,o),
(203,221,qs),
(167,162,o),
(167,81,qs),
(167,6,o),
(207,-37,qs),
(253,-88,o),
(343,-88,qs),
(400,-88,o),
(483,-42,o),
(502,-1,qs),
(510,17,o),
(476,28,qs),
(455,36,o),
(431,41,qs),
(272,77,o),
(272,204,qs),
(272,280,o),
(318,334,qs),
(373,397,o),
(462,397,qs),
(545,397,o),
(586,347,qs),
(611,317,o),
(611,276,qs),
(611,239,o),
(591,238,qs),
(584,238,o),
(573,245,qs),
(530,271,o),
(485,271,qs),
(449,271,o),
(407,236,o),
(407,206,qs),
(407,179,o),
(474,161,qs),
(543,142,o),
(581,123,qs),
(651,87,o),
(646,28,qs),
(637,-75,o),
(560,-141,qs),
(474,-214,o),
(343,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 5 1 2 1 5 2 128 0 2 4 1 2 4 126 0 3 0 1 5 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 46 45 37 35 24 22 18 16 14 12 0 55 1 55 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,-140,qs),
(39,-64,o),
(39,48,qs),
(39,115,o),
(75,170,qs),
(115,231,o),
(178,251,qs),
(189,254,o),
(194,254,qs),
(210,254,o),
(210,238,qs),
(210,232,o),
(203,221,qs),
(167,162,o),
(167,81,qs),
(167,6,o),
(207,-37,qs),
(253,-88,o),
(343,-88,qs),
(400,-88,o),
(483,-42,o),
(502,-1,qs),
(510,17,o),
(476,28,qs),
(456,35,o),
(431,41,qs),
(272,77,o),
(272,204,qs),
(272,280,o),
(318,334,qs),
(373,397,o),
(462,397,qs),
(545,397,o),
(586,347,qs),
(611,317,o),
(611,276,qs),
(611,239,o),
(591,238,qs),
(584,238,o),
(573,245,qs),
(530,271,o),
(485,271,qs),
(449,271,o),
(407,236,o),
(407,206,qs),
(407,179,o),
(474,161,qs),
(543,142,o),
(581,123,qs),
(651,87,o),
(646,28,qs),
(637,-75,o),
(560,-141,qs),
(474,-214,o),
(343,-214,qs),
(209,-214,o)
);
},
{
closed = 1;
nodes = (
(335,-294,o),
(335,-321,qs),
(335,-347,o),
(299,-384,o),
(273,-384,qs),
(247,-384,o),
(211,-347,o),
(211,-321,qs),
(211,-294,o),
(247,-257,o),
(273,-257,qs),
(299,-257,o)
);
},
{
closed = 1;
nodes = (
(473,-294,o),
(473,-321,qs),
(473,-347,o),
(437,-384,o),
(411,-384,qs),
(385,-384,o),
(348,-347,o),
(348,-321,qs),
(348,-294,o),
(385,-257,o),
(411,-257,qs),
(437,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 5 1 2 1 5 2 128 0 2 4 1 2 4 126 0 3 0 1 5 3 1 105 0 4 10 1 0 6 4 0 105 12 8 11 3 6 7 7 6 89 12 8 11 3 6 6 7 97 9 1 7 6 7 81 69 68 57 56 1 0 75 73 68 79 69 79 63 61 56 67 57 67 46 45 37 35 24 22 18 16 14 12 0 55 1 55 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,762,o),
(199,721,qs),
(199,714,ls),
(199,706,o),
(188,706,qs),
(61,706,ls),
(41,706,o),
(24,696,qs),
(20,693,o),
(17,693,qs),
(15,693,o),
(12,697,q),
(8,706,o),
(8,715,qs),
(8,762,o),
(67,762,qs),
(152,762,ls)
);
},
{
closed = 1;
nodes = (
(199,670,o),
(199,629,qs),
(199,622,ls),
(199,613,o),
(188,613,qs),
(61,613,ls),
(41,613,o),
(24,603,qs),
(20,601,o),
(17,601,qs),
(15,601,o),
(12,605,q),
(8,614,o),
(8,623,qs),
(8,669,o),
(67,669,qs),
(152,670,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 18 17 1 0 29 26 17 33 18 32 12 9 0 16 1 15 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,526,q),
(244,498,o),
(213,476,qs),
(207,472,o),
(202,477,qs),
(185,493,l),
(153,469,ls),
(135,456,o),
(115,456,qs),
(100,456,o),
(79,479,q),
(70,492,o),
(63,492,qs),
(56,492,o),
(44,468,q),
(40,455,o),
(30,466,q),
(12,491,o),
(23,519,qs),
(33,548,o),
(63,548,qs),
(84,548,o),
(108,525,qs),
(109,524,ls),
(120,513,o),
(125,513,qs),
(129,513,o),
(133,517,q),
(149,528,l),
(124,555,o),
(124,581,qs),
(124,609,o),
(161,644,o),
(192,644,qs),
(222,643,o),
(259,607,o),
(259,579,qs),
(259,552,o)
);
},
{
closed = 1;
nodes = (
(210,581,qs),
(210,599,o),
(193,599,qs),
(174,599,o),
(174,581,qs),
(174,569,o),
(190,554,q),
(210,569,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
36 8 2 1 2 31 1 3 1 2 76 0 0 0 5 2 0 5 105 0 1 3 4 1 89 0 2 0 3 4 2 3 105 0 1 1 4 97 0 4 1 4 81 44 34 38 35 38 34 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,-57,o),
(198,-98,qs),
(198,-105,ls),
(198,-114,o),
(187,-114,qs),
(60,-114,ls),
(40,-114,o),
(23,-124,qs),
(19,-127,o),
(16,-127,qs),
(14,-127,o),
(11,-122,qs),
(7,-113,o),
(7,-104,qs),
(7,-58,o),
(66,-58,qs),
(151,-57,ls)
);
},
{
closed = 1;
nodes = (
(198,-149,o),
(198,-191,qs),
(198,-197,ls),
(198,-206,o),
(187,-206,qs),
(60,-206,ls),
(40,-206,o),
(23,-216,qs),
(19,-219,o),
(16,-219,qs),
(14,-219,o),
(11,-214,qs),
(7,-206,o),
(7,-197,qs),
(7,-150,o),
(66,-150,qs),
(151,-149,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 18 17 1 0 29 26 17 33 18 32 12 9 0 16 1 15 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,670,o),
(199,629,qs),
(199,622,ls),
(199,613,o),
(188,613,qs),
(61,613,ls),
(41,613,o),
(24,603,qs),
(20,601,o),
(17,601,qs),
(15,601,o),
(12,605,q),
(8,614,o),
(8,623,qs),
(8,669,o),
(67,669,qs),
(152,670,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 12 9 0 16 1 15 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,528,q),
(190,500,o),
(160,478,q),
(154,475,o),
(148,480,qs),
(132,496,l),
(122,490,o),
(109,480,qs),
(91,468,o),
(86,464,qs),
(73,456,o),
(58,456,qs),
(35,456,o),
(23,473,q),
(21,477,ls),
(18,481,o),
(22,484,qs),
(33,490,o),
(77,521,qs),
(94,532,l),
(71,558,o),
(71,583,qs),
(71,612,o),
(108,647,o),
(138,647,qs),
(169,646,o),
(206,610,o),
(206,582,qs),
(206,555,o)
);
},
{
closed = 1;
nodes = (
(156,583,qs),
(156,602,o),
(140,602,qs),
(121,602,o),
(121,583,qs),
(121,572,o),
(136,557,q),
(156,572,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
27 22 8 3 1 2 1 76 0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 47 43 34 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,-57,o),
(198,-98,qs),
(198,-105,ls),
(198,-114,o),
(187,-114,qs),
(60,-114,ls),
(40,-114,o),
(23,-124,qs),
(19,-127,o),
(16,-127,qs),
(14,-127,o),
(11,-122,qs),
(7,-113,o),
(7,-104,qs),
(7,-58,o),
(66,-58,qs),
(151,-57,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 12 9 0 16 1 15 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,497,o),
(3,526,qs),
(3,556,o),
(42,594,o),
(72,594,qs),
(102,594,o),
(141,556,o),
(141,526,qs),
(141,497,o),
(102,459,o),
(72,459,qs),
(42,459,o)
);
},
{
closed = 1;
nodes = (
(92,526,qs),
(92,549,o),
(72,549,qs),
(52,549,o),
(52,526,qs),
(52,504,o),
(72,504,qs),
(92,504,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 0 3 114 5 1 2 0 1 2 112 0 1 3 0 1 90 0 1 1 0 97 4 1 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 1 2 1 3 2 128 5 1 2 0 1 2 0 126 0 1 3 0 1 90 0 1 1 0 97 4 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 17 15 12 19 13 19 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,621,qs),
(75,638,o),
(65,638,qs),
(50,638,o),
(37,619,qs),
(25,603,o),
(19,613,qs),
(1,641,o),
(13,669,qs),
(27,698,o),
(61,696,qs),
(75,696,o),
(108,682,qs),
(148,664,o),
(158,664,qs),
(173,664,o),
(186,683,qs),
(198,700,o),
(204,690,qs),
(223,662,o),
(210,634,qs),
(196,605,o),
(163,607,qs),
(148,607,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 1 3 0 1 89 0 2 0 3 0 2 3 105 0 1 1 0 97 4 1 0 1 0 81 1 0 21 19 13 11 9 7 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,668,o),
(216,627,qs),
(216,621,ls),
(216,612,o),
(205,612,qs),
(79,612,ls),
(59,612,o),
(42,602,qs),
(38,599,o),
(35,599,qs),
(33,599,o),
(30,603,q),
(26,612,o),
(26,621,qs),
(26,653,o),
(59,663,q),
(49,681,o),
(49,701,qs),
(49,739,o),
(95,787,o),
(130,788,qs),
(159,788,o),
(195,756,o),
(195,731,qs),
(195,717,o),
(190,717,qs),
(188,717,o),
(179,722,qs),
(158,732,o),
(141,732,qs),
(108,732,o),
(108,701,qs),
(108,687,o),
(127,668,o),
(141,668,qs),
(169,668,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
19 1 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 1 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 31 28 15 13 10 8 6 4 0 35 1 34 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,-178,o),
(206,-219,qs),
(206,-226,ls),
(206,-235,o),
(195,-235,qs),
(69,-235,ls),
(49,-235,o),
(32,-245,qs),
(28,-248,o),
(25,-248,qs),
(23,-248,o),
(20,-243,qs),
(16,-235,o),
(16,-226,qs),
(16,-193,o),
(49,-183,q),
(39,-166,o),
(39,-146,qs),
(39,-108,o),
(85,-59,o),
(120,-59,qs),
(149,-58,o),
(185,-91,o),
(185,-116,qs),
(185,-129,o),
(180,-129,qs),
(179,-129,o),
(173,-127,qs),
(169,-125,ls),
(144,-114,o),
(131,-114,qs),
(98,-114,o),
(98,-146,qs),
(98,-160,o),
(117,-178,o),
(131,-178,qs),
(159,-178,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
12 1 0 1 20 1 3 0 2 76 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 32 29 16 14 6 4 0 36 1 35 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,630,o),
(319,623,qs),
(260,471,ls),
(255,456,o),
(239,456,qs),
(205,456,ls),
(188,456,o),
(183,471,qs),
(125,623,ls),
(122,630,o),
(125,634,o),
(133,634,qs),
(182,634,o),
(199,592,qs),
(222,534,l),
(245,592,ls),
(254,615,o),
(283,634,o),
(310,634,qs),
(318,634,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 0 1 76 1 3 2 0 2 0 133 0 2 2 118 1 0 15 12 8 6 0 19 1 19 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,279,qs),
(373,357,o),
(347,400,qs),
(320,442,o),
(271,442,qs),
(229,442,o),
(203,410,qs),
(169,368,o),
(169,279,qs),
(169,115,o),
(271,115,qs),
(373,115,o)
);
},
{
closed = 1;
nodes = (
(107,55,qs),
(32,132,o),
(32,279,qs),
(32,407,o),
(91,482,qs),
(155,566,o),
(271,566,qs),
(372,566,o),
(435,502,qs),
(510,425,o),
(510,279,qs),
(510,151,o),
(452,75,qs),
(388,-10,o),
(271,-10,qs),
(170,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,393,ls),
(23,388,o),
(23,403,qs),
(23,506,ls),
(23,520,o),
(38,526,qs),
(93,546,ls),
(120,556,o),
(146,556,qs),
(185,556,ls),
(255,556,o),
(255,488,qs),
(255,123,l),
(298,123,ls),
(368,123,o),
(368,57,qs),
(368,17,ls),
(368,0,o),
(351,0,qs),
(35,0,ls),
(22,0,o),
(22,13,qs),
(22,110,ls),
(22,123,o),
(35,123,qs),
(121,123,l),
(121,424,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,123,o),
(432,59,qs),
(432,17,ls),
(432,0,o),
(416,0,qs),
(36,0,ls),
(23,0,o),
(23,13,qs),
(23,114,o),
(69,182,qs),
(104,233,o),
(194,289,qs),
(250,324,o),
(287,366,o),
(287,396,qs),
(287,448,o),
(215,448,qs),
(162,448,o),
(85,413,q),
(84,412,l),
(76,408,o),
(70,408,qs),
(61,408,o),
(58,419,qs),
(45,457,ls),
(25,517,o),
(89,542,qs),
(149,566,o),
(224,566,qs),
(306,566,o),
(359,530,qs),
(425,486,o),
(425,401,qs),
(425,340,o),
(389,291,qs),
(359,251,o),
(288,204,qs),
(227,164,o),
(198,140,o),
(189,123,q),
(362,123,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 57 36 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,167,qs),
(427,95,o),
(378,47,qs),
(319,-10,o),
(218,-10,qs),
(127,-10,o),
(70,38,qs),
(14,85,o),
(14,148,qs),
(14,177,o),
(35,177,qs),
(43,177,o),
(52,168,q),
(123,108,o),
(204,108,qs),
(245,108,o),
(291,143,o),
(291,176,qs),
(291,224,o),
(221,224,qs),
(158,224,ls),
(122,224,o),
(93,250,o),
(93,281,qs),
(93,327,ls),
(93,346,o),
(108,346,qs),
(204,346,ls),
(273,346,o),
(273,401,qs),
(273,449,o),
(201,449,qs),
(140,449,o),
(72,413,qs),
(63,408,o),
(57,408,qs),
(51,408,o),
(47,418,qs),
(33,458,ls),
(13,519,o),
(77,543,qs),
(134,566,o),
(215,566,qs),
(295,566,o),
(344,535,qs),
(408,496,o),
(408,414,qs),
(408,331,o),
(333,293,q),
(427,269,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,106,o),
(6,119,qs),
(6,193,ls),
(6,208,o),
(16,224,qs),
(208,531,ls),
(224,556,o),
(253,556,qs),
(324,556,ls),
(394,556,o),
(394,488,qs),
(394,230,l),
(418,230,ls),
(487,230,o),
(487,163,qs),
(487,123,ls),
(487,106,o),
(470,106,qs),
(394,106,l),
(394,13,ls),
(394,0,o),
(383,0,qs),
(275,0,ls),
(264,0,o),
(264,13,qs),
(264,106,l),
(19,106,ls)
);
},
{
closed = 1;
nodes = (
(264,404,l),
(155,230,l),
(264,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,377,o),
(236,377,qs),
(323,377,o),
(375,334,qs),
(434,286,o),
(434,193,qs),
(434,106,o),
(379,51,qs),
(318,-10,o),
(218,-10,qs),
(133,-10,o),
(76,33,qs),
(17,78,o),
(17,143,qs),
(17,173,o),
(38,173,qs),
(46,173,o),
(56,164,qs),
(120,108,o),
(203,108,qs),
(299,108,o),
(299,192,qs),
(299,224,o),
(248,259,o),
(201,259,qs),
(128,259,o),
(56,237,qs),
(40,232,o),
(40,248,qs),
(40,542,ls),
(40,556,o),
(53,556,qs),
(334,556,ls),
(404,556,o),
(404,488,qs),
(404,449,ls),
(404,433,o),
(388,433,qs),
(161,433,l),
(161,369,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,394,o),
(405,341,qs),
(463,285,o),
(463,203,qs),
(463,117,o),
(413,60,qs),
(353,-9,o),
(250,-9,qs),
(159,-9,o),
(98,40,qs),
(27,97,o),
(27,191,qs),
(27,233,o),
(56,309,o),
(100,381,qs),
(208,554,ls),
(215,566,o),
(230,566,qs),
(272,566,o),
(292,534,qs),
(317,494,o),
(288,443,qs),
(259,394,l),
(268,394,ls)
);
},
{
closed = 1;
nodes = (
(210,110,o),
(249,110,qs),
(284,110,o),
(329,158,o),
(329,194,qs),
(329,230,o),
(282,279,o),
(246,279,qs),
(210,279,o),
(161,231,o),
(161,194,qs),
(161,157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 34 32 28 26 0 23 0 22 40 36 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,433,o),
(15,446,qs),
(15,542,ls),
(15,556,o),
(28,556,qs),
(326,556,ls),
(396,556,o),
(396,488,qs),
(396,476,ls),
(396,448,o),
(383,419,qs),
(202,13,ls),
(196,0,o),
(183,0,qs),
(67,0,ls),
(53,0,o),
(59,13,qs),
(247,433,l),
(28,433,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,413,qs),
(34,479,o),
(85,520,qs),
(142,566,o),
(244,566,qs),
(331,566,o),
(387,530,qs),
(453,488,o),
(453,413,qs),
(453,331,o),
(384,289,q),
(464,253,o),
(464,164,qs),
(464,93,o),
(415,47,qs),
(355,-9,o),
(244,-9,qs),
(146,-9,o),
(87,35,qs),
(22,82,o),
(22,164,qs),
(22,249,o),
(100,291,q),
(34,330,o)
);
},
{
closed = 1;
nodes = (
(205,100,o),
(244,100,qs),
(282,100,o),
(329,136,o),
(329,165,qs),
(329,233,o),
(244,233,qs),
(156,233,o),
(156,165,qs),
(156,136,o)
);
},
{
closed = 1;
nodes = (
(208,339,o),
(244,339,qs),
(279,339,o),
(320,371,o),
(320,398,qs),
(320,426,o),
(279,458,o),
(244,458,qs),
(208,458,o),
(165,426,o),
(165,398,qs),
(165,371,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 2 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 2 3 5 2 105 0 4 4 1 97 0 1 1 23 77 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 35 38 42 37 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,163,o),
(79,215,qs),
(22,271,o),
(22,351,qs),
(22,439,o),
(74,498,qs),
(135,566,o),
(239,566,qs),
(330,566,o),
(390,518,qs),
(458,462,o),
(458,367,qs),
(458,326,o),
(427,243,o),
(388,181,qs),
(276,3,l),
(270,-10,o),
(253,-10,qs),
(212,-10,o),
(191,25,qs),
(166,67,o),
(195,114,qs),
(225,163,l),
(213,163,ls)
);
},
{
closed = 1;
nodes = (
(323,326,o),
(323,363,qs),
(323,400,o),
(274,448,o),
(236,448,qs),
(201,448,o),
(155,400,o),
(155,363,qs),
(155,324,o),
(201,277,o),
(239,277,qs),
(274,277,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 3 5 1 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 6 1 3 2 2 3 89 6 1 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 0 0 31 29 24 35 25 35 0 23 0 22 40 36 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,13,q),
(505,542,l),
(511,556,o),
(525,556,qs),
(571,556,ls),
(604,556,o),
(626,513,o),
(610,483,qs),
(350,13,ls),
(342,0,o),
(331,0,qs),
(221,0,ls),
(208,0,o)
);
},
{
closed = 1;
nodes = (
(569,35,qs),
(520,84,o),
(520,169,qs),
(520,242,o),
(558,290,qs),
(601,344,o),
(677,344,qs),
(745,344,o),
(788,302,qs),
(839,253,o),
(839,169,qs),
(839,95,o),
(800,48,qs),
(755,-8,o),
(677,-8,qs),
(611,-8,o)
);
},
{
closed = 1;
nodes = (
(734,167,qs),
(734,248,o),
(677,248,qs),
(626,248,o),
(626,167,qs),
(626,90,o),
(677,90,qs),
(734,90,o)
);
},
{
closed = 1;
nodes = (
(72,256,qs),
(23,305,o),
(23,391,qs),
(23,463,o),
(61,511,qs),
(105,566,o),
(181,566,qs),
(248,566,o),
(292,523,qs),
(342,474,o),
(342,391,qs),
(342,317,o),
(303,269,qs),
(258,214,o),
(181,214,qs),
(115,214,o)
);
},
{
closed = 1;
nodes = (
(237,388,qs),
(237,468,o),
(181,468,qs),
(128,468,o),
(128,388,qs),
(128,311,o),
(181,311,qs),
(237,311,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 9 9 1 97 7 1 1 1 23 77 12 1 4 4 0 97 11 2 10 3 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 23 77 0 9 9 7 97 0 7 7 23 77 12 1 4 4 0 97 11 2 10 3 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 23 77 0 9 9 7 97 0 7 7 23 77 10 1 0 0 24 77 12 1 4 4 2 97 11 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 0 9 3 7 9 105 0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 0 1 1 23 77 10 1 0 0 24 77 12 1 4 4 2 97 11 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 0 9 3 7 9 105 0 3 0 5 6 3 5 105 14 1 8 13 1 6 4 8 6 105 12 1 4 11 1 2 4 2 101 0 1 1 23 77 10 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
54 53 38 37 30 29 14 13 2 0 58 56 53 60 54 60 46 44 37 52 38 52 34 32 29 36 30 36 22 20 13 28 14 28 9 6 0 12 2 12 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,100,o),
(180,68,qs),
(180,-32,o),
(71,-114,q),
(69,-118,o),
(65,-114,qs),
(34,-85,o),
(62,-58,qs),
(86,-34,o),
(92,-9,q),
(64,-5,o),
(28,38,o),
(28,68,qs),
(28,100,o),
(72,145,o),
(104,145,qs),
(135,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,206,o),
(180,174,qs),
(180,75,o),
(71,-8,q),
(69,-11,o),
(65,-8,q),
(34,22,o),
(62,49,qs),
(86,72,o),
(92,97,q),
(64,102,o),
(28,145,o),
(28,174,qs),
(28,207,o),
(72,252,o),
(104,252,qs),
(135,252,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,375,o),
(30,388,qs),
(55,467,ls),
(59,480,o),
(71,476,qs),
(150,444,l),
(144,529,ls),
(143,542,o),
(158,542,qs),
(241,542,ls),
(256,542,o),
(254,529,q),
(248,444,l),
(327,476,ls),
(339,480,o),
(343,467,qs),
(369,388,ls),
(373,375,o),
(361,372,qs),
(277,351,l),
(330,284,ls),
(338,275,o),
(327,268,qs),
(260,218,ls),
(249,210,o),
(243,221,qs),
(199,289,l),
(156,221,ls),
(150,210,o),
(139,218,qs),
(71,268,ls),
(61,275,o),
(69,284,qs),
(121,351,l),
(38,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
28 27 22 21 14 7 6 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 393;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 0 2 96 0 2 2 24 2 78 1 0 31 28 23 20 11 10 0 37 1 36 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,461,qs),
(16,470,o),
(16,488,qs),
(16,506,o),
(15,519,qs),
(11,541,o),
(0,577,qs),
(-3,587,o),
(-3,593,qs),
(-3,619,o),
(29,624,qs),
(33,625,o),
(35,625,qs),
(43,625,o),
(48,618,q),
(63,591,o),
(63,543,qs),
(63,514,o),
(53,491,qs),
(47,477,o),
(26,452,o),
(20,453,qs),
(13,453,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
13 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 0 0 0 22 0 22 24 3 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,715,o),
(251,684,qs),
(251,654,o),
(202,608,o),
(169,608,qs),
(143,608,o),
(109,623,q),
(105,624,o),
(100,627,q),
(77,636,o),
(66,636,qs),
(51,636,o),
(38,617,qs),
(26,600,o),
(20,611,qs),
(2,639,o),
(14,667,qs),
(28,695,o),
(62,693,qs),
(69,693,o),
(78,691,qs),
(86,689,o),
(88,689,qs),
(93,689,o),
(97,693,q),
(126,732,o),
(157,754,o),
(184,754,qs),
(214,754,o)
);
},
{
closed = 1;
nodes = (
(195,682,o),
(195,691,qs),
(195,701,o),
(183,701,qs),
(169,701,o),
(148,672,q),
(158,668,o),
(168,668,qs),
(178,668,o)
);
},
{
closed = 1;
nodes = (
(185,556,o),
(185,542,qs),
(185,106,ls),
(185,25,o),
(128,6,qs),
(108,0,o),
(79,0,qs),
(68,0,ls),
(52,0,o),
(52,14,qs),
(52,450,ls),
(52,531,o),
(109,549,qs),
(129,556,o),
(158,556,qs),
(170,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
31 1 3 1 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
31 1 5 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 1 4 6 114 10 5 2 3 1 0 3 4 1 3 105 9 1 0 0 4 7 0 4 105 11 1 7 7 23 77 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 0 1 4 6 114 10 1 5 1 3 0 5 114 2 1 1 0 3 4 1 3 105 9 1 0 0 4 7 0 4 105 11 1 7 7 23 77 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 0 1 0 6 1 128 10 1 5 1 3 0 5 114 2 1 1 0 3 4 1 3 105 9 1 0 0 4 7 0 4 105 11 1 7 7 23 77 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 0 1 0 6 1 128 10 1 5 1 3 1 5 3 128 2 1 1 0 3 4 1 3 105 9 1 0 0 4 7 0 4 105 11 1 7 7 23 77 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 6 0 2 0 6 2 128 0 1 2 5 2 1 114 10 1 5 3 2 5 3 126 0 2 0 3 4 2 3 105 9 1 0 0 4 7 0 4 105 11 1 7 7 23 77 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
39 38 30 29 1 0 47 44 38 53 39 52 34 32 29 37 30 37 24 22 18 16 10 8 6 4 0 28 1 28 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,383,o),
(281,391,qs),
(281,398,ls),
(283,440,o),
(332,443,q),
(332,564,ls),
(332,596,o),
(350,612,qs),
(361,622,o),
(381,622,qs),
(386,622,ls),
(393,622,o),
(393,616,qs),
(393,562,l),
(421,562,ls),
(467,562,o),
(518,515,o),
(518,472,qs),
(518,430,o),
(467,383,o),
(421,383,qs),
(290,383,ls)
);
},
{
closed = 1;
nodes = (
(393,443,l),
(423,443,ls),
(454,443,o),
(454,472,qs),
(454,502,o),
(423,502,qs),
(393,502,l)
);
},
{
closed = 1;
nodes = (
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
8 1 1 2 1 76 0 2 1 2 133 12 1 6 0 8 0 6 8 128 0 8 7 0 8 7 126 5 1 3 10 1 0 6 3 0 104 11 1 4 4 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 30 29 23 22 1 0 60 57 48 47 38 35 29 66 30 65 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(715,112,o),
(672,61,qs),
(622,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(162,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls)
);
},
{
closed = 1;
nodes = (
(375,-98,o),
(375,-124,qs),
(375,-151,o),
(338,-188,o),
(312,-188,qs),
(286,-188,o),
(250,-151,o),
(250,-124,qs),
(250,-98,o),
(286,-61,o),
(312,-61,qs),
(338,-61,o)
);
},
{
closed = 1;
nodes = (
(512,-98,o),
(512,-124,qs),
(512,-151,o),
(476,-188,o),
(450,-188,qs),
(424,-188,o),
(388,-151,o),
(388,-124,qs),
(388,-98,o),
(424,-61,o),
(450,-61,qs),
(476,-61,o)
);
},
{
closed = 1;
nodes = (
(438,-224,o),
(438,-248,qs),
(438,-272,o),
(405,-306,o),
(381,-306,qs),
(358,-306,o),
(325,-272,o),
(325,-248,qs),
(325,-224,o),
(358,-190,o),
(381,-190,qs),
(404,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 3 1 3 133 0 1 0 1 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 10 1 0 0 2 96 0 2 2 24 2 78 63 62 51 50 39 38 1 0 69 67 62 73 63 73 57 55 50 61 51 61 45 43 38 49 39 49 31 28 23 20 11 10 0 37 1 36 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,-271,qs),
(39,-202,o),
(41,-97,qs),
(41,-1,o),
(101,61,qs),
(170,133,o),
(288,133,qs),
(381,133,l),
(371,147,o),
(358,176,qs),
(353,188,o),
(350,194,qs),
(315,271,o),
(252,271,qs),
(218,271,o),
(186,258,qs),
(161,247,o),
(139,227,qs),
(127,216,o),
(118,216,qs),
(106,216,o),
(103,231,qs),
(101,239,o),
(102,253,qs),
(108,314,o),
(158,357,qs),
(204,397,o),
(273,397,qs),
(424,397,o),
(489,217,qs),
(506,168,o),
(522,149,qs),
(533,136,o),
(549,134,qs),
(559,132,o),
(565,127,o),
(565,117,qs),
(565,70,o),
(538,39,qs),
(505,1,o),
(442,0,qs),
(289,0,ls),
(244,0,o),
(185,-58,o),
(185,-102,qs),
(185,-149,o),
(217,-177,qs),
(250,-206,o),
(304,-206,qs),
(322,-206,o),
(332,-204,qs),
(336,-203,ls),
(347,-201,o),
(350,-201,qs),
(367,-201,o),
(366,-223,qs),
(365,-269,o),
(332,-297,qs),
(298,-324,o),
(240,-324,qs),
(172,-324,o)
);
},
{
closed = 1;
nodes = (
(347,-107,o),
(347,-92,qs),
(347,-77,o),
(369,-56,o),
(384,-56,qs),
(399,-56,o),
(421,-77,o),
(421,-92,qs),
(421,-107,o),
(400,-129,o),
(384,-129,qs),
(369,-129,o)
);
},
{
closed = 1;
nodes = (
(429,-108,o),
(429,-92,qs),
(429,-77,o),
(451,-56,o),
(466,-56,qs),
(481,-56,o),
(502,-77,o),
(502,-92,qs),
(502,-108,o),
(481,-130,o),
(466,-130,qs),
(450,-130,o)
);
},
{
closed = 1;
nodes = (
(390,-182,o),
(390,-166,qs),
(390,-151,o),
(411,-129,o),
(426,-129,qs),
(442,-129,o),
(462,-150,o),
(462,-166,qs),
(462,-182,o),
(442,-203,o),
(426,-203,qs),
(411,-203,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 5 6 7 6 5 7 128 0 4 0 6 5 4 6 105 11 1 9 16 10 15 3 8 13 9 8 105 0 13 17 1 12 0 13 12 105 2 1 1 14 1 0 1 0 101 0 7 7 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 5 6 7 6 5 7 128 0 1 13 12 13 1 12 128 0 4 0 6 5 4 6 105 11 1 9 16 10 15 3 8 13 9 8 105 0 13 17 1 12 2 13 12 105 0 2 14 1 0 2 0 101 0 7 7 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
86 85 74 73 62 61 1 0 92 90 85 96 86 96 80 78 73 84 74 84 68 66 61 72 62 72 54 52 47 45 41 39 33 31 20 17 12 10 6 5 0 60 1 60 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,466,o),
(91,473,qs),
(91,481,ls),
(92,523,o),
(142,526,q),
(142,647,ls),
(142,679,o),
(159,694,qs),
(171,704,o),
(190,704,qs),
(196,704,ls),
(202,704,o),
(202,698,qs),
(202,644,l),
(230,644,ls),
(276,644,o),
(327,598,o),
(327,555,qs),
(327,513,o),
(277,466,o),
(230,466,qs),
(99,466,ls)
);
},
{
closed = 1;
nodes = (
(202,526,l),
(232,526,ls),
(264,526,o),
(264,555,qs),
(264,585,o),
(232,585,qs),
(202,585,l)
);
},
{
closed = 1;
nodes = (
(337,345,qs),
(390,288,o),
(390,192,qs),
(390,114,o),
(342,61,qs),
(288,0,o),
(198,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 33 1 7 6 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 33 1 8 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 2 133 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 8 1 7 9 6 7 105 0 9 9 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
30 29 23 22 1 0 58 55 49 46 42 40 35 34 29 64 30 64 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,622,o),
(296,575,o),
(296,533,qs),
(296,490,o),
(245,444,o),
(198,444,qs),
(67,444,ls),
(59,444,o),
(59,451,qs),
(59,459,ls),
(61,501,o),
(110,503,q),
(110,624,ls),
(110,657,o),
(127,672,qs),
(139,682,o),
(158,682,qs),
(164,682,ls),
(171,682,o),
(171,676,qs),
(171,622,l),
(198,622,ls)
);
},
{
closed = 1;
nodes = (
(232,503,o),
(232,533,qs),
(232,563,o),
(201,563,qs),
(171,563,l),
(171,503,l),
(201,503,ls)
);
},
{
closed = 1;
nodes = (
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 3 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 3 0 133 12 1 6 2 7 2 6 7 128 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 8 1 7 9 9 7 89 8 1 7 7 9 97 0 9 7 9 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 0 3 0 133 12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
30 29 22 22 0 0 48 46 42 40 38 36 29 54 30 53 22 28 22 27 25 23 0 21 0 20 51 20 35 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,620,o),
(273,613,qs),
(215,461,ls),
(209,446,o),
(193,446,qs),
(159,446,ls),
(143,446,o),
(137,461,qs),
(79,613,ls),
(76,620,o),
(79,623,o),
(87,623,qs),
(137,623,o),
(153,582,qs),
(176,524,l),
(199,582,ls),
(208,605,o),
(237,623,o),
(265,623,qs),
(272,623,o)
);
},
{
closed = 1;
nodes = (
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
10 4 2 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
1 1 0 2 0 133 0 2 3 2 133 7 1 3 4 3 133 5 1 4 6 6 4 89 5 1 4 4 6 98 0 6 4 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
1 1 0 2 0 133 0 2 3 2 133 7 1 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 98 0 6 4 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
21 20 39 37 33 31 29 27 20 45 21 44 52 37 16 8 7 25 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o)
);
},
{
closed = 1;
nodes = (
(148,-306,o),
(148,-334,qs),
(148,-362,o),
(111,-401,o),
(84,-401,qs),
(57,-401,o),
(19,-362,o),
(19,-334,qs),
(19,-307,o),
(57,-269,o),
(84,-269,qs),
(111,-269,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 1 6 2 0 0 2 4 0 2 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
27 26 1 0 33 31 26 37 27 37 19 16 11 9 5 3 0 25 1 25 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls)
);
},
{
closed = 1;
nodes = (
(165,-275,o),
(162,-282,qs),
(104,-434,ls),
(99,-449,o),
(82,-449,qs),
(48,-449,ls),
(32,-449,o),
(27,-434,qs),
(-32,-282,ls),
(-34,-275,o),
(-32,-271,o),
(-24,-271,qs),
(26,-271,o),
(42,-313,qs),
(66,-371,l),
(88,-313,ls),
(105,-271,o),
(154,-271,qs),
(162,-271,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
35 29 2 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 0 1 0 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 2 1 1 3 3 1 89 2 1 1 1 3 97 0 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 2 0 133 0 2 1 2 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 40 37 33 31 26 44 27 44 19 17 13 11 9 7 0 25 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,594,o),
(113,618,qs),
(113,642,o),
(146,676,o),
(169,676,qs),
(192,676,o),
(226,642,o),
(226,618,qs),
(226,595,o),
(192,561,o),
(169,561,qs),
(146,561,o)
);
},
{
closed = 1;
nodes = (
(38,469,o),
(38,495,qs),
(38,521,o),
(74,558,o),
(100,558,qs),
(126,558,o),
(162,521,o),
(162,495,qs),
(162,469,o),
(126,432,o),
(100,432,qs),
(74,432,o)
);
},
{
closed = 1;
nodes = (
(176,469,o),
(176,495,qs),
(176,522,o),
(212,558,o),
(238,558,qs),
(264,558,o),
(300,522,o),
(300,495,qs),
(300,469,o),
(264,432,o),
(238,432,qs),
(212,432,o)
);
},
{
closed = 1;
nodes = (
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,41,ls),
(238,-76,o),
(198,-141,qs),
(151,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 2 6 2 9 6 128 0 1 10 1 0 3 1 0 105 7 13 2 6 0 8 6 8 101 12 4 11 3 2 2 3 97 5 1 3 3 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 13 1 6 0 8 6 8 101 12 4 11 3 2 2 3 97 5 1 3 3 23 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 55 52 47 45 41 39 36 61 37 61 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(764,351,qs),
(826,296,o),
(826,198,qs),
(826,114,o),
(778,60,qs),
(726,1,o),
(640,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(462,133,l),
(449,167,o),
(448,198,qs),
(448,283,o),
(497,337,qs),
(550,397,o),
(637,397,qs),
(712,397,o)
);
},
{
closed = 1;
nodes = (
(690,173,o),
(690,203,qs),
(690,233,o),
(660,271,o),
(638,271,qs),
(615,271,o),
(585,232,o),
(585,203,qs),
(585,173,o),
(615,133,o),
(638,133,qs),
(660,133,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 0 5 0 2 5 128 6 1 0 0 5 1 0 5 105 7 4 2 1 1 3 96 0 3 3 24 3 78 38 37 1 0 44 42 37 48 38 48 30 27 18 17 8 6 0 36 1 36 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,607,o),
(582,631,qs),
(582,655,o),
(614,689,o),
(638,689,qs),
(661,689,o),
(695,655,o),
(695,631,qs),
(695,608,o),
(661,573,o),
(638,573,qs),
(615,573,o)
);
},
{
closed = 1;
nodes = (
(507,481,o),
(507,508,qs),
(507,534,o),
(543,571,o),
(568,571,qs),
(595,571,o),
(631,534,o),
(631,508,qs),
(631,481,o),
(595,444,o),
(568,444,qs),
(543,444,o)
);
},
{
closed = 1;
nodes = (
(681,571,o),
(707,571,qs),
(733,571,o),
(769,534,o),
(769,508,qs),
(769,481,o),
(733,444,o),
(707,444,qs),
(681,444,o),
(645,481,o),
(645,508,qs),
(645,534,o)
);
},
{
closed = 1;
nodes = (
(764,351,qs),
(826,296,o),
(826,198,qs),
(826,114,o),
(778,60,qs),
(726,1,o),
(640,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(462,133,l),
(449,167,o),
(448,198,qs),
(448,283,o),
(497,337,qs),
(550,397,o),
(637,397,qs),
(712,397,o)
);
},
{
closed = 1;
nodes = (
(690,173,o),
(690,203,qs),
(690,233,o),
(660,271,o),
(638,271,qs),
(615,271,o),
(585,232,o),
(585,203,qs),
(585,173,o),
(615,133,o),
(638,133,qs),
(660,133,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 11 6 8 11 128 0 1 12 1 0 3 1 0 105 14 1 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 15 10 2 7 7 9 96 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 6 11 6 8 11 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 14 1 6 0 11 7 6 11 105 15 10 2 7 7 9 96 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
74 73 37 36 13 12 1 0 80 78 73 84 74 84 66 63 54 53 44 42 36 72 37 72 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,378,o),
(648,334,qs),
(711,280,o),
(711,183,qs),
(711,107,o),
(661,56,qs),
(607,0,o),
(522,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(519,133,ls),
(573,133,o),
(573,193,qs),
(573,220,o),
(544,252,o),
(519,252,qs),
(336,252,ls),
(257,252,o),
(257,317,qs),
(257,344,ls),
(257,392,o),
(286,409,qs),
(527,552,ls),
(536,558,o),
(541,555,qs),
(552,547,o),
(564,528,qs),
(601,470,o),
(541,436,qs),
(444,378,l),
(522,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 0 0 0 50 0 49 57 25 51 60 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,467,o),
(256,494,qs),
(255,499,o),
(256,513,qs),
(256,519,o),
(256,521,qs),
(256,542,o),
(282,558,qs),
(462,666,ls),
(470,671,o),
(475,665,qs),
(488,648,o),
(488,629,qs),
(488,607,o),
(463,591,qs),
(286,486,l)
);
},
{
closed = 1;
nodes = (
(596,378,o),
(648,334,qs),
(711,280,o),
(711,183,qs),
(711,107,o),
(661,56,qs),
(607,0,o),
(522,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(519,133,ls),
(573,133,o),
(573,193,qs),
(573,220,o),
(544,252,o),
(519,252,qs),
(336,252,ls),
(257,252,o),
(257,317,qs),
(257,344,ls),
(257,392,o),
(286,409,qs),
(527,552,ls),
(536,558,o),
(541,555,qs),
(552,547,o),
(564,528,qs),
(601,470,o),
(541,436,qs),
(444,378,l),
(522,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
11 1 4 74 0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 16 16 16 66 16 65 59 56 47 46 37 34 31 28 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,778,qs),
(559,626,ls),
(554,611,o),
(537,611,qs),
(503,611,ls),
(487,611,o),
(482,626,qs),
(423,778,ls),
(421,785,o),
(423,789,o),
(431,789,qs),
(481,789,o),
(497,747,qs),
(521,689,l),
(543,747,ls),
(552,770,o),
(582,789,o),
(609,789,qs),
(621,789,o)
);
},
{
closed = 1;
nodes = (
(583,556,o),
(583,542,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 4 2 2 0 1 76 1 7 2 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 102 8 1 3 3 23 3 78 20 19 1 0 49 47 38 37 29 27 19 55 20 54 15 12 8 6 0 18 1 18 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(587,695,o),
(587,667,qs),
(587,639,o),
(550,601,o),
(522,601,qs),
(495,601,o),
(457,640,o),
(457,667,qs),
(457,695,o),
(495,733,o),
(522,733,qs),
(550,733,o)
);
},
{
closed = 1;
nodes = (
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 102 0 3 3 23 3 78 13 12 1 0 39 38 30 28 21 18 12 48 13 48 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,772,o),
(457,796,qs),
(457,820,o),
(489,854,o),
(513,854,qs),
(536,854,o),
(570,820,o),
(570,796,qs),
(570,772,o),
(536,738,o),
(513,738,qs),
(490,738,o)
);
},
{
closed = 1;
nodes = (
(382,646,o),
(382,673,qs),
(382,699,o),
(418,736,o),
(443,736,qs),
(470,736,o),
(506,699,o),
(506,673,qs),
(506,646,o),
(470,609,o),
(443,609,qs),
(418,609,o)
);
},
{
closed = 1;
nodes = (
(520,646,o),
(520,673,qs),
(520,699,o),
(556,736,o),
(582,736,qs),
(608,736,o),
(644,699,o),
(644,673,qs),
(644,646,o),
(608,609,o),
(582,609,qs),
(556,609,o)
);
},
{
closed = 1;
nodes = (
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 102 0 7 7 23 7 78 37 36 25 24 13 12 1 0 63 62 54 52 45 42 36 72 37 72 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,87,ls),
(583,-41,o),
(518,-121,qs),
(443,-214,o),
(308,-214,qs),
(197,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 98 4 1 0 2 0 82 1 0 27 26 18 16 9 6 0 36 1 36 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
31 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 37 27 37 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,558,q),
(92,567,o),
(92,576,qs),
(92,608,o),
(125,618,q),
(115,636,o),
(115,656,qs),
(115,694,o),
(161,742,o),
(196,743,qs),
(225,743,o),
(261,711,o),
(261,686,qs),
(261,672,o),
(256,672,qs),
(254,672,o),
(245,677,qs),
(223,687,o),
(207,687,qs),
(174,687,o),
(174,656,qs),
(174,642,o),
(193,623,o),
(207,623,qs),
(235,623,ls),
(282,623,o),
(282,582,qs),
(282,576,ls),
(282,567,o),
(271,567,qs),
(145,567,ls),
(125,567,o),
(108,557,qs),
(103,554,o),
(101,554,qs),
(99,554,o)
);
},
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
30 1 0 1 67 50 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
63 62 62 73 63 73 57 55 35 34 35 51 51 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
31 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 37 27 37 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,558,q),
(92,567,o),
(92,576,qs),
(92,608,o),
(125,618,q),
(115,636,o),
(115,656,qs),
(115,694,o),
(161,742,o),
(196,743,qs),
(225,743,o),
(261,711,o),
(261,686,qs),
(261,672,o),
(256,672,qs),
(254,672,o),
(245,677,qs),
(223,687,o),
(207,687,qs),
(174,687,o),
(174,656,qs),
(174,642,o),
(193,623,o),
(207,623,qs),
(235,623,ls),
(282,623,o),
(282,582,qs),
(282,576,ls),
(282,567,o),
(271,567,qs),
(145,567,ls),
(125,567,o),
(108,557,qs),
(103,554,o),
(101,554,qs),
(99,554,o)
);
},
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
30 1 0 1 67 50 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
63 62 62 73 63 73 57 55 35 34 35 51 51 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,578,o),
(57,604,qs),
(57,631,o),
(94,668,o),
(120,668,qs),
(146,668,o),
(182,631,o),
(182,604,qs),
(182,578,o),
(146,541,o),
(120,541,qs),
(94,541,o)
);
},
{
closed = 1;
nodes = (
(195,578,o),
(195,604,qs),
(195,631,o),
(232,668,o),
(258,668,qs),
(284,668,o),
(320,631,o),
(320,604,qs),
(320,578,o),
(284,541,o),
(258,541,qs),
(232,541,o)
);
},
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
55 38 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
51 50 13 12 1 0 50 61 51 61 45 43 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,627,o),
(130,630,o),
(137,630,qs),
(187,630,o),
(203,588,qs),
(227,531,l),
(250,588,ls),
(259,611,o),
(288,630,o),
(315,630,qs),
(323,630,o),
(326,626,o),
(323,619,qs),
(265,467,ls),
(260,452,o),
(243,452,qs),
(210,452,ls),
(193,452,o),
(188,467,qs),
(130,619,ls)
);
},
{
closed = 1;
nodes = (
(420,132,qs),
(420,-32,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(142,-213,o),
(98,-169,qs),
(67,-138,o),
(57,-89,qs),
(54,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(275,-39,o),
(281,2,q),
(250,-10,o),
(218,-10,qs),
(146,-10,o),
(96,40,qs),
(39,97,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(354,397,o),
(397,284,qs),
(420,227,o)
);
},
{
closed = 1;
nodes = (
(281,133,q),
(281,135,o),
(281,139,qs),
(282,146,o),
(282,149,qs),
(283,209,o),
(275,233,qs),
(262,271,o),
(228,271,qs),
(205,271,o),
(176,231,o),
(176,197,qs),
(176,119,o),
(231,119,qs),
(262,119,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 13 2 0 1 62 1 8 9 32 1 4 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 3 0 9 8 3 9 105 6 1 5 0 7 5 7 101 10 1 8 8 4 98 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 105 0 5 0 7 5 7 101 10 1 8 8 4 98 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 105 10 1 8 0 4 6 8 4 106 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
54 53 59 57 53 67 54 67 36 35 35 38 36 37 36 49 11 7 30 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,485,o),
(98,511,qs),
(98,538,o),
(135,574,o),
(161,574,qs),
(187,574,o),
(223,538,o),
(223,511,qs),
(223,485,o),
(187,448,o),
(161,448,qs),
(135,448,o)
);
},
{
closed = 1;
nodes = (
(236,485,o),
(236,511,qs),
(236,538,o),
(273,574,o),
(299,574,qs),
(325,574,o),
(361,538,o),
(361,511,qs),
(361,485,o),
(325,448,o),
(299,448,qs),
(273,448,o)
);
},
{
closed = 1;
nodes = (
(420,132,qs),
(420,-32,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(142,-213,o),
(98,-169,qs),
(67,-138,o),
(57,-89,qs),
(54,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(275,-39,o),
(281,2,q),
(250,-10,o),
(218,-10,qs),
(146,-10,o),
(96,40,qs),
(39,97,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(354,397,o),
(397,284,qs),
(420,227,o)
);
},
{
closed = 1;
nodes = (
(281,133,q),
(281,135,o),
(281,139,qs),
(282,146,o),
(282,149,qs),
(283,209,o),
(275,233,qs),
(262,271,o),
(228,271,qs),
(205,271,o),
(176,231,o),
(176,197,qs),
(176,119,o),
(231,119,qs),
(262,119,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
66 1 9 10 36 1 5 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 0 10 9 4 10 105 7 1 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 5 6 5 7 6 128 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 13 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
58 57 13 12 1 0 63 61 57 71 58 71 51 49 45 43 40 38 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,-140,qs),
(39,-64,o),
(39,48,qs),
(39,115,o),
(75,170,qs),
(115,231,o),
(178,251,qs),
(189,254,o),
(194,254,qs),
(210,254,o),
(210,238,qs),
(210,232,o),
(203,221,qs),
(167,162,o),
(167,81,qs),
(167,6,o),
(207,-37,qs),
(253,-88,o),
(343,-88,qs),
(400,-88,o),
(483,-42,o),
(502,-1,qs),
(510,17,o),
(476,28,qs),
(455,36,o),
(431,41,qs),
(272,77,o),
(272,204,qs),
(272,280,o),
(318,334,qs),
(373,397,o),
(462,397,qs),
(545,397,o),
(586,347,qs),
(611,317,o),
(611,276,qs),
(611,239,o),
(591,238,qs),
(584,238,o),
(573,245,qs),
(530,271,o),
(485,271,qs),
(449,271,o),
(407,236,o),
(407,206,qs),
(407,179,o),
(474,161,qs),
(543,142,o),
(581,123,qs),
(651,87,o),
(646,28,qs),
(637,-75,o),
(560,-141,qs),
(474,-214,o),
(343,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 5 1 2 1 5 2 128 0 2 4 1 2 4 126 0 3 0 1 5 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 46 45 37 35 24 22 18 16 14 12 0 55 1 55 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,471,o),
(45,474,o),
(52,474,qs),
(102,474,o),
(118,433,qs),
(142,375,l),
(165,433,ls),
(174,456,o),
(203,474,o),
(230,474,qs),
(238,474,o),
(241,471,o),
(238,464,qs),
(180,312,ls),
(175,297,o),
(158,297,qs),
(125,297,ls),
(108,297,o),
(103,312,qs),
(45,464,ls)
);
},
{
closed = 1;
nodes = (
(646,28,qs),
(637,-75,o),
(560,-141,qs),
(474,-214,o),
(343,-214,qs),
(209,-214,o),
(125,-140,qs),
(39,-64,o),
(39,48,qs),
(39,115,o),
(75,170,qs),
(115,231,o),
(178,251,qs),
(189,254,o),
(194,254,qs),
(210,254,o),
(210,238,qs),
(210,232,o),
(203,221,qs),
(167,162,o),
(167,81,qs),
(167,6,o),
(207,-37,qs),
(253,-88,o),
(343,-88,qs),
(400,-88,o),
(483,-42,o),
(502,-1,qs),
(510,17,o),
(476,28,qs),
(455,36,o),
(431,41,qs),
(272,77,o),
(272,204,qs),
(272,280,o),
(318,334,qs),
(373,397,o),
(462,397,qs),
(545,397,o),
(586,347,qs),
(611,317,o),
(611,276,qs),
(611,239,o),
(591,238,qs),
(584,238,o),
(573,245,qs),
(530,271,o),
(485,271,qs),
(449,271,o),
(407,236,o),
(407,206,qs),
(407,179,o),
(474,161,qs),
(543,142,o),
(581,123,qs),
(651,87,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
19 1 5 1 13 1 0 5 2 76 2 1 1 5 1 133 0 0 5 3 5 0 3 128 0 7 3 4 3 7 4 128 0 4 6 3 4 6 126 0 5 0 3 7 5 3 105 0 6 8 8 6 89 0 6 6 8 98 0 8 6 8 82 41 24 43 36 34 41 37 21 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,0,o),
(102,44,qs),
(39,96,o),
(39,183,qs),
(39,266,o),
(89,321,qs),
(141,378,o),
(217,378,qs),
(303,378,ls),
(306,378,o),
(306,381,qs),
(306,463,o),
(353,512,qs),
(404,564,o),
(494,564,qs),
(567,564,o),
(616,529,qs),
(668,492,o),
(678,431,qs),
(680,421,o),
(680,412,qs),
(680,369,o),
(625,314,o),
(583,314,qs),
(571,314,ls),
(557,314,o),
(548,324,o),
(548,339,qs),
(548,359,ls),
(548,439,o),
(495,439,qs),
(442,439,o),
(442,365,qs),
(442,333,ls),
(442,290,o),
(405,252,o),
(363,252,qs),
(236,252,ls),
(210,252,o),
(176,219,o),
(176,193,qs),
(176,133,o),
(227,133,qs),
(616,133,ls),
(666,133,o),
(727,81,o),
(727,37,qs),
(727,24,ls),
(727,9,o),
(717,0,o),
(701,0,qs),
(228,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 6 4 2 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 6 2 6 4 2 128 0 5 0 3 6 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 44 40 37 35 28 25 21 19 15 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,431,qs),
(52,439,o),
(52,448,qs),
(52,481,o),
(86,491,q),
(76,508,o),
(76,528,qs),
(76,566,o),
(121,615,o),
(157,615,qs),
(185,615,o),
(222,583,o),
(222,558,qs),
(222,544,o),
(217,544,qs),
(214,544,o),
(205,549,qs),
(184,559,o),
(167,559,qs),
(135,559,o),
(135,528,qs),
(135,514,o),
(153,496,o),
(167,496,qs),
(195,496,ls),
(242,496,o),
(242,454,qs),
(242,448,ls),
(242,439,o),
(231,439,qs),
(105,439,ls),
(85,439,o),
(68,429,qs),
(64,426,o),
(62,426,qs),
(59,426,o)
);
},
{
closed = 1;
nodes = (
(666,133,o),
(727,81,o),
(727,37,qs),
(727,24,ls),
(727,9,o),
(717,0,o),
(701,0,qs),
(228,0,ls),
(154,0,o),
(102,44,qs),
(39,96,o),
(39,183,qs),
(39,266,o),
(89,321,qs),
(141,378,o),
(217,378,qs),
(303,378,ls),
(306,378,o),
(306,381,qs),
(306,463,o),
(353,512,qs),
(404,564,o),
(494,564,qs),
(567,564,o),
(616,529,qs),
(668,492,o),
(678,431,qs),
(680,421,o),
(680,412,qs),
(680,369,o),
(625,314,o),
(583,314,qs),
(571,314,ls),
(557,314,o),
(548,324,o),
(548,339,qs),
(548,359,ls),
(548,439,o),
(495,439,qs),
(442,439,o),
(442,365,qs),
(442,333,ls),
(442,290,o),
(405,252,o),
(363,252,qs),
(236,252,ls),
(210,252,o),
(176,219,o),
(176,193,qs),
(176,133,o),
(227,133,qs),
(616,133,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 10 6 10 8 6 128 0 4 3 1 2 1 4 2 105 0 1 0 0 1 89 0 10 0 6 5 10 6 103 7 1 0 0 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 3 2 1 2 3 1 128 0 8 10 6 10 8 6 128 0 4 0 2 3 4 2 105 0 1 0 0 1 89 0 10 0 6 5 10 6 103 7 1 0 0 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 3 2 1 2 3 1 128 0 8 10 6 10 8 6 128 0 9 2 0 9 89 0 4 0 2 3 4 2 105 0 1 7 1 0 10 1 0 105 0 10 0 6 5 10 6 103 12 1 5 5 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
37 36 81 78 72 68 65 63 56 53 49 47 43 40 36 87 37 86 35 34 35 51 51 13 7 27 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,194,qs),
(422,108,o),
(376,53,qs),
(323,-10,o),
(231,-10,qs),
(160,-10,o),
(109,30,qs),
(39,85,o),
(39,194,qs),
(39,310,o),
(142,380,q),
(133,399,o),
(133,411,qs),
(133,457,o),
(198,490,q),
(199,491,o),
(205,493,qs),
(208,494,o),
(209,494,q),
(219,497,o),
(227,479,qs),
(242,448,o),
(300,402,qs),
(318,388,o),
(332,377,qs),
(422,300,o)
);
},
{
closed = 1;
nodes = (
(287,161,o),
(286,192,qs),
(285,222,o),
(265,248,qs),
(251,266,o),
(225,287,q),
(178,246,o),
(176,192,qs),
(175,161,o),
(207,117,o),
(231,117,qs),
(254,117,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
31 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 37 27 37 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,594,o),
(105,618,qs),
(105,642,o),
(138,676,o),
(161,676,qs),
(184,676,o),
(218,642,o),
(218,618,qs),
(218,595,o),
(184,561,o),
(161,561,qs),
(138,561,o)
);
},
{
closed = 1;
nodes = (
(30,469,o),
(30,495,qs),
(30,521,o),
(66,558,o),
(92,558,qs),
(118,558,o),
(154,521,o),
(154,495,qs),
(154,469,o),
(118,432,o),
(92,432,qs),
(66,432,o)
);
},
{
closed = 1;
nodes = (
(168,468,o),
(168,495,qs),
(168,522,o),
(204,558,o),
(230,558,qs),
(256,558,o),
(292,522,o),
(292,495,qs),
(292,468,o),
(256,432,o),
(230,432,qs),
(204,432,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,279,qs),
(373,357,o),
(347,400,qs),
(320,442,o),
(271,442,qs),
(229,442,o),
(203,410,qs),
(169,368,o),
(169,279,qs),
(169,115,o),
(271,115,qs),
(373,115,o)
);
},
{
closed = 1;
nodes = (
(107,55,qs),
(32,132,o),
(32,279,qs),
(32,407,o),
(91,482,qs),
(155,566,o),
(271,566,qs),
(372,566,o),
(435,502,qs),
(510,425,o),
(510,279,qs),
(510,151,o),
(452,75,qs),
(388,-10,o),
(271,-10,qs),
(170,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,393,ls),
(23,388,o),
(23,403,qs),
(23,506,ls),
(23,520,o),
(38,526,qs),
(93,546,ls),
(120,556,o),
(146,556,qs),
(185,556,ls),
(255,556,o),
(255,488,qs),
(255,123,l),
(298,123,ls),
(368,123,o),
(368,57,qs),
(368,17,ls),
(368,0,o),
(351,0,qs),
(35,0,ls),
(22,0,o),
(22,13,qs),
(22,110,ls),
(22,123,o),
(35,123,qs),
(121,123,l),
(121,424,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,123,o),
(432,59,qs),
(432,17,ls),
(432,0,o),
(416,0,qs),
(36,0,ls),
(23,0,o),
(23,13,qs),
(23,114,o),
(69,182,qs),
(104,233,o),
(194,289,qs),
(250,324,o),
(287,366,o),
(287,396,qs),
(287,448,o),
(215,448,qs),
(162,448,o),
(85,413,q),
(84,412,l),
(76,408,o),
(70,408,qs),
(61,408,o),
(58,419,qs),
(45,457,ls),
(25,517,o),
(89,542,qs),
(149,566,o),
(224,566,qs),
(306,566,o),
(359,530,qs),
(425,486,o),
(425,401,qs),
(425,340,o),
(389,291,qs),
(359,251,o),
(288,204,qs),
(227,164,o),
(198,140,o),
(189,123,q),
(362,123,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 57 36 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,167,qs),
(427,95,o),
(378,47,qs),
(319,-10,o),
(218,-10,qs),
(127,-10,o),
(70,38,qs),
(14,85,o),
(14,148,qs),
(14,177,o),
(35,177,qs),
(43,177,o),
(52,168,q),
(123,108,o),
(204,108,qs),
(245,108,o),
(291,143,o),
(291,176,qs),
(291,224,o),
(221,224,qs),
(158,224,ls),
(122,224,o),
(93,250,o),
(93,281,qs),
(93,327,ls),
(93,346,o),
(108,346,qs),
(204,346,ls),
(273,346,o),
(273,401,qs),
(273,449,o),
(201,449,qs),
(140,449,o),
(72,413,qs),
(63,408,o),
(57,408,qs),
(51,408,o),
(47,418,qs),
(33,458,ls),
(13,519,o),
(77,543,qs),
(134,566,o),
(215,566,qs),
(295,566,o),
(344,535,qs),
(408,496,o),
(408,414,qs),
(408,331,o),
(333,293,q),
(427,269,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,106,o),
(6,119,qs),
(6,193,ls),
(6,208,o),
(16,224,qs),
(208,531,ls),
(224,556,o),
(253,556,qs),
(324,556,ls),
(394,556,o),
(394,488,qs),
(394,230,l),
(418,230,ls),
(487,230,o),
(487,163,qs),
(487,123,ls),
(487,106,o),
(470,106,qs),
(394,106,l),
(394,13,ls),
(394,0,o),
(383,0,qs),
(275,0,ls),
(264,0,o),
(264,13,qs),
(264,106,l),
(19,106,ls)
);
},
{
closed = 1;
nodes = (
(264,404,l),
(155,230,l),
(264,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,377,o),
(236,377,qs),
(323,377,o),
(375,334,qs),
(434,286,o),
(434,193,qs),
(434,106,o),
(379,51,qs),
(318,-10,o),
(218,-10,qs),
(133,-10,o),
(76,33,qs),
(17,78,o),
(17,143,qs),
(17,173,o),
(38,173,qs),
(46,173,o),
(56,164,qs),
(120,108,o),
(203,108,qs),
(299,108,o),
(299,192,qs),
(299,224,o),
(248,259,o),
(201,259,qs),
(128,259,o),
(56,237,qs),
(40,232,o),
(40,248,qs),
(40,542,ls),
(40,556,o),
(53,556,qs),
(334,556,ls),
(404,556,o),
(404,488,qs),
(404,449,ls),
(404,433,o),
(388,433,qs),
(161,433,l),
(161,369,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,394,o),
(405,341,qs),
(463,285,o),
(463,203,qs),
(463,117,o),
(413,60,qs),
(353,-9,o),
(250,-9,qs),
(159,-9,o),
(98,40,qs),
(27,97,o),
(27,191,qs),
(27,233,o),
(56,309,o),
(100,381,qs),
(208,554,ls),
(215,566,o),
(230,566,qs),
(272,566,o),
(292,534,qs),
(317,494,o),
(288,443,qs),
(259,394,l),
(268,394,ls)
);
},
{
closed = 1;
nodes = (
(210,110,o),
(249,110,qs),
(284,110,o),
(329,158,o),
(329,194,qs),
(329,230,o),
(282,279,o),
(246,279,qs),
(210,279,o),
(161,231,o),
(161,194,qs),
(161,157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 34 32 28 26 0 23 0 22 40 36 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,433,o),
(15,446,qs),
(15,542,ls),
(15,556,o),
(28,556,qs),
(326,556,ls),
(396,556,o),
(396,488,qs),
(396,476,ls),
(396,448,o),
(383,419,qs),
(202,13,ls),
(196,0,o),
(183,0,qs),
(67,0,ls),
(53,0,o),
(59,13,qs),
(247,433,l),
(28,433,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,413,qs),
(34,479,o),
(85,520,qs),
(142,566,o),
(244,566,qs),
(331,566,o),
(387,530,qs),
(453,488,o),
(453,413,qs),
(453,331,o),
(384,289,q),
(464,253,o),
(464,164,qs),
(464,93,o),
(415,47,qs),
(355,-9,o),
(244,-9,qs),
(146,-9,o),
(87,35,qs),
(22,82,o),
(22,164,qs),
(22,249,o),
(100,291,q),
(34,330,o)
);
},
{
closed = 1;
nodes = (
(205,100,o),
(244,100,qs),
(282,100,o),
(329,136,o),
(329,165,qs),
(329,233,o),
(244,233,qs),
(156,233,o),
(156,165,qs),
(156,136,o)
);
},
{
closed = 1;
nodes = (
(208,339,o),
(244,339,qs),
(279,339,o),
(320,371,o),
(320,398,qs),
(320,426,o),
(279,458,o),
(244,458,qs),
(208,458,o),
(165,426,o),
(165,398,qs),
(165,371,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 2 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 2 3 5 2 105 0 4 4 1 97 0 1 1 23 77 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 35 38 42 37 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,163,o),
(79,215,qs),
(22,271,o),
(22,351,qs),
(22,439,o),
(74,498,qs),
(135,566,o),
(239,566,qs),
(330,566,o),
(390,518,qs),
(458,462,o),
(458,367,qs),
(458,326,o),
(427,243,o),
(388,181,qs),
(276,3,l),
(270,-10,o),
(253,-10,qs),
(212,-10,o),
(191,25,qs),
(166,67,o),
(195,114,qs),
(225,163,l),
(213,163,ls)
);
},
{
closed = 1;
nodes = (
(323,326,o),
(323,363,qs),
(323,400,o),
(274,448,o),
(236,448,qs),
(201,448,o),
(155,400,o),
(155,363,qs),
(155,324,o),
(201,277,o),
(239,277,qs),
(274,277,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 3 5 1 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 6 1 3 2 2 3 89 6 1 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 0 0 31 29 24 35 25 35 0 23 0 22 40 36 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,162,qs),
(0,253,ls),
(0,266,o),
(13,266,qs),
(353,266,ls),
(367,266,o),
(367,253,qs),
(367,162,ls),
(367,149,o),
(353,149,qs),
(13,149,ls),
(0,149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,162,qs),
(0,253,ls),
(0,266,o),
(13,266,qs),
(688,266,ls),
(701,266,o),
(701,253,qs),
(701,162,ls),
(701,149,o),
(688,149,qs),
(13,149,ls),
(0,149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,410,o),
(180,380,qs),
(180,348,o),
(135,303,o),
(104,303,qs),
(72,303,o),
(28,348,o),
(28,380,qs),
(28,480,o),
(136,562,q),
(139,566,o),
(142,562,q),
(173,533,o),
(145,506,qs),
(122,482,o),
(115,457,q),
(144,453,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,519,o),
(180,487,qs),
(180,387,o),
(71,305,q),
(69,302,o),
(65,305,qs),
(34,334,o),
(62,362,qs),
(86,385,o),
(92,410,q),
(64,414,o),
(28,458,o),
(28,487,qs),
(28,520,o),
(72,564,o),
(104,564,qs),
(135,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
1 1 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 5 values pushed */
1 1 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
1 0 0 16 1 16 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,45,o),
(13,72,qs),
(13,104,o),
(58,147,o),
(91,147,qs),
(125,147,o),
(167,104,o),
(167,69,qs),
(167,-23,o),
(62,-102,qs),
(55,-107,o),
(48,-102,qs),
(32,-88,o),
(24,-57,o),
(34,-47,qs),
(61,-21,o),
(70,-1,q),
(44,6,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 43 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 187;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,410,o),
(180,380,qs),
(180,348,o),
(135,303,o),
(104,303,qs),
(72,303,o),
(28,348,o),
(28,380,qs),
(28,480,o),
(136,562,q),
(139,566,o),
(142,562,q),
(173,533,o),
(145,506,qs),
(122,482,o),
(115,457,q),
(144,453,o)
);
},
{
closed = 1;
nodes = (
(367,410,o),
(367,380,qs),
(367,348,o),
(323,303,o),
(291,303,qs),
(260,303,o),
(216,348,o),
(216,380,qs),
(216,480,o),
(324,562,q),
(327,566,o),
(330,562,q),
(361,533,o),
(333,506,qs),
(310,482,o),
(303,457,q),
(331,453,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 0 118 47 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,519,o),
(180,487,qs),
(180,387,o),
(71,305,q),
(69,302,o),
(65,305,qs),
(34,334,o),
(62,362,qs),
(86,385,o),
(92,410,q),
(64,414,o),
(28,458,o),
(28,487,qs),
(28,520,o),
(72,564,o),
(104,564,qs),
(135,564,o)
);
},
{
closed = 1;
nodes = (
(367,519,o),
(367,487,qs),
(367,388,o),
(259,305,q),
(256,302,o),
(253,305,qs),
(222,334,o),
(250,362,qs),
(273,385,o),
(280,410,q),
(252,414,o),
(216,458,o),
(216,487,qs),
(216,520,o),
(260,564,o),
(292,564,qs),
(323,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 23 6 3 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
3 1 2 3 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
3 1 2 3 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 17 1 0 17 33 18 33 0 16 1 16 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 395;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,-58,o),
(34,-47,qs),
(61,-21,o),
(70,-1,q),
(44,6,o),
(13,45,o),
(13,72,qs),
(13,104,o),
(58,147,o),
(91,147,qs),
(125,147,o),
(167,104,o),
(167,69,qs),
(167,-23,o),
(62,-102,qs),
(54,-108,o),
(48,-102,q),
(31,-89,o)
);
},
{
closed = 1;
nodes = (
(205,-58,o),
(215,-47,qs),
(241,-22,o),
(251,-1,q),
(225,6,o),
(194,45,o),
(194,72,qs),
(194,104,o),
(238,147,o),
(272,147,qs),
(306,147,o),
(348,104,o),
(348,69,qs),
(348,-23,o),
(243,-102,qs),
(235,-108,o),
(229,-102,qs),
(213,-89,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
31 13 2 0 73 1 1 0 0 118 26 24 38 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,266,o),
(28,278,qs),
(28,367,ls),
(28,379,o),
(41,379,qs),
(124,379,l),
(124,542,ls),
(124,556,o),
(137,556,qs),
(155,556,ls),
(243,556,o),
(243,458,qs),
(243,379,l),
(326,379,ls),
(339,379,o),
(339,367,qs),
(339,278,ls),
(339,266,o),
(326,266,qs),
(243,266,l),
(243,-147,ls),
(243,-160,o),
(230,-160,qs),
(137,-160,ls),
(124,-160,o),
(124,-147,qs),
(124,266,l),
(41,266,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 0 0 0 27 0 26 34 50 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,87,o),
(28,99,qs),
(28,188,ls),
(28,201,o),
(41,201,qs),
(124,201,l),
(124,266,l),
(41,266,ls),
(28,266,o),
(28,278,qs),
(28,367,ls),
(28,379,o),
(41,379,qs),
(124,379,l),
(124,542,ls),
(124,556,o),
(137,556,qs),
(155,556,ls),
(243,556,o),
(243,458,qs),
(243,379,l),
(326,379,ls),
(339,379,o),
(339,367,qs),
(339,278,ls),
(339,266,o),
(326,266,qs),
(243,266,l),
(243,201,l),
(326,201,ls),
(339,201,o),
(339,188,qs),
(339,99,ls),
(339,87,o),
(326,87,qs),
(243,87,l),
(243,-147,ls),
(243,-160,o),
(230,-160,qs),
(137,-160,ls),
(124,-160,o),
(124,-147,qs),
(124,87,l),
(41,87,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 0 0 0 43 0 42 33 35 34 50 35 33 35 34 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,369,qs),
(103,408,o),
(165,408,qs),
(220,408,o),
(254,378,qs),
(293,343,o),
(293,281,qs),
(293,227,o),
(263,193,qs),
(229,153,o),
(167,153,qs),
(112,153,o),
(77,184,qs),
(38,219,o),
(38,281,qs),
(38,335,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 97 0 1 1 48 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
38 35 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,36,o),
(28,68,qs),
(28,100,o),
(73,146,o),
(104,146,qs),
(136,146,o),
(180,100,o),
(180,68,qs),
(180,35,o),
(136,-10,o),
(104,-10,qs),
(73,-10,o)
);
},
{
closed = 1;
nodes = (
(257,36,o),
(257,68,qs),
(257,100,o),
(302,146,o),
(334,146,qs),
(365,146,o),
(410,100,o),
(410,68,qs),
(410,35,o),
(365,-10,o),
(334,-10,qs),
(302,-10,o)
);
},
{
closed = 1;
nodes = (
(487,36,o),
(487,68,qs),
(487,100,o),
(531,146,o),
(563,146,qs),
(595,146,o),
(639,100,o),
(639,68,qs),
(639,35,o),
(595,-10,o),
(563,-10,qs),
(531,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,13,q),
(505,542,l),
(511,556,o),
(525,556,qs),
(571,556,ls),
(604,556,o),
(626,513,o),
(610,483,qs),
(350,13,ls),
(342,0,o),
(331,0,qs),
(221,0,ls),
(208,0,o)
);
},
{
closed = 1;
nodes = (
(569,35,qs),
(520,84,o),
(520,169,qs),
(520,242,o),
(558,290,qs),
(601,344,o),
(677,344,qs),
(745,344,o),
(788,302,qs),
(839,253,o),
(839,169,qs),
(839,95,o),
(800,48,qs),
(755,-8,o),
(677,-8,qs),
(611,-8,o)
);
},
{
closed = 1;
nodes = (
(928,35,qs),
(879,84,o),
(879,169,qs),
(879,242,o),
(917,290,qs),
(961,344,o),
(1037,344,qs),
(1104,344,o),
(1148,302,qs),
(1198,253,o),
(1198,169,qs),
(1198,95,o),
(1159,48,qs),
(1114,-8,o),
(1037,-8,qs),
(971,-8,o)
);
},
{
closed = 1;
nodes = (
(73,257,qs),
(23,306,o),
(23,392,qs),
(23,464,o),
(61,512,qs),
(106,566,o),
(182,566,qs),
(248,566,o),
(292,524,qs),
(342,475,o),
(342,392,qs),
(342,318,o),
(303,269,qs),
(258,214,o),
(182,214,qs),
(116,214,o)
);
},
{
closed = 1;
nodes = (
(734,167,qs),
(734,248,o),
(677,248,qs),
(626,248,o),
(626,167,qs),
(626,90,o),
(677,90,qs),
(734,90,o)
);
},
{
closed = 1;
nodes = (
(1093,167,qs),
(1093,248,o),
(1037,248,qs),
(985,248,o),
(985,167,qs),
(985,90,o),
(1037,90,qs),
(1093,90,o)
);
},
{
closed = 1;
nodes = (
(237,389,qs),
(237,468,o),
(182,468,qs),
(128,468,o),
(128,389,qs),
(128,311,o),
(182,311,qs),
(237,311,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
5 1 3 11 1 9 6 3 9 105 20 1 12 17 1 6 8 12 6 105 0 13 13 1 97 7 1 1 1 39 77 19 10 18 3 8 8 0 97 16 4 15 2 14 5 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
5 1 3 11 1 9 6 3 9 105 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 0 13 13 7 97 0 7 7 39 77 19 10 18 3 8 8 0 97 16 4 15 2 14 5 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
5 1 3 11 1 9 6 3 9 105 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 0 13 13 7 97 0 7 7 39 77 14 1 0 0 40 77 19 10 18 3 8 8 2 97 16 4 15 3 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 13 3 7 13 105 5 1 3 11 1 9 6 3 9 105 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 14 1 0 0 40 77 19 10 18 3 8 8 2 97 16 4 15 3 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
78 77 70 69 62 61 46 45 30 29 14 13 2 0 82 80 77 84 78 84 74 72 69 76 70 76 66 64 61 68 62 68 54 52 45 60 46 60 38 36 29 44 30 44 22 20 13 28 14 28 9 6 0 12 2 12 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1221;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,46,o),
(262,38,o),
(257,38,qs),
(160,38,ls),
(143,38,o),
(133,51,qs),
(28,186,ls),
(21,194,o),
(21,200,qs),
(21,205,o),
(28,214,qs),
(132,349,ls),
(141,362,o),
(160,362,qs),
(255,362,ls),
(261,362,o),
(265,354,o),
(262,349,q),
(148,200,l),
(263,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,354,o),
(24,362,o),
(30,362,qs),
(125,362,ls),
(142,362,o),
(152,349,qs),
(257,214,ls),
(265,205,o),
(265,200,qs),
(265,195,o),
(257,186,qs),
(151,51,ls),
(141,38,o),
(123,38,qs),
(28,38,ls),
(23,38,o),
(20,46,o),
(23,51,q),
(137,200,l),
(23,349,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(7,13,qs),
(296,542,ls),
(304,556,o),
(317,556,qs),
(349,556,ls),
(382,556,o),
(404,513,o),
(387,482,qs),
(131,13,ls),
(124,0,o),
(111,0,qs),
(15,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 393;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,167,o),
(4,180,qs),
(34,249,ls),
(40,262,o),
(52,262,qs),
(96,262,l),
(96,298,l),
(28,298,ls),
(15,298,o),
(21,311,qs),
(51,379,ls),
(57,393,o),
(69,393,qs),
(114,393,l),
(141,470,o),
(198,515,qs),
(264,566,o),
(357,566,qs),
(429,566,o),
(482,546,qs),
(514,534,o),
(533,496,o),
(524,459,qs),
(516,427,ls),
(513,413,o),
(503,413,qs),
(499,413,o),
(487,418,qs),
(416,452,o),
(359,452,qs),
(288,452,o),
(258,393,q),
(459,393,ls),
(472,393,o),
(466,379,qs),
(437,311,ls),
(432,298,o),
(418,298,qs),
(234,298,l),
(234,289,o),
(234,276,qs),
(234,265,o),
(234,262,q),
(407,262,ls),
(421,262,o),
(416,249,qs),
(386,180,ls),
(380,167,o),
(367,167,qs),
(256,167,l),
(285,108,o),
(367,108,qs),
(438,108,o),
(494,167,qs),
(503,176,o),
(513,176,qs),
(536,176,o),
(536,147,qs),
(536,100,o),
(500,56,qs),
(447,-10,o),
(347,-10,qs),
(265,-10,o),
(205,31,qs),
(136,77,o),
(110,167,q),
(11,167,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 4 3 4 1 3 128 12 1 4 14 13 2 3 2 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 97 10 1 6 6 48 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 4 3 4 1 3 128 0 9 0 7 8 9 7 105 12 1 4 14 13 2 3 2 4 3 103 11 1 5 5 6 97 10 1 6 6 48 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 66 0 65 62 60 59 57 54 52 49 47 34 33 35 36 35 33 34 36 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,476,o),
(25,482,qs),
(25,549,ls),
(25,556,o),
(31,556,qs),
(252,556,ls),
(289,556,o),
(289,522,qs),
(289,484,ls),
(289,476,o),
(281,476,qs),
(202,476,l),
(202,278,ls),
(202,273,o),
(196,273,qs),
(117,273,ls),
(111,273,o),
(111,278,qs),
(111,476,l),
(31,476,ls)
);
},
{
closed = 1;
nodes = (
(398,273,o),
(393,273,qs),
(318,273,ls),
(312,273,o),
(312,278,qs),
(329,549,ls),
(329,556,o),
(336,556,qs),
(399,556,ls),
(443,556,o),
(451,528,qs),
(481,421,l),
(519,549,ls),
(521,556,o),
(527,556,qs),
(596,556,ls),
(615,556,o),
(640,536,o),
(641,521,qs),
(654,278,ls),
(654,273,o),
(649,273,qs),
(572,273,ls),
(566,273,o),
(566,278,qs),
(557,421,l),
(514,278,ls),
(512,273,o),
(506,273,qs),
(457,273,ls),
(450,273,o),
(448,278,qs),
(407,419,l),
(398,278,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
17 16 2 1 2 53 48 41 33 28 27 20 6 1 9 0 1 2 76 8 5 4 3 0 1 0 134 7 6 2 2 1 1 2 87 7 6 2 2 2 1 95 9 3 2 1 2 1 79 0 0 51 50 46 43 38 36 31 30 24 22 0 19 0 19 35 35 19 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 704;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,329,o),
(38,329,qs),
(337,329,ls),
(407,329,o),
(407,263,qs),
(407,230,ls),
(407,217,o),
(393,217,qs),
(38,217,ls),
(25,217,o),
(25,230,qs),
(25,316,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,118,o),
(25,131,qs),
(25,218,ls),
(25,231,o),
(38,231,qs),
(133,231,l),
(179,314,l),
(38,314,ls),
(25,314,o),
(25,327,qs),
(25,413,ls),
(25,427,o),
(38,427,qs),
(242,427,l),
(286,507,ls),
(294,522,o),
(311,522,qs),
(333,522,ls),
(366,522,o),
(386,480,o),
(368,448,qs),
(354,426,l),
(407,416,o),
(407,359,qs),
(407,327,ls),
(407,314,o),
(393,314,qs),
(293,314,l),
(247,231,l),
(337,231,ls),
(407,231,o),
(407,164,qs),
(407,131,ls),
(407,118,o),
(393,118,qs),
(184,118,l),
(156,69,ls),
(146,52,o),
(131,52,qs),
(52,52,ls),
(45,52,o),
(40,62,o),
(43,68,qs),
(71,118,l),
(38,118,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
22 1 3 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 5 4 133 0 0 1 1 0 113 0 5 6 1 3 2 5 3 103 7 1 2 1 1 2 87 7 1 2 2 1 97 9 8 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 4 133 0 0 1 0 134 0 5 6 1 3 2 5 3 103 7 1 2 1 1 2 87 7 1 2 2 1 97 9 8 2 1 2 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 44 0 43 33 35 34 55 33 35 34 51 10 6 30 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,13,qs),
(30,96,ls),
(30,109,o),
(43,109,qs),
(416,109,ls),
(428,109,o),
(428,96,qs),
(428,13,ls),
(428,0,o),
(416,0,qs),
(43,0,ls),
(30,0,o)
);
},
{
closed = 1;
nodes = (
(393,272,o),
(428,217,o),
(428,164,qs),
(428,147,ls),
(428,135,o),
(417,140,qs),
(43,303,ls),
(30,308,o),
(30,324,qs),
(30,386,ls),
(30,399,o),
(43,404,qs),
(413,567,ls),
(419,570,o),
(428,566,o),
(428,561,qs),
(428,467,ls),
(428,452,o),
(413,446,qs),
(199,353,l),
(348,291,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
16 1 1 74 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,13,qs),
(35,96,ls),
(35,109,o),
(48,109,qs),
(421,109,ls),
(433,109,o),
(433,96,qs),
(433,13,ls),
(433,0,o),
(421,0,qs),
(48,0,ls),
(35,0,o)
);
},
{
closed = 1;
nodes = (
(40,452,o),
(40,467,qs),
(40,561,ls),
(40,566,o),
(49,570,o),
(55,567,qs),
(426,404,ls),
(438,399,o),
(438,386,qs),
(438,324,ls),
(438,308,o),
(426,303,qs),
(52,140,ls),
(40,135,o),
(40,147,qs),
(40,164,ls),
(40,217,o),
(75,272,o),
(120,291,qs),
(269,353,l),
(55,446,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,513,qs),
(232,495,o),
(256,472,o),
(272,472,qs),
(290,472,o),
(314,496,o),
(314,513,qs),
(314,547,o),
(272,554,q),
(231,546,o)
);
},
{
closed = 1;
nodes = (
(318,488,qs),
(319,471,o),
(342,447,o),
(359,447,qs),
(376,447,o),
(400,471,o),
(400,488,qs),
(401,523,o),
(359,529,q),
(318,522,o)
);
},
{
closed = 1;
nodes = (
(37,317,qs),
(37,300,o),
(62,276,o),
(78,276,qs),
(95,276,o),
(119,300,o),
(119,317,qs),
(119,352,o),
(78,359,q),
(37,351,o)
);
},
{
closed = 1;
nodes = (
(426,317,qs),
(427,300,o),
(450,276,o),
(467,276,qs),
(484,276,o),
(508,300,o),
(508,317,qs),
(509,352,o),
(467,359,q),
(426,351,o)
);
},
{
closed = 1;
nodes = (
(314,121,qs),
(314,138,o),
(290,162,o),
(272,162,qs),
(255,162,o),
(232,138,o),
(232,121,qs),
(232,86,o),
(272,80,q),
(314,88,o)
);
},
{
closed = 1;
nodes = (
(392,421,qs),
(392,404,o),
(416,380,o),
(432,380,qs),
(449,380,o),
(474,404,o),
(474,421,qs),
(474,456,o),
(432,463,q),
(392,455,o)
);
},
{
closed = 1;
nodes = (
(138,489,qs),
(139,472,o),
(163,447,o),
(180,447,qs),
(197,447,o),
(220,471,o),
(220,489,qs),
(221,523,o),
(180,530,q),
(138,523,o)
);
},
{
closed = 1;
nodes = (
(64,413,qs),
(65,396,o),
(89,371,o),
(106,371,qs),
(123,371,o),
(146,395,o),
(146,413,qs),
(147,447,o),
(106,454,q),
(64,447,o)
);
},
{
closed = 1;
nodes = (
(414,155,qs),
(414,172,o),
(389,196,o),
(372,196,qs),
(356,196,o),
(332,172,o),
(332,155,qs),
(332,120,o),
(372,113,q),
(414,121,o)
);
},
{
closed = 1;
nodes = (
(480,221,qs),
(480,238,o),
(456,263,o),
(439,263,qs),
(422,263,o),
(399,239,o),
(398,221,qs),
(398,187,o),
(439,180,q),
(481,187,o)
);
},
{
closed = 1;
nodes = (
(220,155,qs),
(220,172,o),
(196,196,o),
(179,196,qs),
(162,196,o),
(138,172,o),
(138,155,qs),
(138,120,o),
(179,113,q),
(220,121,o)
);
},
{
closed = 1;
nodes = (
(140,221,qs),
(140,239,o),
(117,263,o),
(100,263,qs),
(83,263,o),
(59,238,o),
(58,221,qs),
(58,187,o),
(100,180,q),
(141,188,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 0 1 0 133 6 1 1 5 1 133 0 5 7 5 133 0 7 2 7 133 3 1 2 9 2 133 11 1 9 8 9 133 10 1 8 4 8 133 0 4 4 118 116 114 106 104 96 94 40 40 40 40 40 40 40 40 36 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,277,qs),
(353,357,o),
(302,443,o),
(254,443,qs),
(210,443,o),
(184,408,qs),
(153,365,o),
(153,277,qs),
(153,114,o),
(254,114,qs),
(353,114,o)
);
},
{
closed = 1;
nodes = (
(86,59,qs),
(16,136,o),
(16,277,qs),
(16,399,o),
(71,476,qs),
(135,566,o),
(254,566,qs),
(357,566,o),
(420,496,qs),
(490,418,o),
(490,277,qs),
(490,154,o),
(437,79,qs),
(374,-9,o),
(254,-9,qs),
(148,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
12 11 1 0 20 18 11 26 12 26 7 5 0 10 1 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,383,ls),
(81,378,o),
(81,393,qs),
(81,496,ls),
(81,509,o),
(95,516,q),
(177,546,ls),
(205,556,o),
(230,556,qs),
(270,556,ls),
(339,556,o),
(339,488,qs),
(339,123,l),
(418,123,ls),
(487,123,o),
(487,57,qs),
(487,17,ls),
(487,0,o),
(471,0,qs),
(80,0,ls),
(67,0,o),
(67,13,qs),
(67,110,ls),
(67,123,o),
(80,123,qs),
(206,123,l),
(206,424,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,123,o),
(459,59,qs),
(459,17,ls),
(459,0,o),
(443,0,qs),
(53,0,ls),
(40,0,o),
(40,13,qs),
(40,114,o),
(88,182,qs),
(125,234,o),
(218,290,qs),
(277,325,o),
(314,365,o),
(314,393,qs),
(314,448,o),
(239,448,qs),
(182,448,o),
(103,413,q),
(102,412,o),
(101,412,q),
(93,408,o),
(89,408,qs),
(80,408,o),
(77,419,qs),
(64,457,ls),
(44,517,o),
(107,542,qs),
(169,566,o),
(243,566,qs),
(326,566,o),
(382,530,qs),
(452,485,o),
(452,401,qs),
(452,339,o),
(415,289,qs),
(384,248,o),
(311,201,qs),
(251,163,o),
(222,139,o),
(215,123,q),
(389,123,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 57 37 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,163,qs),
(462,92,o),
(411,45,qs),
(353,-10,o),
(250,-10,qs),
(159,-10,o),
(101,38,qs),
(44,85,o),
(44,148,qs),
(44,177,o),
(65,177,qs),
(72,177,o),
(82,168,qs),
(150,108,o),
(236,108,qs),
(277,108,o),
(327,144,o),
(327,176,qs),
(327,224,o),
(257,224,qs),
(187,224,ls),
(151,224,o),
(121,250,o),
(121,281,qs),
(121,327,ls),
(121,346,o),
(137,346,qs),
(240,346,ls),
(308,346,o),
(308,401,qs),
(308,449,o),
(237,449,qs),
(171,449,o),
(102,413,qs),
(93,408,o),
(88,408,qs),
(81,408,o),
(78,417,qs),
(64,457,ls),
(44,517,o),
(107,542,qs),
(168,566,o),
(251,566,qs),
(333,566,o),
(382,535,qs),
(443,497,o),
(443,414,qs),
(443,331,o),
(368,293,q),
(462,265,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 35 21 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,106,o),
(22,119,qs),
(22,193,ls),
(22,208,o),
(32,224,qs),
(224,531,ls),
(240,556,o),
(269,556,qs),
(340,556,ls),
(410,556,o),
(410,488,qs),
(410,230,l),
(433,230,ls),
(502,230,o),
(502,163,qs),
(502,123,ls),
(502,106,o),
(486,106,qs),
(410,106,l),
(410,13,ls),
(410,0,o),
(398,0,qs),
(291,0,ls),
(279,0,o),
(279,13,qs),
(279,106,l),
(35,106,ls)
);
},
{
closed = 1;
nodes = (
(279,404,l),
(170,230,l),
(279,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,377,o),
(265,377,qs),
(352,377,o),
(403,334,qs),
(462,286,o),
(462,193,qs),
(462,106,o),
(407,51,qs),
(347,-10,o),
(247,-10,qs),
(161,-10,o),
(105,33,qs),
(46,78,o),
(46,143,qs),
(46,173,o),
(67,173,qs),
(75,173,o),
(85,164,qs),
(147,108,o),
(232,108,qs),
(329,108,o),
(329,192,qs),
(329,223,o),
(276,259,o),
(230,259,qs),
(154,259,o),
(85,237,qs),
(69,232,o),
(69,248,qs),
(69,542,ls),
(69,556,o),
(82,556,qs),
(363,556,ls),
(433,556,o),
(433,488,qs),
(433,449,ls),
(433,433,o),
(418,433,qs),
(190,433,l),
(190,369,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,394,o),
(414,341,qs),
(472,285,o),
(472,203,qs),
(472,117,o),
(422,60,qs),
(362,-9,o),
(259,-9,qs),
(168,-9,o),
(107,40,qs),
(36,97,o),
(36,191,qs),
(36,233,o),
(65,309,o),
(109,381,qs),
(217,554,ls),
(224,566,o),
(240,566,qs),
(282,566,o),
(302,534,qs),
(326,494,o),
(297,443,qs),
(268,394,l),
(275,394,ls)
);
},
{
closed = 1;
nodes = (
(219,110,o),
(258,110,qs),
(293,110,o),
(339,158,o),
(339,194,qs),
(339,230,o),
(291,279,o),
(255,279,qs),
(219,279,o),
(170,231,o),
(170,194,qs),
(170,157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 5 1 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 34 32 28 26 0 23 0 22 40 36 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,433,o),
(59,446,qs),
(59,542,ls),
(59,556,o),
(72,556,qs),
(396,556,ls),
(465,556,o),
(465,488,qs),
(465,476,ls),
(465,450,o),
(452,419,qs),
(260,13,ls),
(254,0,o),
(241,0,qs),
(123,0,ls),
(109,0,o),
(115,13,qs),
(316,433,l),
(72,433,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,413,qs),
(44,479,o),
(95,520,qs),
(152,566,o),
(254,566,qs),
(341,566,o),
(397,530,qs),
(462,488,o),
(462,413,qs),
(462,331,o),
(394,289,q),
(474,253,o),
(474,164,qs),
(474,93,o),
(425,47,qs),
(365,-9,o),
(254,-9,qs),
(156,-9,o),
(97,35,qs),
(32,82,o),
(32,164,qs),
(32,249,o),
(110,291,q),
(44,330,o)
);
},
{
closed = 1;
nodes = (
(215,100,o),
(254,100,qs),
(292,100,o),
(339,136,o),
(339,165,qs),
(339,233,o),
(254,233,qs),
(166,233,o),
(166,165,qs),
(166,136,o)
);
},
{
closed = 1;
nodes = (
(218,339,o),
(254,339,qs),
(289,339,o),
(330,371,o),
(330,398,qs),
(330,426,o),
(289,458,o),
(254,458,qs),
(218,458,o),
(175,426,o),
(175,398,qs),
(175,371,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 2 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 0 2 3 5 2 105 0 4 4 1 97 0 1 1 23 77 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 3 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 5 1 4 105 0 5 0 2 3 5 2 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 35 38 42 37 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,163,o),
(96,215,qs),
(39,271,o),
(39,351,qs),
(39,439,o),
(91,498,qs),
(152,566,o),
(256,566,qs),
(347,566,o),
(406,518,qs),
(475,462,o),
(475,367,qs),
(475,326,o),
(443,243,o),
(405,181,qs),
(294,3,ls),
(286,-10,o),
(270,-10,qs),
(229,-10,o),
(208,25,qs),
(184,67,o),
(213,114,qs),
(243,163,l),
(230,163,ls)
);
},
{
closed = 1;
nodes = (
(340,326,o),
(340,363,qs),
(340,400,o),
(291,448,o),
(254,448,qs),
(218,448,o),
(172,400,o),
(172,363,qs),
(172,324,o),
(218,277,o),
(256,277,qs),
(291,277,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 1 3 5 1 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 6 1 3 2 2 3 89 6 1 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 0 0 31 29 24 35 25 35 0 23 0 22 40 36 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,440,o),
(157,444,qs),
(157,452,o),
(166,452,qs),
(246,452,l),
(276,556,o),
(341,624,qs),
(406,691,o),
(474,697,qs),
(475,697,o),
(476,697,qs),
(484,699,o),
(485,690,qs),
(485,687,o),
(485,679,qs),
(486,670,o),
(486,667,qs),
(486,632,o),
(472,594,o),
(455,579,qs),
(445,570,o),
(443,568,qs),
(390,513,o),
(366,452,q),
(425,452,ls),
(433,452,o),
(433,444,qs),
(433,440,o),
(430,438,q),
(350,359,l),
(324,376,o),
(296,376,qs),
(265,376,o),
(241,359,q),
(160,438,l)
);
},
{
closed = 1;
nodes = (
(210,222,q),
(131,143,ls),
(128,140,o),
(125,140,qs),
(117,140,o),
(117,148,qs),
(117,219,l),
(48,248,l),
(39,253,o),
(39,262,qs),
(39,291,ls),
(39,301,o),
(48,305,qs),
(117,334,l),
(117,405,ls),
(117,413,o),
(125,413,qs),
(128,413,o),
(131,411,q),
(210,332,l),
(194,311,o),
(194,278,qs),
(194,249,o)
);
},
{
closed = 1;
nodes = (
(553,300,o),
(553,290,qs),
(553,261,ls),
(553,252,o),
(543,247,qs),
(475,218,l),
(474,146,ls),
(474,137,o),
(466,137,qs),
(463,137,o),
(460,140,qs),
(382,221,l),
(398,248,o),
(398,277,qs),
(398,306,o),
(382,330,q),
(461,409,l),
(463,412,o),
(467,412,qs),
(475,412,o),
(475,403,qs),
(475,333,l),
(543,304,ls)
);
},
{
closed = 1;
nodes = (
(360,302,o),
(360,276,qs),
(360,249,o),
(322,211,o),
(295,211,qs),
(267,211,o),
(230,248,o),
(230,276,qs),
(230,303,o),
(268,341,o),
(295,341,qs),
(321,341,o)
);
},
{
closed = 1;
nodes = (
(451,-23,qs),
(472,-42,o),
(486,-78,o),
(486,-114,qs),
(486,-118,o),
(485,-125,qs),
(485,-135,o),
(485,-138,qs),
(484,-146,o),
(477,-145,qs),
(474,-145,ls),
(416,-139,o),
(358,-88,qs),
(281,-19,o),
(246,100,q),
(166,100,ls),
(157,100,o),
(157,108,qs),
(157,112,o),
(160,114,q),
(241,192,l),
(265,176,o),
(296,176,qs),
(324,176,o),
(350,192,q),
(430,114,l),
(433,112,o),
(433,108,qs),
(433,100,o),
(425,100,qs),
(366,100,l),
(390,39,o),
(443,-16,qs),
(446,-19,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 133 values pushed */
32 7 2 3 1 4 1 7 0 74 68 64 58 56 50 43 37 8 8 7 105 101 2 10 8 108 98 2 9 6 5 76 19 17 2 1 74 120 118 2 9 73 2 1 1 3 1 133 5 1 3 0 3 133 0 0 7 0 133 0 10 8 4 8 10 4 128 0 4 6 8 4 6 126 0 6 9 8 6 9 126 11 1 9 9 132 12 1 7 8 8 7 89 12 1 7 7 8 97 0 8 7 8 81 82 81 111 109 104 102 97 95 88 86 81 92 82 92 72 71 61 60 53 52 41 40 31 29 37 33 13 6 24 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,575,qs),
(120,594,o),
(106,630,o),
(106,667,qs),
(106,670,o),
(107,678,qs),
(107,687,o),
(107,690,qs),
(108,698,o),
(114,698,q),
(117,697,o),
(118,697,qs),
(176,692,o),
(234,640,qs),
(311,571,o),
(346,452,q),
(426,452,ls),
(435,452,o),
(435,444,qs),
(435,440,o),
(432,438,q),
(351,359,l),
(327,376,o),
(296,376,qs),
(268,376,o),
(242,359,q),
(162,438,l),
(159,440,o),
(159,444,qs),
(159,452,o),
(167,452,qs),
(226,452,l),
(202,513,o),
(149,568,qs),
(146,571,o)
);
},
{
closed = 1;
nodes = (
(553,301,o),
(553,291,qs),
(553,262,ls),
(553,253,o),
(543,248,qs),
(475,219,l),
(475,148,ls),
(475,140,o),
(467,140,qs),
(463,140,o),
(461,143,q),
(382,222,l),
(398,249,o),
(398,278,qs),
(398,311,o),
(382,332,q),
(461,411,l),
(464,413,o),
(467,413,qs),
(475,413,o),
(475,405,qs),
(475,334,l),
(543,305,ls)
);
},
{
closed = 1;
nodes = (
(48,247,l),
(39,252,o),
(39,261,qs),
(39,290,ls),
(39,300,o),
(48,304,qs),
(117,333,l),
(117,403,ls),
(117,412,o),
(125,412,qs),
(128,412,o),
(131,409,qs),
(210,330,l),
(194,306,o),
(194,277,qs),
(194,248,o),
(210,221,q),
(132,140,ls),
(129,137,o),
(126,137,qs),
(118,137,o),
(118,146,qs),
(117,218,l)
);
},
{
closed = 1;
nodes = (
(362,303,o),
(362,276,qs),
(362,248,o),
(324,211,o),
(297,211,qs),
(270,211,o),
(232,249,o),
(232,276,qs),
(232,302,o),
(271,341,o),
(297,341,qs),
(324,341,o)
);
},
{
closed = 1;
nodes = (
(435,112,o),
(435,108,qs),
(435,100,o),
(426,100,qs),
(346,100,l),
(316,-4,o),
(250,-72,qs),
(186,-138,o),
(118,-145,qs),
(117,-145,o),
(116,-145,qs),
(108,-146,o),
(107,-138,qs),
(107,-135,o),
(107,-127,qs),
(106,-118,o),
(106,-114,qs),
(106,-54,o),
(137,-26,qs),
(146,-18,o),
(149,-16,q),
(201,39,o),
(226,100,q),
(167,100,ls),
(159,100,o),
(159,108,qs),
(159,112,o),
(162,114,q),
(242,192,l),
(268,176,o),
(296,176,qs),
(327,176,o),
(351,192,q),
(432,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 132 values pushed */
15 5 2 3 0 12 8 2 7 1 80 73 67 63 51 45 41 35 8 8 7 97 1 9 8 124 100 2 10 5 5 76 28 26 2 0 74 111 109 2 10 73 2 1 0 3 0 133 6 1 3 1 3 133 0 1 7 1 133 0 9 8 4 8 9 4 128 0 4 5 8 4 5 126 0 5 10 8 5 10 126 11 1 10 10 132 12 1 7 8 8 7 89 12 1 7 7 8 97 0 8 7 8 81 82 81 123 121 103 101 96 94 88 86 81 92 82 92 71 70 60 59 49 48 38 37 37 37 34 13 6 25 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,378,ls),
(92,457,o),
(134,506,qs),
(182,564,o),
(272,564,qs),
(351,564,o),
(398,520,qs),
(452,469,o),
(452,378,qs),
(452,106,ls),
(452,25,o),
(395,6,qs),
(375,0,o),
(346,0,qs),
(334,0,ls),
(319,0,o),
(319,14,qs),
(319,386,ls),
(319,442,o),
(272,442,qs),
(226,442,o),
(226,385,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 30 28 23 21 14 11 8 6 0 31 1 31 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,180,o),
(51,201,qs),
(41,451,l),
(41,531,o),
(98,549,qs),
(118,556,o),
(147,556,qs),
(159,556,ls),
(174,556,o),
(174,542,qs),
(165,201,ls),
(164,180,o),
(144,180,qs),
(72,180,ls)
);
},
{
closed = 1;
nodes = (
(185,100,o),
(185,68,qs),
(185,35,o),
(141,-10,o),
(109,-10,qs),
(78,-10,o),
(33,36,o),
(33,68,qs),
(33,100,o),
(78,146,o),
(109,146,qs),
(141,146,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 0 3 2 3 101 4 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 21 19 14 25 15 25 7 4 0 13 1 12 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,22,qs),
(44,451,ls),
(44,531,o),
(101,549,q),
(118,556,o),
(152,556,qs),
(236,556,o),
(290,502,qs),
(294,498,o),
(297,502,qs),
(319,532,o),
(373,556,o),
(417,556,qs),
(472,556,ls),
(485,556,o),
(485,541,qs),
(485,531,ls),
(485,502,o),
(479,485,qs),
(468,448,o),
(423,437,q),
(421,436,o),
(409,433,qs),
(404,432,o),
(402,432,q),
(371,425,o),
(334,380,o),
(311,322,qs),
(306,307,o),
(296,307,qs),
(287,307,o),
(280,322,qs),
(257,379,o),
(225,420,o),
(196,427,qs),
(187,429,o),
(180,430,qs),
(176,430,o),
(176,427,qs),
(176,22,ls),
(176,0,o),
(155,0,qs),
(66,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 2 1 76 0 1 2 0 2 1 0 128 3 1 2 2 23 77 4 1 0 0 24 0 78 1 0 37 35 30 27 13 11 0 43 1 42 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,556,o),
(431,556,qs),
(441,556,o),
(443,542,qs),
(445,530,ls),
(458,421,o),
(406,387,qs),
(224,266,l),
(196,245,o),
(175,211,o),
(175,189,qs),
(175,162,o),
(213,126,o),
(241,126,qs),
(485,126,ls),
(533,126,o),
(591,76,o),
(591,34,qs),
(591,24,ls),
(591,9,o),
(582,0,o),
(566,0,qs),
(231,0,ls),
(154,0,o),
(102,40,qs),
(39,90,o),
(39,181,qs),
(39,249,o),
(79,303,qs),
(113,350,o),
(190,401,qs),
(414,548,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 26 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,507,o),
(87,522,qs),
(29,674,ls),
(26,681,o),
(29,684,o),
(37,684,qs),
(86,684,o),
(103,643,qs),
(126,585,l),
(149,643,ls),
(158,666,o),
(187,684,o),
(214,684,qs),
(222,684,o),
(225,681,o),
(223,674,qs),
(164,522,ls),
(159,507,o),
(143,507,qs),
(109,507,ls)
);
},
{
closed = 1;
nodes = (
(478,556,o),
(478,542,qs),
(478,196,ls),
(478,112,o),
(435,61,qs),
(384,0,o),
(287,0,qs),
(61,0,ls),
(45,0,o),
(34,10,o),
(34,24,qs),
(34,36,ls),
(34,79,o),
(93,132,o),
(141,133,qs),
(153,133,l),
(94,316,l),
(72,395,o),
(121,427,qs),
(142,441,o),
(170,451,q),
(179,453,ls),
(190,457,o),
(194,444,qs),
(296,133,l),
(300,133,ls),
(320,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(402,549,qs),
(421,556,o),
(451,556,qs),
(462,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 10 2 3 1 1 76 2 1 1 3 1 133 7 1 0 3 4 3 0 4 128 8 1 3 3 23 77 5 1 4 4 6 96 0 6 6 24 6 78 21 20 1 0 48 45 40 38 28 27 20 54 21 53 14 12 7 6 0 19 1 18 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,507,o),
(87,522,qs),
(29,674,ls),
(26,681,o),
(29,684,o),
(37,684,qs),
(86,684,o),
(103,643,qs),
(126,585,l),
(149,643,ls),
(158,666,o),
(187,684,o),
(214,684,qs),
(222,684,o),
(225,681,o),
(223,674,qs),
(164,522,ls),
(159,507,o),
(143,507,qs),
(109,507,ls)
);
},
{
closed = 1;
nodes = (
(570,0,l),
(520,0,ls),
(456,0,o),
(413,39,q),
(365,0,o),
(287,0,qs),
(61,0,ls),
(45,0,o),
(34,10,o),
(34,24,qs),
(34,36,ls),
(34,79,o),
(93,132,o),
(141,133,qs),
(153,133,l),
(94,316,l),
(72,395,o),
(121,427,qs),
(142,441,o),
(170,451,q),
(179,453,ls),
(190,457,o),
(194,444,qs),
(296,133,l),
(300,133,ls),
(320,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(402,549,qs),
(421,556,o),
(451,556,qs),
(462,556,ls),
(478,556,o),
(478,542,qs),
(478,196,ls),
(478,133,o),
(533,133,qs),
(570,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
16 10 2 4 1 55 1 7 3 2 76 2 1 1 4 1 133 9 1 0 4 3 4 0 3 128 0 4 4 23 77 6 5 10 3 3 3 7 98 8 1 7 7 24 7 78 21 20 1 0 58 56 54 51 46 44 34 33 27 24 20 59 21 59 14 12 7 6 0 19 1 18 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,640,o),
(457,667,qs),
(457,695,o),
(495,733,o),
(522,733,qs),
(550,733,o),
(587,695,o),
(587,667,qs),
(587,639,o),
(550,601,o),
(522,601,qs),
(495,601,o)
);
},
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 102 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 54 52 48 46 37 36 28 26 19 16 12 55 13 55 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,695,o),
(229,667,qs),
(229,639,o),
(192,601,o),
(164,601,qs),
(137,601,o),
(99,640,o),
(99,667,qs),
(99,695,o),
(137,733,o),
(164,733,qs),
(192,733,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 28 26 21 18 12 29 13 29 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,640,o),
(99,667,qs),
(99,695,o),
(137,733,o),
(164,733,qs),
(192,733,o),
(229,695,o),
(229,667,qs),
(229,639,o),
(192,601,o),
(164,601,qs),
(137,601,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
30 1 5 2 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 19 16 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,772,o),
(457,796,qs),
(457,820,o),
(489,854,o),
(513,854,qs),
(536,854,o),
(570,820,o),
(570,796,qs),
(570,772,o),
(536,738,o),
(513,738,qs),
(490,738,o)
);
},
{
closed = 1;
nodes = (
(382,646,o),
(382,673,qs),
(382,699,o),
(418,736,o),
(443,736,qs),
(470,736,o),
(506,699,o),
(506,673,qs),
(506,646,o),
(470,609,o),
(443,609,qs),
(418,609,o)
);
},
{
closed = 1;
nodes = (
(556,736,o),
(582,736,qs),
(608,736,o),
(644,699,o),
(644,673,qs),
(644,646,o),
(608,609,o),
(582,609,qs),
(556,609,o),
(520,646,o),
(520,673,qs),
(520,699,o)
);
},
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 102 0 7 7 23 77 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 78 76 72 70 61 60 52 50 43 40 36 79 37 79 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,772,o),
(100,796,qs),
(100,820,o),
(133,854,o),
(156,854,qs),
(179,854,o),
(213,820,o),
(213,796,qs),
(213,773,o),
(179,738,o),
(156,738,qs),
(133,738,o)
);
},
{
closed = 1;
nodes = (
(25,646,o),
(25,673,qs),
(25,699,o),
(61,736,o),
(87,736,qs),
(113,736,o),
(149,699,o),
(149,673,qs),
(149,646,o),
(113,609,o),
(87,609,qs),
(61,609,o)
);
},
{
closed = 1;
nodes = (
(163,646,o),
(163,673,qs),
(163,699,o),
(199,736,o),
(225,736,qs),
(251,736,o),
(287,699,o),
(287,673,qs),
(287,646,o),
(251,609,o),
(225,609,qs),
(199,609,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 97 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 52 50 45 42 36 53 37 53 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,772,o),
(100,796,qs),
(100,820,o),
(133,854,o),
(156,854,qs),
(179,854,o),
(213,820,o),
(213,796,qs),
(213,773,o),
(179,738,o),
(156,738,qs),
(133,738,o)
);
},
{
closed = 1;
nodes = (
(25,646,o),
(25,673,qs),
(25,699,o),
(61,736,o),
(87,736,qs),
(113,736,o),
(149,699,o),
(149,673,qs),
(149,646,o),
(113,609,o),
(87,609,qs),
(61,609,o)
);
},
{
closed = 1;
nodes = (
(199,736,o),
(225,736,qs),
(251,736,o),
(287,699,o),
(287,673,qs),
(287,646,o),
(251,609,o),
(225,609,qs),
(199,609,o),
(163,646,o),
(163,673,qs),
(163,699,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
54 1 9 6 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 98 10 1 9 9 24 9 78 37 36 13 12 1 0 57 55 53 51 50 48 43 40 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,785,o),
(423,789,o),
(431,789,qs),
(481,789,o),
(497,747,qs),
(521,689,l),
(543,747,ls),
(552,770,o),
(582,789,o),
(609,789,qs),
(621,789,o),
(617,778,qs),
(559,626,ls),
(554,611,o),
(537,611,qs),
(503,611,ls),
(487,611,o),
(482,626,qs),
(423,778,ls)
);
},
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
18 12 2 0 1 1 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 102 0 4 4 23 77 9 1 3 3 8 98 0 8 8 24 8 78 20 19 61 59 55 53 44 43 35 33 26 23 19 62 20 62 37 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,785,o),
(263,778,qs),
(205,626,ls),
(200,611,o),
(183,611,qs),
(149,611,ls),
(133,611,o),
(128,626,qs),
(69,778,ls),
(67,785,o),
(69,789,o),
(77,789,qs),
(127,789,o),
(143,747,qs),
(167,689,l),
(189,747,ls),
(198,770,o),
(228,789,o),
(255,789,qs),
(263,789,o)
);
},
{
closed = 1;
nodes = (
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
10 4 2 2 0 1 76 1 6 2 0 2 0 133 0 2 3 2 133 7 1 3 3 23 77 0 4 4 5 98 0 5 5 24 5 78 21 20 1 0 31 29 28 26 20 37 21 36 15 12 8 6 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,785,o),
(69,789,o),
(77,789,qs),
(127,789,o),
(143,747,qs),
(167,689,l),
(189,747,ls),
(198,770,o),
(228,789,o),
(255,789,qs),
(263,789,o),
(266,785,o),
(263,778,qs),
(205,626,ls),
(200,611,o),
(183,611,qs),
(149,611,ls),
(133,611,o),
(128,626,qs),
(69,778,ls)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
19 13 2 0 1 38 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 98 7 1 6 6 24 6 78 21 20 41 39 37 35 34 32 27 24 20 42 21 42 37 36 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,0,o),
(40,12,qs),
(310,503,ls),
(337,554,o),
(379,556,qs),
(449,556,ls),
(468,556,o),
(458,535,q),
(167,8,ls),
(163,0,o),
(153,0,qs),
(50,0,ls)
);
},
{
closed = 1;
nodes = (
(217,487,o),
(217,459,qs),
(217,431,o),
(180,393,o),
(153,393,qs),
(126,393,o),
(88,431,o),
(88,459,qs),
(88,487,o),
(125,524,o),
(153,524,qs),
(180,524,o)
);
},
{
closed = 1;
nodes = (
(396,85,o),
(396,57,qs),
(396,29,o),
(359,-9,o),
(332,-9,qs),
(305,-9,o),
(267,29,o),
(267,57,qs),
(267,84,o),
(304,122,o),
(332,122,qs),
(359,122,o)
);
},
{
closed = 1;
nodes = (
(580,85,o),
(580,57,qs),
(580,29,o),
(542,-9,o),
(515,-9,qs),
(488,-9,o),
(450,29,o),
(450,57,qs),
(450,84,o),
(488,122,o),
(515,122,qs),
(543,122,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 1 2 1 133 8 1 0 4 5 4 0 5 128 9 1 2 0 3 4 2 3 105 11 6 10 3 4 0 5 4 89 11 6 10 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 1 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 4 0 11 1 10 12 6 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
},
{
closed = 1;
nodes = (
(148,-306,o),
(148,-334,qs),
(148,-362,o),
(111,-401,o),
(84,-401,qs),
(57,-401,o),
(19,-362,o),
(19,-334,qs),
(19,-307,o),
(57,-269,o),
(84,-269,qs),
(111,-269,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 133 3 1 2 0 4 6 2 4 105 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 105 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
34 33 1 0 40 38 33 44 34 44 31 29 25 23 19 17 15 13 7 4 0 32 1 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,620,o),
(79,623,o),
(87,623,qs),
(137,623,o),
(153,582,qs),
(176,524,l),
(199,582,ls),
(208,605,o),
(237,623,o),
(265,623,qs),
(272,623,o),
(275,620,o),
(273,613,qs),
(215,461,ls),
(209,446,o),
(193,446,qs),
(159,446,ls),
(143,446,o),
(137,461,qs),
(79,613,ls)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 13 2 0 1 48 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 6 1 5 0 7 5 7 101 9 1 3 3 8 98 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 9 1 3 3 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
21 20 51 49 45 43 39 37 35 33 27 24 20 52 21 52 37 21 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
},
{
closed = 1;
nodes = (
(165,-275,o),
(162,-282,qs),
(104,-434,ls),
(99,-449,o),
(82,-449,qs),
(48,-449,ls),
(32,-449,o),
(27,-434,qs),
(-32,-282,ls),
(-34,-275,o),
(-32,-271,o),
(-24,-271,qs),
(26,-271,o),
(42,-313,qs),
(66,-371,l),
(88,-313,ls),
(105,-271,o),
(154,-271,qs),
(162,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 5 0 42 36 2 8 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 133 7 10 2 6 4 8 4 6 8 128 0 8 8 132 3 1 2 0 4 6 2 4 105 9 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 7 10 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 105 9 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
34 33 1 0 47 44 40 38 33 51 34 51 31 29 25 23 19 17 15 13 7 4 0 32 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,615,o),
(239,568,o),
(239,526,qs),
(239,483,o),
(188,437,o),
(141,437,qs),
(10,437,ls),
(2,437,o),
(2,444,qs),
(2,452,ls),
(4,494,o),
(53,496,q),
(53,617,ls),
(53,649,o),
(70,665,qs),
(82,675,o),
(101,675,qs),
(107,675,ls),
(114,675,o),
(114,669,qs),
(114,615,l),
(141,615,ls)
);
},
{
closed = 1;
nodes = (
(175,496,o),
(175,526,qs),
(175,556,o),
(144,556,qs),
(114,556,l),
(114,496,l),
(144,496,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
1 1 3 0 1 76 0 0 3 0 133 6 1 3 0 4 1 3 4 105 7 5 2 1 2 2 1 89 7 5 2 1 1 2 95 0 2 1 2 79 22 22 0 0 22 28 22 27 25 23 0 21 0 20 51 20 35 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,-98,o),
(142,-124,qs),
(142,-151,o),
(106,-188,o),
(80,-188,qs),
(54,-188,o),
(18,-151,o),
(18,-124,qs),
(18,-98,o),
(54,-61,o),
(80,-61,qs),
(106,-61,o)
);
},
{
closed = 1;
nodes = (
(280,-98,o),
(280,-124,qs),
(280,-151,o),
(244,-188,o),
(218,-188,qs),
(192,-188,o),
(156,-151,o),
(156,-124,qs),
(156,-98,o),
(192,-61,o),
(218,-61,qs),
(244,-61,o)
);
},
{
closed = 1;
nodes = (
(206,-224,o),
(206,-248,qs),
(206,-272,o),
(172,-306,o),
(149,-306,qs),
(126,-306,o),
(93,-272,o),
(93,-248,qs),
(93,-224,o),
(126,-190,o),
(149,-190,qs),
(172,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,502,o),
(142,476,qs),
(142,449,o),
(106,412,o),
(80,412,qs),
(54,412,o),
(18,449,o),
(18,476,qs),
(18,502,o),
(54,539,o),
(80,539,qs),
(106,539,o)
);
},
{
closed = 1;
nodes = (
(280,502,o),
(280,476,qs),
(280,449,o),
(244,412,o),
(219,412,qs),
(192,412,o),
(156,449,o),
(156,476,qs),
(156,502,o),
(192,539,o),
(219,539,qs),
(244,539,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,-98,o),
(142,-124,qs),
(142,-151,o),
(106,-188,o),
(80,-188,qs),
(54,-188,o),
(18,-151,o),
(18,-124,qs),
(18,-98,o),
(54,-61,o),
(80,-61,qs),
(106,-61,o)
);
},
{
closed = 1;
nodes = (
(280,-98,o),
(280,-124,qs),
(280,-151,o),
(244,-188,o),
(219,-188,qs),
(192,-188,o),
(156,-151,o),
(156,-124,qs),
(156,-98,o),
(192,-61,o),
(219,-61,qs),
(244,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,513,qs),
(26,496,o),
(20,506,qs),
(2,534,o),
(14,562,qs),
(28,591,o),
(62,589,qs),
(69,589,o),
(78,586,qs),
(86,584,o),
(88,584,qs),
(93,584,o),
(97,588,q),
(126,627,o),
(157,649,o),
(184,649,qs),
(214,649,o),
(251,611,o),
(251,579,qs),
(251,549,o),
(202,504,o),
(169,504,qs),
(143,504,o),
(109,518,qs),
(105,520,o),
(100,522,qs),
(77,532,o),
(66,532,qs),
(51,532,o)
);
},
{
closed = 1;
nodes = (
(148,568,q),
(158,563,o),
(168,563,qs),
(178,563,o),
(195,577,o),
(195,587,qs),
(195,597,o),
(183,597,qs),
(169,597,o)
);
},
{
closed = 1;
nodes = (
(485,556,o),
(485,542,qs),
(485,196,ls),
(485,112,o),
(442,61,qs),
(392,0,o),
(294,0,qs),
(68,0,ls),
(52,0,o),
(41,10,o),
(41,24,qs),
(41,36,ls),
(41,79,o),
(100,132,o),
(148,133,qs),
(160,133,l),
(101,316,l),
(80,395,o),
(128,427,qs),
(148,441,o),
(177,451,q),
(186,453,ls),
(197,457,o),
(202,444,qs),
(303,133,l),
(307,133,ls),
(327,133,o),
(352,170,o),
(352,198,qs),
(352,450,ls),
(352,531,o),
(409,549,qs),
(428,556,o),
(458,556,qs),
(469,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
36 1 7 3 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
36 1 6 3 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
12 1 5 2 3 1 5 114 6 4 2 3 11 1 0 1 3 0 105 0 2 0 1 8 2 1 105 13 1 7 7 23 77 9 1 8 8 10 96 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
12 1 5 2 3 1 5 114 4 1 3 11 1 0 1 3 0 105 0 2 0 1 8 2 1 105 13 7 2 6 6 23 77 9 1 8 8 10 96 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
12 1 5 2 3 2 5 3 128 4 1 3 11 1 0 1 3 0 105 0 2 0 1 8 2 1 105 13 7 2 6 6 23 77 9 1 8 8 10 96 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
12 1 5 2 3 2 5 3 128 4 1 3 11 1 0 1 3 0 105 0 2 0 1 8 2 1 105 0 6 6 23 77 13 1 7 7 23 77 9 1 8 8 10 96 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
12 1 5 2 4 2 5 4 128 0 3 4 6 4 3 6 128 0 4 11 1 0 1 4 0 105 0 2 0 1 8 2 1 105 0 6 6 23 77 13 1 7 7 23 77 9 1 8 8 10 96 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
39 38 30 29 1 0 66 63 58 56 46 45 38 72 39 71 35 33 29 37 30 37 22 20 18 16 13 11 7 5 0 28 1 28 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,513,qs),
(26,496,o),
(20,506,qs),
(2,534,o),
(14,562,qs),
(28,591,o),
(62,589,qs),
(69,589,o),
(78,586,qs),
(86,584,o),
(88,584,qs),
(93,584,o),
(97,588,q),
(126,627,o),
(157,649,o),
(184,649,qs),
(214,649,o),
(251,611,o),
(251,579,qs),
(251,549,o),
(202,504,o),
(169,504,qs),
(143,504,o),
(109,518,qs),
(105,520,o),
(100,522,qs),
(77,532,o),
(66,532,qs),
(51,532,o)
);
},
{
closed = 1;
nodes = (
(148,568,q),
(158,563,o),
(168,563,qs),
(178,563,o),
(195,577,o),
(195,587,qs),
(195,597,o),
(183,597,qs),
(169,597,o)
);
},
{
closed = 1;
nodes = (
(577,0,l),
(527,0,ls),
(463,0,o),
(420,39,q),
(372,0,o),
(294,0,qs),
(68,0,ls),
(52,0,o),
(41,10,o),
(41,24,qs),
(41,36,ls),
(41,79,o),
(100,132,o),
(148,133,qs),
(160,133,l),
(101,316,l),
(80,395,o),
(128,427,qs),
(148,441,o),
(177,451,q),
(186,453,ls),
(197,457,o),
(202,444,qs),
(303,133,l),
(307,133,ls),
(327,133,o),
(352,170,o),
(352,198,qs),
(352,450,ls),
(352,531,o),
(409,549,qs),
(428,556,o),
(458,556,qs),
(469,556,ls),
(485,556,o),
(485,542,qs),
(485,196,ls),
(486,133,o),
(540,133,qs),
(577,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
36 1 8 3 73 1 11 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
36 1 6 3 73 1 11 7 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
14 1 5 2 3 1 5 114 6 4 2 3 13 1 0 1 3 0 105 0 2 0 1 7 2 1 105 0 8 8 23 77 10 9 15 3 7 7 11 98 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
14 1 5 2 3 1 5 114 4 1 3 13 1 0 1 3 0 105 0 2 0 1 7 2 1 105 8 1 6 6 23 77 10 9 15 3 7 7 11 98 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
14 1 5 2 3 2 5 3 128 4 1 3 13 1 0 1 3 0 105 0 2 0 1 7 2 1 105 8 1 6 6 23 77 10 9 15 3 7 7 11 98 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
14 1 5 2 3 2 5 3 128 4 1 3 13 1 0 1 3 0 105 0 2 0 1 7 2 1 105 0 6 6 23 77 0 8 8 23 77 10 9 15 3 7 7 11 98 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
14 1 5 2 4 2 5 4 128 0 3 4 6 4 3 6 128 0 4 13 1 0 1 4 0 105 0 2 0 1 7 2 1 105 0 6 6 23 77 0 8 8 23 77 10 9 15 3 7 7 11 98 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
39 38 30 29 1 0 76 74 72 69 64 62 52 51 45 42 38 77 39 77 35 33 29 37 30 37 22 20 18 16 13 11 7 5 0 28 1 28 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,761,q),
(46,770,o),
(46,779,qs),
(46,826,o),
(105,826,qs),
(190,826,ls),
(237,826,o),
(237,785,qs),
(237,778,ls),
(237,769,o),
(226,769,qs),
(99,769,ls),
(79,769,o),
(62,759,qs),
(58,757,o),
(56,757,qs),
(53,757,o)
);
},
{
closed = 1;
nodes = (
(50,669,qs),
(46,678,o),
(46,687,qs),
(46,733,o),
(105,733,qs),
(190,734,ls),
(237,734,o),
(237,693,qs),
(237,686,ls),
(237,677,o),
(226,677,qs),
(99,677,ls),
(79,677,o),
(62,667,qs),
(58,664,o),
(56,664,qs),
(53,664,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
76 57 44 3 5 4 70 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 6 11 3 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
8 6 11 3 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
35 34 73 71 69 67 61 59 55 53 48 46 42 40 34 78 35 78 51 56 51 51 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,707,o),
(65,737,qs),
(65,767,o),
(105,806,o),
(135,806,qs),
(165,806,o),
(204,767,o),
(204,737,qs),
(204,707,o),
(165,669,o),
(135,669,qs),
(105,669,o)
);
},
{
closed = 1;
nodes = (
(113,737,qs),
(113,713,o),
(135,713,qs),
(156,713,o),
(156,737,qs),
(156,761,o),
(135,761,qs),
(113,761,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
62 43 30 3 5 4 56 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
12 1 2 1 3 0 2 114 0 3 0 1 3 112 8 6 13 3 4 0 5 5 4 114 0 1 11 1 0 4 1 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
12 1 2 1 3 0 2 114 0 3 0 1 3 112 8 6 13 3 4 0 5 0 4 5 128 0 1 11 1 0 4 1 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 2 1 3 1 2 3 128 0 3 0 1 3 0 126 8 6 13 3 4 0 5 0 4 5 128 0 1 11 1 0 4 1 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
21 20 13 12 1 0 59 57 55 53 47 45 41 39 34 32 28 26 20 64 21 64 17 15 12 19 13 19 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,254,o),
(460,246,qs),
(460,238,o),
(454,232,qs),
(357,133,ls),
(352,128,o),
(344,128,qs),
(335,128,o),
(330,133,qs),
(232,232,ls),
(226,238,o),
(226,246,qs),
(226,254,o),
(232,259,qs),
(330,356,ls),
(336,362,o),
(344,362,qs),
(352,362,o),
(357,357,qs),
(454,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,o),
(277,14,qs),
(277,450,ls),
(277,531,o),
(334,549,qs),
(354,556,o),
(383,556,qs),
(395,556,ls),
(410,556,o),
(410,542,qs),
(410,14,ls),
(410,0,o),
(396,0,qs),
(291,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 13 1 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,0,o),
(201,14,qs),
(201,361,ls),
(201,448,o),
(242,498,qs),
(289,556,o),
(381,556,qs),
(487,556,ls),
(500,556,o),
(500,541,qs),
(500,531,ls),
(500,502,o),
(494,485,qs),
(477,432,o),
(401,432,qs),
(390,432,ls),
(358,432,o),
(334,404,o),
(334,369,qs),
(334,14,ls),
(334,0,o),
(320,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,556,o),
(642,542,qs),
(642,435,ls),
(642,351,o),
(599,299,qs),
(549,239,o),
(458,239,qs),
(391,239,o),
(345,278,q),
(298,239,o),
(230,239,qs),
(203,239,o),
(178,245,q),
(178,14,ls),
(178,0,o),
(164,0,qs),
(58,0,ls),
(45,0,o),
(45,14,qs),
(44,451,l),
(47,533,o),
(101,549,qs),
(120,556,o),
(150,556,qs),
(161,556,ls),
(176,556,o),
(176,542,qs),
(176,441,ls),
(176,372,o),
(231,372,qs),
(286,372,o),
(286,441,qs),
(286,457,ls),
(286,533,o),
(340,550,qs),
(357,556,o),
(374,556,qs),
(385,556,ls),
(400,556,o),
(400,543,qs),
(400,441,ls),
(400,372,o),
(454,372,qs),
(510,372,o),
(510,437,qs),
(510,451,ls),
(510,531,o),
(566,549,qs),
(586,556,o),
(615,556,qs),
(627,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 44 42 40 38 35 32 27 24 21 19 14 11 8 6 0 50 1 49 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,222,o),
(315,196,o),
(315,175,qs),
(315,126,o),
(390,126,qs),
(420,126,ls),
(468,126,o),
(526,76,o),
(526,34,qs),
(526,23,ls),
(526,9,o),
(517,0,o),
(501,0,qs),
(376,0,ls),
(309,0,o),
(259,28,qs),
(178,73,o),
(178,183,qs),
(178,244,o),
(218,291,q),
(184,332,o),
(184,384,qs),
(184,458,o),
(227,507,qs),
(277,564,o),
(361,564,qs),
(414,564,o),
(452,536,qs),
(497,502,o),
(497,450,qs),
(497,420,o),
(480,420,qs),
(472,420,o),
(460,423,qs),
(457,424,o),
(450,426,qs),
(406,440,o),
(382,440,qs),
(354,440,o),
(321,414,o),
(321,392,qs),
(321,347,o),
(383,347,qs),
(420,347,ls),
(468,347,o),
(526,297,o),
(526,255,qs),
(526,244,ls),
(526,230,o),
(517,221,o),
(501,221,qs),
(366,222,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 6 1 0 103 3 1 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 36 26 24 20 18 14 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,376,qs),
(538,203,o),
(538,182,qs),
(537,100,o),
(491,49,qs),
(437,-10,o),
(343,-10,qs),
(262,-10,o),
(210,35,qs),
(149,88,o),
(149,182,qs),
(149,203,o),
(160,376,qs),
(173,564,o),
(343,564,qs),
(514,564,o)
);
},
{
closed = 1;
nodes = (
(299,405,o),
(296,364,qs),
(286,189,ls),
(284,116,o),
(343,116,qs),
(403,116,o),
(401,189,qs),
(391,364,ls),
(388,405,o),
(367,439,o),
(343,439,qs),
(320,439,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 19 2 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,0,o),
(353,14,qs),
(353,369,ls),
(353,404,o),
(328,432,o),
(297,432,qs),
(286,432,ls),
(210,432,o),
(193,485,qs),
(187,502,o),
(187,531,qs),
(187,541,ls),
(187,556,o),
(200,556,qs),
(306,556,ls),
(386,556,o),
(433,511,qs),
(486,460,o),
(486,361,qs),
(486,14,ls),
(486,0,o),
(472,0,qs),
(366,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 17 14 9 6 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,147,qs),
(439,533,ls),
(443,556,o),
(460,556,qs),
(468,556,ls),
(513,556,o),
(538,525,qs),
(567,490,o),
(557,433,qs),
(510,162,ls),
(495,73,o),
(417,-10,o),
(350,-10,qs),
(287,-10,o),
(249,26,qs),
(206,68,o),
(190,162,qs),
(143,433,ls),
(134,482,o),
(156,516,qs),
(180,556,o),
(232,556,qs),
(240,556,ls),
(257,556,o),
(260,533,qs),
(325,147,ls),
(329,121,o),
(350,121,qs),
(371,121,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 25 22 16 14 7 4 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,0,o),
(124,28,qs),
(187,393,ls),
(202,481,o),
(280,564,o),
(347,564,qs),
(409,564,o),
(447,528,qs),
(490,487,o),
(507,393,qs),
(569,28,ls),
(574,0,o),
(550,0,qs),
(461,0,ls),
(440,0,o),
(435,25,qs),
(372,407,ls),
(368,433,o),
(347,433,qs),
(326,433,o),
(322,407,qs),
(258,25,ls),
(253,0,o),
(232,0,qs),
(143,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 12 9 6 4 0 24 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,519,qs),
(527,465,o),
(527,369,qs),
(527,14,ls),
(527,0,o),
(514,0,qs),
(408,0,ls),
(394,0,o),
(394,14,qs),
(394,177,l),
(342,177,ls),
(267,177,o),
(215,221,qs),
(153,275,o),
(153,369,qs),
(153,452,o),
(202,506,qs),
(255,564,o),
(342,564,qs),
(417,564,o)
);
},
{
closed = 1;
nodes = (
(290,402,o),
(290,369,qs),
(290,341,o),
(320,302,o),
(342,302,qs),
(394,302,l),
(394,369,ls),
(394,402,o),
(366,439,o),
(342,439,qs),
(318,439,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 105 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 105 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
38 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 98 5 1 4 4 24 4 78 1 0 41 39 37 34 25 24 15 12 7 4 0 42 1 42 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 16 14 9 6 0 17 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 7 4 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(916,0,l),
(731,0,ls),
(667,0,o),
(637,24,q),
(606,0,o),
(542,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(466,133,l),
(447,170,o),
(447,211,qs),
(447,280,o),
(492,333,qs),
(547,397,o),
(637,397,qs),
(715,397,o),
(769,346,qs),
(827,292,o),
(827,211,qs),
(827,170,o),
(808,133,q),
(916,133,l)
);
},
{
closed = 1;
nodes = (
(689,213,qs),
(689,238,o),
(659,271,o),
(637,271,qs),
(614,271,o),
(585,238,o),
(585,213,qs),
(583,163,o),
(637,138,q),
(690,163,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
37 1 3 1 1 76 0 2 0 6 0 2 6 128 0 0 0 6 1 0 6 105 7 5 2 1 1 3 96 4 1 3 3 24 3 78 0 0 48 46 0 41 0 41 34 57 25 37 37 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,351,qs),
(458,296,o),
(458,198,qs),
(458,114,o),
(410,60,qs),
(358,1,o),
(272,0,qs),
(0,0,l),
(0,133,l),
(94,133,l),
(81,167,o),
(81,198,qs),
(81,283,o),
(129,337,qs),
(182,397,o),
(269,397,qs),
(345,397,o)
);
},
{
closed = 1;
nodes = (
(322,173,o),
(322,203,qs),
(322,233,o),
(292,271,o),
(270,271,qs),
(247,271,o),
(217,232,o),
(217,203,qs),
(217,173,o),
(248,133,o),
(270,133,qs),
(292,133,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 24 22 17 28 18 28 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,0,l),
(363,0,ls),
(299,0,o),
(269,24,q),
(239,0,o),
(174,0,qs),
(0,0,l),
(0,133,l),
(98,133,l),
(79,170,o),
(79,211,qs),
(79,280,o),
(124,333,qs),
(179,397,o),
(269,397,qs),
(347,397,o),
(401,346,qs),
(459,292,o),
(459,211,qs),
(459,170,o),
(440,133,q),
(548,133,l)
);
},
{
closed = 1;
nodes = (
(321,213,qs),
(321,238,o),
(291,271,o),
(269,271,qs),
(246,271,o),
(217,238,o),
(217,213,qs),
(215,163,o),
(269,138,q),
(322,163,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
17 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 28 26 0 21 0 21 34 33 21 37 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,521,o),
(106,548,qs),
(106,574,o),
(142,611,o),
(168,611,qs),
(194,611,o),
(231,574,o),
(231,548,qs),
(231,521,o),
(194,484,o),
(168,484,qs),
(142,484,o)
);
},
{
closed = 1;
nodes = (
(244,521,o),
(244,548,qs),
(244,574,o),
(281,611,o),
(307,611,qs),
(332,611,o),
(368,574,o),
(368,548,qs),
(368,521,o),
(333,484,o),
(307,484,qs),
(281,484,o)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 13 1 4 4 7 98 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 55 53 50 58 51 58 48 46 44 42 36 34 31 28 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,254,o),
(460,246,qs),
(460,238,o),
(454,232,qs),
(357,133,ls),
(352,128,o),
(344,128,qs),
(335,128,o),
(330,133,qs),
(232,232,ls),
(226,238,o),
(226,246,qs),
(226,254,o),
(232,259,qs),
(330,356,ls),
(336,362,o),
(344,362,qs),
(352,362,o),
(357,357,qs),
(454,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,o),
(277,14,qs),
(277,450,ls),
(277,531,o),
(334,549,qs),
(354,556,o),
(383,556,qs),
(395,556,ls),
(410,556,o),
(410,542,qs),
(410,14,ls),
(410,0,o),
(396,0,qs),
(291,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 13 1 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,0,o),
(201,14,qs),
(201,361,ls),
(201,448,o),
(242,498,qs),
(289,556,o),
(381,556,qs),
(487,556,ls),
(500,556,o),
(500,541,qs),
(500,531,ls),
(500,502,o),
(494,485,qs),
(477,432,o),
(401,432,qs),
(390,432,ls),
(358,432,o),
(334,404,o),
(334,369,qs),
(334,14,ls),
(334,0,o),
(320,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,556,o),
(642,542,qs),
(642,435,ls),
(642,351,o),
(599,299,qs),
(549,239,o),
(458,239,qs),
(391,239,o),
(345,278,q),
(298,239,o),
(230,239,qs),
(203,239,o),
(178,245,q),
(178,14,ls),
(178,0,o),
(164,0,qs),
(58,0,ls),
(45,0,o),
(45,14,qs),
(44,451,l),
(47,533,o),
(101,549,qs),
(120,556,o),
(150,556,qs),
(161,556,ls),
(176,556,o),
(176,542,qs),
(176,441,ls),
(176,372,o),
(231,372,qs),
(286,372,o),
(286,441,qs),
(286,457,ls),
(286,533,o),
(340,550,qs),
(357,556,o),
(374,556,qs),
(385,556,ls),
(400,556,o),
(400,543,qs),
(400,441,ls),
(400,372,o),
(454,372,qs),
(510,372,o),
(510,437,qs),
(510,451,ls),
(510,531,o),
(566,549,qs),
(586,556,o),
(615,556,qs),
(627,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 44 42 40 38 35 32 27 24 21 19 14 11 8 6 0 50 1 49 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(529,343,qs),
(523,287,o),
(490,252,qs),
(452,211,o),
(389,211,qs),
(337,211,o),
(303,226,q),
(303,22,ls),
(303,0,o),
(282,0,qs),
(193,0,ls),
(171,0,o),
(171,22,qs),
(171,450,ls),
(171,531,o),
(228,549,qs),
(248,556,o),
(277,556,qs),
(288,556,ls),
(303,556,o),
(303,542,qs),
(303,527,l),
(352,566,o),
(405,564,qs),
(453,563,o),
(481,530,qs),
(509,495,o),
(506,439,qs),
(504,414,o),
(489,414,qs),
(485,414,o),
(476,416,qs),
(471,418,o),
(469,418,qs),
(465,419,o),
(459,422,q),
(413,435,o),
(389,435,qs),
(358,434,o),
(309,405,o),
(304,385,q),
(303,383,o),
(303,381,qs),
(304,357,o),
(356,329,o),
(395,329,qs),
(438,329,o),
(480,349,qs),
(504,359,o),
(515,360,qs),
(531,361,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 3 7 1 7 1 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 4 7 1 7 2 43 1 6 0 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 1 0 1 7 0 128 0 0 0 6 5 0 6 105 2 1 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 36 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,166,qs),
(150,180,o),
(167,372,qs),
(184,564,o),
(352,564,qs),
(518,564,o),
(536,372,qs),
(554,180,o),
(554,166,qs),
(564,-10,o),
(429,-10,qs),
(387,-10,o),
(354,21,q),
(352,22,o),
(350,21,q),
(320,-10,o),
(275,-10,qs),
(141,-10,o)
);
},
{
closed = 1;
nodes = (
(338,137,o),
(340,157,qs),
(342,173,o),
(352,173,qs),
(363,173,o),
(364,157,qs),
(367,123,o),
(393,123,qs),
(421,123,o),
(418,166,qs),
(418,168,ls),
(416,221,o),
(402,361,qs),
(398,403,o),
(375,440,o),
(352,440,qs),
(329,440,o),
(306,404,o),
(302,361,qs),
(288,215,o),
(286,170,qs),
(286,167,o),
(286,166,qs),
(284,123,o),
(310,123,qs),
(325,123,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
19 18 1 0 40 38 36 34 28 26 18 43 19 43 13 11 7 5 0 17 1 17 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,246,o),
(501,223,qs),
(490,215,o),
(471,205,qs),
(394,161,o),
(320,85,o),
(282,12,q),
(277,0,o),
(264,0,qs),
(156,0,ls),
(141,0,o),
(144,14,qs),
(170,129,o),
(259,213,q),
(169,269,o),
(169,381,qs),
(169,459,o),
(213,509,qs),
(262,564,o),
(342,564,qs),
(393,564,o),
(431,533,qs),
(474,497,o),
(471,444,qs),
(470,419,o),
(455,419,qs),
(446,419,o),
(435,423,qs),
(392,439,o),
(365,439,qs),
(336,438,o),
(303,401,o),
(303,370,qs),
(303,320,o),
(360,294,q),
(434,346,o),
(523,374,qs),
(540,379,o),
(549,359,qs),
(566,323,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
25 4 2 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
25 4 2 3 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
56 36 34 40 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,147,qs),
(439,533,ls),
(443,556,o),
(460,556,qs),
(468,556,ls),
(513,556,o),
(538,525,qs),
(567,490,o),
(557,433,qs),
(510,162,ls),
(495,73,o),
(417,-10,o),
(350,-10,qs),
(287,-10,o),
(249,26,qs),
(206,68,o),
(190,162,qs),
(143,433,ls),
(134,482,o),
(156,516,qs),
(180,556,o),
(232,556,qs),
(240,556,ls),
(257,556,o),
(260,533,qs),
(325,147,ls),
(329,121,o),
(350,121,qs),
(371,121,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 25 22 16 14 7 4 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,0,o),
(124,28,qs),
(187,393,ls),
(202,481,o),
(280,564,o),
(347,564,qs),
(409,564,o),
(447,528,qs),
(490,487,o),
(507,393,qs),
(569,28,ls),
(574,0,o),
(550,0,qs),
(461,0,ls),
(440,0,o),
(435,25,qs),
(372,407,ls),
(368,433,o),
(347,433,qs),
(326,433,o),
(322,407,qs),
(258,25,ls),
(253,0,o),
(232,0,qs),
(143,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 12 9 6 4 0 24 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,519,qs),
(527,465,o),
(527,369,qs),
(527,14,ls),
(527,0,o),
(514,0,qs),
(408,0,ls),
(394,0,o),
(394,14,qs),
(394,177,l),
(342,177,ls),
(267,177,o),
(215,221,qs),
(153,275,o),
(153,369,qs),
(153,452,o),
(202,506,qs),
(255,564,o),
(342,564,qs),
(417,564,o)
);
},
{
closed = 1;
nodes = (
(290,402,o),
(290,369,qs),
(290,341,o),
(320,302,o),
(342,302,qs),
(394,302,l),
(394,369,ls),
(394,402,o),
(366,439,o),
(342,439,qs),
(318,439,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 105 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 105 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(829,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 18 5 2 1 0 0 9 1 0 103 19 14 2 12 15 1 13 16 12 13 106 0 8 0 10 17 8 10 105 20 1 16 0 17 16 17 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 18 5 2 1 0 0 9 1 0 103 19 14 2 12 15 1 13 16 12 13 106 0 8 0 10 17 8 10 105 20 1 16 0 17 16 17 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 3 2 5 2 3 5 128 18 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 19 14 2 12 15 1 13 16 12 13 106 0 8 0 10 17 8 10 105 20 1 16 0 17 16 17 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
113 112 101 100 37 36 119 117 112 123 113 123 107 105 100 111 101 111 98 96 92 90 81 79 76 74 65 64 56 54 53 51 45 42 36 87 37 86 35 34 35 51 51 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(829,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 9 2 7 10 1 8 11 7 8 106 0 3 0 5 12 3 5 105 15 1 11 0 12 11 12 101 0 1 1 2 95 6 1 2 2 24 2 78 77 76 65 64 1 0 83 81 76 87 77 87 71 69 64 75 65 75 62 60 56 54 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
},
{
closed = 1;
nodes = (
(304,-383,o),
(277,-383,qs),
(252,-383,o),
(216,-346,o),
(216,-320,qs),
(216,-294,o),
(252,-257,o),
(277,-257,qs),
(303,-257,o),
(340,-294,o),
(340,-320,qs),
(340,-346,o)
);
},
{
closed = 1;
nodes = (
(478,-293,o),
(478,-320,qs),
(478,-347,o),
(442,-383,o),
(416,-383,qs),
(390,-383,o),
(353,-347,o),
(353,-320,qs),
(353,-293,o),
(390,-257,o),
(416,-257,qs),
(442,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
17 1 0 4 0 133 0 4 1 4 133 18 9 2 7 10 1 8 11 7 8 106 0 3 0 5 13 3 5 105 19 1 11 0 12 14 11 12 105 20 15 2 13 16 1 14 13 14 101 0 1 1 2 95 6 1 2 2 24 2 78 101 100 77 76 65 64 1 0 107 105 100 111 101 111 98 96 92 90 83 81 76 87 77 87 71 69 64 75 65 75 62 60 56 54 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 96 8 7 2 3 3 24 3 78 82 81 70 69 1 0 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 15 4 6 105 21 1 13 0 14 16 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 96 8 7 2 3 3 24 3 78 106 105 94 93 82 81 70 69 1 0 112 110 105 116 106 116 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(924,378,o),
(924,364,qs),
(924,196,ls),
(924,73,o),
(837,24,q),
(792,-14,ls),
(757,-44,o),
(753,-62,q),
(776,-66,o),
(804,-101,o),
(804,-125,qs),
(804,-152,o),
(766,-191,o),
(740,-191,qs),
(713,-191,o),
(676,-153,o),
(675,-125,qs),
(672,-59,o),
(732,0,q),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(736,133,ls),
(791,133,o),
(791,198,qs),
(791,272,ls),
(791,353,o),
(848,372,qs),
(867,378,o),
(897,378,qs),
(908,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 91 1 8 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 12 1 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 3 1 2 1 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 0 2 3 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 5 2 3 5 128 13 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
37 36 86 84 80 79 76 74 65 64 56 54 53 51 45 42 36 99 37 98 35 34 35 51 51 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 964;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,378,o),
(924,364,qs),
(924,196,ls),
(924,73,o),
(837,24,q),
(792,-14,ls),
(757,-44,o),
(753,-62,q),
(776,-66,o),
(804,-101,o),
(804,-125,qs),
(804,-152,o),
(766,-191,o),
(740,-191,qs),
(713,-191,o),
(676,-153,o),
(675,-125,qs),
(672,-59,o),
(732,0,q),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(736,133,ls),
(791,133,o),
(791,198,qs),
(791,272,ls),
(791,353,o),
(848,372,qs),
(867,378,o),
(897,378,qs),
(908,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
8 1 0 4 0 133 0 4 1 4 133 0 3 7 1 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 50 48 44 43 40 38 29 28 20 18 17 15 9 6 0 63 1 62 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 964;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(924,378,o),
(924,364,qs),
(924,196,ls),
(924,73,o),
(837,24,q),
(792,-14,ls),
(757,-44,o),
(753,-62,q),
(776,-66,o),
(804,-101,o),
(804,-125,qs),
(804,-152,o),
(766,-191,o),
(740,-191,qs),
(713,-191,o),
(676,-153,o),
(675,-125,qs),
(672,-59,o),
(732,0,q),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(736,133,ls),
(791,133,o),
(791,198,qs),
(791,272,ls),
(791,353,o),
(848,372,qs),
(868,378,o),
(897,378,qs),
(908,378,ls)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
12 1 0 4 0 133 0 4 1 4 133 0 3 7 1 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
77 76 65 64 1 0 83 81 76 87 77 87 71 69 64 75 65 75 50 48 44 43 40 38 29 28 20 18 17 15 9 6 0 63 1 62 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 964;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
11 1 0 4 0 133 0 4 1 4 133 12 9 2 7 10 1 8 5 7 8 106 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 65 64 1 0 71 69 64 75 65 75 62 60 56 54 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 70 69 1 0 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(911,378,o),
(911,364,qs),
(911,196,ls),
(911,112,o),
(868,61,qs),
(817,0,o),
(720,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(722,133,ls),
(777,133,o),
(777,198,qs),
(777,272,ls),
(777,353,o),
(835,372,qs),
(854,378,o),
(883,378,qs),
(895,378,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(793,-124,qs),
(793,-152,o),
(756,-190,o),
(729,-190,qs),
(702,-190,o),
(664,-151,o),
(664,-124,qs),
(664,-96,o),
(702,-58,o),
(729,-58,qs),
(756,-58,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 8 10 12 89 0 8 13 1 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 2 5 2 3 5 128 14 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
89 88 37 36 95 93 88 99 89 99 81 79 76 74 65 64 56 54 53 51 45 42 36 87 37 86 35 34 35 51 51 16 7 27 
CALL[ ]	/* CallFunction */";
};
width = 951;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 16 5 2 1 0 0 9 1 0 103 18 14 17 3 12 15 1 13 10 12 13 106 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 16 5 2 1 0 0 9 1 0 103 18 14 17 3 12 15 1 13 10 12 13 106 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 3 2 5 2 3 5 128 16 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 18 14 17 3 12 15 1 13 10 12 13 106 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
101 100 89 88 37 36 107 105 100 111 101 111 95 93 88 99 89 99 81 79 76 74 65 64 56 54 53 51 45 42 36 87 37 86 35 34 35 51 51 19 7 27 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 88 1 8 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 10 0 5 0 10 5 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 1 2 3 1 128 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
106 105 94 93 37 36 112 110 105 116 106 116 100 98 93 104 94 104 91 89 87 85 82 80 71 70 62 60 59 57 51 48 43 40 36 92 37 92 35 34 35 51 51 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,718,o),
(259,686,qs),
(259,656,o),
(210,611,o),
(177,611,qs),
(151,611,o),
(117,625,q),
(113,626,o),
(108,629,q),
(85,638,o),
(74,638,qs),
(59,638,o),
(46,619,qs),
(34,603,o),
(28,613,qs),
(10,641,o),
(22,669,qs),
(36,697,o),
(70,696,qs),
(77,695,o),
(86,693,qs),
(94,691,o),
(96,691,qs),
(101,691,o),
(105,695,q),
(134,734,o),
(165,756,o),
(192,756,qs),
(222,756,o)
);
},
{
closed = 1;
nodes = (
(203,684,o),
(203,693,qs),
(203,703,o),
(191,703,qs),
(177,703,o),
(156,674,q),
(166,670,o),
(176,670,qs),
(186,670,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
31 1 5 1 1 76 0 1 2 5 2 1 5 128 7 1 0 0 6 2 0 6 105 8 1 5 3 4 5 89 0 2 0 3 4 2 3 105 8 1 5 5 4 97 0 4 5 4 81 30 29 1 0 34 32 29 37 30 37 24 22 18 16 10 9 6 4 0 28 1 28 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,485,o),
(98,511,qs),
(98,538,o),
(135,574,o),
(161,574,qs),
(187,574,o),
(223,538,o),
(223,511,qs),
(223,485,o),
(187,448,o),
(161,448,qs),
(135,448,o)
);
},
{
closed = 1;
nodes = (
(236,485,o),
(236,511,qs),
(236,538,o),
(273,574,o),
(299,574,qs),
(325,574,o),
(361,538,o),
(361,511,qs),
(361,485,o),
(325,448,o),
(299,448,qs),
(273,448,o)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(412,0,l),
(403,-64,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(149,-213,o),
(105,-173,qs),
(69,-141,o),
(57,-89,qs),
(53,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(274,-40,o),
(281,0,q),
(228,0,ls),
(154,0,o),
(101,47,qs),
(39,102,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(355,397,o),
(398,284,qs),
(416,238,o),
(419,160,qs),
(420,151,o),
(420,133,q),
(508,133,l)
);
},
{
closed = 1;
nodes = (
(206,133,o),
(228,133,qs),
(281,133,l),
(286,203,o),
(274,234,qs),
(261,271,o),
(227,271,qs),
(204,271,o),
(176,232,o),
(176,199,qs),
(176,171,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 10 11 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 0 11 10 4 11 105 7 1 6 0 8 6 8 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 12 15 2 10 10 5 97 9 1 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 5 6 5 7 6 128 0 4 0 11 10 4 11 105 0 6 0 8 6 8 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 12 15 2 10 10 5 97 9 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 5 6 5 7 6 128 3 1 1 14 2 13 3 0 4 1 0 105 0 4 0 11 10 4 11 105 0 6 0 8 6 8 101 12 15 2 10 10 5 97 9 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
24 24 13 12 1 0 70 68 65 63 24 60 24 60 59 58 54 52 48 46 43 41 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,627,o),
(130,630,o),
(137,630,qs),
(187,630,o),
(203,588,qs),
(227,531,l),
(250,588,ls),
(259,611,o),
(288,630,o),
(315,630,qs),
(323,630,o),
(326,626,o),
(323,619,qs),
(265,467,ls),
(260,452,o),
(243,452,qs),
(210,452,ls),
(193,452,o),
(188,467,qs),
(130,619,ls)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(412,0,l),
(403,-64,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(149,-213,o),
(105,-173,qs),
(69,-141,o),
(57,-89,qs),
(53,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(274,-40,o),
(281,0,q),
(228,0,ls),
(154,0,o),
(101,47,qs),
(39,102,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(355,397,o),
(398,284,qs),
(416,238,o),
(419,160,qs),
(420,151,o),
(420,133,q),
(508,133,l)
);
},
{
closed = 1;
nodes = (
(206,133,o),
(228,133,qs),
(281,133,l),
(286,203,o),
(274,234,qs),
(261,271,o),
(227,271,qs),
(204,271,o),
(176,232,o),
(176,199,qs),
(176,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
19 13 2 0 1 22 1 9 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 3 0 10 9 3 10 105 6 1 5 0 7 5 7 101 11 12 2 9 9 4 98 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 10 9 3 10 105 0 5 0 7 5 7 101 11 12 2 9 9 4 98 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
20 20 66 64 61 59 20 56 20 56 20 36 35 34 38 40 37 36 49 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls),
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
4 1 2 0 1 76 1 14 2 0 2 0 133 0 2 3 2 133 15 1 3 7 3 133 0 7 4 7 133 0 4 9 1 5 10 4 5 103 0 6 11 8 6 89 17 12 16 3 10 13 1 11 8 10 11 105 0 6 6 8 97 0 8 6 8 81 84 83 72 71 20 19 1 0 90 88 83 94 84 94 78 76 71 82 72 82 64 62 59 57 48 47 39 37 36 34 28 25 19 70 20 69 15 12 8 6 0 18 1 18 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o),
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
12 1 0 1 71 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 9 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 96 11 10 2 6 6 24 6 78 89 88 77 76 20 19 95 93 88 99 89 99 83 81 76 87 77 87 74 72 70 68 65 63 54 53 45 43 42 40 34 31 26 23 19 75 20 75 37 35 49 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls),
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(304,-383,o),
(277,-383,qs),
(252,-383,o),
(216,-346,o),
(216,-320,qs),
(216,-294,o),
(252,-257,o),
(277,-257,qs),
(303,-257,o),
(340,-294,o),
(340,-320,qs),
(340,-346,o)
);
},
{
closed = 1;
nodes = (
(478,-293,o),
(478,-320,qs),
(478,-347,o),
(442,-383,o),
(416,-383,qs),
(390,-383,o),
(353,-347,o),
(353,-320,qs),
(353,-293,o),
(390,-257,o),
(416,-257,qs),
(442,-257,o)
);
},
{
closed = 1;
nodes = (
(403,-420,o),
(403,-443,qs),
(403,-467,o),
(370,-501,o),
(347,-501,qs),
(323,-501,o),
(291,-467,o),
(291,-443,qs),
(291,-419,o),
(324,-386,o),
(347,-386,qs),
(370,-386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 147 values pushed */
4 1 2 0 1 76 1 20 2 0 2 0 133 0 2 3 2 133 21 1 3 7 3 133 0 7 4 7 133 23 12 22 3 10 13 1 11 8 10 11 106 0 6 0 8 14 6 8 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 0 4 4 5 96 9 1 5 5 24 5 78 120 119 108 107 84 83 72 71 20 19 1 0 126 124 119 130 120 130 114 112 107 118 108 118 105 103 99 97 90 88 83 94 84 94 78 76 71 82 72 82 64 62 59 57 48 47 39 37 36 34 28 25 19 70 20 69 15 12 8 6 0 18 1 18 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(764,608,o),
(766,611,o),
(774,611,qs),
(824,611,o),
(840,569,qs),
(863,512,l),
(886,569,ls),
(895,592,o),
(925,611,o),
(952,611,qs),
(960,611,o),
(963,607,o),
(960,601,q),
(902,448,ls),
(897,433,o),
(880,433,qs),
(846,433,ls),
(830,433,o),
(825,448,qs),
(766,601,ls)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(304,-383,o),
(277,-383,qs),
(252,-383,o),
(216,-346,o),
(216,-320,qs),
(216,-294,o),
(252,-257,o),
(277,-257,qs),
(303,-257,o),
(340,-294,o),
(340,-320,qs),
(340,-346,o)
);
},
{
closed = 1;
nodes = (
(478,-293,o),
(478,-320,qs),
(478,-347,o),
(442,-383,o),
(416,-383,qs),
(390,-383,o),
(353,-347,o),
(353,-320,qs),
(353,-293,o),
(390,-257,o),
(416,-257,qs),
(442,-257,o)
);
},
{
closed = 1;
nodes = (
(403,-420,o),
(403,-443,qs),
(403,-467,o),
(370,-501,o),
(347,-501,qs),
(323,-501,o),
(291,-467,o),
(291,-443,qs),
(291,-419,o),
(324,-386,o),
(347,-386,qs),
(370,-386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
19 13 2 0 1 72 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 96 11 10 2 6 6 24 6 78 126 125 114 113 90 89 78 77 21 20 132 130 125 136 126 136 120 118 113 124 114 124 111 109 105 103 96 94 89 100 90 100 84 82 77 88 78 88 75 73 71 69 66 64 55 54 46 44 43 41 35 32 27 24 20 76 21 76 37 36 49 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls),
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o)
);
},
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 158 values pushed */
4 1 7 0 49 1 3 4 2 76 1 19 2 0 7 0 133 0 2 5 6 5 2 6 128 0 6 8 5 6 8 126 20 1 8 4 5 8 4 126 0 12 3 9 3 12 9 128 0 7 0 5 2 7 5 105 0 4 0 3 12 4 3 103 0 9 14 1 10 15 9 10 103 0 11 16 13 11 89 22 17 21 3 15 18 1 16 13 15 16 105 0 11 11 13 97 0 13 11 13 81 120 119 108 107 56 55 1 0 126 124 119 130 120 130 114 112 107 118 108 118 100 98 95 93 84 83 75 73 72 70 64 61 55 106 56 105 45 43 40 38 36 34 31 28 25 22 15 12 8 6 0 18 1 18 23 6 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(764,608,o),
(766,611,o),
(774,611,qs),
(824,611,o),
(840,569,qs),
(863,512,l),
(886,569,ls),
(895,592,o),
(925,611,o),
(952,611,qs),
(960,611,o),
(963,607,o),
(960,601,q),
(902,448,ls),
(897,433,o),
(880,433,qs),
(846,433,ls),
(830,433,o),
(825,448,qs),
(766,601,ls)
);
},
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
19 13 2 7 1 50 1 3 4 108 1 11 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
2 1 1 7 1 133 0 13 3 8 3 13 8 128 0 7 6 5 2 0 4 7 0 105 9 1 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 1 1 7 1 133 0 6 0 4 0 6 4 128 0 13 3 8 3 13 8 128 0 7 5 1 0 6 7 0 105 9 1 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
2 1 1 7 1 133 0 0 5 6 5 0 6 128 0 6 4 5 6 4 126 0 13 3 8 3 13 8 128 0 7 0 5 0 7 5 105 9 1 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 86 values pushed */
2 1 1 7 1 133 0 0 5 6 5 0 6 128 0 6 9 5 6 9 126 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 0 7 5 105 0 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
126 125 114 113 57 56 132 130 125 136 126 136 120 118 113 124 114 124 111 109 107 105 102 100 91 90 82 80 79 77 71 68 63 60 56 112 57 112 35 34 35 51 54 37 36 49 24 7 30 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(962,607,o),
(960,600,qs),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls),
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(902,611,o),
(951,611,qs),
(959,611,o)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(829,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 144 values pushed */
3 1 2 0 1 76 1 18 2 0 2 0 133 0 2 3 2 133 19 1 3 7 3 133 0 7 4 7 133 0 4 9 1 5 10 4 5 103 21 12 20 3 10 13 1 11 8 10 11 105 0 6 0 8 14 6 8 105 23 16 22 3 14 15 15 14 89 23 16 22 3 14 14 15 97 17 1 15 14 15 81 108 107 96 95 84 83 72 71 20 19 1 0 114 112 107 118 108 118 102 100 95 106 96 106 90 88 83 94 84 94 78 76 71 82 72 82 64 62 59 57 48 47 39 37 36 34 28 25 19 70 20 69 14 11 7 5 0 18 1 18 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(764,608,o),
(766,611,o),
(774,611,qs),
(824,611,o),
(840,569,qs),
(863,512,l),
(886,569,ls),
(895,592,o),
(925,611,o),
(952,611,qs),
(960,611,o),
(963,607,o),
(960,601,q),
(902,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(830,433,o),
(825,448,qs),
(766,601,ls)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 138 values pushed */
19 13 2 0 1 72 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 96 11 10 2 6 6 24 6 78 114 113 102 101 90 89 78 77 21 20 120 118 113 124 114 124 108 106 101 112 102 112 96 94 89 100 90 100 84 82 77 88 78 88 75 73 71 69 66 64 55 54 46 44 43 41 35 32 27 24 20 76 21 76 37 36 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls),
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o)
);
},
{
closed = 1;
nodes = (
(257,491,o),
(260,494,o),
(267,494,qs),
(317,494,o),
(333,453,qs),
(357,395,l),
(380,453,ls),
(389,476,o),
(418,494,o),
(445,494,qs),
(453,494,o),
(456,491,o),
(453,484,qs),
(395,332,ls),
(390,317,o),
(373,317,qs),
(340,317,ls),
(323,317,o),
(318,332,qs),
(260,484,ls)
);
},
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 138 values pushed */
4 1 4 0 38 1 2 4 32 1 6 2 3 76 1 17 2 0 4 0 133 5 1 4 2 4 133 0 2 6 2 133 18 1 6 3 6 133 0 3 10 3 133 0 10 7 10 133 0 7 12 1 8 13 7 8 103 0 9 14 11 9 89 20 15 19 3 13 16 1 14 11 13 14 105 0 9 9 11 97 0 11 9 11 81 104 103 92 91 40 39 1 0 110 108 103 114 104 114 98 96 91 102 92 102 84 82 79 77 68 67 59 57 56 54 48 45 39 90 40 89 36 34 29 28 23 20 15 12 8 6 0 18 1 18 21 6 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(763,607,o),
(766,611,o),
(773,611,qs),
(823,611,o),
(840,569,qs),
(863,511,l),
(886,569,ls),
(895,592,o),
(924,611,o),
(951,611,qs),
(963,611,o),
(960,600,q),
(901,448,ls),
(896,433,o),
(880,433,qs),
(846,433,ls),
(829,433,o),
(824,448,qs),
(766,600,ls)
);
},
{
closed = 1;
nodes = (
(257,491,o),
(260,494,o),
(267,494,qs),
(317,494,o),
(333,453,qs),
(357,395,l),
(380,453,ls),
(389,476,o),
(418,494,o),
(445,494,qs),
(453,494,o),
(456,491,o),
(453,484,qs),
(395,332,ls),
(390,317,o),
(373,317,qs),
(340,317,ls),
(323,317,o),
(318,332,qs),
(260,484,ls)
);
},
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
12 1 4 1 38 1 0 4 32 1 7 0 91 1 9 6 4 76 2 1 1 4 1 133 5 1 4 0 4 133 0 0 7 0 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 12 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 96 14 13 2 9 9 24 9 78 109 108 97 96 40 39 115 113 108 119 109 119 103 101 96 107 97 107 94 92 90 88 85 83 74 73 65 63 62 60 54 51 46 43 39 95 40 95 37 21 52 37 35 49 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,491,o),
(260,494,o),
(267,494,qs),
(317,494,o),
(333,453,qs),
(357,395,l),
(380,453,ls),
(389,476,o),
(418,494,o),
(445,494,qs),
(453,494,o),
(456,491,o),
(453,484,qs),
(395,332,ls),
(390,317,o),
(373,317,qs),
(340,317,ls),
(323,317,o),
(318,332,qs),
(260,484,ls)
);
},
{
closed = 1;
nodes = (
(661,8,l),
(647,5,l),
(632,-80,o),
(566,-139,qs),
(482,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(662,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
19 13 2 0 1 56 1 4 3 2 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 8 1 3 3 4 96 0 4 4 24 4 78 21 20 52 50 41 40 32 30 29 27 20 57 21 57 37 21 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,607,o),
(263,601,q),
(205,448,ls),
(200,433,o),
(183,433,qs),
(150,433,ls),
(133,433,o),
(128,448,qs),
(70,601,ls),
(67,608,o),
(70,611,o),
(77,611,qs),
(127,611,o),
(143,569,qs),
(167,512,l),
(190,569,ls),
(199,592,o),
(228,611,o),
(255,611,qs),
(263,611,o)
);
},
{
closed = 1;
nodes = (
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,112,o),
(182,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(160,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(160,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
10 4 2 2 0 1 76 1 10 2 0 2 0 133 0 2 3 2 133 11 1 3 4 3 133 13 8 12 3 6 9 1 7 6 7 102 0 4 4 5 98 0 5 5 24 5 78 51 50 39 38 21 20 1 0 57 55 50 61 51 61 45 43 38 49 39 49 31 29 28 26 20 37 21 36 15 12 8 6 0 19 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,608,o),
(70,611,o),
(77,611,qs),
(127,611,o),
(143,569,qs),
(167,512,l),
(190,569,ls),
(199,592,o),
(228,611,o),
(255,611,qs),
(263,611,o),
(266,607,o),
(263,601,q),
(205,448,ls),
(200,433,o),
(183,433,qs),
(150,433,ls),
(133,433,o),
(128,448,qs),
(70,601,ls)
);
},
{
closed = 1;
nodes = (
(317,0,l),
(267,0,ls),
(203,0,o),
(160,39,q),
(111,0,o),
(33,0,qs),
(-1,0,l),
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,133,o),
(280,133,qs),
(317,133,l)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(160,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(160,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
19 13 2 0 1 38 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 98 7 1 6 6 24 6 78 56 55 44 43 21 20 62 60 55 66 56 66 50 48 43 54 44 54 41 39 37 35 34 32 27 24 20 42 21 42 37 36 49 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,758,q),
(621,766,o),
(621,774,qs),
(621,801,o),
(652,806,qs),
(656,807,o),
(659,807,qs),
(666,807,o),
(671,799,qs),
(685,776,o),
(689,717,o),
(678,695,qs),
(672,681,o),
(650,660,o),
(642,661,qs),
(636,661,o),
(637,668,qs),
(639,683,o),
(639,692,qs),
(639,717,o)
);
},
{
closed = 1;
nodes = (
(523,536,o),
(523,576,qs),
(523,583,ls),
(523,605,o),
(532,620,qs),
(545,638,o),
(570,638,qs),
(576,638,ls),
(581,638,o),
(581,633,qs),
(581,571,ls),
(581,544,o),
(602,544,qs),
(624,544,o),
(624,571,qs),
(624,583,ls),
(624,608,o),
(636,623,qs),
(649,638,o),
(671,638,qs),
(677,638,ls),
(682,638,o),
(682,633,qs),
(682,571,ls),
(682,544,o),
(703,544,qs),
(725,544,o),
(725,571,qs),
(725,583,ls),
(725,608,o),
(737,623,qs),
(750,638,o),
(772,638,qs),
(778,638,ls),
(783,638,o),
(783,633,qs),
(783,576,ls),
(783,536,o),
(741,489,o),
(705,489,qs),
(674,489,o),
(654,507,q),
(633,489,o),
(603,489,qs),
(566,489,o)
);
},
{
closed = 1;
nodes = (
(1028,447,o),
(1028,433,qs),
(1028,196,ls),
(1028,112,o),
(985,61,qs),
(935,0,o),
(837,0,qs),
(762,0,ls),
(698,0,o),
(656,39,q),
(607,0,o),
(529,0,qs),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(532,133,ls),
(587,133,o),
(587,198,qs),
(587,342,ls),
(587,422,o),
(644,441,qs),
(664,447,o),
(693,447,qs),
(705,447,ls),
(720,447,o),
(720,433,qs),
(720,196,ls),
(721,133,o),
(775,133,qs),
(840,133,ls),
(895,133,o),
(895,198,qs),
(895,342,ls),
(895,422,o),
(952,441,qs),
(971,447,o),
(1001,447,qs),
(1012,447,ls)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
54 41 28 3 4 3 22 1 1 4 113 108 2 14 9 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
54 41 28 3 4 3 22 1 1 4 113 108 2 14 17 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
54 41 28 3 4 3 22 1 1 4 113 108 2 15 17 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 3 0 133 7 5 2 3 4 4 3 112 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 105 2 19 2 1 1 4 97 6 1 4 4 23 77 21 17 11 3 9 9 14 96 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 105 2 19 2 1 1 4 97 6 1 4 4 23 77 21 17 11 3 9 9 14 96 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 105 2 19 2 1 1 4 97 6 1 4 4 23 77 11 1 9 9 14 96 16 15 2 14 14 24 77 21 1 17 17 14 95 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 105 2 19 2 1 1 4 97 6 1 4 4 23 77 11 1 9 9 15 96 16 1 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 105 11 1 9 9 15 96 16 1 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 105 21 1 17 0 14 17 14 101 11 1 9 9 15 96 16 1 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
125 124 66 65 21 20 129 127 124 132 125 132 117 114 112 109 107 105 99 97 94 91 88 85 80 77 74 71 65 123 66 122 58 56 52 50 45 43 39 37 32 30 25 23 20 64 21 64 27 22 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1072;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o),
(780,-98,o),
(780,-124,qs),
(780,-151,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(843,-223,o),
(843,-247,qs),
(843,-271,o),
(809,-305,o),
(786,-305,qs),
(763,-305,o),
(730,-271,o),
(730,-247,qs),
(730,-223,o),
(763,-189,o),
(786,-189,qs),
(810,-189,o)
);
},
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
123 1 15 1 52 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
123 1 15 16 52 1 3 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 5 15 0 15 5 0 128 0 19 18 1 17 1 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 18 17 1 17 18 1 128 0 5 15 0 15 5 0 128 0 19 0 17 18 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
0 18 17 1 17 18 1 128 0 1 16 17 1 16 126 0 5 15 0 15 5 0 128 0 19 0 17 18 19 17 105 0 16 0 15 5 16 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
82 81 70 69 1 0 119 117 114 112 110 108 105 102 99 96 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 23 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 31 29 26 34 27 34 24 22 20 18 12 10 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,607,o),
(210,631,qs),
(210,655,o),
(242,689,o),
(266,689,qs),
(289,689,o),
(322,655,o),
(322,631,qs),
(322,608,o),
(289,573,o),
(266,573,qs),
(242,573,o)
);
},
{
closed = 1;
nodes = (
(135,481,o),
(135,508,qs),
(135,534,o),
(170,571,o),
(196,571,qs),
(222,571,o),
(259,534,o),
(259,508,qs),
(259,481,o),
(222,444,o),
(196,444,qs),
(171,444,o)
);
},
{
closed = 1;
nodes = (
(309,571,o),
(335,571,qs),
(361,571,o),
(397,534,o),
(397,508,qs),
(397,481,o),
(361,444,o),
(335,444,qs),
(309,444,o),
(272,481,o),
(272,508,qs),
(272,534,o)
);
},
{
closed = 1;
nodes = (
(480,-187,qs),
(479,-269,o),
(395,-308,qs),
(346,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,21,o),
(126,86,q),
(81,133,o),
(80,202,qs),
(79,278,o),
(128,333,qs),
(185,397,o),
(274,397,qs),
(337,397,o),
(379,366,qs),
(427,331,o),
(425,272,qs),
(423,239,o),
(405,238,qs),
(398,238,o),
(387,245,qs),
(344,271,o),
(297,271,qs),
(259,271,o),
(216,234,o),
(215,201,qs),
(215,172,o),
(251,133,o),
(280,133,qs),
(366,133,ls),
(417,133,o),
(478,80,o),
(478,36,qs),
(478,24,ls),
(478,9,o),
(468,0,o),
(451,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(354,-206,o),
(387,-197,qs),
(408,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 118 values pushed */
82 1 7 8 1 76 0 10 9 8 9 10 8 128 16 1 13 7 6 7 13 6 128 0 1 14 1 0 3 1 0 105 5 1 3 4 15 2 2 11 3 2 105 0 11 0 9 10 11 9 105 0 8 0 7 13 8 7 103 0 6 12 12 6 89 0 6 6 12 97 0 12 6 12 81 36 36 13 12 1 0 36 93 36 93 89 87 77 75 71 69 67 65 61 58 53 50 45 43 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,607,o),
(254,631,qs),
(254,655,o),
(287,689,o),
(310,689,qs),
(333,689,o),
(367,655,o),
(367,631,qs),
(367,608,o),
(333,573,o),
(310,573,qs),
(287,573,o)
);
},
{
closed = 1;
nodes = (
(179,481,o),
(179,508,qs),
(179,534,o),
(215,571,o),
(241,571,qs),
(267,571,o),
(303,534,o),
(303,508,qs),
(303,481,o),
(267,444,o),
(241,444,qs),
(215,444,o)
);
},
{
closed = 1;
nodes = (
(353,571,o),
(379,571,qs),
(405,571,o),
(441,534,o),
(441,508,qs),
(441,481,o),
(405,444,o),
(379,444,qs),
(353,444,o),
(317,481,o),
(317,508,qs),
(317,534,o)
);
},
{
closed = 1;
nodes = (
(182,-65,o),
(183,-102,qs),
(184,-145,o),
(211,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(379,-199,qs),
(406,-193,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-261,o),
(409,-301,qs),
(358,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-28,o),
(69,24,qs),
(104,83,o),
(172,112,q),
(110,196,ls),
(92,221,o),
(92,260,qs),
(92,314,o),
(153,354,qs),
(221,397,o),
(310,397,qs),
(387,397,o),
(451,363,qs),
(528,322,o),
(528,260,qs),
(528,221,o),
(510,196,qs),
(465,133,l),
(615,133,l),
(615,0,l),
(393,0,ls),
(343,0,o),
(311,23,q),
(293,5,o),
(265,-1,qs),
(227,-9,o)
);
},
{
closed = 1;
nodes = (
(250,236,qs),
(250,226,o),
(255,219,qs),
(307,149,ls),
(310,144,o),
(313,149,qs),
(365,219,ls),
(370,226,o),
(370,236,qs),
(370,252,o),
(338,271,o),
(310,271,qs),
(250,271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
57 38 2 6 7 1 76 0 10 6 11 6 10 11 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 8 3 2 105 0 8 15 1 12 7 8 12 105 0 7 0 6 10 7 6 103 0 11 9 9 11 89 0 11 11 9 97 0 9 11 9 81 87 86 13 12 1 0 86 98 87 98 80 78 71 70 66 64 51 49 43 42 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,607,o),
(209,631,qs),
(209,655,o),
(242,689,o),
(266,689,qs),
(289,689,o),
(322,655,o),
(322,631,qs),
(322,608,o),
(289,573,o),
(266,573,qs),
(242,573,o)
);
},
{
closed = 1;
nodes = (
(134,481,o),
(134,508,qs),
(134,534,o),
(170,571,o),
(196,571,qs),
(222,571,o),
(259,534,o),
(259,508,qs),
(259,481,o),
(222,444,o),
(196,444,qs),
(170,444,o)
);
},
{
closed = 1;
nodes = (
(308,571,o),
(334,571,qs),
(360,571,o),
(397,534,o),
(397,508,qs),
(397,481,o),
(360,444,o),
(334,444,qs),
(308,444,o),
(272,481,o),
(272,508,qs),
(272,534,o)
);
},
{
closed = 1;
nodes = (
(421,133,o),
(482,80,o),
(482,36,qs),
(482,24,ls),
(482,9,o),
(472,0,o),
(456,0,qs),
(0,0,l),
(0,133,l),
(99,133,l),
(84,166,o),
(84,202,qs),
(83,278,o),
(132,333,qs),
(189,397,o),
(278,397,qs),
(342,397,o),
(383,366,qs),
(431,331,o),
(429,272,qs),
(428,239,o),
(409,238,qs),
(402,238,o),
(392,245,qs),
(349,271,o),
(301,271,qs),
(264,271,o),
(220,234,o),
(219,201,qs),
(219,172,o),
(256,133,o),
(284,133,qs),
(371,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 62 60 59 58 53 51 47 45 43 41 36 68 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,607,o),
(244,631,qs),
(244,655,o),
(277,689,o),
(300,689,qs),
(323,689,o),
(357,655,o),
(357,631,qs),
(357,608,o),
(323,573,o),
(300,573,qs),
(277,573,o)
);
},
{
closed = 1;
nodes = (
(169,481,o),
(169,508,qs),
(169,534,o),
(205,571,o),
(231,571,qs),
(257,571,o),
(293,534,o),
(293,508,qs),
(293,481,o),
(257,444,o),
(231,444,qs),
(205,444,o)
);
},
{
closed = 1;
nodes = (
(307,481,o),
(307,508,qs),
(307,534,o),
(343,571,o),
(369,571,qs),
(395,571,o),
(431,534,o),
(431,508,qs),
(431,481,o),
(395,444,o),
(369,444,qs),
(343,444,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(146,133,l),
(100,196,ls),
(82,221,o),
(82,260,qs),
(82,314,o),
(143,354,qs),
(211,397,o),
(300,397,qs),
(377,397,o),
(441,363,qs),
(518,322,o),
(518,260,qs),
(518,221,o),
(500,196,qs),
(454,133,l),
(605,133,l),
(605,0,l),
(383,0,ls),
(333,0,o),
(300,23,q),
(267,0,o),
(217,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(300,144,o),
(303,149,qs),
(355,219,ls),
(360,226,o),
(360,236,qs),
(360,252,o),
(327,271,o),
(300,271,qs),
(273,271,o),
(240,252,o),
(240,236,qs),
(240,226,o),
(245,219,qs),
(297,149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
38 1 6 8 1 76 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 9 3 2 105 0 9 0 11 8 9 11 105 10 1 8 6 6 8 87 10 1 8 8 6 95 7 15 2 6 8 6 79 37 36 25 24 13 12 1 0 66 64 58 57 51 49 43 42 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,22,qs),
(44,451,ls),
(44,531,o),
(101,549,q),
(118,556,o),
(152,556,qs),
(236,556,o),
(290,502,qs),
(294,498,o),
(297,502,qs),
(319,532,o),
(373,556,o),
(417,556,qs),
(472,556,ls),
(485,556,o),
(485,541,qs),
(485,531,ls),
(485,502,o),
(479,485,qs),
(468,448,o),
(423,437,q),
(421,436,o),
(409,433,qs),
(404,432,o),
(402,432,q),
(371,425,o),
(334,380,o),
(311,322,qs),
(306,307,o),
(296,307,qs),
(287,307,o),
(280,322,qs),
(257,379,o),
(225,420,o),
(196,427,qs),
(187,429,o),
(180,430,qs),
(176,430,o),
(176,427,qs),
(176,22,ls),
(176,0,o),
(155,0,qs),
(66,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 2 1 76 0 1 2 0 2 1 0 128 3 1 2 2 23 77 4 1 0 0 24 0 78 1 0 37 35 30 27 13 11 0 43 1 42 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,556,o),
(431,556,qs),
(441,556,o),
(443,542,qs),
(445,530,ls),
(458,421,o),
(406,387,qs),
(224,266,l),
(196,245,o),
(175,211,o),
(175,189,qs),
(175,162,o),
(213,126,o),
(241,126,qs),
(485,126,ls),
(533,126,o),
(591,76,o),
(591,34,qs),
(591,24,ls),
(591,9,o),
(582,0,o),
(566,0,qs),
(231,0,ls),
(154,0,o),
(102,40,qs),
(39,90,o),
(39,181,qs),
(39,249,o),
(79,303,qs),
(113,350,o),
(190,401,qs),
(414,548,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 26 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,269,o),
(5,282,qs),
(5,373,ls),
(5,386,o),
(18,386,qs),
(69,386,l),
(69,402,ls),
(69,476,o),
(99,517,qs),
(132,561,o),
(196,561,qs),
(246,561,o),
(280,529,qs),
(316,496,o),
(316,452,qs),
(316,431,o),
(301,431,qs),
(298,431,o),
(294,433,qs),
(291,434,o),
(290,434,q),
(257,449,o),
(238,449,qs),
(217,449,o),
(202,425,o),
(202,392,qs),
(202,386,l),
(292,386,ls),
(305,386,o),
(305,373,qs),
(305,282,ls),
(305,269,o),
(292,269,qs),
(202,269,l),
(202,13,ls),
(202,0,o),
(189,0,qs),
(82,0,ls),
(69,0,o),
(69,13,qs),
(69,269,l),
(18,269,ls)
);
},
{
closed = 1;
nodes = (
(361,386,o),
(373,386,qs),
(396,386,ls),
(447,386,o),
(493,339,o),
(493,288,qs),
(493,13,ls),
(493,0,o),
(479,0,qs),
(373,0,ls),
(361,0,o),
(361,13,qs),
(361,373,ls)
);
},
{
closed = 1;
nodes = (
(394,556,o),
(424,556,qs),
(454,556,o),
(496,514,o),
(496,484,qs),
(496,454,o),
(454,412,o),
(424,412,qs),
(394,412,o),
(352,454,o),
(352,484,qs),
(352,513,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
4 1 3 3 5 97 11 1 5 5 39 77 0 10 10 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 9 6 2 2 2 42 77 8 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 4 3 10 3 4 10 128 0 3 3 5 97 11 1 5 5 39 77 0 10 10 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 9 6 2 2 2 42 77 8 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 10 3 4 10 128 0 3 3 5 97 0 5 5 39 77 0 10 10 11 97 0 11 11 39 77 12 7 2 1 1 2 97 9 6 2 2 2 42 77 8 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 65 63 59 57 53 50 46 43 0 41 0 40 36 36 36 35 35 34 50 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,269,o),
(5,282,qs),
(5,373,ls),
(5,386,o),
(18,386,qs),
(69,386,l),
(69,402,ls),
(69,476,o),
(99,517,qs),
(132,561,o),
(196,561,qs),
(246,561,o),
(280,529,qs),
(316,496,o),
(316,452,qs),
(316,431,o),
(301,431,qs),
(298,431,o),
(294,433,qs),
(291,434,o),
(290,434,q),
(257,449,o),
(238,449,qs),
(217,449,o),
(202,425,o),
(202,392,qs),
(202,386,l),
(292,386,ls),
(305,386,o),
(305,373,qs),
(305,282,ls),
(305,269,o),
(292,269,qs),
(202,269,l),
(202,13,ls),
(202,0,o),
(189,0,qs),
(82,0,ls),
(69,0,o),
(69,13,qs),
(69,269,l),
(18,269,ls)
);
},
{
closed = 1;
nodes = (
(398,21,qs),
(362,56,o),
(362,129,qs),
(362,542,ls),
(362,556,o),
(374,556,qs),
(397,556,ls),
(448,556,o),
(494,509,o),
(494,458,qs),
(494,144,ls),
(494,103,o),
(526,103,qs),
(544,103,o),
(566,120,qs),
(572,125,o),
(578,125,qs),
(591,125,o),
(591,106,qs),
(591,65,o),
(569,34,qs),
(538,-8,o),
(479,-8,qs),
(429,-8,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
4 1 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 10 1 9 9 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 9 1 10 1 9 10 128 4 1 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 10 10 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 10 10 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
38 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 46 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 11 11 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 46 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
43 42 0 0 60 57 53 51 48 47 42 65 43 65 0 41 0 40 36 36 36 35 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,627,q),
(77,636,o),
(66,636,qs),
(51,636,o),
(38,617,qs),
(26,600,o),
(20,611,qs),
(2,639,o),
(14,667,qs),
(28,695,o),
(62,693,qs),
(69,693,o),
(78,691,qs),
(86,689,o),
(88,689,qs),
(93,689,o),
(97,693,q),
(126,732,o),
(157,754,o),
(184,754,qs),
(214,754,o),
(251,715,o),
(251,684,qs),
(251,654,o),
(202,608,o),
(169,608,qs),
(143,608,o),
(109,623,q),
(105,624,o)
);
},
{
closed = 1;
nodes = (
(148,672,q),
(158,668,o),
(168,668,qs),
(178,668,o),
(195,682,o),
(195,691,qs),
(195,701,o),
(183,701,qs),
(169,701,o)
);
},
{
closed = 1;
nodes = (
(278,0,l),
(243,0,ls),
(158,0,o),
(108,47,qs),
(52,100,o),
(52,196,qs),
(52,450,ls),
(52,531,o),
(109,549,qs),
(129,556,o),
(158,556,qs),
(170,556,ls),
(185,556,o),
(185,542,qs),
(185,198,ls),
(185,133,o),
(240,133,qs),
(278,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
36 1 4 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
36 1 6 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 5 1 2 0 5 114 6 3 2 2 0 4 0 2 4 105 0 1 0 0 8 1 0 105 0 8 8 23 77 11 1 7 7 9 98 0 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
10 1 5 1 2 0 5 114 0 6 2 4 1 6 114 3 1 2 0 4 0 2 4 105 0 1 0 0 8 1 0 105 0 8 8 23 77 11 1 7 7 9 98 0 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 5 1 2 1 5 2 128 0 6 2 4 1 6 114 3 1 2 0 4 0 2 4 105 0 1 0 0 8 1 0 105 0 8 8 23 77 11 1 7 7 9 98 0 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
10 1 5 1 2 1 5 2 128 0 6 2 4 2 6 4 128 3 1 2 0 4 0 2 4 105 0 1 0 0 8 1 0 105 0 8 8 23 77 11 1 7 7 9 98 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
10 1 5 1 3 1 5 3 128 0 2 3 6 3 2 6 128 0 6 4 3 6 4 126 0 3 0 4 0 3 4 105 0 1 0 0 8 1 0 105 0 8 8 23 77 11 1 7 7 9 98 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 38 30 29 54 52 45 42 38 55 39 55 35 33 29 37 30 37 38 34 35 36 33 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 259;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(162,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
},
{
closed = 1;
nodes = (
(338,-188,o),
(312,-188,qs),
(286,-188,o),
(250,-151,o),
(250,-124,qs),
(250,-98,o),
(286,-61,o),
(312,-61,qs),
(338,-61,o),
(375,-98,o),
(375,-124,qs),
(375,-151,o)
);
},
{
closed = 1;
nodes = (
(512,-98,o),
(512,-124,qs),
(512,-151,o),
(476,-188,o),
(450,-188,qs),
(424,-188,o),
(388,-151,o),
(388,-124,qs),
(388,-98,o),
(424,-61,o),
(450,-61,qs),
(476,-61,o)
);
},
{
closed = 1;
nodes = (
(438,-224,o),
(438,-248,qs),
(438,-272,o),
(405,-306,o),
(381,-306,qs),
(358,-306,o),
(325,-272,o),
(325,-248,qs),
(325,-224,o),
(358,-190,o),
(381,-190,qs),
(404,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
38 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 98 5 1 4 4 24 4 78 68 67 56 55 1 0 74 72 67 78 68 78 62 60 55 66 56 66 53 51 47 45 41 39 37 34 25 24 15 12 7 4 0 42 1 42 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,112,o),
(182,61,qs),
(131,0,o),
(33,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(159,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(159,-61,qs),
(185,-61,o)
);
},
{
closed = 1;
nodes = (
(147,-224,o),
(147,-248,qs),
(147,-272,o),
(113,-306,o),
(90,-306,qs),
(67,-306,o),
(34,-272,o),
(34,-248,qs),
(34,-224,o),
(67,-190,o),
(90,-190,qs),
(113,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 106 12 1 7 0 8 7 8 101 0 2 2 0 97 9 1 0 0 24 0 78 43 42 31 30 19 18 1 0 49 47 42 53 43 53 37 35 30 41 31 41 25 23 18 29 19 29 16 14 9 6 0 17 1 17 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,0,l),
(267,0,ls),
(203,0,o),
(160,39,q),
(111,0,o),
(33,0,qs),
(-1,0,l),
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,133,o),
(280,133,qs),
(317,133,l)
);
},
{
closed = 1;
nodes = (
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o),
(83,-98,o),
(83,-124,qs),
(83,-151,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(159,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(159,-61,qs),
(185,-61,o)
);
},
{
closed = 1;
nodes = (
(147,-224,o),
(147,-248,qs),
(147,-272,o),
(113,-306,o),
(90,-306,qs),
(67,-306,o),
(34,-272,o),
(34,-248,qs),
(34,-224,o),
(67,-190,o),
(90,-190,qs),
(113,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
18 1 3 0 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 98 4 1 3 3 24 3 78 48 47 36 35 1 0 54 52 47 58 48 58 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 7 4 0 22 1 22 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,383,o),
(281,391,qs),
(281,398,ls),
(283,440,o),
(332,443,q),
(332,564,ls),
(332,596,o),
(350,612,qs),
(361,622,o),
(381,622,qs),
(386,622,ls),
(393,622,o),
(393,616,qs),
(393,562,l),
(421,562,ls),
(467,562,o),
(518,515,o),
(518,472,qs),
(518,430,o),
(467,383,o),
(421,383,qs),
(290,383,ls)
);
},
{
closed = 1;
nodes = (
(393,443,l),
(423,443,ls),
(454,443,o),
(454,472,qs),
(454,502,o),
(423,502,qs),
(393,502,l)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
8 1 1 2 67 1 10 6 2 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 5 1 3 12 1 0 7 3 0 104 13 1 4 4 1 97 0 1 1 23 77 8 14 2 6 6 10 98 11 1 10 10 24 10 78 30 29 23 22 1 0 70 68 66 63 54 53 44 41 36 33 29 71 30 71 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,622,o),
(275,575,o),
(275,533,qs),
(275,490,o),
(224,444,o),
(178,444,qs),
(47,444,ls),
(38,444,o),
(38,451,qs),
(38,459,ls),
(40,501,o),
(89,503,q),
(89,624,ls),
(89,657,o),
(107,672,qs),
(118,682,o),
(138,682,qs),
(143,682,ls),
(150,682,o),
(150,676,qs),
(150,622,l),
(178,622,ls)
);
},
{
closed = 1;
nodes = (
(211,503,o),
(211,533,qs),
(211,563,o),
(180,563,qs),
(150,563,l),
(150,503,l),
(180,503,ls)
);
},
{
closed = 1;
nodes = (
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
1 1 3 0 1 76 0 0 3 0 133 11 1 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 97 0 8 8 24 8 78 30 29 22 22 0 0 40 38 37 35 29 46 30 45 22 28 22 27 25 23 0 21 0 20 51 20 35 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,444,o),
(38,451,qs),
(38,459,ls),
(40,501,o),
(89,503,q),
(89,624,ls),
(89,657,o),
(107,672,qs),
(118,682,o),
(138,682,qs),
(143,682,ls),
(150,682,o),
(150,676,qs),
(150,622,l),
(178,622,ls),
(224,622,o),
(275,575,o),
(275,533,qs),
(275,490,o),
(224,444,o),
(178,444,qs),
(47,444,ls)
);
},
{
closed = 1;
nodes = (
(150,503,l),
(180,503,ls),
(211,503,o),
(211,533,qs),
(211,563,o),
(180,563,qs),
(150,563,l)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
8 1 1 2 47 1 9 6 2 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 98 10 1 9 9 24 9 78 30 29 23 22 1 0 50 48 46 44 43 41 36 33 29 51 30 51 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,607,o),
(582,631,qs),
(582,655,o),
(615,689,o),
(638,689,qs),
(662,689,o),
(695,655,o),
(695,631,qs),
(695,608,o),
(662,573,o),
(638,573,qs),
(615,573,o)
);
},
{
closed = 1;
nodes = (
(507,481,o),
(507,508,qs),
(507,534,o),
(543,571,o),
(569,571,qs),
(595,571,o),
(632,534,o),
(632,508,qs),
(632,481,o),
(595,444,o),
(569,444,qs),
(543,444,o)
);
},
{
closed = 1;
nodes = (
(681,571,o),
(707,571,qs),
(733,571,o),
(770,534,o),
(770,508,qs),
(770,481,o),
(733,444,o),
(707,444,qs),
(681,444,o),
(645,481,o),
(645,508,qs),
(645,534,o)
);
},
{
closed = 1;
nodes = (
(916,0,l),
(731,0,ls),
(667,0,o),
(637,24,q),
(606,0,o),
(542,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(466,133,l),
(447,170,o),
(447,211,qs),
(447,280,o),
(492,333,qs),
(547,397,o),
(637,397,qs),
(715,397,o),
(769,346,qs),
(827,292,o),
(827,211,qs),
(827,170,o),
(808,133,q),
(916,133,l)
);
},
{
closed = 1;
nodes = (
(689,213,qs),
(689,238,o),
(659,271,o),
(637,271,qs),
(614,271,o),
(585,238,o),
(585,213,qs),
(583,163,o),
(637,138,q),
(690,163,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 9 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 12 6 8 12 128 0 1 13 1 0 3 1 0 105 0 6 0 12 7 6 12 105 4 14 2 2 2 3 97 5 1 3 3 23 77 15 11 2 7 7 9 96 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 6 12 6 8 12 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 7 6 12 105 15 11 2 7 7 9 96 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
36 36 13 12 1 0 84 82 36 77 36 77 76 74 72 69 60 59 50 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,607,o),
(214,631,qs),
(214,655,o),
(247,689,o),
(270,689,qs),
(293,689,o),
(327,655,o),
(327,631,qs),
(327,608,o),
(293,573,o),
(270,573,qs),
(247,573,o)
);
},
{
closed = 1;
nodes = (
(139,481,o),
(139,508,qs),
(139,534,o),
(175,571,o),
(201,571,qs),
(227,571,o),
(263,534,o),
(263,508,qs),
(263,481,o),
(227,444,o),
(201,444,qs),
(175,444,o)
);
},
{
closed = 1;
nodes = (
(313,571,o),
(339,571,qs),
(365,571,o),
(401,534,o),
(401,508,qs),
(401,481,o),
(365,444,o),
(339,444,qs),
(313,444,o),
(277,481,o),
(277,508,qs),
(277,534,o)
);
},
{
closed = 1;
nodes = (
(396,351,qs),
(458,296,o),
(458,198,qs),
(458,114,o),
(410,60,qs),
(358,1,o),
(272,0,qs),
(0,0,l),
(0,133,l),
(94,133,l),
(81,167,o),
(81,198,qs),
(81,283,o),
(129,337,qs),
(182,397,o),
(269,397,qs),
(345,397,o)
);
},
{
closed = 1;
nodes = (
(322,173,o),
(322,203,qs),
(322,233,o),
(292,271,o),
(270,271,qs),
(247,271,o),
(217,232,o),
(217,203,qs),
(217,173,o),
(248,133,o),
(270,133,qs),
(292,133,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 11 1 0 3 1 0 105 13 1 6 0 10 7 6 10 105 4 12 2 2 2 3 97 5 1 3 3 23 77 14 9 2 7 7 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 13 1 6 0 10 7 6 10 105 14 9 2 7 7 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
54 53 37 36 13 12 1 0 60 58 53 64 54 64 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,607,o),
(215,631,qs),
(215,655,o),
(248,689,o),
(271,689,qs),
(294,689,o),
(328,655,o),
(328,631,qs),
(328,608,o),
(294,573,o),
(271,573,qs),
(248,573,o)
);
},
{
closed = 1;
nodes = (
(140,481,o),
(140,508,qs),
(140,534,o),
(176,571,o),
(202,571,qs),
(228,571,o),
(264,534,o),
(264,508,qs),
(264,481,o),
(228,444,o),
(202,444,qs),
(176,444,o)
);
},
{
closed = 1;
nodes = (
(314,571,o),
(340,571,qs),
(366,571,o),
(402,534,o),
(402,508,qs),
(402,481,o),
(366,444,o),
(340,444,qs),
(314,444,o),
(278,481,o),
(278,508,qs),
(278,534,o)
);
},
{
closed = 1;
nodes = (
(548,0,l),
(363,0,ls),
(299,0,o),
(269,24,q),
(239,0,o),
(174,0,qs),
(0,0,l),
(0,133,l),
(98,133,l),
(79,170,o),
(79,211,qs),
(79,280,o),
(124,333,qs),
(179,397,o),
(269,397,qs),
(347,397,o),
(401,346,qs),
(459,292,o),
(459,211,qs),
(459,170,o),
(440,133,q),
(548,133,l)
);
},
{
closed = 1;
nodes = (
(321,213,qs),
(321,238,o),
(291,271,o),
(269,271,qs),
(246,271,o),
(217,238,o),
(217,213,qs),
(215,163,o),
(269,138,q),
(322,163,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 12 1 0 3 1 0 105 0 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 14 10 2 7 7 8 95 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
36 36 13 12 1 0 64 62 36 57 36 57 56 54 52 50 49 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,0,l),
(549,0,ls),
(483,0,o),
(446,35,q),
(418,15,o),
(357,0,o),
(307,0,qs),
(289,0,ls),
(244,0,o),
(185,-58,o),
(185,-102,qs),
(185,-149,o),
(217,-177,qs),
(250,-206,o),
(304,-206,qs),
(322,-206,o),
(332,-204,qs),
(336,-203,ls),
(347,-201,o),
(350,-201,qs),
(367,-201,o),
(366,-223,qs),
(365,-269,o),
(332,-297,qs),
(298,-324,o),
(240,-324,qs),
(172,-324,o),
(114,-271,qs),
(39,-202,o),
(41,-97,qs),
(41,-1,o),
(101,61,qs),
(170,133,o),
(288,133,qs),
(327,133,ls),
(354,133,o),
(372,144,q),
(366,155,o),
(354,183,qs),
(348,198,o),
(345,204,qs),
(314,271,o),
(252,271,qs),
(217,271,o),
(186,258,qs),
(160,247,o),
(139,227,qs),
(126,216,o),
(117,216,qs),
(105,216,o),
(102,231,qs),
(101,239,o),
(102,253,qs),
(108,315,o),
(156,357,qs),
(202,397,o),
(272,397,qs),
(420,397,o),
(486,223,qs),
(488,219,o),
(490,215,qs),
(506,171,o),
(520,146,o),
(533,139,qs),
(542,134,o),
(567,133,qs),
(586,133,l)
);
},
{
closed = 1;
nodes = (
(400,-129,o),
(384,-129,qs),
(369,-129,o),
(347,-107,o),
(347,-92,qs),
(347,-77,o),
(369,-56,o),
(384,-56,qs),
(399,-56,o),
(421,-77,o),
(421,-92,qs),
(421,-107,o)
);
},
{
closed = 1;
nodes = (
(502,-77,o),
(502,-92,qs),
(502,-108,o),
(481,-130,o),
(466,-130,qs),
(450,-130,o),
(429,-108,o),
(429,-92,qs),
(429,-77,o),
(451,-56,o),
(466,-56,qs),
(481,-56,o)
);
},
{
closed = 1;
nodes = (
(462,-150,o),
(462,-166,qs),
(462,-182,o),
(442,-203,o),
(426,-203,qs),
(411,-203,o),
(390,-182,o),
(390,-166,qs),
(390,-151,o),
(411,-129,o),
(426,-129,qs),
(442,-129,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
29 1 0 2 62 1 8 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 17 12 2 10 13 1 11 14 10 11 105 18 1 14 0 15 5 14 15 105 7 1 6 0 5 6 5 101 4 16 2 0 0 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 2 3 0 3 2 0 128 0 6 14 15 14 6 15 128 0 1 0 3 2 1 3 105 17 12 2 10 13 1 11 14 10 11 105 18 1 14 0 15 7 14 15 105 0 7 0 5 7 5 101 4 16 2 0 0 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
92 91 80 79 1 0 98 96 91 102 92 102 86 84 79 90 80 90 77 75 71 69 65 63 60 57 52 50 46 45 41 39 33 30 24 22 18 16 10 8 0 66 1 66 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(351,133,l),
(341,147,o),
(328,176,qs),
(322,188,o),
(320,194,qs),
(285,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,316,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(394,397,o),
(458,217,qs),
(476,168,o),
(492,149,qs),
(502,136,o),
(518,134,qs),
(529,132,o),
(534,127,o),
(534,117,qs),
(534,70,o),
(508,39,qs),
(475,1,o),
(412,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(228,-98,o),
(228,-124,qs),
(228,-151,o),
(191,-188,o),
(165,-188,qs),
(139,-188,o),
(103,-151,o),
(103,-124,qs),
(103,-98,o),
(139,-61,o),
(165,-61,qs),
(191,-61,o)
);
},
{
closed = 1;
nodes = (
(366,-98,o),
(366,-124,qs),
(366,-151,o),
(329,-188,o),
(303,-188,qs),
(277,-188,o),
(241,-151,o),
(241,-124,qs),
(241,-98,o),
(277,-61,o),
(303,-61,qs),
(329,-61,o)
);
},
{
closed = 1;
nodes = (
(291,-224,o),
(291,-248,qs),
(291,-272,o),
(258,-306,o),
(234,-306,qs),
(211,-306,o),
(178,-272,o),
(178,-248,qs),
(178,-224,o),
(211,-190,o),
(234,-190,qs),
(258,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 13 7 12 3 5 8 1 6 9 5 6 105 14 1 9 0 10 9 10 101 0 4 4 0 95 11 1 0 0 24 0 78 61 60 49 48 37 36 1 0 67 65 60 71 61 71 55 53 48 59 49 59 43 41 36 47 37 47 34 33 28 26 22 20 14 12 0 35 1 35 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(519,0,ls),
(453,0,o),
(417,35,q),
(388,15,o),
(327,0,o),
(277,0,qs),
(1,0,l),
(0,133,l),
(297,133,ls),
(324,133,o),
(343,144,q),
(336,155,o),
(324,183,qs),
(318,198,o),
(316,204,q),
(284,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,316,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(390,397,o),
(457,223,qs),
(458,219,o),
(460,215,qs),
(476,171,o),
(491,146,o),
(503,139,qs),
(512,134,o),
(538,133,qs),
(557,133,l)
);
},
{
closed = 1;
nodes = (
(191,-188,o),
(165,-188,qs),
(139,-188,o),
(103,-151,o),
(103,-124,qs),
(103,-98,o),
(139,-61,o),
(165,-61,qs),
(191,-61,o),
(228,-98,o),
(228,-124,qs),
(228,-151,o)
);
},
{
closed = 1;
nodes = (
(366,-98,o),
(366,-124,qs),
(366,-151,o),
(329,-188,o),
(303,-188,qs),
(277,-188,o),
(241,-151,o),
(241,-124,qs),
(241,-98,o),
(277,-61,o),
(303,-61,qs),
(329,-61,o)
);
},
{
closed = 1;
nodes = (
(291,-224,o),
(291,-248,qs),
(291,-272,o),
(258,-306,o),
(234,-306,qs),
(211,-306,o),
(178,-272,o),
(178,-248,qs),
(178,-224,o),
(211,-190,o),
(234,-190,qs),
(258,-190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
29 1 0 2 37 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 14 9 2 7 10 1 8 11 7 8 105 15 1 11 0 12 11 12 101 4 13 2 0 0 5 97 6 1 5 5 24 5 78 67 66 55 54 1 0 73 71 66 77 67 77 61 59 54 65 55 65 52 50 46 44 40 38 35 33 32 30 24 22 18 16 10 8 0 41 1 41 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,466,o),
(91,473,qs),
(91,481,ls),
(92,523,o),
(142,526,q),
(142,647,ls),
(142,679,o),
(159,694,qs),
(171,704,o),
(190,704,qs),
(196,704,ls),
(202,704,o),
(202,698,qs),
(202,644,l),
(230,644,ls),
(276,644,o),
(327,598,o),
(327,555,qs),
(327,513,o),
(277,466,o),
(230,466,qs),
(99,466,ls)
);
},
{
closed = 1;
nodes = (
(202,526,l),
(232,526,ls),
(264,526,o),
(264,555,qs),
(264,585,o),
(232,585,qs),
(202,585,l)
);
},
{
closed = 1;
nodes = (
(482,0,l),
(432,0,ls),
(365,0,o),
(322,42,q),
(271,0,o),
(198,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o),
(336,346,qs),
(388,290,o),
(390,196,qs),
(390,193,ls),
(392,133,o),
(445,133,qs),
(482,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
8 1 1 2 40 1 8 7 66 1 11 6 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
8 1 1 2 40 1 9 7 66 1 11 6 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 2 133 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 9 1 8 6 7 8 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
30 29 23 22 1 0 69 67 65 62 56 53 49 47 42 41 37 35 29 70 30 70 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 471;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,594,o),
(113,618,qs),
(113,642,o),
(146,676,o),
(169,676,qs),
(192,676,o),
(226,642,o),
(226,618,qs),
(226,595,o),
(192,561,o),
(169,561,qs),
(146,561,o)
);
},
{
closed = 1;
nodes = (
(38,469,o),
(38,495,qs),
(38,521,o),
(74,558,o),
(100,558,qs),
(126,558,o),
(162,521,o),
(162,495,qs),
(162,469,o),
(126,432,o),
(100,432,qs),
(74,432,o)
);
},
{
closed = 1;
nodes = (
(212,558,o),
(238,558,qs),
(264,558,o),
(300,522,o),
(300,495,qs),
(300,469,o),
(264,432,o),
(238,432,qs),
(212,432,o),
(176,469,o),
(176,495,qs),
(176,522,o)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 11 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 2 6 2 7 6 128 0 1 12 1 0 3 1 0 105 9 1 8 0 10 8 10 101 4 13 2 2 2 3 97 5 1 3 3 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 0 8 0 10 8 10 101 4 13 2 2 2 3 97 5 1 3 3 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 13 12 1 0 67 65 61 59 55 53 51 49 43 40 36 68 37 68 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,444,o),
(59,451,qs),
(59,459,ls),
(61,501,o),
(110,503,q),
(110,624,ls),
(110,657,o),
(127,672,qs),
(139,682,o),
(158,682,qs),
(164,682,ls),
(171,682,o),
(171,676,qs),
(171,622,l),
(198,622,ls),
(245,622,o),
(296,575,o),
(296,533,qs),
(296,490,o),
(245,444,o),
(198,444,qs),
(67,444,ls)
);
},
{
closed = 1;
nodes = (
(171,503,l),
(201,503,ls),
(232,503,o),
(232,533,qs),
(232,563,o),
(201,563,qs),
(171,563,l)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 57 1 11 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 9 1 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
30 29 23 22 1 0 60 58 54 52 48 46 44 42 36 33 29 61 30 61 27 25 22 28 23 28 17 16 12 10 7 5 0 21 1 20 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(802,0,l),
(752,0,ls),
(687,0,o),
(644,41,q),
(592,0,o),
(522,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(519,133,ls),
(573,133,o),
(573,193,qs),
(573,220,o),
(544,252,o),
(519,252,qs),
(336,252,ls),
(257,252,o),
(257,317,qs),
(257,344,ls),
(257,392,o),
(286,409,qs),
(527,552,ls),
(536,558,o),
(541,555,qs),
(552,547,o),
(564,528,qs),
(601,470,o),
(541,436,qs),
(444,378,l),
(522,378,ls),
(594,378,o),
(644,337,qs),
(706,286,o),
(710,196,q),
(711,191,ls),
(716,133,o),
(765,133,qs),
(802,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
2 1 0 2 52 1 5 0 2 76 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 1 0 55 53 51 48 39 38 29 26 23 20 8 6 0 56 1 56 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 791;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,378,o),
(470,334,qs),
(533,280,o),
(533,183,qs),
(533,107,o),
(484,56,qs),
(430,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 30 0 29 33 35 60 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,0,l),
(575,0,ls),
(509,0,o),
(467,41,q),
(415,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls),
(416,378,o),
(467,337,qs),
(529,286,o),
(533,196,qs),
(533,191,ls),
(538,133,o),
(588,133,qs),
(625,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
2 1 0 2 32 1 4 0 2 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 35 33 31 29 28 26 23 20 8 6 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 614;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,467,o),
(256,494,qs),
(255,499,o),
(256,513,qs),
(256,519,o),
(256,521,qs),
(256,542,o),
(282,558,qs),
(462,666,ls),
(470,671,o),
(475,665,qs),
(488,648,o),
(488,629,qs),
(488,607,o),
(463,591,qs),
(286,486,l)
);
},
{
closed = 1;
nodes = (
(802,0,l),
(752,0,ls),
(687,0,o),
(644,41,q),
(592,0,o),
(522,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(519,133,ls),
(573,133,o),
(573,193,qs),
(573,220,o),
(544,252,o),
(519,252,qs),
(336,252,ls),
(257,252,o),
(257,317,qs),
(257,344,ls),
(257,392,o),
(286,409,qs),
(527,552,ls),
(536,558,o),
(541,555,qs),
(552,547,o),
(564,528,qs),
(601,470,o),
(541,436,qs),
(444,378,l),
(522,378,ls),
(594,378,o),
(644,337,qs),
(706,286,o),
(710,196,q),
(711,191,ls),
(716,133,o),
(765,133,qs),
(802,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 1 0 2 68 1 5 0 2 76 11 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 17 16 71 69 67 64 55 54 45 42 39 36 24 22 16 72 17 72 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 791;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,467,o),
(78,494,qs),
(78,499,o),
(78,513,qs),
(78,519,o),
(78,521,qs),
(78,542,o),
(105,558,qs),
(284,666,ls),
(293,671,o),
(297,665,qs),
(311,648,o),
(311,629,qs),
(311,607,o),
(286,591,qs),
(108,486,l)
);
},
{
closed = 1;
nodes = (
(419,378,o),
(470,334,qs),
(533,280,o),
(533,183,qs),
(533,107,o),
(484,56,qs),
(430,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 16 16 16 46 16 45 39 37 36 34 31 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,467,o),
(78,494,qs),
(78,499,o),
(78,513,qs),
(78,519,o),
(78,521,qs),
(78,542,o),
(105,558,qs),
(284,666,ls),
(293,671,o),
(297,665,qs),
(311,648,o),
(311,629,qs),
(311,607,o),
(286,591,qs),
(108,486,l)
);
},
{
closed = 1;
nodes = (
(625,0,l),
(575,0,ls),
(509,0,o),
(467,41,q),
(415,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls),
(416,378,o),
(467,337,qs),
(529,286,o),
(533,196,qs),
(533,191,ls),
(538,133,o),
(588,133,qs),
(625,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 1 0 2 48 1 4 0 2 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 17 16 51 49 47 45 44 42 39 36 24 22 16 52 17 52 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 614;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 1 0 42 40 36 34 25 24 16 14 7 4 0 43 1 43 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,488,qs),
(129,497,o),
(129,506,qs),
(129,538,o),
(162,548,q),
(152,566,o),
(152,586,qs),
(152,623,o),
(198,672,o),
(233,672,qs),
(262,673,o),
(298,641,o),
(298,615,qs),
(298,602,o),
(293,602,qs),
(291,602,o),
(282,606,qs),
(261,617,o),
(244,617,qs),
(211,617,o),
(211,585,qs),
(211,571,o),
(230,553,o),
(244,553,qs),
(272,553,ls),
(319,553,o),
(319,512,qs),
(319,505,ls),
(319,496,o),
(308,496,qs),
(182,496,ls),
(162,496,o),
(145,486,qs),
(141,483,o),
(138,483,qs),
(136,483,o)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 57 1 8 5 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 57 1 8 10 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 57 1 9 10 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 0 7 0 6 7 128 0 4 3 1 2 1 4 2 105 0 7 0 11 5 7 11 105 0 0 0 1 97 0 1 1 23 77 13 10 12 3 5 5 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 6 0 7 0 6 7 128 0 4 3 1 2 1 4 2 105 0 7 0 11 5 7 11 105 0 0 0 1 97 0 1 1 23 77 12 1 5 5 8 98 9 1 8 8 24 77 13 1 10 10 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 7 0 11 5 7 11 105 0 0 0 1 97 0 1 1 23 77 12 1 5 5 8 98 9 1 8 8 24 77 13 1 10 10 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 7 0 11 5 7 11 105 0 0 0 1 97 0 1 1 23 77 12 1 5 5 9 98 0 9 9 24 77 13 1 10 10 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 7 0 11 5 7 11 105 13 1 10 0 8 10 8 101 0 0 0 1 97 0 1 1 23 77 12 1 5 5 9 98 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
63 62 37 36 67 65 62 70 63 70 60 58 56 54 48 46 43 40 36 61 37 61 35 34 35 51 51 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 31 29 26 34 27 34 24 22 20 18 12 10 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,378,o),
(228,364,qs),
(228,196,ls),
(228,78,o),
(148,28,q),
(144,24,o),
(132,15,qs),
(111,-3,o),
(96,-15,qs),
(62,-45,o),
(58,-63,q),
(81,-68,o),
(109,-102,o),
(109,-126,qs),
(108,-153,o),
(71,-192,o),
(44,-192,qs),
(18,-192,o),
(-19,-154,o),
(-21,-126,qs),
(-24,-60,o),
(38,0,q),
(37,0,l),
(3,0,l),
(3,133,l),
(40,133,ls),
(95,133,o),
(95,198,qs),
(95,272,ls),
(95,353,o),
(152,372,qs),
(172,378,o),
(201,378,qs),
(213,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
22 13 2 3 2 1 76 4 1 0 1 0 133 0 3 2 3 134 0 1 1 2 95 0 2 2 24 2 78 1 0 17 15 10 9 8 6 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,-63,q),
(537,-68,o),
(565,-102,o),
(565,-126,qs),
(565,-153,o),
(527,-192,o),
(501,-192,qs),
(474,-192,o),
(437,-154,o),
(436,-126,qs),
(433,-60,o),
(494,0,q),
(409,0,ls),
(394,0,o),
(393,-22,qs),
(392,-29,ls),
(387,-78,o),
(369,-118,qs),
(324,-214,o),
(208,-214,qs),
(135,-214,o),
(85,-171,qs),
(56,-147,o),
(22,-63,o),
(22,-17,qs),
(22,0,l),
(0,0,l),
(0,133,l),
(67,133,ls),
(113,133,o),
(149,152,q),
(151,152,o),
(153,153,qs),
(161,158,o),
(167,158,qs),
(179,158,o),
(174,142,qs),
(164,99,o),
(160,73,qs),
(154,36,o),
(154,4,qs),
(154,-89,o),
(207,-89,qs),
(262,-89,o),
(262,4,qs),
(262,133,o),
(352,133,qs),
(664,133,l),
(664,0,l),
(571,0,l),
(566,-4,o),
(553,-15,qs),
(518,-45,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
51 37 2 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 1 3 133 0 2 8 1 6 2 6 102 4 1 1 1 0 95 7 5 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 3 133 0 8 2 6 2 8 6 128 0 2 0 6 2 6 102 4 1 1 1 0 95 7 5 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 37 37 17 37 22 34 33 18 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,0,l),
(732,0,ls),
(665,0,o),
(622,42,q),
(572,0,o),
(500,0,qs),
(381,0,ls),
(325,0,o),
(296,21,q),
(267,0,o),
(211,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(151,133,l),
(129,170,o),
(129,211,qs),
(129,262,o),
(154,302,q),
(87,329,o),
(84,409,qs),
(84,415,ls),
(84,432,o),
(102,427,qs),
(145,414,o),
(203,408,qs),
(267,401,o),
(309,401,qs),
(411,397,o),
(457,397,qs),
(558,394,o),
(620,347,qs),
(690,293,o),
(690,197,qs),
(690,193,ls),
(692,133,o),
(745,133,qs),
(782,133,l)
);
},
{
closed = 1;
nodes = (
(247,243,o),
(247,218,qs),
(247,158,o),
(296,145,q),
(344,158,o),
(344,218,qs),
(344,243,o),
(317,276,o),
(296,276,qs),
(275,276,o)
);
},
{
closed = 1;
nodes = (
(526,133,o),
(555,169,o),
(555,201,qs),
(555,267,o),
(450,274,q),
(462,245,o),
(462,211,qs),
(462,170,o),
(440,133,q),
(500,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 49 1 0 6 39 34 2 3 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 49 1 0 7 39 34 2 3 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
54 54 45 44 1 0 54 63 54 62 59 58 44 53 45 53 42 40 38 35 33 30 24 22 10 6 0 43 1 43 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 771;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(584,347,qs),
(654,293,o),
(654,197,qs),
(654,116,o),
(607,62,qs),
(554,0,o),
(464,0,qs),
(345,0,ls),
(289,0,o),
(260,21,q),
(231,0,o),
(175,0,qs),
(0,0,l),
(0,133,l),
(116,133,l),
(93,170,o),
(93,211,qs),
(93,262,o),
(118,302,q),
(51,329,o),
(48,409,qs),
(48,415,ls),
(48,432,o),
(67,427,qs),
(110,414,o),
(167,408,qs),
(232,401,o),
(273,401,qs),
(375,397,o),
(421,397,qs),
(523,394,o)
);
},
{
closed = 1;
nodes = (
(211,243,o),
(211,218,qs),
(211,158,o),
(260,145,q),
(308,158,o),
(308,218,qs),
(308,243,o),
(281,276,o),
(260,276,qs),
(239,276,o)
);
},
{
closed = 1;
nodes = (
(490,133,o),
(519,169,o),
(519,201,qs),
(519,267,o),
(414,274,q),
(426,245,o),
(426,211,qs),
(426,170,o),
(404,133,q),
(464,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
11 1 4 0 36 1 1 4 20 1 2 1 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
11 1 4 0 36 1 1 5 20 1 2 1 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
7 1 0 5 8 2 4 1 0 4 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 4 0 5 5 4 114 7 1 0 0 5 1 0 5 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
41 41 32 31 3 0 41 50 41 49 46 45 31 40 32 40 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,0,l),
(696,0,ls),
(629,0,o),
(587,42,q),
(536,0,o),
(464,0,qs),
(345,0,ls),
(289,0,o),
(260,21,q),
(231,0,o),
(175,0,qs),
(0,0,l),
(0,133,l),
(116,133,l),
(93,170,o),
(93,211,qs),
(93,262,o),
(118,302,q),
(51,329,o),
(48,409,qs),
(48,415,ls),
(48,432,o),
(67,427,qs),
(110,414,o),
(167,408,qs),
(232,401,o),
(273,401,qs),
(375,397,o),
(421,397,qs),
(523,394,o),
(584,347,qs),
(654,293,o),
(654,197,qs),
(654,193,ls),
(656,133,o),
(709,133,qs),
(746,133,l)
);
},
{
closed = 1;
nodes = (
(211,243,o),
(211,218,qs),
(211,158,o),
(260,145,q),
(308,158,o),
(308,218,qs),
(308,243,o),
(281,276,o),
(260,276,qs),
(239,276,o)
);
},
{
closed = 1;
nodes = (
(490,133,o),
(519,169,o),
(519,201,qs),
(519,267,o),
(414,274,q),
(426,245,o),
(426,211,qs),
(426,170,o),
(404,133,q),
(464,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 42 1 0 6 32 27 2 3 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 42 1 0 7 32 27 2 3 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
47 47 38 37 1 0 47 56 47 55 52 51 37 46 38 46 35 33 31 28 26 24 23 22 10 6 0 36 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(558,133,l),
(558,0,l),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(380,-199,qs),
(407,-193,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-273,o),
(388,-312,qs),
(341,-331,o),
(281,-331,qs),
(182,-331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 3 2 3 1 2 128 0 2 5 1 0 2 0 101 0 4 4 3 95 0 3 3 24 3 78 1 0 25 23 22 20 15 13 6 5 0 31 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,193,qs),
(166,202,o),
(166,211,qs),
(166,243,o),
(199,253,q),
(189,271,o),
(189,291,qs),
(189,328,o),
(234,377,o),
(270,377,qs),
(299,378,o),
(335,346,o),
(335,320,qs),
(335,307,o),
(330,307,qs),
(327,307,o),
(318,311,qs),
(297,322,o),
(281,322,qs),
(248,322,o),
(248,290,qs),
(248,276,o),
(267,258,o),
(281,258,qs),
(308,258,ls),
(356,258,o),
(356,217,qs),
(356,210,ls),
(356,201,o),
(345,201,qs),
(218,201,ls),
(198,201,o),
(182,191,qs),
(177,188,o),
(175,188,qs),
(173,188,o)
);
},
{
closed = 1;
nodes = (
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(380,-199,qs),
(407,-193,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-273,o),
(388,-312,qs),
(341,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(558,133,l),
(558,0,l),
(287,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 9 8 9 7 8 128 0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 8 0 6 8 6 101 0 5 5 9 95 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 2 1 2 3 1 128 0 7 9 8 9 7 8 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 8 0 6 8 6 101 0 5 5 9 95 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
36 36 36 67 36 66 39 20 38 43 35 34 35 51 51 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,519,o),
(217,491,qs),
(217,463,o),
(180,424,o),
(153,424,qs),
(126,424,o),
(88,463,o),
(88,491,qs),
(88,518,o),
(126,556,o),
(153,556,qs),
(180,556,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,-96,o),
(139,-124,qs),
(139,-152,o),
(102,-190,o),
(75,-190,qs),
(48,-190,o),
(10,-151,o),
(10,-124,qs),
(10,-96,o),
(48,-58,o),
(75,-58,qs),
(102,-58,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 16 14 9 6 0 17 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,0,l),
(267,0,ls),
(203,0,o),
(160,39,q),
(111,0,o),
(33,0,qs),
(-1,0,l),
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,133,o),
(280,133,qs),
(317,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 7 4 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(661,8,l),
(647,5,l),
(632,-80,o),
(566,-139,qs),
(482,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(662,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 32 30 21 20 12 10 9 7 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,112,o),
(182,61,qs),
(131,0,o),
(33,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(159,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(159,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 102 0 2 2 0 97 7 1 0 0 24 0 78 31 30 19 18 1 0 37 35 30 41 31 41 25 23 18 29 19 29 16 14 9 6 0 17 1 17 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,0,l),
(267,0,ls),
(203,0,o),
(160,39,q),
(111,0,o),
(33,0,qs),
(-1,0,l),
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,133,o),
(280,133,qs),
(317,133,l)
);
},
{
closed = 1;
nodes = (
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o),
(83,-98,o),
(83,-124,qs),
(83,-151,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(159,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(159,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
18 1 3 0 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 36 35 1 0 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 7 4 0 22 1 22 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,378,o),
(911,364,qs),
(911,196,ls),
(911,112,o),
(868,61,qs),
(817,0,o),
(720,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(722,133,ls),
(777,133,o),
(777,198,qs),
(777,272,ls),
(777,353,o),
(835,372,qs),
(854,378,o),
(883,378,qs),
(895,378,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(793,-124,qs),
(793,-152,o),
(756,-190,o),
(729,-190,qs),
(702,-190,o),
(664,-151,o),
(664,-124,qs),
(664,-96,o),
(702,-58,o),
(729,-58,qs),
(756,-58,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 0 4 0 133 0 4 1 4 133 10 1 7 3 5 7 89 0 3 8 1 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 4 0 133 0 4 1 4 133 10 1 7 0 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
53 52 1 0 59 57 52 63 53 63 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 951;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,378,o),
(911,364,qs),
(911,196,ls),
(911,112,o),
(868,61,qs),
(817,0,o),
(720,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(722,133,ls),
(777,133,o),
(777,198,qs),
(777,272,ls),
(777,353,o),
(835,372,qs),
(854,378,o),
(883,378,qs),
(895,378,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(793,-124,qs),
(793,-152,o),
(756,-190,o),
(729,-190,qs),
(702,-190,o),
(664,-151,o),
(664,-124,qs),
(664,-96,o),
(702,-58,o),
(729,-58,qs),
(757,-58,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 1 7 3 5 7 89 0 3 8 1 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 1 7 0 8 5 7 8 105 0 3 0 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
77 76 65 64 53 52 1 0 83 81 76 87 77 87 71 69 64 75 65 75 59 57 52 63 53 63 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 951;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(733,485,o),
(733,513,qs),
(733,541,o),
(771,579,o),
(800,579,qs),
(827,579,o),
(865,541,o),
(865,513,qs),
(865,485,o),
(827,446,o),
(800,446,qs),
(772,446,o)
);
},
{
closed = 1;
nodes = (
(925,351,qs),
(987,296,o),
(987,198,qs),
(987,114,o),
(939,60,qs),
(887,1,o),
(801,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(623,133,l),
(610,167,o),
(610,198,qs),
(610,283,o),
(658,337,qs),
(711,397,o),
(798,397,qs),
(874,397,o)
);
},
{
closed = 1;
nodes = (
(851,173,o),
(851,203,qs),
(851,233,o),
(821,271,o),
(799,271,qs),
(776,271,o),
(746,232,o),
(746,203,qs),
(746,173,o),
(777,133,o),
(799,133,qs),
(821,133,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 17 9 2 3 3 4 95 8 1 4 4 24 4 78 88 87 76 75 64 63 13 12 1 0 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 56 54 51 49 40 39 31 29 28 26 20 18 12 62 13 62 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1022;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
11 1 0 4 0 133 0 4 1 4 133 13 9 12 3 7 10 1 8 5 7 8 106 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 65 64 53 52 1 0 71 69 64 75 65 75 59 57 52 63 53 63 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(921,378,o),
(921,364,qs),
(921,196,ls),
(921,112,o),
(879,61,qs),
(828,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(743,-188,o),
(717,-188,qs),
(691,-188,o),
(655,-151,o),
(655,-124,qs),
(655,-98,o),
(691,-61,o),
(717,-61,qs),
(743,-61,o)
);
},
{
closed = 1;
nodes = (
(917,-98,o),
(917,-124,qs),
(917,-151,o),
(881,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(881,-61,o)
);
},
{
closed = 1;
nodes = (
(339,-293,o),
(339,-319,qs),
(339,-346,o),
(303,-383,o),
(277,-383,qs),
(251,-383,o),
(215,-346,o),
(215,-319,qs),
(215,-293,o),
(251,-256,o),
(277,-256,qs),
(303,-256,o)
);
},
{
closed = 1;
nodes = (
(477,-293,o),
(477,-319,qs),
(477,-346,o),
(441,-383,o),
(415,-383,qs),
(389,-383,o),
(352,-346,o),
(352,-319,qs),
(352,-293,o),
(389,-256,o),
(415,-256,qs),
(441,-256,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
15 1 0 4 0 133 0 4 1 4 133 17 9 16 3 7 10 1 8 5 7 8 106 0 3 0 5 11 3 5 105 19 13 18 3 11 14 1 12 11 12 101 0 1 1 2 95 6 1 2 2 24 2 78 89 88 77 76 65 64 53 52 1 0 95 93 88 99 89 99 83 81 76 87 77 87 71 69 64 75 65 75 59 57 52 63 53 63 45 43 40 38 29 28 20 18 17 15 9 6 0 51 1 50 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 962;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,674,qs),
(9,699,o),
(20,727,qs),
(30,756,o),
(61,756,qs),
(82,756,o),
(105,733,q),
(105,732,o),
(106,732,q),
(118,721,o),
(122,721,qs),
(126,721,o),
(131,724,qs),
(146,736,l),
(122,763,o),
(122,788,qs),
(122,817,o),
(159,852,o),
(189,852,qs),
(220,851,o),
(257,815,o),
(257,787,qs),
(257,760,o),
(226,733,q),
(241,705,o),
(211,683,q),
(205,680,o),
(199,685,qs),
(183,701,l),
(150,677,ls),
(132,663,o),
(113,663,qs),
(98,663,o),
(76,687,q),
(67,699,o),
(60,699,qs),
(53,699,o),
(42,676,qs),
(37,663,o)
);
},
{
closed = 1;
nodes = (
(172,788,qs),
(172,777,o),
(187,762,q),
(207,777,o),
(207,788,qs),
(207,807,o),
(191,807,qs),
(172,807,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
43 1 4 5 24 14 2 3 4 9 1 0 3 89 70 57 3 7 6 83 1 11 7 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 8 14 3 6 1 7 7 6 114 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
10 8 14 3 6 1 7 1 6 7 128 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
48 47 40 39 86 84 82 80 74 72 68 66 61 59 55 53 47 91 48 91 39 46 40 46 36 38 43 34 33 15 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,827,o),
(265,822,qs),
(265,749,ls),
(265,709,o),
(223,662,o),
(187,662,qs),
(156,662,o),
(136,680,q),
(115,662,o),
(86,662,qs),
(48,662,o),
(5,709,o),
(5,749,qs),
(5,772,ls),
(5,793,o),
(14,809,q),
(27,827,o),
(52,827,qs),
(58,827,ls),
(63,827,o),
(63,822,qs),
(63,744,ls),
(63,717,o),
(84,717,qs),
(106,717,o),
(106,744,qs),
(106,772,ls),
(106,797,o),
(118,812,qs),
(131,827,o),
(153,827,qs),
(159,827,ls),
(164,827,o),
(164,822,qs),
(164,744,ls),
(164,717,o),
(186,717,qs),
(207,717,o),
(207,744,qs),
(207,772,ls),
(207,797,o),
(219,812,qs),
(232,827,o),
(254,827,qs),
(261,827,ls)
);
},
{
closed = 1;
nodes = (
(228,616,o),
(228,574,qs),
(228,568,ls),
(228,559,o),
(217,559,qs),
(89,559,ls),
(69,559,o),
(53,549,qs),
(48,546,o),
(46,546,qs),
(44,546,o),
(41,551,qs),
(37,559,o),
(37,568,qs),
(37,615,o),
(96,615,qs),
(181,616,ls)
);
},
{
closed = 1;
nodes = (
(228,523,o),
(228,482,qs),
(228,476,ls),
(228,467,o),
(217,467,qs),
(89,467,ls),
(69,467,o),
(53,457,qs),
(48,454,o),
(46,454,qs),
(44,454,o),
(41,458,q),
(37,467,o),
(37,476,qs),
(37,523,o),
(96,523,qs),
(181,523,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 2 11 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
4 2 11 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
63 62 46 45 1 0 74 71 62 78 63 77 57 54 45 61 46 60 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,668,q),
(46,677,o),
(46,686,qs),
(46,733,o),
(105,733,qs),
(190,733,ls),
(237,733,o),
(237,692,qs),
(237,686,ls),
(237,677,o),
(226,677,qs),
(99,677,ls),
(79,677,o),
(62,667,qs),
(58,664,o),
(56,664,qs),
(53,664,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
59 40 27 3 3 2 53 1 7 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 4 9 3 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 4 9 3 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
18 17 56 54 52 50 44 42 38 36 31 29 25 23 17 61 18 61 51 51 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,687,o),
(44,689,qs),
(61,698,o),
(94,722,qs),
(109,733,o),
(117,738,q),
(95,764,o),
(95,789,qs),
(95,818,o),
(133,855,o),
(164,855,qs),
(196,853,o),
(234,816,o),
(234,787,qs),
(234,760,o),
(204,733,q),
(220,706,o),
(187,682,qs),
(180,677,o),
(173,684,qs),
(158,699,l),
(152,695,o),
(139,686,qs),
(125,676,o),
(123,674,q),
(122,674,l),
(101,659,o),
(84,659,qs),
(62,659,o),
(48,677,qs),
(43,684,ls)
);
},
{
closed = 1;
nodes = (
(149,788,qs),
(149,778,o),
(163,766,q),
(181,778,o),
(181,788,qs),
(181,805,o),
(166,805,qs),
(149,805,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
35 28 24 14 9 5 0 2 81 62 49 3 4 3 75 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
40 39 32 31 78 76 74 72 66 64 60 58 53 51 47 45 39 83 40 83 31 38 32 38 47 33 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,734,o),
(264,729,qs),
(264,657,ls),
(264,617,o),
(222,570,o),
(186,570,qs),
(155,570,o),
(135,588,q),
(114,570,o),
(85,570,qs),
(47,570,o),
(4,617,o),
(4,657,qs),
(4,679,ls),
(4,701,o),
(13,717,q),
(26,734,o),
(51,734,qs),
(57,734,ls),
(62,734,o),
(62,729,qs),
(62,652,ls),
(62,625,o),
(83,625,qs),
(105,625,o),
(105,652,qs),
(105,679,ls),
(105,705,o),
(117,719,qs),
(130,734,o),
(152,734,qs),
(158,734,ls),
(163,734,o),
(163,729,qs),
(163,652,ls),
(163,625,o),
(185,625,qs),
(206,625,o),
(206,652,qs),
(206,679,ls),
(206,705,o),
(218,719,qs),
(231,734,o),
(253,734,qs),
(260,734,ls)
);
},
{
closed = 1;
nodes = (
(229,523,o),
(229,482,qs),
(229,476,ls),
(229,467,o),
(218,467,qs),
(91,467,ls),
(71,467,o),
(54,457,qs),
(50,454,o),
(47,454,qs),
(45,454,o),
(42,458,q),
(38,467,o),
(38,476,qs),
(38,523,o),
(97,523,qs),
(182,523,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
4 2 9 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 2 9 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
46 45 1 0 57 54 45 61 46 60 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,783,qs),
(104,794,o),
(104,799,qs),
(104,826,o),
(136,831,q),
(139,832,o),
(142,832,qs),
(150,832,o),
(154,824,qs),
(170,798,o),
(170,750,qs),
(170,721,o),
(159,697,qs),
(154,683,o),
(133,659,o),
(127,659,qs),
(119,659,o),
(121,667,qs),
(123,677,o),
(123,694,qs),
(123,714,o),
(122,726,qs),
(118,748,o)
);
},
{
closed = 1;
nodes = (
(265,619,o),
(265,614,qs),
(265,542,ls),
(265,502,o),
(223,454,o),
(187,454,qs),
(156,454,o),
(136,472,q),
(115,454,o),
(86,454,qs),
(48,454,o),
(5,501,o),
(5,542,qs),
(5,564,ls),
(5,586,o),
(14,601,qs),
(27,619,o),
(52,619,qs),
(58,619,ls),
(63,619,o),
(63,614,qs),
(63,537,ls),
(63,509,o),
(84,509,qs),
(106,509,o),
(106,537,qs),
(106,564,ls),
(106,589,o),
(118,604,qs),
(131,619,o),
(153,619,qs),
(159,619,ls),
(164,619,o),
(164,614,qs),
(164,537,ls),
(164,509,o),
(186,509,qs),
(207,509,o),
(207,537,qs),
(207,564,ls),
(207,589,o),
(219,604,qs),
(232,619,o),
(254,619,qs),
(261,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
19 1 0 1 65 46 33 3 3 2 59 1 7 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 1 133 0 0 2 0 133 6 4 9 3 2 3 3 2 112 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 0 1 133 0 0 2 0 133 6 4 9 3 2 3 2 133 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
24 23 62 60 58 56 50 48 44 42 37 35 31 29 23 67 24 67 24 21 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 70 69 58 57 1 0 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1013,0,l),
(963,0,ls),
(899,0,o),
(857,39,q),
(808,0,o),
(730,0,qs),
(646,0,l),
(629,-83,o),
(564,-141,qs),
(480,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(733,133,ls),
(788,133,o),
(788,198,qs),
(788,272,ls),
(788,353,o),
(845,372,qs),
(865,378,o),
(894,378,qs),
(906,378,ls),
(921,378,o),
(921,364,qs),
(921,196,ls),
(922,133,o),
(976,133,qs),
(1013,133,l)
);
},
{
closed = 1;
nodes = (
(780,-98,o),
(780,-124,qs),
(780,-151,o),
(744,-188,o),
(718,-188,qs),
(692,-188,o),
(656,-151,o),
(656,-124,qs),
(656,-98,o),
(692,-61,o),
(718,-61,qs),
(744,-61,o)
);
},
{
closed = 1;
nodes = (
(918,-98,o),
(918,-124,qs),
(918,-151,o),
(882,-188,o),
(856,-188,qs),
(830,-188,o),
(793,-151,o),
(793,-124,qs),
(793,-98,o),
(830,-61,o),
(856,-61,qs),
(882,-61,o)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 6 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 96 8 7 2 3 3 24 3 78 94 93 82 81 70 69 58 57 1 0 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 35 34 26 24 23 21 15 12 7 4 0 56 1 56 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 998;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1117,0,o),
(1117,14,qs),
(1117,450,ls),
(1117,531,o),
(1174,549,qs),
(1194,556,o),
(1223,556,qs),
(1235,556,ls),
(1250,556,o),
(1250,542,qs),
(1250,106,ls),
(1250,25,o),
(1193,6,qs),
(1173,0,o),
(1144,0,qs),
(1132,0,ls)
);
},
{
closed = 1;
nodes = (
(623,758,q),
(621,766,o),
(621,774,qs),
(621,801,o),
(652,806,qs),
(656,807,o),
(659,807,qs),
(666,807,o),
(671,799,qs),
(685,776,o),
(689,717,o),
(678,695,qs),
(672,681,o),
(650,660,o),
(642,661,qs),
(636,661,o),
(637,668,qs),
(639,683,o),
(639,692,qs),
(639,717,o)
);
},
{
closed = 1;
nodes = (
(523,536,o),
(523,576,qs),
(523,583,ls),
(523,605,o),
(532,620,qs),
(545,638,o),
(570,638,qs),
(576,638,ls),
(581,638,o),
(581,633,qs),
(581,571,ls),
(581,544,o),
(602,544,qs),
(624,544,o),
(624,571,qs),
(624,583,ls),
(624,608,o),
(636,623,qs),
(649,638,o),
(671,638,qs),
(677,638,ls),
(682,638,o),
(682,633,qs),
(682,571,ls),
(682,544,o),
(703,544,qs),
(725,544,o),
(725,571,qs),
(725,583,ls),
(725,608,o),
(737,623,qs),
(750,638,o),
(772,638,qs),
(778,638,ls),
(783,638,o),
(783,633,qs),
(783,576,ls),
(783,536,o),
(741,489,o),
(705,489,qs),
(674,489,o),
(654,507,q),
(633,489,o),
(603,489,qs),
(566,489,o)
);
},
{
closed = 1;
nodes = (
(1028,447,o),
(1028,433,qs),
(1028,196,ls),
(1028,112,o),
(985,61,qs),
(935,0,o),
(837,0,qs),
(762,0,ls),
(698,0,o),
(656,39,q),
(607,0,o),
(529,0,qs),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(532,133,ls),
(587,133,o),
(587,198,qs),
(587,342,ls),
(587,422,o),
(644,441,qs),
(664,447,o),
(693,447,qs),
(705,447,ls),
(720,447,o),
(720,433,qs),
(720,196,ls),
(721,133,o),
(775,133,qs),
(840,133,ls),
(895,133,o),
(895,198,qs),
(895,342,ls),
(895,422,o),
(952,441,qs),
(971,447,o),
(1001,447,qs),
(1012,447,ls)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
70 57 44 3 1 5 38 1 3 1 129 124 2 0 11 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
70 57 44 3 1 5 38 1 3 1 129 124 2 0 19 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
70 57 44 3 1 5 38 1 3 6 129 124 2 0 19 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 5 2 133 9 7 2 5 1 1 5 112 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 105 4 22 2 3 3 1 97 8 6 2 1 1 23 77 24 19 13 3 11 11 0 98 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 2 5 2 133 9 7 2 5 1 1 5 112 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 105 4 22 2 3 3 1 97 8 6 2 1 1 23 77 13 1 11 11 0 98 18 17 16 21 4 0 0 24 77 24 1 19 19 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 105 4 22 2 3 3 1 97 8 6 2 1 1 23 77 13 1 11 11 0 98 18 17 16 21 4 0 0 24 77 24 1 19 19 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 105 0 1 1 23 77 4 22 2 3 3 6 97 8 1 6 6 23 77 13 1 11 11 0 98 18 17 16 21 4 0 0 24 77 24 1 19 19 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 105 0 1 1 23 77 4 22 2 3 3 6 97 8 1 6 6 23 77 13 1 11 11 0 96 18 17 21 3 0 0 24 77 24 1 19 19 16 97 0 16 16 24 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 105 0 1 1 23 77 13 1 11 11 0 96 18 17 21 3 0 0 24 77 24 1 19 19 16 97 0 16 16 24 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 105 24 1 19 0 16 19 16 101 0 1 1 23 77 13 1 11 11 0 96 18 17 21 3 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 61 values pushed */
141 140 82 81 37 36 1 0 145 143 140 148 141 148 133 130 128 125 123 121 115 113 110 107 104 101 96 93 90 87 81 139 82 138 74 72 68 66 61 59 55 53 48 46 41 39 36 80 37 80 28 27 9 6 0 15 1 14 25 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1294;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,-19,o),
(349,11,qs),
(382,61,ls),
(397,81,o),
(397,103,qs),
(397,161,l),
(435,168,l),
(435,11,l),
(710,70,l),
(739,127,o),
(744,204,q),
(560,165,l),
(560,194,l),
(710,226,l),
(737,280,o),
(744,361,q),
(560,321,l),
(560,599,l),
(474,557,o),
(435,499,q),
(435,295,l),
(397,288,l),
(397,633,l),
(323,596,o),
(273,534,q),
(273,262,l),
(119,229,l),
(89,168,o),
(86,96,q),
(273,135,l),
(273,96,l),
(86,56,l),
(59,-1,o),
(53,-77,q),
(293,-27,ls)
);
},
{
closed = 1;
nodes = (
(430,-146,q),
(710,-87,l),
(743,-23,o),
(744,48,q),
(463,-12,l),
(438,-59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,622,qs),
(92,639,o),
(82,639,qs),
(67,639,o),
(54,620,qs),
(42,603,o),
(36,613,qs),
(18,642,o),
(30,669,qs),
(44,699,o),
(78,696,qs),
(92,696,o),
(125,682,qs),
(165,665,o),
(175,665,qs),
(190,665,o),
(203,684,qs),
(215,701,o),
(221,691,qs),
(240,662,o),
(227,634,qs),
(213,605,o),
(180,608,qs),
(165,608,o)
);
},
{
closed = 1;
nodes = (
(158,0,o),
(108,47,qs),
(52,100,o),
(52,196,qs),
(52,450,ls),
(52,531,o),
(109,549,qs),
(129,556,o),
(158,556,qs),
(170,556,ls),
(185,556,o),
(185,542,qs),
(185,198,ls),
(185,133,o),
(240,133,qs),
(278,133,l),
(278,0,l),
(243,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 1 0 2 3 1 2 105 0 0 7 1 3 5 0 3 105 0 5 5 23 77 0 4 4 6 98 8 1 6 6 24 6 78 24 24 0 0 24 41 24 40 33 30 27 25 0 23 0 23 39 18 39 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 259;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,616,o),
(37,606,qs),
(33,603,o),
(30,603,qs),
(28,603,o),
(25,607,q),
(21,616,o),
(21,625,qs),
(21,657,o),
(54,667,q),
(44,685,o),
(44,705,qs),
(44,743,o),
(90,791,o),
(125,792,qs),
(154,792,o),
(190,760,o),
(190,734,qs),
(190,721,o),
(185,721,qs),
(183,721,o),
(174,726,qs),
(153,736,o),
(136,736,qs),
(103,736,o),
(103,704,qs),
(103,691,o),
(122,672,o),
(136,672,qs),
(164,672,ls),
(211,672,o),
(211,631,qs),
(211,624,ls),
(211,616,o),
(200,616,qs),
(74,616,ls)
);
},
{
closed = 1;
nodes = (
(270,0,l),
(236,0,ls),
(151,0,o),
(100,47,qs),
(45,100,o),
(45,196,qs),
(45,450,ls),
(45,531,o),
(102,549,qs),
(122,556,o),
(151,556,qs),
(163,556,ls),
(178,556,o),
(178,542,qs),
(178,198,ls),
(178,133,o),
(233,133,qs),
(270,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 2 1 4 2 105 0 1 8 1 0 6 1 0 103 0 6 6 23 77 9 1 5 5 7 98 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 8 1 0 6 1 0 103 0 6 6 23 77 9 1 5 5 7 98 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
37 36 1 0 52 50 43 40 36 53 37 53 21 19 16 14 12 10 7 4 0 35 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 259;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,448,q),
(134,457,o),
(134,466,qs),
(134,498,o),
(167,508,q),
(157,526,o),
(157,546,qs),
(157,584,o),
(203,632,o),
(238,633,qs),
(267,633,o),
(303,601,o),
(303,576,qs),
(303,562,o),
(298,562,qs),
(296,562,o),
(287,567,qs),
(266,577,o),
(249,577,qs),
(216,577,o),
(216,546,qs),
(216,532,o),
(235,513,o),
(249,513,qs),
(277,513,ls),
(324,513,o),
(324,472,qs),
(324,466,ls),
(324,457,o),
(313,457,qs),
(187,457,ls),
(167,457,o),
(150,447,qs),
(146,444,o),
(143,444,qs),
(141,444,o)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(412,0,l),
(403,-64,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(149,-213,o),
(105,-173,qs),
(69,-141,o),
(57,-89,qs),
(53,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(274,-40,o),
(281,0,q),
(228,0,ls),
(154,0,o),
(101,47,qs),
(39,102,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(355,397,o),
(398,284,qs),
(416,238,o),
(419,160,qs),
(420,151,o),
(420,133,q),
(508,133,l)
);
},
{
closed = 1;
nodes = (
(206,133,o),
(228,133,qs),
(281,133,l),
(286,203,o),
(274,234,qs),
(261,271,o),
(227,271,qs),
(204,271,o),
(176,232,o),
(176,199,qs),
(176,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 38 1 11 12 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 12 11 5 12 105 8 1 7 0 9 7 9 101 13 14 2 11 11 6 97 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 6 7 6 8 7 128 0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 12 11 5 12 105 0 7 0 9 7 9 101 13 14 2 11 11 6 97 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 12 11 5 12 105 0 7 0 9 7 9 101 13 14 2 11 11 6 97 10 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
36 36 82 80 77 75 36 72 36 72 71 70 66 64 35 34 38 47 35 34 35 51 51 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,0,l),
(236,0,ls),
(150,0,o),
(100,47,qs),
(45,100,o),
(45,196,qs),
(45,450,ls),
(45,531,o),
(102,549,qs),
(122,556,o),
(151,556,qs),
(162,556,ls),
(178,556,o),
(178,542,qs),
(178,198,ls),
(178,133,o),
(233,133,qs),
(270,133,l)
);
},
{
closed = 1;
nodes = (
(189,-174,o),
(189,-216,qs),
(189,-222,ls),
(189,-231,o),
(178,-231,qs),
(52,-231,ls),
(32,-231,o),
(15,-241,qs),
(11,-244,o),
(8,-244,qs),
(6,-244,o),
(3,-239,qs),
(-1,-231,o),
(-1,-222,qs),
(-1,-189,o),
(32,-179,q),
(22,-162,o),
(22,-142,qs),
(22,-104,o),
(68,-55,o),
(103,-55,qs),
(132,-55,o),
(168,-87,o),
(168,-112,qs),
(168,-126,o),
(163,-126,qs),
(162,-126,o),
(156,-123,qs),
(152,-121,ls),
(127,-111,o),
(114,-111,qs),
(81,-111,o),
(81,-142,qs),
(81,-156,o),
(100,-174,o),
(114,-174,qs),
(142,-174,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
30 1 3 4 38 1 6 3 2 76 0 5 0 4 3 5 4 105 8 1 3 0 6 3 6 99 0 1 1 23 77 7 1 0 0 2 98 0 2 2 24 2 78 19 18 1 0 50 47 34 32 24 22 18 54 19 53 16 14 7 4 0 17 1 17 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 259;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,309,q),
(253,318,o),
(253,327,qs),
(253,359,o),
(287,369,q),
(277,387,o),
(277,407,qs),
(277,445,o),
(322,493,o),
(358,494,qs),
(386,494,o),
(423,462,o),
(423,437,qs),
(423,423,o),
(418,423,qs),
(415,423,o),
(406,428,qs),
(385,438,o),
(368,438,qs),
(336,438,o),
(336,407,qs),
(336,393,o),
(355,374,o),
(368,374,qs),
(396,374,ls),
(443,374,o),
(443,333,qs),
(443,327,ls),
(443,318,o),
(432,318,qs),
(306,318,ls),
(286,318,o),
(270,308,qs),
(265,305,o),
(263,305,qs),
(260,305,o)
);
},
{
closed = 1;
nodes = (
(661,8,l),
(647,5,l),
(632,-80,o),
(566,-139,qs),
(482,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(662,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 72 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 0 5 0 8 5 128 0 4 3 1 2 1 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 2 1 2 3 1 128 0 8 0 5 0 8 5 128 0 4 0 2 3 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
37 36 68 66 57 56 48 46 45 43 36 73 37 73 35 34 35 51 51 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,495,o),
(255,454,qs),
(255,447,ls),
(255,438,o),
(244,438,qs),
(118,438,ls),
(98,438,o),
(81,428,qs),
(77,426,o),
(74,426,qs),
(72,426,o),
(69,430,q),
(65,439,o),
(65,448,qs),
(65,480,o),
(98,490,q),
(88,508,o),
(88,528,qs),
(88,566,o),
(134,614,o),
(169,614,qs),
(198,615,o),
(234,583,o),
(234,557,qs),
(234,544,o),
(229,544,qs),
(227,544,o),
(218,548,qs),
(197,559,o),
(180,559,qs),
(147,559,o),
(147,527,qs),
(147,514,o),
(166,495,o),
(180,495,qs),
(208,495,ls)
);
},
{
closed = 1;
nodes = (
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 5 4 6 4 5 6 128 0 3 2 1 1 0 3 1 105 8 1 0 0 4 5 0 4 103 0 6 6 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 9 1 5 4 6 4 5 6 128 0 3 0 1 2 3 1 105 8 1 0 0 4 5 0 4 103 0 6 6 7 97 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
37 36 1 0 47 45 44 42 36 53 37 52 31 28 15 13 10 8 6 4 0 35 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,430,q),
(64,439,o),
(64,448,qs),
(64,480,o),
(97,490,q),
(87,508,o),
(87,528,qs),
(87,565,o),
(133,614,o),
(168,614,qs),
(197,615,o),
(233,583,o),
(233,557,qs),
(233,544,o),
(228,544,qs),
(226,544,o),
(217,548,qs),
(196,559,o),
(179,559,qs),
(146,559,o),
(146,527,qs),
(146,514,o),
(165,495,o),
(179,495,qs),
(207,495,ls),
(254,495,o),
(254,454,qs),
(254,447,ls),
(254,438,o),
(243,438,qs),
(117,438,ls),
(97,438,o),
(80,428,qs),
(76,426,o),
(73,426,qs),
(71,426,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 54 1 8 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 5 0 6 5 128 0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 10 2 5 5 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 2 1 2 3 1 128 0 6 0 5 0 6 5 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 10 2 5 5 8 98 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
37 36 57 55 53 51 50 48 43 40 36 58 37 58 35 34 35 51 51 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,0,o),
(100,47,qs),
(44,100,o),
(44,196,qs),
(44,450,ls),
(44,531,o),
(101,549,qs),
(121,556,o),
(150,556,qs),
(162,556,ls),
(177,556,o),
(177,542,qs),
(177,198,ls),
(177,133,o),
(232,133,qs),
(270,133,l),
(270,0,l),
(235,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 98 3 1 2 2 24 2 78 0 0 0 17 0 16 51 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 259;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(162,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
},
{
closed = 1;
nodes = (
(452,-98,o),
(452,-126,qs),
(452,-154,o),
(415,-192,o),
(387,-192,qs),
(360,-192,o),
(322,-154,o),
(322,-126,qs),
(322,-98,o),
(360,-61,o),
(387,-61,qs),
(415,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
38 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 98 5 1 4 4 24 4 78 44 43 1 0 50 48 43 54 44 54 41 39 37 34 25 24 15 12 7 4 0 42 1 42 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(107,-96,o),
(107,-124,qs),
(107,-152,o),
(70,-190,o),
(43,-190,qs),
(16,-190,o),
(-22,-151,o),
(-22,-124,qs),
(-22,-96,o),
(16,-58,o),
(43,-58,qs),
(70,-58,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 97 5 1 0 0 24 0 78 19 18 1 0 25 23 18 29 19 29 16 14 9 6 0 17 1 17 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
},
{
closed = 1;
nodes = (
(223,-96,o),
(223,-124,qs),
(223,-152,o),
(186,-190,o),
(158,-190,qs),
(131,-190,o),
(93,-151,o),
(93,-124,qs),
(93,-96,o),
(131,-58,o),
(158,-58,qs),
(186,-58,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
18 1 3 0 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 98 4 1 3 3 24 3 78 24 23 1 0 30 28 23 34 24 34 21 19 17 15 14 12 7 4 0 22 1 22 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,521,o),
(106,548,qs),
(106,574,o),
(142,611,o),
(168,611,qs),
(194,611,o),
(231,574,o),
(231,548,qs),
(231,521,o),
(194,484,o),
(168,484,qs),
(142,484,o)
);
},
{
closed = 1;
nodes = (
(244,521,o),
(244,548,qs),
(244,574,o),
(281,611,o),
(307,611,qs),
(332,611,o),
(368,574,o),
(368,548,qs),
(368,521,o),
(333,484,o),
(307,484,qs),
(281,484,o)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 13 1 4 4 7 98 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 105 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 55 53 50 58 51 58 48 46 44 42 36 34 31 28 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,412,o),
(256,438,qs),
(256,465,o),
(292,502,o),
(318,502,qs),
(344,502,o),
(380,465,o),
(380,438,qs),
(380,412,o),
(344,375,o),
(318,375,qs),
(292,375,o)
);
},
{
closed = 1;
nodes = (
(393,412,o),
(393,438,qs),
(393,465,o),
(430,502,o),
(456,502,qs),
(482,502,o),
(518,465,o),
(518,438,qs),
(518,412,o),
(482,375,o),
(456,375,qs),
(430,375,o)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
62 1 8 4 1 76 0 5 1 0 1 5 0 128 0 7 0 4 0 7 4 128 3 1 1 11 2 10 3 0 7 1 0 105 6 12 2 4 4 8 98 9 1 8 8 24 8 78 25 24 13 12 1 0 65 63 61 58 49 48 39 36 31 28 24 66 25 66 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,468,o),
(24,494,qs),
(24,521,o),
(61,558,o),
(87,558,qs),
(113,558,o),
(149,521,o),
(149,494,qs),
(149,468,o),
(113,431,o),
(87,431,qs),
(61,431,o)
);
},
{
closed = 1;
nodes = (
(162,468,o),
(162,494,qs),
(162,521,o),
(199,558,o),
(225,558,qs),
(251,558,o),
(287,521,o),
(287,494,qs),
(287,468,o),
(251,431,o),
(225,431,qs),
(199,431,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 5 0 6 0 5 6 128 8 2 7 3 0 0 1 97 3 1 1 1 23 77 0 6 6 4 97 9 1 4 4 24 4 78 25 24 13 12 1 0 40 38 33 30 24 41 25 41 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,468,o),
(24,494,qs),
(24,521,o),
(61,558,o),
(87,558,qs),
(113,558,o),
(149,521,o),
(149,494,qs),
(149,468,o),
(113,431,o),
(87,431,qs),
(61,431,o)
);
},
{
closed = 1;
nodes = (
(162,468,o),
(162,494,qs),
(162,521,o),
(199,558,o),
(225,558,qs),
(251,558,o),
(287,521,o),
(287,494,qs),
(287,468,o),
(251,431,o),
(225,431,qs),
(199,431,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
42 1 7 4 1 76 0 5 0 4 0 5 4 128 10 2 9 3 0 0 1 97 3 1 1 1 23 77 6 11 2 4 4 7 98 8 1 7 7 24 7 78 25 24 13 12 1 0 45 43 41 39 38 36 31 28 24 46 25 46 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,537,o),
(330,561,qs),
(330,585,o),
(363,618,o),
(386,618,qs),
(410,618,o),
(443,584,o),
(443,561,qs),
(443,537,o),
(409,503,o),
(386,503,qs),
(363,503,o)
);
},
{
closed = 1;
nodes = (
(255,411,o),
(255,437,qs),
(255,464,o),
(291,501,o),
(317,501,qs),
(343,501,o),
(380,464,o),
(380,437,qs),
(380,411,o),
(343,374,o),
(317,374,qs),
(291,374,o)
);
},
{
closed = 1;
nodes = (
(429,501,o),
(455,501,qs),
(481,501,o),
(517,464,o),
(517,437,qs),
(517,411,o),
(481,374,o),
(455,374,qs),
(429,374,o),
(393,411,o),
(393,437,qs),
(393,464,o)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,272,ls),
(582,353,o),
(639,372,qs),
(659,378,o),
(688,378,qs),
(700,378,ls),
(715,378,o),
(715,364,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
74 1 10 6 1 76 0 7 3 2 3 7 2 128 0 9 2 6 2 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 8 14 2 6 6 10 98 11 1 10 10 24 10 78 37 36 13 12 1 0 77 75 73 70 61 60 51 48 43 40 36 78 37 78 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,594,o),
(99,618,qs),
(99,642,o),
(132,676,o),
(155,676,qs),
(178,676,o),
(212,642,o),
(212,618,qs),
(212,595,o),
(178,561,o),
(155,561,qs),
(132,561,o)
);
},
{
closed = 1;
nodes = (
(24,469,o),
(24,495,qs),
(24,521,o),
(60,558,o),
(86,558,qs),
(112,558,o),
(148,521,o),
(148,495,qs),
(148,469,o),
(112,432,o),
(86,432,qs),
(60,432,o)
);
},
{
closed = 1;
nodes = (
(162,469,o),
(162,495,qs),
(162,521,o),
(198,558,o),
(224,558,qs),
(250,558,o),
(286,521,o),
(286,495,qs),
(286,469,o),
(250,432,o),
(224,432,qs),
(198,432,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 11 4 10 3 2 2 3 97 5 1 3 3 23 77 0 8 8 6 97 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 52 50 45 42 36 53 37 53 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,594,o),
(99,618,qs),
(99,642,o),
(132,676,o),
(155,676,qs),
(178,676,o),
(212,642,o),
(212,618,qs),
(212,595,o),
(178,561,o),
(155,561,qs),
(132,561,o)
);
},
{
closed = 1;
nodes = (
(24,469,o),
(24,495,qs),
(24,521,o),
(60,558,o),
(86,558,qs),
(112,558,o),
(148,521,o),
(148,495,qs),
(148,469,o),
(112,432,o),
(86,432,qs),
(60,432,o)
);
},
{
closed = 1;
nodes = (
(198,558,o),
(224,558,qs),
(250,558,o),
(286,521,o),
(286,495,qs),
(286,469,o),
(250,432,o),
(224,432,qs),
(198,432,o),
(162,469,o),
(162,495,qs),
(162,521,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
54 1 9 6 1 76 0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 4 12 2 2 2 3 97 5 1 3 3 23 77 8 13 2 6 6 9 98 10 1 9 9 24 9 78 37 36 13 12 1 0 57 55 53 51 50 48 43 40 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,0,l),
(549,0,ls),
(483,0,o),
(446,35,q),
(418,15,o),
(357,0,o),
(307,0,qs),
(289,0,ls),
(244,0,o),
(185,-58,o),
(185,-102,qs),
(185,-152,o),
(221,-180,qs),
(253,-206,o),
(304,-206,qs),
(322,-206,o),
(332,-204,qs),
(336,-203,ls),
(347,-201,o),
(350,-201,qs),
(367,-201,o),
(366,-223,qs),
(365,-273,o),
(327,-301,qs),
(294,-324,o),
(240,-324,qs),
(172,-324,o),
(114,-271,qs),
(39,-202,o),
(41,-97,qs),
(41,-1,o),
(101,61,qs),
(170,133,o),
(288,133,qs),
(327,133,ls),
(354,133,o),
(372,144,q),
(366,155,o),
(354,183,qs),
(348,198,o),
(345,204,qs),
(314,271,o),
(252,271,qs),
(217,271,o),
(186,258,qs),
(160,247,o),
(139,227,qs),
(126,216,o),
(117,216,qs),
(105,216,o),
(102,231,qs),
(101,239,o),
(102,253,qs),
(108,315,o),
(156,357,qs),
(202,397,o),
(272,397,qs),
(420,397,o),
(486,223,qs),
(488,219,o),
(490,215,qs),
(506,171,o),
(520,146,o),
(533,139,qs),
(542,134,o),
(567,133,qs),
(586,133,l)
);
},
{
closed = 1;
nodes = (
(494,-94,o),
(494,-119,qs),
(494,-146,o),
(458,-182,o),
(432,-182,qs),
(408,-182,o),
(374,-145,o),
(374,-119,qs),
(374,-94,o),
(409,-59,o),
(434,-59,qs),
(459,-59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
29 1 0 2 62 1 8 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 13 1 10 0 11 6 10 11 105 7 1 6 0 5 6 5 101 4 12 2 0 0 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 3 0 3 2 0 128 0 6 11 7 11 6 7 128 0 1 0 3 2 1 3 105 13 1 10 0 11 6 10 11 105 0 7 0 5 7 5 101 4 12 2 0 0 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
68 67 1 0 74 72 67 78 68 78 65 63 60 57 52 50 46 45 41 39 33 30 24 22 18 16 10 8 0 66 1 66 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(351,133,l),
(341,147,o),
(328,176,qs),
(322,188,o),
(320,194,qs),
(285,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,316,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(394,397,o),
(458,217,qs),
(476,168,o),
(492,149,qs),
(502,136,o),
(518,134,qs),
(529,132,o),
(534,127,o),
(534,117,qs),
(534,70,o),
(508,39,qs),
(475,1,o),
(412,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(302,-98,o),
(302,-126,qs),
(302,-154,o),
(264,-192,o),
(237,-192,qs),
(210,-192,o),
(172,-154,o),
(172,-126,qs),
(172,-98,o),
(210,-61,o),
(237,-61,qs),
(265,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 8 1 5 0 6 5 6 101 0 4 4 0 95 7 1 0 0 24 0 78 37 36 1 0 43 41 36 47 37 47 34 33 28 26 22 20 14 12 0 35 1 35 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(519,0,ls),
(453,0,o),
(417,35,q),
(388,15,o),
(327,0,o),
(277,0,qs),
(1,0,l),
(0,133,l),
(297,133,ls),
(324,133,o),
(343,144,q),
(336,155,o),
(324,183,qs),
(318,198,o),
(316,204,q),
(284,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,316,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(390,397,o),
(457,223,qs),
(458,219,o),
(460,215,qs),
(476,171,o),
(491,146,o),
(503,139,qs),
(512,134,o),
(538,133,qs),
(557,133,l)
);
},
{
closed = 1;
nodes = (
(302,-98,o),
(302,-126,qs),
(302,-154,o),
(264,-192,o),
(237,-192,qs),
(210,-192,o),
(172,-154,o),
(172,-126,qs),
(172,-98,o),
(210,-61,o),
(237,-61,qs),
(265,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
29 1 0 2 37 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 10 1 7 0 8 7 8 101 4 9 2 0 0 5 97 6 1 5 5 24 5 78 43 42 1 0 49 47 42 53 43 53 40 38 35 33 32 30 24 22 18 16 10 8 0 41 1 41 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(585,0,l),
(547,0,ls),
(481,0,o),
(445,35,q),
(416,15,o),
(355,0,o),
(305,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(388,-197,qs),
(410,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-263,o),
(405,-303,qs),
(354,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(325,133,ls),
(352,133,o),
(371,144,q),
(364,155,o),
(352,183,qs),
(346,198,o),
(343,204,qs),
(312,271,o),
(250,271,qs),
(216,271,o),
(184,258,qs),
(158,247,o),
(137,227,qs),
(125,216,o),
(116,216,qs),
(103,216,o),
(101,231,qs),
(99,239,o),
(100,253,qs),
(106,315,o),
(155,357,qs),
(200,397,o),
(271,397,qs),
(418,397,o),
(485,223,qs),
(486,219,o),
(488,215,qs),
(504,171,o),
(519,146,o),
(531,139,qs),
(540,134,o),
(566,133,qs),
(585,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
29 1 0 2 65 1 8 0 2 76 0 2 3 0 3 2 0 128 0 6 8 7 8 6 7 128 0 1 0 3 2 1 3 105 0 7 0 5 7 5 101 4 10 2 0 0 8 97 9 1 8 8 24 8 78 1 0 68 66 63 60 55 53 46 45 41 39 33 30 24 22 18 16 10 8 0 69 1 69 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(351,133,l),
(341,147,o),
(328,176,qs),
(323,188,o),
(320,194,qs),
(285,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,315,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(394,397,o),
(458,217,qs),
(476,168,o),
(492,149,qs),
(502,136,o),
(518,134,qs),
(529,132,o),
(534,127,o),
(534,117,qs),
(534,70,o),
(508,39,qs),
(475,1,o),
(412,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 34 33 28 26 22 20 14 12 0 35 1 35 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(519,0,ls),
(453,0,o),
(417,35,q),
(388,15,o),
(327,0,o),
(277,0,qs),
(1,0,l),
(0,133,l),
(297,133,ls),
(325,133,o),
(343,144,q),
(336,155,o),
(324,183,qs),
(318,198,o),
(316,204,q),
(284,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,315,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(390,397,o),
(457,223,qs),
(458,219,o),
(460,215,qs),
(476,171,o),
(491,146,o),
(503,139,qs),
(512,134,o),
(538,133,qs),
(557,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
29 1 0 2 37 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 40 38 35 33 32 30 24 22 18 16 10 8 0 41 1 41 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,487,o),
(204,515,qs),
(204,543,o),
(242,581,o),
(269,581,qs),
(296,581,o),
(333,543,o),
(333,515,qs),
(333,487,o),
(296,449,o),
(269,449,qs),
(242,449,o)
);
},
{
closed = 1;
nodes = (
(585,0,l),
(547,0,ls),
(481,0,o),
(445,35,q),
(416,15,o),
(355,0,o),
(305,0,qs),
(287,0,ls),
(243,0,o),
(183,-58,o),
(183,-102,qs),
(183,-145,o),
(210,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(388,-197,qs),
(410,-191,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-263,o),
(405,-303,qs),
(354,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-1,o),
(99,61,qs),
(168,133,o),
(286,133,qs),
(325,133,ls),
(352,133,o),
(371,144,q),
(364,155,o),
(352,183,qs),
(346,198,o),
(343,204,qs),
(312,271,o),
(250,271,qs),
(216,271,o),
(184,258,qs),
(158,247,o),
(137,227,qs),
(125,216,o),
(116,216,qs),
(103,216,o),
(101,231,qs),
(99,239,o),
(100,253,qs),
(106,315,o),
(155,357,qs),
(200,397,o),
(271,397,qs),
(418,397,o),
(485,223,qs),
(486,219,o),
(488,215,qs),
(504,171,o),
(519,146,o),
(531,139,qs),
(540,134,o),
(566,133,qs),
(585,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
41 1 2 4 77 1 10 2 2 76 0 4 5 2 5 4 2 128 0 8 10 9 10 8 9 128 0 1 12 1 0 3 1 0 105 0 3 0 5 4 3 5 105 0 9 0 7 9 7 101 6 13 2 2 2 10 97 11 1 10 10 24 10 78 13 12 1 0 80 78 75 72 67 65 58 57 53 51 45 42 36 34 30 28 22 20 12 81 13 81 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,542,o),
(306,514,qs),
(306,486,o),
(268,448,o),
(241,448,qs),
(214,448,o),
(176,486,o),
(176,514,qs),
(176,542,o),
(214,579,o),
(241,579,qs),
(269,579,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(351,133,l),
(341,147,o),
(328,176,qs),
(323,188,o),
(320,194,qs),
(285,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,315,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(394,397,o),
(458,217,qs),
(476,168,o),
(492,149,qs),
(502,136,o),
(518,134,qs),
(529,132,o),
(534,127,o),
(534,117,qs),
(534,70,o),
(508,39,qs),
(475,1,o),
(412,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 46 45 40 38 34 32 26 24 12 47 13 47 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,486,o),
(176,514,qs),
(176,542,o),
(214,579,o),
(241,579,qs),
(269,579,o),
(306,542,o),
(306,514,qs),
(306,486,o),
(268,448,o),
(241,448,qs),
(214,448,o)
);
},
{
closed = 1;
nodes = (
(557,0,l),
(519,0,ls),
(453,0,o),
(417,35,q),
(388,15,o),
(327,0,o),
(277,0,qs),
(1,0,l),
(0,133,l),
(297,133,ls),
(325,133,o),
(343,144,q),
(336,155,o),
(324,183,qs),
(318,198,o),
(316,204,q),
(284,271,o),
(222,271,qs),
(188,271,o),
(156,258,qs),
(131,247,o),
(109,227,qs),
(97,216,o),
(88,216,qs),
(76,216,o),
(73,231,qs),
(71,239,o),
(72,253,qs),
(78,315,o),
(127,357,qs),
(172,397,o),
(243,397,qs),
(390,397,o),
(457,223,qs),
(458,219,o),
(460,215,qs),
(476,171,o),
(491,146,o),
(503,139,qs),
(512,134,o),
(538,133,qs),
(557,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
41 1 2 4 49 1 7 2 2 76 0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 13 12 1 0 52 50 47 45 44 42 36 34 30 28 22 20 12 53 13 53 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,0,l),
(432,0,ls),
(365,0,o),
(322,42,q),
(271,0,o),
(198,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o),
(336,346,qs),
(388,290,o),
(390,196,qs),
(390,193,ls),
(392,133,o),
(445,133,qs),
(482,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
11 1 2 1 37 1 5 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
11 1 3 1 37 1 5 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 3 1 2 0 1 2 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 40 38 36 33 27 24 20 18 13 12 8 6 0 41 1 41 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 471;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,480,o),
(91,508,qs),
(91,535,o),
(129,573,o),
(156,573,qs),
(184,573,o),
(221,536,o),
(221,508,qs),
(221,480,o),
(184,442,o),
(156,442,qs),
(129,442,o)
);
},
{
closed = 1;
nodes = (
(482,0,l),
(432,0,ls),
(365,0,o),
(322,42,q),
(271,0,o),
(198,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(197,133,ls),
(222,133,o),
(254,171,o),
(254,199,qs),
(254,230,o),
(217,270,o),
(187,271,qs),
(158,272,o),
(128,260,qs),
(125,259,o),
(120,257,qs),
(112,253,o),
(107,253,qs),
(87,254,o),
(90,290,qs),
(93,333,o),
(129,364,qs),
(168,398,o),
(221,397,qs),
(291,395,o),
(336,346,qs),
(388,290,o),
(390,196,qs),
(390,193,ls),
(392,133,o),
(445,133,qs),
(482,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
23 1 4 3 49 1 7 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
23 1 5 3 49 1 7 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 5 1 4 2 3 4 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 52 50 48 45 39 36 32 30 25 24 20 18 12 53 13 53 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 471;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 1 133 3 1 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 31 29 25 23 19 17 15 13 7 4 0 32 1 32 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,467,o),
(110,495,qs),
(110,523,o),
(148,561,o),
(175,561,qs),
(203,561,o),
(240,523,o),
(240,495,qs),
(240,467,o),
(202,429,o),
(175,429,qs),
(148,429,o)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(281,0,ls),
(257,0,o),
(237,5,q),
(231,-96,o),
(190,-152,qs),
(143,-217,o),
(57,-214,qs),
(-1,-213,o),
(-43,-175,qs),
(-82,-141,o),
(-89,-89,qs),
(-92,-68,o),
(-73,-68,qs),
(-66,-68,o),
(-53,-73,qs),
(-6,-89,o),
(28,-88,qs),
(69,-86,o),
(105,-38,o),
(105,15,qs),
(105,272,ls),
(105,353,o),
(162,372,qs),
(182,378,o),
(211,378,qs),
(223,378,ls),
(238,378,o),
(238,364,qs),
(238,196,ls),
(239,133,o),
(293,133,qs),
(331,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 2 0 3 2 128 5 1 4 0 6 4 6 101 8 1 0 0 1 97 0 1 1 23 77 9 1 2 2 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 4 0 6 4 6 101 8 1 0 0 1 97 0 1 1 23 77 9 1 2 2 7 97 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 43 41 37 35 31 29 27 25 19 16 12 44 13 44 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1164,0,l),
(1114,0,ls),
(1055,0,o),
(1013,33,q),
(966,-10,o),
(884,-10,qs),
(809,-10,o),
(761,27,q),
(716,-10,o),
(653,-10,qs),
(612,-10,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,240,ls),
(450,321,o),
(507,339,qs),
(527,346,o),
(556,346,qs),
(567,346,ls),
(583,346,o),
(583,332,qs),
(583,188,ls),
(583,119,o),
(638,119,qs),
(694,119,o),
(694,188,qs),
(694,256,ls),
(694,336,o),
(751,355,qs),
(771,361,o),
(800,361,qs),
(812,361,ls),
(827,361,o),
(827,347,qs),
(827,188,ls),
(827,119,o),
(882,119,qs),
(938,119,o),
(938,188,qs),
(938,272,ls),
(938,353,o),
(996,372,qs),
(1015,378,o),
(1045,378,qs),
(1056,378,ls),
(1072,378,o),
(1072,364,qs),
(1072,196,ls),
(1072,133,o),
(1127,133,qs),
(1164,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
73 69 65 3 9 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
73 69 65 3 9 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
73 69 65 3 11 2 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
3 1 1 5 1 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 1 3 1 133 5 1 3 7 3 133 0 7 0 7 133 0 6 0 8 6 8 102 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 12 1 0 0 9 98 11 10 2 9 9 24 77 4 1 2 2 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 12 1 0 0 11 98 0 11 11 24 77 4 1 2 2 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 106 0 6 0 8 6 8 102 12 1 0 0 11 98 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 76 74 72 70 68 66 62 60 51 50 42 40 33 30 27 25 20 17 14 12 7 4 0 77 1 77 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1153;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,378,o),
(714,364,qs),
(714,186,ls),
(714,102,o),
(673,51,qs),
(624,-10,o),
(527,-10,qs),
(452,-10,o),
(403,27,q),
(356,-10,o),
(282,-10,qs),
(200,-10,o),
(152,33,q),
(106,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,228,ls),
(92,308,o),
(149,327,qs),
(169,333,o),
(198,333,qs),
(210,333,ls),
(226,333,o),
(226,319,qs),
(226,188,ls),
(226,119,o),
(281,119,qs),
(337,119,o),
(337,188,qs),
(337,250,ls),
(337,331,o),
(394,349,qs),
(413,356,o),
(443,356,qs),
(454,356,ls),
(470,356,o),
(470,342,qs),
(470,188,ls),
(470,119,o),
(525,119,qs),
(581,119,o),
(581,188,qs),
(581,272,ls),
(581,353,o),
(638,372,qs),
(658,378,o),
(687,378,qs),
(699,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
42 38 2 6 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 9 2 0 4 0 133 0 4 1 4 133 5 3 2 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 8 7 2 6 6 24 77 3 1 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 102 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 45 43 41 39 37 35 34 32 27 24 21 19 14 11 8 6 0 51 1 50 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(697,0,o),
(656,33,q),
(608,-10,o),
(527,-10,qs),
(452,-10,o),
(403,27,q),
(356,-10,o),
(282,-10,qs),
(200,-10,o),
(152,33,q),
(106,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,228,ls),
(92,308,o),
(149,327,qs),
(169,333,o),
(198,333,qs),
(210,333,ls),
(226,333,o),
(226,319,qs),
(226,188,ls),
(226,119,o),
(281,119,qs),
(337,119,o),
(337,188,qs),
(337,250,ls),
(337,331,o),
(394,349,qs),
(413,356,o),
(443,356,qs),
(454,356,ls),
(470,356,o),
(470,342,qs),
(470,188,ls),
(470,119,o),
(525,119,qs),
(581,119,o),
(581,188,qs),
(581,272,ls),
(581,353,o),
(638,372,qs),
(658,378,o),
(687,378,qs),
(699,378,ls),
(714,378,o),
(714,364,qs),
(714,196,ls),
(715,133,o),
(769,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
52 48 44 3 7 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
52 48 44 3 7 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 5 1 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 98 10 9 8 3 7 7 24 77 4 1 2 2 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 98 10 1 7 7 24 77 4 1 2 2 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 102 6 11 2 0 0 7 98 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 55 53 51 49 47 45 43 41 40 38 33 30 27 25 20 17 14 12 7 4 0 56 1 56 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,578,o),
(701,602,qs),
(701,626,o),
(734,659,o),
(757,659,qs),
(781,659,o),
(814,625,o),
(814,602,qs),
(814,578,o),
(780,544,o),
(757,544,qs),
(734,544,o)
);
},
{
closed = 1;
nodes = (
(626,452,o),
(626,478,qs),
(626,505,o),
(662,542,o),
(688,542,qs),
(714,542,o),
(751,505,o),
(751,478,qs),
(751,452,o),
(714,415,o),
(688,415,qs),
(662,415,o)
);
},
{
closed = 1;
nodes = (
(800,542,o),
(826,542,qs),
(852,542,o),
(888,505,o),
(888,478,qs),
(888,452,o),
(852,415,o),
(826,415,qs),
(800,415,o),
(764,452,o),
(764,478,qs),
(764,505,o)
);
},
{
closed = 1;
nodes = (
(1164,0,l),
(1114,0,ls),
(1055,0,o),
(1013,33,q),
(966,-10,o),
(884,-10,qs),
(809,-10,o),
(761,27,q),
(716,-10,o),
(653,-10,qs),
(612,-10,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,240,ls),
(450,321,o),
(507,339,qs),
(527,346,o),
(556,346,qs),
(567,346,ls),
(583,346,o),
(583,332,qs),
(583,188,ls),
(583,119,o),
(638,119,qs),
(694,119,o),
(694,188,qs),
(694,256,ls),
(694,336,o),
(751,355,qs),
(771,361,o),
(800,361,qs),
(812,361,ls),
(827,361,o),
(827,347,qs),
(827,188,ls),
(827,119,o),
(882,119,qs),
(938,119,o),
(938,188,qs),
(938,272,ls),
(938,353,o),
(996,372,qs),
(1015,378,o),
(1045,378,qs),
(1056,378,ls),
(1072,378,o),
(1072,364,qs),
(1072,196,ls),
(1072,133,o),
(1127,133,qs),
(1164,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
109 105 101 3 15 6 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
109 105 101 3 15 8 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
109 105 101 3 17 8 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
9 1 7 2 11 2 7 11 128 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 0 12 0 14 12 14 102 4 19 2 2 2 3 97 5 1 3 3 23 77 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 11 1 9 13 2 9 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 0 12 0 14 12 14 102 4 19 2 2 2 3 97 5 1 3 3 23 77 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 0 12 0 14 12 14 102 4 19 2 2 2 3 97 5 1 3 3 23 77 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 85 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 0 12 0 14 12 14 102 4 19 2 2 2 3 97 5 1 3 3 23 77 20 1 6 6 15 98 17 16 2 15 15 24 77 10 1 8 8 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 0 12 0 14 12 14 102 4 19 2 2 2 3 97 5 1 3 3 23 77 20 1 6 6 17 98 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 20 1 6 6 17 98 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 106 0 12 0 14 12 14 102 20 1 6 6 17 98 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 112 110 108 106 104 102 98 96 87 86 78 76 69 66 63 61 56 53 50 48 43 40 36 113 37 113 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1153;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,572,o),
(343,596,qs),
(343,620,o),
(376,654,o),
(399,654,qs),
(423,654,o),
(456,620,o),
(456,596,qs),
(456,573,o),
(423,538,o),
(399,538,qs),
(376,538,o)
);
},
{
closed = 1;
nodes = (
(268,446,o),
(268,473,qs),
(268,499,o),
(304,536,o),
(330,536,qs),
(356,536,o),
(393,499,o),
(393,473,qs),
(393,446,o),
(356,409,o),
(330,409,qs),
(304,409,o)
);
},
{
closed = 1;
nodes = (
(442,536,o),
(468,536,qs),
(494,536,o),
(531,499,o),
(531,473,qs),
(531,446,o),
(494,409,o),
(468,409,qs),
(442,409,o),
(406,446,o),
(406,473,qs),
(406,499,o)
);
},
{
closed = 1;
nodes = (
(714,378,o),
(714,364,qs),
(714,186,ls),
(714,102,o),
(673,51,qs),
(624,-10,o),
(527,-10,qs),
(452,-10,o),
(403,27,q),
(356,-10,o),
(282,-10,qs),
(200,-10,o),
(152,33,q),
(106,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,228,ls),
(92,308,o),
(149,327,qs),
(169,333,o),
(198,333,qs),
(210,333,ls),
(226,333,o),
(226,319,qs),
(226,188,ls),
(226,119,o),
(281,119,qs),
(337,119,o),
(337,188,qs),
(337,250,ls),
(337,331,o),
(394,349,qs),
(413,356,o),
(443,356,qs),
(454,356,ls),
(470,356,o),
(470,342,qs),
(470,188,ls),
(470,119,o),
(525,119,qs),
(581,119,o),
(581,188,qs),
(581,272,ls),
(581,353,o),
(638,372,qs),
(658,378,o),
(687,378,qs),
(699,378,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
78 74 2 12 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
8 17 2 6 2 10 2 6 10 128 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 14 13 2 12 12 24 77 9 1 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 102 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 13 12 1 0 81 79 77 75 73 71 70 68 63 60 57 55 50 47 44 42 36 87 37 86 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,572,o),
(343,596,qs),
(343,620,o),
(376,654,o),
(399,654,qs),
(423,654,o),
(456,620,o),
(456,596,qs),
(456,573,o),
(423,538,o),
(399,538,qs),
(376,538,o)
);
},
{
closed = 1;
nodes = (
(268,446,o),
(268,473,qs),
(268,499,o),
(304,536,o),
(330,536,qs),
(356,536,o),
(393,499,o),
(393,473,qs),
(393,446,o),
(356,409,o),
(330,409,qs),
(304,409,o)
);
},
{
closed = 1;
nodes = (
(442,536,o),
(468,536,qs),
(494,536,o),
(531,499,o),
(531,473,qs),
(531,446,o),
(494,409,o),
(468,409,qs),
(442,409,o),
(406,446,o),
(406,473,qs),
(406,499,o)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(697,0,o),
(656,33,q),
(608,-10,o),
(527,-10,qs),
(452,-10,o),
(403,27,q),
(356,-10,o),
(282,-10,qs),
(200,-10,o),
(152,33,q),
(106,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,228,ls),
(92,308,o),
(149,327,qs),
(169,333,o),
(198,333,qs),
(210,333,ls),
(226,333,o),
(226,319,qs),
(226,188,ls),
(226,119,o),
(281,119,qs),
(337,119,o),
(337,188,qs),
(337,250,ls),
(337,331,o),
(394,349,qs),
(413,356,o),
(443,356,qs),
(454,356,ls),
(470,356,o),
(470,342,qs),
(470,188,ls),
(470,119,o),
(525,119,qs),
(581,119,o),
(581,188,qs),
(581,272,ls),
(581,353,o),
(638,372,qs),
(658,378,o),
(687,378,qs),
(699,378,ls),
(714,378,o),
(714,364,qs),
(714,196,ls),
(715,133,o),
(769,133,qs),
(807,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
88 84 80 3 13 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
88 84 80 3 13 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
9 1 7 2 11 2 7 11 128 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 98 16 15 14 3 13 13 24 77 10 1 8 8 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 98 16 1 13 13 24 77 10 1 8 8 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 102 12 19 2 6 6 13 98 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 91 89 87 85 83 81 79 77 76 74 69 66 63 61 56 53 50 48 43 40 36 92 37 92 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1291,0,l),
(1241,0,ls),
(1175,0,o),
(1132,41,q),
(1080,0,o),
(1010,0,qs),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,135,o),
(636,133,q),
(680,245,o),
(762,314,qs),
(860,397,o),
(988,397,qs),
(1081,397,o),
(1138,343,qs),
(1198,287,o),
(1198,193,qs),
(1201,133,o),
(1253,133,qs),
(1291,133,l)
);
},
{
closed = 1;
nodes = (
(1029,133,o),
(1062,171,o),
(1062,201,qs),
(1062,234,o),
(1018,271,o),
(980,271,qs),
(856,271,o),
(783,133,q),
(1003,133,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
54 1 7 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 9 0 9 5 0 128 3 1 1 0 9 5 1 9 105 0 4 0 6 4 6 102 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 102 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
59 59 1 0 59 67 59 66 62 60 57 55 53 50 46 44 35 34 26 24 17 14 11 10 7 5 0 58 1 58 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1279;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(781,343,qs),
(842,286,o),
(842,193,qs),
(842,111,o),
(792,58,qs),
(739,0,o),
(653,0,qs),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,217,ls),
(92,298,o),
(149,317,qs),
(169,323,o),
(198,323,qs),
(210,323,ls),
(226,323,o),
(226,309,qs),
(226,196,ls),
(227,135,o),
(279,133,q),
(323,245,o),
(405,314,qs),
(503,397,o),
(631,397,qs),
(725,397,o)
);
},
{
closed = 1;
nodes = (
(672,133,o),
(705,171,o),
(705,201,qs),
(705,234,o),
(661,272,o),
(623,272,qs),
(500,272,o),
(427,133,q),
(646,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
22 1 4 1 1 76 0 2 0 6 0 2 6 128 8 1 0 0 6 1 0 6 105 9 7 3 3 1 1 4 98 5 1 4 4 24 4 78 33 33 1 0 33 41 33 40 36 34 26 23 21 19 18 16 11 8 5 4 0 32 1 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(934,0,l),
(884,0,ls),
(818,0,o),
(775,41,q),
(724,0,o),
(653,0,qs),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,217,ls),
(92,298,o),
(149,317,qs),
(169,323,o),
(198,323,qs),
(210,323,ls),
(226,323,o),
(226,309,qs),
(226,196,ls),
(227,135,o),
(279,133,q),
(323,245,o),
(405,314,qs),
(503,397,o),
(631,397,qs),
(725,397,o),
(781,343,qs),
(842,287,o),
(842,193,qs),
(844,133,o),
(897,133,qs),
(934,133,l)
);
},
{
closed = 1;
nodes = (
(672,133,o),
(705,171,o),
(705,201,qs),
(705,234,o),
(661,272,o),
(623,272,qs),
(500,272,o),
(427,133,q),
(646,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
33 28 2 5 0 1 76 0 3 1 8 1 3 8 128 0 1 0 8 0 1 8 105 11 9 4 2 10 5 0 0 5 98 7 6 2 5 5 24 5 78 38 38 1 0 38 46 38 45 41 39 36 34 32 29 27 25 24 22 17 14 11 10 7 5 0 37 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 923;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(886,486,o),
(886,513,qs),
(886,541,o),
(924,579,o),
(951,579,qs),
(979,579,o),
(1016,541,o),
(1016,513,qs),
(1016,485,o),
(978,447,o),
(951,447,qs),
(924,447,o)
);
},
{
closed = 1;
nodes = (
(1291,0,l),
(1241,0,ls),
(1175,0,o),
(1132,41,q),
(1080,0,o),
(1010,0,qs),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,135,o),
(636,133,q),
(680,245,o),
(762,314,qs),
(860,397,o),
(988,397,qs),
(1081,397,o),
(1138,343,qs),
(1198,287,o),
(1198,193,qs),
(1201,133,o),
(1253,133,qs),
(1291,133,l)
);
},
{
closed = 1;
nodes = (
(1029,133,o),
(1062,171,o),
(1062,201,qs),
(1062,234,o),
(1018,271,o),
(980,271,qs),
(856,271,o),
(783,133,q),
(1003,133,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
66 1 9 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 5 1 3 0 11 7 3 11 105 0 6 0 8 6 8 102 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 102 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
71 71 13 12 1 0 71 79 71 78 74 72 69 67 65 62 58 56 47 46 38 36 29 26 23 22 19 17 12 70 13 70 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1279;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(538,486,o),
(538,514,qs),
(538,542,o),
(575,579,o),
(603,579,qs),
(630,579,o),
(667,542,o),
(667,514,qs),
(667,486,o),
(630,448,o),
(603,448,qs),
(576,448,o)
);
},
{
closed = 1;
nodes = (
(781,343,qs),
(842,286,o),
(842,193,qs),
(842,111,o),
(792,58,qs),
(739,0,o),
(653,0,qs),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,217,ls),
(92,298,o),
(149,317,qs),
(169,323,o),
(198,323,qs),
(210,323,ls),
(226,323,o),
(226,309,qs),
(226,196,ls),
(227,135,o),
(279,133,q),
(323,245,o),
(405,314,qs),
(503,397,o),
(631,397,qs),
(725,397,o)
);
},
{
closed = 1;
nodes = (
(672,133,o),
(705,171,o),
(705,201,qs),
(705,234,o),
(661,272,o),
(623,272,qs),
(500,272,o),
(427,133,q),
(646,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
34 1 6 3 1 76 0 4 2 8 2 4 8 128 0 1 10 1 0 2 1 0 105 11 1 2 0 8 3 2 8 105 12 9 5 3 3 3 6 98 7 1 6 6 24 6 78 45 45 13 12 1 0 45 53 45 52 48 46 38 35 33 31 30 28 23 20 17 16 12 44 13 44 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(538,486,o),
(538,514,qs),
(538,542,o),
(575,579,o),
(603,579,qs),
(630,579,o),
(667,542,o),
(667,514,qs),
(667,486,o),
(630,448,o),
(603,448,qs),
(576,448,o)
);
},
{
closed = 1;
nodes = (
(934,0,l),
(884,0,ls),
(818,0,o),
(775,41,q),
(724,0,o),
(653,0,qs),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,217,ls),
(92,298,o),
(149,317,qs),
(169,323,o),
(198,323,qs),
(210,323,ls),
(226,323,o),
(226,309,qs),
(226,196,ls),
(227,135,o),
(279,133,q),
(323,245,o),
(405,314,qs),
(503,397,o),
(631,397,qs),
(725,397,o),
(781,343,qs),
(842,287,o),
(842,193,qs),
(844,133,o),
(897,133,qs),
(934,133,l)
);
},
{
closed = 1;
nodes = (
(672,133,o),
(705,171,o),
(705,201,qs),
(705,234,o),
(661,272,o),
(623,272,qs),
(500,272,o),
(427,133,q),
(646,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
45 40 2 7 2 1 76 0 5 3 10 3 5 10 128 0 1 12 1 0 3 1 0 105 0 3 0 10 2 3 10 105 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 50 50 13 12 1 0 50 58 50 57 53 51 48 46 44 41 39 37 36 34 29 26 23 22 19 17 12 49 13 49 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 923;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(794,0,l),
(744,0,ls),
(678,0,o),
(635,41,q),
(584,0,o),
(513,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(154,133,l),
(154,450,ls),
(154,531,o),
(211,549,qs),
(230,556,o),
(260,556,qs),
(271,556,ls),
(287,556,o),
(287,542,qs),
(287,331,l),
(379,397,o),
(491,397,qs),
(585,397,o),
(642,343,qs),
(702,287,o),
(702,193,qs),
(704,133,o),
(757,133,qs),
(794,133,l)
);
},
{
closed = 1;
nodes = (
(532,133,o),
(565,171,o),
(565,201,qs),
(565,234,o),
(521,271,o),
(483,271,qs),
(360,271,o),
(287,133,q),
(506,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 6 1 29 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 34 34 1 0 34 42 34 41 37 35 32 30 28 25 19 17 13 10 7 5 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 783;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,343,qs),
(641,287,o),
(641,193,qs),
(641,111,o),
(591,58,qs),
(538,0,o),
(452,0,qs),
(0,0,l),
(0,133,l),
(92,133,l),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,331,l),
(317,397,o),
(430,397,qs),
(524,397,o)
);
},
{
closed = 1;
nodes = (
(471,133,o),
(504,171,o),
(504,201,qs),
(504,234,o),
(460,271,o),
(422,271,qs),
(299,271,o),
(226,133,q),
(445,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 0 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 22 22 1 0 22 30 22 29 25 23 15 13 12 11 7 4 0 21 1 21 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(733,0,l),
(683,0,ls),
(617,0,o),
(574,41,q),
(522,0,o),
(452,0,qs),
(0,0,l),
(0,133,l),
(92,133,l),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,331,l),
(317,397,o),
(430,397,qs),
(524,397,o),
(580,343,qs),
(641,287,o),
(641,193,qs),
(643,133,o),
(696,133,qs),
(733,133,l)
);
},
{
closed = 1;
nodes = (
(471,133,o),
(504,171,o),
(504,201,qs),
(504,234,o),
(460,271,o),
(422,271,qs),
(299,271,o),
(226,133,q),
(445,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 6 1 22 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 27 27 1 0 27 35 27 34 30 28 25 23 21 19 18 17 13 10 7 5 0 26 1 26 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,487,o),
(392,514,qs),
(392,542,o),
(430,580,o),
(457,580,qs),
(485,580,o),
(522,542,o),
(522,514,qs),
(522,487,o),
(485,448,o),
(457,448,qs),
(430,448,o)
);
},
{
closed = 1;
nodes = (
(794,0,l),
(744,0,ls),
(678,0,o),
(635,41,q),
(584,0,o),
(513,0,qs),
(60,0,ls),
(43,0,o),
(33,9,o),
(33,24,qs),
(33,37,ls),
(33,77,o),
(60,103,qs),
(90,133,o),
(145,133,qs),
(154,133,l),
(154,450,ls),
(154,531,o),
(211,549,qs),
(230,556,o),
(260,556,qs),
(271,556,ls),
(287,556,o),
(287,542,qs),
(287,331,l),
(379,397,o),
(491,397,qs),
(585,397,o),
(642,343,qs),
(702,287,o),
(702,193,qs),
(704,133,o),
(757,133,qs),
(794,133,l)
);
},
{
closed = 1;
nodes = (
(532,133,o),
(565,171,o),
(565,201,qs),
(565,234,o),
(521,271,o),
(483,271,qs),
(360,271,o),
(287,133,q),
(506,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 8 3 41 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
4 1 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 0 4 4 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
46 46 13 12 1 0 46 54 46 53 49 47 44 42 40 37 31 29 25 22 19 17 12 45 13 45 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 783;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,487,o),
(337,514,qs),
(337,542,o),
(374,580,o),
(402,580,qs),
(429,580,o),
(466,542,o),
(466,514,qs),
(466,487,o),
(429,448,o),
(402,448,qs),
(375,448,o)
);
},
{
closed = 1;
nodes = (
(580,343,qs),
(641,287,o),
(641,193,qs),
(641,111,o),
(591,58,qs),
(538,0,o),
(452,0,qs),
(0,0,l),
(0,133,l),
(92,133,l),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,331,l),
(317,397,o),
(430,397,qs),
(524,397,o)
);
},
{
closed = 1;
nodes = (
(471,133,o),
(504,171,o),
(504,201,qs),
(504,234,o),
(460,271,o),
(422,271,qs),
(299,271,o),
(226,133,q),
(445,133,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
3 1 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 0 3 3 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
34 34 13 12 1 0 34 42 34 41 37 35 27 25 24 23 19 16 12 33 13 33 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,487,o),
(337,514,qs),
(337,542,o),
(374,580,o),
(402,580,qs),
(429,580,o),
(466,542,o),
(466,514,qs),
(466,487,o),
(429,448,o),
(402,448,qs),
(375,448,o)
);
},
{
closed = 1;
nodes = (
(733,0,l),
(683,0,ls),
(617,0,o),
(574,41,q),
(522,0,o),
(452,0,qs),
(0,0,l),
(0,133,l),
(92,133,l),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,331,l),
(317,397,o),
(430,397,qs),
(524,397,o),
(580,343,qs),
(641,287,o),
(641,193,qs),
(643,133,o),
(696,133,qs),
(733,133,l)
);
},
{
closed = 1;
nodes = (
(471,133,o),
(504,171,o),
(504,201,qs),
(504,234,o),
(460,271,o),
(422,271,qs),
(299,271,o),
(226,133,q),
(445,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 8 3 34 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
4 1 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 0 4 4 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
39 39 13 12 1 0 39 47 39 46 42 40 37 35 33 31 30 29 25 22 19 17 12 38 13 38 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,-65,o),
(183,-102,qs),
(184,-145,o),
(211,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(379,-199,qs),
(406,-193,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-261,o),
(409,-301,qs),
(358,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-28,o),
(69,24,qs),
(104,83,o),
(172,112,q),
(110,196,ls),
(92,221,o),
(92,260,qs),
(92,314,o),
(153,354,qs),
(221,397,o),
(310,397,qs),
(387,397,o),
(451,363,qs),
(528,322,o),
(528,260,qs),
(528,221,o),
(510,196,qs),
(465,133,l),
(615,133,l),
(615,0,l),
(393,0,ls),
(343,0,o),
(311,23,q),
(293,5,o),
(265,-1,qs),
(227,-9,o)
);
},
{
closed = 1;
nodes = (
(250,236,qs),
(250,226,o),
(255,219,qs),
(307,149,ls),
(310,144,o),
(313,149,qs),
(365,219,ls),
(370,226,o),
(370,236,qs),
(370,252,o),
(338,271,o),
(310,271,qs),
(250,271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
21 2 2 0 1 1 76 0 4 0 5 0 4 5 128 0 2 7 1 6 1 2 6 105 0 5 0 3 5 3 101 0 1 1 0 95 0 0 0 24 0 78 51 50 50 62 51 62 39 20 45 38 17 35 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,133,o),
(482,80,o),
(482,36,qs),
(482,24,ls),
(482,9,o),
(472,0,o),
(456,0,qs),
(0,0,l),
(0,133,l),
(99,133,l),
(84,166,o),
(84,202,qs),
(83,278,o),
(132,333,qs),
(189,397,o),
(278,397,qs),
(342,397,o),
(383,366,qs),
(431,331,o),
(429,272,qs),
(428,239,o),
(409,238,qs),
(402,238,o),
(392,245,qs),
(349,271,o),
(301,271,qs),
(264,271,o),
(220,234,o),
(219,201,qs),
(219,172,o),
(256,133,o),
(284,133,qs),
(371,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 26 24 23 22 17 15 11 9 7 5 0 32 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(146,133,l),
(100,196,ls),
(82,221,o),
(82,260,qs),
(82,314,o),
(143,354,qs),
(211,397,o),
(300,397,qs),
(377,397,o),
(441,363,qs),
(518,322,o),
(518,260,qs),
(518,221,o),
(500,196,qs),
(454,133,l),
(605,133,l),
(605,0,l),
(383,0,ls),
(333,0,o),
(300,23,q),
(267,0,o),
(217,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(300,144,o),
(303,149,qs),
(355,219,ls),
(360,226,o),
(360,236,qs),
(360,252,o),
(327,271,o),
(300,271,qs),
(273,271,o),
(240,252,o),
(240,236,qs),
(240,226,o),
(245,219,qs),
(297,149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
2 1 0 2 1 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 30 28 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,484,o),
(246,511,qs),
(246,539,o),
(284,577,o),
(311,577,qs),
(339,577,o),
(376,539,o),
(376,511,qs),
(376,483,o),
(338,445,o),
(311,445,qs),
(284,445,o)
);
},
{
closed = 1;
nodes = (
(182,-65,o),
(183,-102,qs),
(184,-145,o),
(211,-172,qs),
(243,-205,o),
(302,-206,qs),
(351,-206,o),
(379,-199,qs),
(406,-193,o),
(444,-175,q),
(445,-174,o),
(447,-173,qs),
(459,-168,o),
(464,-168,qs),
(480,-168,o),
(480,-187,qs),
(479,-261,o),
(409,-301,qs),
(358,-331,o),
(281,-331,qs),
(182,-331,o),
(115,-273,qs),
(39,-206,o),
(39,-97,qs),
(39,-28,o),
(69,24,qs),
(104,83,o),
(172,112,q),
(110,196,ls),
(92,221,o),
(92,260,qs),
(92,314,o),
(153,354,qs),
(221,397,o),
(310,397,qs),
(387,397,o),
(451,363,qs),
(528,322,o),
(528,260,qs),
(528,221,o),
(510,196,qs),
(465,133,l),
(615,133,l),
(615,0,l),
(393,0,ls),
(343,0,o),
(311,23,q),
(293,5,o),
(265,-1,qs),
(227,-9,o)
);
},
{
closed = 1;
nodes = (
(250,236,qs),
(250,226,o),
(255,219,qs),
(307,149,ls),
(310,144,o),
(313,149,qs),
(365,219,ls),
(370,226,o),
(370,236,qs),
(370,252,o),
(338,271,o),
(310,271,qs),
(250,271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
33 14 2 2 3 1 76 0 6 2 7 2 6 7 128 0 1 9 1 0 4 1 0 105 0 4 10 1 8 3 4 8 105 0 7 0 5 7 5 101 0 3 3 2 95 0 2 2 24 2 78 63 62 1 0 62 74 63 74 56 54 47 46 42 40 27 25 19 18 17 15 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,485,o),
(205,512,qs),
(205,540,o),
(243,578,o),
(270,578,qs),
(297,578,o),
(334,540,o),
(334,512,qs),
(334,484,o),
(297,446,o),
(270,446,qs),
(243,446,o)
);
},
{
closed = 1;
nodes = (
(421,133,o),
(482,80,o),
(482,36,qs),
(482,24,ls),
(482,9,o),
(472,0,o),
(456,0,qs),
(0,0,l),
(0,133,l),
(99,133,l),
(84,166,o),
(84,202,qs),
(83,278,o),
(132,333,qs),
(189,397,o),
(278,397,qs),
(342,397,o),
(383,366,qs),
(431,331,o),
(429,272,qs),
(428,239,o),
(409,238,qs),
(402,238,o),
(392,245,qs),
(349,271,o),
(301,271,qs),
(264,271,o),
(220,234,o),
(219,201,qs),
(219,172,o),
(256,133,o),
(284,133,qs),
(371,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 13 12 1 0 38 36 35 34 29 27 23 21 19 17 12 44 13 43 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(366,539,o),
(366,511,qs),
(366,483,o),
(328,445,o),
(301,445,qs),
(274,445,o),
(236,484,o),
(236,511,qs),
(236,539,o),
(274,577,o),
(301,577,qs),
(329,577,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(146,133,l),
(100,196,ls),
(82,221,o),
(82,260,qs),
(82,314,o),
(143,354,qs),
(211,397,o),
(300,397,qs),
(377,397,o),
(441,363,qs),
(518,322,o),
(518,260,qs),
(518,221,o),
(500,196,qs),
(454,133,l),
(605,133,l),
(605,0,l),
(383,0,ls),
(333,0,o),
(300,23,q),
(267,0,o),
(217,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(300,144,o),
(303,149,qs),
(355,219,ls),
(360,226,o),
(360,236,qs),
(360,252,o),
(327,271,o),
(300,271,qs),
(273,271,o),
(240,252,o),
(240,236,qs),
(240,226,o),
(245,219,qs),
(297,149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
14 1 2 4 1 76 8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 13 12 1 0 42 40 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,484,o),
(573,512,qs),
(573,539,o),
(610,577,o),
(638,577,qs),
(665,577,o),
(702,540,o),
(702,512,qs),
(702,484,o),
(665,446,o),
(638,446,qs),
(611,446,o)
);
},
{
closed = 1;
nodes = (
(916,0,l),
(731,0,ls),
(667,0,o),
(637,24,q),
(606,0,o),
(542,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(466,133,l),
(447,170,o),
(447,211,qs),
(447,280,o),
(492,333,qs),
(547,397,o),
(637,397,qs),
(715,397,o),
(769,346,qs),
(827,292,o),
(827,211,qs),
(827,170,o),
(808,133,q),
(916,133,l)
);
},
{
closed = 1;
nodes = (
(689,213,qs),
(689,238,o),
(659,271,o),
(637,271,qs),
(614,271,o),
(585,238,o),
(585,213,qs),
(583,163,o),
(637,138,q),
(690,163,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
49 1 5 3 1 76 0 4 2 8 2 4 8 128 0 1 9 1 0 2 1 0 105 0 2 0 8 3 2 8 105 10 7 2 3 3 5 96 6 1 5 5 24 5 78 12 12 1 0 60 58 12 53 12 53 52 50 48 45 36 35 26 24 19 17 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,485,o),
(206,512,qs),
(206,540,o),
(243,578,o),
(271,578,qs),
(298,578,o),
(335,540,o),
(335,512,qs),
(335,484,o),
(298,446,o),
(271,446,qs),
(243,446,o)
);
},
{
closed = 1;
nodes = (
(396,351,qs),
(458,296,o),
(458,198,qs),
(458,114,o),
(410,60,qs),
(358,1,o),
(272,0,qs),
(0,0,l),
(0,133,l),
(94,133,l),
(81,167,o),
(81,198,qs),
(81,283,o),
(129,337,qs),
(182,397,o),
(269,397,qs),
(345,397,o)
);
},
{
closed = 1;
nodes = (
(322,173,o),
(322,203,qs),
(322,233,o),
(292,271,o),
(270,271,qs),
(247,271,o),
(217,232,o),
(217,203,qs),
(217,173,o),
(248,133,o),
(270,133,qs),
(292,133,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 1 7 1 0 2 1 0 105 8 1 2 0 6 3 2 6 105 9 5 2 3 3 4 95 0 4 4 24 4 78 30 29 13 12 1 0 36 34 29 40 30 40 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,484,o),
(206,511,qs),
(206,539,o),
(244,577,o),
(271,577,qs),
(299,577,o),
(336,539,o),
(336,511,qs),
(336,483,o),
(298,445,o),
(271,445,qs),
(244,445,o)
);
},
{
closed = 1;
nodes = (
(548,0,l),
(363,0,ls),
(299,0,o),
(269,24,q),
(239,0,o),
(174,0,qs),
(0,0,l),
(0,133,l),
(98,133,l),
(79,170,o),
(79,211,qs),
(79,280,o),
(124,333,qs),
(179,397,o),
(269,397,qs),
(347,397,o),
(401,346,qs),
(459,292,o),
(459,211,qs),
(459,170,o),
(440,133,q),
(548,133,l)
);
},
{
closed = 1;
nodes = (
(321,213,qs),
(321,238,o),
(291,271,o),
(269,271,qs),
(246,271,o),
(217,238,o),
(217,213,qs),
(215,163,o),
(269,138,q),
(322,163,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
29 1 4 3 1 76 0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 40 38 12 33 12 33 32 30 28 26 25 24 19 17 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,485,o),
(335,511,qs),
(335,538,o),
(371,574,o),
(397,574,qs),
(423,574,o),
(459,538,o),
(459,511,qs),
(459,485,o),
(423,448,o),
(397,448,qs),
(371,448,o)
);
},
{
closed = 1;
nodes = (
(472,485,o),
(472,511,qs),
(472,538,o),
(509,574,o),
(535,574,qs),
(561,574,o),
(597,538,o),
(597,511,qs),
(597,485,o),
(561,448,o),
(535,448,qs),
(509,448,o)
);
},
{
closed = 1;
nodes = (
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(469,-88,o),
(506,0,q),
(466,0,ls),
(391,0,o),
(338,47,qs),
(276,102,o),
(276,190,qs),
(276,282,o),
(325,337,qs),
(377,397,o),
(466,397,qs),
(591,397,o),
(634,284,qs),
(657,228,o),
(657,133,q),
(746,133,l),
(746,0,l),
(645,0,l),
(619,-97,o),
(551,-152,qs),
(472,-215,o),
(347,-214,qs),
(212,-214,o)
);
},
{
closed = 1;
nodes = (
(522,135,o),
(523,140,q),
(523,149,o),
(523,152,qs),
(523,201,o),
(512,233,qs),
(499,271,o),
(466,271,qs),
(442,271,o),
(413,231,o),
(413,197,qs),
(413,170,o),
(444,133,o),
(466,133,qs),
(522,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
78 1 6 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 12 6 12 10 6 128 0 7 0 12 10 7 12 105 0 9 15 1 4 9 4 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 16 11 2 6 6 5 97 8 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 10 12 6 12 10 6 128 3 1 1 14 2 13 3 0 7 1 0 105 0 7 0 12 10 7 12 105 0 9 15 1 4 9 4 101 16 11 2 6 6 5 97 8 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
67 66 25 24 13 12 1 0 73 71 66 80 67 80 56 55 47 45 44 42 36 34 31 30 29 28 24 65 25 65 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,485,o),
(139,511,qs),
(139,538,o),
(175,574,o),
(201,574,qs),
(227,574,o),
(263,538,o),
(263,511,qs),
(263,485,o),
(227,448,o),
(201,448,qs),
(175,448,o)
);
},
{
closed = 1;
nodes = (
(277,485,o),
(277,511,qs),
(277,538,o),
(313,574,o),
(339,574,qs),
(365,574,o),
(401,538,o),
(401,511,qs),
(401,485,o),
(365,448,o),
(339,448,qs),
(313,448,o)
);
},
{
closed = 1;
nodes = (
(396,351,qs),
(458,296,o),
(458,198,qs),
(458,114,o),
(410,60,qs),
(358,1,o),
(272,0,qs),
(0,0,l),
(0,133,l),
(94,133,l),
(81,167,o),
(81,198,qs),
(81,283,o),
(129,337,qs),
(182,397,o),
(269,397,qs),
(345,397,o)
);
},
{
closed = 1;
nodes = (
(322,173,o),
(322,203,qs),
(322,233,o),
(292,271,o),
(270,271,qs),
(247,271,o),
(217,232,o),
(217,203,qs),
(217,173,o),
(248,133,o),
(270,133,qs),
(292,133,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
11 1 4 0 8 5 4 8 105 10 2 9 3 0 0 1 97 3 1 1 1 23 77 12 7 2 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 11 1 4 0 8 5 4 8 105 12 7 2 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
42 41 25 24 13 12 1 0 48 46 41 52 42 52 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,485,o),
(141,511,qs),
(141,538,o),
(177,574,o),
(203,574,qs),
(229,574,o),
(265,538,o),
(265,511,qs),
(265,485,o),
(229,448,o),
(203,448,qs),
(177,448,o)
);
},
{
closed = 1;
nodes = (
(278,485,o),
(278,511,qs),
(278,538,o),
(315,574,o),
(341,574,qs),
(367,574,o),
(403,538,o),
(403,511,qs),
(403,485,o),
(367,448,o),
(341,448,qs),
(315,448,o)
);
},
{
closed = 1;
nodes = (
(548,0,l),
(363,0,ls),
(299,0,o),
(269,24,q),
(239,0,o),
(174,0,qs),
(0,0,l),
(0,133,l),
(98,133,l),
(79,170,o),
(79,211,qs),
(79,280,o),
(124,333,qs),
(179,397,o),
(269,397,qs),
(347,397,o),
(401,346,qs),
(459,292,o),
(459,211,qs),
(459,170,o),
(440,133,q),
(548,133,l)
);
},
{
closed = 1;
nodes = (
(321,213,qs),
(321,238,o),
(291,271,o),
(269,271,qs),
(246,271,o),
(217,238,o),
(217,213,qs),
(215,163,o),
(269,138,q),
(322,163,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 6 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 9 5 4 9 105 11 2 10 3 0 0 1 97 3 1 1 1 23 77 12 8 2 5 5 6 95 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
24 24 13 12 1 0 52 50 24 45 24 45 44 42 40 38 37 36 31 29 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(757,0,ls),
(693,0,o),
(651,39,q),
(602,0,o),
(524,0,qs),
(227,0,ls),
(151,0,o),
(99,40,qs),
(39,86,o),
(39,161,qs),
(39,211,o),
(66,251,qs),
(98,298,o),
(152,312,qs),
(163,315,o),
(167,315,qs),
(184,315,o),
(184,300,qs),
(184,292,o),
(177,280,qs),
(176,278,o),
(174,274,qs),
(154,240,o),
(154,210,qs),
(154,174,o),
(196,133,o),
(233,133,qs),
(527,133,ls),
(582,133,o),
(582,198,qs),
(582,450,ls),
(582,531,o),
(639,549,qs),
(659,556,o),
(688,556,qs),
(700,556,ls),
(715,556,o),
(715,542,qs),
(715,196,ls),
(716,133,o),
(770,133,qs),
(807,133,l)
);
},
{
closed = 1;
nodes = (
(275,267,qs),
(271,274,o),
(271,287,qs),
(271,324,o),
(311,334,q),
(296,356,o),
(296,377,qs),
(296,417,o),
(349,473,o),
(388,473,qs),
(422,474,o),
(465,441,o),
(465,414,qs),
(465,396,o),
(456,396,qs),
(452,396,o),
(441,402,qs),
(423,412,o),
(401,412,qs),
(361,412,o),
(361,377,qs),
(361,361,o),
(387,338,o),
(405,338,qs),
(436,338,ls),
(487,338,o),
(487,293,qs),
(487,288,ls),
(487,276,o),
(475,276,qs),
(332,276,ls),
(308,276,o),
(293,268,qs),
(287,264,ls),
(284,262,o),
(281,262,qs),
(277,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
74 1 3 9 38 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
74 1 3 8 38 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 11 10 1 9 3 11 9 105 8 1 3 7 13 2 6 0 3 6 105 0 1 1 23 77 2 12 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 8 6 8 3 6 128 0 11 10 1 9 8 11 9 105 0 8 7 13 2 6 0 8 6 105 0 1 1 23 77 2 12 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 9 8 9 10 8 128 0 3 8 6 8 3 6 128 0 11 0 9 10 11 9 105 0 8 7 13 2 6 0 8 6 105 0 1 1 23 77 2 12 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 10 9 8 9 10 8 128 0 3 8 7 8 3 7 128 13 1 6 7 0 7 6 0 128 0 11 0 9 10 11 9 105 0 8 0 7 6 8 7 103 0 1 1 23 77 2 12 2 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
44 43 1 0 70 68 65 63 61 59 56 53 50 47 43 79 44 79 41 39 37 34 25 24 15 12 7 4 0 42 1 42 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,378,o),
(470,334,qs),
(533,280,o),
(533,183,qs),
(533,107,o),
(484,56,qs),
(430,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 30 0 29 33 35 60 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,0,l),
(575,0,ls),
(509,0,o),
(467,41,q),
(415,0,o),
(344,0,qs),
(0,0,l),
(0,133,l),
(342,133,ls),
(396,133,o),
(396,193,qs),
(396,220,o),
(366,252,o),
(341,252,qs),
(158,252,ls),
(79,252,o),
(79,317,qs),
(79,344,ls),
(79,392,o),
(108,409,qs),
(349,552,ls),
(358,558,o),
(363,555,qs),
(374,547,o),
(386,528,qs),
(423,470,o),
(363,436,qs),
(266,378,l),
(344,378,ls),
(416,378,o),
(467,337,qs),
(529,286,o),
(533,196,qs),
(533,191,ls),
(538,133,o),
(588,133,qs),
(625,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
2 1 0 2 32 1 4 0 2 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 35 33 31 29 28 26 23 20 8 6 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 614;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,450,ls),
(450,531,o),
(507,549,qs),
(527,556,o),
(556,556,qs),
(567,556,ls),
(583,556,o),
(583,542,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 1 0 1 3 0 128 0 2 0 4 2 4 102 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 42 40 36 34 25 24 16 14 7 4 0 43 1 43 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 97 3 1 0 0 24 0 78 1 0 16 14 9 6 0 17 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,450,ls),
(92,531,o),
(149,549,qs),
(169,556,o),
(198,556,qs),
(210,556,ls),
(226,556,o),
(226,542,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 1 23 77 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 7 4 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(668,0,l),
(618,0,ls),
(558,0,o),
(517,34,q),
(467,-10,o),
(385,-10,qs),
(311,-10,o),
(237,26,q),
(215,26,ls),
(188,26,o),
(165,-1,o),
(165,-33,qs),
(165,-183,ls),
(165,-264,o),
(108,-283,qs),
(88,-289,o),
(59,-289,qs),
(48,-289,ls),
(32,-289,o),
(32,-275,qs),
(32,-31,ls),
(32,129,o),
(167,155,q),
(175,165,o),
(189,194,qs),
(195,208,o),
(198,214,qs),
(250,321,o),
(329,397,o),
(390,397,qs),
(483,397,o),
(533,328,qs),
(575,269,o),
(576,188,qs),
(579,133,o),
(631,133,qs),
(668,133,l)
);
},
{
closed = 1;
nodes = (
(439,153,o),
(439,189,qs),
(439,271,o),
(398,271,qs),
(384,271,o),
(357,233,o),
(330,174,qs),
(319,150,o),
(310,138,q),
(358,116,o),
(392,119,qs),
(417,121,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
39 1 0 6 32 1 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 0 3 4 128 0 2 4 2 134 0 1 0 6 0 1 6 105 7 1 0 0 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 5 0 3 5 128 0 2 4 2 134 0 1 0 6 0 1 6 105 7 1 0 0 5 97 0 5 5 24 77 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 5 0 3 5 128 0 4 5 2 5 4 2 128 0 2 2 132 0 1 0 6 0 1 6 105 7 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 45 43 35 33 31 29 28 26 20 17 7 5 0 36 1 36 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,327,qs),
(476,267,o),
(476,187,qs),
(476,103,o),
(433,51,qs),
(382,-10,o),
(284,-10,qs),
(209,-10,o),
(132,28,q),
(87,-1,o),
(21,-1,qs),
(0,-1,l),
(0,133,l),
(16,133,ls),
(47,133,o),
(63,150,qs),
(72,160,o),
(98,214,qs),
(150,321,o),
(229,397,o),
(290,397,qs),
(383,397,o)
);
},
{
closed = 1;
nodes = (
(338,153,o),
(338,189,qs),
(338,271,o),
(297,271,qs),
(273,271,o),
(229,174,qs),
(219,151,o),
(210,138,q),
(257,116,o),
(292,119,qs),
(317,121,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
24 1 1 4 12 1 2 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
5 1 0 0 4 1 0 4 105 0 1 1 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 0 0 4 1 0 4 105 0 1 1 2 97 0 2 2 24 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 2 3 134 5 1 0 0 4 1 0 4 105 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 29 27 15 13 11 9 8 6 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(568,0,l),
(518,0,ls),
(458,0,o),
(417,34,q),
(367,-10,o),
(284,-10,qs),
(209,-10,o),
(132,28,q),
(87,-1,o),
(21,-1,qs),
(0,-1,l),
(0,133,l),
(16,133,ls),
(47,133,o),
(63,150,qs),
(72,160,o),
(98,214,qs),
(150,321,o),
(229,397,o),
(290,397,qs),
(383,397,o),
(433,328,qs),
(475,269,o),
(476,188,qs),
(479,133,o),
(531,133,qs),
(568,133,l)
);
},
{
closed = 1;
nodes = (
(338,153,o),
(338,189,qs),
(338,271,o),
(297,271,qs),
(273,271,o),
(229,174,qs),
(219,151,o),
(210,138,q),
(257,116,o),
(292,119,qs),
(317,121,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
29 1 0 6 22 18 2 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 6 0 1 6 105 2 7 2 0 0 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 6 0 1 6 105 2 7 2 0 0 3 97 5 1 3 3 24 77 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 3 4 134 0 1 0 6 0 1 6 105 2 7 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 34 32 25 23 21 19 17 15 14 12 7 5 0 26 1 26 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,366,o),
(242,394,qs),
(242,422,o),
(280,459,o),
(307,459,qs),
(335,459,o),
(372,422,o),
(372,394,qs),
(372,366,o),
(335,328,o),
(307,328,qs),
(280,328,o)
);
},
{
closed = 1;
nodes = (
(675,0,l),
(625,0,ls),
(600,0,o),
(576,7,q),
(557,-89,o),
(494,-147,qs),
(421,-214,o),
(308,-214,qs),
(197,-214,o),
(123,-147,qs),
(39,-71,o),
(39,52,qs),
(39,121,o),
(74,173,qs),
(114,230,o),
(180,246,qs),
(191,249,o),
(196,249,qs),
(215,249,o),
(215,233,qs),
(215,228,o),
(208,219,qs),
(166,156,o),
(166,78,qs),
(166,6,o),
(199,-38,qs),
(236,-88,o),
(308,-88,qs),
(370,-88,o),
(407,-49,qs),
(450,-5,o),
(450,78,qs),
(450,271,ls),
(450,352,o),
(507,371,qs),
(527,377,o),
(556,377,qs),
(567,377,ls),
(583,377,o),
(583,363,qs),
(583,196,ls),
(584,133,o),
(638,133,qs),
(675,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 102 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 54 52 48 46 37 36 28 26 19 16 12 55 13 55 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,523,o),
(226,495,qs),
(226,467,o),
(188,429,o),
(161,429,qs),
(134,429,o),
(96,467,o),
(96,495,qs),
(96,523,o),
(134,561,o),
(161,561,qs),
(189,561,o)
);
},
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,112,o),
(183,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 1 4 1 3 4 128 0 1 1 0 97 5 1 0 0 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 28 26 21 18 12 29 13 29 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,467,o),
(96,495,qs),
(96,523,o),
(134,561,o),
(161,561,qs),
(189,561,o),
(226,523,o),
(226,495,qs),
(226,467,o),
(188,429,o),
(161,429,qs),
(134,429,o)
);
},
{
closed = 1;
nodes = (
(318,0,l),
(268,0,ls),
(204,0,o),
(161,39,q),
(112,0,o),
(34,0,qs),
(0,0,l),
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(226,378,o),
(226,364,qs),
(226,196,ls),
(226,133,o),
(281,133,qs),
(318,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
30 1 5 2 1 76 0 3 0 2 0 3 2 128 7 1 0 0 1 97 0 1 1 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 19 16 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,0,l),
(471,0,ls),
(400,0,o),
(353,33,q),
(302,-10,o),
(228,-10,qs),
(152,-10,o),
(101,34,qs),
(39,87,o),
(39,184,qs),
(39,268,o),
(88,321,qs),
(140,378,o),
(228,378,qs),
(281,378,l),
(291,428,o),
(337,443,qs),
(356,449,o),
(386,449,qs),
(397,449,ls),
(413,449,o),
(413,435,qs),
(413,198,ls),
(413,133,o),
(468,133,qs),
(505,133,l)
);
},
{
closed = 1;
nodes = (
(280,184,qs),
(280,196,l),
(280,252,l),
(228,252,ls),
(177,252,o),
(176,184,qs),
(177,116,o),
(228,116,qs),
(278,116,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 105 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 31 29 26 34 27 34 24 22 20 18 12 10 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(584,347,qs),
(654,293,o),
(654,197,qs),
(654,116,o),
(607,62,qs),
(554,0,o),
(464,0,qs),
(345,0,ls),
(289,0,o),
(260,21,q),
(231,0,o),
(175,0,qs),
(0,0,l),
(0,133,l),
(116,133,l),
(93,170,o),
(93,211,qs),
(93,262,o),
(118,302,q),
(51,329,o),
(48,409,qs),
(48,415,ls),
(48,432,o),
(67,427,qs),
(110,414,o),
(167,408,qs),
(232,401,o),
(273,401,qs),
(375,397,o),
(421,397,qs),
(523,394,o)
);
},
{
closed = 1;
nodes = (
(211,243,o),
(211,218,qs),
(211,158,o),
(260,145,q),
(308,158,o),
(308,218,qs),
(308,243,o),
(281,276,o),
(260,276,qs),
(239,276,o)
);
},
{
closed = 1;
nodes = (
(490,133,o),
(519,169,o),
(519,201,qs),
(519,267,o),
(414,274,q),
(426,245,o),
(426,211,qs),
(426,170,o),
(404,133,q),
(464,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
11 1 4 0 36 1 1 4 20 1 2 1 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
11 1 4 0 36 1 1 5 20 1 2 1 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
7 1 0 5 8 2 4 1 0 4 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 4 0 5 5 4 114 7 1 0 0 5 1 0 5 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
41 41 32 31 3 0 41 50 41 49 46 45 31 40 32 40 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,0,l),
(696,0,ls),
(629,0,o),
(587,42,q),
(536,0,o),
(464,0,qs),
(345,0,ls),
(289,0,o),
(260,21,q),
(231,0,o),
(175,0,qs),
(0,0,l),
(0,133,l),
(116,133,l),
(93,170,o),
(93,211,qs),
(93,262,o),
(118,302,q),
(51,329,o),
(48,409,qs),
(48,415,ls),
(48,432,o),
(67,427,qs),
(110,414,o),
(167,408,qs),
(232,401,o),
(273,401,qs),
(375,397,o),
(421,397,qs),
(523,394,o),
(584,347,qs),
(654,293,o),
(654,197,qs),
(654,193,ls),
(656,133,o),
(709,133,qs),
(746,133,l)
);
},
{
closed = 1;
nodes = (
(211,243,o),
(211,218,qs),
(211,158,o),
(260,145,q),
(308,158,o),
(308,218,qs),
(308,243,o),
(281,276,o),
(260,276,qs),
(239,276,o)
);
},
{
closed = 1;
nodes = (
(490,133,o),
(519,169,o),
(519,201,qs),
(519,267,o),
(414,274,q),
(426,245,o),
(426,211,qs),
(426,170,o),
(404,133,q),
(464,133,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 42 1 0 6 32 27 2 3 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
18 1 6 1 42 1 0 7 32 27 2 3 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
47 47 38 37 1 0 47 56 47 55 52 51 37 46 38 46 35 33 31 28 26 24 23 22 10 6 0 36 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,0,l),
(412,0,l),
(403,-64,o),
(380,-107,qs),
(356,-158,o),
(270,-215,o),
(217,-214,qs),
(149,-213,o),
(105,-173,qs),
(69,-141,o),
(57,-89,qs),
(53,-69,o),
(74,-69,qs),
(80,-69,o),
(91,-73,q),
(93,-73,l),
(145,-89,o),
(190,-88,qs),
(226,-86,o),
(274,-40,o),
(281,0,q),
(228,0,ls),
(154,0,o),
(101,47,qs),
(39,102,o),
(39,190,qs),
(39,282,o),
(88,337,qs),
(140,397,o),
(228,397,qs),
(355,397,o),
(398,284,qs),
(416,238,o),
(419,160,qs),
(420,151,o),
(420,133,q),
(508,133,l)
);
},
{
closed = 1;
nodes = (
(206,133,o),
(228,133,qs),
(281,133,l),
(286,203,o),
(274,234,qs),
(261,271,o),
(227,271,qs),
(204,271,o),
(176,232,o),
(176,199,qs),
(176,171,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 7 6 0 7 105 3 1 2 0 4 2 4 101 8 9 2 6 6 1 97 5 1 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 0 0 7 6 0 7 105 0 2 0 4 2 4 101 8 9 2 6 6 1 97 5 1 1 1 24 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
0 0 46 44 41 39 0 36 0 36 20 36 35 34 38 37 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(661,8,l),
(647,5,l),
(632,-80,o),
(566,-139,qs),
(482,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(662,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 32 30 21 20 12 10 9 7 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(661,8,l),
(647,5,l),
(632,-80,o),
(566,-139,qs),
(482,-214,o),
(347,-214,qs),
(212,-214,o),
(127,-138,qs),
(39,-60,o),
(43,55,qs),
(45,120,o),
(81,173,qs),
(120,231,o),
(182,251,qs),
(193,254,o),
(198,254,qs),
(213,254,o),
(213,238,qs),
(213,232,o),
(207,221,qs),
(170,161,o),
(171,78,qs),
(172,5,o),
(212,-38,qs),
(258,-88,o),
(347,-88,qs),
(468,-88,o),
(507,0,q),
(402,0,ls),
(386,0,o),
(376,9,o),
(376,24,qs),
(376,36,ls),
(376,77,o),
(402,103,qs),
(433,133,o),
(487,133,qs),
(662,133,l)
);
},
{
closed = 1;
nodes = (
(339,-294,o),
(339,-321,qs),
(339,-347,o),
(303,-384,o),
(277,-384,qs),
(251,-384,o),
(215,-347,o),
(215,-321,qs),
(215,-294,o),
(251,-257,o),
(277,-257,qs),
(303,-257,o)
);
},
{
closed = 1;
nodes = (
(477,-294,o),
(477,-321,qs),
(477,-347,o),
(441,-384,o),
(415,-384,qs),
(389,-384,o),
(352,-347,o),
(352,-321,qs),
(352,-294,o),
(389,-257,o),
(415,-257,qs),
(441,-257,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 5 2 4 105 11 7 10 3 5 8 1 6 5 6 101 9 1 0 0 1 95 0 1 1 24 1 78 51 50 39 38 1 0 57 55 50 61 51 61 45 43 38 49 39 49 32 30 21 20 12 10 9 7 0 37 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,133,l),
(37,133,ls),
(92,133,o),
(92,198,qs),
(92,272,ls),
(92,353,o),
(149,372,qs),
(169,378,o),
(198,378,qs),
(210,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,112,o),
(182,61,qs),
(132,0,o),
(34,0,qs),
(0,0,l)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(160,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(160,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 102 0 2 2 0 97 7 1 0 0 24 0 78 31 30 19 18 1 0 37 35 30 41 31 41 25 23 18 29 19 29 16 14 9 6 0 17 1 17 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,0,l),
(267,0,ls),
(203,0,o),
(160,39,q),
(111,0,o),
(33,0,qs),
(-1,0,l),
(-1,133,l),
(36,133,ls),
(91,133,o),
(91,198,qs),
(91,272,ls),
(91,353,o),
(148,372,qs),
(168,378,o),
(197,378,qs),
(209,378,ls),
(225,378,o),
(225,364,qs),
(225,196,ls),
(225,133,o),
(280,133,qs),
(317,133,l)
);
},
{
closed = 1;
nodes = (
(83,-98,o),
(83,-124,qs),
(83,-151,o),
(47,-188,o),
(21,-188,qs),
(-5,-188,o),
(-41,-151,o),
(-41,-124,qs),
(-41,-98,o),
(-5,-61,o),
(21,-61,qs),
(47,-61,o)
);
},
{
closed = 1;
nodes = (
(221,-98,o),
(221,-124,qs),
(221,-151,o),
(185,-188,o),
(160,-188,qs),
(133,-188,o),
(97,-151,o),
(97,-124,qs),
(97,-98,o),
(133,-61,o),
(160,-61,qs),
(185,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
18 1 3 0 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 36 35 24 23 1 0 42 40 35 46 36 46 30 28 23 34 24 34 21 19 17 15 14 12 7 4 0 22 1 22 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,511,qs),
(23,539,o),
(35,567,qs),
(49,596,o),
(83,594,qs),
(97,594,o),
(130,580,qs),
(170,563,o),
(180,563,qs),
(195,563,o),
(208,582,qs),
(220,599,o),
(226,588,q),
(245,560,o),
(232,532,qs),
(218,503,o),
(185,506,qs),
(170,506,o),
(137,520,qs),
(97,537,o),
(87,537,qs),
(72,537,o),
(59,518,qs),
(47,501,o)
);
},
{
closed = 1;
nodes = (
(484,556,o),
(484,542,qs),
(484,196,ls),
(484,112,o),
(442,61,qs),
(391,0,o),
(293,0,qs),
(68,0,ls),
(51,0,o),
(40,10,o),
(40,24,qs),
(40,36,ls),
(40,79,o),
(99,132,o),
(148,133,qs),
(159,133,l),
(100,316,l),
(79,395,o),
(127,427,qs),
(148,441,o),
(176,451,q),
(185,453,ls),
(196,457,o),
(201,444,qs),
(303,133,l),
(306,133,ls),
(326,133,o),
(351,170,o),
(351,198,qs),
(351,450,ls),
(351,531,o),
(408,549,qs),
(428,556,o),
(457,556,qs),
(469,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 8 4 2 2 2 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 0 1 3 0 105 8 1 4 4 23 77 0 1 1 2 97 0 2 2 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 52 49 44 42 32 31 24 58 25 57 34 39 18 33 9 7 26 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,511,qs),
(23,539,o),
(35,567,qs),
(49,596,o),
(83,594,qs),
(97,594,o),
(130,580,qs),
(170,563,o),
(180,563,qs),
(195,563,o),
(208,582,qs),
(220,599,o),
(226,588,q),
(245,560,o),
(232,532,qs),
(218,503,o),
(185,506,qs),
(170,506,o),
(137,520,qs),
(97,537,o),
(87,537,qs),
(72,537,o),
(59,518,qs),
(47,501,o)
);
},
{
closed = 1;
nodes = (
(576,0,l),
(526,0,ls),
(462,0,o),
(420,39,q),
(371,0,o),
(293,0,qs),
(68,0,ls),
(51,0,o),
(40,10,o),
(40,24,qs),
(40,36,ls),
(40,79,o),
(99,132,o),
(148,133,qs),
(159,133,l),
(100,316,l),
(79,395,o),
(127,427,qs),
(148,441,o),
(176,451,q),
(185,453,ls),
(196,457,o),
(201,444,qs),
(303,133,l),
(306,133,ls),
(326,133,o),
(351,170,o),
(351,198,qs),
(351,450,ls),
(351,531,o),
(408,549,qs),
(428,556,o),
(457,556,qs),
(469,556,ls),
(484,556,o),
(484,542,qs),
(484,196,ls),
(485,133,o),
(539,133,qs),
(576,133,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 8 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 5 1 2 2 23 77 7 6 10 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 0 1 3 0 105 0 5 5 23 77 0 1 1 2 97 0 2 2 23 77 7 6 10 3 4 4 8 98 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 62 60 58 55 50 48 38 37 31 28 24 63 25 63 34 39 18 33 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,507,q),
(32,516,o),
(32,525,qs),
(32,557,o),
(65,567,q),
(55,585,o),
(55,605,qs),
(55,643,o),
(101,691,o),
(136,692,qs),
(165,692,o),
(201,660,o),
(201,634,qs),
(201,621,o),
(196,621,qs),
(194,621,o),
(185,626,qs),
(164,636,o),
(147,636,qs),
(114,636,o),
(114,604,qs),
(114,591,o),
(133,572,o),
(147,572,qs),
(175,572,ls),
(222,572,o),
(222,531,qs),
(222,524,ls),
(222,516,o),
(211,516,qs),
(85,516,ls),
(65,516,o),
(48,506,qs),
(44,503,o),
(41,503,qs),
(39,503,o)
);
},
{
closed = 1;
nodes = (
(477,556,o),
(477,542,qs),
(477,196,ls),
(477,112,o),
(434,61,qs),
(384,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(141,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
30 1 5 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 3 1 2 1 4 2 105 0 0 0 1 97 9 5 2 1 1 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 9 1 5 5 23 77 0 0 0 1 97 0 1 1 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 9 1 5 5 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
37 36 64 61 56 54 44 43 36 70 37 69 35 34 35 51 51 10 7 27 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,507,q),
(32,516,o),
(32,525,qs),
(32,557,o),
(65,567,q),
(55,585,o),
(55,605,qs),
(55,643,o),
(101,691,o),
(136,692,qs),
(165,692,o),
(201,660,o),
(201,634,qs),
(201,621,o),
(196,621,qs),
(194,621,o),
(185,626,qs),
(164,636,o),
(147,636,qs),
(114,636,o),
(114,604,qs),
(114,591,o),
(133,572,o),
(147,572,qs),
(175,572,ls),
(222,572,o),
(222,531,qs),
(222,524,ls),
(222,516,o),
(211,516,qs),
(85,516,ls),
(65,516,o),
(48,506,qs),
(44,503,o),
(41,503,qs),
(39,503,o)
);
},
{
closed = 1;
nodes = (
(569,0,l),
(519,0,ls),
(455,0,o),
(413,39,q),
(364,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(141,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls),
(477,556,o),
(477,542,qs),
(477,196,ls),
(478,133,o),
(532,133,qs),
(569,133,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
30 1 0 1 71 1 9 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
30 1 6 1 71 1 9 5 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 2 1 4 2 105 0 0 0 1 97 6 1 1 1 23 77 8 7 11 3 5 5 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 6 6 23 77 0 0 0 1 97 0 1 1 23 77 8 7 11 3 5 5 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 6 6 23 77 8 7 11 3 5 5 9 98 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
37 36 74 72 70 67 62 60 50 49 43 40 36 75 37 75 35 34 35 51 51 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,556,o),
(477,542,qs),
(477,196,ls),
(477,112,o),
(434,61,qs),
(384,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(140,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls)
);
},
{
closed = 1;
nodes = (
(334,-177,o),
(334,-218,qs),
(334,-225,ls),
(334,-234,o),
(322,-234,qs),
(196,-234,ls),
(176,-234,o),
(160,-244,qs),
(155,-247,o),
(153,-247,qs),
(150,-247,o),
(147,-242,q),
(144,-234,o),
(144,-224,qs),
(144,-192,o),
(177,-182,q),
(167,-164,o),
(167,-144,qs),
(167,-107,o),
(212,-58,o),
(248,-58,qs),
(277,-57,o),
(313,-89,o),
(313,-115,qs),
(313,-128,o),
(308,-128,qs),
(307,-128,o),
(300,-126,qs),
(298,-125,o),
(296,-124,qs),
(271,-113,o),
(259,-113,qs),
(226,-113,o),
(226,-145,qs),
(226,-159,o),
(245,-177,o),
(259,-177,qs),
(286,-177,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
48 1 4 5 56 1 7 4 2 76 0 6 0 5 4 6 5 105 9 1 4 0 7 4 7 99 8 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 36 35 1 0 68 65 52 50 41 39 35 72 36 71 28 25 20 18 8 7 0 34 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,0,l),
(519,0,ls),
(455,0,o),
(412,39,q),
(364,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(140,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls),
(477,556,o),
(477,542,qs),
(477,196,ls),
(478,133,o),
(532,133,qs),
(569,133,l)
);
},
{
closed = 1;
nodes = (
(334,-177,o),
(334,-218,qs),
(334,-225,ls),
(334,-234,o),
(322,-234,qs),
(196,-234,ls),
(176,-234,o),
(160,-244,qs),
(155,-247,o),
(153,-247,qs),
(150,-247,o),
(147,-242,q),
(144,-234,o),
(144,-224,qs),
(144,-192,o),
(177,-182,q),
(167,-164,o),
(167,-144,qs),
(167,-107,o),
(212,-58,o),
(248,-58,qs),
(277,-57,o),
(313,-89,o),
(313,-115,qs),
(313,-128,o),
(308,-128,qs),
(307,-128,o),
(300,-126,qs),
(298,-125,o),
(296,-124,qs),
(271,-113,o),
(259,-113,qs),
(226,-113,o),
(226,-145,qs),
(226,-159,o),
(245,-177,o),
(259,-177,qs),
(286,-177,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
35 1 4 0 53 1 6 7 61 1 9 6 3 76 0 8 0 7 6 8 7 105 11 1 6 0 9 6 9 99 0 1 1 23 77 3 2 10 3 0 0 4 98 5 1 4 4 24 4 78 41 40 1 0 73 70 57 55 46 44 40 77 41 76 38 36 34 31 26 24 14 13 7 4 0 39 1 39 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,556,o),
(477,542,qs),
(477,196,ls),
(477,112,o),
(434,61,qs),
(384,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(140,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
4 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 1 0 28 25 20 18 8 7 0 34 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,0,l),
(519,0,ls),
(455,0,o),
(412,39,q),
(364,0,o),
(286,0,qs),
(60,0,ls),
(44,0,o),
(33,10,o),
(33,24,qs),
(33,36,ls),
(33,79,o),
(92,132,o),
(140,133,qs),
(152,133,l),
(93,316,l),
(72,395,o),
(120,427,qs),
(140,441,o),
(169,451,q),
(178,453,ls),
(189,457,o),
(194,444,qs),
(295,133,l),
(299,133,ls),
(319,133,o),
(344,170,o),
(344,198,qs),
(344,450,ls),
(344,531,o),
(401,549,qs),
(420,556,o),
(450,556,qs),
(461,556,ls),
(477,556,o),
(477,542,qs),
(477,196,ls),
(478,133,o),
(532,133,qs),
(569,133,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
35 1 4 0 1 76 0 1 1 23 77 3 2 6 3 0 0 4 98 5 1 4 4 24 4 78 1 0 38 36 34 31 26 24 14 13 7 4 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,361,ls),
(44,448,o),
(85,498,qs),
(132,556,o),
(224,556,qs),
(330,556,ls),
(343,556,o),
(343,541,qs),
(343,531,ls),
(343,502,o),
(337,485,qs),
(320,432,o),
(244,432,qs),
(233,432,ls),
(201,432,o),
(177,404,o),
(177,369,qs),
(177,14,ls),
(177,0,o),
(163,0,qs),
(58,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,450,ls),
(44,531,o),
(101,549,qs),
(121,556,o),
(150,556,qs),
(162,556,ls),
(177,556,o),
(177,542,qs),
(177,14,ls),
(177,0,o),
(163,0,qs),
(58,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 13 1 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,254,o),
(267,246,qs),
(267,238,o),
(261,232,qs),
(164,133,ls),
(159,128,o),
(151,128,qs),
(142,128,o),
(137,133,qs),
(39,232,ls),
(33,238,o),
(33,246,qs),
(33,254,o),
(39,259,qs),
(137,356,ls),
(143,362,o),
(151,362,qs),
(159,362,o),
(164,357,qs),
(261,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,254,o),
(266,246,qs),
(266,238,o),
(260,232,qs),
(163,133,ls),
(158,128,o),
(150,128,qs),
(141,128,o),
(136,133,qs),
(38,232,ls),
(32,238,o),
(32,246,qs),
(32,254,o),
(38,259,qs),
(136,356,ls),
(142,362,o),
(150,362,qs),
(158,362,o),
(163,357,qs),
(260,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,450,ls),
(44,531,o),
(101,549,qs),
(121,556,o),
(150,556,qs),
(162,556,ls),
(177,556,o),
(177,542,qs),
(177,14,ls),
(177,0,o),
(163,0,qs),
(58,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 13 1 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,0,o),
(44,14,qs),
(44,361,ls),
(44,448,o),
(85,498,qs),
(132,556,o),
(224,556,qs),
(330,556,ls),
(343,556,o),
(343,541,qs),
(343,531,ls),
(343,502,o),
(337,485,qs),
(320,432,o),
(244,432,qs),
(233,432,ls),
(201,432,o),
(177,404,o),
(177,369,qs),
(177,14,ls),
(177,0,o),
(163,0,qs),
(58,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,0,o),
(16,28,qs),
(79,393,ls),
(94,481,o),
(172,564,o),
(239,564,qs),
(301,564,o),
(339,528,qs),
(382,487,o),
(399,393,qs),
(461,28,ls),
(466,0,o),
(442,0,qs),
(353,0,ls),
(332,0,o),
(327,25,qs),
(264,407,ls),
(260,433,o),
(239,433,qs),
(218,433,o),
(214,407,qs),
(150,25,ls),
(145,0,o),
(124,0,qs),
(35,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 12 9 6 4 0 24 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 469;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,343,qs),
(396,287,o),
(363,252,qs),
(325,211,o),
(262,211,qs),
(210,211,o),
(176,226,q),
(176,22,ls),
(176,0,o),
(155,0,qs),
(66,0,ls),
(44,0,o),
(44,22,qs),
(44,450,ls),
(44,531,o),
(101,549,qs),
(121,556,o),
(150,556,qs),
(161,556,ls),
(176,556,o),
(176,542,qs),
(176,527,l),
(225,566,o),
(278,564,qs),
(326,563,o),
(354,530,qs),
(382,495,o),
(379,439,qs),
(377,414,o),
(362,414,qs),
(358,414,o),
(349,416,qs),
(344,418,o),
(342,418,qs),
(338,419,o),
(332,422,q),
(286,435,o),
(262,435,qs),
(231,434,o),
(182,405,o),
(177,385,q),
(176,383,o),
(176,381,qs),
(177,357,o),
(229,329,o),
(268,329,qs),
(311,329,o),
(353,349,qs),
(377,359,o),
(388,360,qs),
(404,361,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 3 7 1 7 1 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
28 22 2 1 4 7 1 7 2 43 1 6 0 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 1 0 1 7 0 128 0 0 0 6 5 0 6 105 2 1 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 36 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,166,qs),
(47,180,o),
(64,372,qs),
(81,564,o),
(249,564,qs),
(415,564,o),
(433,372,qs),
(451,180,o),
(451,166,qs),
(461,-10,o),
(326,-10,qs),
(284,-10,o),
(251,21,q),
(249,22,o),
(247,21,q),
(217,-10,o),
(172,-10,qs),
(38,-10,o)
);
},
{
closed = 1;
nodes = (
(235,137,o),
(237,157,qs),
(239,173,o),
(249,173,qs),
(260,173,o),
(261,157,qs),
(264,123,o),
(290,123,qs),
(318,123,o),
(315,166,qs),
(315,168,ls),
(313,221,o),
(299,361,qs),
(295,403,o),
(272,440,o),
(249,440,qs),
(226,440,o),
(203,404,o),
(199,361,qs),
(185,215,o),
(183,170,qs),
(183,167,o),
(183,166,qs),
(181,123,o),
(207,123,qs),
(222,123,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
19 18 1 0 40 38 36 34 28 26 18 43 19 43 13 11 7 5 0 17 1 17 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 483;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,246,o),
(378,223,qs),
(367,215,o),
(348,205,qs),
(271,161,o),
(197,85,o),
(159,12,q),
(154,0,o),
(141,0,qs),
(33,0,ls),
(18,0,o),
(21,14,qs),
(47,129,o),
(136,213,q),
(46,269,o),
(46,381,qs),
(46,459,o),
(90,509,qs),
(139,564,o),
(219,564,qs),
(270,564,o),
(308,533,qs),
(351,497,o),
(348,444,qs),
(347,419,o),
(332,419,qs),
(323,419,o),
(312,423,qs),
(269,439,o),
(242,439,qs),
(213,438,o),
(180,401,o),
(180,370,qs),
(180,320,o),
(237,294,q),
(311,346,o),
(400,374,qs),
(417,379,o),
(426,359,qs),
(443,323,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
25 4 2 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
25 4 2 3 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
56 36 34 40 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,147,qs),
(316,533,ls),
(320,556,o),
(337,556,qs),
(345,556,ls),
(390,556,o),
(415,525,qs),
(444,490,o),
(434,433,qs),
(387,162,ls),
(372,73,o),
(294,-10,o),
(227,-10,qs),
(164,-10,o),
(126,26,qs),
(83,68,o),
(67,162,qs),
(20,433,ls),
(11,482,o),
(33,516,qs),
(57,556,o),
(109,556,qs),
(117,556,ls),
(134,556,o),
(137,533,qs),
(202,147,ls),
(206,121,o),
(227,121,qs),
(248,121,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 25 22 16 14 7 4 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,0,o),
(16,28,qs),
(79,393,ls),
(94,481,o),
(172,564,o),
(239,564,qs),
(301,564,o),
(339,528,qs),
(382,487,o),
(399,393,qs),
(461,28,ls),
(466,0,o),
(442,0,qs),
(353,0,ls),
(332,0,o),
(327,25,qs),
(264,407,ls),
(260,433,o),
(239,433,qs),
(218,433,o),
(214,407,qs),
(150,25,ls),
(145,0,o),
(124,0,qs),
(35,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 12 9 6 4 0 24 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 469;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,519,qs),
(413,465,o),
(413,369,qs),
(413,14,ls),
(413,0,o),
(400,0,qs),
(294,0,ls),
(280,0,o),
(280,14,qs),
(280,177,l),
(228,177,ls),
(153,177,o),
(101,221,qs),
(39,275,o),
(39,369,qs),
(39,452,o),
(88,506,qs),
(141,564,o),
(228,564,qs),
(303,564,o)
);
},
{
closed = 1;
nodes = (
(176,402,o),
(176,369,qs),
(176,341,o),
(206,302,o),
(228,302,qs),
(280,302,l),
(280,369,ls),
(280,402,o),
(252,439,o),
(228,439,qs),
(204,439,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 105 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 105 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,556,o),
(642,542,qs),
(642,435,ls),
(642,351,o),
(599,299,qs),
(549,239,o),
(458,239,qs),
(391,239,o),
(345,278,q),
(298,239,o),
(230,239,qs),
(203,239,o),
(178,245,q),
(178,14,ls),
(178,0,o),
(164,0,qs),
(58,0,ls),
(45,0,o),
(45,14,qs),
(44,451,l),
(47,533,o),
(101,549,qs),
(120,556,o),
(150,556,qs),
(161,556,ls),
(176,556,o),
(176,542,qs),
(176,441,ls),
(176,372,o),
(231,372,qs),
(286,372,o),
(286,441,qs),
(286,457,ls),
(286,533,o),
(340,550,qs),
(357,556,o),
(374,556,qs),
(385,556,ls),
(400,556,o),
(400,543,qs),
(400,441,ls),
(400,372,o),
(454,372,qs),
(510,372,o),
(510,437,qs),
(510,451,ls),
(510,531,o),
(566,549,qs),
(586,556,o),
(615,556,qs),
(627,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 44 42 40 38 35 32 27 24 21 19 14 11 8 6 0 50 1 49 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,519,qs),
(413,465,o),
(413,369,qs),
(413,14,ls),
(413,0,o),
(400,0,qs),
(294,0,ls),
(280,0,o),
(280,14,qs),
(280,177,l),
(228,177,ls),
(153,177,o),
(101,221,qs),
(39,275,o),
(39,369,qs),
(39,452,o),
(88,506,qs),
(141,564,o),
(228,564,qs),
(303,564,o)
);
},
{
closed = 1;
nodes = (
(176,402,o),
(176,369,qs),
(176,341,o),
(206,302,o),
(228,302,qs),
(280,302,l),
(280,369,ls),
(280,402,o),
(252,439,o),
(228,439,qs),
(204,439,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 105 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 105 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,147,qs),
(316,533,ls),
(320,556,o),
(337,556,qs),
(345,556,ls),
(390,556,o),
(415,525,qs),
(444,490,o),
(434,433,qs),
(387,162,ls),
(372,73,o),
(294,-10,o),
(227,-10,qs),
(164,-10,o),
(126,26,qs),
(83,68,o),
(67,162,qs),
(20,433,ls),
(11,482,o),
(33,516,qs),
(57,556,o),
(109,556,qs),
(117,556,ls),
(134,556,o),
(137,533,qs),
(202,147,ls),
(206,121,o),
(227,121,qs),
(248,121,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 25 22 16 14 7 4 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,0,o),
(199,14,qs),
(199,369,ls),
(199,404,o),
(174,432,o),
(143,432,qs),
(132,432,ls),
(56,432,o),
(39,485,qs),
(33,502,o),
(33,531,qs),
(33,541,ls),
(33,556,o),
(46,556,qs),
(152,556,ls),
(232,556,o),
(279,511,qs),
(332,460,o),
(332,361,qs),
(332,14,ls),
(332,0,o),
(318,0,qs),
(212,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 17 14 9 6 0 22 1 21 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,376,qs),
(428,203,o),
(428,182,qs),
(427,100,o),
(381,49,qs),
(327,-10,o),
(233,-10,qs),
(152,-10,o),
(100,35,qs),
(39,88,o),
(39,182,qs),
(39,203,o),
(50,376,qs),
(63,564,o),
(233,564,qs),
(404,564,o)
);
},
{
closed = 1;
nodes = (
(189,405,o),
(186,364,qs),
(176,189,ls),
(174,116,o),
(233,116,qs),
(293,116,o),
(291,189,qs),
(281,364,ls),
(278,405,o),
(257,439,o),
(233,439,qs),
(210,439,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
25 19 2 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,222,o),
(176,196,o),
(176,175,qs),
(176,126,o),
(251,126,qs),
(281,126,ls),
(329,126,o),
(387,76,o),
(387,34,qs),
(387,23,ls),
(387,9,o),
(378,0,o),
(362,0,qs),
(237,0,ls),
(170,0,o),
(120,28,qs),
(39,73,o),
(39,183,qs),
(39,244,o),
(79,291,q),
(45,332,o),
(45,384,qs),
(45,458,o),
(88,507,qs),
(138,564,o),
(222,564,qs),
(275,564,o),
(313,536,qs),
(358,502,o),
(358,450,qs),
(358,420,o),
(341,420,qs),
(333,420,o),
(321,423,qs),
(318,424,o),
(311,426,qs),
(267,440,o),
(243,440,qs),
(215,440,o),
(182,414,o),
(182,392,qs),
(182,347,o),
(244,347,qs),
(281,347,ls),
(329,347,o),
(387,297,o),
(387,255,qs),
(387,244,ls),
(387,230,o),
(378,221,o),
(362,221,qs),
(227,222,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 6 1 0 103 3 1 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 36 26 24 20 18 14 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 426;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,556,o),
(642,542,qs),
(642,435,ls),
(642,351,o),
(599,299,qs),
(549,239,o),
(458,239,qs),
(391,239,o),
(345,278,q),
(298,239,o),
(230,239,qs),
(203,239,o),
(178,245,q),
(178,14,ls),
(178,0,o),
(164,0,qs),
(58,0,ls),
(45,0,o),
(45,14,qs),
(44,451,l),
(47,533,o),
(101,549,qs),
(120,556,o),
(150,556,qs),
(161,556,ls),
(176,556,o),
(176,542,qs),
(176,441,ls),
(176,372,o),
(231,372,qs),
(286,372,o),
(286,441,qs),
(286,457,ls),
(286,533,o),
(340,550,qs),
(357,556,o),
(374,556,qs),
(385,556,ls),
(400,556,o),
(400,543,qs),
(400,441,ls),
(400,372,o),
(454,372,qs),
(510,372,o),
(510,437,qs),
(510,451,ls),
(510,531,o),
(566,549,qs),
(586,556,o),
(615,556,qs),
(627,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 44 42 40 38 35 32 27 24 21 19 14 11 8 6 0 50 1 49 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Black;
properties = (
{
key = postscriptFullName;
value = "Zain Black";
},
{
key = postscriptFontName;
value = "Zain-Black";
}
);
weightClass = 900;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -22;
"@MMK_R_O" = -22;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -32;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 5;
"@MMK_R_quoteright" = 9;
};
"@MMK_L_E" = {
"@MMK_R_A" = 7;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -3;
"@MMK_R_Z" = 4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -22;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -21;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -7;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -24;
"@MMK_R_C" = -18;
"@MMK_R_O" = -18;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_c" = {
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = 8;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 4;
"@MMK_R_s" = 4;
"@MMK_R_y" = 6;
"@MMK_R_z" = 6;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -16;
"@MMK_R_y" = -3;
"@MMK_R_z" = -3;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -3;
"@MMK_R_quoteright" = -14;
"@MMK_R_s" = 7;
"@MMK_R_u" = -4;
"@MMK_R_y" = -13;
"@MMK_R_z" = 5;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -22;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -6;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -8;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 15;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_s" = {
"@MMK_R_f" = 8;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
"@MMK_R_z" = -8;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -8;
"@MMK_R_e" = -4;
"@MMK_R_f" = 8;
"@MMK_R_o" = -5;
"@MMK_R_quoteright" = 8;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -8;
"@MMK_R_e" = -8;
"@MMK_R_o" = -6;
};
A = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -6;
V = -7;
X = -4;
Y = -14;
Yacute = -14;
Ydieresis = -14;
y = -4;
yacute = -4;
ydieresis = -4;
};
C = {
G = -8;
Q = -6;
T = 8;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -6;
T = 8;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -18;
AE = -33;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
J = -18;
M = -4;
T = -21;
V = -16;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -14;
Zcaron = -14;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = -11;
uni0631 = -11;
uni0632 = -11;
uni0691 = -11;
uni0694 = -11;
uni0695 = -11;
uni0698 = -11;
};
E = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -26;
AE = -42;
Aacute = -26;
Acircumflex = -26;
Adieresis = -26;
Agrave = -26;
Aring = -26;
Atilde = -26;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 14;
V = 4;
W = 4;
X = -6;
Y = 5;
Yacute = 5;
Ydieresis = 5;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -29;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -29;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -15;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -13;
Scaron = -13;
T = -2;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -14;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -26;
Ccedilla = -26;
G = -26;
J = 7;
O = -26;
OE = -26;
Oacute = -26;
Ocircumflex = -26;
Odieresis = -26;
Ograve = -26;
Oslash = -26;
Otilde = -26;
Q = -26;
S = -5;
Scaron = -5;
T = -44;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -34;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -11;
ccedilla = -11;
colon = 4;
comma = 9;
d = -11;
e = -11;
eacute = -11;
ecircumflex = -11;
edieresis = -11;
egrave = -11;
g = -11;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -27;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -2;
Scaron = -2;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
T = 6;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
P = {
A = -31;
AE = -59;
Aacute = -31;
Acircumflex = -31;
Adieresis = -31;
Agrave = -31;
Aring = -31;
Atilde = -31;
J = -32;
M = -3;
X = -18;
Y = -6;
Yacute = -6;
Ydieresis = -6;
Z = -9;
Zcaron = -9;
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -7;
ccedilla = -7;
comma = -29;
d = -6;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
g = -6;
hyphen = -6;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = -29;
q = -6;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
};
Q = {
A = -19;
AE = -12;
Aacute = -19;
Acircumflex = -19;
Adieresis = -19;
Agrave = -19;
Aring = -19;
Atilde = -19;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -21;
Yacute = -21;
Ydieresis = -21;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -2;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -2;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -28;
AE = -56;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 15;
W = 4;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -24;
AE = -47;
Aacute = -24;
Acircumflex = -24;
Adieresis = -24;
Agrave = -24;
Aring = -24;
Atilde = -24;
C = -12;
Ccedilla = -12;
G = -12;
J = -23;
O = -11;
OE = -11;
Oacute = -11;
Ocircumflex = -11;
Odieresis = -11;
Ograve = -11;
Oslash = -11;
Otilde = -11;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -26;
aacute = -26;
acircumflex = -26;
adieresis = -26;
ae = -26;
agrave = -26;
aring = -26;
atilde = -26;
c = -27;
ccedilla = -27;
colon = -7;
comma = -24;
d = -26;
dotlessi = -11;
e = -27;
eacute = -27;
ecircumflex = -27;
edieresis = -27;
egrave = -27;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -26;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -27;
oacute = -27;
ocircumflex = -27;
odieresis = -27;
oe = -27;
ograve = -27;
oslash = -27;
otilde = -27;
p = -11;
period = -24;
q = -26;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -19;
AE = -34;
Aacute = -19;
Acircumflex = -19;
Adieresis = -19;
Agrave = -19;
Aring = -19;
Atilde = -19;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
T = 10;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -18;
OE = -18;
Oacute = -18;
Ocircumflex = -18;
Odieresis = -18;
Ograve = -18;
Oslash = -18;
Otilde = -18;
Q = -18;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
};
aacute = {
question = -11;
};
acircumflex = {
question = -11;
};
adieresis = {
question = -11;
};
ae = {
question = -22;
t = -4;
v = -3;
x = -10;
};
agrave = {
question = -11;
};
aring = {
question = -11;
};
atilde = {
question = -11;
};
b = {
comma = -7;
f = -3;
fi = -3;
fl = -3;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 56;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
rehvabovear = -28;
uni0631 = -39;
uni0632 = -39;
uni0691 = -22;
uni0694 = -39;
uni0695 = -39;
uni0698 = -39;
};
bracketleft = {
j = 51;
uni0632 = 16;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
rehvabovear = -28;
uni0631 = -39;
uni0632 = -39;
uni0691 = -22;
uni0694 = -39;
uni0695 = -39;
uni0698 = -39;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 6;
v = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 6;
v = 3;
};
comma = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
d = {
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
z = 4;
zcaron = 4;
};
dollar = {
eight = 5;
eight.ar = 5;
eight.farsi = 5;
four = 14;
four.ar = 14;
four.farsi = 14;
nine = -10;
nine.ar = -10;
nine.farsi = -10;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -3;
x = -10;
};
eacute = {
question = -22;
t = -4;
v = -3;
x = -10;
};
ecircumflex = {
question = -22;
t = -4;
v = -3;
x = -10;
};
edieresis = {
question = -22;
t = -4;
v = -3;
x = -10;
};
egrave = {
question = -22;
t = -4;
v = -3;
x = -10;
};
eight = {
comma = -7;
eight = 5;
four = 9;
nine = -3;
period = -7;
seven = -7;
two = -7;
};
eight.ar = {
comma = -7;
eight.ar = 5;
four.ar = 9;
nine.ar = -3;
period = -7;
seven.ar = -7;
two.ar = -7;
};
eight.farsi = {
comma = -7;
eight.farsi = 5;
four.farsi = 9;
nine.farsi = -3;
period = -7;
seven.farsi = -7;
two.farsi = -7;
};
exclamdown = {
j = 44;
};
f = {
a = -10;
aacute = -10;
acircumflex = -10;
adieresis = -10;
ae = -10;
agrave = -10;
aring = -10;
atilde = -10;
c = -10;
ccedilla = -10;
comma = -21;
d = -9;
e = -11;
eacute = -11;
ecircumflex = -11;
edieresis = -11;
egrave = -11;
exclam = 6;
f = 5;
fi = 5;
fl = 5;
g = -10;
hyphen = -4;
o = -10;
oacute = -10;
ocircumflex = -10;
odieresis = -10;
oe = -10;
ograve = -10;
oslash = -10;
otilde = -10;
period = -21;
q = -10;
question = 7;
quotedblright = 17;
quoteright = 17;
t = 4;
};
fi = {
v = -5;
w = -3;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -10;
zero = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
colon = 7;
comma = 13;
d = -3;
g = -3;
hyphen = -4;
l = -4;
period = 13;
q = -3;
question = -23;
semicolon = 7;
t = -13;
v = -13;
w = -9;
};
four = {
four = 8;
nine = -16;
one = -6;
seven = -10;
six = -4;
two = -5;
zero = -7;
};
four.ar = {
four.ar = 8;
nine.ar = -16;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -7;
};
four.farsi = {
four.farsi = 8;
nine.farsi = -16;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -7;
};
g = {
j = 35;
question = -12;
quotedblright = -5;
quoteright = -5;
y = 3;
yacute = 3;
ydieresis = 3;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 39;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -11;
hyphen = -8;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 4;
q = -12;
question = -6;
s = -4;
scaron = -4;
t = 4;
};
l = {
colon = 7;
comma = 13;
d = -3;
g = -3;
hyphen = -4;
l = -4;
period = 13;
q = -3;
question = -23;
semicolon = 7;
t = -13;
v = -13;
w = -9;
};
lam_alefvabovear = {
lamthreedotsabovear = 44;
lamthreedotsabovear.init = 44;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 17;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
lam_alefvabovear.fina = {
lamthreedotsabovear = 44;
lamthreedotsabovear.init = 44;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 17;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine = {
comma = -27;
eight = -4;
five = -3;
four = -6;
period = -27;
seven = -7;
six = -7;
three = -9;
two = -16;
};
nine.ar = {
comma = -27;
eight.ar = -4;
five.ar = -3;
four.ar = -6;
period = -27;
seven.ar = -7;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
comma = -27;
eight.farsi = -4;
five.farsi = -3;
four.farsi = -6;
period = -27;
seven.farsi = -7;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
oacute = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
ocircumflex = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
odieresis = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
oe = {
question = -22;
t = -4;
v = -3;
x = -10;
};
ograve = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
one = {
eight = -9;
five = -8;
four = -4;
nine = -28;
seven = -19;
six = -16;
three = -5;
zero = -23;
};
one.ar = {
eight.ar = -9;
five.ar = -8;
four.ar = -4;
nine.ar = -28;
seven.ar = -19;
six.ar = -16;
three.ar = -5;
zero.ar = -23;
};
one.farsi = {
eight.farsi = -9;
five.farsi = -8;
four.farsi = -4;
nine.farsi = -28;
seven.farsi = -19;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -23;
};
oslash = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
otilde = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
p = {
comma = -4;
f = -3;
fi = -3;
fl = -3;
period = -4;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -3;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -4;
zcaron = -4;
};
parenleft = {
comma = 16;
j = 67;
p = 13;
uni0631 = 16;
uni0632 = 16;
y = 34;
yacute = 34;
ydieresis = 34;
};
parenright = {
rehvabovear = -11;
uni0631 = -33;
uni0632 = -33;
uni0691 = -6;
uni0694 = -33;
uni0695 = -33;
uni0698 = -33;
};
period = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -5;
quoteright = -5;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
q = {
j = 41;
};
questiondown = {
j = 84;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 7;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0691 = 17;
uniFE8B = 17;
uniFE97 = 22;
uniFE9B = 22;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
colon = -10;
period = -10;
uni0691 = 44;
uniFE8B = 17;
uniFE97 = 44;
uniFE9B = 44;
};
quoteleft = {
J = -12;
T = 7;
V = 7;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0698 = 22;
uniFE8B = 17;
uniFE97 = 22;
uniFE9B = 22;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -33;
aacute = -33;
acircumflex = -33;
adieresis = -33;
ae = -33;
agrave = -33;
aring = -33;
atilde = -33;
colon = -10;
comma = -23;
d = -29;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -12;
n = -12;
ntilde = -12;
o = -26;
oacute = -26;
ocircumflex = -26;
odieresis = -26;
oe = -26;
ograve = -26;
oslash = -26;
otilde = -26;
period = -10;
r = -12;
s = -21;
scaron = -21;
uni0691 = 44;
uni0698 = 44;
uniFE8B = 17;
uniFE97 = 44;
uniFE9B = 44;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
r = {
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -6;
ccedilla = -6;
comma = -15;
d = -6;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
f = 8;
fi = 8;
fl = 8;
g = -6;
hyphen = -4;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = -15;
q = -6;
question = -11;
quotedblright = 4;
quoteright = 4;
t = 8;
v = 5;
w = 5;
y = 5;
yacute = 5;
ydieresis = 5;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
space = 147;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -17;
uniFBA8FE8A = -33;
uniFBA8FEF0 = -33;
uniFBA8FEF2 = -33;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -28;
uniFC0A = -39;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -39;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
rehvabovear = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 106;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 73;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -17;
uniFBA8FE8A = -33;
uniFBA8FEF0 = -33;
uniFBA8FEF2 = -33;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -28;
uniFC0A = -39;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -39;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
rehvabovear.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -17;
uniFBA8FE8A = -33;
uniFBA8FEF0 = -33;
uniFBA8FEF2 = -33;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -28;
uniFC0A = -39;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -39;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
rehvbelowar.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -17;
uniFBA8FE8A = -33;
uniFBA8FEF0 = -33;
uniFBA8FEF2 = -33;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -28;
uniFC0A = -39;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -39;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
s = {
comma = 5;
period = 5;
question = -18;
t = 5;
};
scaron = {
comma = 5;
period = 5;
question = -18;
t = 5;
};
seven = {
comma = -35;
eight = -6;
four = -19;
one = 5;
period = -35;
six = -17;
two = -12;
zero = -12;
};
seven.ar = {
comma = -35;
eight.ar = -6;
four.ar = -19;
one.ar = 5;
period = -35;
six.ar = -17;
two.ar = -12;
zero.ar = -12;
};
seven.farsi = {
comma = -35;
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
period = -35;
six.farsi = -17;
two.farsi = -12;
zero.farsi = -12;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -18;
two = -8;
};
six.ar = {
comma = -9;
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -18;
two.ar = -8;
};
six.farsi = {
comma = -9;
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -18;
two.farsi = -8;
};
sterling = {
eight = -5;
four = -12;
seven = 6;
six = -18;
};
t = {
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -9;
ccedilla = -9;
comma = -18;
d = -8;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
f = 5;
fi = 5;
fl = 5;
g = -6;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
period = -18;
q = -6;
question = -6;
t = 5;
x = -3;
y = 5;
yacute = 5;
ydieresis = 5;
};
three = {
comma = -7;
four = 9;
nine = -6;
one = -7;
period = -7;
seven = -9;
two = -8;
zero = -4;
};
three.ar = {
comma = -7;
four.ar = 9;
nine.ar = -6;
one.ar = -7;
period = -7;
seven.ar = -9;
two.ar = -8;
zero.ar = -4;
};
three.farsi = {
comma = -7;
four.farsi = 9;
nine.farsi = -6;
one.farsi = -7;
period = -7;
seven.farsi = -9;
two.farsi = -8;
zero.farsi = -4;
};
two = {
comma = -7;
eight = -4;
five = -3;
four = -12;
nine = -4;
period = -7;
seven = -5;
six = -14;
three = -3;
zero = -11;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -3;
four.ar = -12;
nine.ar = -4;
period = -7;
seven.ar = -5;
six.ar = -14;
three.ar = -3;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -3;
four.farsi = -12;
nine.farsi = -4;
period = -7;
seven.farsi = -5;
six.farsi = -14;
three.farsi = -3;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
uni0622 = {
lamthreedotsabovear = 22;
uni0632 = 6;
uni0671 = 28;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uni0623 = {
lamthreedotsabovear = 17;
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uni0625 = {
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uni0627 = {
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uni062F = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uni0630 = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uni0631 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 73;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0661 = 13;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 82;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni0632 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F3 = -17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 82;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni0637 = {
uni0621 = 6;
};
uni0638 = {
uni0621 = 6;
};
uni06440671 = {
lamdotabovear = 22;
lamdotabovear.init = 22;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 22;
lamvabovear.init = 22;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0643 = 22;
uni0644 = 22;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 78;
uni0698 = 67;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFDF2 = 22;
uniFE8B = 33;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 22;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 33;
yehvabove_pehar = 33;
yehvabove_yehHamzaabovear = 33;
yehvabove_yehar = 33;
yehvabove_yehvar = 33;
yehvabovear = 6;
yehvabovear.init = 33;
};
uni06440671.fina = {
lamdotabovear = 22;
lamdotabovear.init = 22;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 22;
lamvabovear.init = 22;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0643 = 22;
uni0644 = 22;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 78;
uni0698 = 67;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFDF2 = 22;
uniFE8B = 33;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 22;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 33;
yehvabove_pehar = 33;
yehvabove_yehHamzaabovear = 33;
yehvabove_yehar = 33;
yehvabove_yehvar = 33;
yehvabovear = 6;
yehvabovear.init = 33;
};
uni0660 = {
uni0666 = -67;
};
uni0661 = {
uni0667 = 17;
uni0668 = 17;
uni0691 = 22;
uni0698 = 22;
uni06F7 = 4;
};
uni0662 = {
uni0660 = -72;
uni0666 = 17;
uni0667 = 28;
uni0668 = -33;
uni0669 = -28;
uni06F9 = -7;
uniF806 = -78;
};
uni0663 = {
uni0660 = -44;
uni0667 = 17;
uni0668 = -22;
uniF806 = -33;
};
uni0664 = {
uni0666 = -17;
uni0668 = 22;
};
uni0665 = {
uni0666 = -10;
uni0667 = 17;
uni0668 = 11;
uniF806 = 7;
};
uni0666 = {
uni0667 = 28;
uni0668 = 17;
uni0691 = 44;
uni0698 = 44;
uniFB8D = 17;
};
uni0667 = {
uni0632 = 17;
uni0661 = 17;
uni0662 = 28;
uni0663 = 22;
uni0664 = 17;
uni0665 = 17;
uni0666 = 28;
uni0667 = 50;
uni0668 = 6;
uni0669 = 17;
uni0691 = 44;
uni0694 = 17;
uni0695 = 17;
uni0698 = 44;
uni06F3 = 4;
};
uni0668 = {
uni0631 = 17;
uni0632 = 17;
uni0661 = 17;
uni0662 = 22;
uni0663 = 17;
uni0664 = 17;
uni0665 = 11;
uni0666 = -33;
uni0667 = 6;
uni0668 = 44;
uni0669 = -22;
uni0691 = 17;
uni0694 = 17;
uni0695 = 17;
uni0698 = 17;
uni06F7 = -9;
uniF806 = 7;
};
uni0669 = {
uni0666 = -28;
uni0667 = 17;
uni0668 = 17;
};
uni0671 = {
lamthreedotsabovear = 39;
uni0632 = 6;
uni0671 = 39;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uni0688 = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uni0691 = {
Decoratedbracketleft = 44;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0667 = 17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F7 = 22;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFB8D = 82;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE8B = 6;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE97 = 18;
uniFE9B = 18;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni0694 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni0695 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni0698 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0661 = 22;
uni0667 = 17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F7 = 17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFB8B = 82;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE8B = 14;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE97 = 32;
uniFE9B = 32;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uni06F1 = {
uni0691 = 22;
uni0698 = 17;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -29;
uni0666 = 10;
uni0667 = 4;
uni06F0 = -72;
uni06F9 = -22;
uniF806 = -67;
};
uni06F3 = {
uni0632 = 17;
uni0664 = -4;
uni0698 = 28;
uni06F0 = -44;
uni06F7 = 17;
uniF806 = -42;
};
uni06F4 = {
uni0632 = 17;
uni0691 = 28;
uni0698 = 28;
uniF806 = -16;
};
uni06F5 = {
uni06F5 = 11;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F6 = {
uni0668 = -7;
uni06F8 = -3;
};
uni06F7 = {
uni0631 = 17;
uni0632 = 17;
uni0661 = 7;
uni0691 = 28;
uni0694 = 17;
uni0695 = 17;
uni0698 = 44;
uni06F1 = 17;
uni06F2 = 28;
uni06F3 = 22;
uni06F4 = 22;
uni06F5 = 17;
uni06F6 = 11;
uni06F7 = 50;
uni06F8 = 6;
uni06F9 = 17;
uniF805 = 17;
};
uni06F8 = {
uni0631 = 17;
uni0632 = 17;
uni0667 = -6;
uni0691 = 17;
uni0694 = 17;
uni0695 = 17;
uni0698 = 17;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 17;
uni06F6 = 39;
uni06F7 = 6;
uni06F8 = 44;
uni06F9 = -22;
uniF805 = 17;
uniF806 = 10;
};
uni06F9 = {
uni06F7 = 17;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni0661 = -17;
uni06F0 = -56;
uni06F4 = 2;
uni06F5 = -39;
uni06F6 = -17;
uni06F7 = 7;
uni06F8 = -44;
uni06F9 = -28;
uniF806 = -160;
};
uniF806 = {
uni0660 = -72;
uni0661 = 13;
uni0662 = 13;
uni0666 = -30;
uni0667 = -43;
uni0668 = 29;
uni0669 = -107;
uni06F0 = -72;
uni06F1 = 16;
uni06F3 = 16;
uni06F4 = 16;
uni06F6 = 41;
uni06F7 = -41;
uni06F8 = 36;
uni06F9 = -119;
uniF805 = 16;
};
uniFB51 = {
lamthreedotsabovear = 39;
uni0622 = 22;
uni0632 = 6;
uni0671 = 39;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uniFB89 = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uniFB8B = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
space = 69;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0667 = 17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 78;
uni0695 = 78;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F7 = 17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE8B = 14;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE97 = 32;
uniFE9B = 32;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uniFB8D = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0667 = 17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F7 = 22;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE8B = 6;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE97 = 18;
uniFE9B = 18;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uniFE82 = {
lamthreedotsabovear = 22;
uni0632 = 6;
uni0671 = 22;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uniFE84 = {
lamthreedotsabovear = 17;
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uniFE88 = {
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uniFE8E = {
uni0632 = 6;
uni0691 = 6;
uni0698 = 17;
uniFB68 = 6;
uniFE97 = 17;
uniFE9B = 17;
uniFEE7 = 6;
};
uniFE91 = {
uniFEAE = 4;
uniFEB0 = 4;
};
uniFEAA = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uniFEAC = {
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 0;
uni0632 = 0;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0644 = 0;
uni0646 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 0;
uni0698 = 0;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uniFEAE = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uniFEB0 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -56;
braceleft = 106;
braceright = 39;
bracketleft = 108;
bracketright = 100;
lamdotabovear = 61;
lamthreedotsabovear = 61;
lamvabovear = 61;
parenleft = 117;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 100;
uni0626 = 76;
uni062C = 33;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 78;
uni063A = 78;
uni0642 = 56;
uni0644 = 61;
uni0646 = 61;
uni0648 = 72;
uni0649 = 76;
uni064A = 76;
uni0660 = -17;
uni0662 = -44;
uni0663 = -17;
uni0686 = 33;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 76;
uni06F0 = -17;
uni06F2 = -44;
uni06F3 = -17;
uniEECD = 78;
uniEECF = 37;
uniFB58 = 86;
uniFB58FE8A = 86;
uniFB58FEF0 = 86;
uniFB58FEF2 = 86;
uniFB7C = 0;
uniFBA8 = -28;
uniFBA8FE8A = -25;
uniFBA8FEF0 = -25;
uniFBA8FEF2 = -25;
uniFBFE = 86;
uniFBFEFBFD = 86;
uniFC09 = -25;
uniFC0A = -25;
uniFC59 = 86;
uniFC5A = 86;
uniFE91 = -25;
uniFE91FE8A = -25;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 37;
uniFECF = 37;
uniFEF3 = 86;
uniFEF3FE8A = 86;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 86;
yehvabove_pehar = 86;
yehvabove_yehHamzaabovear = 86;
yehvabove_yehar = 86;
yehvabove_yehvar = 86;
yehvabovear = 76;
yehvabovear.init = 86;
};
uniFEC2 = {
uni0621 = 6;
};
uniFEC6 = {
uni0621 = 6;
};
uniFEF5 = {
lamdotabovear = 11;
lamdotabovear.init = 11;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 11;
lamvabovear = 11;
lamvabovear.init = 11;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0643 = 11;
uni0644 = 11;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 67;
uni0698 = 56;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFDF2 = 17;
uniFE8B = 28;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 11;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehHamzaabovear = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 22;
yehvabovear = 6;
yehvabovear.init = 22;
};
uniFEF6 = {
lamdotabovear = 11;
lamdotabovear.init = 11;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 11;
lamvabovear = 11;
lamvabovear.init = 11;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0643 = 11;
uni0644 = 11;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 67;
uni0698 = 56;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFDF2 = 17;
uniFE8B = 28;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 11;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehHamzaabovear = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 22;
yehvabovear = 6;
yehvabovear.init = 22;
};
uniFEF7 = {
lamthreedotsabovear = 11;
lamthreedotsabovear.init = 22;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 56;
uni0698 = 44;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 0;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 11;
yehvabove_pehar = 11;
yehvabove_yehHamzaabovear = 11;
yehvabove_yehar = 11;
yehvabove_yehvar = 11;
yehvabovear = 6;
yehvabovear.init = 11;
};
uniFEF8 = {
lamthreedotsabovear = 11;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni0691 = 56;
uni0698 = 44;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 0;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabove_alefMaksuraar = 11;
yehvabove_pehar = 11;
yehvabove_yehHamzaabovear = 11;
yehvabove_yehar = 11;
yehvabove_yehvar = 11;
yehvabovear = 6;
yehvabovear.init = 11;
};
uniFEF9 = {
lamthreedotsabovear = 0;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uniFEFA = {
lamthreedotsabovear = 0;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
uniFEFB = {
uni0621 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni0639 = 6;
uni063A = 6;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
wawtwodotsabovear = 6;
wawvabovear = 6;
};
uniFEFC = {
lamdotabovear = 0;
lamdotabovear.init = 0;
lamthreedotsabovear.init = 0;
lamvabovear = 0;
lamvabovear.init = 0;
uni0621 = 6;
uni0624 = 6;
uni0626 = 6;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 6;
uni063A = 6;
uni0642 = 6;
uni0643 = 0;
uni0644 = 0;
uni0648 = 6;
uni0649 = 6;
uni064A = 6;
uni0686 = 6;
uni06CC = 6;
uni06D2 = 6;
uni06D3 = 6;
uniEECD = 6;
uniEECF = 6;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEDF = 0;
wawtwodotsabovear = 6;
wawvabovear = 6;
yehvabovear = 6;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
f = 9;
fi = 9;
fl = 9;
g = -3;
hyphen = -6;
o = -5;
oacute = -5;
ocircumflex = -5;
odieresis = -5;
oe = -5;
ograve = -5;
oslash = -5;
otilde = -5;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 6;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
f = 8;
fi = 8;
fl = 8;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 7;
v = 6;
w = 3;
y = 6;
yacute = 6;
ydieresis = 6;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -14;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -12;
hyphen = -12;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 7;
q = -14;
question = -12;
t = -3;
u = -8;
uacute = -8;
ucircumflex = -8;
udieresis = -8;
ugrave = -8;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 8;
v = 5;
w = 6;
};
yacute = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 8;
v = 5;
w = 6;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 8;
v = 5;
w = 6;
};
yen = {
five = 7;
seven = 12;
six = -6;
two = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -3;
four = 4;
one = -8;
period = -23;
seven = -18;
three = -6;
two = -17;
};
zero.ar = {
comma = -23;
five.ar = -3;
four.ar = 4;
one.ar = -8;
period = -23;
seven.ar = -18;
three.ar = -6;
two.ar = -17;
};
zero.farsi = {
comma = -23;
five.farsi = -3;
four.farsi = 4;
one.farsi = -8;
period = -23;
seven.farsi = -18;
three.farsi = -6;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
