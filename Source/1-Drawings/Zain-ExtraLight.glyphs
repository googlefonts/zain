{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:48:44 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
script arab;
language dflt;
lookup POS_4;
lookup POS_5;
lookup POS_6;
script latn;
language dflt;
lookup POS_4;
lookup POS_5;
lookup POS_6;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
lookup POS_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} POS_8;
script arab;
language dflt;
lookup POS_7;
lookup POS_8;
script latn;
language dflt;
lookup POS_7;
lookup POS_8;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    26,\012    26,\012    23,\012    23,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    26,\012    26,\012    22,\012    22,\012    556,\012    0,\012    556,\012    360,\012    0,\012    \"-160\",\012    556,\012    \"-10\",\012    556,\012    367,\012    \"-9\",\012    \"-170\",\012    19,\012    19,\012    19,\012    19,\012    562,\012    238,\012    562,\012    233\012)";
}
);
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = ExtraLight;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,-80,qs),
(280,-68,o),
(264,-51,o),
(252,-51,qs),
(240,-51,o),
(225,-67,o),
(225,-80,qs),
(225,-106,o),
(252,-108,q),
(280,-106,o)
);
},
{
closed = 1;
nodes = (
(267,55,ls),
(267,87,o),
(288,104,qs),
(293,109,o),
(309,122,qs),
(363,165,o),
(405,226,o),
(406,263,qs),
(407,322,o),
(373,357,qs),
(332,399,o),
(256,399,qs),
(199,398,o),
(149,372,qs),
(123,359,o),
(122,349,qs),
(121,344,o),
(123,340,q),
(128,322,l),
(132,324,o),
(136,326,q),
(190,367,o),
(257,367,qs),
(311,367,o),
(372,311,o),
(372,262,qs),
(372,229,o),
(339,178,o),
(299,147,qs),
(264,121,o),
(238,82,o),
(238,59,qs),
(238,22,l),
(267,22,l)
);
},
{
closed = 1;
nodes = (
(486,-248,l),
(486,539,l),
(37,539,l),
(37,-248,l)
);
},
{
closed = 1;
nodes = (
(464,-226,l),
(60,-226,l),
(60,517,l),
(464,517,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
27 24 2 3 1 1 76 8 1 3 1 0 1 3 0 128 0 0 6 1 0 6 126 0 4 9 1 7 2 4 7 103 0 2 0 1 3 2 1 105 0 6 5 5 6 87 0 6 6 5 96 0 5 6 5 80 48 48 10 10 48 51 48 51 50 49 47 46 45 44 10 43 10 43 41 45 36 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 194;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,556,o),
(62,556,qs),
(63,556,ls),
(85,556,o),
(85,528,qs),
(83,124,ls),
(83,121,o),
(81,121,qs),
(63,121,ls),
(60,121,o),
(60,124,qs),
(59,553,ls)
);
},
{
closed = 1;
nodes = (
(57,45,o),
(70,45,qs),
(82,45,o),
(101,26,o),
(101,13,qs),
(101,0,o),
(82,-18,o),
(70,-18,qs),
(57,-18,o),
(39,0,o),
(39,13,qs),
(39,26,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 3 0 3 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 39 77 0 2 2 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 13 values pushed */
0 2 0 1 2 1 101 0 0 0 39 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 38 23 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 139;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,556,o),
(47,556,qs),
(51,556,ls),
(73,556,o),
(72,528,qs),
(68,384,ls),
(68,382,o),
(65,382,qs),
(53,382,ls),
(50,382,o),
(50,384,qs),
(44,553,ls)
);
},
{
closed = 1;
nodes = (
(113,556,o),
(116,556,qs),
(120,556,ls),
(143,556,o),
(141,528,qs),
(137,384,ls),
(137,382,o),
(134,382,qs),
(122,382,ls),
(120,382,o),
(120,384,qs),
(113,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
18 15 12 3 0 5 0 73 1 1 0 0 39 0 78 57 55 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 186;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,162,ls),
(29,162,o),
(30,168,qs),
(33,181,ls),
(34,185,o),
(39,185,qs),
(128,185,l),
(173,366,l),
(85,366,ls),
(80,366,o),
(82,372,qs),
(85,384,ls),
(86,388,o),
(91,388,qs),
(179,388,l),
(220,551,ls),
(221,556,o),
(226,556,qs),
(227,556,ls),
(244,556,o),
(237,525,qs),
(204,388,l),
(385,388,l),
(426,551,l),
(426,556,o),
(431,556,qs),
(432,556,ls),
(450,556,o),
(442,525,qs),
(410,388,l),
(498,388,ls),
(502,388,o),
(501,383,qs),
(498,369,l),
(496,366,o),
(492,366,qs),
(403,366,l),
(360,185,l),
(446,185,ls),
(450,185,o),
(450,179,q),
(446,166,ls),
(445,162,o),
(440,162,qs),
(355,162,l),
(317,8,ls),
(315,0,o),
(304,0,qs),
(290,0,ls),
(288,0,o),
(288,4,q),
(328,162,l),
(149,162,l),
(111,8,ls),
(109,0,o),
(98,0,qs),
(85,0,ls),
(81,0,o),
(82,4,qs),
(122,162,l)
);
},
{
closed = 1;
nodes = (
(379,366,l),
(198,366,l),
(154,185,l),
(334,185,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
26 1 5 6 18 1 1 4 8 1 0 1 3 76 10 8 2 6 14 11 2 5 4 6 5 104 16 15 12 3 4 13 3 2 1 0 4 1 103 9 1 7 7 39 77 2 1 0 0 40 0 78 60 60 60 63 60 63 62 61 59 57 53 52 51 49 45 44 40 39 20 18 21 17 21 18 20 18 34 17 9 31 
CALL[ ]	/* CallFunction */";
};
width = 531;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,313,o),
(52,375,o),
(52,424,qs),
(52,480,o),
(91,519,qs),
(135,563,o),
(209,567,q),
(209,618,ls),
(209,621,o),
(212,621,qs),
(232,621,ls),
(235,621,o),
(235,618,qs),
(235,567,l),
(298,564,o),
(362,527,qs),
(378,517,o),
(386,506,o),
(383,498,qs),
(382,495,l),
(381,494,l),
(379,488,o),
(376,488,qs),
(373,488,o),
(369,491,qs),
(367,492,o),
(366,493,qs),
(299,541,o),
(235,544,q),
(235,296,l),
(326,263,o),
(393,201,o),
(393,150,qs),
(393,86,o),
(356,44,qs),
(313,-4,o),
(235,-10,q),
(235,-62,ls),
(235,-64,o),
(232,-64,qs),
(212,-64,ls),
(209,-64,o),
(209,-62,qs),
(209,-11,l),
(131,-9,o),
(81,31,qs),
(34,67,o),
(34,103,qs),
(34,119,o),
(43,119,qs),
(50,119,o),
(53,109,qs),
(67,66,o),
(151,13,o),
(209,12,q),
(209,280,l)
);
},
{
closed = 1;
nodes = (
(154,541,o),
(119,513,qs),
(78,481,o),
(78,426,qs),
(78,383,o),
(113,354,qs),
(140,331,o),
(209,305,q),
(209,544,l)
);
},
{
closed = 1;
nodes = (
(293,18,o),
(327,49,qs),
(367,85,o),
(367,149,qs),
(367,192,o),
(331,222,qs),
(303,246,o),
(235,271,q),
(235,13,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
65 56 55 25 4 1 3 73 1 0 1 2 76 45 42 2 4 74 18 15 12 3 2 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 3 0 3 1 0 128 6 1 3 3 4 97 5 1 4 4 39 77 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 3 0 3 1 0 128 5 1 4 6 1 3 1 4 3 105 0 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
30 23 29 31 20 35 16 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,262,qs),
(43,307,o),
(43,394,qs),
(43,470,o),
(70,515,qs),
(101,567,o),
(161,567,qs),
(214,567,o),
(245,527,qs),
(280,482,o),
(280,394,qs),
(280,318,o),
(253,274,qs),
(222,223,o),
(161,223,qs),
(109,223,o)
);
},
{
closed = 1;
nodes = (
(181,0,o),
(184,4,q),
(454,551,ls),
(456,556,o),
(459,556,qs),
(460,556,ls),
(469,556,o),
(474,537,o),
(467,525,q),
(213,8,ls),
(209,0,o),
(200,0,qs),
(186,0,ls)
);
},
{
closed = 1;
nodes = (
(255,393,qs),
(255,544,o),
(161,544,qs),
(68,544,o),
(68,393,qs),
(68,244,o),
(161,244,qs),
(255,244,o)
);
},
{
closed = 1;
nodes = (
(424,30,qs),
(389,75,o),
(389,163,qs),
(389,239,o),
(415,283,qs),
(447,335,o),
(507,335,qs),
(560,335,o),
(590,295,qs),
(625,250,o),
(625,163,qs),
(625,87,o),
(598,42,qs),
(567,-9,o),
(507,-9,qs),
(454,-9,o)
);
},
{
closed = 1;
nodes = (
(600,162,qs),
(600,313,o),
(507,313,qs),
(414,313,o),
(414,162,qs),
(414,13,o),
(507,13,qs),
(600,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 9 4 7 9 105 12 1 4 10 1 0 8 4 0 105 0 3 3 39 77 0 5 5 1 97 0 1 1 39 77 11 1 2 2 40 77 14 1 8 8 6 97 13 1 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 5 7 1 5 105 0 7 0 9 4 7 9 105 12 1 4 10 1 0 8 4 0 105 0 3 3 39 77 11 1 2 2 40 77 14 1 8 8 6 97 13 1 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
54 53 38 37 30 29 17 16 1 0 58 56 53 60 54 60 46 44 37 52 38 52 34 32 29 36 30 36 22 21 16 28 17 27 9 7 0 15 1 15 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,273,o),
(463,273,qs),
(473,273,ls),
(479,273,o),
(476,267,qs),
(383,114,l),
(480,5,ls),
(485,0,o),
(477,0,qs),
(465,0,ls),
(455,0,o),
(447,9,qs),
(370,93,l),
(304,-6,o),
(201,-6,qs),
(139,-6,o),
(96,32,qs),
(49,76,o),
(49,145,qs),
(49,254,o),
(181,312,q),
(105,392,o),
(105,449,qs),
(105,499,o),
(136,530,qs),
(171,567,o),
(235,567,qs),
(285,567,o),
(318,539,qs),
(355,508,o),
(355,457,qs),
(355,416,o),
(282,336,o),
(216,305,q),
(367,132,l),
(447,266,ls)
);
},
{
closed = 1;
nodes = (
(331,456,qs),
(331,497,o),
(280,544,o),
(235,544,qs),
(185,544,o),
(130,495,o),
(130,450,qs),
(130,422,o),
(162,365,o),
(202,321,q),
(331,382,o)
);
},
{
closed = 1;
nodes = (
(132,267,o),
(75,197,o),
(75,150,qs),
(75,92,o),
(105,57,qs),
(139,17,o),
(203,17,qs),
(292,17,o),
(355,111,q),
(195,296,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
56 14 1 3 3 4 29 22 2 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 5 4 3 5 128 0 4 4 0 97 0 0 0 39 77 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 5 4 3 5 128 0 4 4 0 97 0 0 0 39 77 0 2 2 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 4 5 4 3 5 128 0 4 4 0 97 0 0 0 39 77 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 4 5 4 3 5 128 0 0 0 4 3 0 4 105 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 39 52 51 42 39 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,556,o),
(47,556,qs),
(51,556,ls),
(73,556,o),
(72,528,qs),
(68,384,ls),
(68,382,o),
(65,382,qs),
(53,382,ls),
(50,382,o),
(50,384,qs),
(44,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
3 0 2 0 73 0 0 0 39 0 78 55 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 117;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,653,q),
(232,654,o),
(233,655,qs),
(247,668,o),
(250,675,qs),
(253,681,o),
(253,690,qs),
(253,691,o),
(253,692,qs),
(253,703,o),
(244,697,qs),
(170,646,o),
(124,549,qs),
(67,429,o),
(68,277,qs),
(67,143,o),
(111,33,qs),
(159,-85,o),
(244,-143,qs),
(253,-150,o),
(253,-138,qs),
(253,-128,o),
(250,-122,qs),
(247,-114,o),
(235,-103,qs),
(232,-100,ls),
(90,34,o),
(94,277,q),
(90,519,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
18 8 1 50 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,-100,q),
(78,-101,o),
(77,-102,qs),
(63,-114,o),
(59,-122,qs),
(56,-128,o),
(57,-137,qs),
(57,-138,ls),
(57,-150,o),
(65,-143,q),
(139,-92,o),
(186,5,qs),
(243,124,o),
(242,277,qs),
(243,410,o),
(199,520,qs),
(151,638,o),
(65,697,qs),
(57,703,o),
(57,692,qs),
(57,691,ls),
(56,681,o),
(59,675,qs),
(63,668,o),
(75,656,qs),
(77,654,o),
(78,653,qs),
(219,519,o),
(216,277,qs),
(219,34,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
20 10 1 50 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,455,o),
(39,459,qs),
(46,481,ls),
(47,485,o),
(51,484,q),
(145,447,l),
(140,548,ls),
(140,553,o),
(144,553,qs),
(167,553,ls),
(171,553,o),
(171,548,qs),
(165,447,l),
(260,484,ls),
(263,485,o),
(265,481,q),
(271,459,ls),
(272,455,o),
(269,454,qs),
(171,429,l),
(235,351,l),
(235,350,l),
(237,347,o),
(234,345,qs),
(215,332,ls),
(212,330,o),
(211,331,qs),
(210,332,o),
(210,333,q),
(155,418,l),
(101,333,l),
(100,332,o),
(100,331,q),
(99,330,o),
(96,332,qs),
(77,345,ls),
(73,348,o),
(76,351,qs),
(139,429,l),
(42,454,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
37 34 33 32 27 26 25 22 19 18 10 9 4 1 14 0 73 0 0 0 39 0 78 30 29 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 310;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,262,o),
(46,266,qs),
(46,282,ls),
(46,285,o),
(49,285,qs),
(184,285,l),
(184,440,ls),
(184,443,o),
(187,443,qs),
(207,443,o),
(207,416,qs),
(207,285,l),
(339,285,ls),
(342,285,o),
(342,282,qs),
(342,266,ls),
(342,262,o),
(339,262,qs),
(207,262,l),
(207,106,ls),
(207,103,o),
(204,103,qs),
(187,103,ls),
(184,103,o),
(184,106,qs),
(184,262,l),
(49,262,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
24 10 2 0 1 1 76 4 1 2 0 73 0 2 1 2 133 3 1 1 0 0 1 87 3 1 1 1 0 95 5 4 2 0 1 0 79 0 0 0 26 0 26 19 18 51 23 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,16,qs),
(55,29,o),
(72,45,o),
(86,45,qs),
(117,45,o),
(117,12,qs),
(117,-13,o),
(85,-73,o),
(61,-94,qs),
(59,-96,o),
(57,-94,qs),
(56,-93,o),
(56,-92,q),
(45,-82,o),
(57,-64,qs),
(60,-60,o),
(60,-59,q),
(62,-57,o),
(64,-53,qs),
(78,-30,o),
(82,-14,q),
(55,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 18 16 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,214,o),
(49,214,qs),
(253,214,ls),
(256,214,o),
(256,212,qs),
(256,195,ls),
(256,192,o),
(253,192,qs),
(49,192,ls),
(46,192,o),
(46,195,qs),
(46,212,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,26,o),
(111,13,qs),
(111,0,o),
(93,-18,o),
(81,-18,qs),
(68,-18,o),
(50,0,o),
(50,13,qs),
(50,26,o),
(68,44,o),
(81,44,qs),
(93,44,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,0,o),
(3,4,qs),
(234,549,l),
(236,556,o),
(240,556,qs),
(264,556,o),
(250,525,qs),
(32,8,ls),
(28,0,o),
(19,0,qs),
(5,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 19 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 253;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,51,qs),
(62,120,o),
(62,277,qs),
(62,567,o),
(244,567,qs),
(331,567,o),
(375,504,qs),
(426,434,o),
(426,277,qs),
(426,140,o),
(388,70,qs),
(345,-10,o),
(244,-10,qs),
(155,-10,o)
);
},
{
closed = 1;
nodes = (
(357,67,qs),
(400,130,o),
(400,277,qs),
(400,408,o),
(368,471,qs),
(331,544,o),
(244,544,qs),
(168,544,o),
(130,489,qs),
(88,426,o),
(88,277,qs),
(88,148,o),
(120,85,qs),
(157,13,o),
(244,13,qs),
(320,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 39 77 5 1 2 2 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,497,ls),
(47,496,o),
(47,500,qs),
(47,512,ls),
(47,519,o),
(54,522,qs),
(137,549,l),
(151,556,o),
(158,556,qs),
(164,556,ls),
(182,556,o),
(182,534,qs),
(182,23,l),
(278,23,ls),
(292,23,o),
(292,9,qs),
(292,6,ls),
(292,0,o),
(285,0,qs),
(49,0,ls),
(46,0,o),
(46,3,qs),
(46,20,ls),
(46,23,o),
(49,23,qs),
(155,23,l),
(155,533,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
26 23 2 0 3 1 76 0 3 3 39 77 2 1 0 0 1 95 0 1 1 40 1 78 50 35 67 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,23,o),
(380,9,qs),
(380,6,ls),
(380,0,o),
(373,0,qs),
(50,0,ls),
(47,0,o),
(47,3,qs),
(48,88,o),
(102,151,qs),
(135,189,o),
(218,244,qs),
(300,299,o),
(356,369,o),
(356,417,qs),
(356,473,o),
(323,506,qs),
(286,544,o),
(213,544,qs),
(146,544,o),
(83,503,qs),
(82,502,o),
(80,501,qs),
(76,498,o),
(73,498,qs),
(69,498,o),
(68,504,qs),
(67,508,ls),
(64,520,o),
(87,533,qs),
(149,567,o),
(215,567,qs),
(287,567,o),
(331,532,qs),
(382,493,o),
(382,418,qs),
(382,367,o),
(352,326,qs),
(325,289,o),
(250,238,qs),
(164,180,o),
(135,151,qs),
(80,95,o),
(73,23,q),
(366,23,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 44 0 43 74 36 37 43 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,256,qs),
(372,214,o),
(372,152,qs),
(372,83,o),
(332,40,qs),
(286,-10,o),
(199,-10,qs),
(126,-10,o),
(77,30,qs),
(33,68,o),
(33,104,qs),
(33,120,o),
(42,120,qs),
(49,120,o),
(52,111,qs),
(64,67,o),
(143,13,o),
(196,13,qs),
(269,13,o),
(307,48,qs),
(346,84,o),
(346,151,qs),
(346,208,o),
(311,244,qs),
(271,283,o),
(206,283,qs),
(117,283,ls),
(104,283,o),
(104,297,qs),
(104,300,ls),
(104,306,o),
(111,306,qs),
(210,306,ls),
(239,306,o),
(273,324,qs),
(334,356,o),
(334,424,qs),
(334,477,o),
(302,508,qs),
(266,544,o),
(195,544,qs),
(123,544,o),
(60,503,qs),
(59,502,o),
(57,501,qs),
(53,498,o),
(50,498,qs),
(47,498,o),
(45,504,qs),
(44,508,ls),
(41,520,o),
(64,533,qs),
(126,567,o),
(197,567,qs),
(268,567,o),
(311,534,qs),
(359,496,o),
(359,426,qs),
(359,378,o),
(306,311,o),
(257,296,q),
(298,287,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 103 0 1 1 0 97 0 0 0 39 77 0 4 4 6 97 0 6 6 46 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 4 6 97 0 6 6 46 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 35 38 51 54 43 38 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,149,o),
(27,152,qs),
(27,162,ls),
(27,173,o),
(33,182,qs),
(274,544,ls),
(282,556,o),
(291,556,qs),
(299,556,ls),
(318,556,o),
(318,529,qs),
(318,172,l),
(375,172,ls),
(389,172,o),
(389,158,qs),
(389,155,ls),
(389,149,o),
(382,149,qs),
(318,149,l),
(318,6,ls),
(318,0,o),
(314,0,qs),
(298,0,ls),
(293,0,o),
(293,6,qs),
(293,149,l),
(30,149,ls)
);
},
{
closed = 1;
nodes = (
(293,532,l),
(53,172,l),
(293,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 6 1 2 0 1 2 76 7 5 2 2 6 4 2 1 0 2 1 103 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 24 50 35 35 19 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,344,o),
(212,344,qs),
(283,344,o),
(327,304,qs),
(377,257,o),
(377,172,qs),
(377,94,o),
(335,46,qs),
(288,-10,o),
(202,-10,qs),
(130,-10,o),
(82,31,qs),
(38,68,o),
(38,106,qs),
(38,120,o),
(47,120,qs),
(54,120,o),
(57,111,qs),
(69,67,o),
(148,13,o),
(199,13,qs),
(266,13,o),
(305,49,qs),
(351,90,o),
(351,168,qs),
(351,235,o),
(319,275,qs),
(282,321,o),
(211,321,qs),
(153,321,o),
(82,294,qs),
(73,290,o),
(73,301,qs),
(73,553,ls),
(73,556,o),
(76,556,qs),
(330,556,ls),
(344,556,o),
(344,542,qs),
(344,539,ls),
(344,533,o),
(337,533,qs),
(99,533,l),
(99,324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 35 38 38 35 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,348,o),
(232,348,qs),
(295,348,o),
(338,305,qs),
(388,257,o),
(388,176,qs),
(388,97,o),
(348,47,qs),
(302,-10,o),
(220,-10,qs),
(150,-10,o),
(105,33,qs),
(54,82,o),
(54,167,qs),
(54,206,o),
(81,280,o),
(118,344,qs),
(247,558,ls),
(252,567,o),
(257,567,qs),
(266,567,o),
(267,556,qs),
(268,543,o),
(257,526,qs),
(133,319,l)
);
},
{
closed = 1;
nodes = (
(319,49,qs),
(362,92,o),
(362,169,qs),
(362,237,o),
(330,278,qs),
(294,325,o),
(225,325,qs),
(160,325,o),
(120,282,qs),
(80,238,o),
(80,169,qs),
(80,102,o),
(113,60,qs),
(151,12,o),
(221,12,qs),
(281,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 39 77 0 4 4 2 97 0 2 2 42 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 105 0 0 0 39 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 105 5 1 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 19 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,533,o),
(35,536,qs),
(35,553,ls),
(35,556,o),
(38,556,qs),
(352,556,ls),
(372,556,o),
(372,539,qs),
(372,538,ls),
(372,528,o),
(361,503,qs),
(131,8,ls),
(128,0,o),
(118,0,qs),
(104,0,ls),
(99,0,o),
(103,5,q),
(350,533,l),
(38,533,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 16 38 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,424,qs),
(65,482,o),
(102,522,qs),
(145,567,o),
(216,567,qs),
(278,567,o),
(319,532,qs),
(367,491,o),
(367,424,qs),
(367,332,o),
(274,297,q),
(325,280,o),
(386,201,o),
(386,151,qs),
(386,86,o),
(346,42,qs),
(298,-11,o),
(216,-11,qs),
(144,-11,o),
(98,30,qs),
(46,76,o),
(46,151,qs),
(46,201,o),
(107,280,o),
(158,297,q),
(65,332,o)
);
},
{
closed = 1;
nodes = (
(123,343,qs),
(160,308,o),
(216,308,qs),
(265,308,o),
(300,335,qs),
(343,368,o),
(343,422,qs),
(343,472,o),
(315,504,qs),
(280,544,o),
(216,544,qs),
(160,544,o),
(126,513,qs),
(89,480,o),
(89,422,qs),
(89,375,o)
);
},
{
closed = 1;
nodes = (
(106,55,qs),
(146,12,o),
(216,12,qs),
(277,12,o),
(316,46,qs),
(360,84,o),
(360,153,qs),
(360,206,o),
(324,243,qs),
(283,285,o),
(216,285,qs),
(158,285,o),
(118,252,qs),
(72,214,o),
(72,153,qs),
(72,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 5 3 4 105 0 2 2 1 97 0 1 1 39 77 0 5 5 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 2 3 1 2 105 0 3 0 4 5 3 4 105 0 5 5 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 40 43 38 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,209,o),
(205,209,qs),
(142,209,o),
(98,252,qs),
(46,302,o),
(46,384,qs),
(46,461,o),
(87,510,qs),
(135,567,o),
(217,567,qs),
(286,567,o),
(330,524,qs),
(380,475,o),
(380,389,qs),
(380,350,o),
(353,275,o),
(315,213,qs),
(187,-1,ls),
(182,-10,o),
(177,-10,qs),
(167,-10,o),
(167,14,o),
(177,31,qs),
(300,238,l)
);
},
{
closed = 1;
nodes = (
(315,274,qs),
(354,318,o),
(354,388,qs),
(354,455,o),
(323,497,qs),
(286,544,o),
(216,544,qs),
(156,544,o),
(117,507,qs),
(72,464,o),
(72,388,qs),
(72,318,o),
(104,278,qs),
(141,232,o),
(212,232,qs),
(277,232,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 41 18 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,221,o),
(114,208,qs),
(114,196,o),
(96,177,o),
(84,177,qs),
(71,177,o),
(53,196,o),
(53,208,qs),
(53,221,o),
(71,240,o),
(84,240,qs),
(96,240,o)
);
},
{
closed = 1;
nodes = (
(114,26,o),
(114,13,qs),
(114,0,o),
(96,-18,o),
(84,-18,qs),
(71,-18,o),
(53,0,o),
(53,13,qs),
(53,26,o),
(71,44,o),
(84,44,qs),
(96,44,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 3 3 2 89 5 1 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,196,o),
(58,209,qs),
(58,221,o),
(76,239,o),
(89,239,qs),
(101,239,o),
(119,221,o),
(119,209,qs),
(119,196,o),
(101,177,o),
(89,177,qs),
(76,177,o)
);
},
{
closed = 1;
nodes = (
(58,16,qs),
(58,45,o),
(89,45,qs),
(119,45,o),
(119,12,qs),
(119,-13,o),
(88,-73,o),
(64,-94,qs),
(62,-96,o),
(59,-93,q),
(59,-92,l),
(48,-82,o),
(60,-64,qs),
(62,-61,o),
(63,-59,qs),
(64,-58,o),
(65,-55,q),
(80,-31,o),
(84,-14,q),
(58,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 3 1 0 1 0 81 1 0 29 27 7 5 0 11 1 11 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,135,o),
(397,118,qs),
(397,117,ls),
(397,110,o),
(392,112,qs),
(52,259,ls),
(46,262,o),
(46,268,qs),
(46,272,ls),
(46,279,o),
(52,282,qs),
(392,424,l),
(397,427,o),
(397,421,qs),
(397,411,ls),
(397,403,o),
(387,398,qs),
(78,271,l),
(374,144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,344,o),
(46,347,qs),
(46,364,ls),
(46,367,o),
(49,367,qs),
(328,367,ls),
(342,367,o),
(342,353,qs),
(342,350,ls),
(342,344,o),
(335,344,qs),
(49,344,ls)
);
},
{
closed = 1;
nodes = (
(46,172,o),
(46,175,qs),
(46,192,ls),
(46,195,o),
(49,195,qs),
(328,195,ls),
(342,195,o),
(342,181,qs),
(342,178,ls),
(342,172,o),
(335,172,qs),
(49,172,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 5 1 2 3 2 99 4 1 0 0 1 95 0 1 1 42 0 78 13 12 1 0 18 16 12 23 13 21 6 4 0 11 1 9 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,403,o),
(54,411,qs),
(54,421,ls),
(54,426,o),
(59,424,qs),
(398,282,l),
(405,280,o),
(405,272,qs),
(405,268,ls),
(405,261,o),
(398,259,q),
(59,112,l),
(54,111,o),
(54,117,qs),
(54,118,ls),
(54,135,o),
(77,144,qs),
(373,271,l),
(63,398,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,227,o),
(216,271,qs),
(264,310,o),
(276,323,qs),
(317,366,o),
(317,419,qs),
(317,474,o),
(284,507,qs),
(247,544,o),
(177,544,qs),
(103,544,o),
(43,501,q),
(42,501,o),
(41,500,qs),
(36,496,o),
(33,496,qs),
(31,496,o),
(29,499,qs),
(28,501,o),
(27,503,qs),
(26,505,ls),
(19,518,o),
(47,534,qs),
(107,567,o),
(179,567,qs),
(248,567,o),
(291,533,qs),
(342,493,o),
(342,419,qs),
(342,372,o),
(313,332,qs),
(294,306,o),
(247,267,qs),
(220,244,o),
(211,237,qs),
(187,215,o),
(187,184,qs),
(187,124,ls),
(187,121,o),
(184,121,qs),
(164,121,ls),
(162,121,o),
(162,124,qs),
(162,190,ls)
);
},
{
closed = 1;
nodes = (
(162,45,o),
(174,45,qs),
(187,45,o),
(205,26,o),
(205,13,qs),
(205,0,o),
(187,-18,o),
(174,-18,qs),
(161,-18,o),
(143,0,o),
(143,13,qs),
(143,26,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
27 3 0 3 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 1 0 97 0 0 0 39 77 0 3 3 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 0 0 1 3 0 1 105 0 3 3 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 1 3 0 1 105 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
54 52 48 46 34 32 19 17 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 383;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(516,406,o),
(538,406,qs),
(540,406,ls),
(542,406,o),
(542,403,qs),
(517,140,ls),
(515,127,o),
(515,113,qs),
(515,59,o),
(561,59,qs),
(611,59,o),
(643,106,qs),
(683,164,o),
(683,274,qs),
(683,383,o),
(618,457,qs),
(539,546,o),
(403,546,qs),
(269,546,o),
(180,461,qs),
(80,366,o),
(80,214,qs),
(80,81,o),
(152,-4,qs),
(236,-102,o),
(381,-102,qs),
(453,-102,o),
(570,-56,o),
(600,-15,qs),
(605,-9,o),
(610,-9,qs),
(617,-9,o),
(617,-17,qs),
(617,-41,o),
(566,-75,qs),
(491,-124,o),
(380,-124,qs),
(242,-124,o),
(155,-43,qs),
(54,51,o),
(54,217,qs),
(54,355,o),
(139,453,qs),
(239,568,o),
(403,568,qs),
(530,568,o),
(614,496,qs),
(708,413,o),
(708,277,qs),
(708,176,o),
(674,112,qs),
(634,38,o),
(562,38,qs),
(525,38,o),
(488,85,o),
(492,127,q),
(473,85,o),
(395,37,o),
(347,37,qs),
(284,37,o),
(245,76,qs),
(200,120,o),
(200,199,qs),
(200,279,o),
(241,338,qs),
(292,412,o),
(382,412,qs),
(429,412,o),
(497,369,o),
(509,330,q),
(514,378,ls)
);
},
{
closed = 1;
nodes = (
(462,113,qs),
(501,166,o),
(501,253,qs),
(501,389,o),
(380,389,qs),
(311,389,o),
(268,336,qs),
(226,282,o),
(226,200,qs),
(226,140,o),
(255,102,qs),
(288,59,o),
(349,59,qs),
(422,59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 8 11 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 0 11 0 9 11 128 0 5 1 6 1 5 6 128 0 0 0 11 8 0 11 105 12 10 2 8 2 1 1 5 8 1 105 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 9 0 11 0 9 11 128 0 5 1 6 1 5 6 128 0 3 0 7 0 3 7 105 0 0 0 11 8 0 11 105 12 10 2 8 2 1 1 5 8 1 105 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
72 71 80 78 71 84 72 84 69 68 38 38 36 20 38 38 36 38 34 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 762;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
21 1 4 2 1 76 5 1 4 0 0 1 4 0 103 0 2 2 39 77 3 1 1 1 40 1 78 20 20 20 22 20 22 23 20 34 16 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,206,o),
(421,157,qs),
(421,87,o),
(383,46,qs),
(340,0,o),
(256,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(231,556,ls),
(302,556,o),
(341,524,qs),
(386,489,o),
(386,419,qs),
(386,327,o),
(311,295,q),
(359,284,o)
);
},
{
closed = 1;
nodes = (
(303,305,o),
(331,333,qs),
(363,365,o),
(363,417,qs),
(363,533,o),
(233,533,qs),
(108,533,l),
(108,305,l),
(260,305,ls)
);
},
{
closed = 1;
nodes = (
(395,23,o),
(395,156,qs),
(395,209,o),
(362,243,qs),
(324,282,o),
(259,282,qs),
(108,282,l),
(108,23,l),
(253,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 3 0 4 5 3 4 103 0 2 2 0 95 0 0 0 39 77 7 1 5 5 1 95 0 1 1 40 1 78 29 29 20 20 29 37 29 36 32 30 20 28 20 27 39 67 37 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,56,qs),
(63,134,o),
(63,278,qs),
(63,402,o),
(120,479,qs),
(186,567,o),
(307,567,qs),
(380,567,o),
(448,527,qs),
(464,517,o),
(472,506,o),
(469,498,qs),
(468,495,ls),
(465,488,o),
(462,488,qs),
(459,488,o),
(454,491,qs),
(453,492,o),
(452,493,qs),
(382,544,o),
(305,544,qs),
(212,544,o),
(155,481,qs),
(89,409,o),
(89,277,qs),
(89,163,o),
(140,93,qs),
(197,12,o),
(303,12,qs),
(359,12,o),
(441,63,o),
(461,109,qs),
(464,118,o),
(470,118,qs),
(479,118,o),
(479,106,qs),
(479,77,o),
(444,42,qs),
(391,-11,o),
(301,-11,qs),
(200,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 3 2 3 1 2 128 0 3 3 4 97 0 4 4 39 77 0 2 2 0 97 5 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 2 2 0 97 5 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 34 32 20 18 12 10 6 5 0 40 1 40 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(224,556,ls),
(483,556,o),
(483,286,qs),
(483,0,o),
(223,0,qs),
(85,0,ls)
);
},
{
closed = 1;
nodes = (
(457,23,o),
(457,284,qs),
(457,403,o),
(407,463,qs),
(351,533,o),
(224,533,qs),
(108,533,l),
(108,23,l),
(224,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 2 2 1 95 0 1 1 39 77 5 1 3 3 0 95 4 1 0 0 40 0 78 11 11 1 0 11 19 11 18 14 12 5 3 0 10 1 8 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,23,o),
(371,9,qs),
(371,6,ls),
(371,0,o),
(365,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,23,l),
(358,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
12 1 2 3 4 1 0 1 24 1 4 5 3 76 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 36 17 36 17 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,3,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
11 1 2 3 3 1 0 1 2 76 21 18 2 0 73 0 1 0 0 1 0 99 0 2 2 3 95 0 3 3 39 2 78 36 17 36 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 392;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,248,ls),
(277,248,o),
(277,262,qs),
(277,266,ls),
(277,271,o),
(284,271,qs),
(482,271,ls),
(486,271,o),
(486,268,qs),
(486,97,ls),
(486,70,o),
(470,57,qs),
(395,-10,o),
(302,-10,qs),
(198,-10,o),
(135,57,qs),
(63,134,o),
(63,278,qs),
(63,401,o),
(121,478,qs),
(188,567,o),
(307,567,qs),
(384,567,o),
(454,527,qs),
(480,512,o),
(475,498,qs),
(474,495,ls),
(471,488,o),
(468,488,qs),
(465,488,o),
(461,491,qs),
(459,492,o),
(458,493,qs),
(387,544,o),
(305,544,qs),
(212,544,o),
(155,481,qs),
(89,409,o),
(89,277,qs),
(89,162,o),
(139,92,qs),
(196,13,o),
(303,13,qs),
(398,13,o),
(460,81,q),
(460,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 5 4 0 1 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 0 4 5 103 0 1 1 2 97 0 2 2 39 77 0 0 0 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 1 4 2 1 105 0 4 0 5 0 4 5 103 0 0 0 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 38 38 43 38 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,287,l),
(408,287,l),
(408,553,ls),
(408,556,o),
(411,556,qs),
(413,556,ls),
(434,556,o),
(434,528,qs),
(434,3,ls),
(434,0,o),
(431,0,qs),
(411,0,ls),
(408,0,o),
(408,3,qs),
(408,264,l),
(108,264,l),
(108,3,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
21 13 2 2 1 1 76 25 22 5 2 4 0 73 0 2 0 0 2 0 99 3 1 1 1 39 1 78 18 20 24 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,556,o),
(85,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,3,ls),
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
11 3 0 3 0 73 0 0 0 39 0 78 23 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,79,qs),
(21,79,o),
(25,72,q),
(39,39,o),
(70,13,o),
(93,13,qs),
(123,13,o),
(159,52,o),
(159,83,qs),
(159,553,ls),
(159,556,o),
(162,556,qs),
(164,556,ls),
(185,556,o),
(185,528,qs),
(185,87,ls),
(185,44,o),
(134,-11,o),
(95,-11,qs),
(58,-11,o),
(9,35,o),
(9,69,qs),
(9,79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
12 1 3 1 1 76 0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 35 38 20 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 264;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,222,l),
(389,547,ls),
(397,556,o),
(407,556,qs),
(421,556,ls),
(428,556,o),
(423,551,qs),
(235,333,l),
(443,4,ls),
(446,0,o),
(440,0,qs),
(425,0,ls),
(415,0,o),
(408,10,qs),
(218,312,l),
(108,186,l),
(108,3,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
22 21 15 8 1 0 6 0 1 1 76 25 1 0 73 2 1 1 1 39 77 0 0 0 40 0 78 20 53 35 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,23,o),
(331,9,qs),
(331,6,ls),
(331,0,o),
(324,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,23,l),
(317,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
6 1 2 0 1 76 0 0 0 39 77 3 1 2 2 1 95 0 1 1 40 1 78 0 0 0 15 0 14 68 18 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(495,556,o),
(497,556,qs),
(501,556,ls),
(513,556,o),
(515,541,q),
(550,3,ls),
(550,0,o),
(547,0,qs),
(527,0,ls),
(525,0,o),
(525,3,qs),
(493,488,l),
(320,3,l),
(318,0,o),
(316,0,qs),
(293,0,ls),
(290,0,o),
(289,3,qs),
(116,487,l),
(85,3,ls),
(85,0,o),
(82,0,qs),
(62,0,ls),
(59,0,o),
(59,3,qs),
(97,553,ls),
(97,556,o),
(100,556,qs),
(104,556,ls),
(116,556,o),
(120,543,qs),
(305,26,l),
(493,553,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
27 21 20 13 7 5 1 0 1 76 24 10 2 1 73 2 1 0 0 39 77 0 1 1 40 1 78 27 27 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(408,556,o),
(411,556,qs),
(413,556,ls),
(434,556,o),
(434,528,qs),
(434,7,ls),
(434,0,o),
(428,0,qs),
(420,0,ls),
(410,0,o),
(403,10,qs),
(108,491,l),
(108,3,ls),
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(86,556,ls),
(98,556,o),
(111,534,qs),
(408,49,l),
(408,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
25 19 13 7 6 0 6 1 0 1 76 10 1 1 73 2 1 0 0 39 77 0 1 1 40 1 78 20 44 18 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 39 77 5 1 2 2 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(263,556,ls),
(335,556,o),
(380,519,qs),
(433,475,o),
(433,393,qs),
(433,318,o),
(395,275,qs),
(351,226,o),
(265,226,qs),
(108,226,l),
(108,3,ls)
);
},
{
closed = 1;
nodes = (
(320,248,o),
(356,274,qs),
(407,310,o),
(407,393,qs),
(407,453,o),
(374,491,qs),
(336,533,o),
(267,533,qs),
(108,533,l),
(108,248,l),
(263,248,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
16 13 2 0 73 4 1 3 0 0 3 0 99 0 2 2 1 95 0 1 1 39 2 78 19 19 19 29 19 28 42 38 32 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,66,qs),
(63,140,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,152,o),
(474,79,qs),
(417,-8,o),
(299,-10,q),
(332,-83,o),
(394,-83,qs),
(473,-83,o),
(496,-17,qs),
(500,-8,o),
(506,-8,qs),
(514,-8,o),
(514,-20,qs),
(514,-49,o),
(487,-74,qs),
(452,-106,o),
(394,-106,qs),
(302,-106,o),
(270,-9,q),
(175,-1,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 5 3 5 1 3 128 0 2 0 0 2 0 101 0 6 6 4 97 0 4 4 39 77 7 1 5 5 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 5 3 5 1 3 128 0 4 0 6 5 4 6 105 0 2 0 0 2 0 101 7 1 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
31 30 39 37 30 45 31 45 38 17 35 20 33 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(263,556,ls),
(335,556,o),
(380,519,qs),
(433,475,o),
(433,393,qs),
(433,256,o),
(313,231,q),
(444,4,ls),
(446,0,o),
(441,0,qs),
(424,0,ls),
(417,0,o),
(412,8,qs),
(286,227,l),
(279,226,o),
(265,226,qs),
(108,226,l),
(108,3,ls)
);
},
{
closed = 1;
nodes = (
(320,248,o),
(356,274,qs),
(407,310,o),
(407,393,qs),
(407,454,o),
(374,491,qs),
(336,533,o),
(267,533,qs),
(108,533,l),
(108,248,l),
(263,248,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
10 1 0 4 20 1 1 0 2 76 23 1 1 73 5 1 4 0 0 1 4 0 103 0 3 3 2 95 0 2 2 39 77 0 1 1 40 1 78 26 26 26 36 26 35 42 40 35 32 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,119,qs),
(43,119,o),
(46,109,qs),
(59,68,o),
(99,42,qs),
(144,12,o),
(207,12,qs),
(274,12,o),
(315,44,qs),
(360,80,o),
(360,149,qs),
(360,190,o),
(328,219,qs),
(299,245,o),
(219,275,qs),
(130,307,o),
(101,328,qs),
(45,365,o),
(45,424,qs),
(45,483,o),
(88,522,qs),
(136,567,o),
(214,567,qs),
(287,567,o),
(355,527,qs),
(371,517,o),
(379,506,o),
(376,498,qs),
(375,495,ls),
(372,488,o),
(369,488,qs),
(366,488,o),
(362,491,qs),
(360,492,o),
(359,493,qs),
(288,544,o),
(214,544,qs),
(155,544,o),
(116,516,qs),
(71,483,o),
(71,426,qs),
(71,384,o),
(104,356,qs),
(132,331,o),
(213,301,qs),
(300,270,o),
(331,249,qs),
(386,211,o),
(386,150,qs),
(386,82,o),
(344,39,qs),
(296,-11,o),
(209,-11,qs),
(129,-11,o),
(76,29,qs),
(27,66,o),
(27,103,qs),
(27,119,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 1 3 1 4 3 128 0 1 1 2 97 0 2 2 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 1 3 1 4 3 128 0 2 0 1 4 2 1 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 46 44 46 35 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,533,o),
(19,536,qs),
(19,553,ls),
(19,556,o),
(22,556,qs),
(347,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(354,533,qs),
(203,533,l),
(203,3,ls),
(203,0,o),
(200,0,qs),
(180,0,ls),
(177,0,o),
(177,3,qs),
(177,533,l),
(22,533,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
4 1 2 0 73 3 2 2 0 0 1 95 0 1 1 39 0 78 0 0 0 19 0 17 35 39 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 379;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,194,qs),
(78,553,ls),
(78,556,o),
(81,556,qs),
(82,556,ls),
(104,556,o),
(104,528,qs),
(104,191,ls),
(104,13,o),
(255,13,qs),
(323,13,o),
(361,53,qs),
(405,99,o),
(405,192,qs),
(405,553,ls),
(405,556,o),
(407,556,qs),
(410,556,ls),
(431,556,o),
(431,528,qs),
(431,197,ls),
(431,103,o),
(391,50,qs),
(345,-10,o),
(254,-10,qs),
(78,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
23 10 2 2 1 1 76 3 1 1 1 39 77 0 2 2 0 97 4 1 0 0 46 0 78 1 0 20 19 16 14 7 6 0 25 1 25 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,556,o),
(411,556,qs),
(423,556,ls),
(428,556,o),
(427,551,q),
(239,4,l),
(237,0,o),
(233,0,qs),
(222,0,ls),
(218,0,o),
(217,4,qs),
(20,551,ls),
(18,556,o),
(24,556,qs),
(28,556,ls),
(46,556,o),
(54,534,qs),
(228,45,l),
(399,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 37 20 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,556,o),
(376,556,qs),
(378,556,ls),
(394,556,o),
(401,534,qs),
(544,46,l),
(703,547,ls),
(706,556,o),
(715,556,qs),
(728,556,ls),
(734,556,o),
(732,551,qs),
(555,4,ls),
(554,0,o),
(549,0,qs),
(538,0,ls),
(534,0,o),
(533,4,qs),
(383,511,l),
(224,4,l),
(222,0,o),
(218,0,qs),
(208,0,ls),
(204,0,o),
(203,4,qs),
(35,551,ls),
(33,556,o),
(39,556,qs),
(42,556,ls),
(61,556,o),
(68,534,qs),
(214,46,l),
(369,548,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
26 13 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 52 52 22 20 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,0,o),
(33,0,qs),
(18,0,ls),
(14,0,o),
(16,4,qs),
(209,299,l),
(42,552,ls),
(40,556,o),
(44,556,qs),
(52,556,ls),
(68,556,o),
(78,541,qs),
(226,317,l),
(384,548,ls),
(389,556,o),
(397,556,qs),
(412,556,ls),
(416,556,o),
(413,552,qs),
(242,300,l),
(436,4,ls),
(438,0,o),
(433,0,qs),
(417,0,ls),
(409,0,o),
(404,8,qs),
(226,280,l),
(46,8,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
22 21 14 7 4 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 23 36 53 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,556,o),
(19,556,qs),
(23,556,ls),
(41,556,o),
(54,533,qs),
(210,247,l),
(378,547,ls),
(383,556,o),
(392,556,qs),
(404,556,ls),
(410,556,o),
(408,552,qs),
(223,223,l),
(223,3,ls),
(223,0,o),
(220,0,qs),
(200,0,ls),
(197,0,o),
(197,3,qs),
(197,223,l),
(16,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
14 7 4 1 0 5 0 73 1 1 0 0 39 0 78 52 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(387,23,o),
(387,9,qs),
(387,6,ls),
(387,0,o),
(382,0,qs),
(43,0,ls),
(40,0,o),
(40,3,qs),
(40,16,ls),
(40,27,o),
(47,38,qs),
(367,533,l),
(64,533,ls),
(62,533,o),
(62,536,qs),
(62,553,ls),
(62,556,o),
(64,556,qs),
(365,556,ls),
(389,556,o),
(389,536,qs),
(389,532,ls),
(389,524,o),
(377,505,qs),
(64,23,l),
(373,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 1 2 3 1 76 0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 52 51 37 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,-144,o),
(78,-115,o),
(78,-93,qs),
(78,645,ls),
(78,667,o),
(107,696,o),
(129,696,qs),
(224,696,ls),
(226,696,o),
(226,694,qs),
(226,693,ls),
(226,673,o),
(200,673,qs),
(132,673,ls),
(104,673,o),
(104,643,qs),
(104,-91,ls),
(104,-121,o),
(132,-121,qs),
(200,-121,ls),
(226,-121,o),
(226,-142,qs),
(226,-143,ls),
(226,-144,o),
(224,-144,qs),
(129,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 2 0 1 0 2 1 103 0 0 0 3 95 4 1 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 4 1 3 0 3 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 25 0 24 81 51 52 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 282;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,556,o),
(7,556,qs),
(11,556,ls),
(29,556,o),
(37,534,qs),
(261,4,l),
(264,0,o),
(259,0,qs),
(245,0,ls),
(236,0,o),
(233,8,qs),
(3,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 33 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 261;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-144,o),
(56,-143,qs),
(56,-142,ls),
(56,-121,o),
(83,-121,qs),
(150,-121,ls),
(178,-121,o),
(178,-91,qs),
(178,643,ls),
(178,673,o),
(150,673,qs),
(83,673,ls),
(56,673,o),
(56,693,qs),
(56,694,ls),
(56,696,o),
(58,696,qs),
(153,696,ls),
(175,696,o),
(204,667,o),
(204,645,qs),
(204,-93,ls),
(204,-115,o),
(175,-144,o),
(153,-144,qs),
(58,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 21 18 15 12 8 6 0 25 1 22 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 282;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,273,o),
(51,273,qs),
(38,273,ls),
(33,273,o),
(35,278,qs),
(174,551,ls),
(177,556,o),
(181,556,qs),
(194,556,o),
(205,534,qs),
(335,278,ls),
(338,273,o),
(332,273,qs),
(319,273,ls),
(312,273,o),
(307,282,qs),
(185,517,l),
(63,282,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 52 20 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 368;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-8,-145,o),
(-5,-145,qs),
(358,-145,ls),
(361,-145,o),
(361,-148,qs),
(361,-165,ls),
(361,-168,o),
(358,-168,qs),
(-5,-168,ls),
(-8,-168,o),
(-8,-165,qs),
(-8,-148,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 355;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,497,o),
(2,502,o),
(5,502,qs),
(28,502,ls),
(38,502,o),
(49,493,q),
(107,436,ls),
(112,431,o),
(103,431,qs),
(94,431,ls),
(81,431,o),
(69,440,qs),
(2,496,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 35 49 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 107;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
21 1 4 2 14 0 2 3 4 18 15 2 1 3 3 76 0 2 2 42 77 0 4 4 0 97 0 0 0 48 77 5 1 3 3 1 97 0 1 1 49 1 78 28 27 36 34 27 42 28 42 28 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,553,ls),
(68,556,o),
(71,556,qs),
(73,556,ls),
(94,556,o),
(94,528,qs),
(94,284,l),
(109,322,o),
(183,367,o),
(229,367,qs),
(295,367,o),
(340,320,qs),
(392,267,o),
(392,179,qs),
(392,101,o),
(352,50,qs),
(306,-9,o),
(228,-9,qs),
(180,-9,o),
(109,35,o),
(94,74,q),
(94,3,ls)
);
},
{
closed = 1;
nodes = (
(323,53,qs),
(366,98,o),
(366,179,qs),
(366,250,o),
(333,294,qs),
(296,345,o),
(229,345,qs),
(168,345,o),
(133,307,qs),
(92,264,o),
(92,179,qs),
(92,105,o),
(123,62,qs),
(159,13,o),
(228,13,qs),
(286,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
20 1 1 2 14 0 2 3 4 24 21 2 0 3 3 76 0 2 2 39 77 0 4 4 1 97 0 1 1 48 77 5 1 3 3 0 97 0 0 0 49 0 78 28 27 36 34 27 42 28 42 20 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,35,qs),
(49,86,o),
(49,178,qs),
(49,259,o),
(89,309,qs),
(134,367,o),
(214,367,qs),
(261,367,o),
(305,347,qs),
(329,335,o),
(325,323,qs),
(323,319,ls),
(321,314,o),
(318,314,qs),
(315,314,o),
(311,316,qs),
(309,317,o),
(308,318,qs),
(268,345,o),
(214,345,qs),
(154,345,o),
(117,307,qs),
(75,262,o),
(75,178,qs),
(75,106,o),
(107,62,qs),
(143,13,o),
(211,13,qs),
(288,13,o),
(318,82,q),
(324,91,o),
(327,91,qs),
(333,91,o),
(333,81,qs),
(333,56,o),
(309,30,qs),
(273,-9,o),
(209,-9,qs),
(140,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 1 3 2 3 1 2 128 0 3 3 4 97 0 4 4 48 77 0 2 2 0 97 5 1 0 0 49 0 78 1 0 32 30 19 17 11 9 7 5 0 38 1 38 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,556,o),
(350,556,qs),
(352,556,ls),
(373,556,o),
(373,528,qs),
(373,3,ls),
(373,0,o),
(370,0,qs),
(350,0,ls),
(347,0,o),
(347,3,qs),
(347,74,l),
(332,35,o),
(261,-9,o),
(213,-9,qs),
(145,-9,o),
(100,37,qs),
(49,90,o),
(49,179,qs),
(49,255,o),
(89,307,qs),
(136,367,o),
(212,367,qs),
(258,367,o),
(332,321,o),
(347,284,q),
(347,553,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(348,94,o),
(348,179,qs),
(348,253,o),
(318,296,qs),
(282,345,o),
(212,345,qs),
(154,345,o),
(117,305,qs),
(75,260,o),
(75,179,qs),
(75,109,o),
(108,64,qs),
(146,13,o),
(213,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
26 1 0 2 14 0 2 3 4 18 15 2 1 3 3 76 0 2 2 39 77 0 4 4 0 97 0 0 0 48 77 5 1 3 3 1 97 0 1 1 49 1 78 28 27 36 34 27 42 28 42 26 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,101,o),
(107,60,qs),
(142,13,o),
(209,13,qs),
(298,13,o),
(326,81,qs),
(330,89,o),
(335,89,qs),
(342,89,o),
(342,78,qs),
(342,55,o),
(316,30,qs),
(277,-9,o),
(208,-9,qs),
(140,-9,o),
(98,35,qs),
(50,86,o),
(50,178,qs),
(50,256,o),
(87,307,qs),
(130,367,o),
(204,367,qs),
(262,367,o),
(301,326,qs),
(345,279,o),
(345,203,qs),
(345,192,o),
(344,183,qs),
(343,172,o),
(331,172,qs),
(76,172,l)
);
},
{
closed = 1;
nodes = (
(321,257,o),
(293,298,qs),
(261,345,o),
(203,345,qs),
(151,345,o),
(118,310,qs),
(80,271,o),
(76,194,q),
(319,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 3 0 4 0 3 4 128 8 1 6 7 1 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 1 0 31 39 31 39 36 34 27 25 22 21 17 15 9 7 0 30 1 30 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 391;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,337,o),
(18,340,qs),
(18,357,ls),
(18,360,o),
(21,360,qs),
(85,360,l),
(85,477,ls),
(85,556,o),
(156,556,qs),
(180,556,o),
(216,523,o),
(216,502,qs),
(216,490,o),
(210,490,qs),
(204,490,o),
(202,496,qs),
(188,533,o),
(155,533,qs),
(111,533,o),
(111,478,qs),
(111,360,l),
(201,360,ls),
(204,360,o),
(204,357,qs),
(204,340,ls),
(204,337,o),
(201,337,qs),
(111,337,l),
(111,3,ls),
(111,0,o),
(108,0,qs),
(89,0,ls),
(85,0,o),
(85,3,qs),
(85,337,l),
(21,337,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
1 1 0 1 1 76 0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 0 78 0 0 0 35 0 33 18 35 34 34 51 19 19 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 242;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,360,o),
(368,360,qs),
(370,360,ls),
(373,360,o),
(373,357,qs),
(373,-9,ls),
(373,-79,o),
(338,-121,qs),
(296,-170,o),
(213,-170,qs),
(159,-170,o),
(64,-113,o),
(64,-79,qs),
(64,-68,o),
(71,-68,qs),
(76,-68,o),
(80,-74,q),
(97,-109,o),
(166,-148,o),
(211,-148,qs),
(347,-148,o),
(347,-11,qs),
(347,74,l),
(332,35,o),
(261,-9,o),
(213,-9,qs),
(145,-9,o),
(100,37,qs),
(49,90,o),
(49,179,qs),
(49,255,o),
(89,307,qs),
(136,367,o),
(212,367,qs),
(258,367,o),
(332,321,o),
(347,284,q),
(347,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(348,94,o),
(348,179,qs),
(348,253,o),
(318,296,qs),
(282,345,o),
(212,345,qs),
(154,345,o),
(117,305,qs),
(75,260,o),
(75,179,qs),
(75,109,o),
(108,64,qs),
(146,13,o),
(213,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
32 1 7 5 14 0 2 6 7 2 76 0 3 1 2 1 3 2 128 0 5 5 42 77 0 7 7 0 97 0 0 0 48 77 8 1 6 6 1 97 0 1 1 49 77 0 2 2 4 97 0 4 4 50 4 78 39 38 47 45 38 53 39 53 23 35 35 36 38 34 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,367,o),
(224,367,qs),
(283,367,o),
(320,333,qs),
(362,295,o),
(362,227,qs),
(362,3,ls),
(362,0,o),
(359,0,qs),
(339,0,ls),
(336,0,o),
(336,3,qs),
(336,224,ls),
(336,277,o),
(310,309,qs),
(280,345,o),
(222,345,qs),
(169,345,o),
(135,316,qs),
(94,281,o),
(94,217,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,553,ls),
(68,556,o),
(71,556,qs),
(73,556,ls),
(94,556,o),
(94,528,qs),
(94,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 0 1 76 33 24 21 9 6 5 1 73 0 0 0 39 77 0 1 1 2 97 0 2 2 48 1 78 45 45 17 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,464,qs),
(99,464,o),
(99,445,qs),
(99,426,o),
(80,426,qs),
(61,426,o),
(61,445,qs),
(61,464,o)
);
},
{
closed = 1;
nodes = (
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
19 11 8 3 2 73 0 1 0 0 2 1 0 105 0 2 2 42 2 78 24 34 33 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,464,qs),
(98,464,o),
(98,445,qs),
(98,426,o),
(79,426,qs),
(60,426,o),
(60,445,qs),
(60,464,o)
);
},
{
closed = 1;
nodes = (
(24,-147,qs),
(68,-147,o),
(68,-92,qs),
(68,357,ls),
(68,360,o),
(70,360,qs),
(73,360,ls),
(93,360,o),
(93,332,qs),
(93,-93,ls),
(93,-170,o),
(24,-170,qs),
(-1,-170,o),
(-38,-138,o),
(-38,-116,qs),
(-38,-104,o),
(-31,-104,qs),
(-26,-104,o),
(-24,-111,qs),
(-12,-147,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
23 1 2 4 1 76 0 2 4 5 4 2 5 128 0 1 0 0 4 1 0 105 0 4 4 42 77 0 5 5 3 97 0 3 3 50 3 78 37 19 35 34 34 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,553,ls),
(68,556,o),
(71,556,qs),
(73,556,ls),
(94,556,o),
(94,528,qs),
(94,179,l),
(270,351,ls),
(278,360,o),
(290,360,qs),
(301,360,ls),
(303,360,o),
(305,356,o),
(304,355,qs),
(178,231,l),
(322,4,l),
(326,0,o),
(319,0,qs),
(305,0,ls),
(295,0,o),
(289,10,qs),
(160,213,l),
(94,146,l),
(94,3,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
22 1 1 2 23 16 8 1 0 5 0 1 2 76 26 1 0 73 0 2 2 39 77 0 1 1 42 77 0 0 0 40 0 78 20 38 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 338;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,68,qs),
(67,553,ls),
(67,556,o),
(70,556,qs),
(72,556,ls),
(93,556,o),
(93,528,qs),
(93,69,ls),
(93,16,o),
(137,16,qs),
(169,16,o),
(184,51,qs),
(188,59,o),
(191,59,qs),
(198,59,o),
(198,46,qs),
(198,24,o),
(161,-9,o),
(136,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
17 1 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 97 4 1 0 0 49 0 78 1 0 14 13 10 8 5 4 0 19 1 19 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 201;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,367,o),
(220,367,qs),
(318,367,o),
(348,284,q),
(387,367,o),
(484,367,qs),
(543,367,o),
(580,333,qs),
(622,295,o),
(622,227,qs),
(622,3,ls),
(622,0,o),
(619,0,qs),
(600,0,ls),
(596,0,o),
(596,3,qs),
(596,224,ls),
(596,277,o),
(570,309,qs),
(540,345,o),
(482,345,qs),
(430,345,o),
(397,316,qs),
(358,281,o),
(358,217,qs),
(358,3,ls),
(358,0,o),
(355,0,qs),
(335,0,ls),
(332,0,o),
(332,3,qs),
(332,224,ls),
(332,277,o),
(306,309,qs),
(276,345,o),
(218,345,qs),
(165,345,o),
(133,316,qs),
(94,281,o),
(94,217,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
5 1 1 0 52 48 36 21 6 5 3 1 2 76 24 9 2 3 73 0 0 0 42 77 2 1 1 1 4 97 5 1 4 4 48 77 0 3 3 40 3 78 34 38 22 45 45 17 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,367,o),
(224,367,qs),
(283,367,o),
(320,333,qs),
(362,295,o),
(362,227,qs),
(362,3,ls),
(362,0,o),
(359,0,qs),
(339,0,ls),
(336,0,o),
(336,3,qs),
(336,224,ls),
(336,277,o),
(310,309,qs),
(280,345,o),
(222,345,qs),
(169,345,o),
(135,316,qs),
(94,281,o),
(94,217,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 1 0 1 76 33 24 21 9 6 5 1 73 0 0 0 42 77 0 1 1 2 97 0 2 2 48 1 78 45 45 17 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 48 77 5 1 2 2 0 97 4 1 0 0 49 0 78 17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,-160,o),
(91,-160,qs),
(71,-160,ls),
(68,-160,o),
(68,-157,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,284,l),
(109,322,o),
(183,367,o),
(229,367,qs),
(295,367,o),
(340,320,qs),
(392,267,o),
(392,179,qs),
(392,101,o),
(352,50,qs),
(306,-9,o),
(228,-9,qs),
(180,-9,o),
(109,35,o),
(94,74,q),
(94,-157,ls)
);
},
{
closed = 1;
nodes = (
(323,53,qs),
(366,98,o),
(366,179,qs),
(366,250,o),
(333,294,qs),
(296,345,o),
(229,345,qs),
(168,345,o),
(133,307,qs),
(92,264,o),
(92,179,qs),
(92,105,o),
(123,62,qs),
(159,13,o),
(228,13,qs),
(286,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
20 1 4 2 14 0 2 3 4 2 76 24 21 2 0 73 0 2 2 42 77 0 4 4 1 97 0 1 1 48 77 5 1 3 3 0 97 0 0 0 49 0 78 28 27 36 34 27 42 28 42 20 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,360,o),
(368,360,qs),
(370,360,ls),
(373,360,o),
(373,357,qs),
(373,-157,ls),
(373,-160,o),
(370,-160,qs),
(350,-160,ls),
(347,-160,o),
(347,-157,qs),
(347,74,l),
(332,35,o),
(261,-9,o),
(213,-9,qs),
(145,-9,o),
(100,37,qs),
(49,90,o),
(49,179,qs),
(49,255,o),
(89,307,qs),
(136,367,o),
(212,367,qs),
(258,367,o),
(332,321,o),
(347,284,q),
(347,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(348,94,o),
(348,179,qs),
(348,253,o),
(318,296,qs),
(282,345,o),
(212,345,qs),
(154,345,o),
(117,305,qs),
(75,260,o),
(75,179,qs),
(75,109,o),
(108,64,qs),
(146,13,o),
(213,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
21 1 4 2 14 0 2 3 4 2 76 18 15 2 1 73 0 2 2 42 77 0 4 4 0 97 0 0 0 48 77 5 1 3 3 1 97 0 1 1 49 1 78 28 27 36 34 27 42 28 42 28 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,360,o),
(210,360,qs),
(216,360,ls),
(219,360,o),
(219,357,qs),
(219,337,ls),
(219,334,o),
(216,334,qs),
(195,334,ls),
(94,334,o),
(94,200,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
18 5 2 1 0 1 76 23 9 6 3 1 73 0 1 1 0 97 2 1 0 0 42 1 78 22 43 17 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 253;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,313,o),
(250,313,qs),
(247,313,o),
(241,317,q),
(240,317,o),
(240,318,q),
(203,344,o),
(150,344,qs),
(110,344,o),
(62,307,o),
(62,276,qs),
(62,251,o),
(84,234,qs),
(102,218,o),
(156,198,qs),
(213,177,o),
(234,161,qs),
(271,135,o),
(271,96,qs),
(271,52,o),
(240,23,qs),
(205,-11,o),
(149,-11,qs),
(103,-11,o),
(28,42,o),
(28,74,qs),
(28,87,o),
(35,87,qs),
(39,87,o),
(44,78,q),
(73,12,o),
(149,12,qs),
(192,12,o),
(245,55,o),
(245,92,qs),
(245,118,o),
(223,137,qs),
(204,153,o),
(151,173,qs),
(93,195,o),
(72,209,qs),
(36,234,o),
(36,273,qs),
(36,311,o),
(64,337,qs),
(97,367,o),
(150,367,qs),
(199,367,o),
(236,349,qs),
(258,338,o),
(256,324,qs),
(255,319,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 4 1 4 2 1 128 0 4 4 0 97 0 0 0 48 77 0 1 1 3 97 0 3 3 46 3 78 45 35 34 45 35 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,337,o),
(21,340,qs),
(21,357,ls),
(21,360,o),
(24,360,qs),
(92,360,l),
(92,488,ls),
(92,491,o),
(94,491,qs),
(97,491,ls),
(117,491,o),
(117,463,qs),
(117,360,l),
(194,360,ls),
(197,360,o),
(197,357,qs),
(197,340,ls),
(197,337,o),
(194,337,qs),
(117,337,l),
(117,3,ls),
(117,0,o),
(114,0,qs),
(94,0,ls),
(92,0,o),
(92,3,qs),
(92,337,l),
(24,337,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
20 1 1 2 1 76 4 1 2 0 73 0 2 1 2 133 5 4 2 0 0 1 95 3 1 1 1 42 0 78 0 0 0 27 0 25 20 18 51 23 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 228;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,159,qs),
(67,357,ls),
(67,360,o),
(70,360,qs),
(72,360,ls),
(93,360,o),
(93,332,qs),
(93,156,ls),
(93,13,o),
(208,13,qs),
(323,13,o),
(323,156,qs),
(323,357,ls),
(323,360,o),
(326,360,qs),
(328,360,ls),
(349,360,o),
(349,332,qs),
(349,159,ls),
(349,-9,o),
(208,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
19 8 2 2 1 1 76 3 1 1 1 42 77 0 2 2 0 97 4 1 0 0 49 0 78 1 0 16 15 12 10 5 4 0 21 1 21 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,360,o),
(272,360,qs),
(286,360,ls),
(290,360,o),
(288,355,qs),
(168,4,ls),
(167,0,o),
(162,0,qs),
(151,0,ls),
(148,0,o),
(146,4,q),
(21,355,ls),
(19,360,o),
(25,360,qs),
(29,360,ls),
(46,360,o),
(55,338,qs),
(157,45,l),
(261,351,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 52 20 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,360,o),
(248,360,qs),
(250,360,ls),
(266,360,o),
(273,338,qs),
(372,46,l),
(470,351,ls),
(473,360,o),
(482,360,qs),
(493,360,ls),
(497,360,o),
(496,355,q),
(382,4,l),
(380,0,o),
(375,0,qs),
(365,0,ls),
(361,0,o),
(360,4,qs),
(255,317,l),
(154,4,l),
(152,0,o),
(148,0,qs),
(137,0,ls),
(134,0,o),
(132,4,q),
(27,355,ls),
(26,360,o),
(30,360,qs),
(33,360,ls),
(51,360,o),
(59,338,q),
(144,46,l),
(242,353,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
26 13 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 52 37 22 20 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,0,o),
(34,0,qs),
(19,0,ls),
(14,0,o),
(18,5,qs),
(140,191,l),
(32,355,ls),
(28,360,o),
(34,360,qs),
(41,360,ls),
(57,360,o),
(67,345,qs),
(157,209,l),
(254,352,ls),
(260,360,o),
(268,360,qs),
(282,360,ls),
(287,360,o),
(283,355,qs),
(173,192,l),
(298,4,ls),
(301,0,o),
(297,0,qs),
(279,0,ls),
(272,0,o),
(267,8,qs),
(157,173,l),
(47,8,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
21 14 7 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 53 36 53 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,360,o),
(23,360,qs),
(27,360,ls),
(45,360,o),
(53,338,qs),
(153,35,l),
(260,351,ls),
(263,360,o),
(271,360,qs),
(284,360,ls),
(288,360,o),
(287,355,q),
(162,-11,ls),
(128,-112,o),
(87,-170,o),
(51,-170,qs),
(28,-170,o),
(-7,-143,o),
(-7,-125,qs),
(-7,-116,o),
(-1,-116,qs),
(4,-116,o),
(7,-123,qs),
(21,-148,o),
(48,-148,qs),
(75,-148,o),
(108,-96,o),
(141,-2,q),
(19,355,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 97 0 2 2 50 2 78 52 37 35 34 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,23,o),
(293,20,qs),
(293,3,ls),
(293,0,o),
(290,0,qs),
(42,0,ls),
(39,0,o),
(39,3,qs),
(39,21,ls),
(39,28,o),
(45,37,qs),
(262,337,l),
(53,337,ls),
(50,337,o),
(50,340,qs),
(50,357,ls),
(50,360,o),
(53,360,qs),
(262,360,ls),
(288,360,o),
(288,338,qs),
(288,329,o),
(272,308,qs),
(66,23,l),
(290,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 24 0 22 52 51 36 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,-144,o),
(111,-115,o),
(111,-93,qs),
(111,236,ls),
(111,264,o),
(74,264,qs),
(67,264,o),
(67,270,qs),
(67,282,ls),
(67,288,o),
(74,288,qs),
(111,288,o),
(111,317,qs),
(111,645,ls),
(111,667,o),
(140,696,o),
(163,696,qs),
(258,696,ls),
(260,696,o),
(260,694,qs),
(260,693,ls),
(260,673,o),
(233,673,qs),
(166,673,ls),
(138,673,o),
(138,643,qs),
(138,316,ls),
(138,287,o),
(119,277,q),
(118,276,l),
(138,265,o),
(138,237,qs),
(138,-91,ls),
(138,-121,o),
(166,-121,qs),
(233,-121,ls),
(260,-121,o),
(260,-142,qs),
(260,-143,ls),
(260,-144,o),
(258,-144,qs),
(163,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 11 2 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 0 1 3 2 1 103 0 3 0 4 0 3 4 105 0 0 0 5 95 6 1 5 5 44 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 3 2 1 103 0 3 0 4 0 3 4 105 0 0 5 5 0 87 0 0 0 5 95 6 1 5 0 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 41 0 40 20 36 81 57 52 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,564,o),
(81,564,qs),
(82,564,ls),
(104,564,o),
(104,537,qs),
(104,-146,ls),
(104,-149,o),
(101,-149,qs),
(81,-149,ls),
(78,-149,o),
(78,-146,qs),
(78,562,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
3 0 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
23 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 181;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-144,o),
(56,-143,qs),
(56,-142,ls),
(56,-121,o),
(83,-121,qs),
(150,-121,ls),
(178,-121,o),
(178,-91,qs),
(178,237,ls),
(178,265,o),
(197,275,q),
(198,276,l),
(178,288,o),
(178,316,qs),
(178,643,ls),
(178,673,o),
(150,673,qs),
(83,673,ls),
(56,673,o),
(56,693,qs),
(56,694,ls),
(56,696,o),
(58,696,qs),
(153,696,ls),
(175,696,o),
(204,667,o),
(204,645,qs),
(204,317,ls),
(204,288,o),
(242,288,qs),
(249,288,o),
(249,282,qs),
(249,270,ls),
(249,264,o),
(242,264,qs),
(204,264,o),
(204,236,qs),
(204,-93,ls),
(204,-115,o),
(175,-144,o),
(153,-144,qs),
(58,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
29 9 2 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 4 2 3 4 103 0 2 0 1 5 2 1 105 0 5 5 0 95 6 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 4 2 3 4 103 0 2 0 1 5 2 1 105 0 5 0 0 5 87 0 5 5 0 95 6 1 0 5 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 37 34 25 22 18 16 12 11 7 5 0 41 1 38 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,286,o),
(318,283,qs),
(318,271,ls),
(318,261,o),
(312,257,qs),
(280,236,o),
(243,236,qs),
(222,236,o),
(189,246,qs),
(148,259,o),
(128,259,qs),
(104,259,o),
(77,248,o),
(60,231,q),
(54,223,o),
(54,233,qs),
(54,246,ls),
(54,255,o),
(60,259,qs),
(91,283,o),
(128,283,qs),
(150,283,o),
(183,273,qs),
(224,259,o),
(243,259,qs),
(281,259,o),
(312,285,qs),
(314,287,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
25 1 1 74 0 1 0 2 0 1 2 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 372;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,367,o),
(61,367,qs),
(73,367,o),
(92,348,o),
(92,335,qs),
(92,322,o),
(73,304,o),
(61,304,qs),
(48,304,o),
(30,322,o),
(30,335,qs),
(30,348,o)
);
},
{
closed = 1;
nodes = (
(49,228,o),
(52,228,qs),
(73,228,o),
(73,200,qs),
(74,-204,ls),
(74,-207,o),
(72,-207,qs),
(49,-207,ls),
(47,-207,o),
(47,-204,qs),
(49,224,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
22 15 12 3 2 73 0 2 0 2 134 0 0 0 1 97 0 1 1 48 0 78 25 36 34 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 126;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,-64,o),
(212,-64,qs),
(194,-64,ls),
(191,-64,o),
(191,-62,qs),
(191,-9,l),
(127,-4,o),
(89,40,qs),
(45,90,o),
(45,178,qs),
(45,253,o),
(80,302,qs),
(120,358,o),
(191,366,q),
(191,419,ls),
(191,422,o),
(194,422,qs),
(212,422,ls),
(214,422,o),
(214,419,qs),
(214,367,l),
(258,365,o),
(300,347,qs),
(324,335,o),
(320,323,qs),
(319,319,ls),
(317,314,o),
(314,314,qs),
(311,314,o),
(306,316,q),
(305,317,o),
(304,318,qs),
(267,343,o),
(214,345,q),
(214,13,l),
(286,16,o),
(314,82,q),
(319,91,o),
(323,91,qs),
(329,91,o),
(329,81,qs),
(329,56,o),
(307,31,qs),
(274,-6,o),
(214,-9,q),
(214,-62,ls)
);
},
{
closed = 1;
nodes = (
(138,338,o),
(107,300,qs),
(71,256,o),
(71,178,qs),
(71,111,o),
(99,68,qs),
(131,20,o),
(191,14,q),
(191,344,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
54 1 3 46 1 2 2 75 31 28 25 3 4 74 43 40 39 3 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 3 2 3 1 2 128 0 3 3 4 97 0 4 4 48 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 3 2 3 1 2 128 0 3 3 4 97 0 4 4 48 77 0 2 2 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
27 17 18 36 16 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,23,o),
(416,9,qs),
(416,6,ls),
(416,0,o),
(409,0,qs),
(61,0,ls),
(58,0,o),
(58,3,qs),
(58,20,ls),
(58,23,o),
(61,23,qs),
(130,23,l),
(176,126,o),
(176,190,qs),
(176,226,o),
(151,272,q),
(61,272,ls),
(58,272,o),
(58,276,qs),
(58,292,ls),
(58,295,o),
(61,295,qs),
(139,295,l),
(96,368,o),
(96,417,qs),
(96,480,o),
(135,520,qs),
(180,567,o),
(261,567,qs),
(327,567,o),
(389,533,qs),
(412,520,o),
(409,508,q),
(407,504,l),
(406,498,o),
(403,498,qs),
(400,498,o),
(396,501,qs),
(394,502,o),
(393,503,qs),
(330,544,o),
(262,544,qs),
(203,544,o),
(165,514,qs),
(121,479,o),
(121,417,qs),
(121,389,o),
(138,345,o),
(167,295,q),
(346,295,ls),
(360,295,o),
(360,281,qs),
(360,278,ls),
(360,272,o),
(353,272,qs),
(179,272,l),
(202,228,o),
(202,190,qs),
(202,131,o),
(162,35,qs),
(158,26,o),
(156,23,q),
(402,23,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
4 1 1 5 1 0 6 1 0 103 0 2 2 3 97 0 3 3 39 77 9 8 2 6 6 7 95 0 7 7 40 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 2 1 3 2 105 4 1 1 5 1 0 6 1 0 103 9 8 2 6 6 7 95 0 7 7 40 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 62 0 61 67 20 21 21 43 38 35 38 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,146,o),
(44,149,qs),
(44,166,ls),
(44,169,o),
(47,169,qs),
(197,169,l),
(197,223,l),
(176,261,l),
(47,261,ls),
(44,261,o),
(44,264,qs),
(44,281,ls),
(44,284,o),
(47,284,qs),
(163,284,l),
(16,552,ls),
(14,556,o),
(19,556,qs),
(23,556,ls),
(41,556,o),
(54,533,qs),
(210,247,l),
(378,547,ls),
(383,556,o),
(392,556,qs),
(404,556,ls),
(409,556,o),
(408,552,q),
(258,284,l),
(373,284,ls),
(376,284,o),
(376,281,qs),
(376,264,ls),
(376,261,o),
(373,261,qs),
(244,261,l),
(223,223,l),
(223,169,l),
(373,169,ls),
(376,169,o),
(376,166,qs),
(376,149,ls),
(376,146,o),
(373,146,qs),
(223,146,l),
(223,3,ls),
(223,0,o),
(220,0,qs),
(200,0,ls),
(197,0,o),
(197,3,qs),
(197,146,l),
(47,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
45 30 15 3 1 2 1 76 4 1 2 0 73 6 1 3 7 1 2 1 3 2 103 8 1 1 10 9 2 0 1 0 99 5 1 4 4 39 4 78 0 0 0 52 0 50 18 51 18 52 35 51 18 51 23 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,564,o),
(81,564,qs),
(82,564,ls),
(104,564,o),
(104,537,qs),
(104,273,ls),
(104,271,o),
(101,271,qs),
(81,271,ls),
(78,271,o),
(78,273,qs),
(78,562,ls)
);
},
{
closed = 1;
nodes = (
(78,145,o),
(81,145,qs),
(101,145,ls),
(104,145,o),
(104,142,qs),
(104,-146,ls),
(104,-149,o),
(101,-149,qs),
(81,-149,ls),
(78,-149,o),
(78,-146,qs),
(78,142,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
21 18 15 12 3 0 6 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
23 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 181;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,8,qs),
(314,-33,o),
(285,-62,qs),
(249,-97,o),
(189,-97,qs),
(142,-97,o),
(68,-46,o),
(68,-14,qs),
(68,-2,o),
(75,-2,qs),
(80,-2,o),
(84,-11,qs),
(116,-74,o),
(188,-74,qs),
(234,-74,o),
(289,-30,o),
(289,6,qs),
(289,36,o),
(266,61,qs),
(247,82,o),
(189,116,qs),
(129,152,o),
(106,175,qs),
(67,213,o),
(67,262,qs),
(67,349,o),
(161,393,q),
(127,417,o),
(99,456,o),
(99,482,qs),
(99,517,o),
(126,541,qs),
(157,567,o),
(210,567,qs),
(255,567,o),
(290,549,qs),
(315,538,o),
(310,525,qs),
(309,521,ls),
(308,515,o),
(304,515,qs),
(301,515,o),
(296,519,qs),
(295,520,l),
(256,544,o),
(210,544,qs),
(170,544,o),
(125,511,o),
(125,483,qs),
(125,441,o),
(198,399,qs),
(265,360,o),
(278,350,qs),
(331,310,o),
(331,258,qs),
(331,179,o),
(228,117,q),
(314,65,o)
);
},
{
closed = 1;
nodes = (
(305,222,o),
(305,257,qs),
(305,295,o),
(265,328,qs),
(246,345,o),
(180,381,q),
(93,343,o),
(93,263,qs),
(93,222,o),
(115,195,qs),
(137,169,o),
(207,129,q),
(251,152,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
64 30 2 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 3 0 5 3 5 101 0 0 0 2 97 0 2 2 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
53 51 48 46 44 42 37 35 42 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,464,qs),
(38,464,o),
(38,445,qs),
(38,426,o),
(19,426,qs),
(0,426,o),
(0,445,qs),
(0,464,o)
);
},
{
closed = 1;
nodes = (
(109,464,qs),
(128,464,o),
(128,445,qs),
(128,426,o),
(109,426,qs),
(91,426,o),
(91,445,qs),
(91,464,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 34 34 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 128;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,494,qs),
(152,563,o),
(260,563,qs),
(353,563,o),
(414,509,qs),
(483,447,o),
(483,340,qs),
(483,246,o),
(429,186,qs),
(367,117,o),
(260,117,qs),
(166,117,o),
(106,171,qs),
(37,232,o),
(37,340,qs),
(37,434,o)
);
},
{
closed = 1;
nodes = (
(400,184,qs),
(463,240,o),
(463,340,qs),
(463,426,o),
(414,480,qs),
(358,544,o),
(260,544,qs),
(175,544,o),
(120,495,qs),
(58,438,o),
(58,340,qs),
(58,253,o),
(106,199,qs),
(162,136,o),
(260,136,qs),
(346,136,o)
);
},
{
closed = 1;
nodes = (
(191,247,qs),
(158,280,o),
(158,340,qs),
(158,395,o),
(216,461,o),
(264,461,qs),
(298,461,o),
(324,444,qs),
(335,438,o),
(333,429,qs),
(332,424,ls),
(331,418,o),
(328,418,qs),
(327,418,o),
(324,420,qs),
(322,422,o),
(321,422,q),
(296,441,o),
(264,441,qs),
(223,441,o),
(179,388,o),
(179,340,qs),
(179,292,o),
(223,238,o),
(261,238,qs),
(310,238,o),
(329,272,q),
(332,276,o),
(334,276,qs),
(339,276,o),
(339,268,qs),
(339,255,o),
(323,240,qs),
(299,219,o),
(261,219,qs),
(218,219,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 78 values pushed */
0 5 7 6 7 5 6 128 0 1 0 3 8 1 3 105 0 8 0 7 5 8 7 105 0 6 10 1 4 2 6 4 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 33 32 17 16 62 60 49 47 43 41 39 37 32 67 33 67 25 23 16 31 17 31 38 35 11 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 520;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,548,o),
(275,548,qs),
(278,548,ls),
(280,548,o),
(280,546,qs),
(280,264,ls),
(280,261,o),
(278,261,qs),
(261,261,ls),
(258,261,o),
(258,264,qs),
(258,319,l),
(231,254,o),
(153,254,qs),
(98,254,o),
(62,290,qs),
(22,331,o),
(22,403,qs),
(22,465,o),
(54,506,qs),
(90,553,o),
(151,553,qs),
(188,553,o),
(246,519,o),
(258,490,q),
(258,526,ls)
);
},
{
closed = 1;
nodes = (
(227,303,qs),
(258,337,o),
(258,403,qs),
(258,534,o),
(151,534,qs),
(106,534,o),
(77,503,qs),
(44,468,o),
(44,403,qs),
(44,349,o),
(70,314,qs),
(100,274,o),
(153,274,qs),
(200,274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
20 1 4 2 13 0 2 3 4 17 14 2 1 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 55 77 0 4 4 0 97 0 0 0 55 77 5 1 3 3 1 97 0 1 1 56 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
5 1 3 0 1 3 1 101 0 2 2 55 77 0 4 4 0 97 0 0 0 55 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 4 0 2 4 128 5 1 3 0 1 3 1 101 0 4 4 0 97 0 0 0 55 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 4 0 2 4 128 0 0 0 4 3 0 4 105 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
27 26 35 33 26 39 27 39 27 38 34 6 10 25 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,40,o),
(163,40,qs),
(149,40,ls),
(140,40,o),
(135,48,q),
(40,170,ls),
(33,178,o),
(33,184,qs),
(33,190,o),
(40,198,qs),
(135,320,l),
(140,328,o),
(149,328,qs),
(163,328,ls),
(167,328,o),
(164,323,q),
(55,184,l),
(164,45,l)
);
},
{
closed = 1;
nodes = (
(272,40,o),
(267,40,qs),
(252,40,ls),
(245,40,o),
(240,48,q),
(144,170,ls),
(137,178,o),
(137,184,qs),
(137,189,o),
(144,198,qs),
(240,320,l),
(245,328,o),
(252,328,qs),
(267,328,ls),
(272,328,o),
(269,323,q),
(159,184,l),
(269,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 133 3 1 1 1 118 40 53 40 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 300;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,214,o),
(49,214,qs),
(253,214,ls),
(256,214,o),
(256,212,qs),
(256,195,ls),
(256,192,o),
(253,192,qs),
(49,192,ls),
(46,192,o),
(46,195,qs),
(46,212,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,494,qs),
(152,563,o),
(260,563,qs),
(353,563,o),
(414,509,qs),
(483,447,o),
(483,340,qs),
(483,246,o),
(429,186,qs),
(367,117,o),
(260,117,qs),
(166,117,o),
(106,171,qs),
(37,232,o),
(37,340,qs),
(37,434,o)
);
},
{
closed = 1;
nodes = (
(400,184,qs),
(463,240,o),
(463,340,qs),
(463,426,o),
(414,480,qs),
(358,544,o),
(260,544,qs),
(175,544,o),
(120,495,qs),
(58,438,o),
(58,340,qs),
(58,253,o),
(106,199,qs),
(162,136,o),
(260,136,qs),
(346,136,o)
);
},
{
closed = 1;
nodes = (
(209,224,o),
(207,224,qs),
(190,224,ls),
(188,224,o),
(188,228,qs),
(188,456,ls),
(188,458,o),
(190,458,qs),
(269,458,ls),
(305,458,o),
(346,420,o),
(346,387,qs),
(346,335,o),
(296,318,q),
(348,228,l),
(351,224,o),
(346,224,qs),
(331,224,ls),
(326,224,o),
(323,229,qs),
(274,315,l),
(209,315,l),
(209,228,ls)
);
},
{
closed = 1;
nodes = (
(325,335,o),
(325,388,qs),
(325,412,o),
(297,439,o),
(273,439,qs),
(209,439,l),
(209,335,l),
(270,335,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
40 1 4 8 49 1 5 4 2 76 52 1 5 1 75 0 5 4 2 4 5 2 128 0 1 0 3 6 1 3 105 0 6 0 7 8 6 7 103 10 1 8 0 4 5 8 4 103 9 1 2 0 0 2 89 9 1 2 2 0 97 0 0 2 0 81 55 55 17 16 55 62 55 61 58 56 46 44 37 35 33 32 25 23 16 31 17 31 38 35 11 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 520;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,453,o),
(3,453,qs),
(173,453,ls),
(176,453,o),
(176,450,qs),
(176,433,ls),
(176,431,o),
(173,431,qs),
(3,431,ls),
(0,431,o),
(0,433,qs),
(0,450,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 176;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,428,o),
(29,475,qs),
(29,522,o),
(86,579,o),
(132,579,qs),
(178,579,o),
(236,522,o),
(236,475,qs),
(236,428,o),
(179,371,o),
(132,371,qs),
(85,371,o)
);
},
{
closed = 1;
nodes = (
(212,437,o),
(212,475,qs),
(212,514,o),
(169,558,o),
(132,558,qs),
(95,558,o),
(53,514,o),
(53,475,qs),
(53,437,o),
(96,392,o),
(132,392,qs),
(169,392,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 264;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,262,o),
(46,266,qs),
(46,282,ls),
(46,285,o),
(49,285,qs),
(184,285,l),
(184,440,ls),
(184,443,o),
(187,443,qs),
(207,443,o),
(207,416,qs),
(207,285,l),
(339,285,ls),
(342,285,o),
(342,282,qs),
(342,266,ls),
(342,262,o),
(339,262,qs),
(207,262,l),
(207,106,ls),
(207,103,o),
(204,103,qs),
(187,103,ls),
(184,103,o),
(184,106,qs),
(184,262,l),
(49,262,ls)
);
},
{
closed = 1;
nodes = (
(46,0,o),
(46,3,qs),
(46,20,ls),
(46,23,o),
(49,23,qs),
(328,23,ls),
(342,23,o),
(342,9,qs),
(342,6,ls),
(342,0,o),
(335,0,qs),
(49,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
24 10 2 0 1 4 1 2 6 0 2 76 0 2 1 2 133 3 1 1 7 4 2 0 6 1 0 103 0 6 6 5 95 8 1 5 5 40 5 78 28 27 0 0 33 31 27 38 28 36 0 26 0 26 19 18 51 23 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,258,o),
(231,247,qs),
(231,242,ls),
(231,238,o),
(227,238,qs),
(41,238,ls),
(38,238,o),
(38,242,qs),
(38,290,o),
(68,324,qs),
(85,345,o),
(131,375,qs),
(176,405,o),
(207,445,o),
(207,472,qs),
(207,542,o),
(132,542,qs),
(90,542,o),
(56,516,qs),
(55,515,o),
(54,514,q),
(50,512,o),
(48,512,qs),
(46,512,o),
(44,516,qs),
(43,520,ls),
(40,532,o),
(57,542,qs),
(93,562,o),
(135,562,qs),
(180,562,o),
(230,514,o),
(230,472,qs),
(230,444,o),
(212,420,qs),
(197,398,o),
(155,369,qs),
(97,329,o),
(63,289,o),
(62,258,q),
(214,258,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
37 32 2 2 3 1 76 0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 40 0 39 26 43 41 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,327,qs),
(240,286,o),
(183,233,o),
(139,233,qs),
(100,233,o),
(41,271,o),
(41,296,qs),
(41,307,o),
(47,307,qs),
(50,307,o),
(53,301,qs),
(77,253,o),
(137,253,qs),
(173,253,o),
(217,292,o),
(217,325,qs),
(217,359,o),
(172,398,o),
(132,398,qs),
(102,398,ls),
(85,398,o),
(85,409,qs),
(85,413,ls),
(85,417,o),
(89,417,qs),
(140,417,ls),
(173,417,o),
(210,449,o),
(210,478,qs),
(210,542,o),
(135,542,qs),
(100,542,o),
(60,515,qs),
(56,512,o),
(53,512,qs),
(51,512,o),
(49,516,qs),
(46,521,ls),
(41,530,o),
(58,539,qs),
(95,562,o),
(135,562,qs),
(180,562,o),
(231,518,o),
(231,480,qs),
(231,426,o),
(177,407,q),
(240,390,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
12 1 2 1 24 1 3 2 2 76 0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 58 6 78 35 34 36 52 35 41 36 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,431,o),
(15,431,qs),
(6,431,ls),
(3,431,o),
(1,434,o),
(3,436,qs),
(61,493,ls),
(69,502,o),
(82,502,qs),
(104,502,ls),
(107,502,o),
(109,497,o),
(107,496,q),
(40,440,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 37 35 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 107;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,0,o),
(233,0,qs),
(214,0,ls),
(211,0,o),
(211,3,qs),
(211,221,l),
(145,221,o),
(99,260,qs),
(45,306,o),
(45,382,qs),
(45,455,o),
(81,499,qs),
(129,556,o),
(231,556,qs),
(303,556,ls),
(322,556,o),
(335,541,o),
(335,520,qs),
(335,3,ls),
(335,0,o),
(332,0,qs),
(312,0,ls),
(309,0,o),
(309,3,qs),
(309,533,l),
(237,533,l),
(237,3,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 24 21 5 2 5 2 73 0 2 0 2 134 0 0 0 1 95 0 1 1 39 0 78 22 57 16 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 413;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,311,o),
(81,311,qs),
(93,311,o),
(112,292,o),
(112,279,qs),
(112,267,o),
(93,248,o),
(81,248,qs),
(68,248,o),
(50,267,o),
(50,279,qs),
(50,292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,-88,o),
(4,-82,qs),
(52,-9,ls),
(61,5,o),
(74,5,qs),
(83,5,ls),
(89,5,o),
(85,-1,q),
(46,-79,ls),
(41,-88,o),
(25,-88,qs),
(7,-88,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 1 0 7 4 0 11 1 10 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 83;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,527,ls),
(31,531,o),
(35,533,qs),
(76,551,ls),
(87,556,o),
(99,556,qs),
(106,556,ls),
(120,556,o),
(120,537,qs),
(120,242,ls),
(120,238,o),
(117,238,qs),
(100,238,ls),
(97,238,o),
(97,242,qs),
(97,538,l),
(34,510,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
16 15 6 1 0 5 0 1 1 76 0 1 1 55 77 0 0 0 56 0 78 52 19 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,290,qs),
(22,332,o),
(22,403,qs),
(22,466,o),
(54,507,qs),
(91,553,o),
(153,553,qs),
(209,553,o),
(246,518,qs),
(289,476,o),
(289,404,qs),
(289,342,o),
(256,301,qs),
(218,254,o),
(154,254,qs),
(99,254,o)
);
},
{
closed = 1;
nodes = (
(231,305,qs),
(266,340,o),
(266,403,qs),
(266,459,o),
(239,494,qs),
(208,534,o),
(153,534,qs),
(107,534,o),
(78,504,qs),
(44,469,o),
(44,404,qs),
(44,348,o),
(70,313,qs),
(100,274,o),
(153,274,qs),
(201,274,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 55 77 5 1 2 2 0 97 4 1 0 0 56 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 4 1 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 310;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,328,o),
(35,328,qs),
(50,328,ls),
(58,328,o),
(63,320,q),
(158,198,ls),
(165,189,o),
(165,184,qs),
(165,179,o),
(158,170,qs),
(63,48,l),
(58,40,o),
(50,40,qs),
(35,40,ls),
(31,40,o),
(34,45,q),
(143,184,l),
(34,323,l)
);
},
{
closed = 1;
nodes = (
(136,328,o),
(139,328,qs),
(154,328,ls),
(162,328,o),
(167,320,q),
(263,198,ls),
(269,189,o),
(269,184,qs),
(269,178,o),
(263,170,qs),
(167,48,l),
(162,40,o),
(154,40,qs),
(139,40,ls),
(136,40,o),
(138,45,q),
(248,184,l),
(138,323,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
3 1 1 0 1 133 2 1 0 0 118 40 53 40 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 300;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,527,ls),
(31,531,o),
(35,533,qs),
(76,551,ls),
(87,556,o),
(99,556,qs),
(106,556,ls),
(120,556,o),
(120,537,qs),
(120,242,ls),
(120,238,o),
(117,238,qs),
(100,238,ls),
(97,238,o),
(97,242,qs),
(97,538,l),
(34,510,l)
);
},
{
closed = 1;
nodes = (
(86,0,o),
(89,4,q),
(393,549,l),
(396,556,o),
(401,556,qs),
(410,556,o),
(412,538,o),
(405,525,qs),
(118,8,ls),
(113,0,o),
(105,0,qs),
(91,0,ls)
);
},
{
closed = 1;
nodes = (
(272,83,o),
(272,87,qs),
(272,97,ls),
(272,107,o),
(277,116,q),
(406,305,ls),
(414,317,o),
(426,317,qs),
(433,317,ls),
(447,317,o),
(447,298,qs),
(447,103,l),
(474,103,ls),
(492,103,o),
(492,92,qs),
(492,87,ls),
(492,83,o),
(488,83,qs),
(447,83,l),
(447,3,ls),
(447,0,o),
(444,0,qs),
(427,0,ls),
(424,0,o),
(424,3,qs),
(424,83,l),
(275,83,ls)
);
},
{
closed = 1;
nodes = (
(424,296,l),
(292,103,l),
(424,103,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 102 values pushed */
16 15 0 3 6 1 59 6 1 3 0 6 55 41 2 4 5 32 1 2 4 4 76 35 1 2 73 3 1 1 6 1 133 0 6 0 6 133 0 0 5 0 133 9 1 2 4 2 134 11 8 2 5 4 4 5 89 11 8 2 5 5 4 95 10 7 2 4 5 4 79 58 58 31 31 20 19 58 60 58 60 31 57 31 57 50 47 45 43 39 38 25 24 19 30 20 29 52 19 12 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 529;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,527,ls),
(31,531,o),
(35,533,qs),
(76,551,ls),
(87,556,o),
(99,556,qs),
(106,556,ls),
(120,556,o),
(120,537,qs),
(120,242,ls),
(120,238,o),
(117,238,qs),
(100,238,ls),
(97,238,o),
(97,242,qs),
(97,538,l),
(34,510,l)
);
},
{
closed = 1;
nodes = (
(86,0,o),
(89,4,q),
(393,549,l),
(396,556,o),
(401,556,qs),
(410,556,o),
(412,538,o),
(405,525,qs),
(118,8,ls),
(113,0,o),
(105,0,qs),
(91,0,ls)
);
},
{
closed = 1;
nodes = (
(543,20,o),
(543,8,qs),
(543,4,ls),
(543,0,o),
(539,0,qs),
(353,0,ls),
(350,0,o),
(350,3,qs),
(350,51,o),
(380,86,qs),
(398,107,o),
(443,137,qs),
(489,167,o),
(519,206,o),
(519,233,qs),
(519,303,o),
(445,303,qs),
(403,303,o),
(368,277,qs),
(367,276,ls),
(362,273,o),
(360,273,qs),
(358,273,o),
(356,277,qs),
(355,281,ls),
(352,293,o),
(369,303,qs),
(405,323,o),
(447,323,qs),
(492,323,o),
(542,276,o),
(542,233,qs),
(542,205,o),
(525,181,qs),
(509,159,o),
(468,130,qs),
(409,90,o),
(375,50,o),
(374,20,q),
(526,20,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 84 values pushed */
16 15 0 3 4 1 6 1 2 0 5 67 1 2 7 3 76 3 1 1 4 1 133 0 0 5 7 5 0 7 128 0 4 0 5 0 4 5 105 9 1 7 2 2 7 87 9 1 7 7 2 97 6 8 2 2 7 2 81 31 31 20 19 31 70 31 69 65 62 54 52 42 40 25 24 19 30 20 29 52 19 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 612;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,327,qs),
(240,286,o),
(183,233,o),
(139,233,qs),
(100,233,o),
(41,271,o),
(41,296,qs),
(41,307,o),
(47,307,qs),
(50,307,o),
(53,301,qs),
(77,253,o),
(137,253,qs),
(173,253,o),
(217,292,o),
(217,325,qs),
(217,359,o),
(172,398,o),
(132,398,qs),
(102,398,ls),
(85,398,o),
(85,409,qs),
(85,413,ls),
(85,417,o),
(89,417,qs),
(140,417,ls),
(173,417,o),
(210,449,o),
(210,478,qs),
(210,542,o),
(135,542,qs),
(100,542,o),
(60,515,qs),
(56,512,o),
(53,512,qs),
(51,512,o),
(49,516,qs),
(46,521,ls),
(41,530,o),
(58,539,qs),
(95,562,o),
(135,562,qs),
(180,562,o),
(231,518,o),
(231,480,qs),
(231,426,o),
(177,407,q),
(240,390,o)
);
},
{
closed = 1;
nodes = (
(162,0,o),
(164,4,qs),
(469,549,l),
(471,556,o),
(477,556,qs),
(485,556,o),
(488,538,o),
(480,525,qs),
(193,8,ls),
(189,0,o),
(180,0,qs),
(167,0,ls)
);
},
{
closed = 1;
nodes = (
(347,83,o),
(347,87,qs),
(347,97,ls),
(347,107,o),
(352,116,q),
(482,305,ls),
(490,317,o),
(502,317,qs),
(508,317,ls),
(522,317,o),
(522,298,qs),
(522,103,l),
(550,103,ls),
(567,103,o),
(567,92,qs),
(567,87,ls),
(567,83,o),
(563,83,qs),
(522,83,l),
(522,3,ls),
(522,0,o),
(519,0,qs),
(502,0,ls),
(499,0,o),
(499,3,qs),
(499,83,l),
(350,83,ls)
);
},
{
closed = 1;
nodes = (
(499,296,l),
(367,103,l),
(499,103,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 138 values pushed */
12 1 2 1 24 1 3 2 88 1 4 5 84 70 2 9 10 61 1 7 9 5 76 64 1 7 73 0 8 0 1 0 8 1 128 0 11 3 5 3 11 5 128 0 5 4 3 5 4 126 14 1 7 9 7 134 0 0 0 1 2 0 1 105 0 2 0 3 11 2 3 105 0 4 0 6 10 4 6 105 16 13 2 10 9 9 10 89 16 13 2 10 10 9 95 15 12 2 9 10 9 79 87 87 60 60 49 48 87 89 87 89 60 86 60 86 79 76 74 72 68 67 54 53 48 59 49 59 35 34 36 52 35 41 36 17 9 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 605;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,323,o),
(150,336,qs),
(150,349,o),
(169,367,o),
(181,367,qs),
(194,367,o),
(212,349,o),
(212,336,qs),
(212,323,o),
(194,304,o),
(181,304,qs),
(169,304,o)
);
},
{
closed = 1;
nodes = (
(42,16,qs),
(61,42,o),
(108,81,qs),
(136,105,o),
(144,112,qs),
(168,133,o),
(168,165,qs),
(168,224,ls),
(168,228,o),
(171,228,qs),
(172,228,ls),
(194,228,o),
(194,200,qs),
(194,159,ls),
(194,122,o),
(140,78,qs),
(92,39,o),
(79,26,qs),
(39,-17,o),
(39,-71,qs),
(39,-125,o),
(72,-158,qs),
(109,-195,o),
(178,-195,qs),
(252,-195,o),
(312,-153,qs),
(313,-152,o),
(314,-152,q),
(319,-148,o),
(321,-148,qs),
(324,-148,o),
(326,-152,qs),
(331,-161,ls),
(334,-166,o),
(329,-170,qs),
(263,-218,o),
(176,-218,qs),
(107,-218,o),
(64,-184,qs),
(13,-144,o),
(13,-71,qs),
(13,-24,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
45 23 2 3 4 1 76 0 4 0 3 0 4 3 128 0 3 0 2 3 2 101 5 1 0 0 1 97 0 1 1 48 0 78 1 0 42 41 30 28 17 15 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,686,o),
(174,691,o),
(176,691,qs),
(199,691,ls),
(210,691,o),
(220,682,qs),
(278,625,ls),
(284,619,o),
(275,619,qs),
(266,619,ls),
(253,619,o),
(241,629,qs),
(174,685,l)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
34 1 6 4 1 76 0 1 0 1 133 0 0 4 0 133 7 1 6 0 2 3 6 2 103 0 4 4 39 77 5 1 3 3 40 3 78 33 33 33 35 33 35 23 20 34 20 35 49 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,619,o),
(197,619,qs),
(188,619,ls),
(179,619,o),
(185,625,qs),
(242,682,ls),
(251,691,o),
(264,691,qs),
(286,691,ls),
(289,691,o),
(291,686,o),
(289,685,q),
(222,629,ls)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
34 1 6 4 1 76 0 0 1 0 133 0 1 4 1 133 7 1 6 0 2 3 6 2 103 0 4 4 39 77 5 1 3 3 40 3 78 33 33 33 35 33 35 23 20 34 18 51 35 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,619,o),
(155,619,qs),
(147,619,ls),
(138,619,o),
(145,625,qs),
(202,682,ls),
(211,691,o),
(223,691,qs),
(240,691,ls),
(252,691,o),
(261,682,qs),
(319,625,l),
(324,619,o),
(315,619,qs),
(307,619,ls),
(293,619,o),
(282,629,qs),
(232,675,l),
(180,629,ls)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
40 1 7 5 1 76 0 1 0 1 133 2 1 0 5 0 133 8 1 7 0 3 4 7 3 103 0 5 5 39 77 6 1 4 4 40 4 78 39 39 39 41 39 41 23 20 34 18 51 51 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,616,o),
(144,621,qs),
(146,664,o),
(185,664,qs),
(197,664,o),
(225,652,qs),
(259,637,o),
(269,637,qs),
(285,637,o),
(289,654,qs),
(290,662,o),
(296,662,qs),
(311,662,ls),
(317,662,o),
(315,656,q),
(308,614,o),
(269,614,qs),
(254,614,o),
(221,629,qs),
(195,641,o),
(185,641,qs),
(173,641,o),
(170,624,qs),
(169,616,o),
(164,616,qs),
(147,616,ls)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
23 1 1 3 47 1 10 8 2 76 4 1 2 0 0 3 2 0 105 0 3 11 5 2 1 8 3 1 106 12 1 10 0 6 7 10 6 103 0 8 8 39 77 9 1 7 7 40 7 78 46 46 0 0 46 48 46 48 44 43 36 35 31 29 27 26 0 25 0 25 34 35 34 34 35 13 9 27 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(184,653,qs),
(203,653,o),
(203,634,qs),
(203,615,o),
(184,615,qs),
(165,615,o),
(165,634,qs),
(165,653,o)
);
},
{
closed = 1;
nodes = (
(275,653,qs),
(294,653,o),
(294,634,qs),
(294,615,o),
(275,615,qs),
(256,615,o),
(256,634,qs),
(256,653,o)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
37 1 8 6 1 76 3 1 1 2 1 0 6 1 0 105 9 1 8 0 4 5 8 4 103 0 6 6 39 77 7 1 5 5 40 5 78 36 36 36 38 36 38 23 20 34 17 34 34 34 33 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,708,o),
(227,708,qs),
(250,708,o),
(282,675,o),
(282,652,qs),
(282,631,o),
(249,598,o),
(227,598,qs),
(206,598,o),
(173,631,o),
(173,652,qs),
(173,675,o)
);
},
{
closed = 1;
nodes = (
(261,637,o),
(261,652,qs),
(261,668,o),
(242,688,o),
(227,688,qs),
(213,688,o),
(194,668,o),
(194,652,qs),
(194,637,o),
(213,617,o),
(227,617,qs),
(242,617,o)
);
},
{
closed = 1;
nodes = (
(39,0,o),
(30,0,qs),
(16,0,ls),
(12,0,o),
(14,4,qs),
(220,552,ls),
(221,556,o),
(224,556,qs),
(226,556,ls),
(241,556,o),
(246,542,qs),
(460,4,l),
(463,0,o),
(458,0,qs),
(441,0,ls),
(434,0,o),
(430,8,q),
(362,182,l),
(107,182,l),
(43,8,l)
);
},
{
closed = 1;
nodes = (
(231,513,l),
(116,205,l),
(353,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
45 1 8 6 1 76 0 1 0 3 2 1 3 105 9 1 2 0 0 6 2 0 105 10 1 8 0 4 5 8 4 103 0 6 6 39 77 7 1 5 5 40 5 78 44 44 13 12 44 46 44 46 42 41 34 33 29 27 25 24 19 17 12 23 13 23 36 34 11 9 24 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,0,o),
(20,0,qs),
(6,0,ls),
(2,0,o),
(4,4,qs),
(306,552,l),
(309,556,o),
(313,556,qs),
(588,556,ls),
(602,556,o),
(602,542,qs),
(602,539,ls),
(602,533,o),
(595,533,qs),
(349,533,l),
(349,285,l),
(568,285,ls),
(582,285,o),
(582,271,qs),
(582,268,ls),
(582,262,o),
(575,262,qs),
(349,262,l),
(349,23,l),
(598,23,ls),
(612,23,o),
(612,9,qs),
(612,6,ls),
(612,0,o),
(605,0,qs),
(326,0,ls),
(323,0,o),
(323,3,qs),
(323,182,l),
(129,182,l),
(32,8,ls)
);
},
{
closed = 1;
nodes = (
(323,533,l),
(142,205,l),
(323,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
37 1 5 1 75 0 4 0 3 8 4 3 103 9 1 8 0 0 2 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 97 7 1 1 1 40 1 78 36 36 36 38 36 38 22 35 33 35 33 35 65 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,-88,o),
(261,-88,qs),
(243,-88,ls),
(236,-88,o),
(240,-82,qs),
(287,-11,l),
(191,-6,o),
(132,61,qs),
(63,139,o),
(63,278,qs),
(63,402,o),
(120,479,qs),
(186,567,o),
(307,567,qs),
(380,567,o),
(448,527,qs),
(464,517,o),
(472,506,o),
(469,498,qs),
(468,495,ls),
(465,488,o),
(462,488,qs),
(459,488,o),
(454,491,qs),
(453,492,o),
(452,493,qs),
(382,544,o),
(305,544,qs),
(212,544,o),
(155,481,qs),
(89,409,o),
(89,277,qs),
(89,163,o),
(140,93,qs),
(198,12,o),
(303,12,qs),
(359,12,o),
(441,63,o),
(461,109,qs),
(464,118,o),
(470,118,qs),
(479,118,o),
(479,106,qs),
(479,79,o),
(447,45,qs),
(399,-6,o),
(317,-11,q),
(282,-79,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 3 2 3 1 2 128 0 6 0 0 6 113 0 3 3 4 97 0 4 4 39 77 0 2 2 0 97 5 1 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 2 3 1 2 128 0 6 0 6 134 0 3 3 4 97 0 4 4 39 77 0 2 2 0 97 5 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 2 3 1 2 128 0 6 0 6 134 0 4 0 3 1 4 3 105 0 2 2 0 97 5 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
50 22 44 38 36 20 16 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,686,o),
(152,691,o),
(155,691,qs),
(178,691,ls),
(188,691,o),
(199,682,q),
(256,625,ls),
(262,619,o),
(253,619,qs),
(244,619,ls),
(231,619,o),
(219,629,qs),
(152,685,l)
);
},
{
closed = 1;
nodes = (
(371,23,o),
(371,9,qs),
(371,6,ls),
(371,0,o),
(365,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,23,l),
(358,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
25 1 4 5 17 1 2 3 37 1 6 7 3 76 0 1 0 1 133 0 0 5 0 133 0 3 0 2 7 3 2 103 0 4 4 5 95 0 5 5 39 77 8 1 7 7 6 95 0 6 6 40 6 78 13 13 13 40 13 39 51 36 17 36 21 35 49 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,619,o),
(194,619,qs),
(185,619,ls),
(175,619,o),
(182,625,qs),
(239,682,ls),
(248,691,o),
(260,691,qs),
(283,691,ls),
(286,691,o),
(288,686,o),
(286,685,q),
(219,629,ls)
);
},
{
closed = 1;
nodes = (
(371,23,o),
(371,9,qs),
(371,6,ls),
(371,0,o),
(365,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,23,l),
(358,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
25 1 4 5 17 1 2 3 37 1 6 7 3 76 0 0 1 0 133 0 1 5 1 133 0 3 0 2 7 3 2 103 0 4 4 5 95 0 5 5 39 77 8 1 7 7 6 95 0 6 6 40 6 78 13 13 13 40 13 39 51 36 17 36 19 51 35 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,619,o),
(148,619,qs),
(140,619,ls),
(130,619,o),
(137,625,qs),
(194,682,ls),
(203,691,o),
(215,691,qs),
(232,691,ls),
(244,691,o),
(253,682,qs),
(311,625,l),
(316,619,o),
(308,619,qs),
(300,619,ls),
(285,619,o),
(275,629,qs),
(224,675,l),
(173,629,ls)
);
},
{
closed = 1;
nodes = (
(371,23,o),
(371,9,qs),
(371,6,ls),
(371,0,o),
(365,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,23,l),
(358,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
31 1 5 6 23 1 3 4 43 1 7 8 3 76 0 1 0 1 133 2 1 0 6 0 133 0 4 0 3 8 4 3 103 0 5 5 6 95 0 6 6 39 77 9 1 8 8 7 95 0 7 7 40 7 78 19 19 19 46 19 45 51 36 17 36 19 51 51 50 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171,653,qs),
(190,653,o),
(190,634,qs),
(190,615,o),
(171,615,qs),
(153,615,o),
(153,634,qs),
(153,653,o)
);
},
{
closed = 1;
nodes = (
(262,653,qs),
(281,653,o),
(281,634,qs),
(281,615,o),
(262,615,qs),
(243,615,o),
(243,634,qs),
(243,653,o)
);
},
{
closed = 1;
nodes = (
(371,23,o),
(371,9,qs),
(371,6,ls),
(371,0,o),
(365,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(348,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(355,533,qs),
(108,533,l),
(108,285,l),
(328,285,ls),
(341,285,o),
(341,271,qs),
(341,268,ls),
(341,262,o),
(335,262,qs),
(108,262,l),
(108,23,l),
(358,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
28 1 6 7 20 1 4 5 40 1 8 9 3 76 3 1 1 2 1 0 7 1 0 105 0 5 0 4 9 5 4 103 0 6 6 7 95 0 7 7 39 77 10 1 9 9 8 95 0 8 8 40 8 78 16 16 16 43 16 42 51 36 17 36 18 34 34 34 33 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,686,o),
(36,691,o),
(39,691,qs),
(62,691,ls),
(72,691,o),
(83,682,q),
(141,625,l),
(146,619,o),
(137,619,qs),
(128,619,ls),
(115,619,o),
(103,629,qs),
(36,685,l)
);
},
{
closed = 1;
nodes = (
(83,556,o),
(87,556,qs),
(88,556,ls),
(110,556,o),
(110,528,qs),
(110,3,ls),
(110,0,o),
(107,0,qs),
(87,0,ls),
(83,0,o),
(83,3,qs),
(83,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
24 13 2 2 3 1 76 0 1 0 1 133 0 0 3 0 133 0 3 3 39 77 0 2 2 40 2 78 20 22 35 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,619,o),
(50,619,qs),
(41,619,ls),
(32,619,o),
(38,625,qs),
(96,682,ls),
(104,691,o),
(117,691,qs),
(139,691,ls),
(142,691,o),
(144,686,o),
(142,685,q),
(75,629,ls)
);
},
{
closed = 1;
nodes = (
(87,556,o),
(90,556,qs),
(92,556,ls),
(113,556,o),
(113,528,qs),
(113,3,ls),
(113,0,o),
(110,0,qs),
(90,0,ls),
(87,0,o),
(87,3,qs),
(87,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 16 13 3 2 73 0 0 1 0 133 0 1 2 1 133 0 2 2 39 2 78 25 51 35 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,619,o),
(23,619,qs),
(15,619,ls),
(6,619,o),
(12,625,qs),
(70,682,ls),
(78,691,o),
(91,691,qs),
(107,691,ls),
(120,691,o),
(128,682,qs),
(186,625,ls),
(192,619,o),
(183,619,qs),
(175,619,ls),
(161,619,o),
(150,629,qs),
(100,675,l),
(48,629,ls)
);
},
{
closed = 1;
nodes = (
(87,556,o),
(91,556,qs),
(92,556,ls),
(113,556,o),
(113,528,qs),
(113,3,ls),
(113,0,o),
(111,0,qs),
(91,0,ls),
(87,0,o),
(87,3,qs),
(87,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
30 19 2 3 4 1 76 0 1 0 1 133 2 1 0 4 0 133 0 4 4 39 77 0 3 3 40 3 78 20 20 51 51 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,653,qs),
(68,653,o),
(68,634,qs),
(68,615,o),
(49,615,qs),
(30,615,o),
(30,634,qs),
(30,653,o)
);
},
{
closed = 1;
nodes = (
(139,653,qs),
(158,653,o),
(158,634,qs),
(158,615,o),
(139,615,qs),
(121,615,o),
(121,634,qs),
(121,653,o)
);
},
{
closed = 1;
nodes = (
(82,556,o),
(86,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,3,ls),
(108,0,o),
(106,0,qs),
(86,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
27 16 2 4 5 1 76 3 1 1 2 1 0 5 1 0 105 0 5 5 39 77 0 4 4 40 4 78 20 19 34 34 34 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,266,o),
(24,269,qs),
(24,286,ls),
(24,289,o),
(27,289,qs),
(73,289,l),
(73,553,ls),
(73,556,o),
(77,556,qs),
(216,556,ls),
(474,556,o),
(474,286,qs),
(474,0,o),
(214,0,qs),
(77,0,ls),
(73,0,o),
(73,3,qs),
(73,266,l),
(27,266,ls)
);
},
{
closed = 1;
nodes = (
(448,23,o),
(448,284,qs),
(448,403,o),
(399,463,qs),
(342,533,o),
(216,533,qs),
(100,533,l),
(100,289,l),
(292,289,ls),
(306,289,o),
(306,276,qs),
(306,272,ls),
(306,266,o),
(299,266,qs),
(100,266,l),
(100,23,l),
(215,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
11 1 6 1 1 1 0 7 2 76 5 1 2 4 8 2 3 7 2 3 103 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 19 19 0 0 19 35 19 34 30 28 27 25 22 20 0 18 0 16 19 34 35 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171,616,o),
(171,621,qs),
(174,664,o),
(213,664,qs),
(225,664,o),
(253,652,qs),
(287,637,o),
(296,637,qs),
(313,637,o),
(316,654,qs),
(318,662,o),
(324,662,qs),
(339,662,ls),
(344,662,o),
(343,656,qs),
(336,614,o),
(296,614,qs),
(282,614,o),
(249,629,qs),
(223,641,o),
(213,641,qs),
(201,641,o),
(198,624,qs),
(197,616,o),
(191,616,qs),
(175,616,ls)
);
},
{
closed = 1;
nodes = (
(408,556,o),
(411,556,qs),
(413,556,ls),
(434,556,o),
(434,528,qs),
(434,7,ls),
(434,0,o),
(428,0,qs),
(420,0,ls),
(410,0,o),
(403,10,qs),
(108,491,l),
(108,3,ls),
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(86,556,ls),
(98,556,o),
(111,534,qs),
(408,49,l),
(408,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
23 1 1 3 51 45 39 33 32 26 6 7 6 2 76 36 1 7 73 4 1 2 0 0 3 2 0 105 0 3 9 5 2 1 6 3 1 106 8 1 6 6 39 77 0 7 7 40 7 78 0 0 48 47 43 41 29 28 0 25 0 25 34 35 34 34 35 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,686,o),
(240,691,o),
(243,691,qs),
(266,691,ls),
(276,691,o),
(287,682,q),
(345,625,l),
(350,619,o),
(341,619,qs),
(332,619,ls),
(319,619,o),
(307,629,qs),
(240,685,l)
);
},
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 1 133 0 0 3 0 133 0 5 5 3 97 0 3 3 39 77 7 1 4 4 2 97 6 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 133 0 0 3 0 133 0 3 0 5 4 3 5 106 7 1 4 4 2 97 6 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
30 29 14 13 38 36 29 44 30 44 22 20 13 28 14 28 35 49 8 9 24 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,619,o),
(253,619,qs),
(244,619,ls),
(235,619,o),
(241,625,qs),
(299,682,ls),
(307,691,o),
(320,691,qs),
(342,691,ls),
(345,691,o),
(347,686,o),
(345,685,q),
(278,629,ls)
);
},
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 0 1 3 1 133 0 5 5 3 97 0 3 3 39 77 7 1 4 4 2 97 6 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 0 1 3 1 133 0 3 0 5 4 3 5 106 7 1 4 4 2 97 6 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
30 29 14 13 38 36 29 44 30 44 22 20 13 28 14 28 51 35 8 9 24 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,619,o),
(217,619,qs),
(210,619,ls),
(200,619,o),
(207,625,qs),
(264,682,ls),
(273,691,o),
(285,691,qs),
(302,691,ls),
(314,691,o),
(323,682,qs),
(381,625,l),
(386,619,o),
(377,619,qs),
(370,619,ls),
(355,619,o),
(345,629,qs),
(294,675,l),
(242,629,ls)
);
},
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 133 2 1 0 4 0 133 0 6 6 4 97 0 4 4 39 77 8 1 5 5 3 97 7 1 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 133 2 1 0 4 0 133 0 4 0 6 5 4 6 106 8 1 5 5 3 97 7 1 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
36 35 20 19 44 42 35 50 36 50 28 26 19 34 20 34 51 51 50 9 9 25 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,616,o),
(206,621,qs),
(209,664,o),
(248,664,qs),
(260,664,o),
(288,652,qs),
(322,637,o),
(331,637,qs),
(348,637,o),
(351,654,qs),
(353,662,o),
(359,662,qs),
(374,662,ls),
(379,662,o),
(378,656,qs),
(371,614,o),
(331,614,qs),
(316,614,o),
(284,629,qs),
(258,641,o),
(248,641,qs),
(236,641,o),
(233,624,qs),
(231,616,o),
(226,616,qs),
(210,616,ls)
);
},
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
4 1 2 0 0 3 2 0 105 0 3 10 5 2 1 7 3 1 106 0 9 9 7 97 0 7 7 39 77 12 1 8 8 6 97 11 1 6 6 46 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
4 1 2 0 0 3 2 0 105 0 3 10 5 2 1 7 3 1 106 0 7 0 9 8 7 9 105 12 1 8 8 6 97 11 1 6 6 46 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
43 42 27 26 0 0 51 49 42 57 43 57 35 33 26 41 27 41 0 25 0 25 34 35 34 34 35 13 9 27 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,653,qs),
(267,653,o),
(267,634,qs),
(267,615,o),
(248,615,qs),
(229,615,o),
(229,634,qs),
(229,653,o)
);
},
{
closed = 1;
nodes = (
(339,653,qs),
(357,653,o),
(357,634,qs),
(357,615,o),
(339,615,qs),
(320,615,o),
(320,634,qs),
(320,653,o)
);
},
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 2 1 0 5 1 0 105 0 7 7 5 97 0 5 5 39 77 9 1 6 6 4 97 8 1 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 1 2 1 0 5 1 0 105 0 5 0 7 6 5 7 105 9 1 6 6 4 97 8 1 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
33 32 17 16 41 39 32 47 33 47 25 23 16 31 17 31 34 34 34 33 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,141,o),
(75,143,qs),
(63,154,ls),
(60,157,o),
(63,159,q),
(179,276,l),
(63,392,l),
(60,394,o),
(63,397,qs),
(77,410,o),
(97,389,qs),
(195,291,l),
(310,406,ls),
(312,408,o),
(315,406,q),
(325,393,l),
(328,392,o),
(325,389,qs),
(211,276,l),
(329,158,l),
(330,156,o),
(329,155,q),
(329,154,l),
(318,142,l),
(315,140,o),
(313,142,qs),
(195,259,l),
(79,143,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 2 1 50 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(397,567,o),
(457,498,qs),
(522,422,o),
(522,277,qs),
(522,151,o),
(473,78,qs),
(414,-10,o),
(293,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(369,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,143,o),
(149,73,q),
(420,499,l)
);
},
{
closed = 1;
nodes = (
(216,13,o),
(293,13,qs),
(379,13,o),
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,412,o),
(436,482,q),
(166,57,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 24 2 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 32 30 23 21 9 7 0 15 1 15 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,686,o),
(192,691,o),
(195,691,qs),
(217,691,ls),
(228,691,o),
(239,682,q),
(296,625,ls),
(302,619,o),
(293,619,qs),
(284,619,ls),
(271,619,o),
(259,629,qs),
(192,685,l)
);
},
{
closed = 1;
nodes = (
(78,194,qs),
(78,553,ls),
(78,556,o),
(81,556,qs),
(82,556,ls),
(104,556,o),
(104,528,qs),
(104,191,ls),
(104,13,o),
(255,13,qs),
(323,13,o),
(361,53,qs),
(405,99,o),
(405,192,qs),
(405,553,ls),
(405,556,o),
(407,556,qs),
(410,556,ls),
(431,556,o),
(431,528,qs),
(431,197,ls),
(431,103,o),
(391,50,qs),
(345,-10,o),
(254,-10,qs),
(78,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 23 2 4 3 1 76 0 1 0 1 133 0 0 3 0 133 5 1 3 3 39 77 0 4 4 2 97 6 1 2 2 46 2 78 14 13 33 32 29 27 20 19 13 38 14 38 35 49 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,619,o),
(214,619,qs),
(205,619,ls),
(196,619,o),
(202,625,qs),
(260,682,ls),
(269,691,o),
(281,691,qs),
(304,691,ls),
(306,691,o),
(308,686,o),
(306,685,q),
(239,629,ls)
);
},
{
closed = 1;
nodes = (
(78,194,qs),
(78,553,ls),
(78,556,o),
(81,556,qs),
(82,556,ls),
(104,556,o),
(104,528,qs),
(104,191,ls),
(104,13,o),
(255,13,qs),
(323,13,o),
(361,53,qs),
(405,99,o),
(405,192,qs),
(405,553,ls),
(405,556,o),
(407,556,qs),
(410,556,ls),
(431,556,o),
(431,528,qs),
(431,197,ls),
(431,103,o),
(391,50,qs),
(345,-10,o),
(254,-10,qs),
(78,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 23 2 4 3 1 76 0 0 1 0 133 0 1 3 1 133 5 1 3 3 39 77 0 4 4 2 97 6 1 2 2 46 2 78 14 13 33 32 29 27 20 19 13 38 14 38 51 35 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,619,o),
(178,619,qs),
(170,619,ls),
(161,619,o),
(167,625,qs),
(225,682,ls),
(234,691,o),
(246,691,qs),
(262,691,ls),
(275,691,o),
(284,682,qs),
(341,625,ls),
(347,619,o),
(338,619,qs),
(330,619,ls),
(316,619,o),
(305,629,qs),
(255,675,l),
(203,629,ls)
);
},
{
closed = 1;
nodes = (
(78,194,qs),
(78,553,ls),
(78,556,o),
(81,556,qs),
(82,556,ls),
(104,556,o),
(104,528,qs),
(104,191,ls),
(104,13,o),
(255,13,qs),
(323,13,o),
(361,53,qs),
(405,99,o),
(405,192,qs),
(405,553,ls),
(405,556,o),
(407,556,qs),
(410,556,ls),
(431,556,o),
(431,528,qs),
(431,197,ls),
(431,103,o),
(391,50,qs),
(345,-10,o),
(254,-10,qs),
(78,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
42 29 2 5 4 1 76 0 1 0 1 133 2 1 0 4 0 133 6 1 4 4 39 77 0 5 5 3 97 7 1 3 3 46 3 78 20 19 39 38 35 33 26 25 19 44 20 44 51 51 50 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,653,qs),
(224,653,o),
(224,634,qs),
(224,615,o),
(205,615,qs),
(186,615,o),
(186,634,qs),
(186,653,o)
);
},
{
closed = 1;
nodes = (
(296,653,qs),
(315,653,o),
(315,634,qs),
(315,615,o),
(296,615,qs),
(277,615,o),
(277,634,qs),
(277,653,o)
);
},
{
closed = 1;
nodes = (
(78,194,qs),
(78,553,ls),
(78,556,o),
(81,556,qs),
(82,556,ls),
(104,556,o),
(104,528,qs),
(104,191,ls),
(104,13,o),
(255,13,qs),
(323,13,o),
(361,53,qs),
(405,99,o),
(405,192,qs),
(405,553,ls),
(405,556,o),
(407,556,qs),
(410,556,ls),
(431,556,o),
(431,528,qs),
(431,197,ls),
(431,103,o),
(391,50,qs),
(345,-10,o),
(254,-10,qs),
(78,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 26 2 6 5 1 76 3 1 1 2 1 0 5 1 0 105 7 1 5 5 39 77 0 6 6 4 97 8 1 4 4 46 4 78 17 16 36 35 32 30 23 22 16 41 17 41 34 34 34 33 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,619,o),
(172,619,qs),
(163,619,ls),
(154,619,o),
(161,625,qs),
(218,682,ls),
(227,691,o),
(239,691,qs),
(262,691,ls),
(264,691,o),
(266,686,o),
(264,685,q),
(197,629,ls)
);
},
{
closed = 1;
nodes = (
(14,556,o),
(19,556,qs),
(23,556,ls),
(41,556,o),
(54,533,qs),
(210,247,l),
(378,547,ls),
(383,556,o),
(392,556,qs),
(404,556,ls),
(410,556,o),
(408,552,qs),
(223,223,l),
(223,3,ls),
(223,0,o),
(220,0,qs),
(200,0,ls),
(197,0,o),
(197,3,qs),
(197,223,l),
(16,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
27 20 17 14 13 5 2 73 0 0 1 0 133 0 1 2 1 133 3 1 2 2 39 2 78 52 44 51 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,0,o),
(105,0,qs),
(85,0,ls),
(82,0,o),
(82,3,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(87,556,ls),
(108,556,o),
(108,528,qs),
(108,444,l),
(263,444,ls),
(335,444,o),
(380,408,qs),
(433,364,o),
(433,281,qs),
(433,207,o),
(395,164,qs),
(351,114,o),
(265,114,qs),
(108,114,l),
(108,3,ls)
);
},
{
closed = 1;
nodes = (
(320,137,o),
(356,162,qs),
(407,198,o),
(407,281,qs),
(407,342,o),
(374,379,qs),
(336,421,o),
(267,421,qs),
(108,421,l),
(108,137,l),
(263,137,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
16 1 1 2 1 76 20 17 2 0 73 0 1 0 3 4 1 3 103 5 1 4 0 0 4 0 99 0 2 2 39 2 78 23 23 23 33 23 32 43 18 38 32 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,0,o),
(68,3,qs),
(68,418,ls),
(68,567,o),
(190,567,qs),
(237,567,o),
(269,541,qs),
(305,510,o),
(305,460,qs),
(305,430,o),
(279,385,qs),
(247,330,o),
(247,307,qs),
(247,282,o),
(292,244,qs),
(341,201,o),
(373,151,o),
(373,116,qs),
(373,66,o),
(343,31,qs),
(307,-11,o),
(250,-11,qs),
(204,-11,o),
(134,41,o),
(134,74,qs),
(134,87,o),
(140,87,qs),
(145,87,o),
(149,78,qs),
(179,12,o),
(249,12,qs),
(293,12,o),
(347,69,o),
(347,116,qs),
(347,162,o),
(291,212,qs),
(243,254,o),
(222,283,o),
(222,305,qs),
(222,332,o),
(248,378,qs),
(280,433,o),
(280,458,qs),
(280,498,o),
(232,544,o),
(190,544,qs),
(94,544,o),
(94,416,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 0 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 0 2 1 128 0 0 0 4 97 0 4 4 39 77 0 1 1 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 0 1 0 2 1 128 0 4 0 0 2 4 0 105 0 1 1 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
47 35 34 45 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 409;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,498,o),
(168,502,o),
(171,502,qs),
(194,502,ls),
(205,502,o),
(215,493,qs),
(273,436,ls),
(278,431,o),
(269,431,qs),
(261,431,ls),
(247,431,o),
(236,440,qs),
(168,496,ls)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
34 1 6 4 27 13 2 5 6 31 28 2 3 5 3 76 0 1 0 1 133 0 0 2 0 133 0 4 4 42 77 0 6 6 2 97 0 2 2 48 77 7 1 5 5 3 97 0 3 3 49 3 78 41 40 49 47 40 55 41 55 28 38 38 35 49 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,431,o),
(181,431,qs),
(172,431,ls),
(163,431,o),
(169,436,qs),
(227,493,ls),
(236,502,o),
(248,502,qs),
(271,502,ls),
(273,502,o),
(275,498,o),
(273,496,qs),
(206,440,ls)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
34 1 6 4 27 13 2 5 6 31 28 2 3 5 3 76 0 0 1 0 133 0 1 2 1 133 0 4 4 42 77 0 6 6 2 97 0 2 2 48 77 7 1 5 5 3 97 0 3 3 49 3 78 41 40 49 47 40 55 41 55 28 38 36 51 35 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,431,o),
(145,431,qs),
(137,431,ls),
(128,431,o),
(134,436,qs),
(192,493,ls),
(201,502,o),
(213,502,qs),
(229,502,ls),
(242,502,o),
(251,493,qs),
(308,436,ls),
(314,431,o),
(305,431,qs),
(297,431,ls),
(283,431,o),
(272,440,qs),
(222,486,l),
(170,440,l)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
40 1 7 5 33 19 2 6 7 37 34 2 4 6 3 76 0 1 0 1 133 2 1 0 3 0 133 0 5 5 42 77 0 7 7 3 97 0 3 3 48 77 8 1 6 6 4 97 0 4 4 49 4 78 47 46 55 53 46 61 47 61 28 38 36 51 51 50 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,427,o),
(128,432,qs),
(131,475,o),
(170,475,qs),
(182,475,o),
(210,463,qs),
(244,448,o),
(253,448,qs),
(270,448,o),
(273,465,qs),
(275,473,o),
(281,473,qs),
(296,473,ls),
(301,473,o),
(300,467,qs),
(293,426,o),
(253,426,qs),
(238,426,o),
(206,440,qs),
(180,452,o),
(170,452,qs),
(158,452,o),
(155,436,qs),
(153,427,o),
(148,427,qs),
(132,427,ls)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
23 1 1 3 47 1 10 8 40 26 2 9 10 44 41 2 7 9 4 76 4 1 2 0 0 3 2 0 105 0 3 11 5 2 1 6 3 1 106 0 8 8 42 77 0 10 10 6 97 0 6 6 48 77 12 1 9 9 7 97 0 7 7 49 7 78 54 53 0 0 62 60 53 68 54 68 51 50 38 36 30 28 0 25 0 25 34 35 34 34 35 13 9 27 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,464,qs),
(188,464,o),
(188,445,qs),
(188,426,o),
(169,426,qs),
(150,426,o),
(150,445,qs),
(150,464,o)
);
},
{
closed = 1;
nodes = (
(259,464,qs),
(278,464,o),
(278,445,qs),
(278,426,o),
(259,426,qs),
(241,426,o),
(241,445,qs),
(241,464,o)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
37 1 8 6 30 16 2 7 8 34 31 2 5 7 3 76 3 1 1 2 1 0 4 1 0 105 0 6 6 42 77 0 8 8 4 97 0 4 4 48 77 9 1 7 7 5 97 0 5 5 49 5 78 44 43 52 50 43 58 44 58 28 38 35 34 34 34 33 10 9 29 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,519,o),
(217,519,qs),
(239,519,o),
(272,486,o),
(272,463,qs),
(272,442,o),
(239,409,o),
(217,409,qs),
(195,409,o),
(162,442,o),
(162,463,qs),
(162,486,o)
);
},
{
closed = 1;
nodes = (
(251,448,o),
(251,463,qs),
(251,479,o),
(232,499,o),
(217,499,qs),
(202,499,o),
(183,479,o),
(183,463,qs),
(183,448,o),
(202,428,o),
(217,428,qs),
(231,428,o)
);
},
{
closed = 1;
nodes = (
(348,360,o),
(369,360,qs),
(371,360,ls),
(374,360,o),
(374,357,qs),
(374,3,ls),
(374,0,o),
(371,0,qs),
(351,0,ls),
(348,0,o),
(348,3,qs),
(348,74,l),
(332,35,o),
(261,-9,o),
(214,-9,qs),
(146,-9,o),
(101,37,qs),
(50,90,o),
(50,179,qs),
(50,255,o),
(90,307,qs),
(136,367,o),
(213,367,qs),
(258,367,o),
(333,321,o),
(348,284,q),
(348,332,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(349,94,o),
(349,179,qs),
(349,253,o),
(318,296,qs),
(283,345,o),
(213,345,qs),
(155,345,o),
(118,305,qs),
(76,260,o),
(76,179,qs),
(76,109,o),
(109,64,qs),
(147,13,o),
(214,13,qs),
(274,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
45 1 8 6 38 24 2 7 8 42 39 2 5 7 3 76 0 1 0 3 2 1 3 105 9 1 2 0 0 4 2 0 105 0 6 6 42 77 0 8 8 4 97 0 4 4 48 77 10 1 7 7 5 97 0 5 5 49 5 78 52 51 13 12 60 58 51 66 52 66 49 48 36 34 28 26 19 17 12 23 13 23 36 34 11 9 24 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,0,o),
(370,0,qs),
(350,0,ls),
(347,0,o),
(347,3,qs),
(347,74,l),
(332,35,o),
(261,-9,o),
(213,-9,qs),
(145,-9,o),
(100,37,qs),
(49,90,o),
(49,179,qs),
(49,255,o),
(89,307,qs),
(136,367,o),
(212,367,qs),
(258,367,o),
(332,321,o),
(347,284,q),
(347,332,ls),
(347,360,o),
(368,360,qs),
(370,360,ls),
(373,360,o),
(373,357,qs),
(373,284,l),
(412,367,o),
(501,367,qs),
(560,367,o),
(598,326,qs),
(642,279,o),
(642,203,qs),
(642,192,o),
(642,183,q),
(640,172,o),
(628,172,qs),
(373,172,l),
(375,101,o),
(405,60,qs),
(440,13,o),
(506,13,qs),
(595,13,o),
(623,81,q),
(628,89,o),
(633,89,qs),
(640,89,o),
(640,78,qs),
(640,55,o),
(614,30,qs),
(575,-9,o),
(506,-9,qs),
(412,-9,o),
(373,71,q),
(373,3,ls)
);
},
{
closed = 1;
nodes = (
(309,51,qs),
(348,94,o),
(348,179,qs),
(348,253,o),
(318,296,qs),
(282,345,o),
(212,345,qs),
(154,345,o),
(117,305,qs),
(75,260,o),
(75,179,qs),
(75,109,o),
(108,64,qs),
(146,13,o),
(213,13,qs),
(274,13,o)
);
},
{
closed = 1;
nodes = (
(619,257,o),
(590,298,qs),
(558,345,o),
(501,345,qs),
(448,345,o),
(415,310,qs),
(378,271,o),
(373,194,q),
(617,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
28 1 9 5 34 27 2 11 9 19 1 3 11 48 0 2 2 1 52 49 2 0 2 5 76 0 1 3 2 3 1 2 128 13 1 11 0 3 1 11 3 103 0 5 5 42 77 10 1 9 9 4 97 6 1 4 4 48 77 12 8 2 2 2 0 97 7 1 0 0 49 0 78 71 71 56 55 71 79 71 79 76 74 64 62 55 70 56 70 38 36 21 38 35 35 20 33 14 9 30 
CALL[ ]	/* CallFunction */";
};
width = 689;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,-88,o),
(168,-88,qs),
(151,-88,ls),
(144,-88,o),
(148,-82,qs),
(195,-9,l),
(132,-4,o),
(93,40,qs),
(49,90,o),
(49,178,qs),
(49,259,o),
(89,309,qs),
(134,367,o),
(214,367,qs),
(261,367,o),
(305,347,qs),
(329,335,o),
(325,323,qs),
(323,319,l),
(323,318,l),
(321,314,o),
(318,314,qs),
(315,314,o),
(311,316,qs),
(309,317,o),
(308,318,qs),
(268,345,o),
(214,345,qs),
(154,345,o),
(117,307,qs),
(75,262,o),
(75,178,qs),
(75,106,o),
(107,62,qs),
(143,13,o),
(211,13,qs),
(288,13,o),
(318,82,q),
(324,91,o),
(327,91,qs),
(333,91,o),
(333,81,qs),
(333,58,o),
(312,33,qs),
(280,-3,o),
(225,-8,q),
(190,-79,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
40 1 4 1 1 76 0 0 2 1 2 0 1 128 0 1 0 4 1 4 101 0 2 2 3 97 0 3 3 48 2 78 57 44 38 34 37 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,498,o),
(143,502,o),
(146,502,qs),
(169,502,ls),
(180,502,o),
(190,493,qs),
(248,436,ls),
(253,431,o),
(244,431,qs),
(236,431,ls),
(222,431,o),
(211,440,qs),
(143,496,ls)
);
},
{
closed = 1;
nodes = (
(77,101,o),
(107,60,qs),
(142,13,o),
(209,13,qs),
(298,13,o),
(326,81,qs),
(330,89,o),
(335,89,qs),
(342,89,o),
(342,78,qs),
(342,55,o),
(316,30,qs),
(277,-9,o),
(208,-9,qs),
(140,-9,o),
(98,35,qs),
(50,86,o),
(50,178,qs),
(50,256,o),
(87,307,qs),
(130,367,o),
(204,367,qs),
(262,367,o),
(301,326,qs),
(345,279,o),
(345,203,qs),
(345,192,o),
(344,183,qs),
(343,172,o),
(331,172,qs),
(76,172,l)
);
},
{
closed = 1;
nodes = (
(321,257,o),
(293,298,qs),
(261,345,o),
(203,345,qs),
(151,345,o),
(118,310,qs),
(80,271,o),
(76,194,q),
(319,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 1 0 1 133 0 0 3 0 133 0 5 2 6 2 5 6 128 10 1 8 9 1 2 5 8 2 103 0 7 7 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 49 4 78 44 44 14 13 44 52 44 52 49 47 40 38 35 34 30 28 22 20 13 43 14 43 35 49 11 9 24 
CALL[ ]	/* CallFunction */";
};
width = 391;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,431,o),
(161,431,qs),
(152,431,ls),
(143,431,o),
(149,436,qs),
(207,493,ls),
(216,502,o),
(228,502,qs),
(251,502,ls),
(253,502,o),
(255,498,o),
(253,496,qs),
(186,440,ls)
);
},
{
closed = 1;
nodes = (
(77,101,o),
(107,60,qs),
(142,13,o),
(209,13,qs),
(298,13,o),
(326,81,qs),
(330,89,o),
(335,89,qs),
(342,89,o),
(342,78,qs),
(342,55,o),
(316,30,qs),
(277,-9,o),
(208,-9,qs),
(140,-9,o),
(98,35,qs),
(50,86,o),
(50,178,qs),
(50,256,o),
(87,307,qs),
(130,367,o),
(204,367,qs),
(262,367,o),
(301,326,qs),
(345,279,o),
(345,203,qs),
(345,192,o),
(344,183,qs),
(343,172,o),
(331,172,qs),
(76,172,l)
);
},
{
closed = 1;
nodes = (
(321,257,o),
(293,298,qs),
(261,345,o),
(203,345,qs),
(151,345,o),
(118,310,qs),
(80,271,o),
(76,194,q),
(319,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 0 1 0 133 0 1 3 1 133 0 5 2 6 2 5 6 128 10 1 8 9 1 2 5 8 2 103 0 7 7 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 49 4 78 44 44 14 13 44 52 44 52 49 47 40 38 35 34 30 28 22 20 13 43 14 43 51 35 11 9 24 
CALL[ ]	/* CallFunction */";
};
width = 391;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,431,o),
(127,431,qs),
(119,431,ls),
(110,431,o),
(117,436,q),
(174,493,ls),
(183,502,o),
(195,502,qs),
(212,502,ls),
(224,502,o),
(233,493,qs),
(291,436,ls),
(296,431,o),
(287,431,qs),
(279,431,ls),
(265,431,o),
(254,440,qs),
(204,486,l),
(152,440,l)
);
},
{
closed = 1;
nodes = (
(77,101,o),
(107,60,qs),
(142,13,o),
(209,13,qs),
(298,13,o),
(326,81,qs),
(330,89,o),
(335,89,qs),
(342,89,o),
(342,78,qs),
(342,55,o),
(316,30,qs),
(277,-9,o),
(208,-9,qs),
(140,-9,o),
(98,35,qs),
(50,86,o),
(50,178,qs),
(50,256,o),
(87,307,qs),
(130,367,o),
(204,367,qs),
(262,367,o),
(301,326,qs),
(345,279,o),
(345,203,qs),
(345,192,o),
(344,183,qs),
(343,172,o),
(331,172,qs),
(76,172,l)
);
},
{
closed = 1;
nodes = (
(321,257,o),
(293,298,qs),
(261,345,o),
(203,345,qs),
(151,345,o),
(118,310,qs),
(80,271,o),
(76,194,q),
(319,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 1 0 1 133 2 1 0 4 0 133 0 6 3 7 3 6 7 128 11 1 9 10 1 3 6 9 3 103 0 8 8 4 97 0 4 4 48 77 0 7 7 5 97 0 5 5 49 5 78 50 50 20 19 50 58 50 58 55 53 46 44 41 40 36 34 28 26 19 49 20 49 51 51 50 12 9 25 
CALL[ ]	/* CallFunction */";
};
width = 391;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,464,qs),
(175,464,o),
(175,445,qs),
(175,426,o),
(156,426,qs),
(137,426,o),
(137,445,qs),
(137,464,o)
);
},
{
closed = 1;
nodes = (
(247,464,qs),
(266,464,o),
(266,445,qs),
(266,426,o),
(247,426,qs),
(228,426,o),
(228,445,qs),
(228,464,o)
);
},
{
closed = 1;
nodes = (
(77,101,o),
(107,60,qs),
(142,13,o),
(209,13,qs),
(298,13,o),
(326,81,qs),
(330,89,o),
(335,89,qs),
(342,89,o),
(342,78,qs),
(342,55,o),
(316,30,qs),
(277,-9,o),
(208,-9,qs),
(140,-9,o),
(98,35,qs),
(50,86,o),
(50,178,qs),
(50,256,o),
(87,307,qs),
(130,367,o),
(204,367,qs),
(262,367,o),
(301,326,qs),
(345,279,o),
(345,203,qs),
(345,192,o),
(344,183,qs),
(343,172,o),
(331,172,qs),
(76,172,l)
);
},
{
closed = 1;
nodes = (
(321,257,o),
(293,298,qs),
(261,345,o),
(203,345,qs),
(151,345,o),
(118,310,qs),
(80,271,o),
(76,194,q),
(319,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 7 4 8 4 7 8 128 3 1 1 2 1 0 5 1 0 105 12 1 10 11 1 4 7 10 4 103 0 9 9 5 97 0 5 5 48 77 0 8 8 6 97 0 6 6 49 6 78 47 47 17 16 47 55 47 55 52 50 43 41 38 37 33 31 25 23 16 46 17 46 34 34 34 33 13 9 26 
CALL[ ]	/* CallFunction */";
};
width = 391;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,498,o),
(29,502,o),
(32,502,qs),
(55,502,ls),
(65,502,o),
(76,493,q),
(134,436,ls),
(139,431,o),
(130,431,qs),
(121,431,ls),
(108,431,o),
(96,440,qs),
(29,496,ls)
);
},
{
closed = 1;
nodes = (
(69,360,o),
(72,360,qs),
(74,360,ls),
(95,360,o),
(95,332,qs),
(95,3,ls),
(95,0,o),
(92,0,qs),
(72,0,ls),
(69,0,o),
(69,3,qs),
(69,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 16 13 3 2 73 0 1 0 1 133 0 0 2 0 133 0 2 2 42 2 78 27 35 49 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,431,o),
(45,431,qs),
(36,431,ls),
(27,431,o),
(33,436,qs),
(91,493,ls),
(99,502,o),
(112,502,qs),
(134,502,ls),
(137,502,o),
(139,498,o),
(137,496,qs),
(70,440,ls)
);
},
{
closed = 1;
nodes = (
(72,360,o),
(75,360,qs),
(77,360,ls),
(98,360,o),
(98,332,qs),
(98,3,ls),
(98,0,o),
(95,0,qs),
(75,0,ls),
(72,0,o),
(72,3,qs),
(72,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 16 13 3 2 73 0 0 1 0 133 0 1 2 1 133 0 2 2 42 2 78 25 51 35 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,431,o),
(9,431,qs),
(1,431,ls),
(-8,431,o),
(-2,436,qs),
(56,493,ls),
(64,502,o),
(77,502,qs),
(93,502,ls),
(106,502,o),
(114,493,qs),
(172,436,ls),
(178,431,o),
(169,431,qs),
(161,431,ls),
(147,431,o),
(136,440,qs),
(86,486,l),
(34,440,l)
);
},
{
closed = 1;
nodes = (
(73,360,o),
(76,360,qs),
(78,360,ls),
(98,360,o),
(98,332,qs),
(98,3,ls),
(98,0,o),
(96,0,qs),
(76,0,ls),
(73,0,o),
(73,3,qs),
(73,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
30 22 19 3 3 73 0 1 0 1 133 2 1 0 3 0 133 0 3 3 42 3 78 25 51 51 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,464,qs),
(55,464,o),
(55,445,qs),
(55,426,o),
(36,426,qs),
(17,426,o),
(17,445,qs),
(17,464,o)
);
},
{
closed = 1;
nodes = (
(126,464,qs),
(145,464,o),
(145,445,qs),
(145,426,o),
(126,426,qs),
(108,426,o),
(108,445,qs),
(108,464,o)
);
},
{
closed = 1;
nodes = (
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
27 19 16 3 4 73 3 1 1 2 1 0 4 1 0 105 0 4 4 42 4 78 24 34 34 34 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,419,ls),
(116,417,o),
(115,421,q),
(107,433,ls),
(105,437,o),
(107,438,qs),
(186,480,l),
(135,551,ls),
(131,556,o),
(137,556,qs),
(141,556,ls),
(154,556,o),
(168,545,o),
(185,523,qs),
(206,492,l),
(270,526,ls),
(273,528,o),
(276,524,qs),
(285,511,l),
(286,508,o),
(284,507,qs),
(220,473,l),
(340,306,ls),
(377,254,o),
(377,179,qs),
(377,100,o),
(340,50,qs),
(295,-9,o),
(212,-9,qs),
(143,-9,o),
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,256,o),
(87,305,qs),
(131,361,o),
(211,361,qs),
(249,361,o),
(280,348,q),
(198,461,l)
);
},
{
closed = 1;
nodes = (
(310,51,qs),
(352,96,o),
(352,178,qs),
(352,242,o),
(324,284,qs),
(286,339,o),
(212,339,qs),
(153,339,o),
(117,302,qs),
(76,260,o),
(76,179,qs),
(76,108,o),
(108,63,qs),
(145,13,o),
(212,13,qs),
(273,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 38 33 32 24 18 17 7 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 97 0 1 1 49 1 78 41 40 49 47 40 55 41 55 30 27 38 33 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,427,o),
(127,432,qs),
(130,475,o),
(169,475,qs),
(181,475,o),
(209,463,qs),
(243,448,o),
(252,448,qs),
(269,448,o),
(272,465,qs),
(274,473,o),
(280,473,qs),
(295,473,ls),
(300,473,o),
(299,467,qs),
(292,426,o),
(252,426,qs),
(238,426,o),
(205,440,qs),
(179,452,o),
(169,452,qs),
(157,452,o),
(154,436,qs),
(153,427,o),
(147,427,qs),
(131,427,ls)
);
},
{
closed = 1;
nodes = (
(135,367,o),
(224,367,qs),
(283,367,o),
(320,333,qs),
(362,295,o),
(362,227,qs),
(362,3,ls),
(362,0,o),
(359,0,qs),
(339,0,ls),
(336,0,o),
(336,3,qs),
(336,224,ls),
(336,277,o),
(310,309,qs),
(280,345,o),
(222,345,qs),
(169,345,o),
(135,316,qs),
(94,281,o),
(94,217,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,299,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
23 1 1 3 31 1 7 6 2 76 59 50 47 35 32 5 7 73 4 1 2 0 0 3 2 0 105 0 3 9 5 2 1 8 3 1 106 0 6 6 42 77 0 7 7 8 97 0 8 8 48 7 78 0 0 58 56 43 41 28 27 0 25 0 25 34 35 34 34 35 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,498,o),
(161,502,o),
(163,502,qs),
(186,502,ls),
(197,502,o),
(207,493,qs),
(265,436,ls),
(271,431,o),
(262,431,qs),
(253,431,ls),
(240,431,o),
(228,440,qs),
(161,496,ls)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 1 0 1 133 0 0 3 0 133 0 5 5 3 97 0 3 3 48 77 7 1 4 4 2 97 6 1 2 2 49 2 78 30 29 14 13 38 36 29 44 30 44 22 20 13 28 14 28 35 49 8 9 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,431,o),
(173,431,qs),
(165,431,ls),
(155,431,o),
(162,436,q),
(219,493,ls),
(228,502,o),
(240,502,qs),
(263,502,ls),
(266,502,o),
(268,498,o),
(266,496,qs),
(198,440,ls)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 0 1 0 133 0 1 3 1 133 0 5 5 3 97 0 3 3 48 77 7 1 4 4 2 97 6 1 2 2 49 2 78 30 29 14 13 38 36 29 44 30 44 22 20 13 28 14 28 51 35 8 9 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,431,o),
(137,431,qs),
(130,431,ls),
(120,431,o),
(127,436,q),
(184,493,ls),
(193,502,o),
(205,502,qs),
(222,502,ls),
(234,502,o),
(243,493,qs),
(301,436,ls),
(306,431,o),
(297,431,qs),
(290,431,ls),
(275,431,o),
(265,440,qs),
(214,486,l),
(162,440,ls)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 1 0 1 133 2 1 0 4 0 133 0 6 6 4 97 0 4 4 48 77 8 1 5 5 3 97 7 1 3 3 49 3 78 36 35 20 19 44 42 35 50 36 50 28 26 19 34 20 34 51 51 50 9 9 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,427,o),
(127,432,qs),
(129,475,o),
(168,475,qs),
(181,475,o),
(208,463,qs),
(242,448,o),
(252,448,qs),
(269,448,o),
(272,465,qs),
(273,473,o),
(279,473,qs),
(295,473,ls),
(300,473,o),
(298,467,q),
(291,426,o),
(252,426,qs),
(237,426,o),
(205,440,qs),
(178,452,o),
(168,452,qs),
(157,452,o),
(153,436,q),
(152,427,o),
(147,427,qs),
(131,427,ls)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
23 1 1 3 1 76 4 1 2 0 0 3 2 0 105 0 3 10 5 2 1 7 3 1 106 0 9 9 7 97 0 7 7 48 77 12 1 8 8 6 97 11 1 6 6 49 6 78 43 42 27 26 0 0 51 49 42 57 43 57 35 33 26 41 27 41 0 25 0 25 34 35 34 34 35 13 9 27 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,464,qs),
(187,464,o),
(187,445,qs),
(187,426,o),
(168,426,qs),
(150,426,o),
(150,445,qs),
(150,464,o)
);
},
{
closed = 1;
nodes = (
(259,464,qs),
(278,464,o),
(278,445,qs),
(278,426,o),
(259,426,qs),
(240,426,o),
(240,445,qs),
(240,464,o)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
3 1 1 2 1 0 5 1 0 105 0 7 7 5 97 0 5 5 48 77 9 1 6 6 4 97 8 1 4 4 49 4 78 33 32 17 16 41 39 32 47 33 47 25 23 16 31 17 31 34 34 34 33 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,433,o),
(193,433,qs),
(206,433,o),
(224,414,o),
(224,402,qs),
(224,389,o),
(206,371,o),
(193,371,qs),
(181,371,o),
(163,389,o),
(163,402,qs),
(163,414,o)
);
},
{
closed = 1;
nodes = (
(46,262,o),
(46,266,qs),
(46,282,ls),
(46,285,o),
(49,285,qs),
(328,285,ls),
(342,285,o),
(342,271,qs),
(342,268,ls),
(342,262,o),
(335,262,qs),
(49,262,ls)
);
},
{
closed = 1;
nodes = (
(181,177,o),
(193,177,qs),
(206,177,o),
(224,158,o),
(224,145,qs),
(224,133,o),
(206,114,o),
(193,114,qs),
(181,114,o),
(163,132,o),
(163,145,qs),
(163,158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
21 1 2 3 1 76 0 1 0 0 3 1 0 105 0 3 6 1 2 5 3 2 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 13 12 34 32 28 26 18 16 12 23 13 23 36 34 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(282,367,o),
(326,322,qs),
(377,271,o),
(377,179,qs),
(377,100,o),
(338,49,qs),
(293,-9,o),
(212,-9,qs),
(143,-9,o)
);
},
{
closed = 1;
nodes = (
(254,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,99,o),
(116,53,q),
(289,322,l)
);
},
{
closed = 1;
nodes = (
(166,13,o),
(211,13,qs),
(271,13,o),
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,263,o),
(307,307,q),
(134,37,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
33 24 2 3 2 1 76 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 4 1 0 0 49 0 78 1 0 32 30 23 21 9 7 0 15 1 15 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,498,o),
(155,502,o),
(158,502,qs),
(181,502,ls),
(192,502,o),
(202,493,qs),
(260,436,ls),
(265,431,o),
(256,431,qs),
(248,431,ls),
(234,431,o),
(223,440,qs),
(155,496,ls)
);
},
{
closed = 1;
nodes = (
(67,159,qs),
(67,357,ls),
(67,360,o),
(70,360,qs),
(72,360,ls),
(93,360,o),
(93,332,qs),
(93,156,ls),
(93,13,o),
(208,13,qs),
(323,13,o),
(323,156,qs),
(323,357,ls),
(323,360,o),
(326,360,qs),
(328,360,ls),
(349,360,o),
(349,332,qs),
(349,159,ls),
(349,-9,o),
(208,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
32 21 2 4 3 1 76 0 1 0 1 133 0 0 3 0 133 5 1 3 3 42 77 0 4 4 2 97 6 1 2 2 49 2 78 14 13 29 28 25 23 18 17 13 34 14 34 35 49 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,431,o),
(168,431,qs),
(159,431,ls),
(150,431,o),
(156,436,qs),
(214,493,ls),
(223,502,o),
(235,502,qs),
(258,502,ls),
(260,502,o),
(262,498,o),
(260,496,qs),
(193,440,ls)
);
},
{
closed = 1;
nodes = (
(67,159,qs),
(67,357,ls),
(67,360,o),
(70,360,qs),
(72,360,ls),
(93,360,o),
(93,332,qs),
(93,156,ls),
(93,13,o),
(208,13,qs),
(323,13,o),
(323,156,qs),
(323,357,ls),
(323,360,o),
(326,360,qs),
(328,360,ls),
(349,360,o),
(349,332,qs),
(349,159,ls),
(349,-9,o),
(208,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
32 21 2 4 3 1 76 0 0 1 0 133 0 1 3 1 133 5 1 3 3 42 77 0 4 4 2 97 6 1 2 2 49 2 78 14 13 29 28 25 23 18 17 13 34 14 34 51 35 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,431,o),
(133,431,qs),
(125,431,ls),
(115,431,o),
(122,436,q),
(179,493,ls),
(188,502,o),
(200,502,qs),
(217,502,ls),
(229,502,o),
(238,493,qs),
(296,436,ls),
(301,431,o),
(293,431,qs),
(285,431,ls),
(270,431,o),
(260,440,qs),
(209,486,l),
(158,440,l)
);
},
{
closed = 1;
nodes = (
(67,159,qs),
(67,357,ls),
(67,360,o),
(70,360,qs),
(72,360,ls),
(93,360,o),
(93,332,qs),
(93,156,ls),
(93,13,o),
(208,13,qs),
(323,13,o),
(323,156,qs),
(323,357,ls),
(323,360,o),
(326,360,qs),
(328,360,ls),
(349,360,o),
(349,332,qs),
(349,159,ls),
(349,-9,o),
(208,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
38 27 2 5 4 1 76 0 1 0 1 133 2 1 0 4 0 133 6 1 4 4 42 77 0 5 5 3 97 7 1 3 3 49 3 78 20 19 35 34 31 29 24 23 19 40 20 40 51 51 50 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,464,qs),
(182,464,o),
(182,445,qs),
(182,426,o),
(163,426,qs),
(144,426,o),
(144,445,qs),
(144,464,o)
);
},
{
closed = 1;
nodes = (
(254,464,qs),
(273,464,o),
(273,445,qs),
(273,426,o),
(254,426,qs),
(235,426,o),
(235,445,qs),
(235,464,o)
);
},
{
closed = 1;
nodes = (
(67,159,qs),
(67,357,ls),
(67,360,o),
(70,360,qs),
(72,360,ls),
(93,360,o),
(93,332,qs),
(93,156,ls),
(93,13,o),
(208,13,qs),
(323,13,o),
(323,156,qs),
(323,357,ls),
(323,360,o),
(326,360,qs),
(328,360,ls),
(349,360,o),
(349,332,qs),
(349,159,ls),
(349,-9,o),
(208,-9,qs),
(67,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
35 24 2 6 5 1 76 3 1 1 2 1 0 5 1 0 105 7 1 5 5 42 77 0 6 6 4 97 8 1 4 4 49 4 78 17 16 32 31 28 26 21 20 16 37 17 37 34 34 34 33 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,431,o),
(109,431,qs),
(100,431,ls),
(96,431,o),
(95,434,o),
(97,436,qs),
(154,493,ls),
(163,502,o),
(175,502,qs),
(198,502,ls),
(201,502,o),
(203,498,o),
(201,496,qs),
(134,440,ls)
);
},
{
closed = 1;
nodes = (
(17,360,o),
(23,360,qs),
(27,360,ls),
(45,360,o),
(53,338,qs),
(153,35,l),
(260,351,ls),
(263,360,o),
(271,360,qs),
(284,360,ls),
(288,360,o),
(287,355,q),
(162,-11,ls),
(128,-112,o),
(87,-170,o),
(51,-170,qs),
(28,-170,o),
(-7,-143,o),
(-7,-125,qs),
(-7,-116,o),
(-1,-116,qs),
(4,-116,o),
(7,-123,qs),
(21,-148,o),
(48,-148,qs),
(75,-148,o),
(108,-96,o),
(141,-2,q),
(19,355,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
36 1 3 5 1 76 0 0 1 0 133 0 1 5 1 133 0 3 5 2 5 3 2 128 6 1 5 5 42 77 0 2 2 4 97 0 4 4 50 4 78 52 37 35 34 36 37 35 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,-160,o),
(91,-160,qs),
(71,-160,ls),
(68,-160,o),
(68,-157,qs),
(68,553,ls),
(68,556,o),
(71,556,qs),
(73,556,ls),
(94,556,o),
(94,528,qs),
(94,284,l),
(109,322,o),
(183,367,o),
(229,367,qs),
(295,367,o),
(340,320,qs),
(392,267,o),
(392,179,qs),
(392,101,o),
(352,50,qs),
(306,-9,o),
(228,-9,qs),
(180,-9,o),
(109,35,o),
(94,74,q),
(94,-157,ls)
);
},
{
closed = 1;
nodes = (
(323,53,qs),
(366,98,o),
(366,179,qs),
(366,250,o),
(333,294,qs),
(296,345,o),
(229,345,qs),
(168,345,o),
(133,307,qs),
(92,264,o),
(92,179,qs),
(92,105,o),
(123,62,qs),
(159,13,o),
(228,13,qs),
(286,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
20 1 1 2 14 0 2 3 4 2 76 24 21 2 0 73 0 2 2 39 77 0 4 4 1 97 0 1 1 48 77 5 1 3 3 0 97 0 0 0 49 0 78 28 27 36 34 27 42 28 42 20 38 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,464,qs),
(122,464,o),
(122,445,qs),
(122,426,o),
(104,426,qs),
(85,426,o),
(85,445,qs),
(85,464,o)
);
},
{
closed = 1;
nodes = (
(194,464,qs),
(213,464,o),
(213,445,qs),
(213,426,o),
(194,426,qs),
(175,426,o),
(175,445,qs),
(175,464,o)
);
},
{
closed = 1;
nodes = (
(17,360,o),
(23,360,qs),
(27,360,ls),
(45,360,o),
(53,338,qs),
(153,35,l),
(260,351,ls),
(263,360,o),
(271,360,qs),
(284,360,ls),
(288,360,o),
(287,355,q),
(162,-11,ls),
(128,-112,o),
(87,-170,o),
(51,-170,qs),
(28,-170,o),
(-7,-143,o),
(-7,-125,qs),
(-7,-116,o),
(-1,-116,qs),
(4,-116,o),
(7,-123,qs),
(21,-148,o),
(48,-148,qs),
(75,-148,o),
(108,-96,o),
(141,-2,q),
(19,355,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
38 1 5 7 1 76 0 5 7 4 7 5 4 128 3 1 1 2 1 0 7 1 0 105 8 1 7 7 42 77 0 4 4 6 97 0 6 6 50 6 78 52 37 35 34 35 34 34 34 33 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,3,ls),
(94,0,o),
(91,0,qs),
(71,0,ls),
(68,0,o),
(68,3,qs),
(68,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
11 3 0 3 0 73 0 0 0 42 0 78 23 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,23,o),
(326,9,qs),
(326,6,ls),
(326,0,o),
(319,0,qs),
(81,0,ls),
(78,0,o),
(78,3,qs),
(78,233,l),
(25,206,l),
(22,205,o),
(22,208,qs),
(22,227,ls),
(22,230,o),
(25,232,qs),
(78,259,l),
(78,553,ls),
(78,556,o),
(81,556,qs),
(83,556,ls),
(104,556,o),
(104,528,qs),
(104,273,l),
(257,356,l),
(260,357,o),
(260,354,qs),
(260,335,ls),
(260,332,o),
(257,330,qs),
(104,247,l),
(104,23,l),
(313,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
22 19 18 15 14 8 5 4 1 9 2 0 1 76 0 0 0 39 77 3 1 2 2 1 95 0 1 1 40 1 78 0 0 0 31 0 30 76 26 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,205,o),
(22,208,qs),
(22,227,ls),
(22,230,o),
(25,232,qs),
(73,257,l),
(73,553,ls),
(73,556,o),
(76,556,qs),
(78,556,ls),
(99,556,o),
(99,528,qs),
(99,271,l),
(166,307,ls),
(169,309,o),
(169,305,qs),
(169,286,ls),
(169,283,o),
(166,281,qs),
(99,246,l),
(99,69,ls),
(99,16,o),
(143,16,qs),
(174,16,o),
(190,51,qs),
(193,59,o),
(197,59,qs),
(204,59,o),
(204,46,qs),
(204,24,o),
(167,-9,o),
(141,-9,qs),
(109,-9,o),
(73,32,o),
(73,68,qs),
(73,232,l),
(25,206,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
34 33 30 29 23 20 19 16 0 9 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 97 0 0 0 49 0 78 27 35 19 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 206;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(786,23,o),
(786,9,qs),
(786,6,ls),
(786,0,o),
(779,0,qs),
(500,0,ls),
(496,0,o),
(496,3,qs),
(496,126,l),
(444,-10,o),
(293,-10,qs),
(188,-10,o),
(128,58,qs),
(63,132,o),
(63,277,qs),
(63,403,o),
(114,478,qs),
(174,567,o),
(293,567,qs),
(444,567,o),
(496,426,q),
(496,553,ls),
(496,556,o),
(500,556,qs),
(762,556,ls),
(776,556,o),
(776,542,qs),
(776,539,ls),
(776,533,o),
(769,533,qs),
(522,533,l),
(522,285,l),
(742,285,ls),
(756,285,o),
(756,271,qs),
(756,268,ls),
(756,262,o),
(749,262,qs),
(522,262,l),
(522,23,l),
(772,23,ls)
);
},
{
closed = 1;
nodes = (
(431,67,qs),
(496,135,o),
(496,277,qs),
(496,402,o),
(445,471,qs),
(392,544,o),
(293,544,qs),
(207,544,o),
(155,488,qs),
(89,419,o),
(89,277,qs),
(89,152,o),
(140,84,qs),
(194,13,o),
(293,13,qs),
(379,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
18 1 9 3 19 1 1 2 31 1 7 0 32 1 6 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 50 48 41 56 42 56 0 40 0 39 36 38 36 35 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,-9,o),
(212,-9,qs),
(143,-9,o),
(99,35,qs),
(49,86,o),
(49,178,qs),
(49,258,o),
(88,309,qs),
(132,367,o),
(211,367,qs),
(328,367,o),
(363,256,q),
(379,308,o),
(454,367,o),
(503,367,qs),
(562,367,o),
(601,326,qs),
(645,279,o),
(645,203,qs),
(645,192,o),
(643,183,qs),
(642,172,o),
(631,172,qs),
(375,172,l),
(377,101,o),
(407,60,qs),
(442,13,o),
(508,13,qs),
(597,13,o),
(626,81,qs),
(629,89,o),
(635,89,qs),
(642,89,o),
(642,78,qs),
(642,55,o),
(616,30,qs),
(577,-9,o),
(507,-9,qs),
(395,-9,o),
(362,101,q),
(346,48,o)
);
},
{
closed = 1;
nodes = (
(308,52,qs),
(351,97,o),
(351,178,qs),
(351,249,o),
(318,294,qs),
(280,345,o),
(211,345,qs),
(153,345,o),
(117,306,qs),
(75,261,o),
(75,179,qs),
(75,108,o),
(107,63,qs),
(144,13,o),
(211,13,qs),
(271,13,o)
);
},
{
closed = 1;
nodes = (
(621,257,o),
(592,298,qs),
(560,345,o),
(502,345,qs),
(450,345,o),
(418,310,qs),
(380,271,o),
(375,194,q),
(618,194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
28 1 10 8 1 76 0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 49 0 78 57 57 42 41 57 65 57 65 62 60 50 48 41 56 42 56 38 35 38 35 35 20 33 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,691,o),
(291,691,qs),
(299,691,ls),
(308,691,o),
(303,685,q),
(245,628,ls),
(236,619,o),
(224,619,qs),
(207,619,ls),
(195,619,o),
(186,628,qs),
(129,685,l),
(126,687,o),
(128,691,o),
(131,691,qs),
(139,691,ls),
(154,691,o),
(164,681,qs),
(216,635,l),
(266,681,ls)
);
},
{
closed = 1;
nodes = (
(36,119,qs),
(43,119,o),
(46,109,qs),
(59,68,o),
(99,42,qs),
(144,12,o),
(207,12,qs),
(274,12,o),
(315,44,qs),
(360,80,o),
(360,149,qs),
(360,190,o),
(328,219,qs),
(299,245,o),
(219,275,qs),
(130,307,o),
(101,328,qs),
(45,365,o),
(45,424,qs),
(45,483,o),
(88,522,qs),
(136,567,o),
(214,567,qs),
(287,567,o),
(355,527,qs),
(371,517,o),
(379,506,o),
(376,498,qs),
(375,495,ls),
(372,488,o),
(369,488,qs),
(366,488,o),
(362,491,qs),
(360,492,o),
(359,493,qs),
(288,544,o),
(214,544,qs),
(155,544,o),
(116,516,qs),
(71,483,o),
(71,426,qs),
(71,384,o),
(104,356,qs),
(132,331,o),
(213,301,qs),
(300,270,o),
(331,249,qs),
(386,211,o),
(386,150,qs),
(386,82,o),
(344,39,qs),
(296,-11,o),
(209,-11,qs),
(129,-11,o),
(76,29,qs),
(27,66,o),
(27,103,qs),
(27,119,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 1 0 133 0 1 5 1 133 0 7 4 6 4 7 6 128 0 4 4 5 97 0 5 5 39 77 0 6 6 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
2 1 0 1 0 133 0 1 5 1 133 0 7 4 6 4 7 6 128 0 5 0 4 7 5 4 106 0 6 6 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 46 44 46 37 51 53 34 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,502,o),
(226,502,qs),
(234,502,ls),
(242,502,o),
(237,496,q),
(179,439,ls),
(170,431,o),
(158,431,qs),
(141,431,ls),
(129,431,o),
(120,439,qs),
(63,496,ls),
(56,502,o),
(66,502,qs),
(74,502,ls),
(88,502,o),
(99,492,qs),
(150,446,l),
(201,492,ls)
);
},
{
closed = 1;
nodes = (
(252,313,o),
(250,313,qs),
(247,313,o),
(241,317,q),
(240,317,o),
(240,318,q),
(203,344,o),
(150,344,qs),
(110,344,o),
(62,307,o),
(62,276,qs),
(62,251,o),
(84,234,qs),
(102,218,o),
(156,198,qs),
(213,177,o),
(234,161,qs),
(271,135,o),
(271,96,qs),
(271,52,o),
(240,23,qs),
(205,-11,o),
(149,-11,qs),
(103,-11,o),
(28,42,o),
(28,74,qs),
(28,87,o),
(35,87,qs),
(39,87,o),
(44,78,q),
(73,12,o),
(149,12,qs),
(192,12,o),
(245,55,o),
(245,92,qs),
(245,118,o),
(223,137,qs),
(204,153,o),
(151,173,qs),
(93,195,o),
(72,209,qs),
(36,234,o),
(36,273,qs),
(36,311,o),
(64,337,qs),
(97,367,o),
(150,367,qs),
(199,367,o),
(236,349,qs),
(258,338,o),
(256,324,qs),
(255,319,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
2 1 0 1 0 133 0 1 3 1 133 0 5 7 4 7 5 4 128 0 7 7 3 97 0 3 3 48 77 0 4 4 6 97 0 6 6 46 6 78 45 35 34 45 37 51 51 50 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,653,qs),
(176,653,o),
(176,634,qs),
(176,615,o),
(157,615,qs),
(138,615,o),
(138,634,qs),
(138,653,o)
);
},
{
closed = 1;
nodes = (
(248,653,qs),
(267,653,o),
(267,634,qs),
(267,615,o),
(248,615,qs),
(229,615,o),
(229,634,qs),
(229,653,o)
);
},
{
closed = 1;
nodes = (
(14,556,o),
(19,556,qs),
(23,556,ls),
(41,556,o),
(54,533,qs),
(210,247,l),
(378,547,ls),
(383,556,o),
(392,556,qs),
(404,556,ls),
(410,556,o),
(408,552,qs),
(223,223,l),
(223,3,ls),
(223,0,o),
(220,0,qs),
(200,0,ls),
(197,0,o),
(197,3,qs),
(197,223,l),
(16,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
30 23 20 17 16 5 4 73 3 1 1 2 1 0 4 1 0 105 5 1 4 4 39 4 78 52 43 34 34 34 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,691,o),
(299,691,qs),
(307,691,ls),
(316,691,o),
(311,685,q),
(253,628,ls),
(244,619,o),
(232,619,qs),
(215,619,ls),
(203,619,o),
(194,628,qs),
(137,685,ls),
(130,691,o),
(139,691,qs),
(147,691,ls),
(162,691,o),
(172,681,qs),
(224,635,l),
(274,681,ls)
);
},
{
closed = 1;
nodes = (
(387,23,o),
(387,9,qs),
(387,6,ls),
(387,0,o),
(382,0,qs),
(43,0,ls),
(40,0,o),
(40,3,qs),
(40,16,ls),
(40,27,o),
(47,38,qs),
(367,533,l),
(64,533,ls),
(62,533,o),
(62,536,qs),
(62,553,ls),
(62,556,o),
(64,556,qs),
(365,556,ls),
(389,556,o),
(389,536,qs),
(389,532,ls),
(389,524,o),
(377,505,qs),
(64,23,l),
(373,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
41 1 5 6 1 76 2 1 0 1 0 133 0 1 3 1 133 0 4 4 3 95 0 3 3 39 77 7 1 6 6 5 95 0 5 5 40 5 78 19 19 19 44 19 43 52 51 39 51 51 50 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,502,o),
(243,502,qs),
(251,502,ls),
(260,502,o),
(255,496,q),
(197,439,ls),
(188,431,o),
(176,431,qs),
(159,431,ls),
(147,431,o),
(138,439,qs),
(81,496,l),
(78,498,o),
(80,502,o),
(83,502,qs),
(91,502,ls),
(106,502,o),
(116,492,qs),
(168,446,l),
(218,492,ls)
);
},
{
closed = 1;
nodes = (
(293,23,o),
(293,20,qs),
(293,3,ls),
(293,0,o),
(290,0,qs),
(42,0,ls),
(39,0,o),
(39,3,qs),
(39,21,ls),
(39,28,o),
(45,37,qs),
(262,337,l),
(53,337,ls),
(50,337,o),
(50,340,qs),
(50,357,ls),
(50,360,o),
(53,360,qs),
(262,360,ls),
(288,360,o),
(288,338,qs),
(288,329,o),
(272,308,qs),
(66,23,l),
(290,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
2 1 0 1 0 133 0 1 3 1 133 0 4 4 3 95 0 3 3 42 77 7 1 6 6 5 95 0 5 5 40 5 78 20 20 20 44 20 42 52 51 38 51 53 34 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,360,o),
(54,360,qs),
(118,360,l),
(139,477,ls),
(153,556,o),
(221,556,qs),
(245,556,o),
(276,529,o),
(276,509,qs),
(276,490,o),
(266,490,qs),
(261,490,o),
(260,496,qs),
(255,517,o),
(237,533,o),
(219,533,qs),
(174,533,o),
(165,478,qs),
(144,360,l),
(233,360,ls),
(236,360,o),
(236,357,q),
(233,340,l),
(233,337,o),
(229,337,qs),
(140,337,l),
(64,-93,ls),
(51,-171,o),
(-18,-171,qs),
(-41,-171,o),
(-73,-144,o),
(-73,-124,qs),
(-73,-106,o),
(-63,-106,qs),
(-59,-106,o),
(-57,-111,q),
(-48,-148,o),
(-15,-148,qs),
(30,-148,o),
(39,-93,qs),
(114,337,l),
(49,337,ls),
(48,337,o),
(48,340,qs),
(50,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 7 6 5 6 7 5 128 0 2 0 1 0 2 1 128 0 6 6 8 97 0 8 8 39 77 4 1 0 0 5 95 9 1 5 5 42 77 0 1 1 3 97 0 3 3 50 3 78 42 41 35 35 34 51 18 35 34 34 48 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 310;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,431,o),
(14,431,qs),
(6,431,ls),
(3,431,o),
(1,434,o),
(3,436,qs),
(61,493,ls),
(69,502,o),
(82,502,qs),
(98,502,ls),
(111,502,o),
(119,493,qs),
(177,436,ls),
(183,431,o),
(174,431,qs),
(166,431,ls),
(152,431,o),
(141,440,qs),
(91,486,l),
(39,440,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 37 51 50 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 178;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,502,o),
(170,502,qs),
(178,502,ls),
(187,502,o),
(181,496,qs),
(123,439,ls),
(115,431,o),
(102,431,qs),
(86,431,ls),
(73,431,o),
(65,439,qs),
(7,496,ls),
(1,502,o),
(10,502,qs),
(18,502,ls),
(32,502,o),
(43,492,qs),
(95,446,l),
(145,492,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 1 0 133 0 1 1 118 51 51 50 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 178;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(7,497,qs),
(19,497,ls),
(25,497,o),
(27,490,qs),
(37,452,o),
(83,452,qs),
(130,452,o),
(140,490,qs),
(142,497,o),
(148,497,qs),
(160,497,ls),
(166,497,o),
(165,489,qs),
(160,463,o),
(115,431,o),
(83,431,qs),
(52,431,o),
(7,463,o),
(2,489,qs),
(1,497,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 1 1 76 3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 34 35 35 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 165;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,464,qs),
(38,464,o),
(38,445,qs),
(38,426,o),
(19,426,qs),
(0,426,o),
(0,445,qs),
(0,464,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 34 33 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 38;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,519,o),
(54,519,qs),
(77,519,o),
(109,486,o),
(109,463,qs),
(109,442,o),
(76,409,o),
(54,409,qs),
(33,409,o),
(0,442,o),
(0,463,qs),
(0,486,o)
);
},
{
closed = 1;
nodes = (
(88,448,o),
(88,463,qs),
(88,479,o),
(69,499,o),
(54,499,qs),
(40,499,o),
(21,479,o),
(21,463,qs),
(21,448,o),
(40,428,o),
(54,428,qs),
(69,428,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 109;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,qs),
(59,2,o),
(67,2,qs),
(78,2,ls),
(80,2,o),
(81,-2,o),
(79,-3,qs),
(26,-32,o),
(26,-77,qs),
(26,-111,o),
(63,-111,qs),
(78,-111,o),
(94,-104,q),
(101,-102,o),
(101,-108,qs),
(101,-119,ls),
(101,-125,o),
(94,-127,qs),
(75,-133,o),
(58,-133,qs),
(32,-133,o),
(0,-103,o),
(0,-78,qs),
(0,-33,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 8 values pushed */
16 10 8 3 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 1 2 112 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
23 39 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 101;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,427,o),
(0,432,qs),
(3,475,o),
(42,475,qs),
(54,475,o),
(82,463,qs),
(115,448,o),
(125,448,qs),
(142,448,o),
(145,465,qs),
(147,473,o),
(152,473,qs),
(168,473,ls),
(173,473,o),
(172,467,qs),
(164,426,o),
(125,426,qs),
(110,426,o),
(78,440,qs),
(52,452,o),
(42,452,qs),
(30,452,o),
(27,436,qs),
(25,427,o),
(20,427,qs),
(4,427,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 47 values pushed */
23 1 1 3 1 76 4 1 2 0 0 3 2 0 105 0 3 1 1 3 89 0 3 3 1 98 6 5 2 1 3 1 82 0 0 0 25 0 25 34 35 34 34 35 7 9 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 173;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,502,o),
(71,502,qs),
(88,502,ls),
(90,502,o),
(92,497,o),
(91,496,qs),
(38,440,ls),
(28,431,o),
(13,431,qs),
(6,431,ls),
(3,431,o),
(1,434,o),
(3,436,qs),
(50,493,ls)
);
},
{
closed = 1;
nodes = (
(153,502,o),
(166,502,qs),
(183,502,ls),
(185,502,o),
(188,498,o),
(186,496,qs),
(133,440,ls),
(123,431,o),
(108,431,qs),
(102,431,ls),
(93,431,o),
(98,436,qs),
(145,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 0 1 133 2 1 0 0 118 52 51 52 35 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 186;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,-160,o),
(91,-160,qs),
(71,-160,ls),
(68,-160,o),
(68,-157,qs),
(68,357,ls),
(68,360,o),
(71,360,qs),
(73,360,ls),
(94,360,o),
(94,332,qs),
(94,156,ls),
(94,13,o),
(209,13,qs),
(324,13,o),
(324,156,qs),
(324,357,ls),
(324,360,o),
(327,360,qs),
(329,360,ls),
(350,360,o),
(350,332,qs),
(350,159,ls),
(350,-9,o),
(209,-9,qs),
(129,-9,o),
(94,51,q),
(94,-157,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
21 10 0 3 2 1 1 76 25 22 2 0 73 3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 19 37 19 33 4 8 26 
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,11,qs),
(111,-2,o),
(94,-18,o),
(81,-18,qs),
(50,-18,o),
(50,14,qs),
(50,40,o),
(81,100,o),
(106,121,q),
(107,123,o),
(111,119,qs),
(121,110,o),
(109,91,qs),
(107,87,o),
(106,86,qs),
(105,85,o),
(103,82,qs),
(89,59,o),
(84,41,q),
(111,36,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,209,qs),
(114,196,o),
(96,177,o),
(84,177,qs),
(70,177,o),
(53,197,o),
(53,213,qs),
(53,238,o),
(84,298,o),
(109,319,q),
(110,321,o),
(114,318,qs),
(124,308,o),
(112,289,qs),
(110,285,o),
(109,284,qs),
(108,283,o),
(106,280,qs),
(92,257,o),
(87,239,q),
(114,235,o)
);
},
{
closed = 1;
nodes = (
(114,26,o),
(114,13,qs),
(114,0,o),
(96,-18,o),
(84,-18,qs),
(71,-18,o),
(53,0,o),
(53,13,qs),
(53,26,o),
(71,44,o),
(84,44,qs),
(96,44,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 0 133 3 1 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 0 1 0 133 3 1 1 2 2 1 89 3 1 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
22 21 28 26 21 32 22 32 47 4 7 23 
CALL[ ]	/* CallFunction */";
};
width = 167;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,116,o),
(223,122,qs),
(223,207,ls),
(223,244,o),
(169,280,qs),
(122,312,o),
(109,325,qs),
(69,363,o),
(68,419,qs),
(67,484,o),
(104,521,qs),
(142,559,o),
(209,559,qs),
(240,559,o),
(302,535,o),
(308,520,qs),
(312,510,o),
(301,510,qs),
(297,510,o),
(293,513,q),
(248,535,o),
(209,536,qs),
(172,536,o),
(142,518,qs),
(92,488,o),
(94,419,qs),
(95,388,o),
(111,364,qs),
(126,342,o),
(165,315,qs),
(219,278,o),
(249,241,o),
(249,211,qs),
(249,122,ls),
(249,116,o),
(243,116,qs),
(229,116,ls)
);
},
{
closed = 1;
nodes = (
(266,26,o),
(266,13,qs),
(266,0,o),
(248,-18,o),
(235,-18,qs),
(223,-18,o),
(205,0,o),
(205,13,qs),
(205,26,o),
(223,44,o),
(235,44,qs),
(248,44,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
34 2 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 0 0 0 2 97 0 2 2 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 7 1 4 0 5 4 5 101 0 0 0 2 97 0 2 2 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
38 37 0 0 44 42 37 48 38 48 0 36 0 36 35 34 45 8 7 25 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,23,o),
(377,12,o),
(377,3,qs),
(377,2,ls),
(377,0,o),
(375,0,qs),
(163,0,ls),
(101,0,o),
(75,-22,qs),
(71,-26,o),
(66,-26,qs),
(61,-26,o),
(61,-19,qs),
(63,5,o),
(102,17,qs),
(127,24,o),
(157,23,qs),
(160,23,l),
(87,68,o),
(87,166,qs),
(87,242,o),
(128,287,qs),
(172,334,o),
(247,334,qs),
(285,334,o),
(315,319,qs),
(338,307,o),
(338,296,qs),
(338,289,o),
(330,289,qs),
(327,289,o),
(322,292,qs),
(287,311,o),
(243,311,qs),
(191,311,o),
(156,278,qs),
(113,238,o),
(113,166,qs),
(113,115,o),
(141,75,qs),
(179,23,o),
(248,23,qs),
(349,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
29 1 5 6 1 76 0 2 1 0 1 2 0 128 0 5 6 5 134 0 3 0 1 2 3 1 105 4 7 2 0 0 6 95 0 6 6 24 6 78 1 0 36 34 32 30 26 24 19 17 13 11 9 7 0 42 1 41 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,656,qs),
(62,672,o),
(50,672,qs),
(41,672,o),
(32,664,o),
(22,646,qs),
(20,642,o),
(17,646,qs),
(13,652,o),
(13,661,qs),
(13,694,o),
(47,694,qs),
(62,694,o),
(92,681,qs),
(129,664,o),
(141,664,qs),
(150,664,o),
(159,673,o),
(169,691,qs),
(171,695,o),
(174,691,qs),
(178,685,o),
(178,676,qs),
(178,643,o),
(144,643,qs),
(129,643,o)
);
},
{
closed = 1;
nodes = (
(77,0,o),
(77,3,qs),
(77,521,ls),
(77,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(101,556,ls),
(104,556,o),
(104,553,qs),
(104,34,ls),
(104,17,o),
(99,9,qs),
(93,0,o),
(82,0,qs),
(80,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 31 2 4 5 1 76 0 2 0 3 1 2 3 105 0 1 6 1 0 5 1 0 105 0 5 5 23 77 0 4 4 24 4 78 1 0 35 34 27 26 23 21 14 12 10 8 0 25 1 25 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,673,o),
(165,654,qs),
(165,653,ls),
(165,651,o),
(163,651,qs),
(83,651,ls),
(51,651,o),
(26,643,q),
(24,643,o),
(21,642,qs),
(19,641,o),
(18,641,qs),
(16,641,o),
(16,644,qs),
(16,648,o),
(17,651,qs),
(21,670,o),
(47,672,q),
(30,695,o),
(30,723,qs),
(30,753,o),
(66,791,o),
(93,791,qs),
(113,791,o),
(144,771,o),
(144,758,qs),
(144,753,o),
(139,755,qs),
(137,756,o),
(134,758,qs),
(128,762,o),
(125,763,qs),
(113,769,o),
(100,769,qs),
(55,769,o),
(55,722,qs),
(55,700,o),
(79,673,o),
(99,673,qs),
(147,673,ls)
);
},
{
closed = 1;
nodes = (
(104,556,o),
(104,553,qs),
(104,34,ls),
(104,17,o),
(99,9,qs),
(94,0,o),
(83,0,qs),
(80,0,ls),
(78,0,o),
(78,3,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
21 1 3 0 29 25 2 4 3 53 45 2 5 4 3 76 0 2 0 1 0 2 1 105 6 1 0 0 3 4 0 3 103 0 4 4 23 77 0 5 5 24 5 78 1 0 49 48 41 40 34 32 17 15 6 4 0 39 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,451,qs),
(146,455,o),
(147,457,q),
(152,476,o),
(177,479,q),
(161,502,o),
(161,529,qs),
(161,559,o),
(196,598,o),
(224,598,qs),
(243,598,o),
(274,577,o),
(274,564,qs),
(274,559,o),
(270,562,qs),
(268,563,o),
(265,565,qs),
(259,568,o),
(255,570,qs),
(243,576,o),
(230,576,qs),
(186,576,o),
(186,529,qs),
(186,507,o),
(210,479,o),
(229,479,qs),
(278,479,ls),
(296,479,o),
(296,461,qs),
(296,459,ls),
(296,458,o),
(294,458,qs),
(213,458,ls),
(182,458,o),
(156,450,qs),
(154,449,o),
(152,448,qs),
(149,447,o),
(149,447,q),
(146,447,o)
);
},
{
closed = 1;
nodes = (
(383,107,qs),
(383,-2,o),
(369,-98,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(148,-214,o),
(107,-196,q),
(91,-187,o),
(90,-182,qs),
(88,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(353,-191,o),
(356,28,q),
(292,-11,o),
(222,-9,qs),
(155,-8,o),
(113,38,qs),
(67,90,o),
(67,174,qs),
(67,251,o),
(105,302,qs),
(149,360,o),
(222,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o)
);
},
{
closed = 1;
nodes = (
(356,57,q),
(357,76,o),
(357,89,qs),
(358,204,o),
(330,263,qs),
(295,337,o),
(223,337,qs),
(171,337,o),
(135,298,qs),
(93,252,o),
(93,174,qs),
(93,110,o),
(123,67,qs),
(159,14,o),
(223,14,qs),
(302,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
38 0 2 4 0 85 52 2 9 10 2 76 34 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 11 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 11 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
72 71 80 78 71 86 72 86 36 19 34 38 43 41 35 52 37 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,3,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,34,ls),
(104,17,o),
(100,9,qs),
(94,0,o),
(83,0,qs),
(80,0,ls)
);
},
{
closed = 1;
nodes = (
(163,-204,o),
(163,-222,qs),
(163,-224,ls),
(163,-226,o),
(161,-226,qs),
(81,-226,ls),
(49,-226,o),
(24,-233,q),
(22,-234,o),
(19,-235,qs),
(17,-236,o),
(16,-236,qs),
(14,-236,o),
(14,-232,qs),
(14,-228,o),
(15,-226,q),
(19,-207,o),
(45,-204,q),
(28,-182,o),
(28,-154,qs),
(28,-124,o),
(64,-86,o),
(91,-86,qs),
(111,-86,o),
(142,-106,o),
(142,-119,qs),
(142,-124,o),
(137,-122,qs),
(135,-121,o),
(132,-119,qs),
(126,-115,o),
(123,-113,qs),
(111,-107,o),
(98,-107,qs),
(53,-107,o),
(53,-154,qs),
(53,-177,o),
(77,-204,o),
(97,-204,qs),
(145,-204,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
13 5 2 0 1 1 76 37 1 2 1 75 41 1 5 73 0 4 0 3 2 4 3 105 6 1 2 0 5 2 5 99 0 1 1 23 77 0 0 0 24 0 78 17 16 50 48 33 31 22 20 16 55 17 54 23 16 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,313,qs),
(68,317,o),
(68,319,q),
(73,338,o),
(98,341,q),
(82,363,o),
(82,391,qs),
(82,421,o),
(117,459,o),
(145,459,qs),
(165,459,o),
(195,439,o),
(195,426,qs),
(195,421,o),
(191,423,qs),
(189,424,o),
(186,426,qs),
(180,430,o),
(176,432,qs),
(164,438,o),
(151,438,qs),
(107,438,o),
(107,391,qs),
(107,368,o),
(131,341,o),
(150,341,qs),
(199,341,ls),
(217,341,o),
(217,323,qs),
(217,321,ls),
(217,319,o),
(215,319,qs),
(134,319,ls),
(103,319,o),
(78,312,q),
(76,311,o),
(73,310,qs),
(70,309,o),
(70,309,q),
(68,309,o)
);
},
{
closed = 1;
nodes = (
(593,13,o),
(588,-19,qs),
(575,-96,o),
(515,-150,qs),
(442,-214,o),
(330,-214,qs),
(224,-214,o),
(151,-153,qs),
(67,-82,o),
(67,33,qs),
(67,145,o),
(125,219,q),
(130,224,o),
(136,224,qs),
(144,224,o),
(144,217,qs),
(144,212,o),
(141,208,q),
(93,124,o),
(93,40,qs),
(93,-57,o),
(157,-121,qs),
(226,-191,o),
(330,-191,qs),
(409,-191,o),
(470,-150,qs),
(543,-103,o),
(561,-21,qs),
(566,2,o),
(530,27,o),
(477,37,qs),
(429,45,o),
(404,52,qs),
(354,65,o),
(322,96,qs),
(281,137,o),
(281,200,qs),
(281,273,o),
(326,316,qs),
(372,360,o),
(445,360,qs),
(500,360,o),
(533,342,qs),
(556,330,o),
(556,319,qs),
(556,312,o),
(549,312,qs),
(545,312,o),
(540,315,qs),
(502,337,o),
(446,337,qs),
(393,337,o),
(355,307,qs),
(307,269,o),
(307,200,qs),
(307,152,o),
(368,83,o),
(421,72,qs),
(437,69,o),
(468,63,qs),
(485,60,ls),
(547,48,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
26 24 2 6 2 1 76 34 1 1 36 1 0 2 75 0 5 0 8 0 5 8 128 0 8 7 0 8 7 126 0 3 0 2 6 3 2 105 0 6 0 4 0 6 4 105 0 1 0 0 5 1 0 103 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 96 94 87 86 78 76 61 59 55 53 51 49 41 35 52 37 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,3,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,34,ls),
(104,17,o),
(100,9,qs),
(94,0,o),
(83,0,qs),
(80,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
13 5 2 0 1 1 76 0 1 1 23 77 0 0 0 24 0 78 23 16 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls)
);
},
{
closed = 1;
nodes = (
(401,-96,o),
(401,-108,qs),
(401,-120,o),
(385,-137,o),
(373,-137,qs),
(361,-137,o),
(345,-120,o),
(345,-108,qs),
(345,-95,o),
(361,-79,o),
(373,-79,qs),
(385,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
21 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 7 1 4 0 5 4 5 101 6 1 0 0 2 95 0 2 2 24 2 78 35 34 1 0 41 39 34 45 35 45 25 24 17 14 8 7 0 33 1 32 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,520,o),
(118,532,qs),
(118,543,o),
(133,558,o),
(144,558,qs),
(154,558,o),
(169,543,o),
(169,532,qs),
(169,520,o),
(154,505,o),
(144,505,qs),
(133,505,o)
);
},
{
closed = 1;
nodes = (
(203,520,o),
(203,532,qs),
(203,543,o),
(218,558,o),
(229,558,qs),
(239,558,o),
(254,543,o),
(254,532,qs),
(254,520,o),
(239,505,o),
(229,505,qs),
(218,505,o)
);
},
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
59 39 32 3 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
7 2 6 3 0 0 1 97 3 1 1 1 23 77 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
8 1 5 0 4 5 4 101 7 2 6 3 0 0 1 97 3 1 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 68 54 68 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(309,387,o),
(309,398,qs),
(309,409,o),
(324,424,o),
(335,424,qs),
(346,424,o),
(360,409,o),
(360,398,qs),
(360,387,o),
(346,372,o),
(335,372,qs),
(324,372,o)
);
},
{
closed = 1;
nodes = (
(394,387,o),
(394,398,qs),
(394,409,o),
(409,424,o),
(420,424,qs),
(431,424,o),
(445,409,o),
(445,398,qs),
(445,387,o),
(431,372,o),
(420,372,qs),
(409,372,o)
);
},
{
closed = 1;
nodes = (
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
45 1 5 7 1 76 0 7 0 5 0 7 5 128 0 5 4 0 5 4 126 3 1 1 9 2 8 3 0 7 1 0 105 10 1 4 4 6 95 0 6 6 24 6 78 25 24 13 12 1 0 49 48 41 38 32 31 24 57 25 56 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,456,o),
(351,467,qs),
(351,478,o),
(367,493,o),
(378,493,qs),
(388,493,o),
(404,478,o),
(404,467,qs),
(404,456,o),
(389,441,o),
(378,441,qs),
(367,441,o)
);
},
{
closed = 1;
nodes = (
(310,387,o),
(310,398,qs),
(310,409,o),
(325,424,o),
(335,424,qs),
(346,424,o),
(361,409,o),
(361,398,qs),
(361,387,o),
(346,372,o),
(335,372,qs),
(325,372,o)
);
},
{
closed = 1;
nodes = (
(395,387,o),
(395,398,qs),
(395,409,o),
(410,424,o),
(420,424,qs),
(431,424,o),
(446,409,o),
(446,398,qs),
(446,387,o),
(431,372,o),
(420,372,qs),
(410,372,o)
);
},
{
closed = 1;
nodes = (
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
57 1 7 9 1 76 0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 6 8 95 0 8 8 24 8 78 37 36 25 24 13 12 1 0 61 60 53 50 44 43 36 69 37 68 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(493,23,l),
(475,35,o),
(447,104,o),
(422,195,qs),
(383,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,324,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(478,77,o),
(515,38,qs),
(529,23,o),
(558,23,qs),
(560,23,o),
(560,22,qs),
(560,0,o),
(535,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-252,qs),
(175,-305,o),
(260,-308,qs),
(350,-310,o),
(426,-270,qs),
(441,-262,o),
(455,-252,qs),
(457,-250,o),
(458,-249,qs),
(465,-244,o),
(476,-247,o),
(475,-254,qs),
(474,-260,o),
(461,-270,qs),
(433,-294,o),
(400,-308,qs),
(335,-333,o),
(260,-331,qs),
(173,-329,o)
);
},
{
closed = 1;
nodes = (
(263,-164,o),
(263,-151,qs),
(263,-139,o),
(278,-122,o),
(290,-122,qs),
(302,-122,o),
(319,-139,o),
(319,-151,qs),
(319,-163,o),
(302,-181,o),
(290,-181,qs),
(279,-181,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
40 1 3 5 1 76 0 4 0 5 3 4 5 105 0 8 10 1 7 1 8 7 105 0 1 9 1 0 1 0 101 6 1 3 3 2 95 0 2 2 24 2 78 63 62 1 0 69 67 62 73 63 73 55 53 49 47 35 33 29 26 25 22 16 14 0 61 1 61 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(493,23,l),
(475,35,o),
(447,104,o),
(422,195,qs),
(383,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,324,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(478,77,o),
(515,38,qs),
(529,23,o),
(558,23,qs),
(560,23,o),
(560,22,qs),
(560,0,o),
(535,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-252,qs),
(175,-305,o),
(260,-308,qs),
(350,-310,o),
(426,-270,qs),
(441,-262,o),
(455,-252,qs),
(457,-250,o),
(458,-249,qs),
(465,-244,o),
(476,-247,o),
(475,-254,qs),
(474,-260,o),
(461,-270,qs),
(433,-294,o),
(400,-308,qs),
(335,-333,o),
(260,-331,qs),
(173,-329,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
40 1 3 5 1 76 0 4 0 5 3 4 5 105 0 1 7 1 0 1 0 101 6 1 3 3 2 95 0 2 2 24 2 78 1 0 55 53 49 47 35 33 29 26 25 22 16 14 0 61 1 61 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,478,o),
(308,466,qs),
(308,454,o),
(291,437,o),
(279,437,qs),
(267,437,o),
(251,454,o),
(251,466,qs),
(251,478,o),
(267,495,o),
(279,495,qs),
(291,495,o)
);
},
{
closed = 1;
nodes = (
(121,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(493,23,l),
(475,35,o),
(447,104,o),
(422,195,qs),
(383,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,324,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(478,77,o),
(515,38,qs),
(529,23,o),
(558,23,qs),
(560,23,o),
(560,22,qs),
(560,0,o),
(535,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-252,qs),
(175,-305,o),
(260,-308,qs),
(350,-310,o),
(426,-270,qs),
(441,-262,o),
(455,-252,qs),
(457,-250,o),
(458,-249,qs),
(465,-244,o),
(476,-247,o),
(475,-254,qs),
(474,-260,o),
(461,-270,qs),
(433,-294,o),
(400,-308,qs),
(335,-333,o),
(260,-331,qs),
(173,-329,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
52 1 5 7 1 76 9 1 0 0 1 6 0 1 105 0 6 0 7 5 6 7 105 0 3 10 1 2 3 2 101 8 1 5 5 4 95 0 4 4 24 4 78 13 12 1 0 67 65 61 59 47 45 41 38 37 34 28 26 12 73 13 73 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o),
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,93,o),
(307,49,qs),
(268,0,o),
(198,0,qs),
(63,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 28 25 19 17 14 13 9 7 0 33 1 30 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 410;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,473,o),
(173,461,qs),
(173,448,o),
(156,431,o),
(144,431,qs),
(133,431,o),
(117,448,o),
(117,461,qs),
(117,473,o),
(132,489,o),
(144,489,qs),
(156,489,o)
);
},
{
closed = 1;
nodes = (
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o),
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,93,o),
(307,49,qs),
(268,0,o),
(198,0,qs),
(63,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 40 37 31 29 26 25 21 19 12 45 13 42 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 410;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
13 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 97 0 2 0 2 81 1 0 17 16 11 9 5 4 0 22 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,461,o),
(175,448,qs),
(175,436,o),
(159,419,o),
(147,419,qs),
(135,419,o),
(119,436,o),
(119,448,qs),
(119,461,o),
(135,477,o),
(147,477,qs),
(159,477,o)
);
},
{
closed = 1;
nodes = (
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
25 1 3 5 1 76 0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 7 1 2 4 4 2 89 7 1 2 2 4 97 0 4 2 4 81 13 12 1 0 29 28 23 21 17 16 12 34 13 34 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(989,341,o),
(989,338,qs),
(989,133,ls),
(989,69,o),
(957,31,qs),
(922,-9,o),
(860,-9,qs),
(775,-9,o),
(744,62,q),
(713,-9,o),
(628,-9,qs),
(560,-9,o),
(525,39,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,262,ls),
(499,279,o),
(504,287,qs),
(509,297,o),
(520,297,qs),
(523,297,ls),
(525,297,o),
(525,294,qs),
(525,133,ls),
(525,78,o),
(580,14,o),
(628,14,qs),
(674,14,o),
(701,43,qs),
(731,76,o),
(731,133,qs),
(731,284,ls),
(731,302,o),
(735,309,qs),
(741,319,o),
(752,319,qs),
(755,319,ls),
(757,319,o),
(757,316,qs),
(757,133,ls),
(757,78,o),
(812,14,o),
(860,14,qs),
(906,14,o),
(933,43,qs),
(963,76,o),
(963,133,qs),
(963,307,ls),
(963,324,o),
(967,332,qs),
(973,341,o),
(984,341,qs),
(986,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
76 1 2 0 13 1 4 2 29 1 6 4 69 65 2 1 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 101 3 1 1 1 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
72 70 37 39 40 39 22 39 22 39 16 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1065;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(719,484,o),
(719,494,qs),
(719,505,o),
(734,521,o),
(745,521,qs),
(756,521,o),
(771,505,o),
(771,494,qs),
(771,484,o),
(756,469,o),
(745,469,qs),
(734,469,o)
);
},
{
closed = 1;
nodes = (
(678,415,o),
(678,426,qs),
(678,437,o),
(692,452,o),
(703,452,qs),
(714,452,o),
(729,437,o),
(729,426,qs),
(729,415,o),
(714,399,o),
(703,399,qs),
(692,399,o)
);
},
{
closed = 1;
nodes = (
(777,452,o),
(788,452,qs),
(799,452,o),
(814,437,o),
(814,426,qs),
(814,415,o),
(799,399,o),
(788,399,qs),
(777,399,o),
(763,415,o),
(763,426,qs),
(763,437,o)
);
},
{
closed = 1;
nodes = (
(989,341,o),
(989,338,qs),
(989,133,ls),
(989,69,o),
(957,31,qs),
(922,-9,o),
(860,-9,qs),
(775,-9,o),
(744,62,q),
(713,-9,o),
(628,-9,qs),
(560,-9,o),
(525,39,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,262,ls),
(499,279,o),
(504,287,qs),
(509,297,o),
(520,297,qs),
(523,297,ls),
(525,297,o),
(525,294,qs),
(525,133,ls),
(525,78,o),
(580,14,o),
(628,14,qs),
(674,14,o),
(701,43,qs),
(731,76,o),
(731,133,qs),
(731,284,ls),
(731,302,o),
(735,309,qs),
(741,319,o),
(752,319,qs),
(755,319,ls),
(757,319,o),
(757,316,qs),
(757,133,ls),
(757,78,o),
(812,14,o),
(860,14,qs),
(906,14,o),
(933,43,qs),
(963,76,o),
(963,133,qs),
(963,307,ls),
(963,324,o),
(967,332,qs),
(973,341,o),
(984,341,qs),
(986,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
112 1 8 6 49 1 10 8 65 1 12 10 105 101 2 7 12 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 101 9 1 7 7 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 105 0 11 13 13 11 89 0 11 11 13 97 0 13 11 13 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
13 12 1 0 108 106 104 102 97 95 88 86 78 76 69 68 62 60 53 52 46 44 37 36 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1065;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1093,320,qs),
(1161,268,o),
(1161,172,qs),
(1161,98,o),
(1122,51,qs),
(1079,0,o),
(1008,0,qs),
(630,0,ls),
(561,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(631,23,l),
(657,153,o),
(731,243,qs),
(828,360,o),
(968,360,qs),
(1041,360,o)
);
},
{
closed = 1;
nodes = (
(1057,23,o),
(1093,60,qs),
(1136,102,o),
(1135,172,qs),
(1134,247,o),
(1088,291,qs),
(1042,337,o),
(969,337,qs),
(858,337,o),
(773,252,qs),
(685,163,o),
(659,23,q),
(1004,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
9 1 7 2 45 1 1 4 2 76 0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 101 10 8 2 1 1 6 95 0 6 6 24 6 78 56 56 1 0 56 68 56 67 61 59 49 46 41 39 32 30 22 20 13 12 6 4 0 55 1 55 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1226;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,454,o),
(920,466,qs),
(920,478,o),
(936,495,o),
(948,495,qs),
(960,495,o),
(976,478,o),
(976,466,qs),
(976,454,o),
(960,437,o),
(948,437,qs),
(936,437,o)
);
},
{
closed = 1;
nodes = (
(1093,320,qs),
(1161,268,o),
(1161,172,qs),
(1161,98,o),
(1122,51,qs),
(1079,0,o),
(1008,0,qs),
(630,0,ls),
(561,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(631,23,l),
(657,153,o),
(731,243,qs),
(828,360,o),
(968,360,qs),
(1041,360,o)
);
},
{
closed = 1;
nodes = (
(1057,23,o),
(1093,60,qs),
(1136,102,o),
(1135,172,qs),
(1134,247,o),
(1088,291,qs),
(1042,337,o),
(969,337,qs),
(858,337,o),
(773,252,qs),
(685,163,o),
(659,23,q),
(1004,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
21 1 9 4 57 1 3 6 2 76 0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 101 13 10 2 3 3 8 95 0 8 8 24 8 78 68 68 13 12 1 0 68 80 68 79 73 71 61 58 53 51 44 42 34 32 25 24 18 16 12 67 13 67 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1226;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,320,qs),
(720,268,o),
(720,172,qs),
(720,98,o),
(681,51,qs),
(638,0,o),
(567,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(192,23,l),
(192,521,ls),
(192,538,o),
(197,546,qs),
(202,556,o),
(213,556,qs),
(216,556,ls),
(218,556,o),
(218,553,qs),
(218,119,l),
(257,218,o),
(325,280,qs),
(413,360,o),
(527,360,qs),
(600,360,o)
);
},
{
closed = 1;
nodes = (
(616,23,o),
(652,60,qs),
(695,102,o),
(694,172,qs),
(693,247,o),
(647,292,qs),
(601,337,o),
(528,337,qs),
(417,337,o),
(332,252,qs),
(244,163,o),
(218,23,q),
(563,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
5 1 0 1 4 1 2 4 2 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 95 0 3 3 24 3 78 29 29 1 0 29 41 29 40 34 32 22 17 15 13 9 8 0 28 1 28 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 787;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,320,qs),
(720,268,o),
(720,172,qs),
(720,98,o),
(681,51,qs),
(638,0,o),
(567,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(192,23,l),
(192,521,ls),
(192,538,o),
(197,546,qs),
(202,556,o),
(213,556,qs),
(216,556,ls),
(218,556,o),
(218,553,qs),
(218,119,l),
(257,218,o),
(325,280,qs),
(413,360,o),
(527,360,qs),
(600,360,o)
);
},
{
closed = 1;
nodes = (
(479,454,o),
(479,466,qs),
(479,478,o),
(495,495,o),
(507,495,qs),
(519,495,o),
(535,478,o),
(535,466,qs),
(535,454,o),
(518,437,o),
(507,437,qs),
(495,437,o)
);
},
{
closed = 1;
nodes = (
(616,23,o),
(652,60,qs),
(695,102,o),
(694,172,qs),
(693,247,o),
(647,292,qs),
(601,337,o),
(528,337,qs),
(417,337,o),
(332,252,qs),
(244,163,o),
(218,23,q),
(563,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
5 1 5 1 4 1 2 6 2 76 0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 95 0 3 3 24 3 78 41 41 30 29 1 0 41 53 41 52 46 44 36 34 29 40 30 40 22 17 15 13 9 8 0 28 1 28 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 787;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-99,o),
(96,-55,qs),
(132,-1,o),
(200,16,q),
(161,35,o),
(110,126,o),
(110,177,qs),
(110,260,o),
(159,309,qs),
(209,360,o),
(291,360,qs),
(329,360,o),
(397,336,o),
(403,321,qs),
(407,311,o),
(396,311,qs),
(393,311,o),
(388,314,qs),
(344,336,o),
(288,337,qs),
(229,337,o),
(188,301,qs),
(136,256,o),
(136,177,qs),
(136,124,o),
(166,81,qs),
(207,23,o),
(281,23,qs),
(430,23,ls),
(442,23,o),
(458,12,o),
(458,3,qs),
(458,2,ls),
(458,0,o),
(456,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
44 1 1 2 58 1 0 1 2 76 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 0 0 6 0 6 101 0 2 2 1 95 0 1 1 24 1 78 45 35 34 38 53 38 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,454,o),
(255,466,qs),
(255,478,o),
(271,495,o),
(283,495,qs),
(295,495,o),
(311,478,o),
(311,466,qs),
(311,454,o),
(294,437,o),
(283,437,qs),
(271,437,o)
);
},
{
closed = 1;
nodes = (
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-99,o),
(96,-55,qs),
(132,-1,o),
(200,16,q),
(161,35,o),
(110,126,o),
(110,177,qs),
(110,260,o),
(159,309,qs),
(209,360,o),
(291,360,qs),
(329,360,o),
(397,336,o),
(403,321,qs),
(407,311,o),
(396,311,qs),
(393,311,o),
(388,314,qs),
(344,336,o),
(288,337,qs),
(229,337,o),
(188,301,qs),
(136,256,o),
(136,177,qs),
(136,124,o),
(166,81,qs),
(207,23,o),
(281,23,qs),
(430,23,ls),
(442,23,o),
(458,12,o),
(458,3,qs),
(458,2,ls),
(458,0,o),
(456,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
56 1 3 4 70 1 2 3 2 76 0 6 5 4 5 6 4 128 0 1 9 1 0 7 1 0 105 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 0 4 4 3 95 0 3 3 24 3 78 1 0 65 63 50 48 45 43 41 39 33 30 25 23 17 15 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,0,l),
(-6,0,l),
(-6,23,l),
(110,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,454,o),
(606,466,qs),
(606,478,o),
(622,495,o),
(634,495,qs),
(646,495,o),
(662,478,o),
(662,466,qs),
(662,454,o),
(646,437,o),
(634,437,qs),
(622,437,o)
);
},
{
closed = 1;
nodes = (
(737,313,qs),
(785,261,o),
(785,179,qs),
(785,109,o),
(749,61,qs),
(707,3,o),
(635,0,q),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(548,23,l),
(474,71,o),
(474,179,qs),
(474,250,o),
(511,300,qs),
(555,360,o),
(629,360,qs),
(694,360,o)
);
},
{
closed = 1;
nodes = (
(719,63,qs),
(759,107,o),
(759,178,qs),
(759,241,o),
(728,285,qs),
(691,337,o),
(629,337,qs),
(575,337,o),
(540,296,qs),
(500,251,o),
(500,178,qs),
(500,117,o),
(531,74,qs),
(567,23,o),
(629,23,qs),
(683,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 4 7 3 7 4 3 128 0 1 8 1 0 2 1 0 105 9 1 2 0 7 4 2 7 105 10 6 2 3 3 5 95 0 5 5 24 5 78 44 43 13 12 1 0 52 50 43 58 44 58 36 33 27 26 20 18 12 42 13 42 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,455,o),
(369,467,qs),
(369,478,o),
(384,493,o),
(395,493,qs),
(405,493,o),
(420,478,o),
(420,467,qs),
(420,455,o),
(405,440,o),
(395,440,qs),
(384,440,o)
);
},
{
closed = 1;
nodes = (
(454,455,o),
(454,467,qs),
(454,478,o),
(469,493,o),
(480,493,qs),
(490,493,o),
(505,478,o),
(505,467,qs),
(505,455,o),
(490,440,o),
(480,440,qs),
(469,440,o)
);
},
{
closed = 1;
nodes = (
(596,44,qs),
(593,-19,o),
(578,-59,qs),
(552,-128,o),
(492,-169,qs),
(426,-214,o),
(335,-214,qs),
(228,-214,o),
(155,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(161,-123,qs),
(230,-191,o),
(335,-191,qs),
(404,-191,o),
(458,-159,qs),
(522,-122,o),
(550,-55,qs),
(564,-20,o),
(569,27,q),
(506,-11,o),
(436,-9,qs),
(368,-8,o),
(327,38,qs),
(281,89,o),
(281,174,qs),
(281,251,o),
(319,302,qs),
(363,360,o),
(436,360,qs),
(530,360,o),
(571,268,qs),
(605,190,o)
);
},
{
closed = 1;
nodes = (
(570,57,q),
(571,78,o),
(571,89,qs),
(572,204,o),
(544,263,qs),
(509,337,o),
(437,337,qs),
(384,337,o),
(349,298,qs),
(307,252,o),
(307,174,qs),
(307,110,o),
(337,67,qs),
(373,14,o),
(437,14,qs),
(516,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
82 36 2 9 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 13 1 9 0 5 6 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
69 68 13 12 1 0 77 75 68 83 69 83 61 59 53 51 43 41 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,556,o),
(672,553,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,521,ls),
(646,538,o),
(650,546,qs),
(656,556,o),
(667,556,qs),
(670,556,ls)
);
},
{
closed = 1;
nodes = (
(299,269,qs),
(299,273,o),
(299,276,q),
(302,288,o),
(318,294,qs),
(326,296,o),
(339,298,q),
(319,319,o),
(319,353,qs),
(319,386,o),
(361,427,o),
(394,427,qs),
(416,427,o),
(449,408,o),
(452,394,qs),
(453,389,o),
(449,391,qs),
(447,392,o),
(444,394,qs),
(437,397,o),
(433,399,qs),
(416,406,o),
(399,406,qs),
(374,406,o),
(344,377,o),
(344,353,qs),
(344,328,o),
(373,298,o),
(397,298,qs),
(455,298,ls),
(474,298,o),
(474,279,qs),
(474,278,ls),
(474,276,o),
(471,276,qs),
(381,276,ls),
(334,276,o),
(309,268,q),
(307,268,o),
(305,267,qs),
(302,266,o),
(301,266,qs),
(299,266,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
31 1 7 0 59 1 5 6 75 36 2 1 4 3 76 69 1 5 73 1 4 2 75 0 2 5 4 5 2 4 128 0 7 0 6 5 7 6 105 0 5 0 4 1 5 4 103 0 0 0 23 77 0 1 1 3 95 0 3 3 24 3 78 41 36 52 44 54 22 55 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 3 1 1 76 0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 101 0 1 1 23 1 78 1 0 28 26 18 16 9 8 0 35 1 35 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,311,qs),
(528,253,o),
(528,143,qs),
(528,-9,o),
(394,-9,qs),
(281,-9,o),
(174,57,q),
(173,57,ls),
(80,47,o),
(80,-72,qs),
(80,-253,ls),
(80,-270,o),
(76,-278,qs),
(70,-287,o),
(59,-287,qs),
(56,-287,ls),
(54,-287,o),
(54,-284,qs),
(54,-72,ls),
(54,68,o),
(166,79,q),
(172,91,o),
(185,119,qs),
(191,132,o),
(193,137,q),
(198,145,o),
(203,157,qs),
(250,262,o),
(272,294,qs),
(318,360,o),
(378,360,qs),
(441,360,o)
);
},
{
closed = 1;
nodes = (
(502,143,qs),
(502,239,o),
(468,289,qs),
(435,337,o),
(378,337,qs),
(338,337,o),
(301,288,qs),
(270,246,o),
(221,135,qs),
(219,130,ls),
(201,89,o),
(193,75,q),
(238,47,o),
(347,14,o),
(393,14,qs),
(502,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
35 23 2 3 4 13 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 1 134 5 1 0 0 4 3 0 4 105 6 1 3 3 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 2 1 134 5 1 0 0 4 3 0 4 105 6 1 3 2 2 3 89 6 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
33 32 1 0 43 41 32 47 33 47 27 25 17 16 0 31 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 595;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,359,o),
(340,347,qs),
(340,335,o),
(324,318,o),
(312,318,qs),
(300,318,o),
(284,335,o),
(284,347,qs),
(284,360,o),
(300,376,o),
(312,376,qs),
(324,376,o)
);
},
{
closed = 1;
nodes = (
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
17 1 1 3 1 76 0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 97 7 1 2 4 2 81 13 12 1 0 40 38 30 28 21 20 12 47 13 47 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 15 8 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 44 30 44 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,107,qs),
(383,-2,o),
(369,-98,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(148,-214,o),
(107,-196,q),
(91,-187,o),
(90,-182,qs),
(88,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(353,-191,o),
(356,28,q),
(292,-11,o),
(222,-9,qs),
(155,-8,o),
(113,38,qs),
(67,90,o),
(67,174,qs),
(67,251,o),
(105,302,qs),
(149,360,o),
(222,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o)
);
},
{
closed = 1;
nodes = (
(356,57,q),
(357,76,o),
(357,89,qs),
(358,204,o),
(330,263,qs),
(295,337,o),
(223,337,qs),
(171,337,o),
(135,298,qs),
(93,252,o),
(93,174,qs),
(93,110,o),
(123,67,qs),
(159,14,o),
(223,14,qs),
(302,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 12 2 5 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 7 1 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
32 31 40 38 31 46 32 46 36 19 34 38 33 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,-153,qs),
(67,-82,o),
(67,33,qs),
(67,145,o),
(125,219,q),
(130,224,o),
(136,224,qs),
(144,224,o),
(144,217,qs),
(144,212,o),
(141,208,q),
(93,124,o),
(93,40,qs),
(93,-57,o),
(157,-121,qs),
(226,-191,o),
(330,-191,qs),
(409,-191,o),
(470,-150,qs),
(543,-103,o),
(561,-21,qs),
(566,2,o),
(530,27,o),
(477,37,qs),
(429,45,o),
(404,52,qs),
(354,65,o),
(322,96,qs),
(281,137,o),
(281,200,qs),
(281,273,o),
(326,316,qs),
(372,360,o),
(445,360,qs),
(500,360,o),
(533,342,qs),
(556,330,o),
(556,319,qs),
(556,312,o),
(549,312,qs),
(545,312,o),
(540,315,qs),
(502,337,o),
(446,337,qs),
(393,337,o),
(355,307,qs),
(307,269,o),
(307,200,qs),
(307,152,o),
(368,83,o),
(421,72,qs),
(437,69,o),
(468,63,qs),
(485,60,ls),
(547,48,o),
(593,13,o),
(588,-19,qs),
(575,-96,o),
(515,-150,qs),
(442,-214,o),
(330,-214,qs),
(224,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 54 53 45 43 28 26 22 20 18 16 0 61 1 61 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,-153,qs),
(67,-82,o),
(67,33,qs),
(67,145,o),
(125,219,q),
(130,224,o),
(136,224,qs),
(144,224,o),
(144,217,qs),
(144,212,o),
(141,208,q),
(93,124,o),
(93,40,qs),
(93,-57,o),
(157,-121,qs),
(226,-191,o),
(330,-191,qs),
(409,-191,o),
(470,-150,qs),
(543,-103,o),
(561,-21,qs),
(566,3,o),
(530,28,o),
(477,37,qs),
(427,46,o),
(404,52,qs),
(354,65,o),
(322,96,qs),
(281,137,o),
(281,200,qs),
(281,273,o),
(326,316,qs),
(372,360,o),
(445,360,qs),
(500,360,o),
(533,342,qs),
(556,330,o),
(556,319,qs),
(556,312,o),
(549,312,qs),
(545,312,o),
(540,315,qs),
(502,337,o),
(446,337,qs),
(393,337,o),
(355,307,qs),
(307,269,o),
(307,200,qs),
(307,152,o),
(368,83,o),
(421,72,qs),
(438,69,o),
(468,63,qs),
(485,60,ls),
(547,48,o),
(593,13,o),
(588,-19,qs),
(575,-96,o),
(515,-150,qs),
(442,-214,o),
(330,-214,qs),
(224,-214,o)
);
},
{
closed = 1;
nodes = (
(313,-311,o),
(313,-322,qs),
(313,-333,o),
(298,-348,o),
(287,-348,qs),
(276,-348,o),
(261,-333,o),
(261,-322,qs),
(261,-311,o),
(276,-296,o),
(287,-296,qs),
(298,-296,o)
);
},
{
closed = 1;
nodes = (
(398,-311,o),
(398,-322,qs),
(398,-333,o),
(383,-348,o),
(372,-348,qs),
(361,-348,o),
(346,-333,o),
(346,-322,qs),
(346,-311,o),
(361,-296,o),
(372,-296,qs),
(383,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 10 1 0 6 4 0 105 12 8 11 3 6 7 7 6 89 12 8 11 3 6 6 7 97 9 1 7 6 7 81 75 74 63 62 1 0 81 79 74 85 75 85 69 67 62 73 63 73 54 53 45 43 28 26 22 20 18 16 0 61 1 61 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,727,o),
(147,709,qs),
(147,707,ls),
(147,706,o),
(145,706,qs),
(65,706,ls),
(33,706,o),
(8,698,qs),
(6,697,o),
(3,696,qs),
(1,695,o),
(0,695,qs),
(-2,695,o),
(-2,699,qs),
(-2,703,o),
(-1,705,q),
(4,727,o),
(45,727,qs),
(129,727,ls)
);
},
{
closed = 1;
nodes = (
(147,654,o),
(147,636,qs),
(147,634,ls),
(147,632,o),
(145,632,qs),
(65,632,ls),
(33,632,o),
(8,624,q),
(6,624,o),
(3,623,qs),
(1,622,o),
(0,622,qs),
(-2,622,o),
(-2,626,qs),
(-2,629,o),
(-1,632,qs),
(4,654,o),
(45,654,qs),
(129,654,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 56 values pushed */
4 1 2 1 1 76 23 1 3 73 4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 20 19 1 0 32 30 19 37 20 36 13 11 0 18 1 17 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,600,o),
(211,577,qs),
(210,551,o),
(172,521,q),
(186,506,o),
(174,494,q),
(171,492,o),
(168,495,qs),
(156,507,l),
(137,491,ls),
(124,482,o),
(112,482,qs),
(98,482,o),
(77,501,qs),
(61,516,o),
(51,516,qs),
(40,516,o),
(26,490,qs),
(24,487,o),
(21,490,qs),
(11,500,o),
(20,521,qs),
(29,538,o),
(49,538,qs),
(68,538,o),
(92,516,qs),
(106,505,o),
(112,505,qs),
(120,505,o),
(129,512,qs),
(139,521,l),
(105,544,o),
(104,578,qs),
(104,600,o),
(135,631,o),
(158,631,qs),
(182,631,o)
);
},
{
closed = 1;
nodes = (
(172,612,o),
(159,612,qs),
(144,612,o),
(126,593,o),
(127,577,qs),
(129,557,o),
(156,534,q),
(188,558,o),
(189,577,qs),
(190,591,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 74 values pushed */
41 37 2 2 5 39 32 5 3 3 2 27 1 1 3 30 16 2 4 1 4 76 6 1 0 0 5 2 0 5 105 0 2 0 3 1 2 3 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 1 0 45 43 25 23 21 19 13 11 8 7 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-82,o),
(147,-101,qs),
(147,-102,ls),
(147,-104,o),
(145,-104,qs),
(65,-104,ls),
(33,-104,o),
(8,-112,q),
(6,-112,o),
(3,-113,qs),
(1,-114,o),
(0,-114,qs),
(-2,-114,o),
(-2,-111,qs),
(-2,-107,o),
(-1,-104,qs),
(4,-82,o),
(45,-82,qs),
(129,-82,ls)
);
},
{
closed = 1;
nodes = (
(147,-156,o),
(147,-174,qs),
(147,-176,ls),
(147,-177,o),
(145,-177,qs),
(65,-177,ls),
(33,-177,o),
(8,-185,qs),
(6,-186,o),
(3,-187,qs),
(1,-188,o),
(0,-188,qs),
(-2,-188,o),
(-2,-184,qs),
(-2,-180,o),
(-1,-178,q),
(4,-156,o),
(45,-156,qs),
(129,-156,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
8 4 2 2 1 1 76 23 1 3 73 4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 20 19 1 0 32 30 19 37 20 36 13 11 0 18 1 17 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,654,o),
(147,636,qs),
(147,634,ls),
(147,632,o),
(145,632,qs),
(65,632,ls),
(33,632,o),
(8,624,q),
(6,624,o),
(3,623,qs),
(1,622,o),
(0,622,qs),
(-2,622,o),
(-2,626,qs),
(-2,629,o),
(-1,632,qs),
(4,654,o),
(45,654,qs),
(129,654,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
4 1 1 73 2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 11 0 18 1 17 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,614,o),
(141,591,qs),
(140,565,o),
(103,534,q),
(117,520,o),
(104,508,qs),
(101,506,o),
(98,509,qs),
(86,521,l),
(42,490,o),
(24,481,qs),
(14,476,o),
(9,476,qs),
(3,476,o),
(-5,483,q),
(-7,486,l),
(-9,487,o),
(-6,488,q),
(-1,491,o),
(7,496,qs),
(41,515,o),
(68,535,q),
(36,560,o),
(35,592,qs),
(34,614,o),
(65,645,o),
(89,645,qs),
(112,645,o)
);
},
{
closed = 1;
nodes = (
(102,626,o),
(90,626,qs),
(75,626,o),
(57,606,o),
(58,591,qs),
(59,571,o),
(86,548,q),
(118,572,o),
(119,591,qs),
(120,605,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 48 values pushed */
30 28 23 21 18 9 5 7 1 2 1 76 0 1 2 1 134 3 1 0 2 2 0 89 3 1 0 0 2 97 0 2 0 2 81 1 0 36 34 15 13 0 27 1 27 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-82,o),
(147,-101,qs),
(147,-102,ls),
(147,-104,o),
(145,-104,qs),
(65,-104,ls),
(33,-104,o),
(8,-112,q),
(6,-112,o),
(3,-113,qs),
(1,-114,o),
(0,-114,qs),
(-2,-114,o),
(-2,-111,qs),
(-2,-107,o),
(-1,-104,qs),
(4,-82,o),
(45,-82,qs),
(129,-82,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
8 4 2 1 73 2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 11 0 18 1 17 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,594,o),
(221,592,qs),
(221,543,ls),
(221,477,o),
(168,476,qs),
(140,475,o),
(124,497,q),
(108,475,o),
(83,476,qs),
(27,477,o),
(27,543,qs),
(27,560,ls),
(27,577,o),
(31,585,qs),
(37,594,o),
(47,594,qs),
(49,594,ls),
(51,594,o),
(51,592,qs),
(51,537,ls),
(51,498,o),
(82,498,qs),
(112,498,o),
(112,537,qs),
(112,560,ls),
(112,577,o),
(116,585,qs),
(122,594,o),
(132,594,qs),
(134,594,ls),
(136,594,o),
(136,592,qs),
(136,537,ls),
(136,498,o),
(166,498,qs),
(197,498,o),
(197,537,qs),
(197,560,ls),
(197,577,o),
(201,585,qs),
(207,594,o),
(217,594,qs),
(219,594,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
35 1 2 0 1 76 40 23 10 3 0 74 1 1 0 2 2 0 89 1 1 0 0 2 97 3 1 2 0 2 81 34 43 43 38 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,507,o),
(-2,531,qs),
(-2,556,o),
(28,586,o),
(52,586,qs),
(76,586,o),
(106,556,o),
(106,531,qs),
(106,506,o),
(76,476,o),
(52,476,qs),
(28,476,o)
);
},
{
closed = 1;
nodes = (
(84,531,qs),
(84,567,o),
(52,567,qs),
(20,567,o),
(20,531,qs),
(20,495,o),
(52,495,qs),
(84,495,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 17 15 12 19 13 19 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,645,qs),
(84,662,o),
(72,662,qs),
(63,662,o),
(54,653,o),
(44,636,qs),
(42,632,o),
(39,636,qs),
(35,642,o),
(35,651,qs),
(35,683,o),
(69,683,qs),
(84,683,o),
(114,670,qs),
(151,654,o),
(163,654,qs),
(172,654,o),
(181,662,o),
(191,680,qs),
(193,684,o),
(196,680,qs),
(200,674,o),
(200,665,qs),
(200,632,o),
(166,632,qs),
(151,632,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 2 0 3 1 2 3 105 0 1 0 0 1 89 0 1 1 0 97 4 1 0 1 0 81 1 0 23 21 14 12 10 8 0 25 1 25 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,655,o),
(197,637,qs),
(197,635,ls),
(197,633,o),
(195,633,qs),
(115,633,ls),
(83,633,o),
(58,626,q),
(56,625,o),
(53,624,qs),
(51,623,o),
(50,623,qs),
(48,623,o),
(48,627,qs),
(48,631,o),
(49,633,q),
(53,652,o),
(79,654,q),
(62,677,o),
(62,705,qs),
(62,735,o),
(98,773,o),
(125,773,qs),
(145,773,o),
(176,753,o),
(176,740,qs),
(176,735,o),
(171,737,qs),
(169,738,o),
(166,740,qs),
(160,744,o),
(157,746,qs),
(145,752,o),
(132,752,qs),
(87,752,o),
(87,704,qs),
(87,682,o),
(111,655,o),
(131,655,qs),
(179,655,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
21 1 3 0 1 76 25 1 3 73 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 34 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-201,o),
(163,-219,qs),
(163,-221,ls),
(163,-222,o),
(161,-222,qs),
(81,-222,ls),
(49,-222,o),
(24,-230,qs),
(22,-231,o),
(19,-232,qs),
(17,-233,o),
(16,-233,qs),
(14,-233,o),
(14,-229,qs),
(14,-225,o),
(15,-223,q),
(19,-204,o),
(45,-201,q),
(28,-178,o),
(28,-151,qs),
(28,-121,o),
(64,-82,o),
(91,-82,qs),
(111,-82,o),
(142,-103,o),
(142,-116,qs),
(142,-121,o),
(137,-118,qs),
(135,-117,o),
(132,-115,qs),
(126,-112,o),
(123,-110,qs),
(111,-104,o),
(98,-104,qs),
(53,-104,o),
(53,-151,qs),
(53,-173,o),
(77,-201,o),
(97,-201,qs),
(145,-201,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 50 values pushed */
21 1 0 1 75 25 1 3 73 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 34 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,336,qs),
(187,249,l),
(185,246,o),
(182,246,qs),
(165,246,ls),
(162,246,o),
(160,249,q),
(122,336,ls),
(121,339,o),
(127,339,qs),
(142,339,o),
(151,319,qs),
(174,269,l),
(196,319,ls),
(205,339,o),
(220,339,qs),
(226,339,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 23 values pushed */
8 3 2 2 0 1 76 1 1 0 2 0 133 0 2 2 118 21 20 16 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,51,qs),
(62,120,o),
(62,277,qs),
(62,567,o),
(244,567,qs),
(331,567,o),
(375,504,qs),
(426,434,o),
(426,277,qs),
(426,140,o),
(388,70,qs),
(345,-10,o),
(244,-10,qs),
(155,-10,o)
);
},
{
closed = 1;
nodes = (
(357,67,qs),
(400,130,o),
(400,277,qs),
(400,408,o),
(368,471,qs),
(331,544,o),
(244,544,qs),
(168,544,o),
(130,489,qs),
(88,426,o),
(88,277,qs),
(88,148,o),
(120,85,qs),
(157,13,o),
(244,13,qs),
(320,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 23 77 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,497,ls),
(47,496,o),
(47,500,qs),
(47,512,ls),
(47,519,o),
(54,522,qs),
(137,549,l),
(151,556,o),
(158,556,qs),
(164,556,ls),
(182,556,o),
(182,534,qs),
(182,23,l),
(278,23,ls),
(292,23,o),
(292,9,qs),
(292,6,ls),
(292,0,o),
(285,0,qs),
(49,0,ls),
(46,0,o),
(46,3,qs),
(46,20,ls),
(46,23,o),
(49,23,qs),
(155,23,l),
(155,533,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
26 23 2 0 3 1 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 67 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,23,o),
(380,9,qs),
(380,6,ls),
(380,0,o),
(373,0,qs),
(50,0,ls),
(47,0,o),
(47,3,qs),
(48,88,o),
(102,151,qs),
(135,189,o),
(218,244,qs),
(300,299,o),
(356,369,o),
(356,417,qs),
(356,473,o),
(323,506,qs),
(286,544,o),
(213,544,qs),
(146,544,o),
(83,503,qs),
(82,502,o),
(80,501,qs),
(76,498,o),
(73,498,qs),
(69,498,o),
(68,504,qs),
(67,508,ls),
(64,520,o),
(87,533,qs),
(149,567,o),
(215,567,qs),
(287,567,o),
(331,532,qs),
(382,493,o),
(382,418,qs),
(382,367,o),
(352,326,qs),
(325,289,o),
(250,238,qs),
(164,180,o),
(135,151,qs),
(80,95,o),
(73,23,q),
(366,23,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 44 0 43 74 36 37 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,256,qs),
(372,214,o),
(372,152,qs),
(372,83,o),
(332,40,qs),
(286,-10,o),
(199,-10,qs),
(126,-10,o),
(77,30,qs),
(33,68,o),
(33,104,qs),
(33,120,o),
(42,120,qs),
(49,120,o),
(52,111,qs),
(64,67,o),
(143,13,o),
(196,13,qs),
(269,13,o),
(307,48,qs),
(346,84,o),
(346,151,qs),
(346,208,o),
(311,244,qs),
(271,283,o),
(206,283,qs),
(117,283,ls),
(104,283,o),
(104,297,qs),
(104,300,ls),
(104,306,o),
(111,306,qs),
(210,306,ls),
(239,306,o),
(273,324,qs),
(334,356,o),
(334,424,qs),
(334,477,o),
(302,508,qs),
(266,544,o),
(195,544,qs),
(123,544,o),
(60,503,qs),
(59,502,o),
(57,501,qs),
(53,498,o),
(50,498,qs),
(47,498,o),
(45,504,qs),
(44,508,ls),
(41,520,o),
(64,533,qs),
(126,567,o),
(197,567,qs),
(268,567,o),
(311,534,qs),
(359,496,o),
(359,426,qs),
(359,378,o),
(306,311,o),
(257,296,q),
(298,287,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 103 0 1 1 0 97 0 0 0 23 77 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 35 38 51 54 43 38 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,149,o),
(27,152,qs),
(27,162,ls),
(27,173,o),
(33,182,qs),
(274,544,ls),
(282,556,o),
(291,556,qs),
(299,556,ls),
(318,556,o),
(318,529,qs),
(318,172,l),
(375,172,ls),
(389,172,o),
(389,158,qs),
(389,155,ls),
(389,149,o),
(382,149,qs),
(318,149,l),
(318,6,ls),
(318,0,o),
(314,0,qs),
(298,0,ls),
(293,0,o),
(293,6,qs),
(293,149,l),
(30,149,ls)
);
},
{
closed = 1;
nodes = (
(293,532,l),
(53,172,l),
(293,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 6 1 2 0 1 2 76 7 5 2 2 6 4 2 1 0 2 1 103 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 24 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,344,o),
(212,344,qs),
(283,344,o),
(327,304,qs),
(377,257,o),
(377,172,qs),
(377,94,o),
(335,46,qs),
(288,-10,o),
(202,-10,qs),
(130,-10,o),
(82,31,qs),
(38,68,o),
(38,106,qs),
(38,120,o),
(47,120,qs),
(54,120,o),
(57,111,qs),
(69,67,o),
(148,13,o),
(199,13,qs),
(266,13,o),
(305,49,qs),
(351,90,o),
(351,168,qs),
(351,235,o),
(319,275,qs),
(282,321,o),
(211,321,qs),
(153,321,o),
(82,294,qs),
(73,290,o),
(73,301,qs),
(73,553,ls),
(73,556,o),
(76,556,qs),
(330,556,ls),
(344,556,o),
(344,542,qs),
(344,539,ls),
(344,533,o),
(337,533,qs),
(99,533,l),
(99,324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 35 38 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,348,o),
(232,348,qs),
(295,348,o),
(338,305,qs),
(388,257,o),
(388,176,qs),
(388,97,o),
(348,47,qs),
(302,-10,o),
(220,-10,qs),
(150,-10,o),
(105,33,qs),
(54,82,o),
(54,167,qs),
(54,206,o),
(81,280,o),
(118,344,qs),
(247,558,ls),
(252,567,o),
(257,567,qs),
(266,567,o),
(267,556,qs),
(268,543,o),
(257,526,qs),
(133,319,l)
);
},
{
closed = 1;
nodes = (
(319,49,qs),
(362,92,o),
(362,169,qs),
(362,237,o),
(330,278,qs),
(294,325,o),
(225,325,qs),
(160,325,o),
(120,282,qs),
(80,238,o),
(80,169,qs),
(80,102,o),
(113,60,qs),
(151,12,o),
(221,12,qs),
(281,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 19 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,533,o),
(35,536,qs),
(35,553,ls),
(35,556,o),
(38,556,qs),
(352,556,ls),
(372,556,o),
(372,539,qs),
(372,538,ls),
(372,528,o),
(361,503,qs),
(131,8,ls),
(128,0,o),
(118,0,qs),
(104,0,ls),
(99,0,o),
(103,5,q),
(350,533,l),
(38,533,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 16 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,424,qs),
(65,482,o),
(102,522,qs),
(145,567,o),
(216,567,qs),
(278,567,o),
(319,532,qs),
(367,491,o),
(367,424,qs),
(367,332,o),
(274,297,q),
(325,280,o),
(386,201,o),
(386,151,qs),
(386,86,o),
(346,42,qs),
(298,-11,o),
(216,-11,qs),
(144,-11,o),
(98,30,qs),
(46,76,o),
(46,151,qs),
(46,201,o),
(107,280,o),
(158,297,q),
(65,332,o)
);
},
{
closed = 1;
nodes = (
(123,343,qs),
(160,308,o),
(216,308,qs),
(265,308,o),
(300,335,qs),
(343,368,o),
(343,422,qs),
(343,472,o),
(315,504,qs),
(280,544,o),
(216,544,qs),
(160,544,o),
(126,513,qs),
(89,480,o),
(89,422,qs),
(89,375,o)
);
},
{
closed = 1;
nodes = (
(106,55,qs),
(146,12,o),
(216,12,qs),
(277,12,o),
(316,46,qs),
(360,84,o),
(360,153,qs),
(360,206,o),
(324,243,qs),
(283,285,o),
(216,285,qs),
(158,285,o),
(118,252,qs),
(72,214,o),
(72,153,qs),
(72,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 5 3 4 105 0 2 2 1 97 0 1 1 23 77 0 5 5 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 2 3 1 2 105 0 3 0 4 5 3 4 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 40 43 38 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,209,o),
(205,209,qs),
(142,209,o),
(98,252,qs),
(46,302,o),
(46,384,qs),
(46,461,o),
(87,510,qs),
(135,567,o),
(217,567,qs),
(286,567,o),
(330,524,qs),
(380,475,o),
(380,389,qs),
(380,350,o),
(353,275,o),
(315,213,qs),
(187,-1,ls),
(182,-10,o),
(177,-10,qs),
(167,-10,o),
(167,14,o),
(177,31,qs),
(300,238,l)
);
},
{
closed = 1;
nodes = (
(315,274,qs),
(354,318,o),
(354,388,qs),
(354,455,o),
(323,497,qs),
(286,544,o),
(216,544,qs),
(156,544,o),
(117,507,qs),
(72,464,o),
(72,388,qs),
(72,318,o),
(104,278,qs),
(141,232,o),
(212,232,qs),
(277,232,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 41 18 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,262,qs),
(43,307,o),
(43,394,qs),
(43,470,o),
(70,515,qs),
(101,567,o),
(161,567,qs),
(214,567,o),
(245,527,qs),
(280,482,o),
(280,394,qs),
(280,318,o),
(253,274,qs),
(222,223,o),
(161,223,qs),
(109,223,o)
);
},
{
closed = 1;
nodes = (
(181,0,o),
(184,4,q),
(454,551,ls),
(456,556,o),
(459,556,qs),
(460,556,ls),
(469,556,o),
(474,537,o),
(467,525,q),
(213,8,ls),
(209,0,o),
(200,0,qs),
(186,0,ls)
);
},
{
closed = 1;
nodes = (
(255,393,qs),
(255,544,o),
(161,544,qs),
(68,544,o),
(68,393,qs),
(68,244,o),
(161,244,qs),
(255,244,o)
);
},
{
closed = 1;
nodes = (
(424,30,qs),
(389,75,o),
(389,163,qs),
(389,239,o),
(415,283,qs),
(447,335,o),
(507,335,qs),
(560,335,o),
(590,295,qs),
(625,250,o),
(625,163,qs),
(625,87,o),
(598,42,qs),
(567,-9,o),
(507,-9,qs),
(454,-9,o)
);
},
{
closed = 1;
nodes = (
(600,162,qs),
(600,313,o),
(507,313,qs),
(414,313,o),
(414,162,qs),
(414,13,o),
(507,13,qs),
(600,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 9 4 7 9 105 12 1 4 10 1 0 8 4 0 105 0 3 3 23 77 0 5 5 1 97 0 1 1 23 77 11 1 2 2 24 77 14 1 8 8 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 5 7 1 5 105 0 7 0 9 4 7 9 105 12 1 4 10 1 0 8 4 0 105 0 3 3 23 77 11 1 2 2 24 77 14 1 8 8 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 5 7 1 5 105 0 7 0 9 4 7 9 105 12 1 4 10 1 0 8 4 0 105 14 1 8 13 1 6 8 6 101 0 3 3 23 77 11 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
54 53 38 37 30 29 17 16 1 0 58 56 53 60 54 60 46 44 37 52 38 52 34 32 29 36 30 36 22 21 16 28 17 27 9 7 0 15 1 15 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,24,o),
(116,9,qs),
(116,-16,o),
(85,-77,o),
(61,-98,q),
(59,-99,o),
(56,-96,qs),
(45,-86,o),
(57,-68,qs),
(60,-64,o),
(60,-63,q),
(61,-61,o),
(63,-59,q),
(78,-36,o),
(82,-18,q),
(55,-13,o),
(55,13,qs),
(55,26,o),
(73,44,o),
(86,44,qs),
(99,44,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
15 5 2 0 73 1 1 0 0 118 1 0 0 20 1 20 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,105,o),
(116,90,qs),
(116,65,o),
(85,4,o),
(61,-17,q),
(59,-18,o),
(56,-15,qs),
(45,-5,o),
(57,14,qs),
(60,18,ls),
(61,20,o),
(63,23,qs),
(78,46,o),
(82,63,q),
(55,68,o),
(55,94,qs),
(55,107,o),
(73,126,o),
(86,126,qs),
(99,126,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
14 5 2 0 73 1 1 0 0 118 1 0 0 19 1 19 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,455,o),
(39,459,qs),
(46,481,ls),
(47,485,o),
(51,484,q),
(145,447,l),
(140,548,ls),
(140,553,o),
(144,553,qs),
(167,553,ls),
(171,553,o),
(171,548,qs),
(165,447,l),
(260,484,ls),
(263,485,o),
(265,481,q),
(271,459,ls),
(272,455,o),
(269,454,qs),
(171,429,l),
(235,351,l),
(235,350,l),
(237,347,o),
(234,345,qs),
(215,332,ls),
(212,330,o),
(211,331,qs),
(210,332,o),
(210,333,q),
(155,418,l),
(101,333,l),
(100,332,o),
(100,331,q),
(99,330,o),
(96,332,qs),
(77,345,ls),
(73,348,o),
(76,351,qs),
(139,429,l),
(42,454,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
37 34 33 32 27 26 25 22 19 18 10 9 4 1 14 0 73 0 0 0 23 0 78 30 29 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 310;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
21 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 4 1 0 0 2 95 0 2 2 24 2 78 1 0 25 24 17 14 8 7 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,473,qs),
(19,470,o),
(15,471,o),
(15,474,qs),
(14,519,o),
(5,547,qs),
(4,551,o),
(2,557,qs),
(-2,567,o),
(-2,573,qs),
(-3,586,o),
(10,591,qs),
(12,592,o),
(13,592,qs),
(17,592,o),
(20,584,qs),
(40,540,o),
(26,484,qs),
(24,478,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
16 3 1 50 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,712,o),
(190,692,qs),
(190,670,o),
(158,642,o),
(133,642,qs),
(117,642,o),
(90,652,qs),
(79,657,ls),
(50,668,o),
(39,668,qs),
(30,668,o),
(21,660,o),
(11,642,qs),
(9,638,o),
(6,642,qs),
(2,648,o),
(2,657,qs),
(2,690,o),
(36,690,qs),
(44,690,o),
(57,685,qs),
(61,684,ls),
(69,681,o),
(72,686,qs),
(104,737,o),
(139,737,qs),
(161,737,o)
);
},
{
closed = 1;
nodes = (
(168,679,o),
(168,692,qs),
(168,717,o),
(139,717,qs),
(116,717,o),
(89,674,q),
(113,662,o),
(130,662,qs),
(147,662,o)
);
},
{
closed = 1;
nodes = (
(104,556,o),
(104,553,qs),
(104,34,ls),
(104,17,o),
(100,9,qs),
(94,0,o),
(83,0,qs),
(80,0,ls),
(78,0,o),
(78,3,qs),
(78,521,ls),
(78,538,o),
(83,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
29 1 2 1 49 41 2 7 6 2 76 8 1 0 0 5 1 0 5 105 0 1 0 2 4 1 2 105 9 1 4 0 3 6 4 3 105 0 6 6 23 77 0 7 7 24 7 78 28 27 1 0 45 44 37 36 32 30 27 35 28 35 22 20 17 15 8 6 0 26 1 26 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,387,o),
(306,388,qs),
(306,390,ls),
(306,408,o),
(333,408,qs),
(349,408,l),
(349,553,ls),
(349,571,o),
(353,578,qs),
(359,588,o),
(370,588,qs),
(371,588,ls),
(373,588,o),
(373,585,qs),
(373,527,l),
(425,527,ls),
(457,527,o),
(496,489,o),
(496,457,qs),
(496,425,o),
(457,387,o),
(425,387,qs),
(309,387,ls)
);
},
{
closed = 1;
nodes = (
(373,408,l),
(429,408,ls),
(447,408,o),
(473,436,o),
(473,457,qs),
(473,477,o),
(447,505,o),
(429,505,qs),
(373,505,l)
);
},
{
closed = 1;
nodes = (
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
63 1 7 5 1 76 8 1 1 74 0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 0 1 10 1 3 2 1 3 105 4 1 2 9 1 0 5 2 0 103 0 6 6 8 95 0 8 8 24 8 78 24 23 1 0 59 56 50 49 43 40 33 32 30 28 23 31 24 31 18 16 7 5 0 22 1 19 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,78,o),
(640,41,qs),
(605,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls)
);
},
{
closed = 1;
nodes = (
(357,-97,o),
(357,-108,qs),
(357,-119,o),
(342,-134,o),
(331,-134,qs),
(321,-134,o),
(306,-119,o),
(306,-108,qs),
(306,-97,o),
(321,-82,o),
(331,-82,qs),
(342,-82,o)
);
},
{
closed = 1;
nodes = (
(442,-97,o),
(442,-108,qs),
(442,-119,o),
(427,-134,o),
(416,-134,qs),
(406,-134,o),
(391,-119,o),
(391,-108,qs),
(391,-97,o),
(406,-82,o),
(416,-82,qs),
(427,-82,o)
);
},
{
closed = 1;
nodes = (
(400,-166,o),
(400,-177,qs),
(400,-188,o),
(385,-203,o),
(374,-203,qs),
(363,-203,o),
(348,-188,o),
(348,-177,qs),
(348,-166,o),
(363,-151,o),
(374,-151,qs),
(385,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
21 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 10 1 0 0 2 95 0 2 2 24 2 78 59 58 47 46 35 34 1 0 65 63 58 69 59 69 53 51 46 57 47 57 41 39 34 45 35 45 25 24 17 14 8 7 0 33 1 32 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(493,23,l),
(475,35,o),
(447,104,o),
(422,195,qs),
(383,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,324,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(478,77,o),
(515,38,qs),
(529,23,o),
(558,23,qs),
(560,23,o),
(560,22,qs),
(560,0,o),
(535,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-252,qs),
(175,-305,o),
(260,-308,qs),
(350,-310,o),
(426,-270,qs),
(441,-262,o),
(455,-252,qs),
(457,-250,o),
(458,-249,qs),
(465,-244,o),
(476,-247,o),
(475,-254,qs),
(474,-260,o),
(461,-270,qs),
(433,-294,o),
(400,-308,qs),
(335,-333,o),
(260,-331,qs),
(173,-329,o)
);
},
{
closed = 1;
nodes = (
(288,-108,o),
(288,-119,qs),
(288,-130,o),
(273,-145,o),
(262,-145,qs),
(251,-145,o),
(236,-130,o),
(236,-119,qs),
(236,-108,o),
(251,-92,o),
(262,-92,qs),
(273,-92,o)
);
},
{
closed = 1;
nodes = (
(373,-108,o),
(373,-119,qs),
(373,-130,o),
(358,-145,o),
(347,-145,qs),
(336,-145,o),
(321,-130,o),
(321,-119,qs),
(321,-108,o),
(336,-92,o),
(347,-92,qs),
(358,-92,o)
);
},
{
closed = 1;
nodes = (
(330,-177,o),
(330,-187,qs),
(330,-198,o),
(315,-213,o),
(304,-213,qs),
(293,-213,o),
(278,-198,o),
(278,-187,qs),
(278,-177,o),
(293,-162,o),
(304,-162,qs),
(315,-162,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
40 1 3 5 1 76 0 4 0 5 3 4 5 105 15 9 14 3 7 10 1 8 11 7 8 105 16 1 11 0 12 1 11 12 105 0 1 13 1 0 1 0 101 6 1 3 3 2 95 0 2 2 24 2 78 87 86 75 74 63 62 1 0 93 91 86 97 87 97 81 79 74 85 75 85 69 67 62 73 63 73 55 53 49 47 35 33 29 26 25 22 16 14 0 61 1 61 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,454,o),
(118,456,qs),
(118,457,ls),
(118,476,o),
(144,476,qs),
(160,476,l),
(160,621,ls),
(160,638,o),
(164,646,qs),
(170,655,o),
(181,655,qs),
(182,655,ls),
(184,655,o),
(184,652,qs),
(184,594,l),
(236,594,ls),
(269,594,o),
(308,556,o),
(308,524,qs),
(308,492,o),
(269,454,o),
(236,454,qs),
(120,454,ls)
);
},
{
closed = 1;
nodes = (
(184,476,l),
(240,476,ls),
(258,476,o),
(284,504,o),
(284,524,qs),
(284,544,o),
(258,572,o),
(240,572,qs),
(184,572,l)
);
},
{
closed = 1;
nodes = (
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,93,o),
(307,49,qs),
(268,0,o),
(198,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
8 1 1 74 0 6 7 8 7 6 8 128 0 1 11 1 3 2 1 3 105 4 1 2 10 1 0 5 2 0 103 12 1 5 0 7 6 5 7 105 0 8 8 9 95 0 9 9 24 9 78 33 32 24 23 1 0 59 54 52 49 43 41 38 37 32 65 33 65 30 28 23 31 24 31 18 16 7 5 0 22 1 19 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 410;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,577,o),
(236,539,o),
(236,507,qs),
(236,475,o),
(197,437,o),
(165,437,qs),
(49,437,ls),
(46,437,o),
(46,438,qs),
(46,440,ls),
(46,458,o),
(73,458,qs),
(89,458,l),
(89,603,ls),
(89,621,o),
(93,628,qs),
(99,638,o),
(110,638,qs),
(111,638,ls),
(113,638,o),
(113,635,qs),
(113,577,l),
(165,577,ls)
);
},
{
closed = 1;
nodes = (
(187,458,o),
(213,486,o),
(213,507,qs),
(213,527,o),
(187,555,o),
(169,555,qs),
(113,555,l),
(113,458,l),
(169,458,ls)
);
},
{
closed = 1;
nodes = (
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
52 1 7 5 1 76 1 1 2 74 0 5 1 7 1 5 7 128 0 7 6 1 7 6 126 9 1 2 0 3 0 2 3 105 10 4 2 0 0 1 5 0 1 103 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 23 23 0 0 50 48 44 43 40 38 33 32 23 31 23 30 26 24 0 22 0 21 81 41 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,527,qs),
(160,441,ls),
(158,437,o),
(155,437,qs),
(139,437,ls),
(135,437,o),
(134,441,q),
(95,527,l),
(94,531,o),
(100,531,qs),
(115,531,o),
(124,511,qs),
(147,460,l),
(169,511,ls),
(178,531,o),
(194,531,qs),
(200,531,o)
);
},
{
closed = 1;
nodes = (
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
8 3 2 2 0 37 1 5 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 36 19 37 21 21 20 16 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-187,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o)
);
},
{
closed = 1;
nodes = (
(61,-310,o),
(61,-322,qs),
(61,-335,o),
(44,-352,o),
(33,-352,qs),
(21,-352,o),
(5,-335,o),
(5,-322,qs),
(5,-310,o),
(21,-293,o),
(33,-293,qs),
(45,-293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
13 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 24 23 1 0 30 28 23 34 24 34 17 16 11 9 5 4 0 22 1 22 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-187,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls)
);
},
{
closed = 1;
nodes = (
(86,-301,qs),
(48,-387,l),
(47,-391,o),
(43,-391,qs),
(27,-391,ls),
(24,-391,o),
(22,-387,qs),
(-16,-301,ls),
(-18,-297,o),
(-12,-297,qs),
(4,-297,o),
(13,-317,qs),
(35,-367,l),
(58,-317,ls),
(67,-297,o),
(82,-297,qs),
(88,-297,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
20 1 2 0 31 26 2 6 4 2 76 0 0 2 0 133 0 2 1 2 133 5 1 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 21 20 21 36 19 37 16 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,506,o),
(121,517,qs),
(121,527,o),
(137,543,o),
(148,543,qs),
(158,543,o),
(174,527,o),
(174,517,qs),
(174,506,o),
(159,491,o),
(148,491,qs),
(137,491,o)
);
},
{
closed = 1;
nodes = (
(80,437,o),
(80,448,qs),
(80,459,o),
(95,474,o),
(105,474,qs),
(116,474,o),
(131,459,o),
(131,448,qs),
(131,437,o),
(116,422,o),
(105,422,qs),
(95,422,o)
);
},
{
closed = 1;
nodes = (
(165,437,o),
(165,448,qs),
(165,459,o),
(180,474,o),
(190,474,qs),
(201,474,o),
(216,459,o),
(216,448,qs),
(216,437,o),
(201,422,o),
(190,422,qs),
(180,422,o)
);
},
{
closed = 1;
nodes = (
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 7 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 0 8 6 8 101 10 1 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 8 8 6 89 13 1 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 53 52 47 45 41 40 36 58 37 58 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(737,313,qs),
(785,261,o),
(785,179,qs),
(785,109,o),
(749,61,qs),
(707,3,o),
(635,0,q),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(548,23,l),
(474,71,o),
(474,179,qs),
(474,250,o),
(511,300,qs),
(555,360,o),
(629,360,qs),
(694,360,o)
);
},
{
closed = 1;
nodes = (
(719,63,qs),
(759,107,o),
(759,178,qs),
(759,241,o),
(728,285,qs),
(691,337,o),
(629,337,qs),
(575,337,o),
(540,296,qs),
(500,251,o),
(500,178,qs),
(500,117,o),
(531,74,qs),
(567,23,o),
(629,23,qs),
(683,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 5 1 5 2 1 128 6 1 0 0 5 2 0 5 105 7 4 2 1 1 3 95 0 3 3 24 3 78 32 31 1 0 40 38 31 46 32 46 24 21 15 14 8 6 0 30 1 30 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,524,o),
(603,534,qs),
(603,545,o),
(618,561,o),
(629,561,qs),
(640,561,o),
(655,545,o),
(655,534,qs),
(655,524,o),
(640,509,o),
(629,509,qs),
(618,509,o)
);
},
{
closed = 1;
nodes = (
(561,455,o),
(561,466,qs),
(561,477,o),
(576,492,o),
(586,492,qs),
(597,492,o),
(612,477,o),
(612,466,qs),
(612,455,o),
(597,439,o),
(586,439,qs),
(576,439,o)
);
},
{
closed = 1;
nodes = (
(661,492,o),
(671,492,qs),
(682,492,o),
(697,477,o),
(697,466,qs),
(697,455,o),
(682,439,o),
(671,439,qs),
(661,439,o),
(646,455,o),
(646,466,qs),
(646,477,o)
);
},
{
closed = 1;
nodes = (
(737,313,qs),
(785,261,o),
(785,179,qs),
(785,109,o),
(749,61,qs),
(707,3,o),
(635,0,q),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(548,23,l),
(474,71,o),
(474,179,qs),
(474,250,o),
(511,300,qs),
(555,360,o),
(629,360,qs),
(694,360,o)
);
},
{
closed = 1;
nodes = (
(719,63,qs),
(759,107,o),
(759,178,qs),
(759,241,o),
(728,285,qs),
(691,337,o),
(629,337,qs),
(575,337,o),
(540,296,qs),
(500,251,o),
(500,178,qs),
(500,117,o),
(531,74,qs),
(567,23,o),
(629,23,qs),
(683,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 11 7 11 8 7 128 5 1 3 4 13 2 2 6 3 2 105 14 1 6 0 11 8 6 11 105 12 1 0 0 1 97 0 1 1 23 77 15 10 2 7 7 9 95 0 9 9 24 9 78 68 67 37 36 13 12 1 0 76 74 67 82 68 82 60 57 51 50 44 42 36 66 37 66 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(561,23,ls),
(610,23,o),
(641,51,qs),
(684,89,o),
(684,171,qs),
(684,243,o),
(651,281,qs),
(618,318,o),
(561,318,qs),
(355,318,ls),
(326,318,o),
(326,339,qs),
(326,351,ls),
(326,363,o),
(335,371,q),
(575,554,l),
(577,557,o),
(580,555,qs),
(589,548,o),
(587,538,qs),
(585,531,o),
(570,519,qs),
(356,356,l),
(353,353,o),
(353,349,qs),
(353,348,ls),
(353,341,o),
(358,341,qs),
(565,341,ls),
(622,341,o),
(659,310,qs),
(710,267,o),
(710,171,qs),
(710,86,o),
(670,42,qs),
(632,0,o),
(565,0,qs),
(251,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 2 3 2 4 3 128 0 1 0 2 4 1 2 103 0 3 3 0 95 5 1 0 0 24 0 78 1 0 45 44 38 35 29 26 9 7 0 52 1 51 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 777;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,486,o),
(323,487,o),
(323,492,qs),
(323,502,ls),
(323,510,o),
(331,516,qs),
(494,641,ls),
(497,643,o),
(500,641,qs),
(507,635,o),
(507,628,qs),
(507,619,o),
(489,605,qs),
(337,489,l)
);
},
{
closed = 1;
nodes = (
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(561,23,ls),
(610,23,o),
(641,51,qs),
(684,89,o),
(684,171,qs),
(684,243,o),
(651,281,qs),
(618,318,o),
(561,318,qs),
(355,318,ls),
(326,318,o),
(326,339,qs),
(326,351,ls),
(326,363,o),
(335,371,q),
(575,554,l),
(577,557,o),
(580,555,qs),
(589,548,o),
(587,538,qs),
(585,531,o),
(570,519,qs),
(356,356,l),
(353,353,o),
(353,349,qs),
(353,348,ls),
(353,341,o),
(358,341,qs),
(565,341,ls),
(622,341,o),
(659,310,qs),
(710,267,o),
(710,171,qs),
(710,86,o),
(670,42,qs),
(632,0,o),
(565,0,qs),
(251,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
10 1 1 74 0 4 2 3 2 4 3 128 0 1 0 2 4 1 2 103 0 3 3 0 95 5 1 0 0 24 0 78 15 14 59 58 52 49 43 40 23 21 14 66 15 65 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 777;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(564,740,q),
(525,654,l),
(524,650,o),
(520,650,qs),
(504,650,ls),
(501,650,o),
(499,654,qs),
(461,740,ls),
(459,744,o),
(465,744,qs),
(481,744,o),
(490,724,qs),
(513,673,l),
(535,724,ls),
(544,744,o),
(559,744,qs),
(565,744,o)
);
},
{
closed = 1;
nodes = (
(525,556,o),
(525,553,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
8 3 2 2 0 50 1 5 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 101 0 3 3 23 3 78 39 40 39 21 21 20 16 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(540,675,o),
(540,663,qs),
(540,650,o),
(523,633,o),
(511,633,qs),
(500,633,o),
(484,650,o),
(484,663,qs),
(484,675,o),
(500,692,o),
(511,692,qs),
(523,692,o)
);
},
{
closed = 1;
nodes = (
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
17 1 5 3 1 76 0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 101 0 3 3 23 3 78 13 12 1 0 40 38 30 28 21 20 12 47 13 47 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,720,o),
(486,731,qs),
(486,742,o),
(502,757,o),
(513,757,qs),
(523,757,o),
(539,742,o),
(539,731,qs),
(539,720,o),
(523,706,o),
(513,706,qs),
(502,706,o)
);
},
{
closed = 1;
nodes = (
(445,651,o),
(445,663,qs),
(445,674,o),
(460,689,o),
(470,689,qs),
(481,689,o),
(496,674,o),
(496,663,qs),
(496,651,o),
(481,636,o),
(470,636,qs),
(460,636,o)
);
},
{
closed = 1;
nodes = (
(530,651,o),
(530,663,qs),
(530,674,o),
(545,689,o),
(555,689,qs),
(566,689,o),
(581,674,o),
(581,663,qs),
(581,651,o),
(566,636,o),
(555,636,qs),
(545,636,o)
);
},
{
closed = 1;
nodes = (
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
41 1 9 7 1 76 0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 101 0 7 7 23 7 78 37 36 25 24 13 12 1 0 64 62 54 52 45 44 36 71 37 71 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 3 1 1 76 0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 1 0 28 26 18 16 9 8 0 35 1 35 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 15 8 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 44 30 44 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,513,qs),
(115,517,o),
(116,519,q),
(120,538,o),
(146,541,q),
(130,563,o),
(130,591,qs),
(130,621,o),
(165,659,o),
(193,659,qs),
(212,659,o),
(243,639,o),
(243,626,qs),
(243,621,o),
(239,623,qs),
(237,624,o),
(234,626,qs),
(228,630,o),
(224,632,qs),
(212,638,o),
(199,638,qs),
(155,638,o),
(155,591,qs),
(155,568,o),
(179,541,o),
(198,541,qs),
(246,541,ls),
(265,541,o),
(265,523,qs),
(265,521,ls),
(265,519,o),
(263,519,qs),
(182,519,ls),
(150,519,o),
(125,512,q),
(123,511,o),
(121,510,qs),
(118,509,o),
(118,509,q),
(115,509,o)
);
},
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
26 24 2 1 2 75 55 48 38 0 5 5 0 2 76 34 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 0 2 1 3 2 105 0 0 0 1 97 0 1 1 23 77 6 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 1 5 4 4 5 89 6 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
70 69 69 84 70 84 64 62 41 35 52 37 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 15 8 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 44 30 44 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,513,qs),
(115,517,o),
(116,519,q),
(120,538,o),
(146,541,q),
(130,563,o),
(130,591,qs),
(130,621,o),
(165,659,o),
(193,659,qs),
(212,659,o),
(243,639,o),
(243,626,qs),
(243,621,o),
(239,623,qs),
(237,624,o),
(234,626,qs),
(228,630,o),
(224,632,qs),
(212,638,o),
(199,638,qs),
(155,638,o),
(155,591,qs),
(155,568,o),
(179,541,o),
(198,541,qs),
(246,541,ls),
(265,541,o),
(265,523,qs),
(265,521,ls),
(265,519,o),
(263,519,qs),
(182,519,ls),
(150,519,o),
(125,512,q),
(123,511,o),
(121,510,qs),
(118,509,o),
(118,509,q),
(115,509,o)
);
},
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
26 24 2 1 2 75 55 48 38 0 5 5 0 2 76 34 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 0 2 1 3 2 105 0 0 0 1 97 0 1 1 23 77 6 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 1 5 4 4 5 89 6 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
70 69 69 84 70 84 64 62 41 35 52 37 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,520,o),
(118,532,qs),
(118,543,o),
(133,558,o),
(144,558,qs),
(154,558,o),
(169,543,o),
(169,532,qs),
(169,520,o),
(154,505,o),
(144,505,qs),
(133,505,o)
);
},
{
closed = 1;
nodes = (
(203,520,o),
(203,532,qs),
(203,543,o),
(218,558,o),
(229,558,qs),
(239,558,o),
(254,543,o),
(254,532,qs),
(254,520,o),
(239,505,o),
(229,505,qs),
(218,505,o)
);
},
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
59 39 32 3 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
7 2 6 3 0 0 1 97 3 1 1 1 23 77 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
8 1 5 0 4 5 4 101 7 2 6 3 0 0 1 97 3 1 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 68 54 68 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,549,o),
(173,549,qs),
(189,549,o),
(198,529,qs),
(220,479,l),
(243,529,ls),
(252,549,o),
(267,549,qs),
(273,549,o),
(271,546,q),
(233,459,ls),
(232,456,o),
(228,456,qs),
(212,456,ls),
(209,456,o),
(207,459,q),
(169,546,l)
);
},
{
closed = 1;
nodes = (
(383,107,qs),
(383,-2,o),
(369,-98,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(148,-214,o),
(107,-196,q),
(91,-187,o),
(90,-182,qs),
(88,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(353,-191,o),
(356,28,q),
(292,-11,o),
(222,-9,qs),
(155,-8,o),
(113,38,qs),
(67,90,o),
(67,174,qs),
(67,251,o),
(105,302,qs),
(149,360,o),
(222,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o)
);
},
{
closed = 1;
nodes = (
(356,57,q),
(357,76,o),
(357,89,qs),
(358,204,o),
(330,263,qs),
(295,337,o),
(223,337,qs),
(171,337,o),
(135,298,qs),
(93,252,o),
(93,174,qs),
(93,110,o),
(123,67,qs),
(159,14,o),
(223,14,qs),
(302,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
16 11 6 3 0 1 62 29 2 8 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 3 1 0 3 128 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 5 0 7 5 7 101 2 1 1 1 23 77 10 1 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 3 1 0 3 128 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 10 1 8 0 4 6 8 4 105 0 5 0 7 5 7 101 2 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
49 48 57 55 48 63 49 63 36 19 34 38 36 20 21 18 11 7 30 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,455,o),
(155,467,qs),
(155,478,o),
(170,493,o),
(181,493,qs),
(192,493,o),
(206,478,o),
(206,467,qs),
(206,455,o),
(192,440,o),
(181,440,qs),
(170,440,o)
);
},
{
closed = 1;
nodes = (
(240,455,o),
(240,467,qs),
(240,478,o),
(255,493,o),
(266,493,qs),
(277,493,o),
(291,478,o),
(291,467,qs),
(291,455,o),
(277,440,o),
(266,440,qs),
(255,440,o)
);
},
{
closed = 1;
nodes = (
(383,107,qs),
(383,-2,o),
(369,-98,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(148,-214,o),
(107,-196,q),
(91,-187,o),
(90,-182,qs),
(88,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(353,-191,o),
(356,28,q),
(292,-11,o),
(222,-9,qs),
(155,-8,o),
(113,38,qs),
(67,90,o),
(67,174,qs),
(67,251,o),
(105,302,qs),
(149,360,o),
(222,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o)
);
},
{
closed = 1;
nodes = (
(356,57,q),
(357,76,o),
(357,89,qs),
(358,204,o),
(330,263,qs),
(295,337,o),
(223,337,qs),
(171,337,o),
(135,298,qs),
(93,252,o),
(93,174,qs),
(93,110,o),
(123,67,qs),
(159,14,o),
(223,14,qs),
(302,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
69 36 2 9 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 13 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
56 55 13 12 1 0 64 62 55 70 56 70 49 47 43 42 39 37 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,-153,qs),
(67,-82,o),
(67,33,qs),
(67,145,o),
(125,219,q),
(130,224,o),
(136,224,qs),
(144,224,o),
(144,217,qs),
(144,212,o),
(141,208,q),
(93,124,o),
(93,40,qs),
(93,-57,o),
(157,-121,qs),
(226,-191,o),
(330,-191,qs),
(409,-191,o),
(470,-150,qs),
(543,-103,o),
(561,-21,qs),
(566,2,o),
(530,27,o),
(477,37,qs),
(429,45,o),
(404,52,qs),
(354,65,o),
(322,96,qs),
(281,137,o),
(281,200,qs),
(281,273,o),
(326,316,qs),
(372,360,o),
(445,360,qs),
(500,360,o),
(533,342,qs),
(556,330,o),
(556,319,qs),
(556,312,o),
(549,312,qs),
(545,312,o),
(540,315,qs),
(502,337,o),
(446,337,qs),
(393,337,o),
(355,307,qs),
(307,269,o),
(307,200,qs),
(307,152,o),
(368,83,o),
(421,72,qs),
(437,69,o),
(468,63,qs),
(485,60,ls),
(547,48,o),
(593,13,o),
(588,-19,qs),
(575,-96,o),
(515,-150,qs),
(442,-214,o),
(330,-214,qs),
(224,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 54 53 45 43 28 26 22 20 18 16 0 61 1 61 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,411,o),
(105,411,qs),
(121,411,o),
(130,391,qs),
(153,340,l),
(175,391,ls),
(184,411,o),
(199,411,qs),
(205,411,o),
(204,407,q),
(165,321,l),
(164,317,o),
(160,317,qs),
(144,317,ls),
(141,317,o),
(139,321,qs),
(101,407,ls)
);
},
{
closed = 1;
nodes = (
(593,13,o),
(588,-19,qs),
(575,-96,o),
(515,-150,qs),
(442,-214,o),
(330,-214,qs),
(224,-214,o),
(151,-153,qs),
(67,-82,o),
(67,33,qs),
(67,145,o),
(125,219,q),
(130,224,o),
(136,224,qs),
(144,224,o),
(144,217,qs),
(144,212,o),
(141,208,q),
(93,124,o),
(93,40,qs),
(93,-57,o),
(157,-121,qs),
(226,-191,o),
(330,-191,qs),
(409,-191,o),
(470,-150,qs),
(543,-103,o),
(561,-21,qs),
(566,2,o),
(530,27,o),
(477,37,qs),
(429,45,o),
(404,52,qs),
(354,65,o),
(322,96,qs),
(281,137,o),
(281,200,qs),
(281,273,o),
(326,316,qs),
(372,360,o),
(445,360,qs),
(500,360,o),
(533,342,qs),
(556,330,o),
(556,319,qs),
(556,312,o),
(549,312,qs),
(545,312,o),
(540,315,qs),
(502,337,o),
(446,337,qs),
(393,337,o),
(355,307,qs),
(307,269,o),
(307,200,qs),
(307,152,o),
(368,83,o),
(421,72,qs),
(437,69,o),
(468,63,qs),
(485,60,ls),
(547,48,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
16 6 2 5 1 11 1 3 5 2 76 2 1 1 5 1 133 0 0 3 4 3 0 4 128 0 4 7 3 4 7 126 0 7 6 3 7 6 126 0 5 0 3 0 5 3 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 39 24 47 36 34 44 20 21 18 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(118,31,qs),
(67,74,o),
(67,171,qs),
(67,245,o),
(109,292,qs),
(153,341,o),
(224,341,qs),
(272,341,ls),
(291,341,o),
(291,358,qs),
(291,378,ls),
(291,455,o),
(323,503,qs),
(364,564,o),
(446,564,qs),
(517,564,o),
(558,518,qs),
(599,471,o),
(601,394,qs),
(601,393,ls),
(601,366,o),
(580,366,qs),
(578,366,ls),
(576,366,o),
(576,368,qs),
(576,379,ls),
(576,447,o),
(549,489,qs),
(516,541,o),
(446,541,qs),
(385,541,o),
(351,500,qs),
(317,457,o),
(317,377,qs),
(317,355,ls),
(317,317,o),
(274,317,qs),
(223,317,ls),
(173,317,o),
(137,283,qs),
(93,241,o),
(93,171,qs),
(93,98,o),
(127,60,qs),
(159,23,o),
(216,23,qs),
(619,23,ls),
(630,23,o),
(646,12,o),
(646,3,qs),
(646,2,ls),
(646,0,o),
(644,0,qs),
(213,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 4 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 1 0 4 1 105 0 2 2 3 97 0 3 3 23 77 0 0 0 5 95 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 2 4 3 2 105 0 4 0 1 0 4 1 105 0 0 0 5 95 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 54 0 53 53 45 37 54 53 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,430,qs),
(66,434,o),
(67,436,q),
(71,455,o),
(97,458,q),
(80,480,o),
(80,508,qs),
(80,538,o),
(116,577,o),
(143,577,qs),
(163,577,o),
(194,556,o),
(194,543,qs),
(194,538,o),
(189,541,qs),
(187,542,o),
(184,543,q),
(179,547,o),
(175,549,qs),
(163,555,o),
(150,555,qs),
(105,555,o),
(105,508,qs),
(105,485,o),
(129,458,o),
(149,458,qs),
(197,458,ls),
(215,458,o),
(215,440,qs),
(215,438,ls),
(215,437,o),
(213,437,qs),
(133,437,ls),
(101,437,o),
(76,429,qs),
(74,428,o),
(71,427,qs),
(69,426,o),
(68,426,qs),
(66,426,o)
);
},
{
closed = 1;
nodes = (
(630,23,o),
(646,12,o),
(646,3,qs),
(646,2,ls),
(646,0,o),
(644,0,qs),
(212,0,ls),
(155,0,o),
(118,31,qs),
(67,75,o),
(67,171,qs),
(67,245,o),
(108,292,qs),
(153,341,o),
(224,341,qs),
(272,341,ls),
(290,341,o),
(290,358,qs),
(290,378,ls),
(290,455,o),
(323,503,qs),
(363,564,o),
(446,564,qs),
(516,564,o),
(558,518,qs),
(599,471,o),
(601,394,qs),
(601,393,ls),
(601,366,o),
(580,366,qs),
(577,366,ls),
(575,366,o),
(575,368,qs),
(575,379,ls),
(575,447,o),
(549,489,qs),
(515,541,o),
(446,541,qs),
(384,541,o),
(351,500,qs),
(317,457,o),
(317,377,qs),
(317,355,ls),
(317,317,o),
(274,317,qs),
(223,317,ls),
(172,317,o),
(136,283,qs),
(93,241,o),
(93,171,qs),
(93,98,o),
(126,60,qs),
(159,23,o),
(215,23,qs),
(618,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
61 38 2 7 0 1 76 34 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 0 9 0 7 9 128 0 3 0 2 6 3 2 105 0 1 0 0 7 1 0 103 0 9 0 5 4 9 5 105 0 6 6 8 97 0 8 8 23 77 11 1 4 4 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 9 0 7 9 128 0 3 0 2 6 3 2 105 0 8 0 6 1 8 6 105 0 1 0 0 7 1 0 103 0 9 0 5 4 9 5 105 11 1 4 4 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
41 40 88 86 80 77 72 70 65 64 57 55 50 47 40 94 41 93 41 35 52 37 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,159,qs),
(381,90,o),
(344,44,qs),
(301,-9,o),
(224,-9,qs),
(158,-9,o),
(115,32,qs),
(67,80,o),
(67,159,qs),
(67,217,o),
(96,263,qs),
(135,324,o),
(221,352,q),
(208,362,o),
(195,382,qs),
(186,394,o),
(185,419,o),
(193,424,qs),
(196,426,o),
(198,426,qs),
(200,426,o),
(201,422,q),
(220,382,o),
(264,348,qs),
(285,332,o),
(291,327,qs),
(297,323,o),
(305,316,qs),
(381,248,o)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(356,91,o),
(354,164,qs),
(353,229,o),
(305,278,qs),
(287,297,o),
(259,320,qs),
(248,328,o),
(242,333,q),
(94,289,o),
(94,158,qs),
(94,98,o),
(128,58,qs),
(166,14,o),
(224,14,qs),
(277,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 15 8 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 44 30 44 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,514,o),
(96,525,qs),
(96,536,o),
(111,551,o),
(122,551,qs),
(133,551,o),
(148,536,o),
(148,525,qs),
(148,514,o),
(133,499,o),
(122,499,qs),
(111,499,o)
);
},
{
closed = 1;
nodes = (
(54,445,o),
(54,457,qs),
(54,468,o),
(69,483,o),
(80,483,qs),
(90,483,o),
(105,468,o),
(105,457,qs),
(105,445,o),
(90,430,o),
(80,430,qs),
(69,430,o)
);
},
{
closed = 1;
nodes = (
(139,445,o),
(139,457,qs),
(139,468,o),
(154,483,o),
(165,483,qs),
(175,483,o),
(190,468,o),
(190,457,qs),
(190,445,o),
(175,430,o),
(165,430,qs),
(154,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,51,qs),
(62,120,o),
(62,277,qs),
(62,567,o),
(244,567,qs),
(331,567,o),
(375,504,qs),
(426,434,o),
(426,277,qs),
(426,140,o),
(388,70,qs),
(345,-10,o),
(244,-10,qs),
(155,-10,o)
);
},
{
closed = 1;
nodes = (
(357,67,qs),
(400,130,o),
(400,277,qs),
(400,408,o),
(368,471,qs),
(331,544,o),
(244,544,qs),
(168,544,o),
(130,489,qs),
(88,426,o),
(88,277,qs),
(88,148,o),
(120,85,qs),
(157,13,o),
(244,13,qs),
(320,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 23 77 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,497,ls),
(47,496,o),
(47,500,qs),
(47,512,ls),
(47,519,o),
(54,522,qs),
(137,549,l),
(151,556,o),
(158,556,qs),
(164,556,ls),
(182,556,o),
(182,534,qs),
(182,23,l),
(278,23,ls),
(292,23,o),
(292,9,qs),
(292,6,ls),
(292,0,o),
(285,0,qs),
(49,0,ls),
(46,0,o),
(46,3,qs),
(46,20,ls),
(46,23,o),
(49,23,qs),
(155,23,l),
(155,533,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
26 23 2 0 3 1 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 67 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,23,o),
(380,9,qs),
(380,6,ls),
(380,0,o),
(373,0,qs),
(50,0,ls),
(47,0,o),
(47,3,qs),
(48,88,o),
(102,151,qs),
(135,189,o),
(218,244,qs),
(300,299,o),
(356,369,o),
(356,417,qs),
(356,473,o),
(323,506,qs),
(286,544,o),
(213,544,qs),
(146,544,o),
(83,503,qs),
(82,502,o),
(80,501,qs),
(76,498,o),
(73,498,qs),
(69,498,o),
(68,504,qs),
(67,508,ls),
(64,520,o),
(87,533,qs),
(149,567,o),
(215,567,qs),
(287,567,o),
(331,532,qs),
(382,493,o),
(382,418,qs),
(382,367,o),
(352,326,qs),
(325,289,o),
(250,238,qs),
(164,180,o),
(135,151,qs),
(80,95,o),
(73,23,q),
(366,23,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 44 0 43 74 36 37 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,256,qs),
(372,214,o),
(372,152,qs),
(372,83,o),
(332,40,qs),
(286,-10,o),
(199,-10,qs),
(126,-10,o),
(77,30,qs),
(33,68,o),
(33,104,qs),
(33,120,o),
(42,120,qs),
(49,120,o),
(52,111,qs),
(64,67,o),
(143,13,o),
(196,13,qs),
(269,13,o),
(307,48,qs),
(346,84,o),
(346,151,qs),
(346,208,o),
(311,244,qs),
(271,283,o),
(206,283,qs),
(117,283,ls),
(104,283,o),
(104,297,qs),
(104,300,ls),
(104,306,o),
(111,306,qs),
(210,306,ls),
(239,306,o),
(273,324,qs),
(334,356,o),
(334,424,qs),
(334,477,o),
(302,508,qs),
(266,544,o),
(195,544,qs),
(123,544,o),
(60,503,qs),
(59,502,o),
(57,501,qs),
(53,498,o),
(50,498,qs),
(47,498,o),
(45,504,qs),
(44,508,ls),
(41,520,o),
(64,533,qs),
(126,567,o),
(197,567,qs),
(268,567,o),
(311,534,qs),
(359,496,o),
(359,426,qs),
(359,378,o),
(306,311,o),
(257,296,q),
(298,287,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 103 0 1 1 0 97 0 0 0 23 77 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 35 38 51 54 43 38 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,149,o),
(27,152,qs),
(27,162,ls),
(27,173,o),
(33,182,qs),
(274,544,ls),
(282,556,o),
(291,556,qs),
(299,556,ls),
(318,556,o),
(318,529,qs),
(318,172,l),
(375,172,ls),
(389,172,o),
(389,158,qs),
(389,155,ls),
(389,149,o),
(382,149,qs),
(318,149,l),
(318,6,ls),
(318,0,o),
(314,0,qs),
(298,0,ls),
(293,0,o),
(293,6,qs),
(293,149,l),
(30,149,ls)
);
},
{
closed = 1;
nodes = (
(293,532,l),
(53,172,l),
(293,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 6 1 2 0 1 2 76 7 5 2 2 6 4 2 1 0 2 1 103 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 24 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,344,o),
(212,344,qs),
(283,344,o),
(327,304,qs),
(377,257,o),
(377,172,qs),
(377,94,o),
(335,46,qs),
(288,-10,o),
(202,-10,qs),
(130,-10,o),
(82,31,qs),
(38,68,o),
(38,106,qs),
(38,120,o),
(47,120,qs),
(54,120,o),
(57,111,qs),
(69,67,o),
(148,13,o),
(199,13,qs),
(266,13,o),
(305,49,qs),
(351,90,o),
(351,168,qs),
(351,235,o),
(319,275,qs),
(282,321,o),
(211,321,qs),
(153,321,o),
(82,294,qs),
(73,290,o),
(73,301,qs),
(73,553,ls),
(73,556,o),
(76,556,qs),
(330,556,ls),
(344,556,o),
(344,542,qs),
(344,539,ls),
(344,533,o),
(337,533,qs),
(99,533,l),
(99,324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 35 38 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,348,o),
(232,348,qs),
(295,348,o),
(338,305,qs),
(388,257,o),
(388,176,qs),
(388,97,o),
(348,47,qs),
(302,-10,o),
(220,-10,qs),
(150,-10,o),
(105,33,qs),
(54,82,o),
(54,167,qs),
(54,206,o),
(81,280,o),
(118,344,qs),
(247,558,ls),
(252,567,o),
(257,567,qs),
(266,567,o),
(267,556,qs),
(268,543,o),
(257,526,qs),
(133,319,l)
);
},
{
closed = 1;
nodes = (
(319,49,qs),
(362,92,o),
(362,169,qs),
(362,237,o),
(330,278,qs),
(294,325,o),
(225,325,qs),
(160,325,o),
(120,282,qs),
(80,238,o),
(80,169,qs),
(80,102,o),
(113,60,qs),
(151,12,o),
(221,12,qs),
(281,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 19 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,533,o),
(35,536,qs),
(35,553,ls),
(35,556,o),
(38,556,qs),
(352,556,ls),
(372,556,o),
(372,539,qs),
(372,538,ls),
(372,528,o),
(361,503,qs),
(131,8,ls),
(128,0,o),
(118,0,qs),
(104,0,ls),
(99,0,o),
(103,5,q),
(350,533,l),
(38,533,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 16 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,424,qs),
(65,482,o),
(102,522,qs),
(145,567,o),
(216,567,qs),
(278,567,o),
(319,532,qs),
(367,491,o),
(367,424,qs),
(367,332,o),
(274,297,q),
(325,280,o),
(386,201,o),
(386,151,qs),
(386,86,o),
(346,42,qs),
(298,-11,o),
(216,-11,qs),
(144,-11,o),
(98,30,qs),
(46,76,o),
(46,151,qs),
(46,201,o),
(107,280,o),
(158,297,q),
(65,332,o)
);
},
{
closed = 1;
nodes = (
(123,343,qs),
(160,308,o),
(216,308,qs),
(265,308,o),
(300,335,qs),
(343,368,o),
(343,422,qs),
(343,472,o),
(315,504,qs),
(280,544,o),
(216,544,qs),
(160,544,o),
(126,513,qs),
(89,480,o),
(89,422,qs),
(89,375,o)
);
},
{
closed = 1;
nodes = (
(106,55,qs),
(146,12,o),
(216,12,qs),
(277,12,o),
(316,46,qs),
(360,84,o),
(360,153,qs),
(360,206,o),
(324,243,qs),
(283,285,o),
(216,285,qs),
(158,285,o),
(118,252,qs),
(72,214,o),
(72,153,qs),
(72,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 5 3 4 105 0 2 2 1 97 0 1 1 23 77 0 5 5 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 2 3 1 2 105 0 3 0 4 5 3 4 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 40 43 38 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,209,o),
(205,209,qs),
(142,209,o),
(98,252,qs),
(46,302,o),
(46,384,qs),
(46,461,o),
(87,510,qs),
(135,567,o),
(217,567,qs),
(286,567,o),
(330,524,qs),
(380,475,o),
(380,389,qs),
(380,350,o),
(353,275,o),
(315,213,qs),
(187,-1,ls),
(182,-10,o),
(177,-10,qs),
(167,-10,o),
(167,14,o),
(177,31,qs),
(300,238,l)
);
},
{
closed = 1;
nodes = (
(315,274,qs),
(354,318,o),
(354,388,qs),
(354,455,o),
(323,497,qs),
(286,544,o),
(216,544,qs),
(156,544,o),
(117,507,qs),
(72,464,o),
(72,388,qs),
(72,318,o),
(104,278,qs),
(141,232,o),
(212,232,qs),
(277,232,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 41 18 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,217,o),
(3,217,qs),
(266,217,ls),
(269,217,o),
(269,214,qs),
(269,197,ls),
(269,194,o),
(266,194,qs),
(3,194,ls),
(0,194,o),
(0,197,qs),
(0,214,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,217,o),
(3,217,qs),
(574,217,ls),
(577,217,o),
(577,214,qs),
(577,197,ls),
(577,194,o),
(574,194,qs),
(3,194,ls),
(0,194,o),
(0,197,qs),
(0,214,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 48 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 577;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,452,qs),
(111,439,o),
(93,421,o),
(81,421,qs),
(67,421,o),
(50,441,o),
(50,456,qs),
(50,481,o),
(81,542,o),
(106,563,qs),
(107,564,o),
(111,561,qs),
(121,551,o),
(109,532,qs),
(107,528,o),
(106,528,q),
(105,526,o),
(103,524,q),
(89,500,o),
(84,483,q),
(111,478,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 47 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,544,o),
(116,529,qs),
(116,504,o),
(85,443,o),
(61,422,q),
(59,421,o),
(56,424,qs),
(45,434,o),
(57,452,qs),
(60,456,o),
(60,457,q),
(61,459,o),
(63,461,q),
(78,484,o),
(82,502,q),
(55,507,o),
(55,533,qs),
(55,546,o),
(73,564,o),
(86,564,qs),
(99,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
15 5 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
1 1 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 5 values pushed */
1 1 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
1 0 0 20 1 20 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-59,qs),
(78,-35,o),
(82,-18,q),
(55,-12,o),
(55,13,qs),
(55,26,o),
(73,45,o),
(86,45,qs),
(99,45,o),
(116,24,o),
(116,9,qs),
(116,-16,o),
(85,-76,o),
(61,-97,qs),
(59,-99,o),
(58,-97,q),
(56,-96,l),
(45,-86,o),
(57,-67,qs),
(59,-64,o),
(60,-63,qs),
(61,-61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
18 4 2 0 73 0 0 0 118 44 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 161;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,532,qs),
(107,528,o),
(106,528,q),
(105,526,o),
(103,524,q),
(89,500,o),
(84,483,q),
(111,478,o),
(111,452,qs),
(111,439,o),
(93,421,o),
(81,421,qs),
(67,421,o),
(50,441,o),
(50,456,qs),
(50,481,o),
(81,542,o),
(106,563,qs),
(107,564,o),
(111,561,qs),
(121,551,o)
);
},
{
closed = 1;
nodes = (
(247,452,qs),
(247,439,o),
(229,421,o),
(217,421,qs),
(203,421,o),
(186,441,o),
(186,456,qs),
(186,481,o),
(218,542,o),
(242,563,qs),
(243,564,o),
(247,561,qs),
(257,551,o),
(245,532,qs),
(243,528,o),
(242,528,q),
(241,526,o),
(240,524,qs),
(225,500,o),
(221,483,q),
(247,478,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
13 1 0 74 1 1 0 0 118 38 36 39 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,544,o),
(116,529,qs),
(116,504,o),
(85,443,o),
(61,422,q),
(59,421,o),
(56,424,qs),
(45,434,o),
(57,452,qs),
(60,456,o),
(60,457,q),
(61,459,o),
(63,461,q),
(78,484,o),
(82,502,q),
(55,507,o),
(55,533,qs),
(55,546,o),
(73,564,o),
(86,564,qs),
(99,564,o)
);
},
{
closed = 1;
nodes = (
(252,544,o),
(252,529,qs),
(252,504,o),
(221,443,o),
(197,422,q),
(195,421,o),
(192,424,qs),
(181,434,o),
(193,452,qs),
(196,456,o),
(196,457,q),
(197,459,o),
(199,461,q),
(214,484,o),
(218,502,q),
(191,507,o),
(191,533,qs),
(191,546,o),
(209,564,o),
(222,564,qs),
(235,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 26 15 5 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
3 1 2 3 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
3 1 2 3 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
22 21 1 0 21 41 22 41 0 20 1 20 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,-67,qs),
(59,-63,o),
(60,-63,q),
(61,-60,o),
(64,-56,qs),
(78,-33,o),
(82,-18,q),
(55,-12,o),
(55,13,qs),
(55,26,o),
(73,45,o),
(86,45,qs),
(99,45,o),
(116,24,o),
(116,9,qs),
(116,-15,o),
(85,-75,o),
(61,-97,q),
(59,-98,o),
(58,-97,qs),
(56,-96,o),
(56,-96,q),
(45,-85,o)
);
},
{
closed = 1;
nodes = (
(193,-67,qs),
(196,-63,l),
(197,-60,o),
(200,-56,qs),
(214,-33,o),
(218,-18,q),
(191,-12,o),
(191,13,qs),
(191,26,o),
(209,45,o),
(222,45,qs),
(235,45,o),
(252,24,o),
(252,9,qs),
(252,-15,o),
(221,-75,o),
(197,-97,qs),
(196,-98,o),
(194,-97,qs),
(193,-96,o),
(192,-96,q),
(181,-85,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
38 15 2 0 73 1 1 0 0 118 34 32 41 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,319,o),
(43,322,qs),
(43,339,ls),
(43,342,o),
(46,342,qs),
(149,342,l),
(149,553,ls),
(149,556,o),
(151,556,qs),
(153,556,ls),
(174,556,o),
(174,528,qs),
(174,342,l),
(276,342,ls),
(280,342,o),
(280,339,qs),
(280,322,ls),
(280,319,o),
(276,319,qs),
(174,319,l),
(174,-157,ls),
(174,-160,o),
(171,-160,qs),
(151,-160,ls),
(149,-160,o),
(149,-157,qs),
(149,319,l),
(46,319,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
20 1 1 2 11 10 2 0 1 2 76 4 1 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 2 39 77 5 4 2 0 0 1 95 3 1 1 1 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
3 1 1 5 4 2 0 1 0 99 0 2 2 39 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 27 0 25 20 18 21 23 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 322;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,123,o),
(43,126,qs),
(43,143,ls),
(43,146,o),
(46,146,qs),
(149,146,l),
(149,319,l),
(46,319,ls),
(43,319,o),
(43,322,qs),
(43,339,ls),
(43,342,o),
(46,342,qs),
(149,342,l),
(149,553,ls),
(149,556,o),
(151,556,qs),
(153,556,ls),
(174,556,o),
(174,528,qs),
(174,342,l),
(276,342,ls),
(280,342,o),
(280,339,qs),
(280,322,ls),
(280,319,o),
(276,319,qs),
(174,319,l),
(174,146,l),
(276,146,ls),
(280,146,o),
(280,143,qs),
(280,126,ls),
(280,123,o),
(276,123,qs),
(174,123,l),
(174,-157,ls),
(174,-160,o),
(171,-160,qs),
(151,-160,ls),
(149,-160,o),
(149,-157,qs),
(149,123,l),
(46,123,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
28 1 3 4 19 18 2 2 3 11 10 2 0 1 3 76 4 1 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
7 1 1 9 8 2 0 1 0 99 0 4 4 39 77 6 1 2 2 3 95 5 1 3 3 42 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
5 1 3 6 1 2 1 3 2 103 7 1 1 9 8 2 0 1 0 99 0 4 4 39 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 43 0 41 17 51 20 18 21 17 21 23 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 322;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,238,o),
(59,279,qs),
(59,320,o),
(106,368,o),
(145,368,qs),
(186,368,o),
(233,320,o),
(233,279,qs),
(233,239,o),
(187,190,o),
(147,190,qs),
(107,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 292;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,13,qs),
(56,25,o),
(74,44,o),
(87,44,qs),
(99,44,o),
(117,25,o),
(117,13,qs),
(117,0,o),
(99,-18,o),
(87,-18,qs),
(74,-18,o)
);
},
{
closed = 1;
nodes = (
(215,0,o),
(215,13,qs),
(215,25,o),
(233,44,o),
(245,44,qs),
(258,44,o),
(276,25,o),
(276,13,qs),
(276,0,o),
(258,-18,o),
(245,-18,qs),
(233,-18,o)
);
},
{
closed = 1;
nodes = (
(373,0,o),
(373,13,qs),
(373,25,o),
(391,44,o),
(404,44,qs),
(416,44,o),
(435,25,o),
(435,13,qs),
(435,0,o),
(416,-18,o),
(404,-18,qs),
(391,-18,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
5 3 2 1 0 0 1 89 5 3 2 1 1 0 97 8 4 7 2 6 5 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,262,qs),
(43,307,o),
(43,394,qs),
(43,470,o),
(70,515,qs),
(101,567,o),
(161,567,qs),
(214,567,o),
(245,527,qs),
(280,482,o),
(280,394,qs),
(280,318,o),
(253,274,qs),
(222,223,o),
(161,223,qs),
(109,223,o)
);
},
{
closed = 1;
nodes = (
(181,0,o),
(184,4,q),
(454,551,ls),
(456,556,o),
(459,556,qs),
(460,556,ls),
(469,556,o),
(474,537,o),
(467,525,q),
(213,8,ls),
(209,0,o),
(200,0,qs),
(186,0,ls)
);
},
{
closed = 1;
nodes = (
(255,393,qs),
(255,544,o),
(161,544,qs),
(68,544,o),
(68,393,qs),
(68,244,o),
(161,244,qs),
(255,244,o)
);
},
{
closed = 1;
nodes = (
(424,30,qs),
(389,75,o),
(389,163,qs),
(389,239,o),
(415,283,qs),
(447,335,o),
(507,335,qs),
(560,335,o),
(590,295,qs),
(625,250,o),
(625,163,qs),
(625,87,o),
(598,42,qs),
(567,-9,o),
(507,-9,qs),
(454,-9,o)
);
},
{
closed = 1;
nodes = (
(722,30,qs),
(687,75,o),
(687,163,qs),
(687,239,o),
(714,283,qs),
(745,335,o),
(805,335,qs),
(858,335,o),
(889,295,qs),
(924,250,o),
(924,163,qs),
(924,87,o),
(897,42,qs),
(866,-9,o),
(805,-9,qs),
(752,-9,o)
);
},
{
closed = 1;
nodes = (
(600,162,qs),
(600,313,o),
(507,313,qs),
(414,313,o),
(414,162,qs),
(414,13,o),
(507,13,qs),
(600,13,o)
);
},
{
closed = 1;
nodes = (
(899,162,qs),
(899,313,o),
(805,313,qs),
(712,313,o),
(712,162,qs),
(712,13,o),
(805,13,qs),
(899,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
9 1 7 13 1 11 4 7 11 105 16 1 4 14 1 0 10 4 0 105 0 3 3 39 77 0 5 5 1 97 0 1 1 39 77 15 1 2 2 40 77 20 12 19 3 10 10 6 97 18 8 17 3 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 5 7 1 5 105 9 1 7 13 1 11 4 7 11 105 16 1 4 14 1 0 10 4 0 105 0 3 3 39 77 15 1 2 2 40 77 20 12 19 3 10 10 6 97 18 8 17 3 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
78 77 70 69 54 53 38 37 30 29 17 16 1 0 82 80 77 84 78 84 74 72 69 76 70 76 62 60 53 68 54 68 46 44 37 52 38 52 34 32 29 36 30 36 22 21 16 28 17 27 9 7 0 15 1 15 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,40,o),
(163,40,qs),
(149,40,ls),
(140,40,o),
(135,48,q),
(40,170,ls),
(33,178,o),
(33,184,qs),
(33,190,o),
(40,198,qs),
(135,320,l),
(140,328,o),
(149,328,qs),
(163,328,ls),
(167,328,o),
(164,323,q),
(55,184,l),
(164,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,328,o),
(35,328,qs),
(50,328,ls),
(58,328,o),
(63,320,q),
(158,198,ls),
(165,189,o),
(165,184,qs),
(165,179,o),
(158,170,qs),
(63,48,l),
(58,40,o),
(50,40,qs),
(35,40,ls),
(31,40,o),
(34,45,q),
(143,184,l),
(34,323,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 40 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,0,o),
(3,4,qs),
(307,549,l),
(310,556,o),
(315,556,qs),
(324,556,o),
(326,537,o),
(319,525,qs),
(32,8,ls),
(27,0,o),
(19,0,qs),
(5,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 20 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,201,o),
(6,204,q),
(13,221,ls),
(14,224,o),
(17,224,qs),
(74,224,l),
(71,251,o),
(71,278,qs),
(71,292,o),
(73,318,q),
(8,318,ls),
(4,318,o),
(6,321,q),
(13,338,ls),
(14,341,o),
(17,341,qs),
(74,341,l),
(88,440,o),
(145,499,qs),
(209,567,o),
(314,567,qs),
(388,567,o),
(449,529,qs),
(465,519,o),
(473,509,o),
(470,501,qs),
(469,498,ls),
(466,491,o),
(463,491,qs),
(460,491,o),
(453,496,qs),
(387,544,o),
(312,544,qs),
(232,544,o),
(178,497,qs),
(117,443,o),
(102,341,q),
(406,341,ls),
(409,341,o),
(408,338,qs),
(401,321,l),
(399,318,o),
(397,318,qs),
(98,318,l),
(98,314,o),
(98,307,qs),
(97,286,o),
(97,277,qs),
(97,252,o),
(99,224,q),
(362,224,ls),
(366,224,o),
(364,221,q),
(357,204,ls),
(356,201,o),
(353,201,qs),
(103,201,l),
(119,118,o),
(167,68,qs),
(223,12,o),
(310,12,qs),
(366,12,o),
(449,63,o),
(468,109,qs),
(472,118,o),
(477,118,qs),
(486,118,o),
(486,106,qs),
(486,77,o),
(451,42,qs),
(398,-11,o),
(308,-11,qs),
(223,-11,o),
(163,37,qs),
(95,94,o),
(77,201,q),
(8,201,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 2 3 1 2 128 9 1 6 10 1 5 4 6 5 103 11 1 4 13 12 2 3 1 4 3 103 0 7 7 8 97 0 8 8 39 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 3 2 3 1 2 128 0 10 5 6 10 87 9 1 6 0 5 4 6 5 103 11 1 4 13 12 2 3 1 4 3 103 0 7 7 8 97 0 8 8 39 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 3 2 3 1 2 128 9 1 6 10 1 5 4 6 5 103 11 1 4 13 12 2 3 1 4 3 103 0 7 7 8 97 0 8 8 39 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 3 2 3 1 2 128 0 8 0 7 6 8 7 105 9 1 6 10 1 5 4 6 5 103 11 1 4 13 12 2 3 1 4 3 103 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 76 0 74 71 70 66 63 60 59 42 35 51 37 51 19 36 20 35 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,532,o),
(38,534,qs),
(38,553,ls),
(38,556,o),
(40,556,qs),
(209,556,ls),
(224,556,o),
(224,541,qs),
(224,536,ls),
(224,532,o),
(220,532,qs),
(144,532,l),
(144,276,ls),
(144,272,o),
(141,272,qs),
(120,272,ls),
(119,272,o),
(119,276,qs),
(119,532,l),
(40,532,ls)
);
},
{
closed = 1;
nodes = (
(501,556,o),
(503,556,qs),
(504,556,ls),
(525,556,o),
(526,532,qs),
(540,276,ls),
(540,272,o),
(538,272,qs),
(517,272,ls),
(514,272,o),
(514,276,qs),
(503,493,l),
(426,276,l),
(424,272,o),
(421,272,qs),
(403,272,ls),
(400,272,o),
(399,276,qs),
(324,490,l),
(312,276,ls),
(312,272,o),
(309,272,qs),
(290,272,ls),
(286,272,o),
(286,276,qs),
(301,553,ls),
(301,556,o),
(304,556,qs),
(305,556,ls),
(325,556,o),
(333,536,qs),
(412,305,l),
(499,553,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
26 10 2 0 1 41 40 33 32 27 6 1 7 4 0 2 76 4 1 4 73 6 5 2 4 0 4 134 7 3 2 1 0 0 1 89 7 3 2 1 1 0 95 8 2 2 0 1 0 79 0 0 49 48 44 43 37 36 30 29 23 22 0 19 0 17 36 23 9 6 24 
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,262,o),
(46,266,qs),
(46,282,ls),
(46,285,o),
(49,285,qs),
(328,285,ls),
(342,285,o),
(342,271,qs),
(342,268,ls),
(342,262,o),
(335,262,qs),
(49,262,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
9 1 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 6 4 0 11 1 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,172,o),
(46,175,qs),
(46,192,ls),
(46,195,o),
(49,195,qs),
(140,195,l),
(227,344,l),
(49,344,ls),
(46,344,o),
(46,347,qs),
(46,364,ls),
(46,367,o),
(49,367,qs),
(240,367,l),
(300,472,ls),
(303,478,o),
(309,478,qs),
(317,478,o),
(319,460,o),
(312,447,qs),
(265,367,l),
(328,367,ls),
(342,367,o),
(342,353,qs),
(342,350,ls),
(342,344,o),
(335,344,qs),
(252,344,l),
(167,195,l),
(328,195,ls),
(342,195,o),
(342,181,qs),
(342,178,ls),
(342,172,o),
(335,172,qs),
(153,172,l),
(94,68,l),
(89,61,o),
(81,61,qs),
(68,61,ls),
(63,61,o),
(66,64,q),
(128,172,l),
(49,172,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 43 0 41 17 51 19 19 35 33 35 34 20 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,135,o),
(397,118,qs),
(397,117,ls),
(397,110,o),
(392,112,qs),
(52,259,ls),
(46,262,o),
(46,268,qs),
(46,272,ls),
(46,280,o),
(52,282,qs),
(392,424,ls),
(397,426,o),
(397,421,qs),
(397,411,ls),
(397,403,o),
(387,398,qs),
(78,271,l),
(374,144,ls)
);
},
{
closed = 1;
nodes = (
(46,23,o),
(49,23,qs),
(394,23,ls),
(397,23,o),
(397,20,qs),
(397,3,ls),
(397,0,o),
(394,0,qs),
(49,0,ls),
(46,0,o),
(46,3,qs),
(46,20,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
4 1 1 74 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 28 25 22 19 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,403,o),
(54,411,qs),
(54,421,ls),
(54,426,o),
(59,424,qs),
(398,282,l),
(405,280,o),
(405,272,qs),
(405,268,ls),
(405,261,o),
(398,259,q),
(59,112,l),
(54,111,o),
(54,117,qs),
(54,118,ls),
(54,135,o),
(77,144,qs),
(373,271,l),
(63,398,l)
);
},
{
closed = 1;
nodes = (
(54,23,o),
(57,23,qs),
(402,23,ls),
(405,23,o),
(405,20,qs),
(405,3,ls),
(405,0,o),
(402,0,qs),
(57,0,ls),
(54,0,o),
(54,3,qs),
(54,20,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 28 25 22 19 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,513,qs),
(252,492,o),
(272,492,qs),
(294,492,o),
(294,513,qs),
(294,530,o),
(272,534,q),
(252,530,o)
);
},
{
closed = 1;
nodes = (
(338,488,qs),
(338,467,o),
(359,467,qs),
(368,467,o),
(380,479,o),
(380,488,qs),
(380,506,o),
(359,509,q),
(338,506,o)
);
},
{
closed = 1;
nodes = (
(57,317,qs),
(57,309,o),
(70,296,o),
(78,296,qs),
(99,296,o),
(99,317,qs),
(99,335,o),
(78,339,q),
(57,335,o)
);
},
{
closed = 1;
nodes = (
(446,317,qs),
(446,296,o),
(467,296,qs),
(476,296,o),
(488,309,o),
(488,317,qs),
(488,335,o),
(467,339,q),
(446,335,o)
);
},
{
closed = 1;
nodes = (
(294,121,qs),
(294,142,o),
(272,142,qs),
(252,142,o),
(252,121,qs),
(252,103,o),
(272,100,q),
(294,103,o)
);
},
{
closed = 1;
nodes = (
(412,421,qs),
(412,400,o),
(432,400,qs),
(441,400,o),
(454,413,o),
(454,421,qs),
(454,439,o),
(432,443,q),
(412,439,o)
);
},
{
closed = 1;
nodes = (
(158,489,qs),
(158,480,o),
(171,467,o),
(180,467,qs),
(200,467,o),
(200,489,qs),
(200,507,o),
(180,510,q),
(158,506,o)
);
},
{
closed = 1;
nodes = (
(84,413,qs),
(84,404,o),
(97,391,o),
(106,391,qs),
(126,391,o),
(126,413,qs),
(126,431,o),
(106,434,q),
(84,430,o)
);
},
{
closed = 1;
nodes = (
(394,155,qs),
(394,163,o),
(381,176,o),
(372,176,qs),
(352,176,o),
(352,155,qs),
(352,137,o),
(372,133,q),
(394,137,o)
);
},
{
closed = 1;
nodes = (
(460,221,qs),
(460,230,o),
(448,243,o),
(439,243,qs),
(418,243,o),
(418,221,qs),
(418,204,o),
(439,200,q),
(460,204,o)
);
},
{
closed = 1;
nodes = (
(200,155,qs),
(200,176,o),
(179,176,qs),
(170,176,o),
(158,163,o),
(158,155,qs),
(158,137,o),
(179,133,q),
(200,137,o)
);
},
{
closed = 1;
nodes = (
(120,221,qs),
(120,243,o),
(100,243,qs),
(91,243,o),
(78,230,o),
(78,221,qs),
(78,204,o),
(100,200,q),
(120,204,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 0 1 0 133 6 1 1 5 1 133 0 5 7 5 133 0 7 2 7 133 3 1 2 9 2 133 11 1 9 8 9 133 10 1 8 4 8 133 0 4 4 118 103 101 94 92 84 82 39 39 38 39 38 40 38 39 35 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,51,qs),
(43,120,o),
(43,277,qs),
(43,567,o),
(225,567,qs),
(312,567,o),
(356,504,qs),
(407,434,o),
(407,277,qs),
(407,140,o),
(369,70,qs),
(326,-10,o),
(225,-10,qs),
(136,-10,o)
);
},
{
closed = 1;
nodes = (
(338,67,qs),
(381,130,o),
(381,277,qs),
(381,408,o),
(349,471,qs),
(312,544,o),
(225,544,qs),
(149,544,o),
(111,489,qs),
(69,426,o),
(69,277,qs),
(69,148,o),
(101,85,qs),
(138,13,o),
(225,13,qs),
(301,13,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 23 77 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,483,ls),
(70,482,o),
(70,486,qs),
(70,498,ls),
(70,506,o),
(77,508,qs),
(200,549,l),
(214,556,o),
(221,556,qs),
(227,556,ls),
(244,556,o),
(244,534,qs),
(244,23,l),
(390,23,ls),
(404,23,o),
(404,9,qs),
(404,6,ls),
(404,0,o),
(397,0,qs),
(62,0,ls),
(59,0,o),
(59,3,qs),
(59,20,ls),
(59,23,o),
(62,23,qs),
(218,23,l),
(218,533,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
26 23 2 0 3 1 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 67 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,23,o),
(392,9,qs),
(392,6,ls),
(392,0,o),
(385,0,qs),
(52,0,ls),
(49,0,o),
(49,3,qs),
(50,88,o),
(106,151,qs),
(140,189,o),
(225,244,qs),
(310,299,o),
(368,369,o),
(368,417,qs),
(368,474,o),
(335,506,qs),
(296,544,o),
(221,544,qs),
(148,544,o),
(85,503,qs),
(84,502,o),
(83,502,q),
(77,498,o),
(75,498,qs),
(72,498,o),
(70,504,qs),
(68,508,l),
(66,520,o),
(88,533,qs),
(151,567,o),
(223,567,qs),
(298,567,o),
(342,532,qs),
(393,493,o),
(393,418,qs),
(393,367,o),
(362,326,qs),
(334,289,o),
(257,238,qs),
(168,180,o),
(139,151,qs),
(81,95,o),
(75,23,q),
(378,23,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 1 0 97 0 0 0 23 77 4 1 3 3 2 95 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 0 0 1 3 0 1 105 4 1 3 3 2 95 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 44 0 43 74 43 43 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,256,qs),
(393,214,o),
(393,152,qs),
(393,83,o),
(353,40,qs),
(306,-10,o),
(220,-10,qs),
(146,-10,o),
(98,30,qs),
(54,67,o),
(54,104,qs),
(54,120,o),
(63,120,qs),
(70,120,o),
(73,111,qs),
(85,67,o),
(164,13,o),
(217,13,qs),
(290,13,o),
(328,48,qs),
(367,84,o),
(367,151,qs),
(367,208,o),
(331,244,qs),
(292,283,o),
(227,283,qs),
(138,283,ls),
(125,283,o),
(125,297,qs),
(125,300,ls),
(125,306,o),
(131,306,qs),
(231,306,ls),
(260,306,o),
(294,324,qs),
(355,356,o),
(355,424,qs),
(355,477,o),
(323,508,qs),
(286,544,o),
(216,544,qs),
(144,544,o),
(81,503,qs),
(80,502,o),
(79,502,q),
(73,498,o),
(71,498,qs),
(68,498,o),
(66,504,qs),
(65,508,ls),
(62,520,o),
(85,533,qs),
(147,567,o),
(218,567,qs),
(289,567,o),
(331,534,qs),
(380,496,o),
(380,426,qs),
(380,379,o),
(327,311,o),
(278,296,q),
(318,287,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 103 0 1 1 0 97 0 0 0 23 77 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 4 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 103 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 35 38 52 38 43 38 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,149,o),
(51,152,qs),
(51,162,ls),
(51,173,o),
(57,182,qs),
(298,544,ls),
(306,556,o),
(315,556,qs),
(323,556,ls),
(342,556,o),
(342,529,qs),
(342,172,l),
(399,172,ls),
(413,172,o),
(413,158,qs),
(413,155,ls),
(413,149,o),
(406,149,qs),
(342,149,l),
(342,6,ls),
(342,0,o),
(337,0,qs),
(322,0,ls),
(317,0,o),
(317,6,qs),
(317,149,l),
(54,149,ls)
);
},
{
closed = 1;
nodes = (
(317,532,l),
(77,172,l),
(317,172,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 6 1 2 0 1 2 76 7 5 2 2 6 4 2 1 0 2 1 103 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 24 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,344,o),
(221,344,qs),
(293,344,o),
(339,304,qs),
(394,256,o),
(394,172,qs),
(394,95,o),
(349,46,qs),
(298,-10,o),
(211,-10,qs),
(139,-10,o),
(91,31,qs),
(47,68,o),
(47,106,qs),
(47,120,o),
(56,120,qs),
(63,120,o),
(66,111,qs),
(78,67,o),
(157,13,o),
(208,13,qs),
(276,13,o),
(318,49,qs),
(368,91,o),
(368,168,qs),
(368,235,o),
(332,275,qs),
(292,321,o),
(220,321,qs),
(162,321,o),
(92,294,qs),
(82,290,o),
(82,301,qs),
(82,553,ls),
(82,556,o),
(85,556,qs),
(347,556,ls),
(361,556,o),
(361,542,qs),
(361,539,ls),
(361,533,o),
(354,533,qs),
(108,533,l),
(108,324,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 35 38 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,348,o),
(239,348,qs),
(303,348,o),
(346,305,qs),
(395,257,o),
(395,176,qs),
(395,97,o),
(355,47,qs),
(309,-10,o),
(227,-10,qs),
(158,-10,o),
(113,33,qs),
(61,82,o),
(61,167,qs),
(61,206,o),
(88,280,o),
(125,344,qs),
(254,558,ls),
(259,567,o),
(265,567,qs),
(273,567,o),
(274,556,qs),
(276,543,o),
(265,526,qs),
(140,319,l)
);
},
{
closed = 1;
nodes = (
(326,49,qs),
(369,92,o),
(369,169,qs),
(369,237,o),
(338,278,qs),
(301,325,o),
(232,325,qs),
(167,325,o),
(128,282,qs),
(87,238,o),
(87,169,qs),
(87,102,o),
(120,60,qs),
(158,12,o),
(228,12,qs),
(288,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
24 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 19 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,533,o),
(48,536,qs),
(48,553,ls),
(48,556,o),
(51,556,qs),
(377,556,ls),
(397,556,o),
(397,539,qs),
(397,538,ls),
(397,525,o),
(386,503,qs),
(146,8,l),
(143,0,o),
(134,0,qs),
(120,0,ls),
(115,0,o),
(119,5,q),
(375,533,l),
(51,533,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 16 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,424,qs),
(73,482,o),
(110,522,qs),
(153,567,o),
(224,567,qs),
(286,567,o),
(327,532,qs),
(375,491,o),
(375,424,qs),
(375,332,o),
(282,297,q),
(333,280,o),
(394,201,o),
(394,151,qs),
(394,86,o),
(354,42,qs),
(306,-11,o),
(224,-11,qs),
(152,-11,o),
(106,30,qs),
(54,76,o),
(54,151,qs),
(54,201,o),
(115,280,o),
(167,297,q),
(73,332,o)
);
},
{
closed = 1;
nodes = (
(131,343,qs),
(168,308,o),
(224,308,qs),
(273,308,o),
(308,335,qs),
(351,368,o),
(351,422,qs),
(351,472,o),
(323,504,qs),
(288,544,o),
(224,544,qs),
(168,544,o),
(134,513,qs),
(97,480,o),
(97,422,qs),
(97,375,o)
);
},
{
closed = 1;
nodes = (
(114,55,qs),
(154,12,o),
(224,12,qs),
(285,12,o),
(324,46,qs),
(368,84,o),
(368,153,qs),
(368,206,o),
(333,243,qs),
(291,285,o),
(224,285,qs),
(166,285,o),
(126,252,qs),
(80,214,o),
(80,153,qs),
(80,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 5 3 4 105 0 2 2 1 97 0 1 1 23 77 0 5 5 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 2 3 1 2 105 0 3 0 4 5 3 4 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 38 40 43 38 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,209,o),
(213,209,qs),
(150,209,o),
(106,252,qs),
(54,302,o),
(54,384,qs),
(54,461,o),
(95,510,qs),
(143,567,o),
(225,567,qs),
(294,567,o),
(338,524,qs),
(388,475,o),
(388,389,qs),
(388,350,o),
(361,275,o),
(323,213,qs),
(195,-1,ls),
(190,-10,o),
(185,-10,qs),
(175,-10,o),
(175,14,o),
(185,31,qs),
(308,238,l)
);
},
{
closed = 1;
nodes = (
(323,274,qs),
(362,318,o),
(362,388,qs),
(362,455,o),
(331,497,qs),
(294,544,o),
(224,544,qs),
(164,544,o),
(125,507,qs),
(80,464,o),
(80,388,qs),
(80,318,o),
(112,278,qs),
(149,232,o),
(220,232,qs),
(285,232,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 41 18 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,393,l),
(163,396,o),
(166,396,qs),
(192,396,l),
(208,498,o),
(296,654,o),
(360,697,qs),
(369,702,o),
(369,692,qs),
(369,682,o),
(367,675,qs),
(363,666,o),
(350,654,qs),
(246,559,o),
(220,396,q),
(246,396,ls),
(249,396,o),
(249,393,qs),
(249,392,o),
(248,391,q),
(225,351,l),
(217,356,o),
(207,356,qs),
(194,356,o),
(187,351,q),
(164,391,l)
);
},
{
closed = 1;
nodes = (
(126,288,o),
(126,276,qs),
(126,266,o),
(131,258,q),
(91,235,l),
(90,235,l),
(89,234,o),
(88,234,qs),
(86,234,o),
(86,237,qs),
(86,258,l),
(59,267,l),
(56,267,o),
(56,272,qs),
(56,282,ls),
(56,286,o),
(59,287,qs),
(86,294,l),
(86,317,ls),
(86,319,o),
(88,319,qs),
(89,319,o),
(91,318,qs),
(131,296,l)
);
},
{
closed = 1;
nodes = (
(286,266,o),
(286,276,qs),
(286,288,o),
(281,296,q),
(321,318,ls),
(323,319,o),
(324,319,qs),
(326,319,o),
(326,317,qs),
(326,294,l),
(353,287,ls),
(356,286,o),
(356,282,qs),
(356,272,ls),
(356,267,o),
(353,267,q),
(326,258,l),
(326,237,ls),
(326,234,o),
(324,234,qs),
(323,234,o),
(322,235,q),
(321,235,o),
(321,235,q),
(281,258,l)
);
},
{
closed = 1;
nodes = (
(229,276,qs),
(229,267,o),
(215,253,o),
(206,253,qs),
(197,253,o),
(183,267,o),
(183,276,qs),
(183,285,o),
(197,299,o),
(206,299,qs),
(229,299,o)
);
},
{
closed = 1;
nodes = (
(367,-122,qs),
(369,-129,o),
(369,-138,qs),
(369,-149,o),
(360,-143,qs),
(301,-104,o),
(259,-35,qs),
(210,47,o),
(193,157,q),
(166,157,ls),
(163,157,o),
(163,159,q),
(164,161,l),
(164,162,l),
(187,202,l),
(194,197,o),
(207,197,qs),
(217,197,o),
(225,202,q),
(248,162,ls),
(249,160,o),
(249,159,qs),
(249,157,o),
(246,157,qs),
(220,157,l),
(246,-7,o),
(350,-101,qs),
(363,-113,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
25 5 2 0 1 65 4 2 3 0 74 70 64 61 60 57 49 45 38 35 34 11 4 3 98 94 56 44 39 5 6 4 99 93 2 5 6 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 7 1 5 4 5 111 8 1 3 4 4 3 89 8 1 3 3 4 97 0 4 3 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 7 1 5 5 132 8 1 3 4 4 3 89 8 1 3 3 4 97 0 4 3 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
76 75 104 103 97 95 89 88 82 80 75 85 76 85 27 22 33 9 6 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,396,o),
(267,393,q),
(266,391,l),
(243,351,l),
(236,356,o),
(224,356,qs),
(213,356,o),
(205,351,q),
(183,391,l),
(182,392,o),
(182,393,qs),
(182,396,o),
(184,396,qs),
(210,396,l),
(185,559,o),
(80,654,qs),
(67,666,o),
(64,675,qs),
(61,682,o),
(61,692,qs),
(61,702,o),
(70,697,qs),
(130,658,o),
(172,588,qs),
(221,506,o),
(238,396,q),
(264,396,ls)
);
},
{
closed = 1;
nodes = (
(144,288,o),
(144,276,qs),
(144,266,o),
(149,258,q),
(109,235,l),
(107,234,l),
(104,234,o),
(104,237,qs),
(104,258,l),
(78,267,l),
(74,267,o),
(74,272,qs),
(74,282,ls),
(74,286,o),
(78,287,qs),
(104,294,l),
(104,317,ls),
(104,319,o),
(107,319,qs),
(108,319,o),
(109,318,q),
(149,296,l)
);
},
{
closed = 1;
nodes = (
(374,286,o),
(374,282,qs),
(374,272,ls),
(374,267,o),
(371,267,q),
(344,258,l),
(344,237,ls),
(344,234,o),
(342,234,q),
(340,235,l),
(339,235,l),
(299,258,l),
(304,266,o),
(304,276,qs),
(304,288,o),
(299,296,q),
(339,318,ls),
(341,319,o),
(342,319,qs),
(344,319,o),
(344,317,qs),
(344,294,l),
(371,287,ls)
);
},
{
closed = 1;
nodes = (
(202,267,o),
(202,276,qs),
(202,299,o),
(224,299,qs),
(234,299,o),
(247,285,o),
(247,276,qs),
(247,267,o),
(234,253,o),
(224,253,qs),
(215,253,o)
);
},
{
closed = 1;
nodes = (
(266,161,l),
(267,159,l),
(267,157,o),
(264,157,qs),
(238,157,l),
(222,55,o),
(135,-101,o),
(70,-143,qs),
(61,-149,o),
(61,-138,qs),
(61,-129,o),
(64,-122,qs),
(67,-113,o),
(80,-101,qs),
(185,-7,o),
(210,157,q),
(184,157,ls),
(182,157,o),
(182,159,qs),
(182,160,o),
(183,162,qs),
(205,202,l),
(213,197,o),
(224,197,qs),
(236,197,o),
(243,202,q),
(266,162,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
23 1 1 0 50 22 18 3 4 1 69 68 65 59 55 49 48 44 39 36 35 11 3 4 87 64 60 43 40 5 5 3 109 88 2 6 5 5 76 93 1 6 73 7 2 2 0 1 0 133 0 1 4 1 133 0 5 3 6 3 5 6 128 0 6 6 132 0 4 3 3 4 89 0 4 4 3 97 8 1 3 4 3 81 73 72 0 0 105 104 86 84 79 77 72 82 73 82 0 26 0 26 38 28 9 6 24 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,416,ls),
(117,476,o),
(148,515,qs),
(188,564,o),
(266,564,qs),
(335,564,o),
(375,526,qs),
(416,485,o),
(416,416,qs),
(416,34,ls),
(416,17,o),
(412,9,qs),
(406,0,o),
(395,0,qs),
(392,0,ls),
(390,0,o),
(390,3,qs),
(390,421,ls),
(390,468,o),
(364,500,qs),
(331,541,o),
(266,541,qs),
(209,541,o),
(176,509,qs),
(143,476,o),
(143,421,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
14 1 0 4 1 76 0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 36 34 27 25 18 17 10 8 0 37 1 37 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,116,o),
(73,122,qs),
(73,521,ls),
(73,538,o),
(77,546,qs),
(83,556,o),
(94,556,qs),
(97,556,ls),
(99,556,o),
(99,553,qs),
(98,122,ls),
(98,116,o),
(92,116,qs),
(79,116,ls)
);
},
{
closed = 1;
nodes = (
(117,26,o),
(117,13,qs),
(117,0,o),
(99,-18,o),
(87,-18,qs),
(74,-18,o),
(56,0,o),
(56,13,qs),
(56,26,o),
(74,44,o),
(87,44,qs),
(99,44,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
11 3 2 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 1 1 0 2 0 1 2 128 0 0 0 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
4 1 1 0 2 0 1 2 128 5 1 2 0 3 2 3 101 0 0 0 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
15 14 0 0 21 19 14 25 15 25 0 13 0 13 22 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 171;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,0,o),
(170,7,qs),
(170,517,ls),
(170,556,o),
(202,556,qs),
(221,556,ls),
(315,556,o),
(352,495,qs),
(353,493,o),
(354,495,qs),
(392,556,o),
(485,556,qs),
(534,556,ls),
(536,556,o),
(536,554,qs),
(536,552,ls),
(536,545,o),
(529,539,qs),
(521,533,o),
(508,533,qs),
(477,533,ls),
(408,533,o),
(364,464,qs),
(357,454,o),
(353,454,qs),
(348,454,o),
(342,464,qs),
(315,504,o),
(266,533,o),
(227,533,qs),
(202,533,ls),
(196,533,o),
(196,527,qs),
(196,7,ls),
(196,0,o),
(190,0,qs),
(177,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
20 1 0 3 26 3 2 1 0 2 1 5 1 3 76 0 1 0 5 0 1 5 128 2 1 0 0 3 97 4 1 3 3 23 77 6 1 5 5 24 5 78 0 0 0 36 0 35 52 23 50 35 37 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,556,o),
(441,556,qs),
(442,556,o),
(443,553,qs),
(446,542,o),
(444,532,q),
(441,524,o),
(433,516,qs),
(228,324,ls),
(133,232,o),
(132,149,qs),
(131,96,o),
(164,62,qs),
(201,23,o),
(266,23,qs),
(565,23,ls),
(577,23,o),
(593,12,o),
(593,3,qs),
(593,2,ls),
(593,0,o),
(591,0,qs),
(266,0,ls),
(202,0,o),
(160,31,qs),
(106,71,o),
(106,149,qs),
(106,198,o),
(154,284,o),
(217,349,q),
(438,554,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 24 0 78 53 38 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,536,o),
(91,539,q),
(53,626,ls),
(52,629,o),
(58,629,qs),
(73,629,o),
(82,609,qs),
(105,559,l),
(127,609,ls),
(136,629,o),
(151,629,qs),
(157,629,o),
(156,626,qs),
(118,539,l),
(116,536,o),
(113,536,qs),
(96,536,ls)
);
},
{
closed = 1;
nodes = (
(415,556,o),
(415,553,qs),
(415,143,ls),
(415,78,o),
(383,41,qs),
(348,0,o),
(285,0,qs),
(244,0,l),
(243,-1,l),
(243,0,l),
(64,0,ls),
(62,0,o),
(62,2,qs),
(62,4,ls),
(62,23,o),
(81,23,qs),
(235,23,l),
(108,405,ls),
(99,432,o),
(112,441,q),
(113,441,o),
(115,442,qs),
(117,443,o),
(118,443,q),
(120,444,ls),
(122,445,o),
(123,443,qs),
(264,23,l),
(286,23,ls),
(333,23,o),
(360,53,qs),
(389,85,o),
(389,143,qs),
(389,521,ls),
(389,538,o),
(394,546,qs),
(399,556,o),
(410,556,qs),
(413,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
13 8 3 3 3 0 53 1 2 3 2 76 1 1 0 3 0 133 7 1 2 3 4 3 2 4 128 0 3 3 23 77 5 1 4 4 6 95 0 6 6 24 6 78 0 0 49 41 40 38 27 25 18 17 0 16 0 16 20 21 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,536,o),
(91,539,q),
(53,626,ls),
(52,629,o),
(58,629,qs),
(73,629,o),
(82,609,qs),
(105,559,l),
(127,609,ls),
(136,629,o),
(151,629,qs),
(157,629,o),
(156,626,qs),
(118,539,l),
(116,536,o),
(113,536,qs),
(96,536,ls)
);
},
{
closed = 1;
nodes = (
(549,0,l),
(520,0,ls),
(433,0,o),
(402,72,q),
(372,0,o),
(285,0,qs),
(244,0,l),
(243,-1,l),
(243,0,l),
(64,0,ls),
(62,0,o),
(62,2,qs),
(62,4,ls),
(62,23,o),
(81,23,qs),
(235,23,l),
(108,405,ls),
(99,432,o),
(112,441,q),
(113,441,o),
(115,442,qs),
(117,443,o),
(118,443,q),
(120,444,ls),
(122,445,o),
(123,443,qs),
(264,23,l),
(286,23,ls),
(333,23,o),
(360,53,qs),
(389,85,o),
(389,143,qs),
(389,521,ls),
(389,538,o),
(394,546,qs),
(399,556,o),
(410,556,qs),
(413,556,ls),
(415,556,o),
(415,553,qs),
(415,143,ls),
(415,87,o),
(470,23,o),
(518,23,qs),
(549,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
13 8 3 3 4 0 21 1 2 4 57 1 3 2 3 76 1 1 0 4 0 133 9 1 2 4 3 4 2 3 128 0 4 4 23 77 6 5 10 3 3 3 7 97 8 1 7 7 24 7 78 18 17 0 0 60 58 56 48 47 45 34 32 25 24 17 61 18 61 0 16 0 16 20 21 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,650,o),
(484,663,qs),
(484,675,o),
(500,692,o),
(511,692,qs),
(523,692,o),
(540,675,o),
(540,663,qs),
(540,650,o),
(523,633,o),
(511,633,qs),
(500,633,o)
);
},
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
16 1 5 3 52 1 2 5 2 76 0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 55 53 48 46 39 37 29 27 20 19 12 56 13 56 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,675,o),
(157,663,qs),
(157,650,o),
(141,633,o),
(129,633,qs),
(117,633,o),
(101,650,o),
(101,663,qs),
(101,675,o),
(117,692,o),
(129,692,qs),
(141,692,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
17 1 4 3 1 76 5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 30 28 21 20 12 31 13 31 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,650,o),
(101,663,qs),
(101,675,o),
(117,692,o),
(129,692,qs),
(141,692,o),
(157,675,o),
(157,663,qs),
(157,650,o),
(141,633,o),
(129,633,qs),
(117,633,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
33 16 2 2 3 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 36 34 32 30 29 27 20 19 12 37 13 37 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,720,o),
(486,731,qs),
(486,742,o),
(502,757,o),
(513,757,qs),
(523,757,o),
(539,742,o),
(539,731,qs),
(539,720,o),
(523,706,o),
(513,706,qs),
(502,706,o)
);
},
{
closed = 1;
nodes = (
(445,651,o),
(445,663,qs),
(445,674,o),
(460,689,o),
(470,689,qs),
(481,689,o),
(496,674,o),
(496,663,qs),
(496,651,o),
(481,636,o),
(470,636,qs),
(460,636,o)
);
},
{
closed = 1;
nodes = (
(545,689,o),
(555,689,qs),
(566,689,o),
(581,674,o),
(581,663,qs),
(581,651,o),
(566,636,o),
(555,636,qs),
(545,636,o),
(530,651,o),
(530,663,qs),
(530,674,o)
);
},
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
40 1 9 7 76 1 6 9 2 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 79 77 72 70 63 61 53 51 44 43 36 80 37 80 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,719,o),
(104,730,qs),
(104,741,o),
(119,756,o),
(130,756,qs),
(141,756,o),
(156,741,o),
(156,730,qs),
(156,719,o),
(141,704,o),
(130,704,qs),
(119,704,o)
);
},
{
closed = 1;
nodes = (
(62,650,o),
(62,662,qs),
(62,673,o),
(77,688,o),
(88,688,qs),
(99,688,o),
(113,673,o),
(113,662,qs),
(113,650,o),
(99,635,o),
(88,635,qs),
(77,635,o)
);
},
{
closed = 1;
nodes = (
(147,650,o),
(147,662,qs),
(147,673,o),
(162,688,o),
(173,688,qs),
(184,688,o),
(198,673,o),
(198,662,qs),
(198,650,o),
(184,635,o),
(173,635,qs),
(162,635,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
41 1 8 7 1 76 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 97 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 54 52 45 44 36 55 37 55 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,719,o),
(104,730,qs),
(104,741,o),
(119,756,o),
(130,756,qs),
(141,756,o),
(156,741,o),
(156,730,qs),
(156,719,o),
(141,704,o),
(130,704,qs),
(119,704,o)
);
},
{
closed = 1;
nodes = (
(62,650,o),
(62,662,qs),
(62,673,o),
(77,688,o),
(88,688,qs),
(99,688,o),
(113,673,o),
(113,662,qs),
(113,650,o),
(99,635,o),
(88,635,qs),
(77,635,o)
);
},
{
closed = 1;
nodes = (
(162,688,o),
(173,688,qs),
(184,688,o),
(198,673,o),
(198,662,qs),
(198,650,o),
(184,635,o),
(173,635,qs),
(162,635,o),
(147,650,o),
(147,662,qs),
(147,673,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
57 40 2 6 7 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 97 10 1 9 9 24 9 78 37 36 13 12 1 0 60 58 56 54 53 51 44 43 36 61 37 61 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,744,o),
(465,744,qs),
(481,744,o),
(490,724,qs),
(513,673,l),
(535,724,ls),
(544,744,o),
(559,744,qs),
(565,744,o),
(564,740,q),
(525,654,l),
(524,650,o),
(520,650,qs),
(504,650,ls),
(501,650,o),
(499,654,qs),
(461,740,ls)
);
},
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
16 11 6 3 0 1 21 1 6 4 57 1 3 6 3 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 101 0 4 4 23 77 9 1 3 3 8 97 0 8 8 24 8 78 18 17 60 58 53 51 44 42 34 32 25 24 17 61 18 61 20 21 18 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,734,qs),
(143,648,ls),
(141,644,o),
(138,644,qs),
(122,644,ls),
(118,644,o),
(117,648,q),
(78,734,l),
(77,738,o),
(83,738,qs),
(98,738,o),
(107,718,qs),
(130,668,l),
(152,718,ls),
(161,738,o),
(177,738,qs),
(183,738,o)
);
},
{
closed = 1;
nodes = (
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
8 3 2 2 0 34 1 4 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 3 23 77 0 4 4 5 97 0 5 5 24 5 78 33 39 21 21 20 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,738,o),
(83,738,qs),
(98,738,o),
(107,718,qs),
(130,668,l),
(152,718,ls),
(161,738,o),
(177,738,qs),
(183,738,o),
(181,734,qs),
(143,648,ls),
(141,644,o),
(138,644,qs),
(122,644,ls),
(118,644,o),
(117,648,q),
(78,734,l)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
16 11 6 3 0 1 38 21 2 3 4 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 97 7 1 6 6 24 6 78 18 17 41 39 37 35 34 32 25 24 17 42 18 42 20 21 18 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(60,7,qs),
(346,534,ls),
(357,556,o),
(369,556,qs),
(377,556,ls),
(380,556,o),
(379,552,q),
(82,4,ls),
(80,0,o),
(76,0,qs),
(62,0,ls)
);
},
{
closed = 1;
nodes = (
(127,470,o),
(127,482,qs),
(127,495,o),
(143,511,o),
(155,511,qs),
(167,511,o),
(184,494,o),
(184,482,qs),
(184,470,o),
(167,453,o),
(155,453,qs),
(143,453,o)
);
},
{
closed = 1;
nodes = (
(223,8,o),
(223,20,qs),
(223,32,o),
(239,49,o),
(251,49,qs),
(263,49,o),
(279,32,o),
(279,20,qs),
(279,8,o),
(263,-9,o),
(251,-9,qs),
(239,-9,o)
);
},
{
closed = 1;
nodes = (
(377,8,o),
(377,20,qs),
(377,32,o),
(393,49,o),
(405,49,qs),
(417,49,o),
(433,32,o),
(433,20,qs),
(433,8,o),
(417,-9,o),
(405,-9,qs),
(393,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 0 3 0 133 8 1 1 5 4 5 1 4 128 0 3 9 1 2 5 3 2 105 7 1 5 1 4 5 89 7 1 5 5 4 97 11 6 10 3 4 5 4 81 37 36 25 24 13 12 0 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 0 11 0 10 22 12 6 23 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-187,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
},
{
closed = 1;
nodes = (
(61,-310,o),
(61,-322,qs),
(61,-335,o),
(44,-352,o),
(33,-352,qs),
(21,-352,o),
(5,-335,o),
(5,-322,qs),
(5,-310,o),
(21,-293,o),
(33,-293,qs),
(45,-293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
27 4 2 0 1 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 105 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 33 32 1 0 39 37 32 43 33 43 30 28 25 23 19 18 15 13 8 7 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,531,o),
(100,531,qs),
(115,531,o),
(124,511,qs),
(147,460,l),
(169,511,ls),
(178,531,o),
(194,531,qs),
(200,531,o),
(198,527,qs),
(160,441,ls),
(158,437,o),
(155,437,qs),
(139,437,ls),
(135,437,o),
(134,441,q),
(95,527,l)
);
},
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
16 11 6 3 0 1 44 21 2 3 4 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 9 1 3 3 8 97 0 8 8 24 8 78 18 17 47 45 42 40 36 35 32 30 25 24 17 48 18 48 20 21 18 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-187,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
},
{
closed = 1;
nodes = (
(86,-301,qs),
(48,-387,l),
(47,-391,o),
(43,-391,qs),
(27,-391,ls),
(24,-391,o),
(22,-387,qs),
(-16,-301,ls),
(-18,-297,o),
(-12,-297,qs),
(4,-297,o),
(13,-317,qs),
(35,-367,l),
(58,-317,ls),
(67,-297,o),
(82,-297,qs),
(88,-297,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
27 4 2 0 1 40 35 2 8 6 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 7 1 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 105 9 1 0 0 5 97 0 5 5 24 5 78 1 0 44 43 38 37 33 32 30 28 25 23 19 18 15 13 8 7 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,528,o),
(266,490,o),
(266,458,qs),
(266,426,o),
(227,388,o),
(194,388,qs),
(78,388,ls),
(76,388,o),
(76,390,qs),
(76,392,ls),
(76,410,o),
(102,410,qs),
(118,410,l),
(118,555,ls),
(118,572,o),
(123,580,qs),
(128,589,o),
(139,589,qs),
(140,589,ls),
(143,589,o),
(143,587,qs),
(143,528,l),
(194,528,ls)
);
},
{
closed = 1;
nodes = (
(217,410,o),
(242,438,o),
(242,458,qs),
(242,479,o),
(217,507,o),
(198,507,qs),
(143,507,l),
(143,410,l),
(198,410,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 2 74 5 1 2 0 3 0 2 3 105 6 4 2 0 1 1 0 89 6 4 2 0 0 1 95 0 1 0 1 79 23 23 0 0 23 31 23 30 26 24 0 22 0 21 81 41 7 6 24 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-97,o),
(115,-108,qs),
(115,-119,o),
(100,-134,o),
(90,-134,qs),
(79,-134,o),
(64,-119,o),
(64,-108,qs),
(64,-97,o),
(79,-82,o),
(90,-82,qs),
(100,-82,o)
);
},
{
closed = 1;
nodes = (
(200,-97,o),
(200,-108,qs),
(200,-119,o),
(185,-134,o),
(175,-134,qs),
(164,-134,o),
(149,-119,o),
(149,-108,qs),
(149,-97,o),
(164,-82,o),
(175,-82,qs),
(185,-82,o)
);
},
{
closed = 1;
nodes = (
(158,-166,o),
(158,-177,qs),
(158,-188,o),
(143,-203,o),
(132,-203,qs),
(121,-203,o),
(106,-188,o),
(106,-177,qs),
(106,-166,o),
(121,-151,o),
(132,-151,qs),
(143,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,445,o),
(54,457,qs),
(54,468,o),
(69,483,o),
(80,483,qs),
(90,483,o),
(105,468,o),
(105,457,qs),
(105,445,o),
(90,430,o),
(80,430,qs),
(69,430,o)
);
},
{
closed = 1;
nodes = (
(139,445,o),
(139,457,qs),
(139,468,o),
(154,483,o),
(165,483,qs),
(175,483,o),
(190,468,o),
(190,457,qs),
(190,445,o),
(175,430,o),
(165,430,qs),
(154,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-97,o),
(115,-108,qs),
(115,-119,o),
(100,-134,o),
(90,-134,qs),
(79,-134,o),
(64,-119,o),
(64,-108,qs),
(64,-97,o),
(79,-82,o),
(90,-82,qs),
(100,-82,o)
);
},
{
closed = 1;
nodes = (
(200,-97,o),
(200,-108,qs),
(200,-119,o),
(185,-134,o),
(175,-134,qs),
(164,-134,o),
(149,-119,o),
(149,-108,qs),
(149,-97,o),
(164,-82,o),
(175,-82,qs),
(185,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,537,qs),
(88,541,ls),
(59,553,o),
(48,553,qs),
(39,553,o),
(30,544,o),
(20,527,qs),
(18,523,o),
(15,527,qs),
(11,533,o),
(11,542,qs),
(11,574,o),
(45,574,qs),
(53,574,o),
(66,570,q),
(70,568,l),
(78,566,o),
(81,570,qs),
(113,621,o),
(148,621,qs),
(170,621,o),
(199,596,o),
(199,577,qs),
(199,555,o),
(167,526,o),
(142,526,qs),
(126,526,o)
);
},
{
closed = 1;
nodes = (
(98,558,q),
(122,546,o),
(139,546,qs),
(156,546,o),
(177,563,o),
(177,576,qs),
(177,601,o),
(148,601,qs),
(125,601,o)
);
},
{
closed = 1;
nodes = (
(415,556,o),
(415,553,qs),
(415,143,ls),
(415,78,o),
(383,41,qs),
(348,0,o),
(284,0,qs),
(243,0,l),
(243,-1,l),
(243,0,l),
(64,0,ls),
(62,0,o),
(62,2,qs),
(62,4,ls),
(62,23,o),
(81,23,qs),
(235,23,l),
(108,405,ls),
(99,432,o),
(112,441,q),
(113,441,o),
(115,442,qs),
(116,443,o),
(117,443,qs),
(120,444,ls),
(122,445,o),
(123,443,qs),
(263,23,l),
(286,23,ls),
(332,23,o),
(359,53,qs),
(389,85,o),
(389,143,qs),
(389,521,ls),
(389,538,o),
(393,546,qs),
(399,556,o),
(410,556,qs),
(413,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
34 1 6 2 1 76 72 1 3 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 0 7 0 8 7 128 0 1 12 1 4 2 1 4 105 0 6 6 23 77 0 3 3 2 97 0 2 2 23 77 11 1 0 0 5 97 0 5 5 23 77 9 1 7 7 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 0 7 0 8 7 128 0 1 12 1 4 2 1 4 105 0 2 0 3 5 2 3 105 0 6 6 23 77 11 1 0 0 5 97 0 5 5 23 77 9 1 7 7 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 8 0 7 0 8 7 128 0 1 12 1 4 2 1 4 105 0 2 0 3 5 2 3 105 0 5 11 1 0 8 5 0 105 0 6 6 23 77 9 1 7 7 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
28 27 1 0 68 60 59 57 51 47 46 44 37 36 33 31 27 35 28 35 23 21 14 12 7 5 0 26 1 26 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,537,qs),
(88,541,ls),
(59,553,o),
(48,553,qs),
(39,553,o),
(30,544,o),
(20,527,qs),
(18,523,o),
(15,527,qs),
(11,533,o),
(11,542,qs),
(11,574,o),
(45,574,qs),
(53,574,o),
(66,570,q),
(70,568,l),
(78,566,o),
(81,570,qs),
(113,621,o),
(148,621,qs),
(170,621,o),
(199,596,o),
(199,577,qs),
(199,555,o),
(167,526,o),
(142,526,qs),
(126,526,o)
);
},
{
closed = 1;
nodes = (
(98,558,q),
(122,546,o),
(139,546,qs),
(156,546,o),
(177,563,o),
(177,576,qs),
(177,601,o),
(148,601,qs),
(125,601,o)
);
},
{
closed = 1;
nodes = (
(549,0,l),
(519,0,ls),
(433,0,o),
(402,72,q),
(372,0,o),
(284,0,qs),
(243,0,l),
(243,-1,l),
(243,0,l),
(64,0,ls),
(62,0,o),
(62,2,qs),
(62,4,ls),
(62,23,o),
(81,23,qs),
(235,23,l),
(108,405,ls),
(99,432,o),
(112,441,q),
(113,441,o),
(115,442,qs),
(116,443,o),
(117,443,qs),
(120,444,ls),
(122,445,o),
(123,443,qs),
(263,23,l),
(286,23,ls),
(332,23,o),
(359,53,qs),
(389,85,o),
(389,143,qs),
(389,521,ls),
(389,538,o),
(393,546,qs),
(399,556,o),
(410,556,qs),
(413,556,ls),
(415,556,o),
(415,553,qs),
(415,143,ls),
(415,87,o),
(470,23,o),
(518,23,qs),
(549,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
34 1 7 2 76 1 6 9 2 76 40 1 3 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 9 0 6 0 9 6 128 0 1 14 1 4 2 1 4 105 0 7 7 23 77 0 3 3 2 97 0 2 2 23 77 13 1 0 0 5 97 0 5 5 23 77 10 8 15 3 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 9 0 6 0 9 6 128 0 1 14 1 4 2 1 4 105 0 2 0 3 5 2 3 105 0 7 7 23 77 13 1 0 0 5 97 0 5 5 23 77 10 8 15 3 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 6 0 9 6 128 0 1 14 1 4 2 1 4 105 0 2 0 3 5 2 3 105 0 5 13 1 0 9 5 0 105 0 7 7 23 77 10 8 15 3 6 6 11 97 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
37 36 28 27 1 0 79 77 75 67 66 64 58 54 53 51 44 43 36 80 37 80 33 31 27 35 28 35 23 21 14 12 7 5 0 26 1 26 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,750,qs),
(47,754,o),
(48,756,q),
(53,778,o),
(94,778,qs),
(178,778,ls),
(196,778,o),
(196,760,qs),
(196,758,ls),
(196,757,o),
(194,757,qs),
(114,757,ls),
(82,757,o),
(57,749,qs),
(55,748,o),
(52,747,qs),
(50,746,o),
(49,746,qs),
(47,746,o)
);
},
{
closed = 1;
nodes = (
(47,677,qs),
(47,681,o),
(48,683,q),
(53,705,o),
(94,705,qs),
(178,705,ls),
(196,705,o),
(196,687,qs),
(196,685,ls),
(196,683,o),
(194,683,qs),
(114,683,ls),
(82,683,o),
(57,676,q),
(55,675,o),
(52,674,qs),
(50,673,o),
(49,673,qs),
(47,673,o)
);
},
{
closed = 1;
nodes = (
(221,595,o),
(221,592,qs),
(221,543,ls),
(221,478,o),
(168,477,qs),
(140,476,o),
(124,498,q),
(108,476,o),
(83,477,qs),
(27,478,o),
(27,543,qs),
(27,561,ls),
(27,578,o),
(31,586,qs),
(37,595,o),
(47,595,qs),
(49,595,ls),
(51,595,o),
(51,592,qs),
(51,538,ls),
(51,498,o),
(82,498,qs),
(112,498,o),
(112,538,qs),
(112,561,ls),
(112,578,o),
(116,586,qs),
(122,595,o),
(132,595,qs),
(134,595,ls),
(136,595,o),
(136,592,qs),
(136,538,ls),
(136,498,o),
(166,498,qs),
(197,498,o),
(197,538,qs),
(197,561,ls),
(197,578,o),
(201,586,qs),
(207,595,o),
(217,595,qs),
(219,595,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
17 1 3 0 36 1 4 2 78 61 48 3 5 4 3 76 73 1 5 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
8 6 2 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
8 6 2 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
76 74 72 70 21 37 21 37 21 52 42 52 37 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,711,o),
(99,736,qs),
(99,760,o),
(129,791,o),
(153,791,qs),
(177,791,o),
(207,760,o),
(207,736,qs),
(207,711,o),
(177,681,o),
(153,681,qs),
(129,681,o)
);
},
{
closed = 1;
nodes = (
(121,752,o),
(121,736,qs),
(121,719,o),
(139,698,o),
(153,698,qs),
(167,698,o),
(185,719,o),
(185,736,qs),
(185,752,o),
(167,773,o),
(153,773,qs),
(139,773,o)
);
},
{
closed = 1;
nodes = (
(250,594,o),
(250,592,qs),
(250,543,ls),
(250,477,o),
(197,476,qs),
(169,475,o),
(153,497,q),
(137,475,o),
(112,476,qs),
(56,477,o),
(56,543,qs),
(56,560,ls),
(56,577,o),
(60,585,qs),
(66,594,o),
(76,594,qs),
(78,594,ls),
(80,594,o),
(80,592,qs),
(80,537,ls),
(80,498,o),
(111,498,qs),
(141,498,o),
(141,537,qs),
(141,560,ls),
(141,577,o),
(145,585,qs),
(151,594,o),
(161,594,qs),
(163,594,ls),
(165,594,o),
(165,592,qs),
(165,537,ls),
(165,498,o),
(195,498,qs),
(226,498,o),
(226,537,qs),
(226,560,ls),
(226,577,o),
(230,585,qs),
(236,594,o),
(246,594,qs),
(248,594,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
64 47 34 3 4 0 59 1 6 4 2 76 0 1 9 1 2 3 1 2 105 0 3 8 1 0 4 3 0 105 5 1 4 6 6 4 89 5 1 4 4 6 97 7 1 6 4 6 81 13 12 1 0 62 60 58 56 45 43 32 30 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,240,o),
(370,237,qs),
(370,233,o),
(367,231,q),
(326,189,ls),
(323,186,o),
(321,186,qs),
(318,186,o),
(315,188,q),
(315,189,o),
(314,189,q),
(273,231,l),
(270,233,o),
(270,237,qs),
(270,239,o),
(273,242,qs),
(314,283,ls),
(317,286,o),
(321,286,qs),
(323,286,o),
(326,283,qs),
(367,242,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
13 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,0,o),
(307,7,qs),
(307,521,ls),
(307,538,o),
(311,546,qs),
(317,556,o),
(328,556,qs),
(331,556,ls),
(333,556,o),
(333,553,qs),
(333,7,ls),
(333,0,o),
(327,0,qs),
(314,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 2 2 1 0 1 76 0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 13 0 12 22 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,0,o),
(211,7,qs),
(211,381,ls),
(211,556,o),
(359,556,qs),
(444,556,ls),
(446,556,o),
(446,554,qs),
(446,552,ls),
(446,545,o),
(439,538,qs),
(431,532,o),
(418,532,qs),
(358,532,ls),
(237,532,o),
(237,381,qs),
(237,7,ls),
(237,0,o),
(231,0,qs),
(218,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
2 1 2 0 1 76 0 0 0 1 95 0 1 1 23 77 3 1 2 2 24 2 78 0 0 0 19 0 18 83 52 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,558,o),
(579,556,qs),
(579,442,ls),
(579,366,o),
(548,322,qs),
(513,272,o),
(446,272,qs),
(357,272,o),
(326,357,q),
(294,272,o),
(205,272,qs),
(133,272,o),
(98,330,q),
(98,7,ls),
(98,0,o),
(92,0,qs),
(79,0,ls),
(72,0,o),
(72,7,qs),
(72,521,ls),
(72,538,o),
(76,546,qs),
(82,556,o),
(93,556,qs),
(96,556,ls),
(98,556,o),
(98,553,qs),
(98,442,ls),
(98,295,o),
(205,295,qs),
(254,295,o),
(282,330,qs),
(313,370,o),
(313,442,qs),
(313,522,ls),
(313,539,o),
(317,547,qs),
(323,557,o),
(334,557,qs),
(336,557,ls),
(339,557,o),
(339,554,qs),
(339,442,ls),
(339,373,o),
(395,295,o),
(446,295,qs),
(494,295,o),
(522,330,qs),
(553,370,o),
(553,442,qs),
(553,524,ls),
(553,541,o),
(558,549,qs),
(563,558,o),
(574,558,qs),
(577,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
53 46 42 28 13 5 1 0 41 1 5 6 2 76 3 1 1 7 1 6 5 1 6 105 4 2 2 0 0 23 77 0 5 5 24 5 78 34 36 37 21 39 22 39 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,267,o),
(250,231,qs),
(212,196,o),
(212,147,qs),
(212,92,o),
(244,59,qs),
(279,23,o),
(343,23,qs),
(434,23,ls),
(445,23,o),
(462,12,o),
(462,3,qs),
(462,2,ls),
(462,0,o),
(459,0,qs),
(346,0,ls),
(279,0,o),
(237,31,qs),
(186,69,o),
(186,147,qs),
(186,192,o),
(238,264,o),
(282,279,q),
(194,312,o),
(194,421,qs),
(194,481,o),
(231,520,qs),
(274,564,o),
(346,564,qs),
(382,564,o),
(437,545,o),
(444,531,qs),
(448,521,o),
(437,521,qs),
(435,521,o),
(431,522,qs),
(429,523,ls),
(391,541,o),
(348,541,qs),
(296,541,o),
(260,510,qs),
(220,476,o),
(220,421,qs),
(220,361,o),
(254,327,qs),
(290,290,o),
(357,290,qs),
(434,290,ls),
(445,290,o),
(462,278,o),
(462,270,qs),
(462,268,ls),
(462,267,o),
(459,267,qs),
(348,267,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 6 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 0 0 7 1 6 5 0 6 103 0 1 1 3 97 0 3 3 23 77 0 5 5 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 7 1 6 5 0 6 103 0 5 5 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 54 0 53 53 43 35 35 38 53 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,180,qs),
(475,173,o),
(475,174,qs),
(475,93,o),
(440,45,qs),
(398,-10,o),
(320,-10,qs),
(251,-10,o),
(210,33,qs),
(164,81,o),
(164,174,qs),
(164,186,o),
(174,390,qs),
(177,464,o),
(212,510,qs),
(252,564,o),
(320,564,qs),
(378,564,o),
(416,523,qs),
(461,476,o),
(465,392,qs),
(472,247,o)
);
},
{
closed = 1;
nodes = (
(411,50,qs),
(449,92,o),
(449,174,q),
(439,390,ls),
(436,455,o),
(407,495,qs),
(375,541,o),
(320,541,qs),
(271,541,o),
(240,505,qs),
(204,464,o),
(200,389,qs),
(190,174,l),
(190,102,o),
(220,61,qs),
(253,13,o),
(320,13,qs),
(377,13,o)
);
},
{
closed = 1;
nodes = (
(475,174,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
23 22 32 30 22 39 23 39 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,0,o),
(403,7,qs),
(403,381,ls),
(403,532,o),
(282,532,qs),
(222,532,ls),
(209,532,o),
(201,538,qs),
(194,545,o),
(194,552,qs),
(194,554,ls),
(194,556,o),
(196,556,qs),
(281,556,ls),
(429,556,o),
(429,381,qs),
(429,7,ls),
(429,0,o),
(422,0,qs),
(409,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 6 4 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,540,o),
(491,531,qs),
(422,102,ls),
(403,-7,o),
(321,-7,qs),
(239,-7,o),
(221,102,qs),
(152,531,ls),
(150,540,o),
(161,556,o),
(170,556,qs),
(173,556,o),
(174,552,qs),
(248,88,l),
(258,49,o),
(291,17,o),
(321,17,qs),
(351,17,o),
(384,49,o),
(394,88,q),
(468,552,ls),
(469,556,o),
(472,556,qs),
(473,556,l),
(473,556,l),
(481,556,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 23 77 0 0 0 2 97 0 2 2 24 2 78 0 0 0 25 0 25 36 21 39 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,0,o),
(148,7,q),
(220,456,ls),
(238,564,o),
(321,564,qs),
(404,564,o),
(421,456,qs),
(494,7,l),
(494,0,o),
(487,0,qs),
(474,0,ls),
(467,0,o),
(467,7,q),
(394,470,l),
(384,509,o),
(351,541,o),
(321,541,qs),
(291,541,o),
(258,509,o),
(248,470,q),
(174,7,l),
(174,0,o),
(167,0,qs),
(154,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
21 15 10 2 4 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 14 11 7 5 0 23 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,522,qs),
(470,472,o),
(470,386,qs),
(470,7,ls),
(470,0,o),
(464,0,qs),
(451,0,ls),
(444,0,o),
(444,7,qs),
(444,208,l),
(315,208,ls),
(252,208,o),
(210,250,qs),
(159,300,o),
(159,386,qs),
(159,461,o),
(198,510,qs),
(243,564,o),
(315,564,qs),
(377,564,o)
);
},
{
closed = 1;
nodes = (
(228,505,qs),
(185,462,o),
(185,386,qs),
(185,320,o),
(218,278,qs),
(255,231,o),
(315,231,qs),
(444,231,l),
(444,387,ls),
(444,453,o),
(411,495,qs),
(374,541,o),
(315,541,qs),
(263,541,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 13 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
4 1 3 1 35 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 38 36 34 31 25 24 18 15 8 7 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 18 16 9 8 0 19 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 24 22 20 18 17 15 8 7 0 25 1 25 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,-1,l),
(685,-1,ls),
(643,-1,o),
(628,12,q),
(613,-1,o),
(571,-1,qs),
(364,-1,l),
(364,0,l),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(571,23,l),
(589,23,l),
(544,39,o),
(511,82,qs),
(473,132,o),
(472,191,qs),
(471,254,o),
(508,302,qs),
(552,359,o),
(628,359,qs),
(694,359,o),
(738,314,qs),
(786,264,o),
(784,191,qs),
(783,139,o),
(753,94,qs),
(720,42,o),
(667,23,q),
(911,23,l)
);
},
{
closed = 1;
nodes = (
(529,102,qs),
(567,49,o),
(628,33,q),
(682,47,o),
(718,90,qs),
(759,137,o),
(758,190,qs),
(758,252,o),
(724,292,qs),
(686,336,o),
(628,336,qs),
(578,336,o),
(542,302,qs),
(499,261,o),
(498,190,qs),
(498,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
55 1 1 2 38 1 3 1 2 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 7 5 2 1 1 3 95 4 1 3 3 24 3 78 0 0 48 46 0 42 0 42 34 86 22 55 39 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,313,qs),
(415,261,o),
(415,179,qs),
(415,109,o),
(379,61,qs),
(337,3,o),
(265,0,q),
(-6,0,l),
(-6,23,l),
(178,23,l),
(103,71,o),
(103,179,qs),
(103,250,o),
(141,300,qs),
(185,360,o),
(259,360,qs),
(324,360,o)
);
},
{
closed = 1;
nodes = (
(348,63,qs),
(388,107,o),
(388,178,qs),
(388,241,o),
(357,285,qs),
(321,337,o),
(259,337,qs),
(205,337,o),
(170,296,qs),
(130,251,o),
(130,178,qs),
(130,117,o),
(161,74,qs),
(197,23,o),
(259,23,qs),
(313,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 26 24 17 32 18 32 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 482;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,0,l),
(316,0,ls),
(273,0,o),
(258,12,q),
(244,0,o),
(201,0,qs),
(-6,0,l),
(-6,23,l),
(220,23,l),
(174,40,o),
(141,82,qs),
(104,132,o),
(102,191,qs),
(101,255,o),
(138,302,qs),
(183,360,o),
(258,360,qs),
(324,360,o),
(368,315,qs),
(416,265,o),
(415,191,qs),
(413,140,o),
(384,94,qs),
(350,42,o),
(297,23,q),
(542,23,l)
);
},
{
closed = 1;
nodes = (
(159,102,qs),
(197,50,o),
(258,34,q),
(312,48,o),
(349,91,qs),
(389,138,o),
(388,191,qs),
(388,253,o),
(354,293,qs),
(317,337,o),
(258,337,qs),
(208,337,o),
(172,303,qs),
(129,262,o),
(128,191,qs),
(128,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
38 1 1 5 21 1 2 1 2 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 31 29 0 25 0 25 34 33 23 39 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,462,o),
(169,473,qs),
(169,484,o),
(184,499,o),
(195,499,qs),
(205,499,o),
(220,484,o),
(220,473,qs),
(220,462,o),
(206,447,o),
(195,447,qs),
(184,447,o)
);
},
{
closed = 1;
nodes = (
(254,462,o),
(254,473,qs),
(254,484,o),
(269,499,o),
(280,499,qs),
(290,499,o),
(305,484,o),
(305,473,qs),
(305,462,o),
(291,447,o),
(280,447,qs),
(269,447,o)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 6 5 47 1 4 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
53 52 25 24 13 12 1 0 61 59 52 65 53 65 50 48 46 44 38 36 32 31 24 51 25 51 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,241,o),
(370,237,qs),
(370,234,o),
(367,231,qs),
(326,189,l),
(323,187,o),
(321,187,qs),
(318,187,o),
(315,189,q),
(314,189,l),
(273,231,ls),
(270,234,o),
(270,237,qs),
(270,240,o),
(273,243,qs),
(314,284,ls),
(317,287,o),
(321,287,qs),
(323,287,o),
(326,284,qs),
(367,243,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
12 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 640;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,0,o),
(307,7,qs),
(307,521,ls),
(307,538,o),
(311,546,qs),
(317,556,o),
(328,556,qs),
(331,556,ls),
(333,556,o),
(333,553,qs),
(333,7,ls),
(333,0,o),
(327,0,qs),
(314,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 2 2 1 0 1 76 0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 13 0 12 22 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,0,o),
(211,7,qs),
(211,381,ls),
(211,556,o),
(359,556,qs),
(444,556,ls),
(446,556,o),
(446,554,qs),
(446,552,ls),
(446,545,o),
(439,538,qs),
(431,532,o),
(418,532,qs),
(358,532,ls),
(237,532,o),
(237,381,qs),
(237,7,ls),
(237,0,o),
(231,0,qs),
(218,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
2 1 2 0 1 76 0 0 0 1 95 0 1 1 23 77 3 1 2 2 24 2 78 0 0 0 19 0 18 83 52 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,558,o),
(579,556,qs),
(579,442,ls),
(579,366,o),
(548,322,qs),
(513,272,o),
(446,272,qs),
(357,272,o),
(326,357,q),
(294,272,o),
(205,272,qs),
(133,272,o),
(98,330,q),
(98,7,ls),
(98,0,o),
(92,0,qs),
(79,0,ls),
(72,0,o),
(72,7,qs),
(72,521,ls),
(72,538,o),
(76,546,qs),
(82,556,o),
(93,556,qs),
(96,556,ls),
(98,556,o),
(98,553,qs),
(98,442,ls),
(98,295,o),
(205,295,qs),
(254,295,o),
(282,330,qs),
(313,370,o),
(313,442,qs),
(313,522,ls),
(313,539,o),
(317,547,qs),
(323,557,o),
(334,557,qs),
(336,557,ls),
(339,557,o),
(339,554,qs),
(339,442,ls),
(339,373,o),
(395,295,o),
(446,295,qs),
(494,295,o),
(522,330,qs),
(553,370,o),
(553,442,qs),
(553,524,ls),
(553,541,o),
(558,549,qs),
(563,558,o),
(574,558,qs),
(577,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
53 46 42 28 13 5 1 0 41 1 5 6 2 76 3 1 1 7 1 6 5 1 6 105 4 2 2 0 0 23 77 0 5 5 24 5 78 34 36 37 21 39 22 39 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,294,qs),
(466,279,o),
(402,256,o),
(365,257,qs),
(323,257,o),
(242,293,o),
(225,319,q),
(224,7,ls),
(224,0,o),
(218,0,qs),
(205,0,ls),
(198,0,o),
(198,7,qs),
(198,521,ls),
(198,538,o),
(202,546,qs),
(208,556,o),
(219,556,qs),
(222,556,ls),
(224,556,o),
(224,553,qs),
(224,489,l),
(242,524,o),
(311,564,o),
(353,564,qs),
(387,564,o),
(438,545,o),
(445,531,qs),
(449,521,o),
(438,521,qs),
(436,521,o),
(432,522,qs),
(430,523,ls),
(392,541,o),
(354,541,qs),
(303,541,o),
(266,502,qs),
(225,460,o),
(225,402,qs),
(225,390,ls),
(225,354,o),
(257,323,qs),
(299,282,o),
(366,280,qs),
(408,279,o),
(457,302,q),
(458,302,o),
(459,302,q),
(464,304,o),
(466,304,qs),
(476,304,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
29 1 1 4 43 28 2 7 2 42 1 5 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 37 37 22 35 35 39 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,20,qs),
(163,53,o),
(163,131,qs),
(163,134,o),
(167,215,qs),
(175,390,ls),
(178,464,o),
(213,510,qs),
(253,564,o),
(320,564,qs),
(379,564,o),
(418,523,qs),
(462,475,o),
(466,390,qs),
(475,194,ls),
(477,133,o),
(477,131,qs),
(477,55,o),
(434,-10,o),
(384,-10,qs),
(343,-10,o),
(322,19,qs),
(320,21,o),
(319,19,q),
(297,-10,o),
(256,-10,qs),
(210,-10,o)
);
},
{
closed = 1;
nodes = (
(312,63,qs),
(314,74,o),
(320,74,qs),
(326,74,o),
(329,63,qs),
(339,12,o),
(384,12,qs),
(419,12,o),
(451,70,o),
(451,134,qs),
(451,156,o),
(440,389,qs),
(437,455,o),
(408,495,qs),
(376,541,o),
(320,541,qs),
(272,541,o),
(241,505,qs),
(204,464,o),
(201,389,qs),
(190,157,o),
(190,134,qs),
(190,70,o),
(221,12,o),
(257,12,qs),
(301,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 50 48 46 44 37 35 27 52 28 52 17 15 7 5 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,303,qs),
(352,273,o),
(280,188,qs),
(223,122,o),
(180,6,qs),
(178,0,o),
(172,0,qs),
(159,0,ls),
(152,0,o),
(154,8,qs),
(169,69,o),
(257,209,o),
(306,252,q),
(243,263,o),
(208,309,qs),
(174,353,o),
(174,416,qs),
(174,479,o),
(211,520,qs),
(253,564,o),
(326,564,qs),
(359,564,o),
(410,545,o),
(416,531,qs),
(420,521,o),
(410,521,qs),
(408,521,o),
(404,522,qs),
(402,523,o),
(401,523,q),
(363,541,o),
(326,541,qs),
(276,541,o),
(241,511,qs),
(200,475,o),
(200,416,qs),
(200,366,o),
(230,326,qs),
(269,277,o),
(332,273,q),
(415,322,o),
(485,333,qs),
(490,334,o),
(490,329,qs),
(490,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 0 2 31 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 0 1 2 0 128 0 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 0 1 2 0 128 0 0 4 1 0 4 126 0 3 0 1 2 3 1 105 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
43 35 36 38 20 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,540,o),
(491,531,qs),
(422,102,ls),
(403,-7,o),
(321,-7,qs),
(239,-7,o),
(221,102,qs),
(152,531,ls),
(150,540,o),
(161,556,o),
(170,556,qs),
(173,556,o),
(174,552,qs),
(248,88,l),
(258,49,o),
(291,17,o),
(321,17,qs),
(351,17,o),
(384,49,o),
(394,88,q),
(468,552,ls),
(469,556,o),
(472,556,qs),
(473,556,l),
(473,556,l),
(481,556,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 23 77 0 0 0 2 97 0 2 2 24 2 78 0 0 0 25 0 25 36 21 39 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 640;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,0,o),
(148,7,q),
(220,456,ls),
(238,564,o),
(321,564,qs),
(404,564,o),
(421,456,qs),
(494,7,l),
(494,0,o),
(487,0,qs),
(474,0,ls),
(467,0,o),
(467,7,q),
(394,470,l),
(384,509,o),
(351,541,o),
(321,541,qs),
(291,541,o),
(258,509,o),
(248,470,q),
(174,7,l),
(174,0,o),
(167,0,qs),
(154,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
21 15 10 2 4 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 14 11 7 5 0 23 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,522,qs),
(470,472,o),
(470,386,qs),
(470,7,ls),
(470,0,o),
(464,0,qs),
(451,0,ls),
(444,0,o),
(444,7,qs),
(444,208,l),
(315,208,ls),
(252,208,o),
(210,250,qs),
(159,300,o),
(159,386,qs),
(159,461,o),
(198,510,qs),
(243,564,o),
(315,564,qs),
(377,564,o)
);
},
{
closed = 1;
nodes = (
(228,505,qs),
(185,462,o),
(185,386,qs),
(185,320,o),
(218,278,qs),
(255,231,o),
(315,231,qs),
(444,231,l),
(444,387,ls),
(444,453,o),
(411,495,qs),
(374,541,o),
(315,541,qs),
(263,541,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 13 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 641;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,277,qs),
(257,281,o),
(258,283,q),
(263,302,o),
(288,304,q),
(272,327,o),
(272,355,qs),
(272,385,o),
(307,423,o),
(335,423,qs),
(354,423,o),
(385,403,o),
(385,390,qs),
(385,385,o),
(381,387,qs),
(379,388,o),
(376,390,qs),
(370,394,o),
(366,396,qs),
(354,402,o),
(341,402,qs),
(297,402,o),
(297,354,qs),
(297,332,o),
(321,305,o),
(340,305,qs),
(389,305,ls),
(407,305,o),
(407,287,qs),
(407,285,ls),
(407,283,o),
(405,283,qs),
(324,283,ls),
(293,283,o),
(267,276,q),
(265,275,o),
(263,274,qs),
(260,273,o),
(260,273,q),
(257,273,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 127 values pushed */
26 24 2 4 2 40 1 1 4 34 1 0 1 38 0 2 8 0 4 76 0 4 2 1 2 4 1 128 0 8 0 5 0 8 5 128 0 3 0 2 4 3 2 105 0 1 0 0 8 1 0 103 17 13 2 11 14 1 12 15 11 12 105 18 1 15 0 16 9 15 16 105 0 7 0 9 7 9 101 0 5 5 6 97 10 1 6 6 24 6 78 117 116 105 104 123 121 116 127 117 127 111 109 104 115 105 115 102 100 96 94 88 86 83 81 40 35 66 55 29 41 35 52 37 19 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
0 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 13 9 2 7 10 1 8 11 7 8 105 14 1 11 0 12 5 11 12 105 0 3 0 5 3 5 101 0 1 1 2 97 6 1 2 2 24 2 78 77 76 65 64 83 81 76 87 77 87 71 69 64 75 65 75 36 38 35 38 40 35 66 55 19 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 111 values pushed */
0 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 17 9 2 7 10 1 8 11 7 8 105 18 1 11 0 12 5 11 12 105 0 3 0 5 13 3 5 105 20 15 19 3 13 16 1 14 13 14 101 0 1 1 2 97 6 1 2 2 24 2 78 101 100 89 88 77 76 65 64 107 105 100 111 101 111 95 93 88 99 89 99 83 81 76 87 77 87 71 69 64 75 65 75 36 38 35 38 40 35 66 55 19 21 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
4 1 5 1 53 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 17 1 13 0 14 6 13 14 105 0 4 0 6 4 6 101 2 15 2 0 0 3 97 8 7 2 3 3 24 3 78 83 82 71 70 1 0 89 87 82 93 83 93 77 75 70 81 71 81 68 66 62 60 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(732,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
4 1 5 1 53 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 21 1 13 0 14 6 13 14 105 0 4 0 6 15 4 6 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 97 8 7 2 3 3 24 3 78 107 106 95 94 83 82 71 70 1 0 113 111 106 117 107 117 101 99 94 105 95 105 89 87 82 93 83 93 77 75 70 81 71 81 68 66 62 60 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,277,qs),
(259,281,o),
(260,283,q),
(264,302,o),
(290,304,q),
(274,327,o),
(274,355,qs),
(274,385,o),
(309,423,o),
(336,423,qs),
(356,423,o),
(387,403,o),
(387,390,qs),
(387,385,o),
(382,387,qs),
(380,388,o),
(377,390,qs),
(372,394,o),
(368,396,qs),
(356,402,o),
(343,402,qs),
(299,402,o),
(299,354,qs),
(299,332,o),
(322,305,o),
(342,305,qs),
(390,305,ls),
(409,305,o),
(409,287,qs),
(409,285,ls),
(409,283,o),
(406,283,qs),
(326,283,ls),
(294,283,o),
(269,276,q),
(267,275,o),
(264,274,qs),
(262,273,o),
(261,273,qs),
(259,273,o)
);
},
{
closed = 1;
nodes = (
(810,341,o),
(810,338,qs),
(810,143,ls),
(810,70,o),
(769,31,q),
(753,12,o),
(727,-35,qs),
(712,-63,o),
(707,-79,q),
(731,-84,o),
(731,-108,qs),
(731,-120,o),
(715,-137,o),
(704,-137,qs),
(675,-137,o),
(675,-104,qs),
(675,-83,o),
(707,-19,o),
(732,9,q),
(709,0,o),
(679,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(681,23,ls),
(727,23,o),
(754,53,qs),
(784,85,o),
(784,143,qs),
(784,307,ls),
(784,324,o),
(788,332,qs),
(794,341,o),
(805,341,qs),
(807,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
103 1 1 4 34 10 2 0 1 38 1 8 0 86 1 6 5 96 1 11 6 5 76 0 4 2 1 2 4 1 128 0 8 0 5 0 8 5 128 0 11 6 7 6 11 7 128 0 3 0 2 4 3 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 0 5 5 6 95 10 1 6 6 24 6 78 92 90 85 83 80 78 40 35 66 55 26 41 35 52 37 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 885;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,341,o),
(810,338,qs),
(810,143,ls),
(810,70,o),
(769,31,q),
(753,12,o),
(727,-35,qs),
(712,-63,o),
(707,-79,q),
(731,-84,o),
(731,-108,qs),
(731,-120,o),
(715,-137,o),
(704,-137,qs),
(675,-137,o),
(675,-104,qs),
(675,-83,o),
(707,-19,o),
(732,9,q),
(709,0,o),
(679,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(681,23,ls),
(727,23,o),
(754,53,qs),
(784,85,o),
(784,143,qs),
(784,307,ls),
(784,324,o),
(788,332,qs),
(794,341,o),
(805,341,qs),
(807,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
63 1 4 0 46 1 2 1 56 1 7 2 3 76 0 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 37 35 38 40 35 66 55 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 885;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(810,341,o),
(810,338,qs),
(810,143,ls),
(810,69,o),
(769,31,q),
(753,12,o),
(727,-35,qs),
(712,-63,o),
(707,-79,q),
(731,-84,o),
(731,-108,qs),
(731,-120,o),
(715,-137,o),
(704,-137,qs),
(675,-137,o),
(675,-104,qs),
(675,-83,o),
(707,-19,o),
(732,9,q),
(709,0,o),
(679,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(681,23,ls),
(727,23,o),
(754,53,qs),
(784,85,o),
(784,143,qs),
(784,307,ls),
(784,324,o),
(788,332,qs),
(794,341,o),
(805,341,qs),
(807,341,ls)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
63 1 4 0 46 1 2 1 56 1 7 2 3 76 0 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 8 3 5 105 13 10 12 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 79 78 67 66 85 83 78 89 79 89 73 71 66 77 67 77 37 35 38 40 35 66 55 16 14 7 30 
CALL[ ]	/* CallFunction */";
};
width = 885;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
0 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 11 9 2 7 10 1 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 97 6 1 2 2 24 2 78 65 64 71 69 64 75 65 75 36 38 35 38 40 35 66 55 19 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
4 1 5 1 53 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 97 8 7 2 3 3 24 3 78 71 70 1 0 77 75 70 81 71 81 68 66 62 60 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,277,qs),
(257,281,o),
(258,283,q),
(263,302,o),
(288,304,q),
(272,327,o),
(272,355,qs),
(272,385,o),
(307,423,o),
(335,423,qs),
(354,423,o),
(385,403,o),
(385,390,qs),
(385,385,o),
(381,387,qs),
(379,388,o),
(376,390,qs),
(370,394,o),
(366,396,qs),
(354,402,o),
(341,402,qs),
(297,402,o),
(297,354,qs),
(297,332,o),
(321,305,o),
(340,305,qs),
(389,305,ls),
(407,305,o),
(407,287,qs),
(407,285,ls),
(407,283,o),
(405,283,qs),
(324,283,ls),
(293,283,o),
(267,276,q),
(265,275,o),
(263,274,qs),
(260,273,o),
(260,273,q),
(257,273,o)
);
},
{
closed = 1;
nodes = (
(803,341,o),
(803,338,qs),
(803,143,ls),
(803,78,o),
(771,41,qs),
(736,0,o),
(672,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(674,23,ls),
(720,23,o),
(747,53,qs),
(777,85,o),
(777,143,qs),
(777,307,ls),
(777,324,o),
(781,332,qs),
(787,341,o),
(798,341,qs),
(801,341,ls)
);
},
{
closed = 1;
nodes = (
(725,-96,o),
(725,-108,qs),
(725,-120,o),
(708,-137,o),
(696,-137,qs),
(685,-137,o),
(669,-120,o),
(669,-108,qs),
(669,-95,o),
(684,-79,o),
(696,-79,qs),
(708,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
26 24 2 4 2 89 1 1 4 34 1 0 1 38 0 2 8 0 4 76 0 4 2 1 2 4 1 128 0 8 0 5 0 8 5 128 0 3 0 2 4 3 2 105 0 1 0 0 8 1 0 103 13 1 11 0 12 7 11 12 105 0 7 0 9 7 9 101 0 5 5 6 95 10 1 6 6 24 6 78 93 92 99 97 92 103 93 103 85 83 80 78 40 35 66 55 26 41 35 52 37 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,277,qs),
(257,281,o),
(258,283,q),
(263,302,o),
(288,304,q),
(272,327,o),
(272,355,qs),
(272,385,o),
(307,423,o),
(335,423,qs),
(354,423,o),
(385,403,o),
(385,390,qs),
(385,385,o),
(381,387,qs),
(379,388,o),
(376,390,qs),
(370,394,o),
(366,396,qs),
(354,402,o),
(341,402,qs),
(297,402,o),
(297,354,qs),
(297,332,o),
(321,305,o),
(340,305,qs),
(389,305,ls),
(407,305,o),
(407,287,qs),
(407,285,ls),
(407,283,o),
(405,283,qs),
(324,283,ls),
(293,283,o),
(267,276,q),
(265,275,o),
(263,274,qs),
(260,273,o),
(260,273,q),
(257,273,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
26 24 2 4 2 40 1 1 4 34 1 0 1 38 0 2 8 0 4 76 0 4 2 1 2 4 1 128 0 8 0 5 0 8 5 128 0 3 0 2 4 3 2 105 0 1 0 0 8 1 0 103 16 13 15 3 11 14 1 12 7 11 12 105 0 7 0 9 7 9 101 0 5 5 6 97 10 1 6 6 24 6 78 105 104 93 92 111 109 104 115 105 115 99 97 92 103 93 103 88 86 83 81 40 35 66 55 29 41 35 52 37 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,277,qs),
(257,281,o),
(258,283,q),
(263,302,o),
(288,304,q),
(272,327,o),
(272,355,qs),
(272,385,o),
(307,423,o),
(335,423,qs),
(354,423,o),
(385,403,o),
(385,390,qs),
(385,385,o),
(381,387,qs),
(379,388,o),
(376,390,qs),
(370,394,o),
(366,396,qs),
(354,402,o),
(341,402,qs),
(297,402,o),
(297,354,qs),
(297,332,o),
(321,305,o),
(340,305,qs),
(389,305,ls),
(407,305,o),
(407,287,qs),
(407,285,ls),
(407,283,o),
(405,283,qs),
(324,283,ls),
(293,283,o),
(267,276,q),
(265,275,o),
(263,274,qs),
(260,273,o),
(260,273,q),
(257,273,o)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
26 24 2 5 2 44 1 1 5 34 1 0 1 38 0 2 9 0 93 1 4 9 5 76 0 5 2 1 2 5 1 128 0 9 0 4 0 9 4 128 0 3 0 2 5 3 2 105 0 1 0 0 9 1 0 103 19 15 18 3 13 16 1 14 8 13 14 105 0 8 0 10 8 10 101 6 17 2 4 4 7 97 12 11 2 7 7 24 7 78 111 110 99 98 41 40 117 115 110 121 111 121 105 103 98 109 99 109 96 94 92 90 87 85 79 77 69 67 64 60 58 55 48 47 40 97 41 97 41 35 52 37 20 7 26 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,700,o),
(221,680,qs),
(221,658,o),
(189,629,o),
(164,629,qs),
(148,629,o),
(121,640,qs),
(110,644,ls),
(81,656,o),
(70,656,qs),
(61,656,o),
(52,648,o),
(42,630,qs),
(40,626,o),
(37,630,qs),
(33,636,o),
(33,645,qs),
(33,678,o),
(67,678,qs),
(75,678,o),
(88,673,qs),
(92,672,ls),
(100,669,o),
(103,673,qs),
(135,724,o),
(170,724,qs),
(192,724,o)
);
},
{
closed = 1;
nodes = (
(199,667,o),
(199,679,qs),
(199,704,o),
(170,704,qs),
(147,704,o),
(120,662,q),
(144,649,o),
(161,649,qs),
(178,649,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
29 1 2 1 1 76 6 1 0 0 5 1 0 5 105 0 1 0 2 4 1 2 105 7 1 4 3 3 4 89 7 1 4 4 3 97 0 3 4 3 81 28 27 1 0 32 30 27 35 28 35 22 20 17 15 8 6 0 26 1 26 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,455,o),
(155,467,qs),
(155,478,o),
(170,493,o),
(180,493,qs),
(191,493,o),
(206,478,o),
(206,467,qs),
(206,455,o),
(191,440,o),
(180,440,qs),
(170,440,o)
);
},
{
closed = 1;
nodes = (
(240,455,o),
(240,467,qs),
(240,478,o),
(255,493,o),
(265,493,qs),
(276,493,o),
(291,478,o),
(291,467,qs),
(291,455,o),
(276,440,o),
(265,440,qs),
(255,440,o)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(381,0,l),
(377,-84,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(156,-214,o),
(123,-202,qs),
(96,-193,o),
(91,-183,qs),
(89,-180,o),
(93,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(343,-191,o),
(355,0,q),
(222,0,ls),
(157,0,o),
(115,45,qs),
(67,95,o),
(67,174,qs),
(67,252,o),
(104,302,qs),
(147,360,o),
(219,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o),
(383,107,qs),
(383,49,o),
(382,23,q),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(124,73,qs),
(161,23,o),
(223,23,qs),
(356,23,l),
(362,193,o),
(330,263,qs),
(296,337,o),
(220,337,qs),
(168,337,o),
(134,298,qs),
(93,253,o),
(93,174,qs),
(93,115,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
45 1 6 5 1 76 3 1 1 13 2 12 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 7 6 7 101 11 14 2 9 9 5 95 8 1 5 5 24 5 78 24 24 13 12 1 0 69 67 64 62 24 58 24 58 57 56 53 51 42 40 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,549,o),
(173,549,qs),
(189,549,o),
(198,529,qs),
(220,479,l),
(243,529,ls),
(252,549,o),
(267,549,qs),
(273,549,o),
(271,546,q),
(233,459,ls),
(232,456,o),
(228,456,qs),
(212,456,ls),
(209,456,o),
(207,459,q),
(169,546,l)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(381,0,l),
(377,-84,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(156,-214,o),
(123,-202,qs),
(96,-193,o),
(91,-183,qs),
(89,-180,o),
(93,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(343,-191,o),
(355,0,q),
(222,0,ls),
(157,0,o),
(115,45,qs),
(67,95,o),
(67,174,qs),
(67,252,o),
(104,302,qs),
(147,360,o),
(219,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o),
(383,107,qs),
(383,49,o),
(382,23,q),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(124,73,qs),
(161,23,o),
(223,23,qs),
(356,23,l),
(362,193,o),
(330,263,qs),
(296,337,o),
(220,337,qs),
(168,337,o),
(134,298,qs),
(93,253,o),
(93,174,qs),
(93,115,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
16 11 6 3 0 1 38 1 5 4 2 76 0 0 1 3 1 0 3 128 0 3 0 9 8 3 9 106 0 5 0 6 5 6 101 2 1 1 1 23 77 10 11 2 8 8 4 95 7 1 4 4 24 4 78 17 17 62 60 57 55 17 51 17 51 19 41 33 38 40 20 21 18 12 7 30 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,526,q),
(777,440,l),
(776,436,o),
(772,436,qs),
(756,436,ls),
(753,436,o),
(751,440,qs),
(713,526,ls),
(711,530,o),
(717,530,qs),
(733,530,o),
(742,510,qs),
(765,459,l),
(787,510,ls),
(796,530,o),
(811,530,qs),
(817,530,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
8 3 2 2 0 17 1 7 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 7 3 133 0 7 4 7 133 0 4 9 1 5 10 4 5 105 15 12 14 3 10 13 1 11 6 10 11 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 82 81 70 69 88 86 81 92 82 92 76 74 69 80 70 80 65 63 38 40 35 66 55 24 21 20 16 16 6 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,530,o),
(687,530,qs),
(702,530,o),
(711,510,qs),
(734,459,l),
(756,510,ls),
(765,530,o),
(781,530,qs),
(787,530,o),
(785,526,qs),
(747,440,ls),
(745,436,o),
(742,436,qs),
(726,436,ls),
(722,436,o),
(721,440,q),
(682,526,l)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
16 11 6 3 0 1 21 1 8 4 70 1 3 8 3 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 7 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 97 11 10 2 6 6 24 6 78 88 87 76 75 18 17 94 92 87 98 88 98 82 80 75 86 76 86 73 71 69 67 64 62 56 54 46 44 41 37 35 32 25 24 17 74 18 74 20 21 18 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,526,q),
(777,440,l),
(776,436,o),
(772,436,qs),
(756,436,ls),
(753,436,o),
(751,440,qs),
(713,526,ls),
(711,530,o),
(717,530,qs),
(733,530,o),
(742,510,qs),
(765,459,l),
(787,510,ls),
(796,530,o),
(811,530,qs),
(817,530,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(300,-348,o),
(290,-348,qs),
(279,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-310,o),
(279,-295,o),
(290,-295,qs),
(300,-295,o),
(315,-310,o),
(315,-322,qs),
(315,-333,o)
);
},
{
closed = 1;
nodes = (
(400,-310,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(375,-348,qs),
(364,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-310,o),
(364,-295,o),
(375,-295,qs),
(385,-295,o)
);
},
{
closed = 1;
nodes = (
(358,-379,o),
(358,-390,qs),
(358,-401,o),
(343,-416,o),
(332,-416,qs),
(321,-416,o),
(306,-401,o),
(306,-390,qs),
(306,-379,o),
(321,-364,o),
(332,-364,qs),
(343,-364,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 133 values pushed */
8 3 2 2 0 17 1 7 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 7 3 133 0 7 4 7 133 21 12 20 3 10 13 1 11 6 10 11 105 0 6 0 8 14 6 8 105 22 16 2 14 17 1 15 18 14 15 105 23 1 18 0 19 18 19 101 0 4 4 5 97 9 1 5 5 24 5 78 118 117 106 105 82 81 70 69 124 122 117 128 118 128 112 110 105 116 106 116 103 101 97 95 88 86 81 92 82 92 76 74 69 80 70 80 65 63 38 40 35 66 55 24 21 20 16 24 7 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,530,o),
(687,530,qs),
(702,530,o),
(711,510,qs),
(734,459,l),
(756,510,ls),
(765,530,o),
(781,530,qs),
(787,530,o),
(785,526,qs),
(747,440,ls),
(745,436,o),
(742,436,qs),
(726,436,ls),
(722,436,o),
(721,440,q),
(682,526,l)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-310,o),
(278,-295,o),
(289,-295,qs),
(300,-295,o),
(315,-310,o),
(315,-322,qs),
(315,-333,o)
);
},
{
closed = 1;
nodes = (
(400,-310,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-310,o),
(363,-295,o),
(374,-295,qs),
(385,-295,o)
);
},
{
closed = 1;
nodes = (
(357,-379,o),
(357,-390,qs),
(357,-401,o),
(342,-416,o),
(331,-416,qs),
(320,-416,o),
(305,-401,o),
(305,-390,qs),
(305,-379,o),
(320,-364,o),
(331,-364,qs),
(342,-364,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 155 values pushed */
16 11 6 3 0 1 21 1 8 4 70 1 3 8 3 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 97 11 10 2 6 6 24 6 78 124 123 112 111 88 87 76 75 18 17 130 128 123 134 124 134 118 116 111 122 112 122 109 107 103 101 94 92 87 98 88 98 82 80 75 86 76 86 73 71 69 67 64 62 56 54 46 44 41 37 35 32 25 24 17 74 18 74 20 21 18 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,526,q),
(777,440,l),
(776,436,o),
(772,436,qs),
(756,436,ls),
(753,436,o),
(751,440,qs),
(713,526,ls),
(711,530,o),
(717,530,qs),
(733,530,o),
(742,510,qs),
(765,459,l),
(787,510,ls),
(796,530,o),
(811,530,qs),
(817,530,o)
);
},
{
closed = 1;
nodes = (
(259,277,qs),
(259,281,o),
(260,283,q),
(264,302,o),
(290,304,q),
(274,327,o),
(274,355,qs),
(274,385,o),
(309,423,o),
(336,423,qs),
(356,423,o),
(387,403,o),
(387,390,qs),
(387,385,o),
(382,387,qs),
(380,388,o),
(377,390,qs),
(372,394,o),
(368,396,qs),
(356,402,o),
(343,402,qs),
(299,402,o),
(299,354,qs),
(299,332,o),
(322,305,o),
(342,305,qs),
(390,305,ls),
(409,305,o),
(409,287,qs),
(409,285,ls),
(409,283,o),
(406,283,qs),
(326,283,ls),
(294,283,o),
(269,276,q),
(267,275,o),
(264,274,qs),
(262,273,o),
(261,273,qs),
(259,273,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 138 values pushed */
8 3 2 2 0 57 1 4 7 51 27 2 3 4 55 1 11 3 4 76 1 1 0 2 0 133 0 2 6 2 133 0 7 5 4 5 7 4 128 0 11 3 8 3 11 8 128 0 6 0 5 7 6 5 105 0 4 0 3 11 4 3 103 0 8 13 1 9 14 8 9 105 19 16 18 3 14 17 1 15 10 14 15 105 0 10 12 12 10 89 0 10 10 12 97 0 12 10 12 81 122 121 110 109 128 126 121 132 122 132 116 114 109 120 110 120 105 103 100 98 92 90 82 80 77 73 55 29 41 35 52 42 21 20 16 20 6 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,530,o),
(687,530,qs),
(702,530,o),
(711,510,qs),
(734,459,l),
(756,510,ls),
(765,530,o),
(781,530,qs),
(787,530,o),
(785,526,qs),
(747,440,ls),
(745,436,o),
(742,436,qs),
(726,436,ls),
(722,436,o),
(721,440,q),
(682,526,l)
);
},
{
closed = 1;
nodes = (
(259,277,qs),
(259,281,o),
(260,283,q),
(264,302,o),
(290,304,q),
(274,327,o),
(274,355,qs),
(274,385,o),
(309,423,o),
(336,423,qs),
(356,423,o),
(387,403,o),
(387,390,qs),
(387,385,o),
(382,387,qs),
(380,388,o),
(377,390,qs),
(372,394,o),
(368,396,qs),
(356,402,o),
(343,402,qs),
(299,402,o),
(299,354,qs),
(299,332,o),
(322,305,o),
(342,305,qs),
(390,305,ls),
(409,305,o),
(409,287,qs),
(409,285,ls),
(409,283,o),
(406,283,qs),
(326,283,ls),
(294,283,o),
(269,276,q),
(267,275,o),
(264,274,qs),
(262,273,o),
(261,273,qs),
(259,273,o)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 150 values pushed */
16 11 6 3 0 1 61 1 4 8 51 27 2 3 4 55 1 12 3 110 1 7 12 5 76 2 1 1 0 1 133 0 0 6 0 133 0 8 5 4 5 8 4 128 0 12 3 7 3 12 7 128 0 6 0 5 8 6 5 105 0 4 0 3 12 4 3 103 22 18 21 3 16 19 1 17 11 16 17 105 0 11 0 13 11 13 101 9 20 2 7 7 10 97 15 14 2 10 10 24 10 78 128 127 116 115 58 57 134 132 127 138 128 138 122 120 115 126 116 126 113 111 109 107 104 102 96 94 86 84 81 77 75 72 65 64 57 114 58 114 41 35 52 40 20 21 18 23 7 29 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,526,q),
(777,440,l),
(776,436,o),
(772,436,qs),
(756,436,ls),
(753,436,o),
(751,440,qs),
(713,526,ls),
(711,530,o),
(717,530,qs),
(733,530,o),
(742,510,qs),
(765,459,l),
(787,510,ls),
(796,530,o),
(811,530,qs),
(817,530,o)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(290,-348,qs),
(279,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(279,-296,o),
(290,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(375,-348,qs),
(364,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(364,-296,o),
(375,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 130 values pushed */
8 3 2 2 0 17 1 7 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 7 3 133 0 7 4 7 133 0 4 9 1 5 10 4 5 105 19 12 18 3 10 13 1 11 6 10 11 105 0 6 0 8 14 6 8 105 21 16 20 3 14 15 15 14 89 21 16 20 3 14 14 15 97 17 1 15 14 15 81 106 105 94 93 82 81 70 69 112 110 105 116 106 116 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 65 63 38 40 35 66 55 24 21 20 16 22 6 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,531,o),
(687,531,qs),
(702,531,o),
(711,511,qs),
(734,460,l),
(756,511,ls),
(765,531,o),
(781,531,qs),
(787,531,o),
(785,527,qs),
(747,441,ls),
(745,437,o),
(742,437,qs),
(726,437,ls),
(722,437,o),
(721,441,q),
(682,527,l)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(732,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(292,-311,o),
(292,-322,qs),
(292,-333,o),
(278,-348,o),
(267,-348,qs),
(256,-348,o),
(241,-333,o),
(241,-322,qs),
(241,-311,o),
(256,-296,o),
(267,-296,qs),
(278,-296,o)
);
},
{
closed = 1;
nodes = (
(377,-311,o),
(377,-322,qs),
(377,-333,o),
(363,-348,o),
(352,-348,qs),
(341,-348,o),
(326,-333,o),
(326,-322,qs),
(326,-311,o),
(341,-296,o),
(352,-296,qs),
(363,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 143 values pushed */
16 11 6 3 0 1 21 1 8 4 70 1 3 8 3 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 97 11 10 2 6 6 24 6 78 112 111 100 99 88 87 76 75 18 17 118 116 111 122 112 122 106 104 99 110 100 110 94 92 87 98 88 98 82 80 75 86 76 86 73 71 69 67 64 62 56 54 46 44 41 37 35 32 25 24 17 74 18 74 20 21 18 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,526,q),
(777,440,l),
(776,436,o),
(772,436,qs),
(756,436,ls),
(753,436,o),
(751,440,qs),
(713,526,ls),
(711,530,o),
(717,530,qs),
(733,530,o),
(742,510,qs),
(765,459,l),
(787,510,ls),
(796,530,o),
(811,530,qs),
(817,530,o)
);
},
{
closed = 1;
nodes = (
(286,377,o),
(292,377,qs),
(308,377,o),
(317,357,qs),
(340,306,l),
(362,357,ls),
(371,377,o),
(386,377,qs),
(392,377,o),
(391,373,q),
(352,287,l),
(351,283,o),
(347,283,qs),
(331,283,ls),
(328,283,o),
(326,287,qs),
(288,373,ls)
);
},
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 122 values pushed */
8 3 2 2 0 33 23 2 6 4 34 28 2 3 6 3 76 1 1 0 2 0 133 0 2 4 2 133 5 1 4 6 4 133 0 6 3 6 133 0 3 10 3 133 0 10 7 10 133 0 7 12 1 8 13 7 8 105 18 15 17 3 13 16 1 14 9 13 14 105 0 9 11 11 9 89 0 9 9 11 97 0 11 9 11 81 99 98 87 86 105 103 98 109 99 109 93 91 86 97 87 97 82 80 77 75 69 67 59 57 66 55 22 20 21 23 21 20 16 19 6 31 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(682,531,o),
(688,531,qs),
(703,531,o),
(712,511,qs),
(735,460,l),
(757,511,ls),
(766,531,o),
(782,531,qs),
(788,531,o),
(786,527,qs),
(748,441,ls),
(746,437,o),
(743,437,qs),
(727,437,ls),
(723,437,o),
(722,441,q),
(684,527,ls)
);
},
{
closed = 1;
nodes = (
(286,377,o),
(292,377,qs),
(308,377,o),
(317,357,qs),
(340,306,l),
(362,357,ls),
(371,377,o),
(386,377,qs),
(392,377,o),
(391,373,q),
(352,287,l),
(351,283,o),
(347,283,qs),
(331,283,ls),
(328,283,o),
(326,287,qs),
(288,373,ls)
);
},
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
16 11 6 3 0 1 33 23 2 7 4 38 28 2 3 7 87 1 6 11 4 76 2 1 1 0 1 133 0 0 4 0 133 5 1 4 7 4 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 97 14 13 2 9 9 24 9 78 105 104 93 92 35 34 111 109 104 115 105 115 99 97 92 103 93 103 90 88 86 84 81 79 73 71 63 61 58 54 52 49 42 41 34 91 35 91 20 21 21 20 21 18 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,377,o),
(292,377,qs),
(308,377,o),
(317,357,qs),
(340,306,l),
(362,357,ls),
(371,377,o),
(386,377,qs),
(392,377,o),
(391,373,q),
(352,287,l),
(351,283,o),
(347,283,qs),
(331,283,ls),
(328,283,o),
(326,287,qs),
(288,373,ls)
);
},
{
closed = 1;
nodes = (
(640,0,l),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(640,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
16 11 6 3 0 1 1 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 9 1 3 3 4 95 8 1 4 4 24 4 78 18 17 51 50 47 45 39 37 29 27 24 20 17 52 18 52 20 21 18 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,527,q),
(142,441,l),
(141,437,o),
(137,437,qs),
(121,437,ls),
(118,437,o),
(116,441,qs),
(78,527,ls),
(76,531,o),
(82,531,qs),
(98,531,o),
(107,511,qs),
(130,460,l),
(152,511,ls),
(161,531,o),
(176,531,qs),
(182,531,o)
);
},
{
closed = 1;
nodes = (
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls)
);
},
{
closed = 1;
nodes = (
(82,-97,o),
(82,-108,qs),
(82,-119,o),
(68,-134,o),
(57,-134,qs),
(46,-134,o),
(31,-119,o),
(31,-108,qs),
(31,-97,o),
(46,-82,o),
(57,-82,qs),
(68,-82,o)
);
},
{
closed = 1;
nodes = (
(167,-97,o),
(167,-108,qs),
(167,-119,o),
(153,-134,o),
(142,-134,qs),
(131,-134,o),
(116,-119,o),
(116,-108,qs),
(116,-97,o),
(131,-82,o),
(142,-82,qs),
(153,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
8 3 2 2 0 17 1 4 3 2 76 1 1 0 2 0 133 0 2 3 2 133 0 3 4 3 133 11 8 10 3 6 9 1 7 6 7 101 0 4 4 5 97 0 5 5 24 5 78 50 49 38 37 56 54 49 60 50 60 44 42 37 48 38 48 33 39 24 21 20 16 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,531,o),
(82,531,qs),
(98,531,o),
(107,511,qs),
(130,460,l),
(152,511,ls),
(161,531,o),
(176,531,qs),
(182,531,o),
(181,527,q),
(142,441,l),
(141,437,o),
(137,437,qs),
(121,437,ls),
(118,437,o),
(116,441,qs),
(78,527,ls)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
},
{
closed = 1;
nodes = (
(112,-97,o),
(112,-108,qs),
(112,-119,o),
(97,-134,o),
(86,-134,qs),
(75,-134,o),
(61,-119,o),
(61,-108,qs),
(61,-97,o),
(75,-82,o),
(86,-82,qs),
(97,-82,o)
);
},
{
closed = 1;
nodes = (
(197,-97,o),
(197,-108,qs),
(197,-119,o),
(182,-134,o),
(171,-134,qs),
(160,-134,o),
(146,-119,o),
(146,-108,qs),
(146,-97,o),
(160,-82,o),
(171,-82,qs),
(182,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
16 11 6 3 0 1 38 21 2 3 4 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 97 7 1 6 6 24 6 78 56 55 44 43 18 17 62 60 55 66 56 66 50 48 43 54 44 54 41 39 37 35 34 32 25 24 17 42 18 42 20 21 18 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(620,765,q),
(616,776,o),
(616,782,qs),
(615,795,o),
(629,800,q),
(630,801,o),
(631,801,qs),
(635,801,o),
(639,793,qs),
(659,749,o),
(644,693,qs),
(643,687,o),
(639,682,qs),
(637,679,o),
(633,680,o),
(633,683,qs),
(632,728,o),
(624,756,qs),
(623,760,o)
);
},
{
closed = 1;
nodes = (
(539,571,qs),
(539,585,ls),
(539,602,o),
(543,610,qs),
(549,619,o),
(560,619,qs),
(561,619,ls),
(564,619,o),
(564,617,qs),
(564,565,ls),
(564,526,o),
(594,526,qs),
(624,526,o),
(624,565,qs),
(624,585,ls),
(624,602,o),
(628,610,qs),
(634,619,o),
(645,619,qs),
(646,619,ls),
(649,619,o),
(649,617,qs),
(649,565,ls),
(649,526,o),
(679,526,qs),
(709,526,o),
(709,565,qs),
(709,585,ls),
(709,602,o),
(713,610,qs),
(719,619,o),
(730,619,qs),
(731,619,ls),
(734,619,o),
(734,617,qs),
(734,571,ls),
(734,505,o),
(679,504,qs),
(652,503,o),
(635,525,q),
(619,503,o),
(594,504,qs),
(539,505,o)
);
},
{
closed = 1;
nodes = (
(914,417,o),
(914,414,qs),
(914,143,ls),
(914,78,o),
(882,41,qs),
(847,0,o),
(784,0,qs),
(753,0,ls),
(666,0,o),
(635,72,q),
(605,0,o),
(518,0,qs),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(519,23,ls),
(565,23,o),
(592,53,qs),
(622,85,o),
(622,143,qs),
(622,383,ls),
(622,400,o),
(626,408,qs),
(632,417,o),
(643,417,qs),
(646,417,ls),
(648,417,o),
(648,414,qs),
(648,143,ls),
(648,87,o),
(703,23,o),
(751,23,qs),
(785,23,ls),
(831,23,o),
(859,53,qs),
(888,85,o),
(888,143,qs),
(888,383,ls),
(888,400,o),
(893,408,qs),
(898,417,o),
(909,417,qs),
(912,417,ls)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
21 1 0 2 125 93 76 3 9 4 117 112 2 5 14 3 76 52 39 26 2 4 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
8 6 2 4 0 9 0 4 9 128 3 1 2 1 15 2 0 4 2 0 105 0 9 0 14 5 9 14 103 7 1 5 5 11 97 12 1 11 11 24 77 16 1 13 13 10 97 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
8 6 2 4 0 9 0 4 9 128 3 1 2 1 15 2 0 4 2 0 105 0 9 0 14 5 9 14 103 16 1 13 0 10 13 10 101 7 1 5 5 11 97 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
129 128 20 19 137 135 128 141 129 141 121 118 116 113 111 109 103 101 97 96 90 87 80 79 73 70 63 62 50 48 37 35 24 22 19 61 20 61 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 992;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o),
(717,-97,o),
(717,-108,qs),
(717,-119,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(761,-160,o),
(761,-171,qs),
(761,-181,o),
(746,-197,o),
(735,-197,qs),
(724,-197,o),
(709,-181,o),
(709,-171,qs),
(709,-160,o),
(724,-145,o),
(735,-145,qs),
(746,-145,o)
);
},
{
closed = 1;
nodes = (
(259,277,qs),
(259,281,o),
(260,283,q),
(264,302,o),
(290,304,q),
(274,327,o),
(274,355,qs),
(274,385,o),
(309,423,o),
(336,423,qs),
(356,423,o),
(387,403,o),
(387,390,qs),
(387,385,o),
(382,387,qs),
(380,388,o),
(377,390,qs),
(372,394,o),
(368,396,qs),
(356,402,o),
(343,402,qs),
(299,402,o),
(299,354,qs),
(299,332,o),
(322,305,o),
(342,305,qs),
(390,305,ls),
(409,305,o),
(409,287,qs),
(409,285,ls),
(409,283,o),
(406,283,qs),
(326,283,ls),
(294,283,o),
(269,276,q),
(267,275,o),
(264,274,qs),
(262,273,o),
(261,273,qs),
(259,273,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 146 values pushed */
4 1 16 1 128 104 2 15 16 132 1 5 15 53 1 0 5 4 76 0 1 17 16 17 1 16 128 0 5 15 0 15 5 0 128 0 18 0 17 1 18 17 105 0 16 0 15 5 16 15 103 20 11 2 9 12 1 10 13 9 10 105 21 1 13 0 14 6 13 14 105 0 4 0 6 4 6 101 2 19 2 0 0 3 97 8 7 2 3 3 24 3 78 83 82 71 70 1 0 124 122 113 111 108 105 101 99 89 87 82 93 83 93 77 75 70 81 71 81 68 66 62 60 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 23 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
29 28 1 0 37 35 28 41 29 41 26 24 22 20 14 12 8 7 0 27 1 27 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,523,o),
(250,534,qs),
(250,545,o),
(266,560,o),
(276,560,qs),
(287,560,o),
(303,545,o),
(303,534,qs),
(303,523,o),
(287,508,o),
(276,508,qs),
(265,508,o)
);
},
{
closed = 1;
nodes = (
(209,454,o),
(209,466,qs),
(209,477,o),
(224,492,o),
(234,492,qs),
(245,492,o),
(260,477,o),
(260,466,qs),
(260,454,o),
(245,439,o),
(234,439,qs),
(223,439,o)
);
},
{
closed = 1;
nodes = (
(309,492,o),
(319,492,qs),
(330,492,o),
(345,477,o),
(345,466,qs),
(345,454,o),
(330,439,o),
(319,439,qs),
(308,439,o),
(294,454,o),
(294,466,qs),
(294,477,o)
);
},
{
closed = 1;
nodes = (
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-99,o),
(96,-55,qs),
(132,-1,o),
(200,16,q),
(161,35,o),
(110,126,o),
(110,177,qs),
(110,260,o),
(159,309,qs),
(209,360,o),
(291,360,qs),
(329,360,o),
(397,336,o),
(403,321,qs),
(407,311,o),
(396,311,qs),
(393,311,o),
(388,314,qs),
(344,336,o),
(288,337,qs),
(229,337,o),
(188,301,qs),
(136,256,o),
(136,177,qs),
(136,124,o),
(166,81,qs),
(207,23,o),
(281,23,qs),
(430,23,ls),
(442,23,o),
(458,12,o),
(458,3,qs),
(458,2,ls),
(458,0,o),
(456,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
80 1 7 8 94 1 6 7 2 76 0 10 9 8 9 10 8 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 11 3 2 105 0 11 0 9 10 11 9 105 0 8 0 7 6 8 7 103 0 6 12 12 6 89 0 6 6 12 97 0 12 6 12 81 13 12 1 0 89 87 74 72 69 67 65 63 57 54 49 47 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,523,o),
(279,534,qs),
(279,545,o),
(294,560,o),
(305,560,qs),
(316,560,o),
(331,545,o),
(331,534,qs),
(331,523,o),
(316,508,o),
(305,508,qs),
(294,508,o)
);
},
{
closed = 1;
nodes = (
(237,454,o),
(237,466,qs),
(237,477,o),
(252,492,o),
(263,492,qs),
(273,492,o),
(288,477,o),
(288,466,qs),
(288,454,o),
(273,439,o),
(263,439,qs),
(252,439,o)
);
},
{
closed = 1;
nodes = (
(337,492,o),
(348,492,qs),
(358,492,o),
(373,477,o),
(373,466,qs),
(373,454,o),
(358,439,o),
(348,439,qs),
(337,439,o),
(322,454,o),
(322,466,qs),
(322,477,o)
);
},
{
closed = 1;
nodes = (
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(269,23,o),
(274,24,q),
(145,188,ls),
(122,217,o),
(121,239,qs),
(118,288,o),
(169,323,qs),
(225,360,o),
(304,360,qs),
(372,360,o),
(425,331,qs),
(491,295,o),
(488,239,qs),
(486,217,o),
(464,188,qs),
(335,23,l),
(607,23,l),
(607,0,l),
(358,0,ls),
(319,0,o),
(305,10,q),
(290,0,o),
(260,0,qs),
(188,0,o)
);
},
{
closed = 1;
nodes = (
(174,192,qs),
(177,188,o),
(179,186,qs),
(296,37,ls),
(304,27,o),
(313,37,qs),
(430,186,ls),
(431,187,o),
(432,189,q),
(460,225,o),
(460,243,qs),
(460,273,o),
(424,301,qs),
(376,337,o),
(304,337,qs),
(243,337,o),
(148,280,o),
(148,243,qs),
(148,224,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
57 46 2 8 13 38 1 6 8 73 1 12 6 3 76 0 1 14 1 0 3 1 0 105 5 1 3 4 15 2 2 9 3 2 105 0 9 0 13 8 9 13 105 10 1 8 7 16 2 6 12 8 6 105 0 12 11 11 12 89 0 12 12 11 97 0 11 12 11 81 37 36 13 12 1 0 92 90 81 79 68 66 60 59 51 49 43 42 41 39 36 87 37 87 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,523,o),
(245,534,qs),
(245,545,o),
(260,560,o),
(271,560,qs),
(282,560,o),
(297,545,o),
(297,534,qs),
(297,523,o),
(282,508,o),
(271,508,qs),
(260,508,o)
);
},
{
closed = 1;
nodes = (
(203,454,o),
(203,466,qs),
(203,477,o),
(218,492,o),
(228,492,qs),
(239,492,o),
(254,476,o),
(254,466,qs),
(254,454,o),
(239,439,o),
(228,439,qs),
(218,439,o)
);
},
{
closed = 1;
nodes = (
(303,492,o),
(313,492,qs),
(324,492,o),
(339,476,o),
(339,466,qs),
(339,454,o),
(324,439,o),
(313,439,qs),
(303,439,o),
(288,454,o),
(288,466,qs),
(288,477,o)
);
},
{
closed = 1;
nodes = (
(435,23,o),
(452,12,o),
(452,3,qs),
(452,2,ls),
(452,0,o),
(450,0,qs),
(-6,0,l),
(-6,23,l),
(181,23,l),
(147,46,o),
(103,131,o),
(103,177,qs),
(103,260,o),
(152,309,qs),
(203,360,o),
(285,360,qs),
(323,360,o),
(391,336,o),
(397,321,qs),
(401,311,o),
(390,311,qs),
(386,311,o),
(382,314,q),
(337,336,o),
(282,337,qs),
(223,337,o),
(181,301,qs),
(130,256,o),
(130,177,qs),
(130,124,o),
(160,81,qs),
(201,23,o),
(275,23,qs),
(424,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 63 62 61 60 54 52 49 47 45 43 36 69 37 68 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,523,o),
(260,534,qs),
(260,545,o),
(275,560,o),
(286,560,qs),
(297,560,o),
(312,545,o),
(312,534,qs),
(312,523,o),
(297,508,o),
(286,508,qs),
(275,508,o)
);
},
{
closed = 1;
nodes = (
(218,454,o),
(218,466,qs),
(218,477,o),
(233,492,o),
(243,492,qs),
(254,492,o),
(269,477,o),
(269,466,qs),
(269,454,o),
(254,439,o),
(243,439,qs),
(233,439,o)
);
},
{
closed = 1;
nodes = (
(303,454,o),
(303,466,qs),
(303,477,o),
(318,492,o),
(328,492,qs),
(339,492,o),
(354,477,o),
(354,466,qs),
(354,454,o),
(339,439,o),
(328,439,qs),
(318,439,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(256,23,l),
(126,188,ls),
(104,217,o),
(102,239,qs),
(99,288,o),
(151,323,qs),
(206,360,o),
(286,360,qs),
(353,360,o),
(406,331,qs),
(473,295,o),
(469,239,qs),
(467,217,o),
(445,188,qs),
(316,23,l),
(588,23,l),
(588,0,l),
(339,0,ls),
(300,0,o),
(286,10,q),
(272,0,o),
(230,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(286,27,o),
(294,37,qs),
(411,186,ls),
(412,187,o),
(414,189,qs),
(442,225,o),
(442,243,qs),
(442,273,o),
(405,301,qs),
(358,337,o),
(286,337,qs),
(224,337,o),
(130,280,o),
(130,243,qs),
(130,224,o),
(155,192,q),
(159,188,o),
(160,186,q),
(277,37,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
54 1 8 11 38 1 6 8 2 76 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 9 3 2 105 0 9 0 11 8 9 11 105 10 1 8 6 6 8 87 10 1 8 8 6 95 7 15 2 6 8 6 79 37 36 25 24 13 12 1 0 68 66 58 57 51 49 43 42 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,7,qs),
(78,517,ls),
(78,556,o),
(110,556,qs),
(129,556,ls),
(223,556,o),
(260,495,qs),
(261,493,o),
(262,495,qs),
(300,556,o),
(393,556,qs),
(442,556,ls),
(444,556,o),
(444,554,qs),
(444,552,ls),
(444,545,o),
(437,539,qs),
(429,533,o),
(416,533,qs),
(385,533,ls),
(316,533,o),
(272,464,qs),
(265,454,o),
(261,454,qs),
(256,454,o),
(250,464,qs),
(223,504,o),
(174,533,o),
(135,533,qs),
(110,533,ls),
(104,533,o),
(104,527,qs),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
20 1 0 3 26 3 2 1 0 2 1 5 1 3 76 0 1 0 5 0 1 5 128 2 1 0 0 3 97 4 1 3 3 23 77 6 1 5 5 24 5 78 0 0 0 36 0 35 52 23 50 35 37 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,556,o),
(402,556,qs),
(403,556,o),
(404,553,qs),
(407,542,o),
(405,532,q),
(402,524,o),
(394,516,qs),
(189,324,ls),
(94,232,o),
(93,149,qs),
(92,96,o),
(125,62,qs),
(162,23,o),
(227,23,qs),
(526,23,ls),
(538,23,o),
(554,12,o),
(554,3,qs),
(554,2,ls),
(554,0,o),
(552,0,qs),
(227,0,ls),
(163,0,o),
(121,31,qs),
(67,71,o),
(67,149,qs),
(67,198,o),
(115,284,o),
(178,349,q),
(399,554,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 24 0 78 53 38 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,337,o),
(18,340,qs),
(18,357,ls),
(18,360,o),
(21,360,qs),
(85,360,l),
(85,477,ls),
(85,556,o),
(156,556,qs),
(180,556,o),
(216,523,o),
(216,502,qs),
(216,490,o),
(210,490,qs),
(204,490,o),
(202,496,qs),
(188,533,o),
(155,533,qs),
(111,533,o),
(111,478,qs),
(111,360,l),
(201,360,ls),
(204,360,o),
(204,357,qs),
(204,340,ls),
(204,337,o),
(201,337,qs),
(111,337,l),
(111,3,ls),
(111,0,o),
(108,0,qs),
(89,0,ls),
(85,0,o),
(85,3,qs),
(85,337,l),
(21,337,ls)
);
},
{
closed = 1;
nodes = (
(321,464,qs),
(340,464,o),
(340,445,qs),
(340,426,o),
(321,426,qs),
(302,426,o),
(302,445,qs),
(302,464,o)
);
},
{
closed = 1;
nodes = (
(309,360,o),
(312,360,qs),
(314,360,ls),
(335,360,o),
(335,332,qs),
(335,3,ls),
(335,0,o),
(332,0,qs),
(312,0,ls),
(309,0,o),
(309,3,qs),
(309,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
55 1 1 2 44 1 2 0 1 2 76 47 1 0 73 0 4 3 9 3 4 9 128 0 9 0 8 2 9 8 105 0 3 3 5 97 0 5 5 39 77 11 7 2 1 1 2 95 10 6 2 2 2 42 77 0 0 0 40 0 78 0 0 52 51 43 41 39 37 0 35 0 33 18 35 34 34 51 19 19 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,337,o),
(18,340,qs),
(18,357,ls),
(18,360,o),
(21,360,qs),
(85,360,l),
(85,477,ls),
(85,556,o),
(156,556,qs),
(180,556,o),
(216,523,o),
(216,502,qs),
(216,490,o),
(210,490,qs),
(204,490,o),
(202,496,qs),
(188,533,o),
(155,533,qs),
(111,533,o),
(111,478,qs),
(111,360,l),
(201,360,ls),
(204,360,o),
(204,357,qs),
(204,340,ls),
(204,337,o),
(201,337,qs),
(111,337,l),
(111,3,ls),
(111,0,o),
(108,0,qs),
(89,0,ls),
(85,0,o),
(85,3,qs),
(85,337,l),
(21,337,ls)
);
},
{
closed = 1;
nodes = (
(309,68,qs),
(309,553,ls),
(309,556,o),
(312,556,qs),
(314,556,ls),
(335,556,o),
(335,528,qs),
(335,69,ls),
(335,16,o),
(379,16,qs),
(411,16,o),
(426,51,qs),
(429,59,o),
(433,59,qs),
(440,59,o),
(440,46,qs),
(440,24,o),
(402,-9,o),
(377,-9,qs),
(309,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
53 1 3 5 1 1 0 10 2 76 0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 97 13 1 8 8 49 8 78 37 36 0 0 50 49 46 44 41 40 36 55 37 55 0 35 0 33 18 35 34 34 51 19 19 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,652,qs),
(79,657,ls),
(50,668,o),
(39,668,qs),
(30,668,o),
(21,660,o),
(11,642,qs),
(9,638,o),
(6,642,qs),
(2,648,o),
(2,657,qs),
(2,690,o),
(36,690,qs),
(44,690,o),
(57,685,qs),
(61,684,ls),
(69,681,o),
(72,686,qs),
(104,737,o),
(139,737,qs),
(161,737,o),
(190,712,o),
(190,692,qs),
(190,670,o),
(158,642,o),
(133,642,qs),
(117,642,o)
);
},
{
closed = 1;
nodes = (
(89,674,q),
(113,662,o),
(130,662,qs),
(147,662,o),
(168,679,o),
(168,692,qs),
(168,717,o),
(139,717,qs),
(116,717,o)
);
},
{
closed = 1;
nodes = (
(238,0,l),
(209,0,ls),
(154,0,o),
(119,31,qs),
(78,69,o),
(78,143,qs),
(78,521,ls),
(78,538,o),
(83,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,143,ls),
(104,87,o),
(159,23,o),
(207,23,qs),
(238,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
34 1 3 2 40 1 6 7 2 76 0 1 10 1 4 2 1 4 105 0 2 0 3 5 2 3 105 0 5 9 1 0 7 5 0 105 0 7 7 23 77 11 1 6 6 8 97 0 8 8 24 8 78 37 36 28 27 1 0 53 51 44 43 36 54 37 54 33 31 27 35 28 35 23 21 14 12 7 5 0 26 1 26 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
},
{
closed = 1;
nodes = (
(342,-134,o),
(331,-134,qs),
(321,-134,o),
(306,-119,o),
(306,-108,qs),
(306,-97,o),
(321,-82,o),
(331,-82,qs),
(342,-82,o),
(357,-97,o),
(357,-108,qs),
(357,-119,o)
);
},
{
closed = 1;
nodes = (
(442,-97,o),
(442,-108,qs),
(442,-119,o),
(427,-134,o),
(416,-134,qs),
(406,-134,o),
(391,-119,o),
(391,-108,qs),
(391,-97,o),
(406,-82,o),
(416,-82,qs),
(427,-82,o)
);
},
{
closed = 1;
nodes = (
(400,-166,o),
(400,-177,qs),
(400,-188,o),
(385,-203,o),
(374,-203,qs),
(363,-203,o),
(348,-188,o),
(348,-177,qs),
(348,-166,o),
(363,-151,o),
(374,-151,qs),
(385,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
4 1 3 1 35 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 97 5 1 4 4 24 4 78 65 64 53 52 1 0 71 69 64 75 65 75 59 57 52 63 53 63 50 48 44 42 38 36 34 31 25 24 18 15 8 7 0 39 1 39 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(82,-97,o),
(82,-108,qs),
(82,-119,o),
(68,-134,o),
(57,-134,qs),
(46,-134,o),
(31,-119,o),
(31,-108,qs),
(31,-97,o),
(46,-82,o),
(57,-82,qs),
(68,-82,o)
);
},
{
closed = 1;
nodes = (
(167,-97,o),
(167,-108,qs),
(167,-119,o),
(153,-134,o),
(142,-134,qs),
(131,-134,o),
(116,-119,o),
(116,-108,qs),
(116,-97,o),
(131,-82,o),
(142,-82,qs),
(153,-82,o)
);
},
{
closed = 1;
nodes = (
(125,-166,o),
(125,-177,qs),
(125,-188,o),
(110,-203,o),
(99,-203,qs),
(88,-203,o),
(73,-188,o),
(73,-177,qs),
(73,-166,o),
(88,-151,o),
(99,-151,qs),
(110,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
5 1 2 1 1 76 0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 105 12 1 7 0 8 7 8 101 0 2 2 0 97 9 1 0 0 24 0 78 45 44 33 32 21 20 1 0 51 49 44 55 45 55 39 37 32 43 33 43 27 25 20 31 21 31 18 16 9 8 0 19 1 19 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
},
{
closed = 1;
nodes = (
(98,-134,o),
(87,-134,qs),
(76,-134,o),
(61,-119,o),
(61,-108,qs),
(61,-97,o),
(76,-82,o),
(87,-82,qs),
(98,-82,o),
(112,-97,o),
(112,-108,qs),
(112,-119,o)
);
},
{
closed = 1;
nodes = (
(197,-97,o),
(197,-108,qs),
(197,-119,o),
(183,-134,o),
(172,-134,qs),
(161,-134,o),
(146,-119,o),
(146,-108,qs),
(146,-97,o),
(161,-82,o),
(172,-82,qs),
(183,-82,o)
);
},
{
closed = 1;
nodes = (
(155,-166,o),
(155,-177,qs),
(155,-188,o),
(140,-203,o),
(129,-203,qs),
(118,-203,o),
(103,-188,o),
(103,-177,qs),
(103,-166,o),
(118,-151,o),
(129,-151,qs),
(140,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 97 4 1 3 3 24 3 78 51 50 39 38 1 0 57 55 50 61 51 61 45 43 38 49 39 49 36 34 30 28 24 22 20 18 17 15 8 7 0 25 1 25 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,387,o),
(306,388,qs),
(306,390,ls),
(306,408,o),
(333,408,qs),
(349,408,l),
(349,553,ls),
(349,571,o),
(353,578,qs),
(359,588,o),
(370,588,qs),
(371,588,ls),
(373,588,o),
(373,585,qs),
(373,527,l),
(425,527,ls),
(457,527,o),
(496,489,o),
(496,457,qs),
(496,425,o),
(457,387,o),
(425,387,qs),
(309,387,ls)
);
},
{
closed = 1;
nodes = (
(373,408,l),
(429,408,ls),
(447,408,o),
(473,436,o),
(473,457,qs),
(473,477,o),
(447,505,o),
(429,505,qs),
(373,505,l)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
36 1 8 6 67 1 5 8 2 76 8 1 1 74 0 6 0 8 0 6 8 128 0 8 5 0 8 5 126 0 1 12 1 3 2 1 3 105 4 1 2 11 1 0 6 2 0 103 7 13 2 5 5 9 97 10 1 9 9 24 9 78 33 32 24 23 1 0 70 68 66 63 57 56 50 47 40 39 32 71 33 71 30 28 23 31 24 31 18 16 7 5 0 22 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,577,o),
(219,539,o),
(219,507,qs),
(219,475,o),
(180,437,o),
(147,437,qs),
(31,437,ls),
(29,437,o),
(29,438,qs),
(29,440,ls),
(29,458,o),
(55,458,qs),
(71,458,l),
(71,603,ls),
(71,621,o),
(76,628,q),
(81,638,o),
(92,638,qs),
(93,638,ls),
(96,638,o),
(96,635,qs),
(96,577,l),
(147,577,ls)
);
},
{
closed = 1;
nodes = (
(170,458,o),
(195,486,o),
(195,507,qs),
(195,527,o),
(170,555,o),
(151,555,qs),
(96,555,l),
(96,458,l),
(151,458,ls)
);
},
{
closed = 1;
nodes = (
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
1 1 3 0 49 1 7 6 2 76 0 0 3 0 133 0 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 97 0 8 8 24 8 78 23 23 0 0 45 43 42 40 33 32 23 31 23 30 26 24 0 22 0 21 81 36 20 11 7 25 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,437,o),
(29,438,qs),
(29,440,ls),
(29,458,o),
(55,458,qs),
(71,458,l),
(71,603,ls),
(71,621,o),
(76,628,q),
(81,638,o),
(92,638,qs),
(93,638,ls),
(96,638,o),
(96,635,qs),
(96,577,l),
(147,577,ls),
(180,577,o),
(219,539,o),
(219,507,qs),
(219,475,o),
(180,437,o),
(147,437,qs),
(31,437,ls)
);
},
{
closed = 1;
nodes = (
(96,458,l),
(151,458,ls),
(170,458,o),
(195,486,o),
(195,507,qs),
(195,527,o),
(170,555,o),
(151,555,qs),
(96,555,l)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
8 1 1 2 53 36 2 6 7 2 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 97 10 1 9 9 24 9 78 33 32 24 23 1 0 56 54 52 50 49 47 40 39 32 57 33 57 30 28 23 31 24 31 18 16 12 11 7 5 0 22 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,524,o),
(603,534,qs),
(603,545,o),
(618,561,o),
(629,561,qs),
(640,561,o),
(655,545,o),
(655,534,qs),
(655,524,o),
(640,509,o),
(629,509,qs),
(618,509,o)
);
},
{
closed = 1;
nodes = (
(561,455,o),
(561,466,qs),
(561,477,o),
(576,492,o),
(586,492,qs),
(597,492,o),
(612,477,o),
(612,466,qs),
(612,455,o),
(597,439,o),
(586,439,qs),
(576,439,o)
);
},
{
closed = 1;
nodes = (
(661,492,o),
(671,492,qs),
(682,492,o),
(697,477,o),
(697,466,qs),
(697,455,o),
(682,439,o),
(671,439,qs),
(661,439,o),
(646,455,o),
(646,466,qs),
(646,477,o)
);
},
{
closed = 1;
nodes = (
(911,-1,l),
(685,-1,ls),
(643,-1,o),
(628,12,q),
(613,-1,o),
(571,-1,qs),
(364,-1,l),
(364,0,l),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(571,23,l),
(589,23,l),
(544,39,o),
(511,82,qs),
(473,132,o),
(472,191,qs),
(471,254,o),
(508,302,qs),
(552,359,o),
(628,359,qs),
(694,359,o),
(738,314,qs),
(786,264,o),
(784,191,qs),
(783,139,o),
(753,94,qs),
(720,42,o),
(667,23,q),
(911,23,l)
);
},
{
closed = 1;
nodes = (
(529,102,qs),
(567,49,o),
(628,33,q),
(682,47,o),
(718,90,qs),
(759,137,o),
(758,190,qs),
(758,252,o),
(724,292,qs),
(686,336,o),
(628,336,qs),
(578,336,o),
(542,302,qs),
(499,261,o),
(498,190,qs),
(498,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
91 1 7 8 74 1 9 7 2 76 0 8 12 7 12 8 7 128 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 8 6 12 105 13 1 0 0 1 97 0 1 1 23 77 15 11 2 7 7 9 95 10 1 9 9 24 9 78 36 36 13 12 1 0 84 82 36 78 36 78 77 75 73 68 62 61 55 52 45 43 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,524,o),
(233,534,qs),
(233,545,o),
(248,561,o),
(259,561,qs),
(270,561,o),
(285,545,o),
(285,534,qs),
(285,524,o),
(270,509,o),
(259,509,qs),
(248,509,o)
);
},
{
closed = 1;
nodes = (
(191,455,o),
(191,466,qs),
(191,477,o),
(206,492,o),
(217,492,qs),
(227,492,o),
(242,477,o),
(242,466,qs),
(242,455,o),
(228,439,o),
(217,439,qs),
(206,439,o)
);
},
{
closed = 1;
nodes = (
(291,492,o),
(302,492,qs),
(312,492,o),
(327,477,o),
(327,466,qs),
(327,455,o),
(313,439,o),
(302,439,qs),
(291,439,o),
(276,455,o),
(276,466,qs),
(276,477,o)
);
},
{
closed = 1;
nodes = (
(367,313,qs),
(415,261,o),
(415,179,qs),
(415,109,o),
(379,61,qs),
(337,3,o),
(265,0,q),
(-6,0,l),
(-6,23,l),
(178,23,l),
(103,71,o),
(103,179,qs),
(103,250,o),
(141,300,qs),
(185,360,o),
(259,360,qs),
(324,360,o)
);
},
{
closed = 1;
nodes = (
(348,63,qs),
(388,107,o),
(388,178,qs),
(388,241,o),
(357,285,qs),
(321,337,o),
(259,337,qs),
(205,337,o),
(170,296,qs),
(130,251,o),
(130,178,qs),
(130,117,o),
(161,74,qs),
(197,23,o),
(259,23,qs),
(313,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
5 1 3 4 12 2 2 6 3 2 105 13 1 6 0 10 7 6 10 105 11 1 0 0 1 97 0 1 1 23 77 14 9 2 7 7 8 95 0 8 8 24 8 78 54 53 37 36 13 12 1 0 62 60 53 68 54 68 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 482;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,524,o),
(233,534,qs),
(233,545,o),
(248,561,o),
(259,561,qs),
(270,561,o),
(285,545,o),
(285,534,qs),
(285,524,o),
(270,509,o),
(259,509,qs),
(248,509,o)
);
},
{
closed = 1;
nodes = (
(191,455,o),
(191,466,qs),
(191,477,o),
(206,492,o),
(217,492,qs),
(227,492,o),
(242,477,o),
(242,466,qs),
(242,455,o),
(228,439,o),
(217,439,qs),
(206,439,o)
);
},
{
closed = 1;
nodes = (
(291,492,o),
(302,492,qs),
(312,492,o),
(327,477,o),
(327,466,qs),
(327,455,o),
(313,439,o),
(302,439,qs),
(291,439,o),
(276,455,o),
(276,466,qs),
(276,477,o)
);
},
{
closed = 1;
nodes = (
(542,0,l),
(316,0,ls),
(273,0,o),
(258,12,q),
(244,0,o),
(201,0,qs),
(-6,0,l),
(-6,23,l),
(220,23,l),
(174,40,o),
(141,82,qs),
(104,132,o),
(102,191,qs),
(101,255,o),
(138,302,qs),
(183,360,o),
(258,360,qs),
(324,360,o),
(368,315,qs),
(416,265,o),
(415,191,qs),
(413,140,o),
(384,94,qs),
(350,42,o),
(297,23,q),
(542,23,l)
);
},
{
closed = 1;
nodes = (
(159,102,qs),
(197,50,o),
(258,34,q),
(312,48,o),
(349,91,qs),
(389,138,o),
(388,191,qs),
(388,253,o),
(354,293,qs),
(317,337,o),
(258,337,qs),
(208,337,o),
(172,303,qs),
(129,262,o),
(128,191,qs),
(128,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
74 1 7 11 57 1 8 7 2 76 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 12 1 0 0 1 97 0 1 1 23 77 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 67 65 36 61 36 61 60 58 56 54 53 52 45 43 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,0,l),
(571,0,ls),
(517,0,o),
(484,38,q),
(432,0,o),
(350,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(340,23,ls),
(390,23,o),
(442,38,o),
(468,59,q),
(448,94,o),
(422,195,qs),
(386,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,325,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(468,125,o),
(494,63,o),
(511,47,qs),
(537,23,o),
(571,23,qs),
(586,23,l)
);
},
{
closed = 1;
nodes = (
(288,-108,o),
(288,-119,qs),
(288,-130,o),
(273,-145,o),
(262,-145,qs),
(251,-145,o),
(236,-130,o),
(236,-119,qs),
(236,-108,o),
(251,-92,o),
(262,-92,qs),
(273,-92,o)
);
},
{
closed = 1;
nodes = (
(358,-145,o),
(347,-145,qs),
(336,-145,o),
(321,-130,o),
(321,-119,qs),
(321,-108,o),
(336,-92,o),
(347,-92,qs),
(358,-92,o),
(373,-108,o),
(373,-119,qs),
(373,-130,o)
);
},
{
closed = 1;
nodes = (
(278,-198,o),
(278,-187,qs),
(278,-176,o),
(293,-162,o),
(304,-162,qs),
(315,-162,o),
(330,-176,o),
(330,-187,qs),
(330,-198,o),
(315,-213,o),
(304,-213,qs),
(293,-213,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
61 25 13 3 0 2 43 1 5 12 2 76 0 1 0 2 0 1 2 105 10 15 2 8 11 1 9 13 8 9 105 0 13 16 1 12 5 13 12 105 0 5 0 4 5 4 101 3 14 2 0 0 6 97 7 1 6 6 24 6 78 91 90 67 66 1 0 97 95 90 101 91 101 88 86 82 80 73 71 66 77 67 77 64 62 60 57 51 49 38 36 30 27 22 20 8 6 0 65 1 65 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(455,23,l),
(437,35,o),
(409,104,o),
(384,195,qs),
(345,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(104,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,324,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(440,77,o),
(477,38,qs),
(491,23,o),
(520,23,qs),
(522,23,o),
(522,22,qs),
(522,0,o),
(497,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(218,-97,o),
(218,-108,qs),
(218,-119,o),
(203,-134,o),
(192,-134,qs),
(182,-134,o),
(167,-119,o),
(167,-108,qs),
(167,-97,o),
(182,-82,o),
(192,-82,qs),
(203,-82,o)
);
},
{
closed = 1;
nodes = (
(303,-97,o),
(303,-108,qs),
(303,-119,o),
(288,-134,o),
(277,-134,qs),
(267,-134,o),
(252,-119,o),
(252,-108,qs),
(252,-97,o),
(267,-82,o),
(277,-82,qs),
(288,-82,o)
);
},
{
closed = 1;
nodes = (
(261,-166,o),
(261,-177,qs),
(261,-188,o),
(245,-203,o),
(235,-203,qs),
(224,-203,o),
(208,-188,o),
(208,-177,qs),
(208,-166,o),
(224,-151,o),
(235,-151,qs),
(245,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
16 1 1 3 1 76 0 2 0 3 1 2 3 105 13 7 12 3 5 8 1 6 9 5 6 105 14 1 9 0 10 9 10 101 4 1 1 1 0 95 11 1 0 0 24 0 78 57 56 45 44 33 32 1 0 63 61 56 67 57 67 51 49 44 55 45 55 39 37 32 43 33 43 30 29 25 23 11 9 5 2 0 31 1 31 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,0,l),
(533,0,ls),
(479,0,o),
(446,38,q),
(394,0,o),
(312,0,qs),
(-6,0,l),
(-6,23,l),
(302,23,ls),
(352,23,o),
(404,38,o),
(430,59,q),
(410,94,o),
(384,195,qs),
(348,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(104,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,324,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(430,125,o),
(456,63,o),
(473,47,qs),
(499,23,o),
(533,23,qs),
(560,23,l)
);
},
{
closed = 1;
nodes = (
(203,-134,o),
(192,-134,qs),
(182,-134,o),
(167,-119,o),
(167,-108,qs),
(167,-97,o),
(182,-82,o),
(192,-82,qs),
(203,-82,o),
(218,-97,o),
(218,-108,qs),
(218,-119,o)
);
},
{
closed = 1;
nodes = (
(303,-97,o),
(303,-108,qs),
(303,-119,o),
(288,-134,o),
(277,-134,qs),
(267,-134,o),
(252,-119,o),
(252,-108,qs),
(252,-97,o),
(267,-82,o),
(277,-82,qs),
(288,-82,o)
);
},
{
closed = 1;
nodes = (
(261,-166,o),
(261,-177,qs),
(261,-188,o),
(245,-203,o),
(235,-203,qs),
(224,-203,o),
(208,-188,o),
(208,-177,qs),
(208,-166,o),
(224,-151,o),
(235,-151,qs),
(245,-151,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
33 25 13 3 0 2 1 76 0 1 0 2 0 1 2 105 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 3 12 2 0 0 4 97 5 1 4 4 24 4 78 63 62 51 50 1 0 69 67 62 73 63 73 57 55 50 61 51 61 48 46 42 40 36 34 32 30 29 27 22 20 8 6 0 37 1 37 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,454,o),
(118,456,qs),
(118,457,ls),
(118,476,o),
(144,476,qs),
(160,476,l),
(160,621,ls),
(160,638,o),
(164,646,qs),
(170,655,o),
(181,655,qs),
(182,655,ls),
(184,655,o),
(184,652,qs),
(184,594,l),
(236,594,ls),
(269,594,o),
(308,556,o),
(308,524,qs),
(308,492,o),
(269,454,o),
(236,454,qs),
(120,454,ls)
);
},
{
closed = 1;
nodes = (
(184,476,l),
(240,476,ls),
(258,476,o),
(284,504,o),
(284,524,qs),
(284,544,o),
(258,572,o),
(240,572,qs),
(184,572,l)
);
},
{
closed = 1;
nodes = (
(477,0,l),
(447,0,ls),
(354,0,o),
(327,80,q),
(290,0,o),
(198,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o),
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,143,ls),
(343,87,o),
(398,23,o),
(445,23,qs),
(477,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
68 1 5 7 1 76 8 1 1 74 0 7 8 5 8 7 5 128 0 1 13 1 3 2 1 3 105 4 1 2 12 1 0 6 2 0 103 0 6 0 8 7 6 8 105 9 14 2 5 5 10 97 11 1 10 10 24 10 78 33 32 24 23 1 0 71 69 67 62 60 57 51 49 46 45 41 39 32 72 33 72 30 28 23 31 24 31 18 16 7 5 0 22 1 19 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,506,o),
(121,517,qs),
(121,527,o),
(137,543,o),
(148,543,qs),
(158,543,o),
(174,527,o),
(174,517,qs),
(174,506,o),
(159,491,o),
(148,491,qs),
(137,491,o)
);
},
{
closed = 1;
nodes = (
(80,437,o),
(80,448,qs),
(80,459,o),
(95,474,o),
(105,474,qs),
(116,474,o),
(131,459,o),
(131,448,qs),
(131,437,o),
(116,422,o),
(105,422,qs),
(95,422,o)
);
},
{
closed = 1;
nodes = (
(180,474,o),
(190,474,qs),
(201,474,o),
(216,459,o),
(216,448,qs),
(216,437,o),
(201,422,o),
(190,422,qs),
(180,422,o),
(165,437,o),
(165,448,qs),
(165,459,o)
);
},
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
63 40 2 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 12 1 0 0 1 97 0 1 1 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 13 12 1 0 66 64 61 59 55 54 51 49 44 43 36 67 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,437,o),
(46,438,qs),
(46,440,ls),
(46,458,o),
(73,458,qs),
(89,458,l),
(89,603,ls),
(89,621,o),
(93,628,qs),
(99,638,o),
(110,638,qs),
(111,638,ls),
(113,638,o),
(113,635,qs),
(113,577,l),
(165,577,ls),
(197,577,o),
(236,539,o),
(236,507,qs),
(236,475,o),
(197,437,o),
(165,437,qs),
(49,437,ls)
);
},
{
closed = 1;
nodes = (
(113,458,l),
(169,458,ls),
(187,458,o),
(213,486,o),
(213,507,qs),
(213,527,o),
(187,555,o),
(169,555,qs),
(113,555,l)
);
},
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
59 36 2 5 6 1 76 8 1 1 74 0 6 0 5 0 6 5 128 0 8 10 7 10 8 7 128 0 1 12 1 3 2 1 3 105 4 1 2 11 1 0 6 2 0 103 0 7 0 9 7 9 101 13 1 5 5 10 97 0 10 10 24 10 78 33 32 24 23 1 0 62 60 57 55 51 50 47 45 40 39 32 63 33 63 30 28 23 31 24 31 18 16 7 5 0 22 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(844,0,l),
(814,0,ls),
(723,0,o),
(694,79,q),
(659,0,o),
(565,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(561,23,ls),
(610,23,o),
(641,51,qs),
(684,89,o),
(684,171,qs),
(684,243,o),
(651,281,qs),
(618,318,o),
(561,318,qs),
(355,318,ls),
(326,318,o),
(326,339,qs),
(326,351,ls),
(326,363,o),
(335,371,q),
(575,554,l),
(577,557,o),
(580,555,qs),
(589,548,o),
(587,538,qs),
(585,531,o),
(570,519,qs),
(356,356,l),
(353,353,o),
(353,349,qs),
(353,348,ls),
(353,341,o),
(358,341,qs),
(565,341,ls),
(621,341,o),
(658,311,qs),
(710,268,o),
(710,173,qs),
(711,143,ls),
(711,87,o),
(765,23,o),
(813,23,qs),
(844,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
55 1 0 4 1 76 0 4 2 0 2 4 0 128 0 1 0 2 4 1 2 103 3 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 58 56 54 51 45 44 38 35 29 26 9 7 0 59 1 59 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 838;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,310,qs),
(471,267,o),
(471,171,qs),
(471,86,o),
(430,42,qs),
(392,0,o),
(325,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 37 35 29 26 9 7 0 38 1 38 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,0,l),
(575,0,ls),
(483,0,o),
(454,79,q),
(420,0,o),
(325,0,qs),
(-6,0,l),
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,311,qs),
(470,268,o),
(471,173,qs),
(471,143,ls),
(471,87,o),
(525,23,o),
(573,23,qs),
(605,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
41 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 44 42 40 38 37 35 29 26 9 7 0 45 1 45 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,486,o),
(323,487,o),
(323,492,qs),
(323,502,ls),
(323,510,o),
(331,516,qs),
(494,641,ls),
(497,643,o),
(500,641,qs),
(507,635,o),
(507,628,qs),
(507,619,o),
(489,605,qs),
(337,489,l)
);
},
{
closed = 1;
nodes = (
(844,0,l),
(814,0,ls),
(723,0,o),
(694,79,q),
(659,0,o),
(565,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(561,23,ls),
(610,23,o),
(641,51,qs),
(684,89,o),
(684,171,qs),
(684,243,o),
(651,281,qs),
(618,318,o),
(561,318,qs),
(355,318,ls),
(326,318,o),
(326,339,qs),
(326,351,ls),
(326,363,o),
(335,371,q),
(575,554,l),
(577,557,o),
(580,555,qs),
(589,548,o),
(587,538,qs),
(585,531,o),
(570,519,qs),
(356,356,l),
(353,353,o),
(353,349,qs),
(353,348,ls),
(353,341,o),
(358,341,qs),
(565,341,ls),
(621,341,o),
(658,311,qs),
(710,268,o),
(710,173,qs),
(711,143,ls),
(711,87,o),
(765,23,o),
(813,23,qs),
(844,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
69 1 0 4 1 76 10 1 1 74 0 4 2 0 2 4 0 128 0 1 0 2 4 1 2 103 3 7 2 0 0 5 97 6 1 5 5 24 5 78 15 14 72 70 68 65 59 58 52 49 43 40 23 21 14 73 15 73 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 838;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,486,o),
(83,487,o),
(83,492,qs),
(83,502,ls),
(83,510,o),
(91,516,qs),
(255,641,ls),
(257,643,o),
(260,641,qs),
(267,635,o),
(267,628,qs),
(267,619,o),
(250,605,qs),
(97,489,l)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,310,qs),
(471,267,o),
(471,171,qs),
(471,86,o),
(430,42,qs),
(392,0,o),
(325,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
10 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 15 14 51 49 43 40 23 21 14 52 15 52 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,486,o),
(83,487,o),
(83,492,qs),
(83,502,ls),
(83,510,o),
(91,516,qs),
(255,641,ls),
(257,643,o),
(260,641,qs),
(267,635,o),
(267,628,qs),
(267,619,o),
(250,605,qs),
(97,489,l)
);
},
{
closed = 1;
nodes = (
(605,0,l),
(575,0,ls),
(483,0,o),
(454,79,q),
(420,0,o),
(325,0,qs),
(-6,0,l),
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,311,qs),
(470,268,o),
(471,173,qs),
(471,143,ls),
(471,87,o),
(525,23,o),
(573,23,qs),
(605,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
55 1 0 2 1 76 10 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 15 14 58 56 54 52 51 49 43 40 23 21 14 59 15 59 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
4 1 3 1 40 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 43 41 36 34 27 25 17 15 8 7 0 44 1 44 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,451,qs),
(155,455,o),
(155,457,q),
(160,476,o),
(185,479,q),
(169,502,o),
(169,529,qs),
(169,559,o),
(205,598,o),
(232,598,qs),
(252,598,o),
(283,577,o),
(283,564,qs),
(283,559,o),
(278,562,qs),
(276,563,o),
(273,565,qs),
(267,568,o),
(264,570,qs),
(251,576,o),
(239,576,qs),
(194,576,o),
(194,529,qs),
(194,507,o),
(218,479,o),
(238,479,qs),
(286,479,ls),
(304,479,o),
(304,461,qs),
(304,459,ls),
(304,458,o),
(302,458,qs),
(221,458,ls),
(190,458,o),
(165,450,qs),
(163,449,o),
(160,448,qs),
(158,447,o),
(157,447,qs),
(155,447,o)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
36 1 5 0 44 1 6 5 63 1 4 10 3 76 34 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 11 1 4 4 8 97 0 8 8 24 77 12 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 12 1 9 0 7 9 7 101 11 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
69 68 41 40 77 75 68 81 69 81 66 64 62 60 54 52 48 47 40 67 41 67 41 35 52 37 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 23 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
29 28 1 0 37 35 28 41 29 41 26 24 22 20 14 12 8 7 0 27 1 27 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,70,o),
(102,31,q),
(86,12,o),
(60,-35,qs),
(45,-63,o),
(41,-79,q),
(65,-84,o),
(65,-108,qs),
(65,-120,o),
(48,-137,o),
(37,-137,qs),
(8,-137,o),
(8,-104,qs),
(8,-83,o),
(40,-19,o),
(65,9,q),
(42,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
31 1 1 0 14 1 2 1 24 1 3 2 3 76 0 0 1 0 133 0 3 2 3 134 0 1 1 2 97 0 2 2 24 2 78 37 33 39 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,-9,o),
(541,-35,qs),
(526,-63,o),
(522,-79,q),
(546,-84,o),
(546,-108,qs),
(546,-120,o),
(529,-137,o),
(518,-137,qs),
(490,-137,o),
(490,-104,qs),
(490,-62,o),
(538,0,q),
(371,0,ls),
(358,0,o),
(358,-21,qs),
(358,-28,o),
(358,-29,qs),
(358,-120,o),
(313,-168,qs),
(271,-214,o),
(198,-214,qs),
(123,-214,o),
(82,-162,qs),
(47,-117,o),
(47,-43,qs),
(47,-16,o),
(51,4,q),
(41,0,o),
(-6,0,q),
(-6,23,l),
(10,23,ls),
(53,23,o),
(72,42,qs),
(77,48,o),
(82,48,qs),
(90,48,o),
(88,38,qs),
(87,34,o),
(86,30,qs),
(76,-11,o),
(76,-44,qs),
(76,-102,o),
(98,-136,qs),
(114,-161,o),
(168,-191,o),
(198,-191,qs),
(265,-191,o),
(299,-144,qs),
(327,-105,o),
(328,-46,qs),
(328,-43,o),
(328,-38,qs),
(328,1,o),
(341,23,o),
(365,23,qs),
(613,23,l),
(613,0,l),
(561,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
30 1 4 0 54 1 7 4 2 76 0 2 0 2 133 0 7 4 1 4 7 1 128 0 1 0 5 1 5 101 3 1 0 0 4 95 9 8 6 3 4 4 24 4 78 0 0 0 58 0 58 35 38 38 17 35 25 39 33 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(781,0,l),
(751,0,ls),
(659,0,o),
(630,80,q),
(594,0,o),
(502,0,qs),
(336,0,ls),
(291,0,o),
(278,11,q),
(264,0,o),
(219,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(241,23,l),
(196,39,o),
(166,81,qs),
(133,128,o),
(133,187,qs),
(133,238,o),
(176,320,o),
(213,340,q),
(163,342,o),
(140,349,qs),
(108,359,o),
(106,381,qs),
(106,383,ls),
(106,389,o),
(112,386,q),
(113,386,o),
(116,384,qs),
(125,380,o),
(130,378,qs),
(165,365,o),
(262,362,qs),
(338,358,o),
(455,358,qs),
(647,358,o),
(647,168,qs),
(647,143,ls),
(647,87,o),
(702,23,o),
(749,23,qs),
(781,23,l)
);
},
{
closed = 1;
nodes = (
(551,23,o),
(584,57,qs),
(621,96,o),
(621,168,qs),
(621,334,o),
(452,335,qs),
(392,335,o),
(347,337,q),
(382,316,o),
(422,236,o),
(422,187,qs),
(422,131,o),
(361,40,o),
(313,23,q),
(498,23,ls)
);
},
{
closed = 1;
nodes = (
(185,101,qs),
(218,48,o),
(278,33,q),
(330,47,o),
(362,89,qs),
(396,133,o),
(396,187,qs),
(396,249,o),
(364,289,qs),
(330,333,o),
(278,333,qs),
(232,333,o),
(200,299,qs),
(159,258,o),
(159,187,qs),
(159,141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
75 43 2 0 7 38 1 4 0 2 76 17 1 1 74 0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 48 48 1 0 68 66 48 62 48 61 57 54 46 44 42 39 37 32 30 28 21 20 9 5 0 47 1 47 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,168,qs),
(611,93,o),
(575,49,qs),
(536,0,o),
(466,0,qs),
(300,0,ls),
(255,0,o),
(242,11,q),
(228,0,o),
(183,0,qs),
(-6,0,l),
(-6,23,l),
(205,23,l),
(160,39,o),
(130,81,qs),
(97,128,o),
(97,187,qs),
(97,238,o),
(140,320,o),
(177,340,q),
(127,342,o),
(105,349,qs),
(72,360,o),
(70,381,qs),
(70,383,ls),
(70,389,o),
(76,386,q),
(77,386,o),
(81,384,qs),
(89,380,o),
(94,378,qs),
(129,365,o),
(226,362,qs),
(302,358,o),
(420,358,qs),
(611,358,o)
);
},
{
closed = 1;
nodes = (
(515,23,o),
(548,57,qs),
(585,96,o),
(585,168,qs),
(585,334,o),
(416,335,qs),
(356,335,o),
(311,337,q),
(346,316,o),
(386,236,o),
(386,187,qs),
(386,131,o),
(325,40,o),
(277,23,q),
(462,23,ls)
);
},
{
closed = 1;
nodes = (
(149,101,qs),
(182,48,o),
(242,33,q),
(294,47,o),
(326,89,qs),
(360,133,o),
(360,187,qs),
(360,249,o),
(329,289,qs),
(295,333,o),
(242,333,qs),
(196,333,o),
(164,299,qs),
(123,258,o),
(123,187,qs),
(123,141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
63 1 2 5 27 1 3 2 2 76 11 1 0 74 0 1 0 5 5 1 114 8 1 0 7 1 5 2 0 5 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 36 36 3 0 56 54 36 50 36 49 45 42 31 28 26 24 23 22 15 14 0 35 3 35 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,0,l),
(715,0,ls),
(623,0,o),
(595,80,q),
(558,0,o),
(466,0,qs),
(300,0,ls),
(255,0,o),
(242,11,q),
(228,0,o),
(183,0,qs),
(-6,0,l),
(-6,23,l),
(205,23,l),
(160,39,o),
(130,81,qs),
(97,128,o),
(97,187,qs),
(97,238,o),
(140,320,o),
(177,340,q),
(127,342,o),
(105,349,qs),
(72,360,o),
(70,381,qs),
(70,383,ls),
(70,389,o),
(76,386,q),
(77,386,o),
(81,384,qs),
(89,380,o),
(94,378,qs),
(129,365,o),
(226,362,qs),
(302,358,o),
(420,358,qs),
(611,358,o),
(611,168,qs),
(611,143,ls),
(611,87,o),
(666,23,o),
(713,23,qs),
(745,23,l)
);
},
{
closed = 1;
nodes = (
(515,23,o),
(548,57,qs),
(585,96,o),
(585,168,qs),
(585,334,o),
(416,335,qs),
(356,335,o),
(311,337,q),
(346,316,o),
(386,236,o),
(386,187,qs),
(386,131,o),
(325,40,o),
(277,23,q),
(462,23,ls)
);
},
{
closed = 1;
nodes = (
(149,101,qs),
(182,48,o),
(242,33,q),
(294,47,o),
(326,89,qs),
(360,133,o),
(360,187,qs),
(360,249,o),
(329,289,qs),
(295,333,o),
(242,333,qs),
(196,333,o),
(164,299,qs),
(123,258,o),
(123,187,qs),
(123,141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
70 38 2 0 7 33 1 4 0 2 76 17 1 1 74 0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 43 43 1 0 63 61 43 57 43 56 52 49 41 39 37 34 32 30 29 28 21 20 9 5 0 42 1 42 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 740;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(528,23,l),
(528,0,l),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
6 1 1 2 1 76 0 1 4 1 0 1 0 101 0 3 3 2 95 0 2 2 24 2 78 1 0 25 23 22 20 14 12 0 31 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,119,qs),
(186,123,o),
(186,125,q),
(191,144,o),
(216,147,q),
(200,169,o),
(200,197,qs),
(200,227,o),
(236,266,o),
(263,266,qs),
(283,266,o),
(314,245,o),
(314,232,qs),
(314,227,o),
(309,229,qs),
(307,230,o),
(304,232,qs),
(298,236,o),
(295,238,qs),
(282,244,o),
(270,244,qs),
(225,244,o),
(225,197,qs),
(225,174,o),
(249,147,o),
(269,147,qs),
(317,147,ls),
(335,147,o),
(335,129,qs),
(335,127,ls),
(335,126,o),
(333,126,qs),
(253,126,ls),
(221,126,o),
(196,118,qs),
(194,117,o),
(191,116,qs),
(189,115,o),
(188,115,qs),
(186,115,o)
);
},
{
closed = 1;
nodes = (
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(528,23,l),
(528,0,l),
(260,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
36 1 4 0 56 1 6 7 2 76 34 1 1 1 75 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 6 0 5 6 5 101 0 4 4 7 95 8 1 7 7 24 7 78 40 40 40 71 40 70 43 38 43 41 35 52 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,462,o),
(178,449,qs),
(178,437,o),
(162,420,o),
(150,420,qs),
(138,420,o),
(122,437,o),
(122,449,qs),
(122,462,o),
(138,478,o),
(150,478,qs),
(162,478,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-96,o),
(132,-108,qs),
(132,-120,o),
(116,-137,o),
(104,-137,qs),
(92,-137,o),
(76,-120,o),
(76,-108,qs),
(76,-95,o),
(92,-79,o),
(104,-79,qs),
(116,-79,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 18 16 9 8 0 19 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 24 22 20 18 17 15 8 7 0 25 1 25 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(640,0,l),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(640,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 34 33 30 28 22 20 12 10 7 3 0 35 1 35 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(82,-97,o),
(82,-108,qs),
(82,-119,o),
(68,-134,o),
(57,-134,qs),
(46,-134,o),
(31,-119,o),
(31,-108,qs),
(31,-97,o),
(46,-82,o),
(57,-82,qs),
(68,-82,o)
);
},
{
closed = 1;
nodes = (
(167,-97,o),
(167,-108,qs),
(167,-119,o),
(153,-134,o),
(142,-134,qs),
(131,-134,o),
(116,-119,o),
(116,-108,qs),
(116,-97,o),
(131,-82,o),
(142,-82,qs),
(153,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
5 1 2 1 1 76 0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 97 7 1 0 0 24 0 78 33 32 21 20 1 0 39 37 32 43 33 43 27 25 20 31 21 31 18 16 9 8 0 19 1 19 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
},
{
closed = 1;
nodes = (
(98,-134,o),
(87,-134,qs),
(76,-134,o),
(61,-119,o),
(61,-108,qs),
(61,-97,o),
(76,-82,o),
(87,-82,qs),
(98,-82,o),
(112,-97,o),
(112,-108,qs),
(112,-119,o)
);
},
{
closed = 1;
nodes = (
(197,-97,o),
(197,-108,qs),
(197,-119,o),
(183,-134,o),
(172,-134,qs),
(161,-134,o),
(146,-119,o),
(146,-108,qs),
(146,-97,o),
(161,-82,o),
(172,-82,qs),
(183,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 97 4 1 3 3 24 3 78 39 38 1 0 45 43 38 49 39 49 36 34 30 28 24 22 20 18 17 15 8 7 0 25 1 25 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,341,o),
(803,338,qs),
(803,143,ls),
(803,78,o),
(771,41,qs),
(736,0,o),
(672,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(674,23,ls),
(720,23,o),
(747,53,qs),
(777,85,o),
(777,143,qs),
(777,307,ls),
(777,324,o),
(781,332,qs),
(787,341,o),
(798,341,qs),
(801,341,ls)
);
},
{
closed = 1;
nodes = (
(725,-96,o),
(725,-108,qs),
(725,-120,o),
(708,-137,o),
(696,-137,qs),
(685,-137,o),
(669,-120,o),
(669,-108,qs),
(669,-95,o),
(684,-79,o),
(696,-79,qs),
(708,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
49 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 9 1 7 0 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 53 52 59 57 52 63 53 63 35 38 40 35 66 55 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,341,o),
(803,338,qs),
(803,143,ls),
(803,78,o),
(771,41,qs),
(736,0,o),
(672,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(674,23,ls),
(720,23,o),
(747,53,qs),
(777,85,o),
(777,143,qs),
(777,307,ls),
(777,324,o),
(781,332,qs),
(787,341,o),
(798,341,qs),
(801,341,ls)
);
},
{
closed = 1;
nodes = (
(725,-96,o),
(725,-108,qs),
(725,-120,o),
(708,-137,o),
(696,-137,qs),
(685,-137,o),
(669,-120,o),
(669,-108,qs),
(669,-95,o),
(684,-79,o),
(696,-79,qs),
(708,-79,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
49 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 13 1 7 0 8 3 7 8 105 0 3 0 5 9 3 5 105 15 11 14 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 77 76 65 64 53 52 83 81 76 87 77 87 71 69 64 75 65 75 59 57 52 63 53 63 35 38 40 35 66 55 16 16 7 29 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(763,443,o),
(763,455,qs),
(763,467,o),
(779,484,o),
(791,484,qs),
(803,484,o),
(819,467,o),
(819,455,qs),
(819,443,o),
(803,426,o),
(791,426,qs),
(779,426,o)
);
},
{
closed = 1;
nodes = (
(894,313,qs),
(942,261,o),
(942,179,qs),
(942,109,o),
(906,61,qs),
(864,3,o),
(792,0,q),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(705,23,l),
(631,71,o),
(631,179,qs),
(631,250,o),
(668,300,qs),
(712,360,o),
(786,360,qs),
(851,360,o)
);
},
{
closed = 1;
nodes = (
(876,63,qs),
(916,107,o),
(916,178,qs),
(916,241,o),
(885,285,qs),
(848,337,o),
(786,337,qs),
(733,337,o),
(697,296,qs),
(657,251,o),
(657,178,qs),
(657,117,o),
(688,74,qs),
(725,23,o),
(786,23,qs),
(840,23,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 17 9 2 3 3 4 95 8 1 4 4 24 4 78 90 89 78 77 62 61 13 12 1 0 96 94 89 100 90 100 84 82 77 88 78 88 70 68 61 76 62 76 54 52 49 47 41 39 31 29 26 22 20 18 12 60 13 60 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1006;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
0 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 12 9 11 3 7 10 1 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 97 6 1 2 2 24 2 78 65 64 53 52 71 69 64 75 65 75 59 57 52 63 53 63 35 38 40 35 66 55 19 13 7 29 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,78,o),
(746,41,qs),
(711,0,o),
(647,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(649,23,ls),
(695,23,o),
(722,53,qs),
(752,85,o),
(752,143,qs),
(752,307,ls),
(752,324,o),
(756,332,qs),
(762,341,o),
(773,341,qs),
(776,341,ls),
(778,341,o),
(778,338,qs),
(778,143,ls)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
0 1 4 0 1 76 0 0 4 0 133 0 4 1 4 133 16 9 15 3 7 10 1 8 3 7 8 105 0 3 0 5 11 3 5 105 18 13 17 3 11 14 1 12 11 12 101 0 1 1 2 97 6 1 2 2 24 2 78 89 88 77 76 65 64 53 52 95 93 88 99 89 99 83 81 76 87 77 87 71 69 64 75 65 75 59 57 52 63 53 63 35 38 40 35 66 55 19 19 7 29 
CALL[ ]	/* CallFunction */";
};
width = 853;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,798,o),
(227,774,qs),
(226,748,o),
(188,718,q),
(202,704,o),
(190,692,qs),
(189,691,ls),
(187,689,o),
(184,692,qs),
(172,704,l),
(153,688,ls),
(140,679,o),
(128,679,qs),
(114,679,o),
(93,698,qs),
(76,713,o),
(67,713,qs),
(56,713,o),
(42,687,qs),
(40,684,o),
(37,687,qs),
(27,698,o),
(36,718,qs),
(45,735,o),
(65,735,qs),
(84,735,o),
(108,713,qs),
(122,702,o),
(128,702,qs),
(136,702,o),
(145,709,qs),
(155,718,l),
(121,741,o),
(120,775,qs),
(120,798,o),
(151,828,o),
(174,828,qs),
(198,828,o)
);
},
{
closed = 1;
nodes = (
(188,809,o),
(175,809,qs),
(160,809,o),
(142,790,o),
(143,774,qs),
(145,754,o),
(172,732,q),
(204,755,o),
(205,774,qs),
(206,788,o)
);
},
{
closed = 1;
nodes = (
(225,594,o),
(225,592,qs),
(225,543,ls),
(225,477,o),
(172,476,qs),
(144,475,o),
(128,497,q),
(112,475,o),
(87,476,qs),
(31,477,o),
(31,543,qs),
(31,560,ls),
(31,577,o),
(35,585,qs),
(41,594,o),
(51,594,qs),
(53,594,ls),
(55,594,o),
(55,592,qs),
(55,537,ls),
(55,498,o),
(86,498,qs),
(116,498,o),
(116,537,qs),
(116,560,ls),
(116,577,o),
(120,585,qs),
(126,594,o),
(136,594,qs),
(138,594,ls),
(140,594,o),
(140,592,qs),
(140,537,ls),
(140,498,o),
(170,498,qs),
(201,498,o),
(201,537,qs),
(201,560,ls),
(201,577,o),
(205,585,qs),
(211,594,o),
(221,594,qs),
(223,594,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
42 38 2 2 5 40 33 5 3 3 2 27 1 1 3 28 16 2 4 1 88 71 58 3 6 4 83 1 8 6 6 76 10 1 0 0 5 2 0 5 105 0 2 0 3 1 2 3 105 0 1 0 4 6 1 4 105 7 1 6 8 8 6 89 7 1 6 6 8 97 9 1 8 6 8 81 1 0 86 84 82 80 69 67 56 54 46 44 25 23 21 19 13 11 8 7 0 37 1 37 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,774,o),
(221,771,qs),
(221,722,ls),
(221,657,o),
(168,656,qs),
(140,655,o),
(124,677,q),
(108,655,o),
(83,656,qs),
(27,657,o),
(27,722,qs),
(27,739,ls),
(27,757,o),
(31,764,qs),
(37,774,o),
(47,774,qs),
(49,774,ls),
(51,774,o),
(51,771,qs),
(51,717,ls),
(51,677,o),
(82,677,qs),
(112,677,o),
(112,717,qs),
(112,739,ls),
(112,757,o),
(116,764,qs),
(122,774,o),
(132,774,qs),
(134,774,ls),
(136,774,o),
(136,771,qs),
(136,717,ls),
(136,677,o),
(166,677,qs),
(197,677,o),
(197,717,qs),
(197,739,ls),
(197,757,o),
(201,764,qs),
(207,774,o),
(217,774,qs),
(219,774,ls)
);
},
{
closed = 1;
nodes = (
(197,559,qs),
(197,557,ls),
(197,556,o),
(195,556,qs),
(115,556,ls),
(83,556,o),
(58,548,qs),
(56,547,o),
(53,546,qs),
(50,545,l),
(48,545,o),
(48,549,qs),
(48,553,o),
(48,555,q),
(53,577,o),
(95,577,qs),
(179,577,ls),
(197,577,o)
);
},
{
closed = 1;
nodes = (
(197,486,qs),
(197,484,ls),
(197,482,o),
(195,482,qs),
(115,482,ls),
(83,482,o),
(58,474,q),
(56,474,o),
(53,473,qs),
(50,472,l),
(48,472,o),
(48,476,qs),
(48,479,o),
(48,482,q),
(53,504,o),
(95,504,qs),
(179,504,ls),
(197,504,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
40 23 10 3 1 0 46 1 9 8 2 76 35 1 1 1 75 64 1 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
4 2 2 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 11 1 7 0 8 9 7 8 103 12 1 9 10 10 9 87 12 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
4 2 2 0 1 0 133 3 1 1 6 1 5 7 1 5 106 11 1 7 0 8 9 7 8 103 12 1 9 10 10 9 87 12 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
63 61 45 43 74 72 61 78 63 78 56 54 43 60 45 60 34 37 21 37 21 37 16 13 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,676,qs),
(47,679,o),
(48,682,qs),
(53,704,o),
(94,704,qs),
(178,704,ls),
(196,704,o),
(196,686,qs),
(196,684,ls),
(196,682,o),
(194,682,qs),
(114,682,ls),
(82,682,o),
(57,674,q),
(55,674,o),
(52,673,qs),
(50,672,o),
(49,672,qs),
(47,672,o)
);
},
{
closed = 1;
nodes = (
(221,594,o),
(221,592,qs),
(221,543,ls),
(221,477,o),
(168,476,qs),
(140,475,o),
(124,497,q),
(108,475,o),
(83,476,qs),
(27,477,o),
(27,543,qs),
(27,560,ls),
(27,577,o),
(31,585,qs),
(37,594,o),
(47,594,qs),
(49,594,ls),
(51,594,o),
(51,592,qs),
(51,537,ls),
(51,498,o),
(82,498,qs),
(112,498,o),
(112,537,qs),
(112,560,ls),
(112,577,o),
(116,585,qs),
(122,594,o),
(132,594,qs),
(134,594,ls),
(136,594,o),
(136,592,qs),
(136,537,ls),
(136,498,o),
(166,498,qs),
(197,498,o),
(197,537,qs),
(197,560,ls),
(197,577,o),
(201,585,qs),
(207,594,o),
(217,594,qs),
(219,594,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
59 42 29 17 4 2 0 54 1 4 2 2 76 0 1 0 0 2 1 0 103 3 1 2 4 4 2 89 3 1 2 2 4 97 5 1 4 2 4 81 34 43 43 43 52 37 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,687,o),
(48,688,qs),
(54,691,o),
(62,695,qs),
(95,714,o),
(123,734,q),
(90,759,o),
(89,791,qs),
(88,814,o),
(119,844,o),
(143,844,qs),
(168,844,o),
(198,814,o),
(197,791,qs),
(196,763,o),
(157,734,q),
(171,720,o),
(159,708,qs),
(156,705,o),
(153,708,qs),
(140,720,l),
(97,689,o),
(78,681,qs),
(68,676,o),
(64,676,qs),
(57,676,o),
(50,683,qs),
(48,685,ls)
);
},
{
closed = 1;
nodes = (
(140,748,q),
(174,770,o),
(175,791,qs),
(176,805,o),
(158,825,o),
(144,825,qs),
(129,825,o),
(111,806,o),
(112,791,qs),
(114,770,o)
);
},
{
closed = 1;
nodes = (
(221,594,o),
(221,592,qs),
(221,543,ls),
(221,477,o),
(168,476,qs),
(140,475,o),
(124,497,q),
(108,475,o),
(83,476,qs),
(27,477,o),
(27,543,qs),
(27,560,ls),
(27,577,o),
(31,585,qs),
(37,594,o),
(47,594,qs),
(49,594,ls),
(51,594,o),
(51,592,qs),
(51,537,ls),
(51,498,o),
(82,498,qs),
(112,498,o),
(112,537,qs),
(112,560,ls),
(112,577,o),
(116,585,qs),
(122,594,o),
(132,594,qs),
(134,594,ls),
(136,594,o),
(136,592,qs),
(136,537,ls),
(136,498,o),
(166,498,qs),
(197,498,o),
(197,537,qs),
(197,560,ls),
(197,577,o),
(201,585,qs),
(207,594,o),
(217,594,qs),
(219,594,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
36 34 28 25 21 11 7 6 8 0 2 78 61 48 3 3 0 73 1 5 3 3 76 0 0 2 3 2 0 3 128 0 1 0 2 0 1 2 105 4 1 3 5 5 3 89 4 1 3 3 5 97 6 1 5 3 5 81 34 43 43 44 45 45 17 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,702,o),
(221,699,qs),
(221,650,ls),
(221,584,o),
(168,583,qs),
(140,582,o),
(124,604,q),
(108,582,o),
(83,583,qs),
(27,584,o),
(27,650,qs),
(27,667,ls),
(27,684,o),
(31,692,qs),
(37,702,o),
(47,702,qs),
(49,702,ls),
(51,702,o),
(51,699,qs),
(51,644,ls),
(51,605,o),
(82,605,qs),
(112,605,o),
(112,644,qs),
(112,667,ls),
(112,684,o),
(116,692,qs),
(122,702,o),
(132,702,qs),
(134,702,ls),
(136,702,o),
(136,699,qs),
(136,644,ls),
(136,605,o),
(166,605,qs),
(197,605,o),
(197,644,qs),
(197,667,ls),
(197,684,o),
(201,692,qs),
(207,702,o),
(217,702,qs),
(219,702,ls)
);
},
{
closed = 1;
nodes = (
(197,486,qs),
(197,484,ls),
(197,482,o),
(195,482,qs),
(115,482,ls),
(83,482,o),
(58,474,q),
(56,474,o),
(53,473,qs),
(50,472,l),
(48,472,o),
(48,476,qs),
(48,479,o),
(48,482,q),
(53,504,o),
(95,504,qs),
(179,504,ls),
(197,504,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
40 23 10 3 1 0 35 1 5 1 2 76 46 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
4 2 2 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 9 1 7 8 8 7 87 9 1 7 7 8 95 0 8 7 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
4 2 2 0 1 0 133 3 1 1 6 1 5 7 1 5 106 9 1 7 8 8 7 87 9 1 7 7 8 95 0 8 7 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
45 43 56 54 43 60 45 60 34 37 21 37 21 37 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,738,qs),
(105,748,o),
(104,754,qs),
(103,767,o),
(117,772,qs),
(119,773,o),
(120,773,qs),
(124,773,o),
(127,766,qs),
(147,721,o),
(133,665,qs),
(131,659,o),
(128,654,qs),
(126,651,o),
(121,652,o),
(121,656,qs),
(121,700,o),
(112,728,qs),
(111,732,o)
);
},
{
closed = 1;
nodes = (
(222,592,o),
(222,589,qs),
(222,543,ls),
(222,477,o),
(167,476,qs),
(140,475,o),
(124,497,q),
(107,475,o),
(82,476,qs),
(27,477,o),
(27,543,qs),
(27,557,ls),
(27,574,o),
(31,582,qs),
(37,592,o),
(48,592,qs),
(50,592,ls),
(52,592,o),
(52,589,qs),
(52,537,ls),
(52,498,o),
(82,498,qs),
(112,498,o),
(112,537,qs),
(112,557,ls),
(112,574,o),
(116,582,qs),
(122,592,o),
(133,592,qs),
(135,592,ls),
(137,592,o),
(137,589,qs),
(137,537,ls),
(137,498,o),
(167,498,qs),
(197,498,o),
(197,537,qs),
(197,557,ls),
(197,574,o),
(201,582,qs),
(207,592,o),
(218,592,qs),
(220,592,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
59 42 29 3 1 0 54 1 5 1 2 76 2 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 2 2 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 2 2 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
57 55 53 51 46 45 40 38 33 32 27 25 20 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(731,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
4 1 5 1 53 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 97 8 7 2 3 3 24 3 78 71 70 59 58 1 0 77 75 70 81 71 81 65 63 58 69 59 69 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(870,0,l),
(852,0,ls),
(765,0,o),
(734,72,q),
(704,0,o),
(617,0,qs),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(619,23,ls),
(665,23,o),
(692,53,qs),
(721,85,o),
(721,143,qs),
(721,307,ls),
(721,324,o),
(726,332,qs),
(732,341,o),
(742,341,qs),
(745,341,ls),
(747,341,o),
(747,338,qs),
(747,143,ls),
(747,87,o),
(802,23,o),
(850,23,qs),
(870,23,l)
);
},
{
closed = 1;
nodes = (
(717,-97,o),
(717,-108,qs),
(717,-119,o),
(703,-134,o),
(692,-134,qs),
(681,-134,o),
(666,-119,o),
(666,-108,qs),
(666,-97,o),
(681,-82,o),
(692,-82,qs),
(703,-82,o)
);
},
{
closed = 1;
nodes = (
(802,-97,o),
(802,-108,qs),
(802,-119,o),
(788,-134,o),
(777,-134,qs),
(766,-134,o),
(751,-119,o),
(751,-108,qs),
(751,-97,o),
(766,-82,o),
(777,-82,qs),
(788,-82,o)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 123 values pushed */
4 1 5 1 53 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 4 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 97 8 7 2 3 3 24 3 78 95 94 83 82 71 70 59 58 1 0 101 99 94 105 95 105 89 87 82 93 83 93 77 75 70 81 71 81 65 63 58 69 59 69 56 54 52 50 47 45 39 37 29 27 24 20 18 15 8 7 0 57 1 57 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(620,765,q),
(616,776,o),
(616,782,qs),
(615,795,o),
(629,800,q),
(630,801,o),
(631,801,qs),
(635,801,o),
(639,793,qs),
(659,749,o),
(644,693,qs),
(643,687,o),
(639,682,qs),
(637,679,o),
(633,680,o),
(633,683,qs),
(632,728,o),
(624,756,qs),
(623,760,o)
);
},
{
closed = 1;
nodes = (
(539,571,qs),
(539,585,ls),
(539,602,o),
(543,610,qs),
(549,619,o),
(560,619,qs),
(561,619,ls),
(564,619,o),
(564,617,qs),
(564,565,ls),
(564,526,o),
(594,526,qs),
(624,526,o),
(624,565,qs),
(624,585,ls),
(624,602,o),
(628,610,qs),
(634,619,o),
(645,619,qs),
(646,619,ls),
(649,619,o),
(649,617,qs),
(649,565,ls),
(649,526,o),
(679,526,qs),
(709,526,o),
(709,565,qs),
(709,585,ls),
(709,602,o),
(713,610,qs),
(719,619,o),
(730,619,qs),
(731,619,ls),
(734,619,o),
(734,617,qs),
(734,571,ls),
(734,505,o),
(679,504,qs),
(652,503,o),
(635,525,q),
(619,503,o),
(594,504,qs),
(539,505,o)
);
},
{
closed = 1;
nodes = (
(914,417,o),
(914,414,qs),
(914,143,ls),
(914,78,o),
(882,41,qs),
(847,0,o),
(784,0,qs),
(753,0,ls),
(666,0,o),
(635,72,q),
(605,0,o),
(518,0,qs),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(519,23,ls),
(565,23,o),
(592,53,qs),
(622,85,o),
(622,143,qs),
(622,383,ls),
(622,400,o),
(626,408,qs),
(632,417,o),
(643,417,qs),
(646,417,ls),
(648,417,o),
(648,414,qs),
(648,143,ls),
(648,87,o),
(703,23,o),
(751,23,qs),
(785,23,ls),
(831,23,o),
(859,53,qs),
(888,85,o),
(888,143,qs),
(888,383,ls),
(888,400,o),
(893,408,qs),
(898,417,o),
(909,417,qs),
(912,417,ls)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
},
{
closed = 1;
nodes = (
(1070,0,o),
(1070,3,qs),
(1070,521,ls),
(1070,538,o),
(1074,546,qs),
(1080,556,o),
(1091,556,qs),
(1094,556,ls),
(1096,556,o),
(1096,553,qs),
(1096,34,ls),
(1096,17,o),
(1091,9,qs),
(1086,0,o),
(1075,0,qs),
(1072,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
147 1 2 16 21 1 0 2 125 93 76 3 9 4 117 112 2 5 14 155 1 11 13 5 76 52 39 26 2 4 16 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
8 6 2 4 0 9 0 4 9 128 3 1 2 1 17 2 0 4 2 0 105 0 9 0 14 5 9 14 103 0 16 16 23 77 7 1 5 5 11 97 15 12 2 11 11 24 77 18 1 13 13 10 97 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
8 6 2 4 0 9 0 4 9 128 3 1 2 1 17 2 0 4 2 0 105 0 9 0 14 5 9 14 103 18 1 13 0 10 13 10 101 0 16 16 23 77 7 1 5 5 11 97 15 12 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
129 128 20 19 151 150 143 142 137 135 128 141 129 141 121 118 116 113 111 109 103 101 97 96 90 87 80 79 73 70 63 62 50 48 37 35 24 22 19 61 20 61 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1173;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,16,o),
(298,29,qs),
(307,39,ls),
(316,51,o),
(315,89,qs),
(315,94,o),
(315,96,qs),
(315,211,l),
(443,238,l),
(443,69,l),
(655,114,l),
(662,129,o),
(666,147,q),
(473,106,l),
(473,244,l),
(655,283,l),
(663,302,o),
(666,316,q),
(473,275,l),
(473,550,l),
(460,538,o),
(443,518,q),
(443,268,l),
(315,241,l),
(315,588,l),
(302,576,o),
(285,558,q),
(285,235,l),
(101,196,l),
(93,176,o),
(90,163,q),
(285,204,l),
(285,45,l),
(64,-2,l),
(56,-22,o),
(53,-35,q),
(254,9,ls)
);
},
{
closed = 1;
nodes = (
(449,-85,q),
(655,-41,l),
(663,-21,o),
(666,-8,q),
(460,-52,l),
(452,-71,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 38 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 720;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,656,qs),
(62,672,o),
(50,672,qs),
(41,672,o),
(32,664,o),
(22,646,qs),
(20,642,o),
(17,646,qs),
(13,652,o),
(13,661,qs),
(13,694,o),
(47,694,qs),
(62,694,o),
(92,681,qs),
(129,664,o),
(141,664,qs),
(150,664,o),
(159,673,o),
(169,691,qs),
(171,695,o),
(174,691,qs),
(178,685,o),
(178,676,qs),
(178,643,o),
(144,643,qs),
(129,643,o)
);
},
{
closed = 1;
nodes = (
(153,0,o),
(119,31,qs),
(77,69,o),
(77,143,qs),
(77,521,ls),
(77,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(101,556,ls),
(104,556,o),
(104,553,qs),
(104,143,ls),
(104,87,o),
(158,23,o),
(206,23,qs),
(237,23,l),
(237,0,l),
(208,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
32 1 4 5 1 76 0 2 0 3 1 2 3 105 0 1 7 1 0 5 1 0 105 0 5 5 23 77 0 4 4 6 97 8 1 6 6 24 6 78 26 26 1 0 26 44 26 43 36 35 29 27 23 21 14 12 10 8 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,651,o),
(28,643,q),
(26,643,o),
(23,642,qs),
(21,641,o),
(20,641,qs),
(18,641,o),
(18,644,qs),
(18,648,o),
(19,651,qs),
(23,670,o),
(49,672,q),
(32,695,o),
(32,723,qs),
(32,753,o),
(68,791,o),
(95,791,qs),
(115,791,o),
(146,771,o),
(146,758,qs),
(146,753,o),
(141,755,qs),
(139,756,o),
(136,758,qs),
(130,762,o),
(127,763,qs),
(115,769,o),
(102,769,qs),
(57,769,o),
(57,722,qs),
(57,700,o),
(81,673,o),
(101,673,qs),
(149,673,ls),
(167,673,o),
(167,654,qs),
(167,653,ls),
(167,651,o),
(165,651,qs),
(85,651,ls)
);
},
{
closed = 1;
nodes = (
(237,0,l),
(208,0,ls),
(153,0,o),
(119,31,qs),
(77,69,o),
(77,143,qs),
(77,521,ls),
(77,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(101,556,ls),
(104,556,o),
(104,553,qs),
(104,143,ls),
(104,87,o),
(158,23,o),
(206,23,qs),
(237,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
27 1 3 0 35 31 2 5 3 44 1 4 5 3 76 0 2 0 1 0 2 1 105 0 0 7 1 3 5 0 3 103 0 5 5 23 77 8 1 4 4 6 97 0 6 6 24 6 78 41 40 0 0 57 55 48 47 40 58 41 58 0 39 0 38 41 35 52 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,451,qs),
(146,455,o),
(147,457,q),
(152,476,o),
(177,479,q),
(161,502,o),
(161,529,qs),
(161,559,o),
(196,598,o),
(224,598,qs),
(243,598,o),
(274,577,o),
(274,564,qs),
(274,559,o),
(270,562,qs),
(268,563,o),
(265,565,qs),
(259,568,o),
(255,570,qs),
(243,576,o),
(230,576,qs),
(186,576,o),
(186,529,qs),
(186,507,o),
(210,479,o),
(229,479,qs),
(278,479,ls),
(296,479,o),
(296,461,qs),
(296,459,ls),
(296,458,o),
(294,458,qs),
(213,458,ls),
(182,458,o),
(156,450,qs),
(154,449,o),
(152,448,qs),
(149,447,o),
(149,447,q),
(146,447,o)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(381,0,l),
(377,-84,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(156,-214,o),
(123,-202,qs),
(96,-193,o),
(91,-183,qs),
(89,-180,o),
(93,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(343,-191,o),
(355,0,q),
(222,0,ls),
(157,0,o),
(115,45,qs),
(67,95,o),
(67,174,qs),
(67,252,o),
(104,302,qs),
(147,360,o),
(219,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o),
(383,107,qs),
(383,49,o),
(382,23,q),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(124,73,qs),
(161,23,o),
(223,23,qs),
(356,23,l),
(362,193,o),
(330,263,qs),
(296,337,o),
(220,337,qs),
(168,337,o),
(134,298,qs),
(93,253,o),
(93,174,qs),
(93,115,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
38 0 2 4 0 61 1 6 5 2 76 34 1 1 1 75 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 0 6 0 7 6 7 101 11 12 2 9 9 5 95 8 1 5 5 24 5 78 40 40 85 83 80 78 40 74 40 74 19 41 33 38 47 41 35 52 37 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,0,l),
(208,0,ls),
(153,0,o),
(119,31,qs),
(78,69,o),
(78,143,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,143,ls),
(104,87,o),
(159,23,o),
(207,23,qs),
(238,23,l)
);
},
{
closed = 1;
nodes = (
(189,-204,o),
(189,-222,qs),
(189,-224,ls),
(189,-226,o),
(187,-226,qs),
(107,-226,ls),
(75,-226,o),
(50,-233,q),
(48,-234,o),
(45,-235,qs),
(43,-236,o),
(42,-236,qs),
(40,-236,o),
(40,-232,qs),
(40,-228,o),
(41,-226,q),
(45,-207,o),
(71,-204,q),
(54,-182,o),
(54,-154,qs),
(54,-124,o),
(90,-86,o),
(117,-86,qs),
(137,-86,o),
(168,-106,o),
(168,-119,qs),
(168,-124,o),
(163,-122,qs),
(161,-121,o),
(158,-119,qs),
(152,-115,o),
(149,-113,qs),
(137,-107,o),
(124,-107,qs),
(79,-107,o),
(79,-154,qs),
(79,-177,o),
(103,-204,o),
(123,-204,qs),
(171,-204,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
4 1 0 1 1 76 40 1 3 1 75 44 1 6 73 0 5 0 4 3 5 4 105 8 1 3 0 6 3 6 99 0 1 1 23 77 7 1 0 0 2 97 0 2 2 24 2 78 20 19 1 0 53 51 36 34 25 23 19 58 20 57 17 15 8 7 0 18 1 18 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,277,qs),
(258,281,o),
(259,283,q),
(263,302,o),
(289,304,q),
(272,327,o),
(272,355,qs),
(272,385,o),
(308,423,o),
(335,423,qs),
(355,423,o),
(386,403,o),
(386,390,qs),
(386,385,o),
(381,387,qs),
(379,388,o),
(376,390,qs),
(370,394,o),
(367,396,qs),
(355,402,o),
(342,402,qs),
(297,402,o),
(297,354,qs),
(297,332,o),
(321,305,o),
(341,305,qs),
(389,305,ls),
(407,305,o),
(407,287,qs),
(407,285,ls),
(407,283,o),
(405,283,qs),
(325,283,ls),
(293,283,o),
(268,276,q),
(266,275,o),
(263,274,qs),
(261,273,o),
(260,273,qs),
(258,273,o)
);
},
{
closed = 1;
nodes = (
(640,0,l),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(640,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
34 1 0 1 38 1 7 0 2 76 0 7 0 4 0 7 4 128 0 3 0 2 1 3 2 105 0 1 0 0 7 1 0 103 0 6 0 8 6 8 101 10 1 4 4 5 95 9 1 5 5 24 5 78 41 40 74 73 70 68 62 60 52 50 47 43 40 75 41 75 41 35 52 37 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,458,o),
(203,440,qs),
(203,438,ls),
(203,437,o),
(201,437,qs),
(120,437,ls),
(89,437,o),
(63,429,qs),
(61,428,o),
(59,427,qs),
(56,426,l),
(53,426,o),
(53,430,qs),
(53,434,o),
(54,436,q),
(59,455,o),
(84,458,q),
(68,480,o),
(68,508,qs),
(68,538,o),
(103,577,o),
(131,577,qs),
(150,577,o),
(181,556,o),
(181,543,qs),
(181,538,o),
(177,541,qs),
(175,542,o),
(172,543,q),
(166,547,o),
(162,549,qs),
(150,555,o),
(137,555,qs),
(93,555,o),
(93,508,qs),
(93,486,o),
(117,458,o),
(136,458,qs),
(185,458,ls)
);
},
{
closed = 1;
nodes = (
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
27 25 2 4 3 56 1 5 4 2 76 21 1 0 1 75 0 4 3 5 3 4 5 128 0 2 0 1 0 2 1 105 7 1 0 0 3 4 0 3 103 0 5 5 6 97 0 6 6 24 6 78 1 0 52 50 49 47 40 39 33 31 17 15 6 4 0 38 1 37 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,430,qs),
(53,434,o),
(53,436,q),
(58,455,o),
(83,458,q),
(67,480,o),
(67,508,qs),
(67,538,o),
(103,577,o),
(130,577,qs),
(150,577,o),
(181,556,o),
(181,543,qs),
(181,538,o),
(176,541,qs),
(174,542,o),
(171,543,q),
(166,547,o),
(162,549,qs),
(150,555,o),
(137,555,qs),
(92,555,o),
(92,508,qs),
(92,486,o),
(116,458,o),
(136,458,qs),
(184,458,ls),
(202,458,o),
(202,440,qs),
(202,438,ls),
(202,437,o),
(200,437,qs),
(120,437,ls),
(88,437,o),
(63,429,qs),
(61,428,o),
(58,427,qs),
(56,426,o),
(55,426,qs),
(53,426,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
36 1 5 0 61 44 2 4 5 2 76 34 1 1 1 75 0 5 0 4 0 5 4 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 9 2 4 4 7 97 8 1 7 7 24 7 78 41 40 64 62 60 58 57 55 48 47 40 65 41 65 41 35 52 37 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,0,o),
(119,31,qs),
(78,69,o),
(78,143,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,143,ls),
(104,87,o),
(159,23,o),
(207,23,qs),
(238,23,l),
(238,0,l),
(209,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
6 1 0 1 1 76 0 1 1 23 77 0 0 0 2 97 3 1 2 2 24 2 78 0 0 0 18 0 17 22 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
},
{
closed = 1;
nodes = (
(401,-96,o),
(401,-108,qs),
(401,-120,o),
(385,-137,o),
(373,-137,qs),
(361,-137,o),
(345,-120,o),
(345,-108,qs),
(345,-95,o),
(361,-79,o),
(373,-79,qs),
(385,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
4 1 3 1 35 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 97 5 1 4 4 24 4 78 41 40 1 0 47 45 40 51 41 51 38 36 34 31 25 24 18 15 8 7 0 39 1 39 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(65,-96,o),
(65,-108,qs),
(65,-120,o),
(48,-137,o),
(36,-137,qs),
(24,-137,o),
(8,-120,o),
(8,-108,qs),
(8,-95,o),
(24,-79,o),
(36,-79,qs),
(48,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
5 1 2 1 1 76 0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 97 5 1 0 0 24 0 78 21 20 1 0 27 25 20 31 21 31 18 16 9 8 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
},
{
closed = 1;
nodes = (
(158,-96,o),
(158,-108,qs),
(158,-120,o),
(142,-137,o),
(130,-137,qs),
(118,-137,o),
(102,-120,o),
(102,-108,qs),
(102,-95,o),
(118,-79,o),
(130,-79,qs),
(142,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 97 4 1 3 3 24 3 78 27 26 1 0 33 31 26 37 27 37 24 22 20 18 17 15 8 7 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,462,o),
(169,473,qs),
(169,484,o),
(184,499,o),
(195,499,qs),
(205,499,o),
(220,484,o),
(220,473,qs),
(220,462,o),
(206,447,o),
(195,447,qs),
(184,447,o)
);
},
{
closed = 1;
nodes = (
(254,462,o),
(254,473,qs),
(254,484,o),
(269,499,o),
(280,499,qs),
(290,499,o),
(305,484,o),
(305,473,qs),
(305,462,o),
(291,447,o),
(280,447,qs),
(269,447,o)
);
},
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 6 5 47 1 4 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
53 52 25 24 13 12 1 0 61 59 52 65 53 65 50 48 46 44 38 36 32 31 24 51 25 51 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(309,387,o),
(309,398,qs),
(309,409,o),
(324,424,o),
(335,424,qs),
(346,424,o),
(360,409,o),
(360,398,qs),
(360,387,o),
(346,372,o),
(335,372,qs),
(324,372,o)
);
},
{
closed = 1;
nodes = (
(394,387,o),
(394,398,qs),
(394,409,o),
(409,424,o),
(420,424,qs),
(431,424,o),
(445,409,o),
(445,398,qs),
(445,387,o),
(431,372,o),
(420,372,qs),
(409,372,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
28 1 7 5 59 1 4 7 2 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 97 9 1 8 8 24 8 78 25 24 13 12 1 0 62 60 58 55 49 48 42 39 32 31 24 63 25 63 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,437,o),
(62,448,qs),
(62,459,o),
(77,474,o),
(88,474,qs),
(99,474,o),
(113,459,o),
(113,448,qs),
(113,437,o),
(99,422,o),
(88,422,qs),
(77,422,o)
);
},
{
closed = 1;
nodes = (
(147,437,o),
(147,448,qs),
(147,459,o),
(162,474,o),
(173,474,qs),
(184,474,o),
(198,459,o),
(198,448,qs),
(198,437,o),
(184,422,o),
(173,422,qs),
(162,422,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
29 1 6 5 1 76 0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 97 9 1 4 4 24 4 78 25 24 13 12 1 0 42 40 33 32 24 43 25 43 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,437,o),
(62,448,qs),
(62,459,o),
(77,474,o),
(88,474,qs),
(99,474,o),
(113,459,o),
(113,448,qs),
(113,437,o),
(99,422,o),
(88,422,qs),
(77,422,o)
);
},
{
closed = 1;
nodes = (
(147,437,o),
(147,448,qs),
(147,459,o),
(162,474,o),
(173,474,qs),
(184,474,o),
(198,459,o),
(198,448,qs),
(198,437,o),
(184,422,o),
(173,422,qs),
(162,422,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
45 28 2 4 5 1 76 0 5 0 4 0 5 4 128 3 1 1 10 2 9 3 0 5 1 0 105 6 11 2 4 4 7 97 8 1 7 7 24 7 78 25 24 13 12 1 0 48 46 44 42 41 39 32 31 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,456,o),
(351,467,qs),
(351,478,o),
(367,493,o),
(378,493,qs),
(388,493,o),
(404,478,o),
(404,467,qs),
(404,456,o),
(389,441,o),
(378,441,qs),
(367,441,o)
);
},
{
closed = 1;
nodes = (
(310,387,o),
(310,398,qs),
(310,409,o),
(325,424,o),
(335,424,qs),
(346,424,o),
(361,409,o),
(361,398,qs),
(361,387,o),
(346,372,o),
(335,372,qs),
(325,372,o)
);
},
{
closed = 1;
nodes = (
(410,424,o),
(420,424,qs),
(431,424,o),
(446,409,o),
(446,398,qs),
(446,387,o),
(431,372,o),
(420,372,qs),
(410,372,o),
(395,387,o),
(395,398,qs),
(395,409,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,307,ls),
(646,324,o),
(650,332,qs),
(656,341,o),
(667,341,qs),
(670,341,ls),
(672,341,o),
(672,338,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
40 1 9 7 71 1 6 9 2 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 8 14 2 6 6 10 97 11 1 10 10 24 10 78 37 36 13 12 1 0 74 72 70 67 61 60 54 51 44 43 36 75 37 75 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,506,o),
(104,517,qs),
(104,528,o),
(119,543,o),
(130,543,qs),
(141,543,o),
(156,528,o),
(156,517,qs),
(156,506,o),
(141,491,o),
(130,491,qs),
(119,491,o)
);
},
{
closed = 1;
nodes = (
(62,437,o),
(62,448,qs),
(62,459,o),
(77,474,o),
(88,474,qs),
(99,474,o),
(113,459,o),
(113,448,qs),
(113,437,o),
(99,422,o),
(88,422,qs),
(77,422,o)
);
},
{
closed = 1;
nodes = (
(147,437,o),
(147,448,qs),
(147,459,o),
(162,474,o),
(173,474,qs),
(184,474,o),
(198,459,o),
(198,448,qs),
(198,437,o),
(184,422,o),
(173,422,qs),
(162,422,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 8 2 7 8 128 5 1 3 11 4 10 3 2 7 3 2 105 9 1 0 0 1 97 0 1 1 23 77 0 8 8 6 97 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 8 8 6 97 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 25 24 13 12 1 0 54 52 45 44 36 55 37 55 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,506,o),
(103,517,qs),
(103,528,o),
(118,543,o),
(129,543,qs),
(140,543,o),
(155,528,o),
(155,517,qs),
(155,506,o),
(140,491,o),
(129,491,qs),
(118,491,o)
);
},
{
closed = 1;
nodes = (
(61,437,o),
(61,448,qs),
(61,459,o),
(76,474,o),
(87,474,qs),
(98,474,o),
(112,459,o),
(112,448,qs),
(112,437,o),
(98,422,o),
(87,422,qs),
(76,422,o)
);
},
{
closed = 1;
nodes = (
(161,474,o),
(172,474,qs),
(183,474,o),
(197,459,o),
(197,448,qs),
(197,437,o),
(183,422,o),
(172,422,qs),
(161,422,o),
(146,437,o),
(146,448,qs),
(146,459,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 40 2 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 2 6 2 7 6 128 5 1 3 4 12 2 2 7 3 2 105 11 1 0 0 1 97 0 1 1 23 77 8 13 2 6 6 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 8 13 2 6 6 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 13 12 1 0 60 58 56 54 53 51 44 43 36 61 37 61 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,0,l),
(571,0,ls),
(517,0,o),
(484,38,q),
(432,0,o),
(350,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(340,23,ls),
(390,23,o),
(442,38,o),
(468,59,q),
(448,94,o),
(422,195,qs),
(386,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,325,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(468,125,o),
(494,63,o),
(511,47,qs),
(537,23,o),
(571,23,qs),
(598,23,l)
);
},
{
closed = 1;
nodes = (
(278,-122,o),
(290,-122,qs),
(302,-122,o),
(319,-139,o),
(319,-151,qs),
(319,-163,o),
(302,-181,o),
(290,-181,qs),
(279,-181,o),
(263,-164,o),
(263,-151,qs),
(263,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
61 25 13 3 0 2 43 1 5 8 2 76 0 1 0 2 0 1 2 105 0 9 0 8 5 9 8 105 0 5 0 4 5 4 101 3 10 2 0 0 6 97 7 1 6 6 24 6 78 1 0 76 74 70 68 64 62 60 57 51 49 38 36 30 27 22 20 8 6 0 65 1 65 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(455,23,l),
(437,36,o),
(409,104,o),
(384,195,qs),
(345,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(104,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(440,77,o),
(477,38,qs),
(492,23,o),
(520,23,qs),
(522,23,o),
(522,22,qs),
(522,0,o),
(497,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(250,-96,o),
(250,-108,qs),
(250,-120,o),
(234,-137,o),
(222,-137,qs),
(210,-137,o),
(194,-120,o),
(194,-108,qs),
(194,-95,o),
(210,-79,o),
(222,-79,qs),
(234,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
16 1 1 3 1 76 0 2 0 3 1 2 3 105 8 1 5 0 6 5 6 101 4 1 1 1 0 95 7 1 0 0 24 0 78 33 32 1 0 39 37 32 43 33 43 30 29 25 23 11 9 5 2 0 31 1 31 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,0,l),
(533,0,ls),
(479,0,o),
(446,38,q),
(394,0,o),
(312,0,qs),
(-6,0,l),
(-6,23,l),
(302,23,ls),
(352,23,o),
(404,38,o),
(430,59,q),
(410,94,o),
(384,195,qs),
(348,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(104,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(430,125,o),
(456,63,o),
(473,47,qs),
(499,23,o),
(533,23,qs),
(560,23,l)
);
},
{
closed = 1;
nodes = (
(250,-96,o),
(250,-108,qs),
(250,-120,o),
(234,-137,o),
(222,-137,qs),
(210,-137,o),
(194,-120,o),
(194,-108,qs),
(194,-95,o),
(210,-79,o),
(222,-79,qs),
(234,-79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
33 25 13 3 0 2 1 76 0 1 0 2 0 1 2 105 9 1 6 0 7 6 7 101 3 8 2 0 0 4 97 5 1 4 4 24 4 78 39 38 1 0 45 43 38 49 39 49 36 34 32 30 29 27 22 20 8 6 0 37 1 37 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,0,l),
(571,0,ls),
(517,0,o),
(484,38,q),
(432,0,o),
(350,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(340,23,ls),
(390,23,o),
(442,38,o),
(468,59,q),
(448,94,o),
(422,195,qs),
(386,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,325,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(468,125,o),
(494,63,o),
(511,47,qs),
(537,23,o),
(571,23,qs),
(598,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
61 25 13 3 0 2 43 1 5 6 2 76 0 1 0 2 0 1 2 105 0 5 0 4 5 4 101 3 8 2 0 0 6 97 7 1 6 6 24 6 78 1 0 64 62 60 57 51 49 38 36 30 27 22 20 8 6 0 65 1 65 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(455,23,l),
(437,36,o),
(409,104,o),
(384,195,qs),
(345,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(105,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(440,77,o),
(477,38,qs),
(492,23,o),
(520,23,qs),
(522,23,o),
(522,22,qs),
(522,0,o),
(497,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
16 1 1 3 1 76 0 2 0 3 1 2 3 105 4 1 1 1 0 95 5 1 0 0 24 0 78 1 0 30 29 25 23 11 9 5 2 0 31 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,0,l),
(533,0,ls),
(479,0,o),
(446,38,q),
(394,0,o),
(312,0,qs),
(-6,0,l),
(-6,23,l),
(302,23,ls),
(352,23,o),
(404,38,o),
(430,59,q),
(410,94,o),
(384,195,qs),
(348,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(105,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(430,125,o),
(456,63,o),
(473,47,qs),
(499,23,o),
(533,23,qs),
(560,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
33 25 13 3 0 2 1 76 0 1 0 2 0 1 2 105 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 36 34 32 30 29 27 22 20 8 6 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,454,o),
(251,466,qs),
(251,478,o),
(267,495,o),
(279,495,qs),
(291,495,o),
(308,478,o),
(308,466,qs),
(308,454,o),
(291,437,o),
(279,437,qs),
(267,437,o)
);
},
{
closed = 1;
nodes = (
(598,0,l),
(571,0,ls),
(517,0,o),
(484,38,q),
(432,0,o),
(350,0,qs),
(260,0,ls),
(188,0,o),
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(340,23,ls),
(390,23,o),
(442,38,o),
(468,59,q),
(448,94,o),
(422,195,qs),
(386,337,o),
(273,337,qs),
(213,337,o),
(153,287,qs),
(142,279,o),
(137,273,qs),
(132,268,o),
(126,269,qs),
(120,270,o),
(120,277,qs),
(121,285,o),
(132,296,qs),
(161,325,o),
(186,337,qs),
(232,360,o),
(275,360,qs),
(409,360,o),
(449,198,qs),
(468,125,o),
(494,63,o),
(511,47,qs),
(537,23,o),
(571,23,qs),
(598,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
73 37 25 3 2 4 55 1 7 8 2 76 0 1 10 1 0 3 1 0 105 0 3 0 4 2 3 4 105 0 7 0 6 7 6 101 5 11 2 2 2 8 97 9 1 8 8 24 8 78 13 12 1 0 76 74 72 69 63 61 50 48 42 39 34 32 20 18 12 77 13 77 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,478,o),
(269,466,qs),
(269,454,o),
(253,437,o),
(241,437,qs),
(229,437,o),
(213,454,o),
(213,466,qs),
(213,478,o),
(229,495,o),
(241,495,qs),
(253,495,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(455,23,l),
(437,36,o),
(409,104,o),
(384,195,qs),
(345,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(105,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(440,77,o),
(477,38,qs),
(492,23,o),
(520,23,qs),
(522,23,o),
(522,22,qs),
(522,0,o),
(497,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
28 1 3 5 1 76 7 1 0 0 1 4 0 1 105 0 4 0 5 3 4 5 105 6 1 3 3 2 95 8 1 2 2 24 2 78 13 12 1 0 42 41 37 35 23 21 17 14 12 43 13 43 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,454,o),
(213,466,qs),
(213,478,o),
(229,495,o),
(241,495,qs),
(253,495,o),
(269,478,o),
(269,466,qs),
(269,454,o),
(253,437,o),
(241,437,qs),
(229,437,o)
);
},
{
closed = 1;
nodes = (
(560,0,l),
(533,0,ls),
(479,0,o),
(446,38,q),
(394,0,o),
(312,0,qs),
(-6,0,l),
(-6,23,l),
(302,23,ls),
(352,23,o),
(404,38,o),
(430,59,q),
(410,94,o),
(384,195,qs),
(348,337,o),
(235,337,qs),
(175,337,o),
(115,287,qs),
(105,279,o),
(99,273,qs),
(94,268,o),
(88,269,qs),
(82,270,o),
(82,277,qs),
(83,285,o),
(94,296,qs),
(123,325,o),
(148,337,qs),
(194,360,o),
(237,360,qs),
(371,360,o),
(411,198,qs),
(430,125,o),
(456,63,o),
(473,47,qs),
(499,23,o),
(533,23,qs),
(560,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
45 37 25 3 2 4 1 76 0 1 8 1 0 3 1 0 105 0 3 0 4 2 3 4 105 5 9 2 2 2 6 97 7 1 6 6 24 6 78 13 12 1 0 48 46 44 42 41 39 34 32 20 18 12 49 13 49 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,0,l),
(447,0,ls),
(354,0,o),
(327,80,q),
(290,0,o),
(198,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o),
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,143,ls),
(343,87,o),
(398,23,o),
(445,23,qs),
(477,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
36 1 0 2 1 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 39 37 35 30 28 25 19 17 14 13 9 7 0 40 1 40 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,448,o),
(117,461,qs),
(117,473,o),
(132,489,o),
(144,489,qs),
(156,489,o),
(173,473,o),
(173,461,qs),
(173,448,o),
(156,431,o),
(144,431,qs),
(133,431,o)
);
},
{
closed = 1;
nodes = (
(477,0,l),
(447,0,ls),
(354,0,o),
(327,80,q),
(290,0,o),
(198,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(194,23,ls),
(247,23,o),
(280,57,qs),
(317,97,o),
(317,168,qs),
(317,242,o),
(291,286,qs),
(260,337,o),
(198,337,qs),
(167,337,o),
(132,321,qs),
(126,318,o),
(123,318,qs),
(115,318,o),
(117,328,qs),
(118,337,o),
(139,347,qs),
(166,360,o),
(199,360,qs),
(264,360,o),
(302,312,qs),
(343,260,o),
(343,168,qs),
(343,143,ls),
(343,87,o),
(398,23,o),
(445,23,qs),
(477,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
48 1 2 4 1 76 0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 13 12 1 0 51 49 47 42 40 37 31 29 26 25 21 19 12 52 13 52 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
27 4 2 0 1 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 30 28 25 23 19 18 15 13 8 7 0 31 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,436,o),
(119,448,qs),
(119,461,o),
(135,477,o),
(147,477,qs),
(159,477,o),
(175,461,o),
(175,448,qs),
(175,436,o),
(159,419,o),
(147,419,qs),
(135,419,o)
);
},
{
closed = 1;
nodes = (
(294,0,l),
(265,0,ls),
(195,0,o),
(160,48,q),
(160,-11,ls),
(160,-214,o),
(14,-214,qs),
(-25,-214,o),
(-65,-197,q),
(-81,-188,o),
(-82,-183,qs),
(-84,-173,o),
(-74,-173,qs),
(-70,-173,o),
(-66,-175,qs),
(-20,-191,o),
(15,-191,qs),
(134,-189,o),
(134,-21,qs),
(134,307,ls),
(134,324,o),
(139,332,qs),
(144,341,o),
(155,341,qs),
(158,341,ls),
(160,341,o),
(160,338,qs),
(160,143,ls),
(160,87,o),
(215,23,o),
(263,23,qs),
(294,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
39 16 2 2 3 1 76 0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 42 40 37 35 31 30 27 25 20 19 12 43 13 43 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1123,0,l),
(1093,0,ls),
(1009,0,o),
(978,67,q),
(948,-9,o),
(860,-9,qs),
(775,-9,o),
(744,62,q),
(713,-9,o),
(628,-9,qs),
(560,-9,o),
(525,39,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,262,ls),
(499,279,o),
(504,287,qs),
(509,297,o),
(520,297,qs),
(523,297,ls),
(525,297,o),
(525,294,qs),
(525,133,ls),
(525,78,o),
(580,14,o),
(628,14,qs),
(674,14,o),
(701,43,qs),
(731,76,o),
(731,133,qs),
(731,284,ls),
(731,302,o),
(735,309,qs),
(741,319,o),
(752,319,qs),
(755,319,ls),
(757,319,o),
(757,316,qs),
(757,133,ls),
(757,78,o),
(812,14,o),
(860,14,qs),
(906,14,o),
(933,43,qs),
(963,76,o),
(963,133,qs),
(963,307,ls),
(963,324,o),
(967,332,qs),
(973,341,o),
(984,341,qs),
(986,341,ls),
(989,341,o),
(989,338,qs),
(989,143,ls),
(989,87,o),
(1044,23,o),
(1091,23,qs),
(1123,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
4 1 3 1 20 1 5 3 36 1 7 5 80 76 72 3 0 7 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 105 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 83 81 79 77 75 73 68 66 59 57 49 47 40 39 33 31 24 23 17 15 8 7 0 84 1 84 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1116;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,341,o),
(606,338,qs),
(606,133,ls),
(606,69,o),
(574,31,qs),
(539,-9,o),
(477,-9,qs),
(392,-9,o),
(361,62,q),
(330,-9,o),
(245,-9,qs),
(157,-9,o),
(127,68,q),
(96,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(13,23,ls),
(60,23,o),
(87,53,qs),
(116,85,o),
(116,143,qs),
(116,262,ls),
(116,279,o),
(121,287,qs),
(126,296,o),
(137,296,qs),
(140,296,ls),
(142,296,o),
(142,293,qs),
(142,133,ls),
(142,78,o),
(197,14,o),
(245,14,qs),
(291,14,o),
(318,43,qs),
(348,76,o),
(348,133,qs),
(348,284,ls),
(348,302,o),
(352,309,qs),
(358,319,o),
(369,319,qs),
(372,319,ls),
(374,319,o),
(374,316,qs),
(374,133,ls),
(374,78,o),
(429,14,o),
(477,14,qs),
(523,14,o),
(550,43,qs),
(580,76,o),
(580,133,qs),
(580,307,ls),
(580,324,o),
(584,332,qs),
(590,341,o),
(601,341,qs),
(603,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
57 1 2 0 13 1 4 2 50 46 29 3 5 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 101 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 34 33 39 22 39 22 39 16 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(740,0,l),
(710,0,ls),
(626,0,o),
(595,67,q),
(565,-9,o),
(477,-9,qs),
(392,-9,o),
(361,62,q),
(330,-9,o),
(245,-9,qs),
(157,-9,o),
(127,68,q),
(96,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(13,23,ls),
(60,23,o),
(87,53,qs),
(116,85,o),
(116,143,qs),
(116,262,ls),
(116,279,o),
(121,287,qs),
(126,296,o),
(137,296,qs),
(140,296,ls),
(142,296,o),
(142,293,qs),
(142,133,ls),
(142,78,o),
(197,14,o),
(245,14,qs),
(291,14,o),
(318,43,qs),
(348,76,o),
(348,133,qs),
(348,284,ls),
(348,302,o),
(352,309,qs),
(358,319,o),
(369,319,qs),
(372,319,ls),
(374,319,o),
(374,316,qs),
(374,133,ls),
(374,78,o),
(429,14,o),
(477,14,qs),
(523,14,o),
(550,43,qs),
(580,76,o),
(580,133,qs),
(580,307,ls),
(580,324,o),
(584,332,qs),
(590,341,o),
(601,341,qs),
(603,341,ls),
(606,341,o),
(606,338,qs),
(606,143,ls),
(606,87,o),
(661,23,o),
(708,23,qs),
(740,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
4 1 3 1 20 1 5 3 61 57 53 36 4 0 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 1 7 7 24 77 4 1 2 2 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 101 6 11 2 0 0 7 97 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 64 62 60 58 56 54 52 50 49 47 40 39 33 31 24 23 17 15 8 7 0 65 1 65 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 734;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(719,484,o),
(719,494,qs),
(719,505,o),
(734,521,o),
(745,521,qs),
(756,521,o),
(771,505,o),
(771,494,qs),
(771,484,o),
(756,469,o),
(745,469,qs),
(734,469,o)
);
},
{
closed = 1;
nodes = (
(678,415,o),
(678,426,qs),
(678,437,o),
(692,452,o),
(703,452,qs),
(714,452,o),
(729,437,o),
(729,426,qs),
(729,415,o),
(714,399,o),
(703,399,qs),
(692,399,o)
);
},
{
closed = 1;
nodes = (
(777,452,o),
(788,452,qs),
(799,452,o),
(814,437,o),
(814,426,qs),
(814,415,o),
(799,399,o),
(788,399,qs),
(777,399,o),
(763,415,o),
(763,426,qs),
(763,437,o)
);
},
{
closed = 1;
nodes = (
(1123,0,l),
(1093,0,ls),
(1009,0,o),
(978,67,q),
(948,-9,o),
(860,-9,qs),
(775,-9,o),
(744,62,q),
(713,-9,o),
(628,-9,qs),
(560,-9,o),
(525,39,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,262,ls),
(499,279,o),
(504,287,qs),
(509,297,o),
(520,297,qs),
(523,297,ls),
(525,297,o),
(525,294,qs),
(525,133,ls),
(525,78,o),
(580,14,o),
(628,14,qs),
(674,14,o),
(701,43,qs),
(731,76,o),
(731,133,qs),
(731,284,ls),
(731,302,o),
(735,309,qs),
(741,319,o),
(752,319,qs),
(755,319,ls),
(757,319,o),
(757,316,qs),
(757,133,ls),
(757,78,o),
(812,14,o),
(860,14,qs),
(906,14,o),
(933,43,qs),
(963,76,o),
(963,133,qs),
(963,307,ls),
(963,324,o),
(967,332,qs),
(973,341,o),
(984,341,qs),
(986,341,ls),
(989,341,o),
(989,338,qs),
(989,143,ls),
(989,87,o),
(1044,23,o),
(1091,23,qs),
(1123,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
40 1 9 7 56 1 11 9 72 1 13 11 116 112 108 3 6 13 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 97 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 105 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 119 117 115 113 111 109 104 102 95 93 85 83 76 75 69 67 60 59 53 51 44 43 36 120 37 120 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1116;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,484,o),
(336,494,qs),
(336,505,o),
(351,521,o),
(362,521,qs),
(373,521,o),
(388,505,o),
(388,494,qs),
(388,484,o),
(373,469,o),
(362,469,qs),
(351,469,o)
);
},
{
closed = 1;
nodes = (
(295,415,o),
(295,426,qs),
(295,437,o),
(309,452,o),
(320,452,qs),
(331,452,o),
(346,437,o),
(346,426,qs),
(346,415,o),
(331,399,o),
(320,399,qs),
(309,399,o)
);
},
{
closed = 1;
nodes = (
(394,452,o),
(405,452,qs),
(416,452,o),
(431,437,o),
(431,426,qs),
(431,415,o),
(416,399,o),
(405,399,qs),
(394,399,o),
(380,415,o),
(380,426,qs),
(380,437,o)
);
},
{
closed = 1;
nodes = (
(606,341,o),
(606,338,qs),
(606,133,ls),
(606,69,o),
(574,31,qs),
(539,-9,o),
(477,-9,qs),
(392,-9,o),
(361,62,q),
(330,-9,o),
(245,-9,qs),
(157,-9,o),
(127,68,q),
(96,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(13,23,ls),
(60,23,o),
(87,53,qs),
(116,85,o),
(116,143,qs),
(116,262,ls),
(116,279,o),
(121,287,qs),
(126,296,o),
(137,296,qs),
(140,296,ls),
(142,296,o),
(142,293,qs),
(142,133,ls),
(142,78,o),
(197,14,o),
(245,14,qs),
(291,14,o),
(318,43,qs),
(348,76,o),
(348,133,qs),
(348,284,ls),
(348,302,o),
(352,309,qs),
(358,319,o),
(369,319,qs),
(372,319,ls),
(374,319,o),
(374,316,qs),
(374,133,ls),
(374,78,o),
(429,14,o),
(477,14,qs),
(523,14,o),
(550,43,qs),
(580,76,o),
(580,133,qs),
(580,307,ls),
(580,324,o),
(584,332,qs),
(590,341,o),
(601,341,qs),
(603,341,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
93 1 8 6 49 1 10 8 86 82 65 3 11 10 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 97 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 101 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
13 12 1 0 89 87 85 83 81 79 78 76 69 68 62 60 53 52 46 44 37 36 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,484,o),
(336,494,qs),
(336,505,o),
(351,521,o),
(362,521,qs),
(373,521,o),
(388,505,o),
(388,494,qs),
(388,484,o),
(373,469,o),
(362,469,qs),
(351,469,o)
);
},
{
closed = 1;
nodes = (
(295,415,o),
(295,426,qs),
(295,437,o),
(309,452,o),
(320,452,qs),
(331,452,o),
(346,437,o),
(346,426,qs),
(346,415,o),
(331,399,o),
(320,399,qs),
(309,399,o)
);
},
{
closed = 1;
nodes = (
(394,452,o),
(405,452,qs),
(416,452,o),
(431,437,o),
(431,426,qs),
(431,415,o),
(416,399,o),
(405,399,qs),
(394,399,o),
(380,415,o),
(380,426,qs),
(380,437,o)
);
},
{
closed = 1;
nodes = (
(740,0,l),
(710,0,ls),
(626,0,o),
(595,67,q),
(565,-9,o),
(477,-9,qs),
(392,-9,o),
(361,62,q),
(330,-9,o),
(245,-9,qs),
(157,-9,o),
(127,68,q),
(96,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(13,23,ls),
(60,23,o),
(87,53,qs),
(116,85,o),
(116,143,qs),
(116,262,ls),
(116,279,o),
(121,287,qs),
(126,296,o),
(137,296,qs),
(140,296,ls),
(142,296,o),
(142,293,qs),
(142,133,ls),
(142,78,o),
(197,14,o),
(245,14,qs),
(291,14,o),
(318,43,qs),
(348,76,o),
(348,133,qs),
(348,284,ls),
(348,302,o),
(352,309,qs),
(358,319,o),
(369,319,qs),
(372,319,ls),
(374,319,o),
(374,316,qs),
(374,133,ls),
(374,78,o),
(429,14,o),
(477,14,qs),
(523,14,o),
(550,43,qs),
(580,76,o),
(580,133,qs),
(580,307,ls),
(580,324,o),
(584,332,qs),
(590,341,o),
(601,341,qs),
(603,341,ls),
(606,341,o),
(606,338,qs),
(606,143,ls),
(606,87,o),
(661,23,o),
(708,23,qs),
(740,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
40 1 9 7 56 1 11 9 97 93 89 72 4 6 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 1 13 13 24 77 10 1 8 8 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 101 12 19 2 6 6 13 97 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 100 98 96 94 92 90 88 86 85 83 76 75 69 67 60 59 53 51 44 43 36 101 37 101 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 734;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1295,0,l),
(1265,0,ls),
(1170,0,o),
(1143,84,q),
(1124,44,o),
(1053,0,o),
(1008,0,qs),
(630,0,ls),
(561,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(631,23,l),
(657,153,o),
(731,243,qs),
(828,360,o),
(968,360,qs),
(1041,360,o),
(1093,321,qs),
(1160,270,o),
(1161,175,qs),
(1161,143,ls),
(1161,87,o),
(1215,23,o),
(1263,23,qs),
(1295,23,l)
);
},
{
closed = 1;
nodes = (
(1057,23,o),
(1093,60,qs),
(1136,102,o),
(1135,172,qs),
(1134,247,o),
(1088,291,qs),
(1042,337,o),
(969,337,qs),
(858,337,o),
(773,252,qs),
(685,163,o),
(659,23,q),
(1004,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
17 1 9 3 59 53 2 0 5 2 76 0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 64 64 1 0 64 76 64 75 69 67 62 60 57 54 49 47 40 38 30 28 21 20 14 12 9 7 0 63 1 63 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1288;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(711,320,qs),
(778,268,o),
(778,172,qs),
(778,98,o),
(739,51,qs),
(696,0,o),
(626,0,qs),
(247,0,ls),
(161,0,o),
(130,72,q),
(99,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,245,ls),
(117,262,o),
(121,270,qs),
(127,279,o),
(138,279,qs),
(141,279,ls),
(143,279,o),
(143,277,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(249,23,l),
(274,153,o),
(349,243,qs),
(445,360,o),
(586,360,qs),
(659,360,o)
);
},
{
closed = 1;
nodes = (
(675,23,o),
(711,60,qs),
(753,102,o),
(752,172,qs),
(751,247,o),
(706,292,qs),
(660,337,o),
(586,337,qs),
(475,337,o),
(391,252,qs),
(302,163,o),
(277,23,q),
(622,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
26 9 2 1 2 1 76 0 2 6 1 6 2 1 128 8 1 0 0 6 2 0 6 105 9 7 3 3 1 1 4 97 5 1 4 4 24 4 78 37 37 1 0 37 49 37 48 42 40 30 27 25 23 22 20 13 12 6 4 0 36 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 846;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,0,l),
(882,0,ls),
(788,0,o),
(760,84,q),
(741,44,o),
(670,0,o),
(626,0,qs),
(247,0,ls),
(161,0,o),
(130,72,q),
(99,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,245,ls),
(117,262,o),
(121,270,qs),
(127,279,o),
(138,279,qs),
(141,279,ls),
(143,279,o),
(143,277,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(249,23,l),
(274,153,o),
(349,243,qs),
(445,360,o),
(586,360,qs),
(658,360,o),
(710,321,qs),
(777,270,o),
(778,175,qs),
(778,143,ls),
(778,87,o),
(833,23,o),
(881,23,qs),
(912,23,l)
);
},
{
closed = 1;
nodes = (
(675,23,o),
(711,60,qs),
(753,102,o),
(752,172,qs),
(751,247,o),
(706,292,qs),
(660,337,o),
(586,337,qs),
(475,337,o),
(391,252,qs),
(302,163,o),
(277,23,q),
(622,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
40 34 17 3 0 3 1 76 0 3 8 0 8 3 0 128 0 1 0 8 3 1 8 105 11 9 4 2 10 5 0 0 5 97 7 6 2 5 5 24 5 78 45 45 1 0 45 57 45 56 50 48 43 41 38 35 33 31 30 28 21 20 14 12 9 7 0 44 1 44 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(920,454,o),
(920,466,qs),
(920,478,o),
(936,495,o),
(948,495,qs),
(960,495,o),
(976,478,o),
(976,466,qs),
(976,454,o),
(960,437,o),
(948,437,qs),
(936,437,o)
);
},
{
closed = 1;
nodes = (
(1295,0,l),
(1265,0,ls),
(1170,0,o),
(1143,84,q),
(1124,44,o),
(1053,0,o),
(1008,0,qs),
(630,0,ls),
(561,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(631,23,l),
(657,153,o),
(731,243,qs),
(828,360,o),
(968,360,qs),
(1041,360,o),
(1093,321,qs),
(1160,270,o),
(1161,175,qs),
(1161,143,ls),
(1161,87,o),
(1215,23,o),
(1263,23,qs),
(1295,23,l)
);
},
{
closed = 1;
nodes = (
(1057,23,o),
(1093,60,qs),
(1136,102,o),
(1135,172,qs),
(1134,247,o),
(1088,291,qs),
(1042,337,o),
(969,337,qs),
(858,337,o),
(773,252,qs),
(685,163,o),
(659,23,q),
(1004,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 108 values pushed */
29 1 11 5 71 65 2 2 7 2 76 0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 76 76 13 12 1 0 76 88 76 87 81 79 74 72 69 66 61 59 52 50 42 40 33 32 26 24 21 19 12 75 13 75 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1288;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(538,454,o),
(538,466,qs),
(538,478,o),
(554,495,o),
(566,495,qs),
(578,495,o),
(594,478,o),
(594,466,qs),
(594,454,o),
(578,437,o),
(566,437,qs),
(554,437,o)
);
},
{
closed = 1;
nodes = (
(711,320,qs),
(778,268,o),
(778,172,qs),
(778,98,o),
(739,51,qs),
(696,0,o),
(626,0,qs),
(247,0,ls),
(161,0,o),
(130,72,q),
(99,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,245,ls),
(117,262,o),
(121,270,qs),
(127,279,o),
(138,279,qs),
(141,279,ls),
(143,279,o),
(143,277,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(249,23,l),
(274,153,o),
(349,243,qs),
(445,360,o),
(586,360,qs),
(659,360,o)
);
},
{
closed = 1;
nodes = (
(675,23,o),
(711,60,qs),
(753,102,o),
(752,172,qs),
(751,247,o),
(706,292,qs),
(660,337,o),
(586,337,qs),
(475,337,o),
(391,252,qs),
(302,163,o),
(277,23,q),
(622,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
38 21 2 3 4 1 76 0 4 8 3 8 4 3 128 0 1 10 1 0 2 1 0 105 11 1 2 0 8 4 2 8 105 12 9 5 3 3 3 6 97 7 1 6 6 24 6 78 49 49 13 12 1 0 49 61 49 60 54 52 42 39 37 35 34 32 25 24 18 16 12 48 13 48 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 846;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(538,454,o),
(538,466,qs),
(538,478,o),
(554,495,o),
(566,495,qs),
(578,495,o),
(594,478,o),
(594,466,qs),
(594,454,o),
(578,437,o),
(566,437,qs),
(554,437,o)
);
},
{
closed = 1;
nodes = (
(912,0,l),
(882,0,ls),
(788,0,o),
(760,84,q),
(741,44,o),
(670,0,o),
(626,0,qs),
(247,0,ls),
(161,0,o),
(130,72,q),
(99,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,245,ls),
(117,262,o),
(121,270,qs),
(127,279,o),
(138,279,qs),
(141,279,ls),
(143,279,o),
(143,277,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(249,23,l),
(274,153,o),
(349,243,qs),
(445,360,o),
(586,360,qs),
(658,360,o),
(710,321,qs),
(777,270,o),
(778,175,qs),
(778,143,ls),
(778,87,o),
(833,23,o),
(881,23,qs),
(912,23,l)
);
},
{
closed = 1;
nodes = (
(675,23,o),
(711,60,qs),
(753,102,o),
(752,172,qs),
(751,247,o),
(706,292,qs),
(660,337,o),
(586,337,qs),
(475,337,o),
(391,252,qs),
(302,163,o),
(277,23,q),
(622,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
52 46 29 3 2 5 1 76 0 5 10 2 10 5 2 128 0 1 12 1 0 3 1 0 105 0 3 0 10 5 3 10 105 14 11 6 4 13 5 2 2 7 97 9 8 2 7 7 24 7 78 57 57 13 12 1 0 57 69 57 68 62 60 55 53 50 47 45 43 42 40 33 32 26 24 21 19 12 56 13 56 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 907;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,0,l),
(824,0,ls),
(729,0,o),
(702,84,q),
(683,44,o),
(612,0,o),
(567,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(192,23,l),
(192,521,ls),
(192,538,o),
(197,546,qs),
(202,556,o),
(213,556,qs),
(216,556,ls),
(218,556,o),
(218,553,qs),
(218,119,l),
(257,218,o),
(325,280,qs),
(413,360,o),
(527,360,qs),
(600,360,o),
(652,321,qs),
(719,270,o),
(720,175,qs),
(720,143,ls),
(720,87,o),
(774,23,o),
(822,23,qs),
(854,23,l)
);
},
{
closed = 1;
nodes = (
(616,23,o),
(652,60,qs),
(695,102,o),
(694,172,qs),
(693,247,o),
(647,292,qs),
(601,337,o),
(528,337,qs),
(417,337,o),
(332,252,qs),
(244,163,o),
(218,23,q),
(563,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
13 1 1 2 32 12 2 0 6 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 37 37 1 0 37 49 37 48 42 40 35 33 30 25 23 21 17 16 9 7 0 36 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 848;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,320,qs),
(644,268,o),
(644,172,qs),
(644,98,o),
(605,51,qs),
(562,0,o),
(491,0,qs),
(-6,0,l),
(-6,23,l),
(116,23,l),
(116,521,ls),
(116,538,o),
(121,546,qs),
(126,556,o),
(137,556,qs),
(140,556,ls),
(142,556,o),
(142,553,qs),
(142,119,l),
(181,218,o),
(249,280,qs),
(337,360,o),
(451,360,qs),
(524,360,o)
);
},
{
closed = 1;
nodes = (
(540,23,o),
(577,60,qs),
(619,102,o),
(618,172,qs),
(617,247,o),
(571,292,qs),
(525,337,o),
(452,337,qs),
(341,337,o),
(257,252,qs),
(168,163,o),
(142,23,q),
(487,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
5 1 0 1 4 1 2 4 2 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 95 0 3 3 24 3 78 24 24 1 0 24 36 24 35 29 27 17 15 14 13 9 8 0 23 1 23 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,0,l),
(748,0,ls),
(653,0,o),
(626,84,q),
(607,44,o),
(536,0,o),
(491,0,qs),
(-6,0,l),
(-6,23,l),
(116,23,l),
(116,521,ls),
(116,538,o),
(121,546,qs),
(126,556,o),
(137,556,qs),
(140,556,ls),
(142,556,o),
(142,553,qs),
(142,119,l),
(181,218,o),
(249,280,qs),
(337,360,o),
(451,360,qs),
(524,360,o),
(576,321,qs),
(643,270,o),
(644,175,qs),
(644,143,ls),
(644,87,o),
(698,23,o),
(746,23,qs),
(778,23,l)
);
},
{
closed = 1;
nodes = (
(540,23,o),
(577,60,qs),
(619,102,o),
(618,172,qs),
(617,247,o),
(571,292,qs),
(525,337,o),
(452,337,qs),
(341,337,o),
(257,252,qs),
(168,163,o),
(142,23,q),
(487,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
13 1 1 2 27 12 2 0 6 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 32 32 1 0 32 44 32 43 37 35 30 28 25 23 22 21 17 16 9 7 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(854,0,l),
(824,0,ls),
(729,0,o),
(702,84,q),
(683,44,o),
(612,0,o),
(567,0,qs),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,3,ls),
(61,12,o),
(77,23,o),
(89,23,qs),
(192,23,l),
(192,521,ls),
(192,538,o),
(197,546,qs),
(202,556,o),
(213,556,qs),
(216,556,ls),
(218,556,o),
(218,553,qs),
(218,119,l),
(257,218,o),
(325,280,qs),
(413,360,o),
(527,360,qs),
(600,360,o),
(652,321,qs),
(719,270,o),
(720,175,qs),
(720,143,ls),
(720,87,o),
(774,23,o),
(822,23,qs),
(854,23,l)
);
},
{
closed = 1;
nodes = (
(479,454,o),
(479,466,qs),
(479,478,o),
(495,495,o),
(507,495,qs),
(519,495,o),
(535,478,o),
(535,466,qs),
(535,454,o),
(518,437,o),
(507,437,qs),
(495,437,o)
);
},
{
closed = 1;
nodes = (
(616,23,o),
(652,60,qs),
(695,102,o),
(694,172,qs),
(693,247,o),
(647,292,qs),
(601,337,o),
(528,337,qs),
(417,337,o),
(332,252,qs),
(244,163,o),
(218,23,q),
(563,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
13 1 7 2 32 12 2 0 8 2 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 49 49 38 37 1 0 49 61 49 60 54 52 44 42 37 48 38 48 35 33 30 25 23 21 17 16 9 7 0 36 1 36 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 848;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,320,qs),
(644,268,o),
(644,172,qs),
(644,98,o),
(605,51,qs),
(562,0,o),
(491,0,qs),
(-6,0,l),
(-6,23,l),
(116,23,l),
(116,521,ls),
(116,538,o),
(121,546,qs),
(126,556,o),
(137,556,qs),
(140,556,ls),
(142,556,o),
(142,553,qs),
(142,119,l),
(181,218,o),
(249,280,qs),
(337,360,o),
(451,360,qs),
(524,360,o)
);
},
{
closed = 1;
nodes = (
(403,454,o),
(403,466,qs),
(403,478,o),
(419,495,o),
(431,495,qs),
(443,495,o),
(459,478,o),
(459,466,qs),
(459,454,o),
(443,437,o),
(431,437,qs),
(419,437,o)
);
},
{
closed = 1;
nodes = (
(540,23,o),
(577,60,qs),
(619,102,o),
(618,172,qs),
(617,247,o),
(571,292,qs),
(525,337,o),
(452,337,qs),
(341,337,o),
(257,252,qs),
(168,163,o),
(142,23,q),
(487,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
5 1 5 1 4 1 2 6 2 76 0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 95 0 3 3 24 3 78 36 36 25 24 1 0 36 48 36 47 41 39 31 29 24 35 25 35 17 15 14 13 9 8 0 23 1 23 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,0,l),
(748,0,ls),
(653,0,o),
(626,84,q),
(607,44,o),
(536,0,o),
(491,0,qs),
(-6,0,l),
(-6,23,l),
(116,23,l),
(116,521,ls),
(116,538,o),
(121,546,qs),
(126,556,o),
(137,556,qs),
(140,556,ls),
(142,556,o),
(142,553,qs),
(142,119,l),
(181,218,o),
(249,280,qs),
(337,360,o),
(451,360,qs),
(524,360,o),
(576,321,qs),
(643,270,o),
(644,175,qs),
(644,143,ls),
(644,87,o),
(698,23,o),
(746,23,qs),
(778,23,l)
);
},
{
closed = 1;
nodes = (
(403,454,o),
(403,466,qs),
(403,478,o),
(419,495,o),
(431,495,qs),
(443,495,o),
(459,478,o),
(459,466,qs),
(459,454,o),
(443,437,o),
(431,437,qs),
(419,437,o)
);
},
{
closed = 1;
nodes = (
(540,23,o),
(577,60,qs),
(619,102,o),
(618,172,qs),
(617,247,o),
(571,292,qs),
(525,337,o),
(452,337,qs),
(341,337,o),
(257,252,qs),
(168,163,o),
(142,23,q),
(487,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
13 1 7 2 27 12 2 0 8 2 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 44 44 33 32 1 0 44 56 44 55 49 47 39 37 32 43 33 43 30 28 25 23 22 21 17 16 9 7 0 31 1 31 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(269,23,o),
(274,24,q),
(145,188,ls),
(122,217,o),
(121,239,qs),
(118,288,o),
(169,323,qs),
(225,360,o),
(304,360,qs),
(372,360,o),
(425,331,qs),
(491,295,o),
(488,239,qs),
(486,217,o),
(464,188,qs),
(335,23,l),
(607,23,l),
(607,0,l),
(358,0,ls),
(319,0,o),
(305,10,q),
(290,0,o),
(260,0,qs),
(188,0,o)
);
},
{
closed = 1;
nodes = (
(174,192,qs),
(177,188,o),
(179,186,qs),
(296,37,ls),
(304,27,o),
(313,37,qs),
(430,186,ls),
(431,187,o),
(432,189,q),
(460,225,o),
(460,243,qs),
(460,273,o),
(424,301,qs),
(376,337,o),
(304,337,qs),
(243,337,o),
(148,280,o),
(148,243,qs),
(148,224,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
21 10 2 2 7 2 1 0 2 37 1 6 0 3 76 0 3 0 7 2 3 7 105 0 6 0 5 6 5 101 4 1 2 2 0 97 1 8 2 0 0 24 0 78 1 0 56 54 45 43 32 30 24 23 15 13 7 6 5 3 0 51 1 51 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(435,23,o),
(452,12,o),
(452,3,qs),
(452,2,ls),
(452,0,o),
(450,0,qs),
(-6,0,l),
(-6,23,l),
(181,23,l),
(147,46,o),
(103,131,o),
(103,177,qs),
(103,260,o),
(152,309,qs),
(203,360,o),
(285,360,qs),
(323,360,o),
(391,336,o),
(397,321,qs),
(401,311,o),
(390,311,qs),
(386,311,o),
(382,314,q),
(337,336,o),
(282,337,qs),
(223,337,o),
(181,301,qs),
(130,256,o),
(130,177,qs),
(130,124,o),
(160,81,qs),
(201,23,o),
(275,23,qs),
(424,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 27 26 25 24 18 16 13 11 9 7 0 33 1 32 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(256,23,l),
(126,188,ls),
(104,217,o),
(102,239,qs),
(99,288,o),
(151,323,qs),
(206,360,o),
(286,360,qs),
(353,360,o),
(406,331,qs),
(473,295,o),
(469,239,qs),
(467,217,o),
(445,188,qs),
(316,23,l),
(588,23,l),
(588,0,l),
(339,0,ls),
(300,0,o),
(286,10,q),
(272,0,o),
(230,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(286,27,o),
(294,37,qs),
(411,186,ls),
(412,187,o),
(414,189,qs),
(442,225,o),
(442,243,qs),
(442,273,o),
(405,301,qs),
(358,337,o),
(286,337,qs),
(224,337,o),
(130,280,o),
(130,243,qs),
(130,224,o),
(155,192,q),
(159,188,o),
(160,186,q),
(277,37,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 1 2 5 2 1 0 2 2 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 32 30 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,454,o),
(275,466,qs),
(275,478,o),
(291,495,o),
(303,495,qs),
(315,495,o),
(331,478,o),
(331,466,qs),
(331,454,o),
(314,437,o),
(303,437,qs),
(291,437,o)
);
},
{
closed = 1;
nodes = (
(142,-42,qs),
(94,-86,o),
(94,-154,qs),
(94,-211,o),
(129,-251,qs),
(174,-304,o),
(263,-308,qs),
(318,-310,o),
(369,-294,qs),
(404,-284,o),
(441,-261,qs),
(449,-256,o),
(459,-258,o),
(459,-265,qs),
(458,-271,o),
(445,-281,qs),
(419,-301,o),
(376,-316,qs),
(323,-333,o),
(263,-331,qs),
(174,-329,o),
(122,-281,qs),
(67,-232,o),
(67,-154,qs),
(67,-86,o),
(110,-37,qs),
(163,23,o),
(260,23,qs),
(269,23,o),
(274,24,q),
(145,188,ls),
(122,217,o),
(121,239,qs),
(118,288,o),
(169,323,qs),
(225,360,o),
(304,360,qs),
(372,360,o),
(425,331,qs),
(491,295,o),
(488,239,qs),
(486,217,o),
(464,188,qs),
(335,23,l),
(607,23,l),
(607,0,l),
(358,0,ls),
(319,0,o),
(305,10,q),
(290,0,o),
(260,0,qs),
(188,0,o)
);
},
{
closed = 1;
nodes = (
(174,192,qs),
(177,188,o),
(179,186,qs),
(296,37,ls),
(304,27,o),
(313,37,qs),
(430,186,ls),
(431,187,o),
(432,189,q),
(460,225,o),
(460,243,qs),
(460,273,o),
(424,301,qs),
(376,337,o),
(304,337,qs),
(243,337,o),
(148,280,o),
(148,243,qs),
(148,224,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
33 22 2 4 9 14 1 2 4 49 1 8 2 3 76 0 1 10 1 0 5 1 0 105 0 5 0 9 4 5 9 105 0 8 0 7 8 7 101 6 1 4 4 2 97 3 11 2 2 2 24 2 78 13 12 1 0 68 66 57 55 44 42 36 35 27 25 19 18 17 15 12 63 13 63 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,454,o),
(248,466,qs),
(248,478,o),
(264,495,o),
(276,495,qs),
(288,495,o),
(305,478,o),
(305,466,qs),
(305,454,o),
(288,437,o),
(276,437,qs),
(264,437,o)
);
},
{
closed = 1;
nodes = (
(435,23,o),
(452,12,o),
(452,3,qs),
(452,2,ls),
(452,0,o),
(450,0,qs),
(-6,0,l),
(-6,23,l),
(181,23,l),
(147,46,o),
(103,131,o),
(103,177,qs),
(103,260,o),
(152,309,qs),
(203,360,o),
(285,360,qs),
(323,360,o),
(391,336,o),
(397,321,qs),
(401,311,o),
(390,311,qs),
(386,311,o),
(382,314,q),
(337,336,o),
(282,337,qs),
(223,337,o),
(181,301,qs),
(130,256,o),
(130,177,qs),
(130,124,o),
(160,81,qs),
(201,23,o),
(275,23,qs),
(424,23,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 13 12 1 0 39 38 37 36 30 28 25 23 21 19 12 45 13 44 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,478,o),
(314,466,qs),
(314,454,o),
(298,437,o),
(286,437,qs),
(274,437,o),
(258,454,o),
(258,466,qs),
(258,478,o),
(274,495,o),
(286,495,qs),
(298,495,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(256,23,l),
(126,188,ls),
(104,217,o),
(102,239,qs),
(99,288,o),
(151,323,qs),
(206,360,o),
(286,360,qs),
(353,360,o),
(406,331,qs),
(473,295,o),
(469,239,qs),
(467,217,o),
(445,188,qs),
(316,23,l),
(588,23,l),
(588,0,l),
(339,0,ls),
(300,0,o),
(286,10,q),
(272,0,o),
(230,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(286,27,o),
(294,37,qs),
(411,186,ls),
(412,187,o),
(414,189,qs),
(442,225,o),
(442,243,qs),
(442,273,o),
(405,301,qs),
(358,337,o),
(286,337,qs),
(224,337,o),
(130,280,o),
(130,243,qs),
(130,224,o),
(155,192,q),
(159,188,o),
(160,186,q),
(277,37,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
30 1 4 7 14 1 2 4 2 76 8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 13 12 1 0 44 42 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,454,o),
(606,466,qs),
(606,478,o),
(622,495,o),
(634,495,qs),
(646,495,o),
(662,478,o),
(662,466,qs),
(662,454,o),
(646,437,o),
(634,437,qs),
(622,437,o)
);
},
{
closed = 1;
nodes = (
(911,-1,l),
(685,-1,ls),
(643,-1,o),
(628,12,q),
(613,-1,o),
(571,-1,qs),
(364,-1,l),
(364,0,l),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(571,23,l),
(589,23,l),
(544,39,o),
(511,82,qs),
(473,132,o),
(472,191,qs),
(471,254,o),
(508,302,qs),
(552,359,o),
(628,359,qs),
(694,359,o),
(738,314,qs),
(786,264,o),
(784,191,qs),
(783,139,o),
(753,94,qs),
(720,42,o),
(667,23,q),
(911,23,l)
);
},
{
closed = 1;
nodes = (
(529,102,qs),
(567,49,o),
(628,33,q),
(682,47,o),
(718,90,qs),
(759,137,o),
(758,190,qs),
(758,252,o),
(724,292,qs),
(686,336,o),
(628,336,qs),
(578,336,o),
(542,302,qs),
(499,261,o),
(498,190,qs),
(498,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
67 1 3 4 50 1 5 3 2 76 0 4 8 3 8 4 3 128 0 1 9 1 0 2 1 0 105 0 2 0 8 4 2 8 105 10 7 2 3 3 5 95 6 1 5 5 24 5 78 12 12 1 0 60 58 12 54 12 54 53 51 49 44 38 37 31 28 21 19 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,454,o),
(231,466,qs),
(231,478,o),
(247,495,o),
(259,495,qs),
(271,495,o),
(287,478,o),
(287,466,qs),
(287,454,o),
(271,437,o),
(259,437,qs),
(247,437,o)
);
},
{
closed = 1;
nodes = (
(367,313,qs),
(415,261,o),
(415,179,qs),
(415,109,o),
(379,61,qs),
(337,3,o),
(265,0,q),
(-6,0,l),
(-6,23,l),
(178,23,l),
(103,71,o),
(103,179,qs),
(103,250,o),
(141,300,qs),
(185,360,o),
(259,360,qs),
(324,360,o)
);
},
{
closed = 1;
nodes = (
(348,63,qs),
(388,107,o),
(388,178,qs),
(388,241,o),
(357,285,qs),
(321,337,o),
(259,337,qs),
(205,337,o),
(170,296,qs),
(130,251,o),
(130,178,qs),
(130,117,o),
(161,74,qs),
(197,23,o),
(259,23,qs),
(313,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 1 7 1 0 2 1 0 105 8 1 2 0 6 3 2 6 105 9 5 2 3 3 4 95 0 4 4 24 4 78 30 29 13 12 1 0 38 36 29 44 30 44 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 482;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,454,o),
(231,466,qs),
(231,478,o),
(247,495,o),
(259,495,qs),
(271,495,o),
(287,478,o),
(287,466,qs),
(287,454,o),
(271,437,o),
(259,437,qs),
(247,437,o)
);
},
{
closed = 1;
nodes = (
(542,0,l),
(316,0,ls),
(273,0,o),
(258,12,q),
(244,0,o),
(201,0,qs),
(-6,0,l),
(-6,23,l),
(220,23,l),
(174,40,o),
(141,82,qs),
(104,132,o),
(102,191,qs),
(101,255,o),
(138,302,qs),
(183,360,o),
(258,360,qs),
(324,360,o),
(368,315,qs),
(416,265,o),
(415,191,qs),
(413,140,o),
(384,94,qs),
(350,42,o),
(297,23,q),
(542,23,l)
);
},
{
closed = 1;
nodes = (
(159,102,qs),
(197,50,o),
(258,34,q),
(312,48,o),
(349,91,qs),
(389,138,o),
(388,191,qs),
(388,253,o),
(354,293,qs),
(317,337,o),
(258,337,qs),
(208,337,o),
(172,303,qs),
(129,262,o),
(128,191,qs),
(128,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
50 1 3 7 33 1 4 3 2 76 0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 43 41 12 37 12 37 36 34 32 30 29 28 21 19 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,455,o),
(369,467,qs),
(369,478,o),
(384,493,o),
(395,493,qs),
(405,493,o),
(420,478,o),
(420,467,qs),
(420,455,o),
(405,440,o),
(395,440,qs),
(384,440,o)
);
},
{
closed = 1;
nodes = (
(454,455,o),
(454,467,qs),
(454,478,o),
(469,493,o),
(480,493,qs),
(490,493,o),
(505,478,o),
(505,467,qs),
(505,455,o),
(490,440,o),
(480,440,qs),
(469,440,o)
);
},
{
closed = 1;
nodes = (
(155,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(161,-123,qs),
(230,-191,o),
(335,-191,qs),
(420,-191,o),
(479,-146,qs),
(548,-95,o),
(565,0,q),
(436,0,ls),
(371,0,o),
(328,45,qs),
(281,95,o),
(281,174,qs),
(281,251,o),
(319,302,qs),
(363,360,o),
(436,360,qs),
(530,360,o),
(571,268,qs),
(587,231,o),
(601,90,o),
(594,23,q),
(729,23,l),
(729,0,l),
(591,0,l),
(575,-97,o),
(514,-153,qs),
(446,-214,o),
(335,-214,qs),
(228,-214,o)
);
},
{
closed = 1;
nodes = (
(569,28,o),
(569,38,qs),
(569,43,o),
(570,45,q),
(578,191,o),
(544,263,qs),
(509,337,o),
(437,337,qs),
(384,337,o),
(349,298,qs),
(307,252,o),
(307,174,qs),
(307,115,o),
(338,73,qs),
(375,23,o),
(437,23,qs),
(568,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
81 79 2 6 10 1 76 0 10 12 6 12 10 6 128 3 1 1 14 2 13 3 0 7 1 0 105 0 7 0 12 10 7 12 105 0 9 15 1 4 9 4 101 16 11 2 6 6 5 95 8 1 5 5 24 5 78 68 67 25 24 13 12 1 0 76 74 67 83 68 82 60 58 50 48 45 43 37 35 31 30 29 28 24 66 25 66 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,455,o),
(191,467,qs),
(191,478,o),
(205,493,o),
(216,493,qs),
(227,493,o),
(242,478,o),
(242,467,qs),
(242,455,o),
(227,440,o),
(216,440,qs),
(205,440,o)
);
},
{
closed = 1;
nodes = (
(276,455,o),
(276,467,qs),
(276,478,o),
(290,493,o),
(301,493,qs),
(312,493,o),
(327,478,o),
(327,467,qs),
(327,455,o),
(312,440,o),
(301,440,qs),
(290,440,o)
);
},
{
closed = 1;
nodes = (
(367,313,qs),
(415,261,o),
(415,179,qs),
(415,109,o),
(379,61,qs),
(337,3,o),
(265,0,q),
(-6,0,l),
(-6,23,l),
(178,23,l),
(103,71,o),
(103,179,qs),
(103,250,o),
(141,300,qs),
(185,360,o),
(259,360,qs),
(324,360,o)
);
},
{
closed = 1;
nodes = (
(348,63,qs),
(388,107,o),
(388,178,qs),
(388,241,o),
(357,285,qs),
(321,337,o),
(259,337,qs),
(205,337,o),
(170,296,qs),
(130,251,o),
(130,178,qs),
(130,117,o),
(161,74,qs),
(197,23,o),
(259,23,qs),
(313,23,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 11 1 4 0 8 5 4 8 105 12 7 2 5 5 6 95 0 6 6 24 6 78 42 41 25 24 13 12 1 0 50 48 41 56 42 56 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 482;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,455,o),
(191,467,qs),
(191,478,o),
(205,493,o),
(216,493,qs),
(227,493,o),
(242,478,o),
(242,467,qs),
(242,455,o),
(227,440,o),
(216,440,qs),
(205,440,o)
);
},
{
closed = 1;
nodes = (
(276,455,o),
(276,467,qs),
(276,478,o),
(290,493,o),
(301,493,qs),
(312,493,o),
(327,478,o),
(327,467,qs),
(327,455,o),
(312,440,o),
(301,440,qs),
(290,440,o)
);
},
{
closed = 1;
nodes = (
(542,0,l),
(316,0,ls),
(273,0,o),
(258,12,q),
(244,0,o),
(201,0,qs),
(-6,0,l),
(-6,23,l),
(220,23,l),
(174,40,o),
(141,82,qs),
(104,132,o),
(102,191,qs),
(101,255,o),
(138,302,qs),
(183,360,o),
(258,360,qs),
(324,360,o),
(368,315,qs),
(416,265,o),
(415,191,qs),
(413,140,o),
(384,94,qs),
(350,42,o),
(297,23,q),
(542,23,l)
);
},
{
closed = 1;
nodes = (
(159,102,qs),
(197,50,o),
(258,34,q),
(312,48,o),
(349,91,qs),
(389,138,o),
(388,191,qs),
(388,253,o),
(354,293,qs),
(317,337,o),
(258,337,qs),
(208,337,o),
(172,303,qs),
(129,262,o),
(128,191,qs),
(128,145,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
62 1 5 9 45 1 6 5 2 76 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 55 53 24 49 24 49 48 46 44 42 41 40 33 31 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(690,0,o),
(659,72,q),
(629,0,o),
(541,0,qs),
(251,0,ls),
(67,0,o),
(67,149,qs),
(67,184,o),
(100,259,o),
(128,286,qs),
(135,293,o),
(141,293,qs),
(150,293,o),
(149,284,qs),
(149,280,o),
(145,276,qs),
(91,216,o),
(91,147,qs),
(91,23,o),
(251,23,qs),
(543,23,ls),
(589,23,o),
(616,53,qs),
(646,85,o),
(646,143,qs),
(646,521,ls),
(646,538,o),
(650,546,qs),
(656,556,o),
(667,556,qs),
(670,556,ls),
(672,556,o),
(672,553,qs),
(672,143,ls),
(672,87,o),
(727,23,o),
(775,23,qs),
(806,23,l)
);
},
{
closed = 1;
nodes = (
(299,269,qs),
(299,273,o),
(299,276,q),
(302,288,o),
(318,294,qs),
(326,296,o),
(339,298,q),
(319,319,o),
(319,353,qs),
(319,386,o),
(361,427,o),
(394,427,qs),
(416,427,o),
(449,408,o),
(452,394,qs),
(453,389,o),
(449,391,qs),
(447,392,o),
(444,394,qs),
(437,397,o),
(433,399,qs),
(416,406,o),
(399,406,qs),
(374,406,o),
(344,377,o),
(344,353,qs),
(344,328,o),
(373,298,o),
(397,298,qs),
(455,298,ls),
(474,298,o),
(474,279,qs),
(474,278,ls),
(474,276,o),
(471,276,qs),
(381,276,ls),
(334,276,o),
(309,268,q),
(307,268,o),
(305,267,qs),
(302,266,o),
(301,266,qs),
(299,266,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
4 1 9 1 65 1 7 8 81 42 35 3 0 6 3 76 75 1 7 79 1 6 2 75 0 3 7 6 7 3 6 128 0 9 0 8 7 9 8 105 0 7 0 6 0 7 6 103 0 1 1 23 77 2 10 2 0 0 4 97 5 1 4 4 24 4 78 1 0 71 69 60 58 54 51 47 45 38 36 34 31 25 24 18 15 8 7 0 39 1 39 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,310,qs),
(471,267,o),
(471,171,qs),
(471,86,o),
(430,42,qs),
(392,0,o),
(325,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 37 35 29 26 9 7 0 38 1 38 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,0,l),
(575,0,ls),
(483,0,o),
(454,79,q),
(420,0,o),
(325,0,qs),
(-6,0,l),
(-6,23,l),
(322,23,ls),
(370,23,o),
(402,51,qs),
(445,89,o),
(445,171,qs),
(445,243,o),
(411,281,qs),
(379,318,o),
(322,318,qs),
(115,318,ls),
(86,318,o),
(86,339,qs),
(86,351,ls),
(86,363,o),
(96,371,qs),
(335,554,l),
(338,557,o),
(341,555,qs),
(349,548,o),
(347,538,qs),
(346,531,o),
(330,519,qs),
(117,356,ls),
(113,353,o),
(113,349,qs),
(113,348,ls),
(113,341,o),
(118,341,qs),
(325,341,ls),
(382,341,o),
(419,311,qs),
(470,268,o),
(471,173,qs),
(471,143,ls),
(471,87,o),
(525,23,o),
(573,23,qs),
(605,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
41 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 44 42 40 38 37 35 29 26 9 7 0 45 1 45 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,521,ls),
(499,538,o),
(504,546,qs),
(509,556,o),
(520,556,qs),
(523,556,ls),
(525,556,o),
(525,553,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
4 1 3 1 40 1 0 3 2 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 43 41 36 34 27 25 17 15 8 7 0 44 1 44 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 1 23 77 0 2 2 0 97 3 1 0 0 24 0 78 1 0 18 16 9 8 0 19 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,521,ls),
(117,538,o),
(121,546,qs),
(127,556,o),
(138,556,qs),
(141,556,ls),
(143,556,o),
(143,553,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
21 4 2 0 1 1 76 0 1 1 23 77 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 24 22 20 18 17 15 8 7 0 25 1 25 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(662,0,l),
(632,0,ls),
(550,0,o),
(517,67,q),
(489,-9,o),
(394,-9,qs),
(281,-9,o),
(174,57,q),
(173,57,ls),
(80,47,o),
(80,-72,qs),
(80,-253,ls),
(80,-270,o),
(76,-278,qs),
(70,-287,o),
(59,-287,qs),
(56,-287,ls),
(54,-287,o),
(54,-284,qs),
(54,-72,ls),
(54,68,o),
(166,79,q),
(172,91,o),
(185,119,qs),
(191,132,o),
(193,137,q),
(198,145,o),
(203,157,qs),
(250,262,o),
(272,294,qs),
(318,360,o),
(378,360,qs),
(441,360,o),
(480,312,qs),
(528,255,o),
(528,148,qs),
(528,143,ls),
(528,87,o),
(583,23,o),
(631,23,qs),
(662,23,l)
);
},
{
closed = 1;
nodes = (
(502,143,qs),
(502,239,o),
(468,289,qs),
(435,337,o),
(378,337,qs),
(338,337,o),
(301,288,qs),
(270,246,o),
(221,135,qs),
(219,130,ls),
(201,89,o),
(193,75,q),
(238,47,o),
(347,14,o),
(393,14,qs),
(502,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
44 36 31 3 0 6 21 1 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 8 1 5 0 3 2 5 3 105 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
42 41 1 0 52 50 41 56 42 56 39 37 35 33 25 24 9 7 0 40 1 40 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,311,qs),
(461,253,o),
(461,143,qs),
(461,-9,o),
(327,-9,qs),
(217,-9,o),
(115,52,q),
(90,16,o),
(60,6,qs),
(43,0,o),
(-5,0,qs),
(-6,0,l),
(-6,23,l),
(-4,23,ls),
(50,23,o),
(94,62,o),
(126,137,qs),
(130,145,o),
(135,157,qs),
(183,262,o),
(205,294,qs),
(251,360,o),
(311,360,qs),
(374,360,o)
);
},
{
closed = 1;
nodes = (
(435,143,qs),
(435,239,o),
(400,289,qs),
(368,337,o),
(311,337,qs),
(270,337,o),
(234,288,qs),
(202,246,o),
(154,135,qs),
(152,130,ls),
(134,90,o),
(126,75,q),
(127,75,o),
(127,74,q),
(128,75,l),
(128,74,o),
(127,74,q),
(172,47,o),
(281,14,o),
(326,14,qs),
(435,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 16 2 1 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 5 1 0 5 105 7 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 1 0 40 38 24 44 25 44 19 17 13 11 9 8 0 23 1 23 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,0,l),
(565,0,ls),
(482,0,o),
(450,67,q),
(422,-9,o),
(327,-9,qs),
(217,-9,o),
(115,52,q),
(90,16,o),
(60,6,qs),
(43,0,o),
(-5,0,qs),
(-6,0,l),
(-6,23,l),
(-4,23,ls),
(50,23,o),
(94,62,o),
(126,137,qs),
(130,145,o),
(135,157,qs),
(183,262,o),
(205,294,qs),
(251,360,o),
(311,360,qs),
(373,360,o),
(413,312,qs),
(460,255,o),
(461,148,qs),
(461,143,ls),
(461,87,o),
(516,23,o),
(563,23,qs),
(595,23,l)
);
},
{
closed = 1;
nodes = (
(435,143,qs),
(435,239,o),
(400,289,qs),
(368,337,o),
(311,337,qs),
(270,337,o),
(234,288,qs),
(202,246,o),
(154,135,qs),
(152,130,ls),
(134,90,o),
(126,75,q),
(127,75,o),
(127,74,q),
(128,75,l),
(128,74,o),
(127,74,q),
(172,47,o),
(281,14,o),
(326,14,qs),
(435,14,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
36 28 24 3 0 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
34 33 1 0 49 47 33 53 34 53 31 29 27 25 21 19 17 16 9 7 0 32 1 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,335,o),
(284,347,qs),
(284,360,o),
(300,376,o),
(312,376,qs),
(324,376,o),
(340,359,o),
(340,347,qs),
(340,335,o),
(324,318,o),
(312,318,qs),
(300,318,o)
);
},
{
closed = 1;
nodes = (
(659,0,l),
(630,0,ls),
(560,0,o),
(525,48,q),
(525,28,ls),
(525,-82,o),
(463,-147,qs),
(399,-214,o),
(297,-214,qs),
(209,-214,o),
(147,-163,qs),
(67,-97,o),
(68,28,qs),
(69,80,o),
(104,186,o),
(131,219,qs),
(136,224,o),
(143,224,qs),
(151,224,o),
(150,216,qs),
(150,212,o),
(148,208,qs),
(96,123,o),
(94,36,qs),
(92,-71,o),
(154,-133,qs),
(212,-191,o),
(297,-191,qs),
(365,-191,o),
(420,-147,qs),
(499,-85,o),
(499,36,qs),
(499,307,ls),
(499,324,o),
(504,332,qs),
(509,341,o),
(520,341,qs),
(523,341,ls),
(525,341,o),
(525,338,qs),
(525,143,ls),
(525,87,o),
(580,23,o),
(628,23,qs),
(659,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
16 1 0 3 52 1 2 5 2 76 0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 55 53 48 46 39 37 29 27 20 19 12 56 13 56 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,461,o),
(158,448,qs),
(158,436,o),
(141,419,o),
(130,419,qs),
(118,419,o),
(102,436,o),
(102,448,qs),
(102,461,o),
(118,477,o),
(130,477,qs),
(142,477,o)
);
},
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
17 1 4 3 1 76 0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 30 28 21 20 12 31 13 31 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,436,o),
(102,448,qs),
(102,461,o),
(118,477,o),
(130,477,qs),
(142,477,o),
(158,461,o),
(158,448,qs),
(158,436,o),
(141,419,o),
(130,419,qs),
(118,419,o)
);
},
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
33 16 2 2 3 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 36 34 32 30 29 27 20 19 12 37 13 37 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(486,0,ls),
(390,0,o),
(364,79,q),
(324,-9,o),
(224,-9,qs),
(160,-9,o),
(117,31,qs),
(67,79,o),
(67,166,qs),
(67,242,o),
(106,289,qs),
(150,341,o),
(224,341,qs),
(355,341,l),
(355,382,ls),
(355,399,o),
(360,407,qs),
(366,417,o),
(376,417,qs),
(379,417,ls),
(381,417,o),
(381,414,qs),
(381,143,ls),
(381,87,o),
(436,23,o),
(484,23,qs),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(312,49,qs),
(355,90,o),
(355,166,qs),
(355,317,l),
(225,317,ls),
(171,317,o),
(136,283,qs),
(93,242,o),
(93,166,qs),
(93,99,o),
(127,59,qs),
(163,15,o),
(224,15,qs),
(277,15,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 23 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
29 28 1 0 37 35 28 41 29 41 26 24 22 20 14 12 8 7 0 27 1 27 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,168,qs),
(611,93,o),
(575,49,qs),
(536,0,o),
(466,0,qs),
(300,0,ls),
(255,0,o),
(242,11,q),
(228,0,o),
(183,0,qs),
(-6,0,l),
(-6,23,l),
(205,23,l),
(160,39,o),
(130,81,qs),
(97,128,o),
(97,187,qs),
(97,238,o),
(140,320,o),
(177,340,q),
(127,342,o),
(105,349,qs),
(72,360,o),
(70,381,qs),
(70,383,ls),
(70,389,o),
(76,386,q),
(77,386,o),
(81,384,qs),
(89,380,o),
(94,378,qs),
(129,365,o),
(226,362,qs),
(302,358,o),
(420,358,qs),
(611,358,o)
);
},
{
closed = 1;
nodes = (
(515,23,o),
(548,57,qs),
(585,96,o),
(585,168,qs),
(585,334,o),
(416,335,qs),
(356,335,o),
(311,337,q),
(346,316,o),
(386,236,o),
(386,187,qs),
(386,131,o),
(325,40,o),
(277,23,q),
(462,23,ls)
);
},
{
closed = 1;
nodes = (
(149,101,qs),
(182,48,o),
(242,33,q),
(294,47,o),
(326,89,qs),
(360,133,o),
(360,187,qs),
(360,249,o),
(329,289,qs),
(295,333,o),
(242,333,qs),
(196,333,o),
(164,299,qs),
(123,258,o),
(123,187,qs),
(123,141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
63 1 2 5 27 1 3 2 2 76 11 1 0 74 0 1 0 5 5 1 114 8 1 0 7 1 5 2 0 5 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 36 36 3 0 56 54 36 50 36 49 45 42 31 28 26 24 23 22 15 14 0 35 3 35 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,0,l),
(715,0,ls),
(623,0,o),
(595,80,q),
(558,0,o),
(466,0,qs),
(300,0,ls),
(255,0,o),
(242,11,q),
(228,0,o),
(183,0,qs),
(-6,0,l),
(-6,23,l),
(205,23,l),
(160,39,o),
(130,81,qs),
(97,128,o),
(97,187,qs),
(97,238,o),
(140,320,o),
(177,340,q),
(127,342,o),
(105,349,qs),
(72,360,o),
(70,381,qs),
(70,383,ls),
(70,389,o),
(76,386,q),
(77,386,o),
(81,384,qs),
(89,380,o),
(94,378,qs),
(129,365,o),
(226,362,qs),
(302,358,o),
(420,358,qs),
(611,358,o),
(611,168,qs),
(611,143,ls),
(611,87,o),
(666,23,o),
(713,23,qs),
(745,23,l)
);
},
{
closed = 1;
nodes = (
(515,23,o),
(548,57,qs),
(585,96,o),
(585,168,qs),
(585,334,o),
(416,335,qs),
(356,335,o),
(311,337,q),
(346,316,o),
(386,236,o),
(386,187,qs),
(386,131,o),
(325,40,o),
(277,23,q),
(462,23,ls)
);
},
{
closed = 1;
nodes = (
(149,101,qs),
(182,48,o),
(242,33,q),
(294,47,o),
(326,89,qs),
(360,133,o),
(360,187,qs),
(360,249,o),
(329,289,qs),
(295,333,o),
(242,333,qs),
(196,333,o),
(164,299,qs),
(123,258,o),
(123,187,qs),
(123,141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
70 38 2 0 7 33 1 4 0 2 76 17 1 1 74 0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 43 43 1 0 63 61 43 57 43 56 52 49 41 39 37 34 32 30 29 28 21 20 9 5 0 42 1 42 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 740;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,0,l),
(381,0,l),
(377,-84,o),
(347,-139,qs),
(306,-214,o),
(204,-214,qs),
(156,-214,o),
(123,-202,qs),
(96,-193,o),
(91,-183,qs),
(89,-180,o),
(93,-173,o),
(98,-173,qs),
(102,-173,o),
(106,-174,qs),
(152,-191,o),
(204,-191,qs),
(343,-191,o),
(355,0,q),
(222,0,ls),
(157,0,o),
(115,45,qs),
(67,95,o),
(67,174,qs),
(67,252,o),
(104,302,qs),
(147,360,o),
(219,360,qs),
(317,360,o),
(357,268,qs),
(381,214,o),
(383,107,qs),
(383,49,o),
(382,23,q),
(515,23,l)
);
},
{
closed = 1;
nodes = (
(124,73,qs),
(161,23,o),
(223,23,qs),
(356,23,l),
(362,193,o),
(330,263,qs),
(296,337,o),
(220,337,qs),
(168,337,o),
(134,298,qs),
(93,253,o),
(93,174,qs),
(93,115,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
21 1 2 1 1 76 0 0 0 6 5 0 6 105 0 2 0 3 2 3 101 7 8 2 5 5 1 95 4 1 1 1 24 1 78 0 0 45 43 40 38 0 34 0 34 19 41 33 38 37 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(640,0,l),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,121,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(640,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 34 33 30 28 22 20 12 10 7 3 0 35 1 35 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(640,0,l),
(594,0,l),
(583,-88,o),
(520,-147,qs),
(446,-214,o),
(332,-214,qs),
(226,-214,o),
(154,-154,qs),
(71,-85,o),
(69,28,qs),
(67,142,o),
(127,219,q),
(132,224,o),
(139,224,qs),
(147,224,o),
(146,216,qs),
(146,212,o),
(144,208,qs),
(94,122,o),
(95,36,qs),
(96,-60,o),
(159,-123,qs),
(228,-191,o),
(332,-191,qs),
(414,-191,o),
(477,-147,qs),
(553,-94,o),
(567,0,q),
(446,0,ls),
(444,0,o),
(444,2,qs),
(444,3,ls),
(444,12,o),
(460,23,o),
(472,23,qs),
(640,23,l)
);
},
{
closed = 1;
nodes = (
(315,-311,o),
(315,-322,qs),
(315,-333,o),
(300,-348,o),
(289,-348,qs),
(278,-348,o),
(264,-333,o),
(264,-322,qs),
(264,-311,o),
(278,-296,o),
(289,-296,qs),
(300,-296,o)
);
},
{
closed = 1;
nodes = (
(400,-311,o),
(400,-322,qs),
(400,-333,o),
(385,-348,o),
(374,-348,qs),
(363,-348,o),
(349,-333,o),
(349,-322,qs),
(349,-311,o),
(363,-296,o),
(374,-296,qs),
(385,-296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 3 0 3 133 0 2 0 4 6 2 4 105 12 8 11 3 6 9 1 7 6 7 101 10 1 0 0 1 95 5 1 1 1 24 1 78 49 48 37 36 1 0 55 53 48 59 49 59 43 41 36 47 37 47 34 33 30 28 22 20 12 10 7 3 0 35 1 35 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,78,o),
(111,41,qs),
(76,0,o),
(12,0,qs),
(-6,0,l)
);
},
{
closed = 1;
nodes = (
(82,-97,o),
(82,-108,qs),
(82,-119,o),
(68,-134,o),
(57,-134,qs),
(46,-134,o),
(31,-119,o),
(31,-108,qs),
(31,-97,o),
(46,-82,o),
(57,-82,qs),
(68,-82,o)
);
},
{
closed = 1;
nodes = (
(167,-97,o),
(167,-108,qs),
(167,-119,o),
(153,-134,o),
(142,-134,qs),
(131,-134,o),
(116,-119,o),
(116,-108,qs),
(116,-97,o),
(131,-82,o),
(142,-82,qs),
(153,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
5 1 2 1 1 76 0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 97 7 1 0 0 24 0 78 33 32 21 20 1 0 39 37 32 43 33 43 27 25 20 31 21 31 18 16 9 8 0 19 1 19 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 221;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,0,l),
(247,0,ls),
(161,0,o),
(130,72,q),
(100,0,o),
(12,0,qs),
(-6,0,l),
(-6,23,l),
(14,23,ls),
(60,23,o),
(87,53,qs),
(117,85,o),
(117,143,qs),
(117,307,ls),
(117,324,o),
(121,332,qs),
(127,341,o),
(138,341,qs),
(141,341,ls),
(143,341,o),
(143,338,qs),
(143,143,ls),
(143,87,o),
(198,23,o),
(246,23,qs),
(277,23,l)
);
},
{
closed = 1;
nodes = (
(112,-97,o),
(112,-108,qs),
(112,-119,o),
(97,-134,o),
(86,-134,qs),
(75,-134,o),
(61,-119,o),
(61,-108,qs),
(61,-97,o),
(75,-82,o),
(86,-82,qs),
(97,-82,o)
);
},
{
closed = 1;
nodes = (
(197,-97,o),
(197,-108,qs),
(197,-119,o),
(182,-134,o),
(171,-134,qs),
(160,-134,o),
(146,-119,o),
(146,-108,qs),
(146,-97,o),
(160,-82,o),
(171,-82,qs),
(182,-82,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
21 4 2 0 1 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 97 4 1 3 3 24 3 78 39 38 27 26 1 0 45 43 38 49 39 49 33 31 26 37 27 37 24 22 20 18 17 15 8 7 0 25 1 25 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,527,qs),
(138,527,o),
(108,540,qs),
(71,557,o),
(59,557,qs),
(50,557,o),
(41,548,o),
(31,531,qs),
(29,527,o),
(26,531,qs),
(22,536,o),
(22,546,qs),
(22,578,o),
(56,578,qs),
(71,578,o),
(101,565,qs),
(138,549,o),
(150,549,qs),
(159,549,o),
(168,557,o),
(178,575,qs),
(180,579,o),
(183,575,qs),
(187,569,o),
(187,560,qs),
(187,527,o)
);
},
{
closed = 1;
nodes = (
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,78,o),
(382,41,qs),
(347,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,l),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(331,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
61 1 0 4 1 76 0 1 0 2 4 1 2 105 0 4 4 23 77 0 3 3 0 97 0 0 0 23 77 6 1 5 5 7 95 0 7 7 24 7 78 129 42 39 17 34 39 34 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,527,qs),
(138,527,o),
(108,540,qs),
(71,557,o),
(59,557,qs),
(50,557,o),
(41,548,o),
(31,531,qs),
(29,527,o),
(26,531,qs),
(22,536,o),
(22,546,qs),
(22,578,o),
(56,578,qs),
(71,578,o),
(101,565,qs),
(138,549,o),
(150,549,qs),
(159,549,o),
(168,557,o),
(178,575,qs),
(180,579,o),
(183,575,qs),
(187,569,o),
(187,560,qs),
(187,527,o)
);
},
{
closed = 1;
nodes = (
(548,0,l),
(519,0,ls),
(432,0,o),
(401,72,q),
(371,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,l),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(331,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls),
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,87,o),
(469,23,o),
(517,23,qs),
(548,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
30 1 0 5 65 1 4 3 2 76 0 1 0 2 5 1 2 105 0 5 5 23 77 0 3 3 0 97 0 0 0 23 77 7 6 10 3 4 4 8 97 9 1 8 8 24 8 78 27 26 68 66 64 56 55 53 43 41 34 33 26 69 27 69 34 39 34 38 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,536,o),
(34,528,qs),
(32,527,o),
(29,526,qs),
(27,525,o),
(26,525,qs),
(24,525,o),
(24,529,qs),
(24,533,o),
(25,535,q),
(29,554,o),
(55,557,q),
(38,579,o),
(38,607,qs),
(38,637,o),
(74,676,o),
(101,676,qs),
(121,676,o),
(152,655,o),
(152,642,qs),
(152,637,o),
(147,639,qs),
(145,640,o),
(142,642,qs),
(136,646,o),
(133,648,qs),
(121,654,o),
(108,654,qs),
(63,654,o),
(63,607,qs),
(63,584,o),
(87,557,o),
(107,557,qs),
(155,557,ls),
(173,557,o),
(173,539,qs),
(173,537,ls),
(173,536,o),
(171,536,qs),
(91,536,ls)
);
},
{
closed = 1;
nodes = (
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,78,o),
(382,41,qs),
(347,0,o),
(283,0,qs),
(242,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(115,443,o),
(116,443,qs),
(119,444,ls),
(121,445,o),
(122,443,qs),
(262,23,l),
(285,23,ls),
(331,23,o),
(358,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(392,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
76 1 3 0 31 1 6 3 2 76 27 1 0 1 75 0 6 3 5 3 6 5 128 0 2 0 1 0 2 1 105 9 1 3 3 0 97 4 1 0 0 23 77 7 1 5 5 8 95 0 8 8 24 8 78 0 0 72 64 63 61 55 51 50 48 41 40 0 39 0 38 41 35 52 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,536,o),
(34,528,qs),
(32,527,o),
(29,526,qs),
(27,525,o),
(26,525,qs),
(24,525,o),
(24,529,qs),
(24,533,o),
(25,535,q),
(29,554,o),
(55,557,q),
(38,579,o),
(38,607,qs),
(38,637,o),
(74,676,o),
(101,676,qs),
(121,676,o),
(152,655,o),
(152,642,qs),
(152,637,o),
(147,639,qs),
(145,640,o),
(142,642,qs),
(136,646,o),
(133,648,qs),
(121,654,o),
(108,654,qs),
(63,654,o),
(63,607,qs),
(63,584,o),
(87,557,o),
(107,557,qs),
(155,557,ls),
(173,557,o),
(173,539,qs),
(173,537,ls),
(173,536,o),
(171,536,qs),
(91,536,ls)
);
},
{
closed = 1;
nodes = (
(548,0,l),
(518,0,ls),
(432,0,o),
(401,72,q),
(371,0,o),
(283,0,qs),
(242,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(115,443,o),
(116,443,qs),
(119,444,ls),
(121,445,o),
(122,443,qs),
(262,23,l),
(285,23,ls),
(331,23,o),
(358,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(392,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls),
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,87,o),
(469,23,o),
(517,23,qs),
(548,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
44 1 3 0 31 1 7 3 80 1 4 7 3 76 27 1 0 1 75 0 7 3 4 3 7 4 128 0 2 0 1 0 2 1 105 11 1 3 3 0 97 5 1 0 0 23 77 8 6 12 3 4 4 9 97 10 1 9 9 24 9 78 41 40 0 0 83 81 79 71 70 68 62 58 57 55 48 47 40 84 41 84 0 39 0 38 41 35 52 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,78,o),
(382,41,qs),
(347,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,o),
(117,443,q),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(332,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls)
);
},
{
closed = 1;
nodes = (
(337,-204,o),
(337,-222,qs),
(337,-224,ls),
(337,-226,o),
(334,-226,qs),
(254,-226,ls),
(222,-226,o),
(197,-233,q),
(195,-234,o),
(192,-235,qs),
(190,-236,o),
(189,-236,qs),
(187,-236,o),
(187,-232,qs),
(187,-228,o),
(188,-226,q),
(192,-207,o),
(218,-204,q),
(202,-182,o),
(202,-154,qs),
(202,-124,o),
(237,-86,o),
(264,-86,qs),
(284,-86,o),
(315,-106,o),
(315,-119,qs),
(315,-124,o),
(310,-122,qs),
(308,-121,o),
(305,-119,qs),
(300,-115,o),
(296,-113,qs),
(284,-107,o),
(271,-107,qs),
(227,-107,o),
(227,-154,qs),
(227,-177,o),
(250,-204,o),
(270,-204,qs),
(318,-204,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
36 1 1 0 76 1 7 4 2 76 60 1 4 1 75 64 1 7 73 0 6 0 5 4 6 5 105 8 1 4 0 7 4 7 99 0 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 40 39 73 71 56 54 45 43 39 78 40 77 129 43 39 16 9 7 26 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,0,l),
(519,0,ls),
(432,0,o),
(401,72,q),
(371,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,o),
(117,443,q),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(332,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls),
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,87,o),
(469,23,o),
(517,23,qs),
(548,23,l)
);
},
{
closed = 1;
nodes = (
(337,-204,o),
(337,-222,qs),
(337,-224,ls),
(337,-226,o),
(334,-226,qs),
(254,-226,ls),
(222,-226,o),
(197,-233,q),
(195,-234,o),
(192,-235,qs),
(190,-236,o),
(189,-236,qs),
(187,-236,o),
(187,-232,qs),
(187,-228,o),
(188,-226,q),
(192,-207,o),
(218,-204,q),
(202,-182,o),
(202,-154,qs),
(202,-124,o),
(237,-86,o),
(264,-86,qs),
(284,-86,o),
(315,-106,o),
(315,-119,qs),
(315,-124,o),
(310,-122,qs),
(308,-121,o),
(305,-119,qs),
(300,-115,o),
(296,-113,qs),
(284,-107,o),
(271,-107,qs),
(227,-107,o),
(227,-154,qs),
(227,-177,o),
(250,-204,o),
(270,-204,qs),
(318,-204,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
40 4 2 0 1 82 1 9 6 2 76 66 1 6 1 75 70 1 9 73 0 8 0 7 6 8 7 105 11 1 6 0 9 6 9 99 0 1 1 23 77 3 2 10 3 0 0 4 97 5 1 4 4 24 4 78 46 45 1 0 79 77 62 60 51 49 45 84 46 83 43 41 39 31 30 28 17 15 8 7 0 44 1 44 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,78,o),
(382,41,qs),
(347,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,o),
(117,443,q),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(332,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
36 1 1 0 1 76 0 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 129 43 39 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,0,l),
(519,0,ls),
(432,0,o),
(401,72,q),
(371,0,o),
(284,0,qs),
(243,0,l),
(242,-1,l),
(242,0,l),
(63,0,ls),
(61,0,o),
(61,2,qs),
(61,4,ls),
(61,23,o),
(80,23,qs),
(234,23,l),
(107,405,ls),
(98,432,o),
(111,441,q),
(112,441,o),
(114,442,qs),
(116,443,o),
(117,443,q),
(119,444,ls),
(121,445,o),
(122,443,qs),
(263,23,l),
(285,23,ls),
(332,23,o),
(359,53,qs),
(388,85,o),
(388,143,qs),
(388,521,ls),
(388,538,o),
(393,546,qs),
(398,556,o),
(409,556,qs),
(412,556,ls),
(414,556,o),
(414,553,qs),
(414,143,ls),
(414,87,o),
(469,23,o),
(517,23,qs),
(548,23,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
40 4 2 0 1 1 76 0 1 1 23 77 3 2 6 3 0 0 4 97 5 1 4 4 24 4 78 1 0 43 41 39 31 30 28 17 15 8 7 0 44 1 44 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,7,qs),
(78,381,ls),
(78,556,o),
(226,556,qs),
(311,556,ls),
(313,556,o),
(313,554,qs),
(313,552,ls),
(313,545,o),
(306,538,qs),
(298,532,o),
(285,532,qs),
(225,532,ls),
(104,532,o),
(104,381,qs),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
2 1 2 0 1 76 0 0 0 1 95 0 1 1 23 77 3 1 2 2 24 2 78 0 0 0 19 0 18 83 52 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,7,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 2 2 1 0 1 76 0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 13 0 12 22 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,239,o),
(156,236,qs),
(156,232,o),
(153,229,qs),
(112,188,ls),
(109,185,o),
(107,185,qs),
(104,185,o),
(101,187,q),
(101,188,o),
(100,188,q),
(59,229,ls),
(56,232,o),
(56,236,qs),
(56,238,o),
(59,241,qs),
(100,282,ls),
(103,285,o),
(107,285,qs),
(109,285,o),
(112,282,qs),
(153,241,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
13 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,240,o),
(156,237,qs),
(156,233,o),
(153,231,q),
(112,189,ls),
(109,186,o),
(107,186,qs),
(104,186,o),
(101,188,q),
(101,189,o),
(100,189,q),
(59,231,l),
(56,233,o),
(56,237,qs),
(56,239,o),
(59,242,qs),
(100,283,ls),
(103,286,o),
(107,286,qs),
(109,286,o),
(112,283,qs),
(153,242,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
13 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,7,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 2 2 1 0 1 76 0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 13 0 12 22 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,0,o),
(78,7,qs),
(78,381,ls),
(78,556,o),
(226,556,qs),
(311,556,ls),
(313,556,o),
(313,554,qs),
(313,552,ls),
(313,545,o),
(306,538,qs),
(298,532,o),
(285,532,qs),
(225,532,ls),
(104,532,o),
(104,381,qs),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
2 1 2 0 1 76 0 0 0 1 95 0 1 1 23 77 3 1 2 2 24 2 78 0 0 0 19 0 18 83 52 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,0,o),
(39,7,q),
(111,456,ls),
(129,564,o),
(212,564,qs),
(295,564,o),
(312,456,qs),
(385,7,l),
(385,0,o),
(378,0,qs),
(365,0,ls),
(358,0,o),
(358,7,q),
(285,470,l),
(275,509,o),
(242,541,o),
(212,541,qs),
(182,541,o),
(149,509,o),
(139,470,q),
(65,7,l),
(65,0,o),
(58,0,qs),
(45,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
21 15 10 2 4 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 14 11 7 5 0 23 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,294,qs),
(346,279,o),
(282,256,o),
(245,257,qs),
(203,257,o),
(122,293,o),
(105,319,q),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls),
(78,0,o),
(78,7,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,489,l),
(122,524,o),
(191,564,o),
(233,564,qs),
(267,564,o),
(318,545,o),
(325,531,qs),
(329,521,o),
(318,521,qs),
(316,521,o),
(312,522,qs),
(310,523,ls),
(272,541,o),
(234,541,qs),
(183,541,o),
(146,502,qs),
(105,460,o),
(105,402,qs),
(105,390,ls),
(105,354,o),
(137,323,qs),
(179,282,o),
(246,280,qs),
(288,279,o),
(337,302,q),
(338,302,o),
(339,302,q),
(344,304,o),
(346,304,qs),
(356,304,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
29 1 1 4 43 28 2 7 2 42 1 5 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 37 37 22 35 35 39 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 408;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,20,qs),
(67,53,o),
(67,131,qs),
(67,134,o),
(71,215,qs),
(79,390,ls),
(82,464,o),
(117,510,qs),
(157,564,o),
(224,564,qs),
(283,564,o),
(322,523,qs),
(366,475,o),
(370,390,qs),
(379,194,ls),
(381,133,o),
(381,131,qs),
(381,55,o),
(338,-10,o),
(288,-10,qs),
(247,-10,o),
(226,19,qs),
(224,21,o),
(223,19,q),
(201,-10,o),
(160,-10,qs),
(114,-10,o)
);
},
{
closed = 1;
nodes = (
(216,63,qs),
(218,74,o),
(224,74,qs),
(230,74,o),
(233,63,qs),
(243,12,o),
(288,12,qs),
(323,12,o),
(355,70,o),
(355,134,qs),
(355,156,o),
(344,389,qs),
(341,455,o),
(312,495,qs),
(280,541,o),
(224,541,qs),
(176,541,o),
(145,505,qs),
(108,464,o),
(105,389,qs),
(94,157,o),
(94,134,qs),
(94,70,o),
(125,12,o),
(161,12,qs),
(205,12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 3 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 50 48 46 44 37 35 27 52 28 52 17 15 7 5 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,303,qs),
(252,273,o),
(180,188,qs),
(123,122,o),
(80,6,qs),
(78,0,o),
(72,0,qs),
(59,0,ls),
(52,0,o),
(54,8,qs),
(69,69,o),
(157,209,o),
(206,252,q),
(143,263,o),
(108,309,qs),
(74,353,o),
(74,416,qs),
(74,479,o),
(111,520,qs),
(153,564,o),
(226,564,qs),
(259,564,o),
(310,545,o),
(316,531,qs),
(320,521,o),
(310,521,qs),
(308,521,o),
(304,522,qs),
(302,523,o),
(301,523,q),
(263,541,o),
(226,541,qs),
(176,541,o),
(141,511,qs),
(100,475,o),
(100,416,qs),
(100,366,o),
(130,326,qs),
(169,277,o),
(232,273,q),
(315,322,o),
(385,333,qs),
(390,334,o),
(390,329,qs),
(390,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 0 2 31 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 2 1 0 1 2 0 128 0 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 0 1 2 0 128 0 0 4 1 0 4 126 0 3 0 1 2 3 1 105 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
43 35 36 38 20 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,540,o),
(380,531,qs),
(311,102,ls),
(292,-7,o),
(210,-7,qs),
(128,-7,o),
(110,102,qs),
(41,531,ls),
(39,540,o),
(50,556,o),
(59,556,qs),
(62,556,o),
(63,552,qs),
(137,88,l),
(147,49,o),
(180,17,o),
(210,17,qs),
(240,17,o),
(273,49,o),
(283,88,q),
(357,552,ls),
(358,556,o),
(361,556,qs),
(362,556,l),
(362,556,l),
(370,556,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 23 77 0 0 0 2 97 0 2 2 24 2 78 0 0 0 25 0 25 36 21 39 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,0,o),
(39,7,q),
(111,456,ls),
(129,564,o),
(212,564,qs),
(295,564,o),
(312,456,qs),
(385,7,l),
(385,0,o),
(378,0,qs),
(365,0,ls),
(358,0,o),
(358,7,q),
(285,470,l),
(275,509,o),
(242,541,o),
(212,541,qs),
(182,541,o),
(149,509,o),
(139,470,q),
(65,7,l),
(65,0,o),
(58,0,qs),
(45,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
21 15 10 2 4 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 17 14 11 7 5 0 23 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,522,qs),
(378,472,o),
(378,386,qs),
(378,7,ls),
(378,0,o),
(372,0,qs),
(359,0,ls),
(352,0,o),
(352,7,qs),
(352,208,l),
(223,208,ls),
(160,208,o),
(118,250,qs),
(67,300,o),
(67,386,qs),
(67,461,o),
(106,510,qs),
(151,564,o),
(223,564,qs),
(285,564,o)
);
},
{
closed = 1;
nodes = (
(136,505,qs),
(93,462,o),
(93,386,qs),
(93,320,o),
(126,278,qs),
(163,231,o),
(223,231,qs),
(352,231,l),
(352,387,ls),
(352,453,o),
(319,495,qs),
(282,541,o),
(223,541,qs),
(171,541,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 13 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(585,558,o),
(585,556,qs),
(585,442,ls),
(585,366,o),
(554,322,qs),
(519,272,o),
(452,272,qs),
(363,272,o),
(332,357,q),
(300,272,o),
(211,272,qs),
(139,272,o),
(104,330,q),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls),
(78,0,o),
(78,7,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,442,ls),
(104,295,o),
(211,295,qs),
(260,295,o),
(288,330,qs),
(319,370,o),
(319,442,qs),
(319,522,ls),
(319,539,o),
(323,547,qs),
(329,557,o),
(340,557,qs),
(342,557,ls),
(345,557,o),
(345,554,qs),
(345,442,ls),
(345,373,o),
(401,295,o),
(452,295,qs),
(500,295,o),
(528,330,qs),
(559,370,o),
(559,442,qs),
(559,524,ls),
(559,541,o),
(564,549,qs),
(569,558,o),
(580,558,qs),
(583,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
53 46 42 28 13 5 1 0 41 1 5 6 2 76 3 1 1 7 1 6 5 1 6 105 4 2 2 0 0 23 77 0 5 5 24 5 78 34 36 37 21 39 22 39 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,522,qs),
(378,472,o),
(378,386,qs),
(378,7,ls),
(378,0,o),
(372,0,qs),
(359,0,ls),
(352,0,o),
(352,7,qs),
(352,208,l),
(223,208,ls),
(160,208,o),
(118,250,qs),
(67,300,o),
(67,386,qs),
(67,461,o),
(106,510,qs),
(151,564,o),
(223,564,qs),
(285,564,o)
);
},
{
closed = 1;
nodes = (
(136,505,qs),
(93,462,o),
(93,386,qs),
(93,320,o),
(126,278,qs),
(163,231,o),
(223,231,qs),
(352,231,l),
(352,387,ls),
(352,453,o),
(319,495,qs),
(282,541,o),
(223,541,qs),
(171,541,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 13 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,540,o),
(380,531,qs),
(311,102,ls),
(292,-7,o),
(210,-7,qs),
(128,-7,o),
(110,102,qs),
(41,531,ls),
(39,540,o),
(50,556,o),
(59,556,qs),
(62,556,o),
(63,552,qs),
(137,88,l),
(147,49,o),
(180,17,o),
(210,17,qs),
(240,17,o),
(273,49,o),
(283,88,q),
(357,552,ls),
(358,556,o),
(361,556,qs),
(362,556,l),
(362,556,l),
(370,556,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 23 77 0 0 0 2 97 0 2 2 24 2 78 0 0 0 25 0 25 36 21 39 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,0,o),
(276,7,qs),
(276,381,ls),
(276,532,o),
(155,532,qs),
(95,532,ls),
(82,532,o),
(74,538,qs),
(67,545,o),
(67,552,qs),
(67,554,ls),
(67,556,o),
(69,556,qs),
(154,556,ls),
(302,556,o),
(302,381,qs),
(302,7,ls),
(302,0,o),
(295,0,qs),
(282,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 6 4 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 379;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,180,qs),
(378,173,o),
(378,174,qs),
(378,93,o),
(343,45,qs),
(301,-10,o),
(223,-10,qs),
(154,-10,o),
(113,33,qs),
(67,81,o),
(67,174,qs),
(67,186,o),
(77,390,qs),
(80,464,o),
(115,510,qs),
(155,564,o),
(223,564,qs),
(281,564,o),
(319,523,qs),
(364,476,o),
(368,392,qs),
(375,247,o)
);
},
{
closed = 1;
nodes = (
(314,50,qs),
(352,92,o),
(352,174,q),
(342,390,ls),
(339,455,o),
(310,495,qs),
(278,541,o),
(223,541,qs),
(174,541,o),
(143,505,qs),
(107,464,o),
(103,389,qs),
(93,174,l),
(93,102,o),
(123,61,qs),
(156,13,o),
(223,13,qs),
(280,13,o)
);
},
{
closed = 1;
nodes = (
(378,174,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
23 22 32 30 22 39 23 39 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,267,o),
(131,231,qs),
(93,196,o),
(93,147,qs),
(93,92,o),
(125,59,qs),
(160,23,o),
(224,23,qs),
(315,23,ls),
(326,23,o),
(343,12,o),
(343,3,qs),
(343,2,ls),
(343,0,o),
(340,0,qs),
(227,0,ls),
(160,0,o),
(118,31,qs),
(67,69,o),
(67,147,qs),
(67,192,o),
(119,264,o),
(163,279,q),
(75,312,o),
(75,421,qs),
(75,481,o),
(112,520,qs),
(155,564,o),
(227,564,qs),
(263,564,o),
(318,545,o),
(325,531,qs),
(329,521,o),
(318,521,qs),
(316,521,o),
(312,522,qs),
(310,523,ls),
(272,541,o),
(229,541,qs),
(177,541,o),
(141,510,qs),
(101,476,o),
(101,421,qs),
(101,361,o),
(135,327,qs),
(171,290,o),
(238,290,qs),
(315,290,ls),
(326,290,o),
(343,278,o),
(343,270,qs),
(343,268,ls),
(343,267,o),
(340,267,qs),
(229,267,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 6 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 0 0 7 1 6 5 0 6 103 0 1 1 3 97 0 3 3 23 77 0 5 5 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 7 1 6 5 0 6 103 0 5 5 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 54 0 53 53 43 35 35 38 53 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 409;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(585,558,o),
(585,556,qs),
(585,442,ls),
(585,366,o),
(554,322,qs),
(519,272,o),
(452,272,qs),
(363,272,o),
(332,357,q),
(300,272,o),
(211,272,qs),
(139,272,o),
(104,330,q),
(104,7,ls),
(104,0,o),
(98,0,qs),
(85,0,ls),
(78,0,o),
(78,7,qs),
(78,521,ls),
(78,538,o),
(82,546,qs),
(88,556,o),
(99,556,qs),
(102,556,ls),
(104,556,o),
(104,553,qs),
(104,442,ls),
(104,295,o),
(211,295,qs),
(260,295,o),
(288,330,qs),
(319,370,o),
(319,442,qs),
(319,522,ls),
(319,539,o),
(323,547,qs),
(329,557,o),
(340,557,qs),
(342,557,ls),
(345,557,o),
(345,554,qs),
(345,442,ls),
(345,373,o),
(401,295,o),
(452,295,qs),
(500,295,o),
(528,330,qs),
(559,370,o),
(559,442,qs),
(559,524,ls),
(559,541,o),
(564,549,qs),
(569,558,o),
(580,558,qs),
(583,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
53 46 42 28 13 5 1 0 41 1 5 6 2 76 3 1 1 7 1 6 5 1 6 105 4 2 2 0 0 23 77 0 5 5 24 5 78 34 36 37 21 39 22 39 16 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = ExtraLight;
properties = (
{
key = postscriptFullName;
value = "Zain ExtraLight";
},
{
key = postscriptFontName;
value = "Zain-ExtraLight";
}
);
weightClass = 200;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -14;
"@MMK_R_O" = -14;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -23;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -9;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
"@MMK_R_quoteright" = 14;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -14;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -12;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_quoteright" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -5;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -19;
"@MMK_R_C" = -12;
"@MMK_R_O" = -12;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_c" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 9;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -13;
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -4;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -14;
"@MMK_R_u" = -6;
"@MMK_R_y" = -4;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -16;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -4;
"@MMK_R_z" = -11;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_S" = 7;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 12;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -5;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -5;
"@MMK_R_quoteright" = 11;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -6;
"@MMK_R_c" = -11;
"@MMK_R_e" = -7;
"@MMK_R_o" = -5;
};
A = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -14;
J = 11;
Q = -14;
T = -28;
V = -17;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -8;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
y = -6;
yacute = -6;
ydieresis = -6;
};
C = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -13;
AE = -27;
Aacute = -13;
Acircumflex = -13;
Adieresis = -13;
Agrave = -13;
Aring = -13;
Atilde = -13;
J = -18;
M = -4;
T = -23;
V = -14;
W = -9;
X = -13;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
uni0622 = 56;
uni0623 = 56;
uni0625 = 56;
uni0671 = 44;
};
E = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -18;
AE = -36;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 6;
V = 4;
W = 4;
X = -6;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -23;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -23;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -7;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -9;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -20;
Ccedilla = -20;
G = -20;
O = -17;
OE = -17;
Oacute = -17;
Ocircumflex = -17;
Odieresis = -17;
Ograve = -17;
Oslash = -17;
Otilde = -17;
Q = -17;
S = -4;
Scaron = -4;
T = -5;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -42;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -29;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
colon = 4;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -11;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -19;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -4;
Scaron = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
o = -3;
oacute = -3;
ocircumflex = -3;
odieresis = -3;
oe = -3;
ograve = -3;
oslash = -3;
otilde = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -27;
J = -14;
M = -4;
T = -17;
V = -7;
W = -4;
X = -11;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
P = {
A = -28;
AE = -49;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
J = -32;
M = -3;
T = -8;
X = -18;
Y = -4;
Yacute = -4;
Ydieresis = -4;
Z = -9;
Zcaron = -9;
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -13;
ccedilla = -13;
comma = -29;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
g = -14;
hyphen = -6;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -29;
q = -13;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
z = -8;
zcaron = -8;
};
Q = {
A = -12;
AE = -12;
Aacute = -12;
Acircumflex = -12;
Adieresis = -12;
Agrave = -12;
Aring = -12;
Atilde = -12;
J = -15;
T = -17;
V = -11;
W = -8;
X = -9;
Y = -12;
Yacute = -12;
Ydieresis = -12;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
d = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -4;
scaron = -4;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -22;
AE = -48;
Aacute = -22;
Acircumflex = -22;
Adieresis = -22;
Agrave = -22;
Aring = -22;
Atilde = -22;
C = -16;
Ccedilla = -16;
G = -16;
J = -28;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 6;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -39;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -18;
AE = -33;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
C = -7;
Ccedilla = -7;
G = -7;
J = -19;
O = -7;
OE = -7;
Oacute = -7;
Ocircumflex = -7;
Odieresis = -7;
Ograve = -7;
Oslash = -7;
Otilde = -7;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
c = -31;
ccedilla = -31;
colon = -7;
comma = -24;
d = -29;
dotlessi = -11;
e = -29;
eacute = -29;
ecircumflex = -29;
edieresis = -29;
egrave = -29;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -29;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
p = -11;
period = -24;
q = -29;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -13;
AE = -29;
Aacute = -13;
Acircumflex = -13;
Adieresis = -13;
Agrave = -13;
Aring = -13;
Atilde = -13;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -8;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -13;
Ccedilla = -13;
G = -13;
O = -12;
OE = -12;
Oacute = -12;
Ocircumflex = -12;
Odieresis = -12;
Ograve = -12;
Oslash = -12;
Otilde = -12;
Q = -12;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -44;
G = -12;
J = -29;
Q = -12;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -44;
G = -12;
J = -29;
Q = -12;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -44;
G = -12;
J = -29;
Q = -12;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
};
aacute = {
question = -11;
};
acircumflex = {
question = -11;
};
adieresis = {
question = -11;
};
ae = {
question = -22;
t = -4;
v = -4;
x = -6;
};
agrave = {
question = -11;
};
aring = {
question = -11;
};
atilde = {
question = -11;
};
b = {
comma = -7;
f = -7;
fi = -7;
fl = -7;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -5;
x = -7;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 49;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
uni0622 = 56;
uni0623 = 56;
uni0625 = 39;
uni0627 = 0;
uni0631 = 0;
uni0632 = 0;
uni0671 = 67;
uni0691 = 0;
uni0698 = 0;
};
bracketleft = {
j = 51;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
uni0622 = 56;
uni0623 = 56;
uni0625 = 39;
uni0627 = 0;
uni0631 = 0;
uni0632 = 0;
uni0671 = 67;
uni0691 = 0;
uni0698 = 0;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
comma = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -16;
quoteright = -16;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
dollar = {
eight = 5;
eight.ar = 5;
eight.farsi = 5;
four = 14;
four.ar = 14;
four.farsi = 14;
nine = -10;
nine.ar = -10;
nine.farsi = -10;
};
e = {
question = -22;
t = -4;
v = -4;
x = -6;
};
eacute = {
question = -22;
t = -4;
v = -4;
x = -6;
};
ecircumflex = {
question = -22;
t = -4;
v = -4;
x = -6;
};
edieresis = {
question = -22;
t = -4;
v = -4;
x = -6;
};
egrave = {
question = -22;
t = -4;
v = -4;
x = -6;
};
eight = {
comma = -7;
eight = 5;
four = 7;
period = -7;
seven = -13;
two = -10;
};
eight.ar = {
comma = -7;
eight.ar = 5;
four.ar = 7;
period = -7;
seven.ar = -13;
two.ar = -10;
};
eight.farsi = {
comma = -7;
eight.farsi = 5;
four.farsi = 7;
period = -7;
seven.farsi = -13;
two.farsi = -10;
};
exclamdown = {
j = 44;
y = 8;
yacute = 8;
ydieresis = 8;
};
f = {
a = -18;
aacute = -18;
acircumflex = -18;
adieresis = -18;
ae = -18;
agrave = -18;
aring = -18;
atilde = -18;
c = -18;
ccedilla = -18;
comma = -21;
d = -18;
e = -18;
eacute = -18;
ecircumflex = -18;
edieresis = -18;
egrave = -18;
exclam = 6;
g = -18;
hyphen = -9;
o = -18;
oacute = -18;
ocircumflex = -18;
odieresis = -18;
oe = -18;
ograve = -18;
oslash = -18;
otilde = -18;
period = -21;
q = -18;
question = 12;
quotedblright = 13;
quoteright = 13;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -12;
zero = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -12;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -12;
zero.farsi = -3;
};
fl = {
colon = 5;
comma = 16;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 16;
q = -4;
question = -12;
semicolon = 5;
t = -5;
v = -4;
w = -3;
};
four = {
four = 6;
nine = -7;
one = -3;
seven = -4;
six = -4;
zero = -7;
};
four.ar = {
four.ar = 6;
nine.ar = -7;
one.ar = -3;
seven.ar = -4;
six.ar = -4;
zero.ar = -7;
};
four.farsi = {
four.farsi = 6;
nine.farsi = -7;
one.farsi = -3;
seven.farsi = -4;
six.farsi = -4;
zero.farsi = -7;
};
g = {
j = 29;
question = -12;
quotedblright = -5;
quoteright = -5;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -16;
quoteright = -16;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -11;
ccedilla = -11;
comma = 7;
d = -11;
e = -11;
eacute = -11;
ecircumflex = -11;
edieresis = -11;
egrave = -11;
g = -11;
hyphen = -8;
o = -11;
oacute = -11;
ocircumflex = -11;
odieresis = -11;
oe = -11;
ograve = -11;
oslash = -11;
otilde = -11;
period = 7;
q = -11;
question = -6;
};
l = {
colon = 5;
comma = 16;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 16;
q = -4;
question = -12;
semicolon = 5;
t = -5;
v = -4;
w = -3;
};
lam_alefvabovear = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 22;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 22;
lamvabovear.init = 22;
uni0621 = 22;
uni0622 = 56;
uni0623 = 56;
uni0624 = 28;
uni0625 = 33;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 56;
uni0686 = 22;
uni0691 = 44;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 22;
uniFE8B = 28;
uniFE97 = 33;
uniFE9B = 33;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 0;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
lam_alefvabovear.fina = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 22;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 22;
lamvabovear.init = 22;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 44;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 22;
uniFE8B = 28;
uniFE9B = 33;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -16;
quoteright = -16;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine = {
comma = -27;
five = -3;
four = -8;
period = -27;
seven = -14;
six = -7;
three = -9;
two = -16;
zero = -5;
};
nine.ar = {
comma = -27;
five.ar = -3;
four.ar = -8;
period = -27;
seven.ar = -14;
six.ar = -7;
three.ar = -9;
two.ar = -16;
zero.ar = -5;
};
nine.farsi = {
comma = -27;
five.farsi = -3;
four.farsi = -8;
period = -27;
seven.farsi = -14;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
zero.farsi = -5;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
oacute = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
ocircumflex = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
odieresis = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
oe = {
question = -22;
t = -4;
v = -4;
x = -6;
};
ograve = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
one = {
eight = -11;
five = -10;
four = -14;
nine = -19;
seven = -21;
six = -16;
three = -4;
zero = -16;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -14;
nine.ar = -19;
seven.ar = -21;
six.ar = -16;
three.ar = -4;
zero.ar = -16;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -14;
nine.farsi = -19;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -4;
zero.farsi = -16;
};
oslash = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
otilde = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -4;
w = -3;
x = -6;
};
p = {
comma = -7;
f = -7;
fi = -7;
fl = -7;
period = -7;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -5;
x = -7;
z = -6;
zcaron = -6;
};
parenleft = {
comma = 16;
j = 72;
p = 13;
y = 38;
yacute = 38;
ydieresis = 38;
};
parenright = {
uni0622 = 56;
uni0623 = 56;
uni0625 = 39;
uni0627 = 0;
uni0631 = 0;
uni0632 = 0;
uni0671 = 67;
uni0691 = 0;
uni0698 = 0;
};
period = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -16;
quoteright = -16;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
q = {
j = 34;
};
questiondown = {
j = 74;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -14;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0691 = 39;
uni0698 = 28;
uniFE8B = 39;
uniFE97 = 28;
uniFE9B = 28;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
rehvabovear = 22;
uni0691 = 50;
uni0698 = 28;
uniFE8B = 39;
uniFE97 = 28;
uniFE9B = 28;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehHamzaabovear = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 22;
yehvabovear.init = 22;
};
quoteleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0698 = 28;
uniFE8B = 39;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
comma = -17;
d = -31;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -6;
n = -6;
ntilde = -6;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
period = -17;
r = -12;
rehvabovear = 22;
s = -21;
scaron = -21;
uni0691 = 50;
uni0698 = 28;
uniFE8B = 39;
uniFE97 = 28;
uniFE9B = 28;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehHamzaabovear = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 22;
yehvabovear.init = 22;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -14;
v = -18;
w = -16;
};
r = {
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -14;
ccedilla = -14;
comma = -15;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
f = 4;
fi = 4;
fl = 4;
g = -14;
hyphen = -4;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -15;
q = -14;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
rehvabovear = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
rehvabovear.fina = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
rehvbelowar.fina = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
s = {
comma = 5;
period = 5;
question = -18;
};
scaron = {
comma = 5;
period = 5;
question = -18;
};
seven = {
comma = -35;
eight = -9;
four = -32;
nine = -6;
one = 5;
period = -35;
six = -27;
two = -12;
zero = -13;
};
seven.ar = {
comma = -35;
eight.ar = -9;
four.ar = -32;
nine.ar = -6;
one.ar = 5;
period = -35;
six.ar = -27;
two.ar = -12;
zero.ar = -13;
};
seven.farsi = {
comma = -35;
eight.farsi = -9;
four.farsi = -32;
nine.farsi = -6;
one.farsi = 5;
period = -35;
six.farsi = -27;
two.farsi = -12;
zero.farsi = -13;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -23;
two = -11;
zero = -4;
};
six.ar = {
comma = -9;
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -23;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
comma = -9;
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -23;
two.farsi = -11;
zero.farsi = -4;
};
space = {
uni0642 = 11;
uni0646 = 11;
uni064A = 11;
yehvabovear = 22;
};
sterling = {
eight = -5;
eight.ar = -5;
eight.farsi = -5;
four = -12;
four.ar = -12;
four.farsi = -12;
seven = 6;
seven.ar = 6;
seven.farsi = 6;
six = -18;
six.ar = -18;
six.farsi = -18;
};
t = {
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -18;
d = -9;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
f = 4;
fi = 4;
fl = 4;
g = -9;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = -18;
q = -9;
question = -6;
t = 3;
x = -5;
};
three = {
comma = -7;
four = 9;
one = -3;
period = -7;
seven = -9;
two = -10;
zero = -6;
};
three.ar = {
comma = -7;
four.ar = 9;
one.ar = -3;
period = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
comma = -7;
four.farsi = 9;
one.farsi = -3;
period = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two = {
comma = -7;
eight = -4;
five = -5;
four = -16;
nine = -4;
period = -7;
seven = -11;
six = -16;
three = -5;
zero = -11;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -5;
four.ar = -16;
nine.ar = -4;
period = -7;
seven.ar = -11;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -5;
four.farsi = -16;
nine.farsi = -4;
period = -7;
seven.farsi = -11;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uni0622 = {
Decoratedbracketleft = 56;
braceleft = 56;
bracketleft = 56;
lamdotabovear = 39;
lamdotabovear.init = 50;
lamthreedotsabovear = 61;
lamthreedotsabovear.init = 72;
lamvabovear = 44;
lamvabovear.init = 33;
parenleft = 56;
uni0622 = 89;
uni0623 = 78;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0632 = 44;
uni0639 = 11;
uni063A = 11;
uni0671 = 83;
uni0686 = 11;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 44;
};
uni0623 = {
Decoratedbracketleft = 56;
braceleft = 56;
bracketleft = 56;
lamdotabovear = 28;
lamdotabovear.init = 33;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 67;
lamvabovear = 22;
lamvabovear.init = 22;
parenleft = 56;
uni0622 = 78;
uni0623 = 78;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0632 = 44;
uni0639 = 11;
uni063A = 11;
uni0671 = 78;
uni0686 = 11;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 44;
};
uni0625 = {
Decoratedbracketleft = 56;
braceleft = 39;
bracketleft = 39;
parenleft = 39;
uni0625 = 83;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0632 = 17;
uni0639 = 11;
uni063A = 11;
uni0686 = 11;
uni0691 = 33;
uni0698 = 28;
uniFB68 = 39;
uniFB7C = 11;
uniFE8B = 33;
uniFE97 = 22;
uniFE9B = 28;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 17;
};
uni0627 = {
braceleft = 0;
parenleft = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0632 = 17;
uni0639 = 11;
uni063A = 11;
uni0686 = 11;
uni0691 = 44;
uni0698 = 28;
uniFB68 = 39;
uniFB7C = 11;
uniFE8B = 33;
uniFE97 = 22;
uniFE9B = 28;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 17;
};
uni062F = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uni0630 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uni0631 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 83;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 56;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uni0632 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uni0637 = {
uni0621 = 22;
};
uni0638 = {
uni0621 = 22;
};
uni06440671 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 67;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 67;
lamvabovear = 22;
lamvabovear.init = 67;
uni0621 = 22;
uni0622 = 67;
uni0623 = 67;
uni0624 = 28;
uni0625 = 67;
uni0626 = 22;
uni0627 = 67;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 67;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 67;
uni0686 = 22;
uni0691 = 100;
uni0698 = 56;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 67;
uniFE8B = 83;
uniFE97 = 556;
uniFE9B = 56;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 67;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uni06440671.fina = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 67;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 67;
lamvabovear = 22;
lamvabovear.init = 67;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 33;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 67;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 100;
uni0698 = 56;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 67;
uniFE8B = 83;
uniFE97 = 56;
uniFE9B = 56;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 67;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabove_yehvar = 56;
yehvabovear = 22;
};
uni0671 = {
Decoratedbracketleft = 67;
braceleft = 67;
bracketleft = 67;
lamdotabovear = 44;
lamdotabovear.init = 56;
lamthreedotsabovear = 67;
lamthreedotsabovear.init = 78;
lamvabovear = 44;
lamvabovear.init = 44;
parenleft = 67;
uni0622 = 83;
uni0623 = 50;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0632 = 39;
uni0639 = 11;
uni063A = 11;
uni0671 = 83;
uni0686 = 11;
uni0691 = 44;
uni0698 = 39;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 39;
uniFE97 = 39;
uniFE9B = 39;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 39;
};
uni0688 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uni0691 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE8B = 33;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uni0694 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uni0695 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uni0698 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uniF805 = {
uniF806 = -167;
};
uniF806 = {
uniF805 = 28;
};
uniFB51 = {
Decoratedbracketleft = 67;
braceleft = 67;
bracketleft = 67;
lamdotabovear = 44;
lamdotabovear.init = 56;
lamthreedotsabovear = 67;
lamthreedotsabovear.init = 78;
lamvabovear = 44;
lamvabovear.init = 44;
parenleft = 67;
uni0622 = 83;
uni0623 = 89;
uni0632 = 39;
uni0671 = 83;
uni0691 = 556;
uni0698 = 39;
uniFB68 = 44;
uniFE8B = 39;
uniFE97 = 39;
uniFE9B = 39;
uniFEE7 = 39;
};
uniFB89 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFB8B = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uniFB8D = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE8B = 33;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uniFE82 = {
Decoratedbracketleft = 56;
braceleft = 56;
bracketleft = 56;
lamdotabovear = 39;
lamdotabovear.init = 50;
lamthreedotsabovear = 61;
lamthreedotsabovear.init = 72;
lamvabovear = 44;
lamvabovear.init = 33;
parenleft = 56;
uni0622 = 89;
uni0623 = 39;
uni0632 = 44;
uni0671 = 83;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFE84 = {
Decoratedbracketleft = 56;
braceleft = 44;
bracketleft = 56;
lamdotabovear = 28;
lamdotabovear.init = 33;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 67;
lamvabovear = 22;
lamvabovear.init = 22;
parenleft = 44;
uni0622 = 78;
uni0623 = 78;
uni0632 = 44;
uni0671 = 78;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFE88 = {
Decoratedbracketleft = 44;
braceleft = 22;
bracketleft = 22;
parenleft = 22;
uni0625 = 56;
uni0632 = 17;
uni0691 = 33;
uni0698 = 28;
uniFB68 = 39;
uniFE8B = 33;
uniFE97 = 22;
uniFE9B = 28;
uniFEE7 = 17;
};
uniFE8E = {
braceleft = 0;
parenleft = 0;
uni0632 = 17;
uni0691 = 33;
uni0698 = 28;
uniFB68 = 39;
uniFE8B = 33;
uniFE97 = 22;
uniFE9B = 28;
uniFEE7 = 17;
};
uniFEAA = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEAC = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
rehvabovear = 22;
uni0621 = 22;
uni0622 = 22;
uni0623 = 22;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 22;
uni0632 = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 22;
uni0694 = 22;
uni0695 = 22;
uni0698 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEAE = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uniFEB0 = {
Decoratedbracketleft = 139;
braceleft = 139;
bracketleft = 139;
lamdotabovear = 50;
lamthreedotsabovear = 50;
lamvabovear = 50;
parenleft = 139;
rehvabovear = 78;
uni0624 = 81;
uni0625 = 167;
uni0626 = 72;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0631 = 78;
uni0632 = 78;
uni0639 = 67;
uni063A = 67;
uni0642 = 56;
uni0644 = 56;
uni0646 = 56;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 22;
uni0691 = 78;
uni0694 = 78;
uni0695 = 78;
uni0698 = 78;
uni06CC = 67;
uniEECD = 67;
uniEECF = 0;
uniFB58 = 106;
uniFB58FE8A = 106;
uniFB58FEF0 = 106;
uniFB58FEF2 = 106;
uniFB7C = 0;
uniFBA8FE8A = 11;
uniFBA8FEF0 = 11;
uniFBA8FEF2 = 11;
uniFBFE = 106;
uniFBFEFBFD = 106;
uniFC59 = 106;
uniFC5A = 106;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 0;
uniFECF = 0;
uniFEF3 = 106;
uniFEF3FE8A = 106;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 106;
yehvabove_pehar = 106;
yehvabove_yehHamzaabovear = 106;
yehvabove_yehar = 106;
yehvabove_yehvar = 106;
yehvabovear = 72;
yehvabovear.init = 106;
};
uniFEC2 = {
uni0621 = 22;
};
uniFEC6 = {
uni0621 = 22;
};
uniFEF5 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 33;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 56;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 94;
uni0698 = 56;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 56;
uniFE8B = 83;
uniFE97 = 56;
uniFE9B = 56;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 56;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEF6 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 33;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 56;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 94;
uni0698 = 56;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 56;
uniFE8B = 83;
uniFE97 = 56;
uniFE9B = 56;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 56;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEF7 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 44;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 44;
lamvabovear = 22;
lamvabovear.init = 44;
rehvabovear = 44;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 33;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 100;
uni0698 = 44;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 44;
uniFE8B = 56;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 44;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabove_yehvar = 44;
yehvabovear = 22;
};
uniFEF8 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamdotabovear.init = 44;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 44;
lamvabovear = 22;
lamvabovear.init = 44;
rehvabovear = 44;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0643 = 44;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 100;
uni0698 = 44;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFDF2 = 44;
uniFE8B = 56;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 44;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabove_yehvar = 44;
yehvabovear = 22;
};
uniFEF9 = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 28;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEFA = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 28;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
uniFEFB = {
aleflaminitial = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 22;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
};
uniFEFC = {
aleflaminitial = 22;
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 22;
uni0622 = 33;
uni0623 = 33;
uni0624 = 28;
uni0625 = 22;
uni0626 = 22;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0642 = 22;
uni0644 = 22;
uni0646 = 11;
uni0648 = 28;
uni0649 = 22;
uni064A = 22;
uni0671 = 33;
uni0686 = 22;
uni0691 = 28;
uni06CC = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE8B = 0;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
wawtwodotsabovear = 28;
wawvabovear = 28;
yehvabovear = 22;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
exclam = 11;
g = -3;
hyphen = -6;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
exclam = 11;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -7;
ccedilla = -7;
comma = 7;
d = -12;
e = -6;
eacute = -6;
ecircumflex = -6;
edieresis = -6;
egrave = -6;
exclam = 4;
g = -7;
hyphen = -12;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
period = 7;
q = -7;
question = -12;
t = -3;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -4;
w = -4;
y = -4;
yacute = -4;
ydieresis = -4;
};
y = {
comma = -22;
d = -3;
exclam = 11;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
exclam = 11;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
exclam = 11;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yen = {
five = 7;
five.ar = 7;
five.farsi = 7;
seven = 12;
seven.ar = 12;
seven.farsi = 12;
six = -6;
six.ar = -6;
six.farsi = -6;
two = -7;
two.ar = -7;
two.farsi = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -4;
nine = -5;
one = -8;
period = -23;
seven = -24;
six = -5;
three = -7;
two = -17;
};
zero.ar = {
comma = -23;
five.ar = -4;
nine.ar = -5;
one.ar = -8;
period = -23;
seven.ar = -24;
six.ar = -5;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
comma = -23;
five.farsi = -4;
nine.farsi = -5;
one.farsi = -8;
period = -23;
seven.farsi = -24;
six.farsi = -5;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
