{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
quotedbl.arabic,
numbersign.arabic,
dollar.arabic,
percent.arabic,
ampersand.arabic,
quotesingle.arabic,
parenleft.arabic,
parenright.arabic,
asterisk.arabic,
plus.arabic,
hyphen.arabic,
period.arabic,
slash.arabic,
zero.arabic,
one.arabic,
two.arabic,
three.arabic,
four.arabic,
five.arabic,
six.arabic,
seven.arabic,
eight.arabic,
nine.arabic,
colon.arabic,
less.arabic,
equal.arabic,
greater.arabic,
at.arabic,
bracketleft.arabic,
backslash.arabic,
bracketright.arabic,
asciicircum.arabic,
braceleft.arabic,
bar.arabic,
braceright.arabic,
asciitilde.arabic,
cent.arabic,
sterling.arabic,
Euro.arabic,
yen.arabic,
brokenbar.arabic,
section.arabic,
copyright.arabic,
guillemotleft.arabic,
uni00AD.arabic,
registered.arabic,
degree.arabic,
plusminus.arabic,
twosuperior.arabic,
threesuperior.arabic,
paragraph.arabic,
onesuperior.arabic,
guillemotright.arabic,
onequarter.arabic,
onehalf.arabic,
threequarters.arabic,
multiply.arabic,
divide.arabic,
endash.arabic,
emdash.arabic,
quoteleft.arabic,
quoteright.arabic,
quotesinglbase.arabic,
quotedblleft.arabic,
quotedblright.arabic,
quotedblbase.arabic,
dagger.arabic,
daggerdbl.arabic,
bullet.arabic,
ellipsis.arabic,
perthousand.arabic,
guilsinglleft.arabic,
guilsinglright.arabic,
fraction.arabic,
uni20AC.arabic,
trademark.arabic,
minus.arabic,
notequal.arabic,
lessequal.arabic,
greaterequal.arabic,
zero.tab.arabic,
one.tab.arabic,
two.tab.arabic,
three.tab.arabic,
four.tab.arabic,
five.tab.arabic,
six.tab.arabic,
seven.tab.arabic,
eight.tab.arabic,
nine.tab.arabic,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni06F4,
uni06F5,
uni06F6,
uni0660,
uni06F8,
uni06F9,
uni06F7,
uni0661,
uni0662,
uni0663,
uni0664,
uni0665,
uni0666,
uni0667,
uni0668,
uni0669,
uni06F0,
uni06F1,
uni06F2,
uni06F3
);
}
);
date = "2025-07-04 16:49:53 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_18 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_18;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script latn;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
script arab;
language dflt;
lookup SUB_14 {
	sub zero.tab.arabic by zero.ar;
	sub one.tab.arabic by one.ar;
	sub two.tab.arabic by two.ar;
	sub three.tab.arabic by three.ar;
	sub four.tab.arabic by four.ar;
	sub five.tab.arabic by five.ar;
	sub six.tab.arabic by six.ar;
	sub seven.tab.arabic by seven.ar;
	sub eight.tab.arabic by eight.ar;
	sub nine.tab.arabic by nine.ar;
} SUB_14;
lookup SUB_15 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_15;
";
tag = pnum;
},
{
code = "script latn;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
script arab;
language dflt;
lookup SUB_12 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni0661 by uni0661.tab;
	sub uni0662 by uni0662.tab;
	sub uni0663 by uni0663.tab;
	sub uni0664 by uni0664.tab;
	sub uni0665 by uni0665.tab;
	sub uni0666 by uni0666.tab;
	sub uni0667 by uni0667.tab;
	sub uni0668 by uni0668.tab;
	sub uni0669 by uni0669.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni06F3 by uni06F3.tab;
} SUB_12;
lookup SUB_13 {
	sub zero.ar by zero.tab.arabic;
	sub one.ar by one.tab.arabic;
	sub two.ar by two.tab.arabic;
	sub three.ar by three.tab.arabic;
	sub four.ar by four.tab.arabic;
	sub five.ar by five.tab.arabic;
	sub six.ar by six.tab.arabic;
	sub seven.ar by seven.tab.arabic;
	sub eight.ar by eight.tab.arabic;
	sub nine.ar by nine.tab.arabic;
} SUB_13;
";
tag = lnum;
},
{
code = "script latn;
language dflt;
lookup SUB_7;
script arab;
language dflt;
lookup SUB_12;
lookup SUB_13;
";
tag = tnum;
},
{
code = "script arab;
language dflt;
lookup SUB_8 {
	sub quotedbl by quotedbl.arabic;
	sub numbersign by numbersign.arabic;
	sub dollar by dollar.arabic;
	sub percent by percent.arabic;
	sub ampersand by ampersand.arabic;
	sub quotesingle by quotesingle.arabic;
	sub parenleft by parenleft.arabic;
	sub parenright by parenright.arabic;
	sub asterisk by asterisk.arabic;
	sub plus by plus.arabic;
	sub hyphen by hyphen.arabic;
	sub period by period.arabic;
	sub slash by slash.arabic;
	sub zero by zero.arabic;
	sub one by one.arabic;
	sub two by two.arabic;
	sub three by three.arabic;
	sub four by four.arabic;
	sub five by five.arabic;
	sub six by six.arabic;
	sub seven by seven.arabic;
	sub eight by eight.arabic;
	sub nine by nine.arabic;
	sub colon by colon.arabic;
	sub less by less.arabic;
	sub equal by equal.arabic;
	sub greater by greater.arabic;
	sub at by at.arabic;
	sub bracketleft by bracketleft.arabic;
	sub backslash by backslash.arabic;
	sub bracketright by bracketright.arabic;
	sub asciicircum by asciicircum.arabic;
	sub braceleft by braceleft.arabic;
	sub bar by bar.arabic;
	sub braceright by braceright.arabic;
	sub asciitilde by asciitilde.arabic;
	sub cent by cent.arabic;
	sub sterling by sterling.arabic;
	sub yen by yen.arabic;
	sub brokenbar by brokenbar.arabic;
	sub section by section.arabic;
	sub copyright by copyright.arabic;
	sub guillemotleft by guillemotleft.arabic;
	sub uni00AD by uni00AD.arabic;
	sub registered by registered.arabic;
	sub degree by degree.arabic;
	sub plusminus by plusminus.arabic;
	sub twosuperior by twosuperior.arabic;
	sub threesuperior by threesuperior.arabic;
	sub paragraph by paragraph.arabic;
	sub onesuperior by onesuperior.arabic;
	sub guillemotright by guillemotright.arabic;
	sub onequarter by onequarter.arabic;
	sub onehalf by onehalf.arabic;
	sub threequarters by threequarters.arabic;
	sub multiply by multiply.arabic;
	sub divide by divide.arabic;
	sub endash by endash.arabic;
	sub emdash by emdash.arabic;
	sub quoteleft by quoteleft.arabic;
	sub quoteright by quoteright.arabic;
	sub quotesinglbase by quotesinglbase.arabic;
	sub quotedblleft by quotedblleft.arabic;
	sub quotedblright by quotedblright.arabic;
	sub quotedblbase by quotedblbase.arabic;
	sub dagger by dagger.arabic;
	sub daggerdbl by daggerdbl.arabic;
	sub bullet by bullet.arabic;
	sub ellipsis by ellipsis.arabic;
	sub perthousand by perthousand.arabic;
	sub guilsinglleft by guilsinglleft.arabic;
	sub guilsinglright by guilsinglright.arabic;
	sub fraction by fraction.arabic;
	sub uni20AC by uni20AC.arabic;
	sub trademark by trademark.arabic;
	sub minus by minus.arabic;
	sub notequal by notequal.arabic;
	sub lessequal by lessequal.arabic;
	sub greaterequal by greaterequal.arabic;
	sub zero.tab by zero.tab.arabic;
	sub one.tab by one.tab.arabic;
	sub two.tab by two.tab.arabic;
	sub three.tab by three.tab.arabic;
	sub four.tab by four.tab.arabic;
	sub five.tab by five.tab.arabic;
	sub six.tab by six.tab.arabic;
	sub seven.tab by seven.tab.arabic;
	sub eight.tab by eight.tab.arabic;
	sub nine.tab by nine.tab.arabic;
} SUB_8;
lookup SUB_19 {
	sub exclam by exclam.ar;
} SUB_19;
language URD;
lookup SUB_19;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_11 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_11;
script arab;
language dflt;
lookup SUB_11;
language URD;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_11;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_16 {
	sub f i by fi;
	sub f l by fl;
} SUB_16;
script arab;
language dflt;
lookup SUB_16;
language URD;
lookup SUB_16;
script latn;
language dflt;
lookup SUB_16;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = ccmp;
},
{
code = "script DFLT;
language dflt;
lookup SUB_20 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_20;
script arab;
language dflt;
lookup SUB_20;
language URD;
lookup SUB_20;
script latn;
language dflt;
lookup SUB_20;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_21 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_21;
script arab;
language dflt;
lookup SUB_21;
language URD;
lookup SUB_21;
script latn;
language dflt;
lookup SUB_21;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_22 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_22;
script arab;
language dflt;
lookup SUB_22;
language URD;
lookup SUB_22;
script latn;
language dflt;
lookup SUB_22;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_23 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_23;
lookup SUB_24 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_24;
lookup SUB_25 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_25;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language URD;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
language URD;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    47,\012    47,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    51,\012    51,\012    47,\012    47,\012    556,\012    0,\012    556,\012    360,\012    0,\012    \"-171\",\012    556,\012    \"-10\",\012    556,\012    367,\012    \"-9\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    562,\012    239,\012    562,\012    239\012)";
}
);
iconName = Light;
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
pos = 10;
}
);
name = Light;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,-220,l),
(502,-220,l),
(373,511,l),
(-19,511,l)
);
},
{
closed = 1;
nodes = (
(81,-254,l),
(-60,545,l),
(401,545,l),
(542,-254,l)
);
},
{
closed = 1;
nodes = (
(266,41,o),
(266,44,qs),
(266,46,l),
(261,76,ls),
(259,87,o),
(259,93,qs),
(259,105,o),
(269,116,qs),
(321,168,o),
(353,216,o),
(353,243,qs),
(353,290,o),
(323,330,qs),
(280,387,o),
(191,387,qs),
(151,387,o),
(74,355,o),
(74,338,qs),
(74,333,o),
(77,328,qs),
(83,315,ls),
(86,308,o),
(90,308,qs),
(94,308,o),
(99,312,qs),
(144,348,o),
(198,348,qs),
(248,348,o),
(312,288,o),
(312,242,qs),
(312,201,o),
(266,161,qs),
(222,123,o),
(222,92,qs),
(222,86,o),
(223,80,qs),
(229,46,ls),
(230,41,o),
(234,41,qs),
(263,41,ls)
);
},
{
closed = 1;
nodes = (
(230,-28,o),
(230,-40,qs),
(230,-55,o),
(253,-79,o),
(269,-79,qs),
(296,-79,o),
(296,-51,qs),
(296,-36,o),
(272,-12,o),
(257,-12,qs),
(246,-12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 41 2 7 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 6 1 4 1 6 114 0 4 5 1 4 5 126 0 5 7 1 5 7 126 0 9 8 0 8 9 0 128 0 2 10 1 1 6 2 1 103 11 1 7 12 1 8 9 7 8 105 0 0 3 3 0 87 0 0 0 3 96 0 3 0 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 6 1 4 1 6 4 128 0 4 5 1 4 5 126 0 5 7 1 5 7 126 0 9 8 0 8 9 0 128 0 2 10 1 1 6 2 1 103 11 1 7 12 1 8 9 7 8 105 0 0 3 3 0 87 0 0 0 3 96 0 3 0 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
49 48 8 8 0 0 54 52 48 58 49 58 8 47 8 47 33 31 25 23 21 19 7 6 5 4 0 3 0 3 17 13 6 23 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 181;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,135,o),
(70,141,qs),
(137,503,ls),
(139,512,o),
(139,519,qs),
(139,556,o),
(106,556,qs),
(101,556,ls),
(96,556,o),
(95,549,qs),
(26,141,ls),
(26,140,o),
(26,138,qs),
(26,135,o),
(30,135,qs),
(65,135,ls)
);
},
{
closed = 1;
nodes = (
(-13,39,o),
(-13,19,qs),
(-13,5,o),
(9,-16,o),
(24,-16,qs),
(43,-16,o),
(71,14,o),
(71,34,qs),
(71,48,o),
(49,69,o),
(34,69,qs),
(15,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
4 1 1 0 2 0 1 2 128 0 0 0 39 77 5 1 2 2 3 97 0 3 3 46 3 78 17 16 0 0 23 21 16 27 17 27 0 15 0 14 54 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 141;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,382,o),
(97,388,qs),
(126,503,ls),
(129,516,o),
(129,526,qs),
(129,556,o),
(94,556,qs),
(87,556,ls),
(82,556,o),
(81,549,qs),
(65,388,ls),
(65,386,o),
(65,385,qs),
(65,382,o),
(69,382,qs),
(91,382,ls)
);
},
{
closed = 1;
nodes = (
(195,382,o),
(196,388,qs),
(224,503,ls),
(228,517,o),
(228,527,qs),
(228,556,o),
(193,556,qs),
(186,556,ls),
(180,556,o),
(180,549,q),
(164,388,l),
(164,386,ls),
(164,382,o),
(168,382,qs),
(190,382,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
20 1 1 0 1 76 5 3 4 3 1 1 0 97 2 1 0 0 39 1 78 16 16 0 0 16 30 16 29 24 21 0 15 0 14 54 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,4,o),
(46,3,qs),
(47,0,o),
(51,0,qs),
(92,0,ls),
(96,0,o),
(97,6,qs),
(136,159,l),
(293,159,l),
(255,6,l),
(255,4,o),
(255,3,qs),
(256,0,o),
(259,0,qs),
(301,0,ls),
(305,0,o),
(306,6,qs),
(345,159,l),
(420,159,ls),
(425,159,o),
(427,165,qs),
(435,198,l),
(435,200,o),
(435,201,qs),
(434,204,o),
(430,204,qs),
(357,204,l),
(395,352,l),
(468,352,ls),
(473,352,o),
(475,358,qs),
(483,391,l),
(483,393,ls),
(483,397,o),
(478,397,qs),
(406,397,l),
(435,509,ls),
(438,524,o),
(437,534,qs),
(433,556,o),
(407,556,qs),
(398,556,ls),
(395,556,o),
(393,551,q),
(393,550,l),
(393,549,l),
(354,397,l),
(197,397,l),
(226,509,ls),
(230,524,o),
(228,534,qs),
(224,556,o),
(198,556,qs),
(189,556,ls),
(186,556,o),
(184,549,qs),
(145,397,l),
(71,397,ls),
(65,397,o),
(64,391,qs),
(56,358,l),
(56,356,o),
(56,355,qs),
(57,352,o),
(61,352,qs),
(133,352,l),
(96,204,l),
(22,204,ls),
(17,204,o),
(15,198,qs),
(7,165,l),
(7,163,o),
(7,162,qs),
(8,159,o),
(12,159,qs),
(84,159,l),
(46,6,l)
);
},
{
closed = 1;
nodes = (
(342,352,l),
(305,204,l),
(148,204,l),
(186,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
43 13 2 2 3 52 3 2 0 1 2 76 7 5 2 3 15 8 2 2 1 3 2 104 14 9 2 1 12 10 2 0 11 1 0 103 6 1 4 4 39 77 13 1 11 11 40 11 78 80 79 78 77 72 70 68 67 62 60 58 56 50 49 37 20 52 20 50 38 17 38 16 16 9 31 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,618,ls),
(311,622,o),
(307,622,qs),
(276,622,ls),
(271,622,o),
(270,616,qs),
(261,566,l),
(188,562,o),
(139,527,qs),
(76,482,o),
(73,402,q),
(75,353,o),
(109,323,qs),
(139,297,o),
(208,268,q),
(167,36,l),
(72,44,o),
(31,117,qs),
(26,127,o),
(19,127,qs),
(3,127,o),
(3,99,q),
(7,53,o),
(58,21,qs),
(105,-8,o),
(159,-11,q),
(151,-59,l),
(150,-60,o),
(150,-61,qs),
(150,-65,o),
(155,-65,qs),
(186,-65,ls),
(191,-65,o),
(192,-59,qs),
(200,-10,l),
(295,-2,o),
(341,35,qs),
(390,74,o),
(393,165,q),
(391,215,o),
(352,249,qs),
(323,275,o),
(255,303,q),
(294,519,l),
(358,512,o),
(412,471,qs),
(413,470,o),
(414,470,q),
(420,465,o),
(423,465,qs),
(429,465,o),
(432,473,qs),
(439,490,ls),
(441,497,o),
(441,502,qs),
(440,516,o),
(412,532,qs),
(362,561,o),
(302,565,q),
(311,616,l)
);
},
{
closed = 1;
nodes = (
(340,153,qs),
(338,103,o),
(269,42,o),
(209,37,q),
(247,252,l),
(339,211,o)
);
},
{
closed = 1;
nodes = (
(126,380,o),
(125,409,qs),
(126,453,o),
(198,515,o),
(253,519,q),
(217,318,l),
(166,341,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
58 1 0 6 67 15 4 3 1 0 44 16 2 4 1 61 43 37 3 3 4 30 1 2 3 5 76 0 6 0 6 133 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 3 2 134 5 1 0 0 39 77 0 3 3 46 3 78 56 54 52 51 40 38 34 33 28 26 39 16 7 9 24 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,278,qs),
(320,342,o),
(320,445,qs),
(320,501,o),
(263,567,o),
(214,567,qs),
(151,567,o),
(107,510,qs),
(56,445,o),
(56,343,qs),
(56,287,o),
(113,223,o),
(164,223,qs),
(228,223,o)
);
},
{
closed = 1;
nodes = (
(100,335,qs),
(100,379,o),
(124,470,o),
(142,494,qs),
(169,528,o),
(213,528,qs),
(277,528,o),
(277,452,qs),
(277,408,o),
(253,319,o),
(235,294,qs),
(210,261,o),
(165,261,qs),
(100,261,o)
);
},
{
closed = 1;
nodes = (
(187,0,o),
(191,6,qs),
(550,503,ls),
(567,526,o),
(567,540,qs),
(567,556,o),
(548,556,qs),
(542,556,ls),
(538,556,o),
(536,552,q),
(535,551,ls),
(534,550,o),
(534,549,q),
(139,6,ls),
(137,3,o),
(137,2,qs),
(137,0,o),
(140,0,qs),
(182,0,ls)
);
},
{
closed = 1;
nodes = (
(619,47,qs),
(668,110,o),
(668,214,qs),
(668,270,o),
(611,335,o),
(561,335,qs),
(498,335,o),
(454,278,qs),
(404,213,o),
(404,110,qs),
(404,55,o),
(461,-9,o),
(511,-9,qs),
(575,-9,o)
);
},
{
closed = 1;
nodes = (
(447,105,qs),
(447,192,o),
(509,297,o),
(561,297,qs),
(625,297,o),
(625,220,qs),
(625,133,o),
(564,29,o),
(513,29,qs),
(447,29,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 9 2 7 9 106 11 1 2 10 1 0 8 2 0 105 0 4 4 39 77 0 3 3 1 97 0 1 1 39 77 12 1 5 5 40 77 14 1 8 8 6 97 13 1 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 7 1 3 105 0 7 0 9 2 7 9 106 11 1 2 10 1 0 8 2 0 105 0 4 4 39 77 12 1 5 5 40 77 14 1 8 8 6 97 13 1 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
62 61 48 47 28 28 15 14 1 0 67 65 61 70 62 70 55 53 47 60 48 60 28 46 28 45 40 37 22 20 14 27 15 27 8 6 0 13 1 13 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,361,qs),
(397,406,o),
(399,468,qs),
(399,510,o),
(331,567,o),
(279,567,qs),
(215,567,o),
(173,533,qs),
(125,494,o),
(125,429,qs),
(125,379,o),
(176,309,q),
(88,264,o),
(20,183,o),
(20,123,qs),
(20,72,o),
(53,36,qs),
(91,-6,o),
(154,-6,qs),
(252,-4,o),
(332,86,q),
(383,9,ls),
(389,0,o),
(402,0,qs),
(441,0,ls),
(446,0,o),
(446,4,qs),
(446,6,o),
(445,8,qs),
(364,127,l),
(485,283,l),
(486,285,o),
(486,287,qs),
(486,290,o),
(482,290,qs),
(451,290,ls),
(441,290,o),
(433,280,qs),
(341,159,l),
(243,298,l),
(308,329,o)
);
},
{
closed = 1;
nodes = (
(261,72,o),
(202,40,o),
(164,40,qs),
(70,40,o),
(70,125,qs),
(72,180,o),
(111,216,qs),
(142,245,o),
(199,275,q),
(309,117,l)
);
},
{
closed = 1;
nodes = (
(176,435,qs),
(176,472,o),
(234,522,o),
(278,522,qs),
(310,522,o),
(349,490,o),
(349,463,qs),
(349,395,o),
(223,331,q),
(176,393,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
28 1 0 5 50 19 10 1 4 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 3 97 0 3 3 39 77 0 0 0 1 97 2 1 1 1 40 77 0 4 4 1 97 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 5 0 3 5 105 0 0 0 1 97 0 1 1 40 77 0 4 4 2 97 0 2 2 49 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 43 43 35 57 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,382,o),
(97,388,qs),
(126,503,ls),
(129,516,o),
(129,526,qs),
(129,556,o),
(94,556,qs),
(87,556,ls),
(82,556,o),
(81,549,qs),
(65,388,ls),
(65,386,o),
(65,385,qs),
(65,382,o),
(69,382,qs),
(91,382,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 97 0 0 0 39 1 78 0 0 0 15 0 14 54 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 118;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,-90,qs),
(142,-110,o),
(180,-145,o),
(188,-145,qs),
(196,-145,o),
(196,-116,qs),
(196,-101,o),
(179,-81,qs),
(102,14,o),
(102,147,qs),
(102,232,o),
(146,417,o),
(182,484,qs),
(228,568,o),
(306,634,qs),
(340,664,o),
(340,694,qs),
(340,698,o),
(336,698,qs),
(334,698,o),
(331,697,qs),
(240,659,o),
(167,549,qs),
(114,470,o),
(52,260,o),
(52,162,qs),
(52,13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 23 21 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,643,qs),
(179,662,o),
(139,698,o),
(132,698,qs),
(124,698,o),
(124,670,qs),
(124,654,o),
(140,634,qs),
(218,538,o),
(218,406,qs),
(218,321,o),
(174,137,o),
(138,69,qs),
(93,-13,o),
(14,-81,qs),
(-20,-111,o),
(-20,-141,qs),
(-20,-145,o),
(-16,-145,qs),
(-14,-145,o),
(-11,-144,qs),
(77,-109,o),
(153,4,qs),
(205,83,o),
(268,293,o),
(268,392,qs),
(268,544,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
0 0 0 118 23 21 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,309,o),
(79,308,qs),
(79,307,o),
(82,305,qs),
(120,280,l),
(122,278,o),
(123,278,qs),
(125,278,o),
(127,281,qs),
(192,368,l),
(231,281,ls),
(232,278,o),
(233,278,qs),
(234,278,o),
(238,280,qs),
(278,303,ls),
(282,305,o),
(282,307,qs),
(282,308,o),
(281,310,qs),
(232,388,l),
(330,412,l),
(335,414,o),
(335,419,qs),
(335,420,o),
(335,421,qs),
(328,466,ls),
(328,469,o),
(324,469,qs),
(323,469,o),
(322,469,q),
(225,432,l),
(249,533,l),
(250,535,l),
(250,538,o),
(244,538,qs),
(193,538,ls),
(188,538,o),
(187,533,qs),
(177,432,l),
(93,469,l),
(92,469,ls),
(88,469,o),
(87,466,q),
(64,423,ls),
(63,421,o),
(63,418,qs),
(63,415,o),
(66,414,qs),
(156,388,l),
(81,312,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
43 40 37 30 29 24 19 18 16 10 8 3 12 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
29 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,101,o),
(175,101,qs),
(211,101,ls),
(217,101,o),
(216,107,q),
(216,249,l),
(340,249,ls),
(345,249,o),
(345,255,qs),
(345,289,ls),
(345,295,o),
(340,295,qs),
(216,295,l),
(216,397,ls),
(216,443,o),
(175,443,qs),
(170,443,o),
(170,437,qs),
(170,295,l),
(47,295,ls),
(42,295,o),
(42,289,qs),
(42,255,ls),
(42,249,o),
(47,249,qs),
(170,249,l),
(170,107,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
8 1 1 2 17 16 4 3 4 0 1 26 21 2 5 0 3 76 0 2 1 5 2 89 3 1 1 4 1 0 5 1 0 103 0 2 2 5 97 0 5 2 5 81 34 21 18 19 21 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-61,qs),
(49,-73,o),
(49,-81,qs),
(49,-87,o),
(59,-102,o),
(63,-102,qs),
(64,-102,o),
(65,-101,qs),
(95,-62,o),
(113,-21,o),
(113,6,qs),
(113,34,o),
(85,68,o),
(62,68,qs),
(48,68,o),
(28,48,o),
(28,33,qs),
(28,-7,o),
(71,-16,q),
(69,-35,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 36 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,180,o),
(251,186,qs),
(257,221,ls),
(257,222,o),
(257,223,qs),
(257,227,o),
(253,227,qs),
(39,227,ls),
(34,227,o),
(33,221,qs),
(27,186,ls),
(27,185,o),
(27,184,qs),
(27,180,o),
(31,180,qs),
(245,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
10 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 38 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-15,39,o),
(-15,19,qs),
(-15,5,o),
(7,-16,o),
(22,-16,qs),
(41,-16,o),
(69,14,o),
(69,34,qs),
(69,48,o),
(47,69,o),
(32,69,qs),
(13,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,0,o),
(9,6,qs),
(307,503,ls),
(318,523,o),
(318,536,qs),
(318,556,o),
(297,556,qs),
(291,556,ls),
(286,556,o),
(282,549,qs),
(-43,6,l),
(-45,2,l),
(-45,0,o),
(-42,0,qs),
(0,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 39 77 2 1 1 1 40 1 78 0 0 0 14 0 13 53 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,74,qs),
(411,127,o),
(456,290,o),
(456,375,qs),
(456,567,o),
(297,567,qs),
(181,567,o),
(117,456,qs),
(85,402,o),
(48,250,o),
(48,177,qs),
(48,-10,o),
(207,-10,qs),
(311,-10,o)
);
},
{
closed = 1;
nodes = (
(98,172,qs),
(98,236,o),
(131,385,o),
(155,428,qs),
(205,519,o),
(295,519,qs),
(406,519,o),
(406,384,qs),
(406,319,o),
(374,171,o),
(350,128,qs),
(300,37,o),
(209,37,qs),
(98,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 39 77 5 1 2 2 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 22 20 14 27 15 27 8 6 0 13 1 13 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,47,o),
(1,41,q),
(-5,6,ls),
(-5,5,o),
(-5,4,qs),
(-5,0,o),
(-1,0,qs),
(259,0,ls),
(267,0,o),
(268,7,qs),
(270,18,ls),
(271,22,o),
(271,26,qs),
(271,47,o),
(245,47,qs),
(164,47,l),
(245,508,l),
(247,515,o),
(247,524,qs),
(247,556,o),
(218,556,qs),
(210,556,ls),
(189,556,o),
(162,547,qs),
(95,524,ls),
(88,522,o),
(86,513,qs),
(79,474,l),
(79,473,ls),
(80,470,o),
(82,470,qs),
(83,470,o),
(84,471,q),
(195,509,l),
(113,47,l),
(7,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 2 1 0 30 22 2 2 1 2 76 0 0 0 39 77 4 3 2 1 1 2 95 0 2 2 40 2 78 0 0 0 35 0 34 37 36 60 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,149,o),
(219,202,qs),
(314,260,o),
(344,288,qs),
(408,349,o),
(408,441,qs),
(408,495,o),
(372,528,qs),
(332,567,o),
(259,567,qs),
(200,567,o),
(90,519,o),
(90,494,qs),
(90,491,o),
(90,489,qs),
(93,474,ls),
(94,466,o),
(98,466,qs),
(103,466,o),
(110,470,qs),
(184,519,o),
(254,519,qs),
(357,519,o),
(356,435,qs),
(356,382,o),
(284,297,o),
(194,245,qs),
(80,179,o),
(39,115,qs),
(23,91,o),
(-4,20,o),
(-4,3,qs),
(-4,0,o),
(0,0,qs),
(327,0,ls),
(335,0,o),
(336,7,qs),
(338,18,ls),
(339,22,o),
(339,26,qs),
(339,47,o),
(313,47,qs),
(56,47,l),
(73,95,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 11 3 2 1 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 39 77 0 0 0 1 95 0 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 34 43 37 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,445,qs),
(402,498,o),
(366,530,qs),
(325,567,o),
(248,567,qs),
(190,567,o),
(81,519,o),
(81,494,qs),
(81,491,o),
(82,489,q),
(84,474,ls),
(85,466,o),
(89,466,qs),
(93,466,o),
(103,472,qs),
(181,519,o),
(245,519,qs),
(351,519,o),
(351,442,qs),
(351,388,o),
(318,354,qs),
(281,316,o),
(215,316,qs),
(126,316,ls),
(119,316,o),
(117,308,qs),
(116,298,ls),
(115,293,o),
(115,290,qs),
(115,270,o),
(141,270,qs),
(192,270,ls),
(253,270,o),
(319,221,o),
(319,176,qs),
(319,120,o),
(279,82,qs),
(233,37,o),
(160,37,qs),
(66,37,o),
(28,115,qs),
(23,125,o),
(17,125,qs),
(0,125,o),
(0,97,qs),
(0,54,o),
(35,26,qs),
(79,-10,o),
(162,-10,qs),
(251,-10,o),
(307,35,qs),
(370,85,o),
(370,173,qs),
(370,219,o),
(325,281,o),
(285,289,q),
(402,331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
46 1 6 5 27 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 39 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 36 53 53 35 20 38 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,5,o),
(235,4,qs),
(235,0,o),
(239,0,qs),
(280,0,ls),
(285,0,o),
(286,6,qs),
(310,139,l),
(376,139,ls),
(384,139,o),
(385,146,qs),
(387,157,ls),
(388,161,o),
(388,165,qs),
(388,186,o),
(362,186,qs),
(318,186,l),
(377,518,ls),
(378,524,o),
(378,530,qs),
(378,556,o),
(352,556,qs),
(337,556,ls),
(322,556,o),
(308,539,qs),
(18,202,ls),
(6,187,o),
(3,171,qs),
(-2,145,ls),
(-2,144,o),
(-2,143,qs),
(-2,139,o),
(2,139,qs),
(259,139,l),
(235,6,ls)
);
},
{
closed = 1;
nodes = (
(267,186,l),
(60,186,l),
(321,493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
37 14 2 2 1 20 1 0 2 2 76 5 1 2 3 1 0 4 2 0 104 0 1 1 39 77 0 4 4 40 4 78 21 34 37 36 57 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,508,o),
(403,516,qs),
(405,527,ls),
(406,531,o),
(406,535,qs),
(406,556,o),
(380,556,qs),
(118,556,ls),
(113,556,o),
(112,549,qs),
(64,276,ls),
(64,275,o),
(64,274,qs),
(64,273,ls),
(64,269,o),
(68,269,qs),
(69,269,o),
(73,270,qs),
(145,298,o),
(219,298,qs),
(327,298,o),
(327,204,qs),
(327,136,o),
(286,90,qs),
(238,37,o),
(161,37,qs),
(71,37,o),
(33,115,qs),
(28,125,o),
(23,125,qs),
(5,125,o),
(5,98,qs),
(5,55,o),
(41,25,qs),
(85,-10,o),
(162,-10,qs),
(250,-10,o),
(310,44,qs),
(379,106,o),
(379,207,qs),
(379,266,o),
(344,302,qs),
(303,344,o),
(228,344,qs),
(184,344,o),
(123,329,q),
(155,508,l),
(393,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
42 1 6 5 1 1 4 0 36 1 2 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 4 3 4 2 3 128 7 1 6 6 5 95 0 5 5 39 77 0 4 4 0 97 0 0 0 42 77 0 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 39 77 0 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 58 36 35 20 38 34 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,523,o),
(325,545,qs),
(325,567,o),
(306,567,qs),
(299,567,o),
(292,558,qs),
(122,340,ls),
(68,272,o),
(27,184,o),
(27,138,qs),
(27,72,o),
(67,33,qs),
(110,-10,o),
(186,-10,qs),
(272,-10,o),
(329,42,qs),
(395,102,o),
(395,202,qs),
(395,266,o),
(358,305,qs),
(318,348,o),
(250,348,qs),
(212,348,o),
(172,328,q),
(304,497,ls)
);
},
{
closed = 1;
nodes = (
(78,90,o),
(78,138,qs),
(78,202,o),
(118,248,qs),
(164,301,o),
(236,301,qs),
(287,301,o),
(344,247,o),
(344,199,qs),
(344,135,o),
(305,89,qs),
(259,37,o),
(187,37,qs),
(135,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 105 0 2 2 39 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 105 5 1 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 38 26 38 40 38 33 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,6,o),
(47,5,q),
(50,3,l),
(50,0,o),
(53,0,qs),
(92,0,ls),
(103,0,o),
(110,11,qs),
(409,478,ls),
(423,499,o),
(426,518,qs),
(428,527,ls),
(429,530,o),
(429,535,qs),
(428,556,o),
(403,556,qs),
(87,556,ls),
(82,556,o),
(81,549,qs),
(75,514,ls),
(75,513,o),
(75,512,qs),
(75,508,o),
(79,508,qs),
(374,508,l),
(45,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
11 3 2 0 1 1 76 0 0 0 1 95 0 1 1 39 77 0 2 2 40 2 78 40 54 16 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,128,qs),
(19,64,o),
(59,28,qs),
(102,-11,o),
(181,-11,qs),
(265,-11,o),
(322,34,qs),
(387,87,o),
(387,173,qs),
(387,258,o),
(300,295,q),
(416,341,o),
(416,442,qs),
(416,491,o),
(381,526,qs),
(340,567,o),
(273,567,qs),
(198,567,o),
(146,526,qs),
(86,480,o),
(86,404,qs),
(86,333,o),
(157,299,q),
(19,250,o)
);
},
{
closed = 1;
nodes = (
(366,476,o),
(366,438,qs),
(366,392,o),
(332,358,qs),
(292,319,o),
(232,319,qs),
(188,319,o),
(134,364,o),
(134,400,qs),
(134,447,o),
(167,480,qs),
(205,519,o),
(265,519,qs),
(312,519,o)
);
},
{
closed = 1;
nodes = (
(337,220,o),
(337,175,qs),
(337,119,o),
(300,81,qs),
(257,36,o),
(187,36,qs),
(132,36,o),
(70,85,o),
(70,128,qs),
(70,184,o),
(110,225,qs),
(156,274,o),
(225,274,qs),
(276,274,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 7 1 4 5 3 4 105 6 1 2 2 0 97 0 0 0 39 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 6 1 2 3 0 2 105 0 3 7 1 4 5 3 4 105 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
39 38 25 24 46 44 38 51 39 51 32 30 24 37 25 37 42 37 8 9 24 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,33,o),
(129,12,qs),
(129,-10,o),
(148,-10,qs),
(156,-10,o),
(163,-1,qs),
(333,217,ls),
(386,285,o),
(427,373,o),
(427,418,qs),
(427,567,o),
(268,567,qs),
(183,567,o),
(125,515,qs),
(59,455,o),
(59,355,qs),
(59,298,o),
(96,257,qs),
(139,209,o),
(204,209,qs),
(242,209,o),
(282,229,q),
(150,60,ls)
);
},
{
closed = 1;
nodes = (
(377,467,o),
(377,419,qs),
(377,355,o),
(337,309,qs),
(290,256,o),
(219,256,qs),
(168,256,o),
(110,310,o),
(110,358,qs),
(110,422,o),
(150,467,qs),
(195,519,o),
(267,519,qs),
(319,519,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 0 2 4 0 105 5 1 3 3 1 97 0 1 1 39 77 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 105 0 4 0 0 2 4 0 105 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 31 29 23 36 24 36 38 38 33 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,259,o),
(34,240,qs),
(34,225,o),
(55,204,o),
(70,204,qs),
(89,204,o),
(117,234,o),
(117,254,qs),
(117,268,o),
(96,289,o),
(81,289,qs),
(62,289,o)
);
},
{
closed = 1;
nodes = (
(-5,39,o),
(-5,19,qs),
(-5,5,o),
(17,-16,o),
(32,-16,qs),
(51,-16,o),
(79,14,o),
(79,34,qs),
(79,48,o),
(57,69,o),
(42,69,qs),
(23,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,-61,qs),
(-19,-77,o),
(-19,-88,qs),
(-19,-92,o),
(-13,-102,o),
(-11,-102,qs),
(-10,-102,o),
(-9,-101,qs),
(28,-77,o),
(82,-2,o),
(82,27,qs),
(82,44,o),
(61,68,o),
(46,68,qs),
(25,68,o),
(-1,43,o),
(-1,23,qs),
(-1,-9,o),
(27,-16,q),
(18,-36,o)
);
},
{
closed = 1;
nodes = (
(42,259,o),
(42,240,qs),
(42,225,o),
(63,204,o),
(78,204,qs),
(98,204,o),
(125,234,o),
(125,254,qs),
(125,268,o),
(104,289,o),
(89,289,qs),
(70,289,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
11 1 0 73 0 0 2 0 134 3 1 1 2 2 1 89 3 1 1 1 2 97 0 2 1 2 81 21 20 27 25 20 31 21 31 36 4 9 23 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,387,o),
(414,398,qs),
(415,433,ls),
(415,441,o),
(408,438,qs),
(60,295,l),
(55,292,o),
(55,287,qs),
(55,254,ls),
(55,248,o),
(60,246,qs),
(408,102,ls),
(415,99,o),
(414,108,qs),
(414,115,ls),
(414,154,o),
(378,169,qs),
(124,272,l),
(401,381,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,333,o),
(343,339,qs),
(343,344,ls),
(343,379,o),
(304,379,qs),
(45,379,ls),
(40,379,o),
(40,374,qs),
(40,339,ls),
(40,333,o),
(45,333,qs),
(338,333,ls)
);
},
{
closed = 1;
nodes = (
(343,159,o),
(343,165,qs),
(343,170,ls),
(343,206,o),
(304,206,qs),
(45,206,ls),
(40,206,o),
(40,200,qs),
(40,165,ls),
(40,159,o),
(45,159,qs),
(338,159,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
3 2 2 1 0 15 14 2 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 2 5 1 3 2 3 99 4 1 1 1 0 95 0 0 0 42 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 2 5 1 3 2 3 99 4 1 1 1 0 95 0 0 0 42 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 19 17 0 11 0 10 37 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,154,o),
(36,115,qs),
(36,108,ls),
(36,99,o),
(43,102,qs),
(391,246,l),
(396,249,o),
(396,254,qs),
(396,287,ls),
(396,292,o),
(391,295,q),
(43,438,ls),
(36,441,o),
(36,433,qs),
(36,398,ls),
(36,387,o),
(50,381,qs),
(326,272,l),
(72,169,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,135,o),
(176,141,qs),
(183,179,ls),
(187,204,o),
(202,221,o),
(239,246,qs),
(320,300,o),
(381,382,o),
(381,437,qs),
(381,492,o),
(345,527,qs),
(304,567,o),
(229,567,qs),
(170,567,o),
(64,522,o),
(64,497,qs),
(64,496,o),
(64,493,qs),
(66,477,ls),
(68,469,o),
(72,469,qs),
(77,469,o),
(84,473,qs),
(155,518,o),
(225,518,qs),
(328,518,o),
(328,433,qs),
(328,392,o),
(283,328,o),
(224,287,qs),
(146,233,o),
(137,183,qs),
(130,141,l),
(130,139,ls),
(130,135,o),
(134,135,qs),
(170,135,ls)
);
},
{
closed = 1;
nodes = (
(90,39,o),
(90,19,qs),
(90,5,o),
(112,-16,o),
(127,-16,qs),
(146,-16,o),
(174,14,o),
(174,33,qs),
(174,48,o),
(153,69,o),
(138,69,qs),
(119,69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 0 0 0 2 97 0 2 2 39 77 7 1 4 4 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 3 0 1 3 128 6 1 3 4 0 3 4 126 0 2 0 0 1 2 0 105 7 1 4 4 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
38 37 0 0 44 42 37 48 38 48 0 36 0 35 38 34 42 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,98,qs),
(462,72,o),
(502,38,o),
(532,38,qs),
(608,38,o),
(665,115,qs),
(730,203,o),
(730,332,qs),
(730,431,o),
(664,494,qs),
(587,568,o),
(446,568,qs),
(287,568,o),
(169,461,qs),
(34,337,o),
(34,154,qs),
(34,37,o),
(104,-38,qs),
(184,-124,o),
(325,-124,qs),
(416,-124,o),
(580,-56,o),
(580,-18,qs),
(580,-9,o),
(574,-9,qs),
(569,-9,o),
(560,-15,qs),
(468,-78,o),
(339,-78,qs),
(228,-78,o),
(162,-24,qs),
(86,37,o),
(86,154,qs),
(86,296,o),
(179,401,qs),
(287,523,o),
(448,523,qs),
(547,523,o),
(608,478,qs),
(678,426,o),
(678,330,qs),
(678,239,o),
(642,166,qs),
(600,83,o),
(542,83,qs),
(513,83,o),
(513,110,qs),
(513,122,o),
(525,162,qs),
(588,399,l),
(588,400,ls),
(588,404,o),
(584,404,qs),
(575,404,ls),
(539,404,o),
(524,354,q),
(484,413,o),
(408,413,qs),
(323,413,o),
(260,351,qs),
(188,280,o),
(188,176,qs),
(188,111,o),
(255,37,o),
(315,37,qs),
(409,37,o),
(463,106,q),
(462,101,o)
);
},
{
closed = 1;
nodes = (
(238,174,qs),
(238,247,o),
(280,302,qs),
(330,366,o),
(404,366,qs),
(450,366,o),
(501,319,o),
(501,277,qs),
(501,203,o),
(457,148,qs),
(405,85,o),
(328,85,qs),
(238,85,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
66 11 0 3 3 11 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 1 11 1 2 11 128 0 6 0 5 0 6 5 128 0 1 0 11 3 1 11 105 12 10 2 3 9 1 0 6 3 0 106 0 5 0 7 5 7 101 0 4 4 8 97 0 8 8 39 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 11 1 2 11 128 0 6 0 5 0 6 5 128 0 8 0 4 1 8 4 105 0 1 0 11 3 1 11 105 12 10 2 3 9 1 0 6 3 0 106 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
69 68 76 74 68 80 69 80 64 62 38 35 34 38 38 39 34 37 33 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 771;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
26 1 4 1 15 1 0 3 2 76 0 4 5 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 0 0 25 24 0 23 0 23 53 54 34 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,377,o),
(454,435,qs),
(454,485,o),
(420,517,qs),
(380,554,o),
(310,554,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(235,0,ls),
(322,0,o),
(374,39,qs),
(434,84,o),
(434,169,qs),
(434,271,o),
(355,293,q),
(408,310,o)
);
},
{
closed = 1;
nodes = (
(281,271,ls),
(383,271,o),
(383,179,qs),
(383,47,o),
(233,47,qs),
(84,47,l),
(124,271,l)
);
},
{
closed = 1;
nodes = (
(310,508,ls),
(354,508,o),
(404,468,o),
(404,432,qs),
(404,379,o),
(343,317,o),
(291,317,qs),
(132,317,l),
(166,508,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 4 0 3 2 4 3 103 0 5 5 1 95 0 1 1 39 77 0 2 2 0 95 0 0 0 40 0 78 36 33 34 38 54 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,496,o),
(520,502,qs),
(520,523,o),
(472,543,qs),
(417,567,o),
(357,567,qs),
(231,567,o),
(148,479,qs),
(53,378,o),
(53,208,qs),
(53,-11,o),
(258,-11,qs),
(355,-11,o),
(419,44,qs),
(462,81,o),
(462,113,qs),
(463,125,o),
(452,125,qs),
(446,125,o),
(440,118,qs),
(367,36,o),
(266,36,qs),
(192,36,o),
(150,74,qs),
(103,118,o),
(103,206,qs),
(103,337,o),
(164,422,qs),
(234,519,o),
(354,519,qs),
(427,519,o),
(477,481,qs),
(499,464,o),
(502,464,qs),
(507,464,o),
(511,473,qs),
(517,489,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 0 1 20 1 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 1 3 1 0 3 128 0 3 2 1 3 2 126 0 1 1 5 97 0 5 5 39 77 0 2 2 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 3 1 0 3 128 0 3 2 1 3 2 126 0 5 0 1 0 5 1 105 0 2 2 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 34 38 34 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,0,o),
(448,119,qs),
(505,209,o),
(505,336,qs),
(505,441,o),
(457,494,qs),
(401,556,o),
(274,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(186,0,ls)
);
},
{
closed = 1;
nodes = (
(264,508,ls),
(455,508,o),
(455,343,qs),
(455,215,o),
(404,142,qs),
(338,47,o),
(194,47,qs),
(84,47,l),
(166,508,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 3 3 0 95 0 0 0 39 77 0 2 2 1 95 4 1 1 1 40 1 78 0 0 25 23 19 17 0 16 0 15 54 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,251,ls),
(341,251,o),
(343,257,q),
(345,269,ls),
(346,274,o),
(346,277,qs),
(346,298,o),
(320,298,qs),
(129,298,l),
(166,509,l),
(397,509,ls),
(405,509,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(317,0,ls),
(325,0,o),
(326,7,qs),
(328,18,ls),
(329,22,o),
(329,26,qs),
(329,47,o),
(303,47,qs),
(85,47,l),
(121,251,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
20 1 3 2 30 1 5 4 3 1 1 0 3 76 0 4 0 5 0 4 5 103 0 3 3 2 95 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 37 33 37 55 37 32 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,251,o),
(343,258,qs),
(345,270,ls),
(345,273,o),
(345,277,qs),
(345,298,o),
(320,298,qs),
(129,298,l),
(166,508,l),
(397,508,ls),
(405,508,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(120,251,l),
(333,251,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
14 1 2 1 26 1 4 3 2 76 0 3 5 1 4 0 3 4 103 0 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 29 0 28 33 37 54 34 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,36,qs),
(192,36,o),
(150,74,qs),
(102,118,o),
(102,206,qs),
(102,343,o),
(164,426,qs),
(232,519,o),
(355,519,qs),
(439,519,o),
(500,471,q),
(507,464,o),
(511,464,qs),
(517,464,o),
(520,473,qs),
(527,489,ls),
(530,496,o),
(530,502,qs),
(530,521,o),
(480,542,qs),
(420,567,o),
(357,567,qs),
(232,567,o),
(149,480,qs),
(53,380,o),
(53,213,qs),
(53,-11,o),
(256,-11,qs),
(381,-11,o),
(463,63,qs),
(476,75,o),
(479,97,qs),
(511,278,l),
(512,279,o),
(512,280,qs),
(512,284,o),
(507,284,qs),
(309,284,ls),
(301,284,o),
(299,277,q),
(298,267,ls),
(297,263,o),
(297,259,qs),
(297,238,o),
(323,238,qs),
(454,238,l),
(429,96,l),
(353,36,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
29 1 4 5 4 1 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 1 5 4 1 128 0 1 0 0 6 1 0 103 0 5 5 3 97 0 3 3 39 77 0 6 6 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 1 5 4 1 128 0 3 0 5 4 3 5 105 0 1 0 0 6 1 0 103 0 6 6 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 34 39 36 40 37 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,6,ls),
(354,5,o),
(354,4,qs),
(354,0,o),
(358,0,qs),
(398,0,ls),
(403,0,o),
(404,6,qs),
(491,503,l),
(493,510,o),
(493,517,qs),
(493,556,o),
(460,556,qs),
(456,556,ls),
(451,556,o),
(450,549,qs),
(405,298,l),
(129,298,l),
(165,503,ls),
(166,509,o),
(166,517,qs),
(166,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(121,252,l),
(397,252,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 2 6 1 5 0 2 5 104 3 1 1 1 39 77 4 1 0 0 40 0 78 0 0 0 35 0 35 37 50 20 54 34 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,o),
(78,6,qs),
(166,504,ls),
(167,511,o),
(167,517,qs),
(167,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(72,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
11 1 1 0 1 76 0 0 0 39 77 2 1 1 1 40 1 78 0 0 0 16 0 15 55 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,510,o),
(253,517,qs),
(253,556,o),
(220,556,qs),
(216,556,ls),
(211,556,o),
(210,549,qs),
(130,96,ls),
(125,69,o),
(85,35,o),
(57,35,qs),
(35,35,o),
(-2,61,o),
(-9,81,qs),
(-11,87,o),
(-15,87,qs),
(-27,87,o),
(-27,64,qs),
(-27,32,o),
(21,-10,o),
(57,-10,qs),
(161,-10,o),
(182,108,qs),
(252,503,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 97 0 0 0 46 0 78 52 36 19 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489,550,o),
(489,552,qs),
(489,556,o),
(486,556,qs),
(442,556,ls),
(432,556,o),
(423,547,qs),
(120,248,l),
(165,503,ls),
(166,509,o),
(166,517,qs),
(166,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(107,178,l),
(228,295,l),
(355,10,ls),
(359,0,o),
(370,0,qs),
(406,0,ls),
(413,0,o),
(413,6,qs),
(413,7,o),
(413,8,q),
(265,331,l),
(488,548,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
27 9 1 3 0 2 1 76 3 1 2 2 39 77 1 1 0 0 40 0 78 38 54 37 52 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,509,o),
(166,517,qs),
(166,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(286,0,ls),
(294,0,o),
(295,7,qs),
(297,18,ls),
(298,22,o),
(298,26,qs),
(298,47,o),
(272,47,qs),
(84,47,l),
(165,503,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 0 1 76 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 54 37 32 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(184,539,o),
(166,556,o),
(144,556,qs),
(139,556,ls),
(133,556,o),
(132,549,qs),
(7,6,ls),
(7,5,o),
(7,4,qs),
(7,0,o),
(11,0,qs),
(51,0,ls),
(56,0,o),
(57,6,qs),
(155,427,l),
(229,7,ls),
(230,0,o),
(234,0,qs),
(269,0,ls),
(276,0,o),
(280,7,qs),
(508,434,l),
(455,6,ls),
(455,5,o),
(455,4,qs),
(455,3,ls),
(455,0,o),
(459,0,qs),
(500,0,ls),
(505,0,o),
(506,6,qs),
(566,508,l),
(567,510,o),
(566,515,qs),
(566,517,ls),
(566,556,o),
(527,556,qs),
(524,556,ls),
(519,556,o),
(516,549,qs),
(263,65,l),
(188,516,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 19 6 3 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 54 37 40 38 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,541,o),
(155,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,3,qs),
(27,0,o),
(31,0,qs),
(72,0,ls),
(77,0,o),
(78,6,qs),
(157,454,l),
(344,13,ls),
(349,0,o),
(364,0,qs),
(398,0,ls),
(403,0,o),
(404,6,qs),
(492,504,ls),
(493,510,o),
(493,518,qs),
(493,556,o),
(461,556,qs),
(456,556,ls),
(451,556,o),
(450,549,qs),
(367,80,l),
(183,515,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
15 1 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 54 36 53 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 39 77 5 1 2 2 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 30 17 30 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,215,o),
(403,260,qs),
(473,313,o),
(473,408,qs),
(473,469,o),
(437,508,qs),
(393,556,o),
(314,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(114,215,l),
(260,215,ls)
);
},
{
closed = 1;
nodes = (
(314,508,ls),
(363,508,o),
(421,454,o),
(421,407,qs),
(421,345,o),
(383,306,qs),
(340,262,o),
(266,262,qs),
(122,262,l),
(166,508,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 5 1 2 0 3 2 103 0 4 4 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 30 28 23 21 0 20 0 19 54 34 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,-106,o),
(341,-106,qs),
(399,-106,o),
(487,-51,o),
(487,-13,qs),
(487,-5,o),
(478,-5,qs),
(472,-5,o),
(453,-21,qs),
(406,-61,o),
(357,-61,qs),
(298,-60,o),
(283,-9,q),
(372,-4,o),
(437,54,qs),
(505,114,o),
(533,219,qs),
(547,271,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(55,117,o),
(96,64,qs),
(143,2,o),
(227,-8,q),
(227,-9,ls)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 5 1 5 3 1 128 0 2 0 4 2 4 101 0 6 6 0 97 0 0 0 39 77 7 1 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 5 1 5 3 1 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
33 32 41 39 32 46 33 46 35 34 33 24 39 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(354,10,ls),
(358,0,o),
(370,0,qs),
(405,0,ls),
(411,0,o),
(411,5,qs),
(411,6,o),
(410,7,q),
(323,222,l),
(474,263,o),
(474,410,qs),
(474,470,o),
(439,509,qs),
(397,556,o),
(314,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(114,215,l),
(271,215,l)
);
},
{
closed = 1;
nodes = (
(316,508,ls),
(365,508,o),
(423,455,o),
(423,409,qs),
(423,345,o),
(385,306,qs),
(343,262,o),
(266,262,qs),
(122,262,l),
(166,508,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
18 1 3 4 1 76 0 4 6 1 3 0 4 3 103 0 5 5 1 95 0 1 1 39 77 2 1 0 0 40 0 78 0 0 37 35 30 28 0 27 0 27 57 54 34 7 9 25 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,470,q),
(413,465,o),
(416,465,qs),
(422,465,o),
(425,473,qs),
(432,490,ls),
(434,497,o),
(434,502,qs),
(434,520,o),
(388,541,qs),
(330,567,o),
(271,567,qs),
(185,567,o),
(129,525,qs),
(66,478,o),
(66,402,qs),
(67,356,o),
(131,295,o),
(214,263,qs),
(278,237,o),
(333,187,o),
(333,153,qs),
(333,104,o),
(297,72,qs),
(254,36,o),
(178,36,qs),
(65,36,o),
(24,117,qs),
(19,127,o),
(12,127,qs),
(-4,127,o),
(-4,99,qs),
(-4,57,o),
(47,24,qs),
(106,-15,o),
(174,-11,qs),
(278,-6,o),
(328,30,qs),
(386,71,o),
(386,165,qs),
(386,210,o),
(318,276,o),
(241,306,qs),
(172,332,o),
(118,377,o),
(118,409,qs),
(118,453,o),
(154,484,qs),
(196,520,o),
(261,520,qs),
(342,520,o),
(405,471,qs),
(406,470,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 0 0 4 97 0 4 4 39 77 0 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 4 0 0 5 4 0 105 0 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
39 44 34 36 44 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,5,o),
(129,4,qs),
(129,0,o),
(133,0,qs),
(173,0,ls),
(178,0,o),
(179,6,qs),
(268,508,l),
(419,508,ls),
(427,508,o),
(428,516,qs),
(430,527,ls),
(431,530,o),
(431,535,qs),
(431,556,o),
(405,556,qs),
(73,556,ls),
(68,556,o),
(67,549,qs),
(61,514,ls),
(61,513,o),
(61,512,qs),
(61,508,o),
(65,508,qs),
(218,508,l),
(129,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
11 3 2 0 1 1 76 2 1 0 0 1 95 0 1 1 39 77 0 3 3 40 3 78 34 37 54 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,510,o),
(491,517,qs),
(491,556,o),
(458,556,qs),
(454,556,ls),
(450,556,o),
(448,549,q),
(387,202,ls),
(358,37,o),
(222,37,qs),
(104,37,o),
(104,145,qs),
(104,173,o),
(109,201,qs),
(162,504,ls),
(163,511,o),
(163,517,qs),
(163,556,o),
(130,556,qs),
(125,556,ls),
(120,556,o),
(119,549,qs),
(59,208,ls),
(54,177,o),
(53,149,qs),
(52,78,o),
(90,36,qs),
(132,-10,o),
(214,-10,qs),
(399,-10,o),
(433,184,qs),
(490,504,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
14 1 2 1 1 76 3 1 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 51 39 55 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,556,o),
(91,556,qs),
(75,556,ls),
(68,556,o),
(68,550,qs),
(68,548,l),
(160,6,ls),
(161,0,o),
(166,0,qs),
(206,0,ls),
(211,0,o),
(216,6,q),
(497,548,l),
(498,551,o),
(498,552,qs),
(499,556,o),
(494,556,qs),
(456,556,ls),
(445,556,o),
(439,543,qs),
(196,59,l),
(124,524,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
15 1 1 0 1 76 2 1 0 0 39 77 0 1 1 40 1 78 53 38 34 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,556,o),
(99,556,qs),
(86,556,ls),
(80,556,o),
(80,549,qs),
(80,548,l),
(131,6,ls),
(132,0,o),
(138,0,qs),
(180,0,ls),
(186,0,o),
(189,6,qs),
(408,478,l),
(469,6,ls),
(470,0,o),
(475,0,qs),
(512,0,ls),
(518,0,o),
(521,6,qs),
(765,548,l),
(765,550,o),
(766,552,q),
(766,556,o),
(762,556,qs),
(727,556,ls),
(715,556,o),
(709,543,qs),
(502,70,l),
(444,524,ls),
(441,556,o),
(416,556,qs),
(407,556,ls),
(396,556,o),
(390,543,qs),
(173,70,l),
(132,524,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
29 22 7 3 2 0 1 76 4 1 2 0 0 39 77 3 1 2 2 40 2 78 53 37 38 36 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 742;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,556,o),
(111,556,qs),
(95,556,ls),
(89,556,o),
(88,551,qs),
(88,549,o),
(89,548,q),
(211,295,l),
(-29,7,ls),
(-31,5,o),
(-31,3,qs),
(-31,0,o),
(-27,0,qs),
(13,0,ls),
(23,0,o),
(33,12,qs),
(231,253,l),
(348,12,ls),
(354,0,o),
(364,0,qs),
(399,0,ls),
(405,0,o),
(405,4,qs),
(405,6,o),
(405,7,q),
(269,285,l),
(482,548,ls),
(484,551,o),
(484,553,qs),
(484,556,o),
(479,556,qs),
(440,556,ls),
(429,556,o),
(420,543,q),
(248,328,l),
(152,526,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
28 27 18 10 9 5 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 57 36 57 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,5,o),
(142,3,qs),
(142,0,o),
(146,0,qs),
(186,0,ls),
(191,0,o),
(192,6,qs),
(229,219,l),
(467,547,l),
(469,549,o),
(469,552,qs),
(469,556,o),
(462,556,qs),
(426,556,ls),
(415,556,o),
(407,543,q),
(212,274,l),
(123,513,ls),
(107,556,o),
(74,556,qs),
(62,556,ls),
(57,556,o),
(56,551,qs),
(56,550,o),
(57,548,qs),
(180,219,l),
(142,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
9 1 2 2 0 1 76 1 1 0 0 39 77 0 2 2 40 2 78 38 52 52 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,488,o),
(449,504,qs),
(450,514,ls),
(451,519,o),
(451,523,qs),
(451,556,o),
(409,556,qs),
(103,556,ls),
(98,556,o),
(97,549,qs),
(91,515,l),
(91,514,l),
(90,513,o),
(90,512,qs),
(90,509,o),
(95,509,qs),
(399,509,l),
(14,64,ls),
(1,49,o),
(-3,30,qs),
(-7,6,ls),
(-7,5,o),
(-7,4,qs),
(-7,0,o),
(-3,0,qs),
(353,0,ls),
(361,0,o),
(362,7,qs),
(364,18,l),
(364,22,o),
(364,26,qs),
(364,47,o),
(339,47,qs),
(60,47,l),
(429,468,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
29 20 2 2 3 5 1 1 0 2 76 0 2 2 3 95 0 3 3 39 77 0 0 0 1 95 0 1 1 40 1 78 55 24 37 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,-130,o),
(167,-128,qs),
(167,-101,o),
(133,-101,qs),
(76,-101,ls),
(57,-101,o),
(57,-82,qs),
(57,-80,o),
(58,-77,q),
(182,628,ls),
(186,652,o),
(209,652,qs),
(266,652,ls),
(305,652,o),
(311,686,q),
(311,689,ls),
(311,690,o),
(311,691,qs),
(311,696,o),
(305,696,qs),
(204,696,ls),
(178,696,o),
(141,665,o),
(136,639,qs),
(8,-88,ls),
(7,-94,o),
(7,-99,qs),
(7,-119,o),
(34,-144,o),
(56,-144,qs),
(156,-144,ls),
(164,-144,o),
(165,-137,qs),
(166,-134,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
15 1 2 1 24 6 2 3 2 31 1 0 3 3 76 0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 53 54 39 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,0,o),
(236,2,qs),
(236,3,o),
(235,6,qs),
(111,513,ls),
(100,556,o),
(61,556,qs),
(56,556,ls),
(51,556,o),
(51,551,qs),
(51,549,o),
(51,548,qs),
(184,6,ls),
(186,0,o),
(191,0,qs),
(232,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 0 1 76 0 0 0 39 77 2 1 1 1 40 1 78 0 0 0 15 0 14 54 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,646,o),
(286,651,qs),
(286,671,o),
(259,696,o),
(237,696,qs),
(137,696,ls),
(129,696,o),
(128,689,qs),
(127,686,l),
(127,683,o),
(127,680,qs),
(127,652,o),
(160,652,qs),
(217,652,ls),
(236,652,o),
(236,634,qs),
(236,631,o),
(236,628,q),
(111,-77,ls),
(107,-101,o),
(84,-101,qs),
(28,-101,ls),
(-11,-101,o),
(-17,-134,qs),
(-18,-137,l),
(-18,-139,o),
(-18,-140,qs),
(-18,-144,o),
(-11,-144,qs),
(89,-144,ls),
(143,-144,o),
(157,-88,q),
(285,639,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
21 1 2 3 30 14 2 1 2 7 1 0 1 3 76 0 3 0 2 1 3 2 103 0 1 0 0 1 89 0 1 1 0 95 0 0 1 0 79 53 53 53 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,274,o),
(340,274,qs),
(374,274,ls),
(380,274,o),
(378,279,qs),
(251,517,ls),
(230,556,o),
(193,556,qs),
(183,556,o),
(177,546,qs),
(35,279,ls),
(32,274,o),
(39,274,qs),
(73,274,ls),
(84,274,o),
(89,283,qs),
(207,503,l),
(324,283,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 51 35 50 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 403;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,-178,o),
(340,-172,qs),
(346,-139,ls),
(346,-138,o),
(346,-137,qs),
(346,-133,o),
(342,-133,qs),
(-74,-133,ls),
(-79,-133,o),
(-80,-139,qs),
(-86,-172,l),
(-86,-173,l),
(-86,-174,ls),
(-86,-178,o),
(-82,-178,qs),
(334,-178,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
10 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 38 3 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 409;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,502,o),
(91,502,qs),
(46,502,ls),
(41,502,o),
(41,498,qs),
(41,497,o),
(42,496,qs),
(104,440,ls),
(114,431,o),
(126,431,qs),
(159,431,ls),
(163,431,o),
(163,435,q),
(162,436,l),
(109,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 53 35 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 139;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 6 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 6 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
28 27 35 33 27 40 28 40 37 50 37 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,-9,qs),
(274,-9,o),
(332,48,qs),
(399,113,o),
(399,217,qs),
(399,279,o),
(365,320,qs),
(327,367,o),
(258,367,qs),
(170,367,o),
(116,302,q),
(152,503,ls),
(153,510,o),
(153,517,qs),
(153,556,o),
(121,556,qs),
(116,556,ls),
(111,556,o),
(110,549,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(73,56,l),
(111,-9,o)
);
},
{
closed = 1;
nodes = (
(91,92,o),
(91,141,qs),
(91,213,o),
(130,262,qs),
(174,320,o),
(246,320,qs),
(294,320,o),
(347,264,o),
(347,213,qs),
(347,145,o),
(309,96,qs),
(264,38,o),
(196,38,qs),
(147,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
17 1 4 5 1 76 0 1 1 39 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 49 3 78 30 29 37 35 29 42 30 42 38 37 54 34 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,292,qs),
(327,292,o),
(329,298,qs),
(336,313,ls),
(339,320,o),
(339,326,qs),
(339,343,o),
(276,367,o),
(232,367,qs),
(134,367,o),
(79,307,qs),
(24,246,o),
(24,137,qs),
(24,78,o),
(58,39,qs),
(99,-10,o),
(174,-10,qs),
(225,-10,o),
(306,44,o),
(306,79,qs),
(306,89,o),
(299,89,qs),
(294,89,o),
(287,82,qs),
(243,37,o),
(182,37,qs),
(133,37,o),
(76,93,o),
(76,141,qs),
(76,213,o),
(108,260,qs),
(148,320,o),
(230,320,qs),
(276,320,o),
(317,294,q),
(318,294,l),
(321,292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
30 1 0 4 1 76 0 2 0 1 0 2 1 128 0 0 0 4 97 0 4 4 48 77 0 1 1 3 97 0 3 3 46 3 78 38 35 34 37 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,367,qs),
(142,367,o),
(88,314,qs),
(25,253,o),
(25,151,qs),
(25,89,o),
(62,44,qs),
(106,-9,o),
(175,-9,qs),
(259,-9,o),
(307,51,q),
(300,6,l),
(299,4,o),
(299,3,qs),
(299,0,o),
(303,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(437,503,ls),
(438,510,o),
(438,517,qs),
(438,556,o),
(405,556,qs),
(401,556,ls),
(396,556,o),
(395,549,qs),
(351,299,l),
(308,367,o)
);
},
{
closed = 1;
nodes = (
(75,101,o),
(75,150,qs),
(76,219,o),
(112,266,qs),
(154,320,o),
(222,320,qs),
(273,320,o),
(332,264,o),
(332,217,qs),
(332,143,o),
(297,95,qs),
(255,38,o),
(182,38,qs),
(136,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
17 1 4 5 14 1 1 4 2 76 0 0 0 39 77 0 5 5 3 97 0 3 3 48 77 0 1 1 40 77 6 1 4 4 2 97 0 2 2 49 2 78 30 29 37 35 29 42 30 42 38 38 37 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,160,o),
(349,176,qs),
(357,206,o),
(357,241,qs),
(357,292,o),
(325,326,qs),
(286,367,o),
(222,367,qs),
(135,367,o),
(83,310,qs),
(25,246,o),
(25,134,qs),
(25,77,o),
(61,38,qs),
(104,-9,o),
(174,-9,qs),
(242,-9,o),
(328,42,o),
(328,83,qs),
(328,92,o),
(322,92,qs),
(317,92,o),
(310,85,qs),
(263,37,o),
(186,37,qs),
(138,37,o),
(79,88,o),
(75,134,qs),
(74,145,o),
(76,160,q),
(332,160,ls)
);
},
{
closed = 1;
nodes = (
(217,321,qs),
(259,321,o),
(307,277,o),
(307,238,qs),
(307,227,o),
(303,203,q),
(84,203,l),
(117,321,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 1 4 0 4 1 0 128 0 5 7 1 4 1 5 4 103 0 6 6 3 97 0 3 3 48 77 0 0 0 2 97 0 2 2 49 2 78 0 0 38 36 32 31 0 30 0 29 38 35 34 36 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,5,o),
(39,4,qs),
(39,0,o),
(43,0,qs),
(83,0,ls),
(87,0,o),
(88,6,qs),
(143,315,l),
(232,315,ls),
(237,315,o),
(238,321,qs),
(244,354,ls),
(244,355,o),
(244,356,qs),
(244,360,o),
(240,360,qs),
(151,360,l),
(169,461,ls),
(178,516,o),
(220,516,qs),
(233,516,o),
(265,500,o),
(271,489,qs),
(274,485,o),
(277,485,qs),
(287,485,o),
(287,501,qs),
(287,528,o),
(251,560,o),
(220,562,qs),
(181,563,o),
(128,511,o),
(120,464,qs),
(101,360,l),
(38,360,ls),
(33,360,o),
(32,354,qs),
(26,321,ls),
(26,320,o),
(26,319,qs),
(26,315,o),
(30,315,qs),
(93,315,l),
(39,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
29 3 2 0 1 1 76 0 3 4 1 4 3 1 128 0 4 4 2 97 0 2 2 39 77 6 1 0 0 1 95 5 1 1 1 42 77 0 7 7 40 7 78 34 38 18 36 19 35 38 16 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,-121,o),
(143,-121,qs),
(103,-121,o),
(34,-94,o),
(21,-73,qs),
(18,-67,o),
(14,-67,qs),
(2,-67,o),
(3,-87,qs),
(4,-127,o),
(77,-171,o),
(140,-171,qs),
(318,-171,o),
(349,7,qs),
(410,354,l),
(410,355,l),
(411,356,o),
(411,357,qs),
(411,359,o),
(406,359,qs),
(401,359,ls),
(363,359,o),
(352,305,q),
(309,367,o),
(230,367,qs),
(148,367,o),
(91,311,qs),
(25,247,o),
(25,145,qs),
(25,82,o),
(57,41,qs),
(96,-9,o),
(168,-9,qs),
(255,-9,o),
(309,57,q),
(300,7,ls)
);
},
{
closed = 1;
nodes = (
(75,97,o),
(76,150,qs),
(76,218,o),
(115,266,qs),
(160,320,o),
(229,320,qs),
(278,320,o),
(332,266,o),
(332,217,qs),
(332,145,o),
(291,95,qs),
(246,38,o),
(176,38,qs),
(129,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 5 0 4 5 128 0 7 7 1 97 2 1 1 1 48 77 8 1 6 6 0 97 0 0 0 49 77 0 5 5 3 97 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 0 5 0 4 5 128 0 2 2 42 77 0 7 7 1 97 0 1 1 48 77 8 1 6 6 0 97 0 0 0 49 77 0 5 5 3 97 0 3 3 44 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
37 36 44 42 36 49 37 49 36 19 38 50 38 33 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,510,o),
(153,517,qs),
(153,556,o),
(121,556,qs),
(116,556,ls),
(111,556,o),
(110,549,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(97,193,ls),
(120,320,o),
(233,320,qs),
(322,320,o),
(322,234,qs),
(322,217,o),
(319,200,qs),
(285,6,ls),
(285,5,o),
(285,4,qs),
(285,0,o),
(289,0,qs),
(329,0,ls),
(334,0,o),
(335,6,qs),
(372,215,ls),
(375,232,o),
(374,247,q),
(375,301,o),
(306,367,o),
(250,367,qs),
(164,367,o),
(117,307,q),
(152,503,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 4 4 39 77 0 2 2 0 97 0 0 0 48 77 3 1 1 1 40 1 78 54 35 40 38 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(118,308,ls),
(119,314,o),
(119,321,qs),
(119,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
},
{
closed = 1;
nodes = (
(104,426,o),
(116,426,qs),
(132,426,o),
(154,448,o),
(154,464,qs),
(154,475,o),
(137,492,o),
(124,492,qs),
(109,492,o),
(87,469,o),
(87,453,qs),
(87,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 0 2 3 105 0 0 0 42 77 4 1 1 1 40 1 78 0 0 26 24 20 18 0 15 0 14 54 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-98,-92,q),
(-102,-90,o),
(-104,-90,qs),
(-113,-90,o),
(-113,-106,qs),
(-113,-135,o),
(-75,-171,o),
(-44,-171,qs),
(-1,-171,o),
(41,-125,o),
(51,-67,qs),
(117,308,ls),
(118,315,o),
(118,321,qs),
(118,359,o),
(86,359,qs),
(81,359,ls),
(76,359,o),
(75,354,qs),
(2,-61,ls),
(-9,-124,o),
(-50,-124,qs),
(-79,-124,o),
(-96,-93,q),
(-97,-92,o)
);
},
{
closed = 1;
nodes = (
(104,426,o),
(116,426,qs),
(131,426,o),
(153,449,o),
(153,464,qs),
(153,475,o),
(135,492,o),
(123,492,qs),
(108,492,o),
(86,469,o),
(86,453,qs),
(86,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
10 1 3 1 1 76 0 3 1 0 1 3 0 128 0 4 0 5 1 4 5 105 0 1 1 42 77 0 0 0 2 97 0 2 2 44 2 78 36 38 19 38 36 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,355,o),
(338,356,q),
(338,359,o),
(334,359,qs),
(285,359,ls),
(274,359,o),
(264,351,qs),
(100,207,l),
(152,503,ls),
(153,510,o),
(153,517,qs),
(153,556,o),
(121,556,qs),
(116,556,ls),
(111,556,o),
(110,549,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(89,148,l),
(150,198,l),
(235,10,ls),
(239,0,o),
(251,0,qs),
(289,0,ls),
(294,0,o),
(293,4,qs),
(293,6,l),
(188,230,l),
(336,354,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
26 8 2 0 3 1 76 0 2 2 39 77 0 3 3 42 77 1 1 0 0 40 0 78 38 54 37 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,510,o),
(153,518,qs),
(153,556,o),
(121,556,qs),
(116,556,ls),
(111,556,o),
(110,549,qs),
(29,89,ls),
(26,73,o),
(26,59,qs),
(26,-9,o),
(93,-9,qs),
(130,-9,o),
(183,35,o),
(183,67,qs),
(183,77,o),
(176,77,qs),
(174,77,o),
(169,72,qs),
(143,49,o),
(128,41,o),
(111,41,qs),
(78,41,o),
(78,75,qs),
(78,80,o),
(79,92,q),
(152,504,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 3 0 3 1 0 128 0 3 3 39 77 0 0 0 2 97 0 2 2 49 2 78 53 35 35 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,321,q),
(118,360,o),
(87,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(97,193,ls),
(120,320,o),
(230,320,qs),
(317,320,o),
(317,235,qs),
(317,217,o),
(313,200,qs),
(279,6,l),
(279,5,ls),
(279,4,o),
(279,3,qs),
(279,0,o),
(283,0,qs),
(323,0,ls),
(328,0,o),
(329,6,qs),
(362,193,ls),
(384,320,o),
(494,320,qs),
(581,320,o),
(581,235,qs),
(581,217,o),
(578,200,qs),
(544,6,l),
(543,5,o),
(543,4,qs),
(543,0,o),
(548,0,qs),
(588,0,ls),
(593,0,o),
(594,6,qs),
(631,215,ls),
(633,231,o),
(633,248,qs),
(633,302,o),
(565,367,o),
(507,367,qs),
(414,367,o),
(356,297,q),
(324,367,o),
(247,367,qs),
(164,367,o),
(117,307,q),
(118,315,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
56 1 3 0 4 0 2 2 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
56 1 3 7 4 0 2 2 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
5 1 3 3 0 97 7 1 2 0 0 48 77 6 4 2 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 7 7 42 77 5 1 3 3 0 97 1 1 0 0 48 77 6 4 2 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
54 35 41 35 40 38 34 33 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,321,qs),
(120,360,o),
(87,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(97,193,ls),
(120,320,o),
(232,320,qs),
(322,320,o),
(322,234,qs),
(322,217,o),
(319,200,qs),
(285,6,ls),
(285,5,o),
(285,4,qs),
(285,0,o),
(289,0,qs),
(329,0,ls),
(334,0,o),
(335,6,qs),
(372,214,ls),
(375,231,o),
(375,247,qs),
(375,302,o),
(307,367,o),
(250,367,qs),
(166,367,o),
(119,307,q),
(120,316,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
36 1 2 0 0 1 1 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
36 1 2 4 0 1 1 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 4 4 42 77 0 2 2 0 97 0 0 0 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
54 35 40 38 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 48 77 5 1 2 2 0 97 4 1 0 0 49 0 78 17 16 1 0 24 22 16 29 17 29 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,-9,qs),
(279,-9,o),
(335,48,qs),
(399,113,o),
(399,217,qs),
(399,279,o),
(366,320,qs),
(327,367,o),
(258,367,qs),
(169,367,o),
(117,304,q),
(118,308,ls),
(119,315,o),
(119,322,qs),
(119,360,o),
(87,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(-14,-154,ls),
(-14,-155,o),
(-14,-156,qs),
(-14,-160,o),
(-10,-160,qs),
(30,-160,ls),
(35,-160,o),
(36,-154,qs),
(74,58,l),
(113,-9,o)
);
},
{
closed = 1;
nodes = (
(92,94,o),
(92,142,qs),
(92,213,o),
(130,263,qs),
(175,320,o),
(246,320,qs),
(294,320,o),
(347,264,o),
(348,213,qs),
(347,146,o),
(309,96,qs),
(264,38,o),
(198,38,qs),
(149,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 98 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 98 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 134 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 98 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
30 29 37 35 29 42 30 42 38 37 54 34 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,-155,ls),
(271,-156,o),
(271,-157,qs),
(271,-160,o),
(275,-160,qs),
(315,-160,ls),
(319,-160,o),
(321,-154,q),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(364,360,o),
(351,301,q),
(306,367,o),
(230,367,qs),
(147,367,o),
(89,308,qs),
(25,242,o),
(25,139,qs),
(25,77,o),
(61,37,qs),
(103,-9,o),
(172,-9,qs),
(258,-9,o),
(308,53,q),
(271,-154,l)
);
},
{
closed = 1;
nodes = (
(75,94,o),
(75,144,qs),
(75,212,o),
(115,262,qs),
(160,320,o),
(229,320,qs),
(278,320,o),
(332,266,o),
(332,217,qs),
(332,144,o),
(294,95,qs),
(249,38,o),
(176,38,qs),
(129,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 3 134 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
30 29 37 35 29 42 30 42 37 50 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,323,qs),
(119,360,o),
(87,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(97,192,ls),
(118,309,o),
(218,309,qs),
(238,309,ls),
(243,309,o),
(244,316,qs),
(251,354,ls),
(251,355,o),
(251,356,qs),
(251,357,ls),
(251,360,o),
(247,360,qs),
(237,360,ls),
(156,360,o),
(118,309,q),
(119,319,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
28 5 2 1 0 1 76 0 1 1 1 75 0 1 1 0 97 3 1 0 0 42 77 0 2 2 40 2 78 54 35 55 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,321,o),
(279,326,qs),
(279,342,o),
(210,367,o),
(167,367,qs),
(104,367,o),
(32,307,o),
(32,256,qs),
(32,198,o),
(130,162,qs),
(204,134,o),
(204,101,qs),
(204,72,o),
(150,36,o),
(107,36,qs),
(35,36,o),
(12,82,qs),
(9,88,o),
(4,88,qs),
(-9,88,o),
(-9,66,qs),
(-9,30,o),
(56,-11,o),
(112,-11,qs),
(178,-11,o),
(255,54,o),
(255,110,qs),
(255,171,o),
(155,207,qs),
(83,233,o),
(83,265,qs),
(83,289,o),
(130,320,o),
(167,320,qs),
(222,320,o),
(257,293,qs),
(260,291,o),
(262,291,qs),
(265,291,o),
(268,297,qs),
(275,312,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
38 1 0 4 1 76 0 2 0 3 0 2 3 128 0 0 0 4 97 0 4 4 48 77 0 3 3 1 97 0 1 1 46 1 78 40 35 19 40 37 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,4,o),
(46,2,qs),
(46,0,o),
(50,0,qs),
(90,0,ls),
(95,0,o),
(97,6,q),
(151,315,l),
(225,315,ls),
(230,315,o),
(231,321,qs),
(237,354,ls),
(237,355,o),
(237,357,qs),
(237,360,o),
(233,360,qs),
(159,360,l),
(173,439,ls),
(174,446,o),
(174,453,qs),
(174,491,o),
(141,491,qs),
(136,491,ls),
(132,491,o),
(131,484,qs),
(109,360,l),
(41,360,ls),
(36,360,o),
(35,354,qs),
(29,321,ls),
(29,319,o),
(29,318,qs),
(29,315,o),
(33,315,qs),
(101,315,l),
(47,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
21 3 2 0 1 1 76 0 2 1 2 133 4 1 0 0 1 95 3 1 1 1 42 77 0 5 5 40 5 78 34 38 20 50 38 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,315,o),
(373,322,qs),
(373,360,o),
(340,360,qs),
(336,360,ls),
(331,360,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(171,36,qs),
(87,36,o),
(87,120,qs),
(87,137,o),
(91,156,qs),
(117,308,l),
(119,315,o),
(119,322,qs),
(119,360,o),
(85,360,qs),
(80,360,ls),
(76,360,o),
(75,354,qs),
(42,169,ls),
(38,144,o),
(38,121,qs),
(37,58,o),
(102,-10,o),
(163,-10,qs),
(242,-10,o),
(329,65,o),
(343,146,qs),
(372,308,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 51 39 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,360,o),
(52,360,qs),
(40,360,ls),
(34,360,o),
(34,356,qs),
(34,355,l),
(34,354,l),
(95,5,ls),
(96,0,o),
(101,0,qs),
(136,0,ls),
(141,0,o),
(144,5,qs),
(327,354,ls),
(328,356,o),
(328,357,qs),
(328,360,o),
(324,360,qs),
(288,360,ls),
(276,360,o),
(270,350,qs),
(128,70,l),
(90,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 39 38 34 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,360,o),
(56,360,qs),
(45,360,ls),
(40,360,o),
(40,356,qs),
(40,354,l),
(86,5,ls),
(87,0,o),
(93,0,qs),
(127,0,ls),
(132,0,o),
(135,5,qs),
(280,291,l),
(324,5,l),
(324,0,o),
(329,0,qs),
(363,0,ls),
(369,0,o),
(371,5,qs),
(543,354,ls),
(544,356,o),
(544,357,qs),
(544,360,o),
(540,360,qs),
(505,360,ls),
(492,360,o),
(487,350,qs),
(358,72,l),
(320,319,ls),
(313,360,o),
(283,360,qs),
(274,360,ls),
(266,360,o),
(263,353,qs),
(122,72,l),
(95,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
22 7 2 2 0 1 76 4 1 2 0 0 42 77 3 1 2 2 40 2 78 38 37 38 36 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,360,o),
(67,360,qs),
(51,360,ls),
(46,360,o),
(46,357,qs),
(46,355,o),
(46,354,q),
(126,197,l),
(-32,6,l),
(-33,4,o),
(-33,2,qs),
(-33,0,o),
(-29,0,qs),
(12,0,ls),
(21,0,o),
(29,10,qs),
(147,156,l),
(221,10,ls),
(226,0,o),
(235,0,qs),
(270,0,ls),
(275,0,o),
(275,4,qs),
(275,5,o),
(275,6,q),
(181,190,l),
(314,354,ls),
(316,357,o),
(316,358,qs),
(316,360,o),
(313,360,qs),
(276,360,ls),
(263,360,o),
(255,349,qs),
(160,231,l),
(117,316,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
27 18 9 3 1 0 1 76 3 1 0 0 42 77 2 1 1 1 40 1 78 42 36 42 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 336;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-62,qs),
(35,-95,o),
(23,-108,qs),
(8,-124,o),
(-16,-125,qs),
(-39,-125,o),
(-55,-104,qs),
(-64,-93,o),
(-68,-93,qs),
(-80,-93,o),
(-80,-115,qs),
(-80,-138,o),
(-44,-171,o),
(-17,-171,qs),
(23,-171,o),
(80,-112,o),
(129,-19,qs),
(326,354,l),
(327,355,o),
(327,357,qs),
(327,360,o),
(323,360,qs),
(286,360,ls),
(274,360,o),
(269,350,qs),
(124,63,l),
(88,320,ls),
(83,360,o),
(51,360,qs),
(38,360,ls),
(33,360,o),
(33,355,qs),
(33,354,l),
(91,-1,l),
(71,-37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
8 1 3 0 1 76 0 3 0 4 0 3 4 128 1 1 0 0 42 77 0 4 4 2 97 0 2 2 44 2 78 35 19 39 36 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,298,o),
(297,331,qs),
(297,360,o),
(257,360,qs),
(61,360,ls),
(56,360,o),
(54,354,q),
(49,321,l),
(48,320,o),
(49,318,q),
(49,315,o),
(53,315,qs),
(250,315,l),
(12,62,ls),
(-4,45,o),
(-6,36,qs),
(-11,6,l),
(-11,5,ls),
(-11,4,o),
(-11,3,qs),
(-11,0,o),
(-7,0,qs),
(233,0,ls),
(238,0,o),
(239,6,qs),
(245,39,ls),
(245,40,o),
(245,41,qs),
(245,45,o),
(241,45,qs),
(56,45,l),
(275,274,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
21 1 2 3 3 1 1 0 2 76 0 2 2 3 95 0 3 3 42 77 0 0 0 1 95 0 1 1 40 1 78 54 25 38 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,334,qs),
(219,628,ls),
(224,652,o),
(246,652,qs),
(303,652,ls),
(342,652,o),
(348,686,q),
(348,689,l),
(349,689,o),
(349,690,qs),
(349,691,ls),
(349,696,o),
(343,696,qs),
(235,696,ls),
(184,696,o),
(174,639,qs),
(121,337,ls),
(115,302,o),
(80,298,qs),
(66,296,o),
(65,288,qs),
(60,264,ls),
(60,263,o),
(60,262,qs),
(60,256,o),
(68,255,qs),
(100,251,o),
(100,225,qs),
(100,220,o),
(99,216,qs),
(46,-88,ls),
(45,-94,o),
(45,-99,qs),
(45,-144,o),
(93,-144,qs),
(194,-144,ls),
(202,-144,o),
(203,-137,qs),
(203,-134,l),
(204,-131,o),
(204,-128,qs),
(204,-101,o),
(170,-101,qs),
(114,-101,ls),
(95,-101,o),
(95,-82,qs),
(95,-79,o),
(95,-77,qs),
(147,218,ls),
(149,228,o),
(149,237,qs),
(149,259,o),
(133,276,q),
(160,293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
42 1 3 2 25 20 5 3 0 3 12 1 1 0 3 76 0 2 0 3 0 2 3 103 0 0 1 1 0 89 0 0 0 1 95 0 1 0 1 79 50 47 40 38 53 56 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,-149,o),
(101,-143,qs),
(101,514,ls),
(101,537,o),
(78,567,o),
(60,567,qs),
(55,567,o),
(55,561,qs),
(55,-143,ls),
(55,-149,o),
(60,-149,qs),
(96,-149,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 3 2 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 0 1 134 0 0 0 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 133 2 1 1 1 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 11 0 11 21 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,218,qs),
(111,-77,ls),
(107,-101,o),
(84,-101,qs),
(28,-101,ls),
(-11,-101,o),
(-17,-134,qs),
(-18,-137,l),
(-18,-139,o),
(-18,-140,qs),
(-18,-144,o),
(-12,-144,qs),
(95,-144,ls),
(146,-144,o),
(156,-88,qs),
(210,216,ls),
(216,250,o),
(256,255,qs),
(265,256,o),
(266,264,qs),
(271,288,l),
(271,290,o),
(271,291,qs),
(270,296,o),
(263,297,qs),
(230,301,o),
(230,327,qs),
(230,332,o),
(231,337,qs),
(285,639,ls),
(286,645,o),
(286,651,qs),
(286,671,o),
(259,696,o),
(237,696,qs),
(136,696,ls),
(129,696,o),
(128,689,qs),
(127,686,l),
(127,683,o),
(127,680,qs),
(127,652,o),
(160,652,qs),
(217,652,ls),
(236,652,o),
(236,634,qs),
(236,631,o),
(236,628,q),
(184,334,ls),
(182,325,o),
(182,316,qs),
(182,295,o),
(198,276,q),
(170,258,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
12 1 0 1 26 21 5 3 3 0 43 1 2 3 3 76 0 1 0 0 3 1 0 103 0 3 2 2 3 89 0 3 3 2 95 0 2 3 2 79 50 47 41 39 53 56 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,213,q),
(87,242,o),
(124,242,qs),
(144,242,o),
(177,231,qs),
(218,218,o),
(240,218,qs),
(279,218,o),
(309,242,qs),
(318,250,o),
(318,267,qs),
(318,291,ls),
(318,298,o),
(311,293,qs),
(290,275,o),
(263,265,o),
(240,265,qs),
(220,265,o),
(187,275,qs),
(147,288,o),
(124,288,qs),
(88,288,o),
(55,265,qs),
(46,259,o),
(46,240,qs),
(46,215,ls),
(46,205,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 1 3 2 1 89 0 0 0 3 2 0 3 105 0 1 1 2 97 0 2 1 2 81 34 40 34 36 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 368;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,317,o),
(125,337,qs),
(125,351,o),
(103,372,o),
(88,372,qs),
(69,372,o),
(41,342,o),
(41,322,qs),
(41,308,o),
(62,287,o),
(77,287,qs),
(96,287,o)
);
},
{
closed = 1;
nodes = (
(77,177,o),
(77,183,qs),
(77,222,o),
(46,222,qs),
(41,222,o),
(40,216,qs),
(-35,-193,ls),
(-35,-194,o),
(-35,-195,qs),
(-35,-199,o),
(-31,-199,qs),
(10,-199,ls),
(14,-199,o),
(15,-193,qs),
(76,170,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
24 1 2 3 1 76 0 3 0 2 0 3 2 128 0 2 2 132 4 1 0 0 1 97 0 1 1 48 0 78 1 0 23 21 15 13 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 143;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,422,o),
(259,423,qs),
(259,427,o),
(255,427,qs),
(218,427,ls),
(213,427,o),
(212,421,qs),
(202,365,l),
(127,358,o),
(82,313,qs),
(25,256,o),
(21,137,q),
(23,80,o),
(51,43,qs),
(82,3,o),
(137,-7,q),
(126,-65,ls),
(126,-66,o),
(126,-67,qs),
(126,-71,o),
(130,-71,qs),
(167,-71,ls),
(172,-71,o),
(173,-65,qs),
(183,-9,l),
(232,-6,o),
(301,44,o),
(303,79,qs),
(303,89,o),
(295,89,qs),
(291,89,o),
(284,82,qs),
(243,41,o),
(191,38,q),
(241,320,l),
(277,317,o),
(314,294,qs),
(318,292,o),
(320,292,qs),
(324,292,o),
(326,298,qs),
(333,313,ls),
(336,321,o),
(336,326,qs),
(333,360,o),
(249,366,q),
(259,421,ls)
);
},
{
closed = 1;
nodes = (
(73,141,qs),
(75,222,o),
(109,266,qs),
(140,307,o),
(194,317,q),
(145,41,l),
(75,61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
48 44 11 2 4 1 4 30 1 2 0 27 1 3 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 1 4 133 0 1 0 1 133 0 3 2 3 134 0 0 0 2 98 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 1 4 133 0 1 0 1 133 0 3 2 3 134 0 0 0 2 98 0 2 2 49 2 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
47 34 19 34 28 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,178,o),
(213,209,qs),
(213,231,o),
(206,262,q),
(369,262,ls),
(377,262,o),
(378,269,qs),
(380,279,ls),
(381,283,o),
(381,287,qs),
(381,308,o),
(355,308,qs),
(190,308,l),
(171,360,o),
(171,390,qs),
(171,443,o),
(206,478,qs),
(246,519,o),
(314,519,qs),
(345,519,o),
(417,492,o),
(435,474,qs),
(442,468,o),
(447,468,qs),
(452,468,o),
(456,476,qs),
(464,492,ls),
(467,498,o),
(467,504,qs),
(467,524,o),
(421,544,qs),
(367,567,o),
(311,567,qs),
(229,567,o),
(178,524,qs),
(120,475,o),
(120,387,qs),
(120,350,o),
(136,308,q),
(63,308,ls),
(58,308,o),
(57,302,qs),
(51,268,ls),
(51,266,o),
(51,265,qs),
(51,262,o),
(55,262,qs),
(153,262,l),
(165,234,o),
(165,213,qs),
(165,144,o),
(100,47,q),
(17,47,ls),
(12,47,o),
(11,41,qs),
(5,6,ls),
(5,5,o),
(5,4,qs),
(5,0,o),
(9,0,qs),
(375,0,ls),
(382,0,o),
(383,7,qs),
(385,18,ls),
(386,22,o),
(386,26,qs),
(386,47,o),
(360,47,qs),
(146,47,l),
(186,112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
40 1 6 7 59 24 2 3 4 11 3 2 1 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 7 4 7 6 4 128 8 1 4 9 1 3 0 4 3 103 0 7 7 5 97 0 5 5 39 77 2 1 0 0 1 95 0 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 4 7 6 4 128 0 5 0 7 6 5 7 105 8 1 4 9 1 3 0 4 3 103 2 1 0 0 1 95 0 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 63 37 35 39 37 38 20 38 37 32 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,4,l),
(153,0,o),
(158,0,qs),
(199,0,ls),
(204,0,o),
(205,6,qs),
(227,133,l),
(375,133,ls),
(380,133,o),
(381,139,qs),
(387,172,l),
(387,174,ls),
(387,178,o),
(383,178,qs),
(235,178,l),
(242,219,l),
(266,251,l),
(396,251,ls),
(401,251,o),
(402,257,qs),
(407,289,l),
(408,290,o),
(408,291,qs),
(408,295,o),
(403,295,qs),
(296,295,l),
(479,547,l),
(482,550,o),
(482,552,qs),
(482,556,o),
(475,556,qs),
(438,556,ls),
(428,556,o),
(419,543,qs),
(225,275,l),
(135,513,ls),
(125,539,o),
(108,556,o),
(90,556,qs),
(74,556,ls),
(69,556,o),
(69,550,qs),
(69,549,o),
(69,548,q),
(162,295,l),
(52,295,ls),
(47,295,o),
(46,289,qs),
(40,257,ls),
(40,255,o),
(40,254,qs),
(40,251,o),
(44,251,qs),
(180,251,l),
(191,219,l),
(184,178,l),
(31,178,ls),
(26,178,o),
(25,172,qs),
(19,139,ls),
(19,138,o),
(19,137,qs),
(19,133,o),
(23,133,qs),
(176,133,l),
(154,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
21 1 3 4 42 30 14 3 2 3 10 1 1 2 53 3 2 0 1 64 1 10 0 5 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 39 77 0 10 10 40 10 78 62 60 58 56 18 38 20 53 52 38 18 38 16 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,272,o),
(101,277,qs),
(101,514,ls),
(101,537,o),
(78,567,o),
(60,567,qs),
(55,567,o),
(55,561,qs),
(55,277,ls),
(55,272,o),
(60,272,qs),
(96,272,ls)
);
},
{
closed = 1;
nodes = (
(101,-149,o),
(101,-143,qs),
(101,140,ls),
(101,146,o),
(96,146,qs),
(60,146,ls),
(55,146,o),
(55,140,qs),
(55,-143,ls),
(55,-149,o),
(60,-149,qs),
(96,-149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
9 3 2 3 1 0 21 20 15 14 4 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 2 5 1 3 2 3 99 4 1 1 1 0 97 0 0 0 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 23 18 17 0 11 0 11 21 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,268,qs),
(345,332,o),
(247,387,qs),
(175,428,o),
(174,462,qs),
(175,489,o),
(220,521,o),
(259,521,qs),
(302,521,o),
(345,493,q),
(346,493,l),
(347,493,l),
(349,492,o),
(350,492,qs),
(354,492,o),
(357,498,qs),
(364,513,ls),
(367,520,o),
(367,526,qs),
(367,543,o),
(302,568,o),
(260,568,qs),
(199,568,o),
(123,507,o),
(123,457,qs),
(123,417,o),
(175,377,q),
(56,318,o),
(56,243,qs),
(56,204,o),
(94,155,o),
(155,118,qs),
(236,67,o),
(236,27,qs),
(236,-6,o),
(178,-51,o),
(135,-51,qs),
(78,-51,o),
(42,-14,qs),
(31,-2,o),
(28,-2,qs),
(24,-2,o),
(21,-8,qs),
(15,-19,ls),
(11,-27,o),
(11,-32,qs),
(11,-56,o),
(90,-97,o),
(135,-97,qs),
(200,-97,o),
(242,-63,qs),
(289,-26,o),
(289,34,qs),
(289,77,o),
(233,124,q),
(345,190,o)
);
},
{
closed = 1;
nodes = (
(103,217,o),
(103,243,qs),
(103,303,o),
(204,357,q),
(261,323,o),
(297,287,o),
(297,264,qs),
(297,217,o),
(203,144,q),
(140,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
36 1 4 3 61 28 2 1 4 9 1 2 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 4 2 4 1 2 128 0 2 0 0 2 0 101 0 4 4 3 97 0 3 3 39 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 4 2 4 1 2 128 0 3 0 4 1 3 4 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
44 45 34 38 37 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,492,o),
(52,492,qs),
(66,492,o),
(82,472,o),
(80,458,qs),
(77,445,o),
(54,426,o),
(40,426,qs),
(27,426,o),
(11,445,o),
(13,458,qs),
(16,472,o)
);
},
{
closed = 1;
nodes = (
(150,492,o),
(164,492,qs),
(178,492,o),
(195,472,o),
(192,458,qs),
(190,445,o),
(167,426,o),
(152,426,qs),
(139,426,o),
(123,445,o),
(125,458,qs),
(128,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 179;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(349,443,o),
(333,451,qs),
(310,463,o),
(277,463,qs),
(227,463,o),
(164,395,o),
(164,340,qs),
(164,284,o),
(224,217,o),
(273,217,qs),
(305,217,o),
(355,256,o),
(355,281,qs),
(355,288,o),
(350,288,qs),
(348,288,o),
(344,283,qs),
(318,248,o),
(276,248,qs),
(200,248,o),
(200,339,qs),
(200,382,o),
(242,433,o),
(277,433,qs),
(310,433,o),
(338,412,q),
(341,409,o),
(343,409,qs),
(346,409,o),
(346,413,qs),
(348,431,ls)
);
},
{
closed = 1;
nodes = (
(99,186,qs),
(161,117,o),
(269,117,qs),
(362,117,o),
(423,171,qs),
(492,233,o),
(492,340,qs),
(492,433,o),
(438,494,qs),
(376,563,o),
(269,563,qs),
(175,563,o),
(115,509,qs),
(46,448,o),
(46,340,qs),
(46,246,o)
);
},
{
closed = 1;
nodes = (
(141,198,qs),
(84,249,o),
(84,340,qs),
(84,419,o),
(128,469,qs),
(179,527,o),
(269,527,qs),
(348,527,o),
(398,482,qs),
(455,431,o),
(455,340,qs),
(455,261,o),
(411,211,qs),
(360,153,o),
(269,153,qs),
(190,153,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 74 values pushed */
2 1 2 0 1 76 0 2 0 1 0 2 1 128 0 5 0 8 4 5 8 105 0 4 0 0 2 4 0 105 0 1 0 3 7 1 3 105 9 1 7 6 6 7 89 9 1 7 7 6 98 0 6 7 6 82 48 47 56 54 47 62 48 62 38 39 36 35 34 35 37 10 9 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 512;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,267,o),
(261,266,q),
(260,264,o),
(263,264,qs),
(297,264,ls),
(301,264,o),
(301,269,q),
(350,543,ls),
(350,544,o),
(350,545,qs),
(350,548,o),
(347,548,qs),
(341,548,ls),
(311,548,o),
(302,501,q),
(264,553,o),
(204,553,qs),
(141,553,o),
(95,508,qs),
(42,455,o),
(42,376,qs),
(42,323,o),
(106,257,o),
(157,257,qs),
(228,257,o),
(267,304,q),
(261,269,ls)
);
},
{
closed = 1;
nodes = (
(87,339,o),
(87,377,qs),
(87,434,o),
(155,513,o),
(204,513,qs),
(284,513,o),
(284,434,qs),
(284,373,o),
(216,296,o),
(163,296,qs),
(128,296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 26 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 4 0 4 3 0 128 0 2 2 55 77 0 5 5 1 97 0 1 1 55 77 6 1 4 4 0 97 0 0 0 56 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 4 0 4 3 0 128 6 1 4 0 0 4 0 101 0 2 2 55 77 0 5 5 1 97 0 1 1 55 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 4 0 4 3 0 128 6 1 4 0 0 4 0 101 0 5 5 1 97 0 1 1 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 5 1 2 5 128 0 3 4 0 4 3 0 128 0 1 0 5 4 1 5 105 6 1 4 3 0 4 89 6 1 4 4 0 97 0 0 4 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
28 27 33 31 27 37 28 37 22 50 37 33 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 328;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,323,o),
(344,325,qs),
(344,328,o),
(340,328,qs),
(296,328,ls),
(287,328,o),
(279,320,qs),
(163,198,ls),
(153,188,o),
(153,182,qs),
(153,178,o),
(158,170,qs),
(237,48,ls),
(242,40,o),
(251,40,qs),
(289,40,ls),
(295,40,o),
(295,44,qs),
(295,46,o),
(294,47,q),
(211,179,l),
(342,321,ls)
);
},
{
closed = 1;
nodes = (
(206,323,o),
(206,325,qs),
(206,328,o),
(202,328,qs),
(158,328,ls),
(149,328,o),
(141,320,qs),
(25,198,ls),
(15,188,o),
(15,182,qs),
(15,178,o),
(20,170,qs),
(99,48,ls),
(105,40,o),
(114,40,qs),
(151,40,ls),
(157,40,o),
(157,44,qs),
(157,46,o),
(156,47,q),
(73,179,l),
(204,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 40 57 40 52 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,180,o),
(251,186,qs),
(257,221,ls),
(257,222,o),
(257,223,qs),
(257,227,o),
(253,227,qs),
(39,227,ls),
(34,227,o),
(33,221,qs),
(27,186,ls),
(27,185,o),
(27,184,qs),
(27,180,o),
(31,180,qs),
(245,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
10 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 38 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,226,ls),
(329,222,o),
(335,222,qs),
(364,222,ls),
(369,222,o),
(366,225,q),
(310,311,l),
(361,329,o),
(361,386,qs),
(361,459,o),
(275,459,qs),
(186,459,ls),
(184,459,o),
(184,457,qs),
(184,225,ls),
(184,222,o),
(186,222,qs),
(218,222,ls),
(220,222,o),
(220,225,qs),
(220,308,l),
(274,308,l)
);
},
{
closed = 1;
nodes = (
(267,428,ls),
(325,428,o),
(325,388,qs),
(325,340,o),
(263,340,qs),
(220,340,l),
(220,428,l)
);
},
{
closed = 1;
nodes = (
(99,186,qs),
(161,117,o),
(269,117,qs),
(362,117,o),
(423,171,qs),
(492,233,o),
(492,340,qs),
(492,433,o),
(438,494,qs),
(376,563,o),
(269,563,qs),
(175,563,o),
(115,509,qs),
(46,448,o),
(46,340,qs),
(46,246,o)
);
},
{
closed = 1;
nodes = (
(141,198,qs),
(84,249,o),
(84,340,qs),
(84,419,o),
(128,469,qs),
(179,527,o),
(269,527,qs),
(348,527,o),
(398,482,qs),
(455,431,o),
(455,340,qs),
(455,261,o),
(411,211,qs),
(360,153,o),
(269,153,qs),
(190,153,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 81 values pushed */
14 1 1 2 15 4 1 3 6 1 2 76 0 4 0 7 0 4 7 105 0 0 0 3 2 0 3 105 0 2 8 1 1 6 2 1 103 9 1 6 5 5 6 89 9 1 6 6 5 97 0 5 6 5 81 46 45 0 0 54 52 45 60 46 60 42 40 34 32 28 26 24 22 0 21 0 21 71 10 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 512;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,437,qs),
(15,464,l),
(17,469,o),
(21,469,qs),
(213,469,ls),
(218,469,o),
(217,464,qs),
(212,437,ls),
(211,431,o),
(206,431,qs),
(15,431,ls),
(10,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
4 1 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 7 6 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 202;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,441,o),
(274,493,qs),
(274,531,o),
(221,579,o),
(181,579,qs),
(129,579,o),
(61,509,o),
(61,457,qs),
(61,419,o),
(113,369,o),
(152,369,qs),
(204,369,o)
);
},
{
closed = 1;
nodes = (
(103,460,qs),
(103,493,o),
(148,543,o),
(179,543,qs),
(231,543,o),
(231,489,qs),
(231,456,o),
(185,407,o),
(155,407,qs),
(103,407,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 18 16 12 21 13 21 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 261;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,101,o),
(154,101,qs),
(190,101,ls),
(196,101,o),
(195,107,q),
(195,249,l),
(319,249,ls),
(324,249,o),
(324,255,qs),
(324,289,ls),
(324,295,o),
(319,295,qs),
(195,295,l),
(195,397,ls),
(195,443,o),
(154,443,qs),
(149,443,o),
(149,437,qs),
(149,295,l),
(26,295,ls),
(21,295,o),
(21,289,qs),
(21,255,ls),
(21,249,o),
(26,249,qs),
(149,249,l),
(149,107,ls)
);
},
{
closed = 1;
nodes = (
(324,0,o),
(324,6,qs),
(324,11,ls),
(324,47,o),
(285,47,qs),
(26,47,ls),
(21,47,o),
(21,41,qs),
(21,6,ls),
(21,0,o),
(26,0,qs),
(319,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
8 1 1 2 17 16 4 3 4 0 1 26 21 2 5 0 30 29 2 7 6 4 76 3 1 1 4 1 0 5 1 0 103 0 2 0 5 6 2 5 105 0 6 6 7 95 8 1 7 7 40 7 78 27 27 27 38 27 37 40 34 21 18 19 21 16 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,327,o),
(177,355,qs),
(241,392,o),
(288,445,o),
(288,481,qs),
(288,516,o),
(229,562,o),
(184,562,qs),
(146,562,o),
(84,535,o),
(84,518,qs),
(83,496,l),
(83,494,ls),
(83,491,o),
(86,491,qs),
(88,491,o),
(92,493,qs),
(141,522,o),
(181,522,qs),
(244,522,o),
(244,481,qs),
(244,431,o),
(155,384,qs),
(84,346,o),
(58,310,qs),
(30,270,o),
(30,240,qs),
(30,239,o),
(33,239,qs),
(241,239,ls),
(246,239,o),
(246,243,q),
(250,263,l),
(251,265,o),
(250,267,q),
(251,279,o),
(235,279,qs),
(86,279,l),
(99,301,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
26 23 2 0 2 1 76 0 2 2 3 97 0 3 3 55 77 0 0 0 1 95 0 1 1 56 1 78 41 41 22 32 4 10 26 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,488,qs),
(295,520,o),
(238,562,o),
(192,562,qs),
(153,562,o),
(89,535,o),
(89,518,qs),
(89,498,l),
(88,496,l),
(88,493,o),
(92,493,qs),
(95,493,o),
(99,496,qs),
(138,523,o),
(186,523,qs),
(250,523,o),
(250,485,qs),
(250,424,o),
(170,424,qs),
(118,424,ls),
(114,424,o),
(114,421,qs),
(111,403,l),
(110,401,o),
(110,398,qs),
(110,386,o),
(124,386,qs),
(155,386,ls),
(232,386,o),
(233,337,qs),
(232,272,o),
(144,272,qs),
(88,272,o),
(67,305,qs),
(57,322,o),
(55,322,qs),
(44,322,o),
(44,305,qs),
(44,273,o),
(103,233,o),
(149,233,qs),
(210,233,o),
(278,289,o),
(278,339,qs),
(278,388,o),
(227,404,q),
(295,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
21 1 3 4 1 76 0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 55 77 0 2 2 0 97 0 0 0 56 0 78 37 34 34 38 50 35 19 36 8 10 30 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,502,o),
(86,502,qs),
(135,502,ls),
(144,502,o),
(138,496,q),
(67,440,ls),
(54,431,o),
(42,431,qs),
(5,431,ls),
(2,431,o),
(1,432,q),
(0,435,o),
(2,436,q),
(65,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 51 36 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 139;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,5,o),
(165,4,qs),
(165,0,o),
(169,0,qs),
(199,0,ls),
(204,0,o),
(205,6,qs),
(295,514,l),
(367,514,l),
(277,6,ls),
(277,5,o),
(277,4,qs),
(277,0,o),
(281,0,qs),
(311,0,ls),
(316,0,o),
(317,6,qs),
(403,491,ls),
(404,500,o),
(405,511,q),
(404,556,o),
(353,556,qs),
(282,556,ls),
(184,556,o),
(126,511,qs),
(59,459,o),
(59,359,qs),
(59,302,o),
(92,265,qs),
(131,221,o),
(199,221,qs),
(203,221,l),
(165,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
12 1 0 3 1 76 0 0 3 2 3 0 2 128 0 3 3 1 95 0 1 1 39 77 4 1 2 2 40 2 78 34 21 37 54 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,297,o),
(124,279,qs),
(121,262,o),
(93,237,o),
(76,237,qs),
(59,237,o),
(39,262,o),
(42,279,qs),
(45,297,o),
(74,322,o),
(91,322,qs),
(108,322,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-86,o),
(40,-86,qs),
(7,-86,ls),
(-1,-86,o),
(4,-80,q),
(51,-5,ls),
(58,5,o),
(74,5,qs),
(96,5,ls),
(102,5,o),
(100,-1,q),
(61,-77,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 51 49 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 98;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,244,o),
(89,243,qs),
(89,239,o),
(93,239,qs),
(128,239,ls),
(133,239,o),
(134,245,qs),
(184,528,ls),
(185,532,o),
(185,537,qs),
(185,556,o),
(167,556,qs),
(149,556,ls),
(137,556,o),
(121,551,qs),
(81,538,ls),
(75,536,o),
(75,532,q),
(68,494,ls),
(68,492,o),
(69,492,qs),
(70,492,o),
(71,493,q),
(137,514,l),
(89,245,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
14 1 2 1 0 1 76 0 0 0 55 77 0 1 1 56 1 78 37 58 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,292,qs),
(42,332,o),
(55,404,qs),
(66,466,o),
(107,507,qs),
(154,553,o),
(220,553,qs),
(280,553,o),
(312,517,qs),
(348,476,o),
(335,404,qs),
(323,337,o),
(232,257,o),
(168,257,qs),
(110,257,o)
);
},
{
closed = 1;
nodes = (
(282,354,o),
(290,404,qs),
(299,452,o),
(256,513,o),
(213,513,qs),
(170,513,o),
(109,454,o),
(100,404,qs),
(91,355,o),
(132,296,o),
(175,296,qs),
(219,296,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 55 77 5 1 2 2 0 97 4 1 0 0 56 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 4 1 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
16 15 1 0 22 20 15 26 16 26 8 6 0 14 1 14 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-11,45,o),
(-11,43,qs),
(-11,40,o),
(-7,40,qs),
(37,40,ls),
(47,40,o),
(54,48,qs),
(171,170,ls),
(180,180,o),
(180,186,qs),
(180,190,o),
(176,198,q),
(96,320,ls),
(91,328,o),
(82,328,qs),
(44,328,ls),
(39,328,o),
(39,324,qs),
(39,322,o),
(39,321,q),
(123,189,l),
(-9,47,ls)
);
},
{
closed = 1;
nodes = (
(127,45,o),
(127,43,qs),
(127,40,o),
(131,40,qs),
(175,40,ls),
(184,40,o),
(192,48,qs),
(308,170,ls),
(318,180,o),
(318,186,qs),
(318,190,o),
(313,198,qs),
(234,320,ls),
(229,328,o),
(220,328,qs),
(182,328,ls),
(176,328,o),
(176,324,q),
(177,322,o),
(177,321,q),
(260,189,l),
(129,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
1 1 1 0 1 76 2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 40 57 40 52 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,0,o),
(117,6,qs),
(478,503,ls),
(494,526,o),
(494,540,qs),
(494,556,o),
(475,556,qs),
(469,556,ls),
(465,556,o),
(461,549,q),
(65,6,ls),
(63,3,o),
(63,2,qs),
(63,0,o),
(66,0,qs),
(108,0,ls)
);
},
{
closed = 1;
nodes = (
(89,244,o),
(89,243,qs),
(89,239,o),
(93,239,qs),
(128,239,ls),
(133,239,o),
(134,245,qs),
(184,528,ls),
(185,532,o),
(185,538,qs),
(185,556,o),
(167,556,qs),
(149,556,ls),
(137,556,o),
(121,551,qs),
(81,538,ls),
(76,536,o),
(75,532,qs),
(68,494,l),
(68,493,l),
(69,492,l),
(70,492,o),
(71,493,q),
(137,514,l),
(89,245,ls)
);
},
{
closed = 1;
nodes = (
(433,2,ls),
(433,0,o),
(435,0,qs),
(472,0,ls),
(475,0,o),
(475,3,q),
(489,79,l),
(528,79,ls),
(533,79,o),
(533,83,q),
(536,100,l),
(537,102,o),
(537,105,qs),
(537,117,o),
(522,117,qs),
(496,117,l),
(527,296,l),
(528,299,o),
(528,302,qs),
(528,317,o),
(511,317,qs),
(486,317,ls),
(475,317,o),
(467,308,qs),
(296,115,ls),
(289,107,o),
(287,97,qs),
(284,82,ls),
(284,81,o),
(284,80,qs),
(284,79,o),
(287,79,qs),
(446,79,l),
(433,3,l)
);
},
{
closed = 1;
nodes = (
(453,117,l),
(345,117,l),
(480,269,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 86 values pushed */
30 17 2 5 0 77 55 2 3 5 61 47 2 4 6 3 76 71 1 1 73 2 1 0 5 0 133 0 5 3 5 133 0 3 6 3 133 9 1 1 4 1 134 8 1 6 4 4 6 89 8 1 6 6 4 96 7 1 4 6 4 80 0 0 76 75 67 66 60 58 54 51 42 41 36 34 29 26 0 15 0 14 54 10 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 601;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,0,o),
(117,6,qs),
(478,503,ls),
(494,526,o),
(494,540,qs),
(494,556,o),
(475,556,qs),
(469,556,ls),
(465,556,o),
(461,549,q),
(65,6,ls),
(63,3,o),
(63,2,qs),
(63,0,o),
(66,0,qs),
(108,0,ls)
);
},
{
closed = 1;
nodes = (
(89,244,o),
(89,243,qs),
(89,239,o),
(93,239,qs),
(128,239,ls),
(133,239,o),
(134,245,qs),
(184,528,ls),
(185,532,o),
(185,538,qs),
(185,556,o),
(167,556,qs),
(149,556,ls),
(137,556,o),
(121,551,qs),
(81,538,ls),
(76,536,o),
(75,532,qs),
(68,494,l),
(68,493,l),
(69,492,l),
(70,492,o),
(71,493,q),
(137,514,l),
(89,245,ls)
);
},
{
closed = 1;
nodes = (
(447,88,o),
(495,116,qs),
(559,153,o),
(606,206,o),
(606,242,qs),
(606,277,o),
(547,323,o),
(502,323,qs),
(464,323,o),
(402,296,o),
(402,279,qs),
(401,257,l),
(401,255,ls),
(401,252,o),
(404,252,qs),
(406,252,o),
(410,254,qs),
(459,283,o),
(499,283,qs),
(562,283,o),
(562,242,qs),
(562,193,o),
(473,145,qs),
(402,107,o),
(376,71,qs),
(348,31,o),
(348,1,qs),
(348,0,o),
(351,0,qs),
(559,0,ls),
(564,0,o),
(564,4,q),
(568,24,l),
(568,26,o),
(568,28,qs),
(568,40,o),
(553,40,qs),
(404,40,l),
(417,63,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 78 values pushed */
30 17 2 7 0 67 64 2 3 6 44 1 1 4 3 76 2 1 0 7 0 133 0 3 6 4 6 3 4 128 0 7 0 6 3 7 6 106 0 4 1 1 4 87 0 4 4 1 97 5 8 2 1 4 1 81 0 0 72 70 61 59 50 49 43 41 36 34 29 26 0 15 0 14 54 9 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 672;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,488,qs),
(295,520,o),
(238,562,o),
(192,562,qs),
(153,562,o),
(89,535,o),
(89,518,qs),
(89,498,l),
(88,496,l),
(88,493,o),
(92,493,qs),
(95,493,o),
(99,496,qs),
(138,523,o),
(186,523,qs),
(250,523,o),
(250,485,qs),
(250,424,o),
(170,424,qs),
(118,424,ls),
(114,424,o),
(114,421,qs),
(111,403,l),
(110,401,o),
(110,398,qs),
(110,386,o),
(124,386,qs),
(155,386,ls),
(232,386,o),
(233,337,qs),
(232,272,o),
(144,272,qs),
(88,272,o),
(67,305,qs),
(57,322,o),
(55,322,qs),
(44,322,o),
(44,305,qs),
(44,275,o),
(105,233,o),
(149,233,qs),
(210,233,o),
(278,289,o),
(278,339,qs),
(278,385,o),
(227,401,q),
(295,426,o)
);
},
{
closed = 1;
nodes = (
(197,0,o),
(201,6,qs),
(561,503,ls),
(577,527,o),
(577,540,qs),
(577,556,o),
(558,556,qs),
(552,556,ls),
(548,556,o),
(544,549,q),
(150,6,ls),
(148,3,o),
(147,2,q),
(147,0,o),
(150,0,qs),
(192,0,ls)
);
},
{
closed = 1;
nodes = (
(517,2,ls),
(517,0,o),
(519,0,qs),
(556,0,ls),
(559,0,o),
(560,3,q),
(573,79,l),
(612,79,ls),
(616,79,o),
(616,83,q),
(619,100,ls),
(620,104,o),
(620,105,qs),
(620,117,o),
(606,117,qs),
(580,117,l),
(611,296,l),
(612,298,o),
(612,302,qs),
(612,317,o),
(595,317,qs),
(570,317,ls),
(559,317,o),
(551,308,qs),
(380,115,ls),
(373,107,o),
(371,97,qs),
(368,82,ls),
(368,81,o),
(368,80,qs),
(368,79,o),
(371,79,qs),
(530,79,l),
(517,3,l)
);
},
{
closed = 1;
nodes = (
(537,117,l),
(429,117,l),
(564,269,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
21 1 3 4 77 1 2 1 99 1 0 2 83 69 2 10 12 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
21 1 3 4 77 1 2 11 99 1 0 2 83 69 2 10 12 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 5 4 5 6 4 128 11 1 1 3 2 3 1 2 128 14 16 2 9 10 10 9 113 8 1 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 12 2 0 105 15 1 12 10 10 12 89 15 1 12 12 10 96 13 1 10 12 10 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 6 5 4 5 6 4 128 11 1 1 3 2 3 1 2 128 14 16 2 9 10 9 134 8 1 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 12 2 0 105 15 1 12 10 10 12 89 15 1 12 12 10 96 13 1 10 12 10 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 8 7 5 7 8 5 128 0 6 5 4 5 6 4 128 11 1 1 3 2 3 1 2 128 14 16 2 9 10 9 134 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 12 2 0 105 15 1 12 10 10 12 89 15 1 12 12 10 96 13 1 10 12 10 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
0 8 7 5 7 8 5 128 0 6 5 4 5 6 4 128 0 1 3 11 3 1 11 128 0 11 2 3 11 2 126 14 16 2 9 10 9 134 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 12 2 0 105 15 1 12 10 10 12 89 15 1 12 12 10 96 13 1 10 12 10 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
47 47 98 97 93 92 89 88 82 80 76 73 64 63 47 62 47 61 58 37 34 34 38 50 35 19 36 17 9 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 683;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,317,o),
(243,337,qs),
(243,351,o),
(221,372,o),
(206,372,qs),
(187,372,o),
(159,342,o),
(159,322,qs),
(159,308,o),
(180,287,o),
(195,287,qs),
(214,287,o)
);
},
{
closed = 1;
nodes = (
(266,-114,o),
(261,-114,qs),
(256,-114,o),
(248,-119,qs),
(181,-162,o),
(110,-162,qs),
(5,-162,o),
(5,-76,qs),
(5,-35,o),
(51,30,o),
(110,70,qs),
(197,130,o),
(197,190,qs),
(197,222,o),
(169,222,qs),
(163,222,ls),
(158,222,o),
(157,216,qs),
(151,178,ls),
(146,153,o),
(131,135,o),
(94,110,qs),
(13,57,o),
(-47,-25,o),
(-47,-80,qs),
(-47,-136,o),
(-12,-170,qs),
(29,-210,o),
(105,-210,qs),
(184,-210,o),
(267,-159,qs),
(272,-156,o),
(272,-153,qs),
(272,-152,o),
(272,-151,qs),
(267,-121,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 0 5 0 3 5 128 0 5 4 0 5 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 1 0 46 44 42 40 33 30 19 17 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(307,691,o),
(296,691,qs),
(251,691,ls),
(246,691,o),
(246,687,qs),
(246,686,o),
(247,685,qs),
(309,629,ls),
(319,619,o),
(332,619,qs),
(364,619,ls),
(369,619,o),
(369,623,qs),
(369,624,o),
(368,625,qs),
(315,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 4 1 15 1 0 3 2 76 0 6 5 6 133 0 5 1 5 133 0 4 7 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 0 0 41 38 33 30 25 24 0 23 0 23 53 54 34 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(244,622,qs),
(244,619,o),
(248,619,qs),
(284,619,ls),
(297,619,o),
(311,629,qs),
(393,685,ls),
(394,686,o),
(394,688,qs),
(394,691,o),
(390,691,qs),
(337,691,ls),
(325,691,o),
(314,682,qs),
(246,625,l),
(244,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 4 1 15 1 0 3 2 76 0 5 6 5 133 0 6 1 6 133 0 4 7 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 0 0 39 37 31 29 25 24 0 23 0 23 53 54 34 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(358,619,o),
(373,619,qs),
(403,619,ls),
(408,619,o),
(408,623,qs),
(408,624,o),
(407,625,qs),
(354,682,ls),
(346,691,o),
(335,691,qs),
(306,691,ls),
(295,691,o),
(283,682,qs),
(211,625,l),
(209,624,o),
(209,622,qs),
(209,619,o),
(213,619,qs),
(249,619,ls),
(264,619,o),
(275,629,qs),
(319,664,l),
(350,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
26 1 4 1 15 1 0 3 2 76 0 6 5 6 133 7 1 5 1 5 133 0 4 8 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 0 0 48 45 40 37 31 29 25 24 0 23 0 23 53 54 34 9 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(251,619,o),
(253,627,q),
(260,644,o),
(272,644,qs),
(282,644,o),
(305,632,qs),
(335,617,o),
(356,617,qs),
(380,617,o),
(421,655,o),
(420,676,q),
(419,680,o),
(414,680,qs),
(388,680,ls),
(382,680,o),
(378,674,q),
(370,657,o),
(355,657,qs),
(346,657,o),
(323,668,qs),
(291,684,o),
(270,684,qs),
(249,684,o),
(213,646,o),
(213,623,qs),
(213,620,o),
(218,619,q),
(245,619,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
43 1 6 5 29 1 8 9 26 1 4 1 15 1 0 3 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
43 1 6 7 29 1 8 9 26 1 4 1 15 1 0 3 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
7 1 5 0 9 8 5 9 105 0 6 12 10 2 8 1 6 8 105 0 4 11 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 5 7 6 128 0 5 0 9 8 5 9 105 0 6 12 10 2 8 1 6 8 105 0 4 11 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
27 27 0 0 27 54 27 53 51 49 47 45 41 39 37 35 33 31 25 24 0 23 0 23 53 54 34 13 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(243,614,o),
(256,614,qs),
(271,614,o),
(294,637,o),
(294,653,qs),
(294,664,o),
(276,681,o),
(263,681,qs),
(248,681,o),
(226,657,o),
(226,642,qs),
(226,630,o)
);
},
{
closed = 1;
nodes = (
(356,614,o),
(368,614,qs),
(383,614,o),
(406,637,o),
(406,653,qs),
(406,664,o),
(388,681,o),
(375,681,qs),
(360,681,o),
(338,657,o),
(338,642,qs),
(338,630,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
26 1 4 1 15 1 0 3 2 76 7 1 5 8 1 6 1 5 6 105 0 4 9 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 0 0 49 47 43 41 37 35 31 29 25 24 0 23 0 23 53 54 34 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,12,ls),
(390,0,o),
(401,0,qs),
(436,0,ls),
(441,0,o),
(441,5,qs),
(441,6,o),
(441,7,qs),
(332,521,ls),
(325,556,o),
(288,556,qs),
(283,556,ls),
(277,556,o),
(274,549,q),
(-34,7,ls),
(-35,5,o),
(-35,3,qs),
(-35,0,o),
(-30,0,qs),
(10,0,ls),
(21,0,o),
(27,12,qs),
(112,169,l),
(356,169,l)
);
},
{
closed = 1;
nodes = (
(346,216,l),
(139,216,l),
(291,493,l)
);
},
{
closed = 1;
nodes = (
(288,609,o),
(311,609,qs),
(342,609,o),
(386,651,o),
(386,680,qs),
(386,703,o),
(352,737,o),
(329,737,qs),
(298,737,o),
(254,696,o),
(254,667,qs),
(254,644,o)
);
},
{
closed = 1;
nodes = (
(287,666,qs),
(287,682,o),
(310,708,o),
(326,708,qs),
(353,708,o),
(353,681,qs),
(353,663,o),
(330,639,o),
(314,639,qs),
(287,639,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
26 1 4 1 15 1 0 3 2 76 0 5 0 8 7 5 8 105 10 1 7 0 6 1 7 6 105 0 4 9 1 3 0 4 3 104 0 1 1 39 77 2 1 0 0 40 0 78 40 39 0 0 45 43 39 48 40 48 37 35 31 29 25 24 0 23 0 23 53 54 34 11 9 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(285,5,o),
(285,4,qs),
(285,0,o),
(290,0,qs),
(577,0,ls),
(585,0,o),
(586,7,qs),
(588,18,l),
(588,22,o),
(588,26,qs),
(588,47,o),
(563,47,qs),
(344,47,l),
(380,252,l),
(593,252,ls),
(601,252,o),
(602,259,qs),
(604,270,ls),
(605,273,o),
(605,277,qs),
(605,298,o),
(579,298,qs),
(388,298,l),
(425,508,l),
(656,508,ls),
(664,508,o),
(666,516,q),
(667,527,l),
(668,530,o),
(668,534,qs),
(668,556,o),
(643,556,qs),
(363,556,ls),
(355,556,o),
(350,548,qs),
(-41,7,ls),
(-43,4,o),
(-43,2,qs),
(-43,0,o),
(-39,0,qs),
(8,0,ls),
(19,0,o),
(27,12,qs),
(137,169,l),
(314,169,l),
(286,6,l)
);
},
{
closed = 1;
nodes = (
(323,216,l),
(169,216,l),
(374,509,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
48 15 2 3 2 25 1 5 4 37 1 1 6 3 76 0 4 0 5 8 4 5 103 0 8 0 0 6 8 0 103 0 3 3 2 95 0 2 2 39 77 0 6 6 1 97 7 1 1 1 40 1 78 21 37 33 37 33 37 54 34 16 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,44,qs),
(462,81,o),
(462,113,qs),
(463,125,o),
(452,125,qs),
(446,125,o),
(440,118,qs),
(367,36,o),
(266,36,qs),
(192,36,o),
(150,74,qs),
(103,118,o),
(103,206,qs),
(103,337,o),
(164,422,qs),
(234,519,o),
(354,519,qs),
(427,519,o),
(477,481,qs),
(499,464,o),
(502,464,qs),
(507,464,o),
(511,473,qs),
(517,489,ls),
(520,496,o),
(520,502,qs),
(520,523,o),
(472,543,qs),
(417,567,o),
(357,567,qs),
(231,567,o),
(148,479,qs),
(53,378,o),
(53,208,qs),
(56,78,o),
(123,27,qs),
(164,-5,o),
(226,-10,q),
(164,-87,l),
(163,-89,o),
(163,-91,qs),
(163,-93,o),
(166,-93,qs),
(199,-93,ls),
(215,-93,o),
(221,-84,qs),
(272,-11,l),
(272,-11,l),
(359,-6,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
22 1 2 3 45 1 4 5 10 1 0 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 0 6 6 0 113 0 3 3 1 97 0 1 1 39 77 0 4 4 6 97 7 1 6 6 49 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 0 6 0 134 0 3 3 1 97 0 1 1 39 77 0 4 4 6 97 7 1 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 3 5 3 2 5 128 0 5 4 3 5 4 126 0 0 6 0 134 0 1 0 3 2 1 3 105 0 4 4 6 97 7 1 6 6 49 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 48 0 48 34 38 34 39 44 35 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,251,ls),
(341,251,o),
(343,257,q),
(345,269,ls),
(346,274,o),
(346,277,qs),
(346,298,o),
(320,298,qs),
(129,298,l),
(166,509,l),
(397,509,ls),
(405,509,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(317,0,ls),
(325,0,o),
(326,7,qs),
(328,18,ls),
(329,22,o),
(329,26,qs),
(329,47,o),
(303,47,qs),
(85,47,l),
(121,251,l)
);
},
{
closed = 1;
nodes = (
(270,691,o),
(260,691,qs),
(215,691,ls),
(210,691,o),
(210,687,qs),
(210,686,o),
(211,685,qs),
(273,629,ls),
(283,619,o),
(295,619,qs),
(328,619,ls),
(332,619,o),
(332,623,qs),
(332,624,o),
(331,625,qs),
(279,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
20 1 3 2 30 1 5 4 3 1 1 0 3 76 0 7 6 7 133 0 6 2 6 133 0 4 0 5 0 4 5 103 0 3 3 2 95 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 53 52 37 33 37 55 37 32 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,251,ls),
(341,251,o),
(343,257,q),
(345,269,ls),
(346,274,o),
(346,277,qs),
(346,298,o),
(320,298,qs),
(129,298,l),
(166,509,l),
(397,509,ls),
(405,509,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(317,0,ls),
(325,0,o),
(326,7,qs),
(328,18,ls),
(329,22,o),
(329,26,qs),
(329,47,o),
(303,47,qs),
(85,47,l),
(121,251,l)
);
},
{
closed = 1;
nodes = (
(222,622,qs),
(222,619,o),
(226,619,qs),
(262,619,ls),
(275,619,o),
(289,629,qs),
(370,685,ls),
(372,686,o),
(372,688,qs),
(372,691,o),
(368,691,qs),
(315,691,ls),
(303,691,o),
(292,682,qs),
(224,625,l),
(222,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
20 1 3 2 30 1 5 4 3 1 1 0 3 76 0 6 7 6 133 0 7 2 7 133 0 4 0 5 0 4 5 103 0 3 3 2 95 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 38 35 37 33 37 55 37 32 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,251,ls),
(341,251,o),
(343,257,q),
(345,269,ls),
(346,274,o),
(346,277,qs),
(346,298,o),
(320,298,qs),
(129,298,l),
(166,509,l),
(397,509,ls),
(405,509,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(317,0,ls),
(325,0,o),
(326,7,qs),
(328,18,ls),
(329,22,o),
(329,26,qs),
(329,47,o),
(303,47,qs),
(85,47,l),
(121,251,l)
);
},
{
closed = 1;
nodes = (
(329,619,o),
(344,619,qs),
(374,619,ls),
(378,619,o),
(378,623,qs),
(378,624,o),
(377,625,qs),
(325,682,ls),
(316,691,o),
(306,691,qs),
(277,691,ls),
(265,691,o),
(254,682,qs),
(182,625,l),
(180,624,o),
(180,622,qs),
(180,619,o),
(184,619,qs),
(220,619,ls),
(234,619,o),
(246,629,qs),
(290,664,l),
(321,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
20 1 3 2 30 1 5 4 3 1 1 0 3 76 0 7 6 7 133 8 1 6 2 6 133 0 4 0 5 0 4 5 103 0 3 3 2 95 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 53 54 35 37 33 37 55 37 32 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,251,ls),
(341,251,o),
(343,257,q),
(345,269,ls),
(346,274,o),
(346,277,qs),
(346,298,o),
(320,298,qs),
(129,298,l),
(166,509,l),
(397,509,ls),
(405,509,o),
(406,516,qs),
(408,527,ls),
(409,531,o),
(409,535,qs),
(409,556,o),
(383,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(317,0,ls),
(325,0,o),
(326,7,qs),
(328,18,ls),
(329,22,o),
(329,26,qs),
(329,47,o),
(303,47,qs),
(85,47,l),
(121,251,l)
);
},
{
closed = 1;
nodes = (
(210,614,o),
(222,614,qs),
(238,614,o),
(260,637,o),
(260,653,qs),
(260,664,o),
(242,681,o),
(230,681,qs),
(215,681,o),
(192,657,o),
(192,642,qs),
(192,630,o)
);
},
{
closed = 1;
nodes = (
(322,614,o),
(334,614,qs),
(350,614,o),
(372,637,o),
(372,653,qs),
(372,664,o),
(354,681,o),
(342,681,qs),
(327,681,o),
(305,657,o),
(305,642,qs),
(305,630,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
20 1 3 2 30 1 5 4 3 1 1 0 3 76 8 1 6 9 1 7 2 6 7 105 0 4 0 5 0 4 5 103 0 3 3 2 95 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 59 57 36 36 35 37 33 37 55 37 32 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,o),
(78,6,qs),
(166,504,ls),
(167,511,o),
(167,517,qs),
(167,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(72,0,ls)
);
},
{
closed = 1;
nodes = (
(168,691,o),
(157,691,qs),
(112,691,ls),
(107,691,o),
(107,687,qs),
(107,686,o),
(108,685,qs),
(170,629,ls),
(180,619,o),
(193,619,qs),
(225,619,ls),
(230,619,o),
(230,623,qs),
(230,624,o),
(229,625,qs),
(176,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
11 1 1 0 1 76 0 3 2 3 133 0 2 0 2 133 0 0 0 39 77 4 1 1 1 40 1 78 0 0 31 28 23 20 0 16 0 15 55 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,o),
(78,6,qs),
(166,504,ls),
(167,511,o),
(167,517,qs),
(167,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(72,0,ls)
);
},
{
closed = 1;
nodes = (
(94,622,qs),
(94,619,o),
(98,619,qs),
(134,619,ls),
(147,619,o),
(161,629,qs),
(242,685,ls),
(244,686,o),
(244,688,qs),
(244,691,o),
(240,691,qs),
(187,691,ls),
(175,691,o),
(164,682,qs),
(96,625,l),
(94,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
11 1 1 0 1 76 0 2 3 2 133 0 3 0 3 133 0 0 0 39 77 4 1 1 1 40 1 78 0 0 29 27 21 19 0 16 0 15 55 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,o),
(78,6,qs),
(166,504,ls),
(167,511,o),
(167,517,qs),
(167,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(72,0,ls)
);
},
{
closed = 1;
nodes = (
(212,619,o),
(227,619,qs),
(257,619,ls),
(262,619,o),
(262,623,qs),
(262,624,o),
(261,625,qs),
(208,682,ls),
(199,691,o),
(189,691,qs),
(160,691,ls),
(149,691,o),
(137,682,qs),
(65,625,l),
(63,624,o),
(63,622,qs),
(63,619,o),
(67,619,qs),
(103,619,ls),
(117,619,o),
(129,629,qs),
(173,664,l),
(204,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
11 1 1 0 1 76 0 3 2 3 133 4 1 2 0 2 133 0 0 0 39 77 5 1 1 1 40 1 78 0 0 38 35 30 27 21 19 0 16 0 15 55 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,0,o),
(78,6,qs),
(166,504,ls),
(167,511,o),
(167,517,qs),
(167,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,3,ls),
(27,0,o),
(31,0,qs),
(72,0,ls)
);
},
{
closed = 1;
nodes = (
(93,614,o),
(105,614,qs),
(121,614,o),
(143,637,o),
(143,653,qs),
(143,664,o),
(125,681,o),
(113,681,qs),
(98,681,o),
(76,657,o),
(76,642,qs),
(76,630,o)
);
},
{
closed = 1;
nodes = (
(205,614,o),
(218,614,qs),
(233,614,o),
(256,637,o),
(256,653,qs),
(256,664,o),
(238,681,o),
(225,681,qs),
(210,681,o),
(188,657,o),
(188,642,qs),
(188,630,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
11 1 1 0 1 76 4 1 2 5 1 3 0 2 3 105 0 0 0 39 77 6 1 1 1 40 1 78 0 0 39 37 33 31 27 25 21 19 0 16 0 15 55 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,5,o),
(30,4,qs),
(30,0,o),
(34,0,qs),
(190,0,ls),
(374,0,o),
(451,119,qs),
(509,209,o),
(509,336,qs),
(509,441,o),
(460,494,qs),
(404,556,o),
(277,556,qs),
(132,556,ls),
(127,556,o),
(126,549,qs),
(83,304,l),
(26,304,ls),
(21,304,o),
(20,298,qs),
(14,264,ls),
(14,263,o),
(14,262,qs),
(14,258,o),
(18,258,qs),
(75,258,l),
(30,6,ls)
);
},
{
closed = 1;
nodes = (
(321,258,o),
(322,265,qs),
(324,276,ls),
(325,279,o),
(325,283,qs),
(325,304,o),
(299,304,qs),
(133,304,l),
(169,508,l),
(267,508,ls),
(458,508,o),
(458,343,qs),
(458,215,o),
(407,142,qs),
(341,47,o),
(197,47,qs),
(88,47,l),
(125,258,l),
(313,258,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
40 3 2 0 1 1 76 6 1 1 8 7 2 0 4 1 0 103 0 5 5 2 95 0 2 2 39 77 0 4 4 3 95 0 3 3 40 3 78 27 27 27 45 27 44 33 36 38 38 50 38 16 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,541,o),
(155,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,3,qs),
(27,0,o),
(31,0,qs),
(72,0,ls),
(77,0,o),
(78,6,qs),
(157,454,l),
(344,13,ls),
(349,0,o),
(364,0,qs),
(398,0,ls),
(403,0,o),
(404,6,qs),
(492,504,ls),
(493,510,o),
(493,518,qs),
(493,556,o),
(461,556,qs),
(456,556,ls),
(451,556,o),
(450,549,qs),
(367,80,l),
(183,515,ls)
);
},
{
closed = 1;
nodes = (
(263,619,o),
(266,627,qs),
(272,644,o),
(285,644,qs),
(295,644,o),
(318,632,qs),
(348,617,o),
(369,617,qs),
(393,617,o),
(433,655,o),
(432,676,qs),
(432,680,o),
(427,680,qs),
(400,680,ls),
(394,680,o),
(391,674,qs),
(383,657,o),
(368,657,qs),
(358,657,o),
(335,668,qs),
(304,684,o),
(283,684,qs),
(262,684,o),
(225,646,o),
(225,623,qs),
(225,620,o),
(231,619,q),
(257,619,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
47 1 5 4 15 1 1 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
47 1 5 6 15 1 1 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 0 8 7 4 8 105 0 5 10 9 2 7 0 5 7 105 3 1 0 0 39 77 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 4 5 4 6 5 128 0 4 0 8 7 4 8 105 0 5 10 9 2 7 0 5 7 105 3 1 0 0 39 77 2 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
31 31 31 58 31 57 34 36 34 34 39 54 36 53 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
},
{
closed = 1;
nodes = (
(366,691,o),
(356,691,qs),
(311,691,ls),
(306,691,o),
(306,687,qs),
(306,686,o),
(307,685,qs),
(369,629,ls),
(379,619,o),
(392,619,qs),
(424,619,ls),
(428,619,o),
(428,623,qs),
(428,624,o),
(427,625,qs),
(375,682,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 39 77 7 1 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 3 2 1 3 106 7 1 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 45 42 37 34 25 23 16 30 17 30 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
},
{
closed = 1;
nodes = (
(294,622,qs),
(294,619,o),
(298,619,qs),
(334,619,ls),
(347,619,o),
(361,629,qs),
(443,685,ls),
(444,686,o),
(444,688,qs),
(444,691,o),
(440,691,qs),
(387,691,ls),
(375,691,o),
(364,682,qs),
(296,625,l),
(294,624,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 4 133 0 5 1 5 133 0 3 3 1 97 0 1 1 39 77 7 1 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 5 4 133 0 5 1 5 133 0 1 0 3 2 1 3 106 7 1 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 43 41 35 33 25 23 16 30 17 30 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
},
{
closed = 1;
nodes = (
(409,619,o),
(425,619,qs),
(454,619,ls),
(459,619,o),
(459,623,qs),
(459,624,o),
(458,625,qs),
(405,682,ls),
(397,691,o),
(386,691,qs),
(357,691,ls),
(346,691,o),
(335,682,qs),
(262,625,l),
(260,624,o),
(260,622,qs),
(260,619,o),
(264,619,qs),
(300,619,ls),
(315,619,o),
(327,629,qs),
(371,664,l),
(401,629,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 3 3 1 97 0 1 1 39 77 8 1 2 2 0 97 7 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 1 0 3 2 1 3 106 8 1 2 2 0 97 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
17 16 1 0 52 49 44 41 35 33 25 23 16 30 17 30 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
},
{
closed = 1;
nodes = (
(301,619,o),
(303,627,q),
(310,644,o),
(322,644,qs),
(332,644,o),
(355,632,qs),
(385,617,o),
(406,617,qs),
(430,617,o),
(471,655,o),
(469,676,qs),
(469,680,o),
(464,680,qs),
(438,680,ls),
(431,680,o),
(428,674,qs),
(420,657,o),
(405,657,qs),
(396,657,o),
(373,668,qs),
(341,684,o),
(320,684,qs),
(299,684,o),
(263,646,o),
(263,623,qs),
(263,620,o),
(268,619,q),
(295,619,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 7 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
6 1 4 0 8 7 4 8 105 0 5 12 9 2 7 1 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 2 2 0 97 10 1 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 0 8 7 4 8 105 0 5 12 9 2 7 1 5 7 105 0 1 0 3 2 1 3 105 11 1 2 2 0 97 10 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 4 5 4 6 5 128 0 4 0 8 7 4 8 105 0 5 12 9 2 7 1 5 7 105 0 1 0 3 2 1 3 105 11 1 2 2 0 97 10 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
31 31 17 16 1 0 31 58 31 57 55 53 51 49 45 43 41 39 37 35 25 23 16 30 17 30 9 7 0 15 1 15 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(107,116,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(400,520,o),
(441,490,qs),
(499,447,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(192,37,o)
);
},
{
closed = 1;
nodes = (
(293,614,o),
(306,614,qs),
(321,614,o),
(344,637,o),
(344,653,qs),
(344,664,o),
(326,681,o),
(313,681,qs),
(298,681,o),
(276,657,o),
(276,642,qs),
(276,630,o)
);
},
{
closed = 1;
nodes = (
(406,614,o),
(418,614,qs),
(433,614,o),
(456,637,o),
(456,653,qs),
(456,664,o),
(438,681,o),
(425,681,qs),
(410,681,o),
(388,657,o),
(388,642,qs),
(388,630,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 4 7 1 5 1 4 5 105 0 3 3 1 97 0 1 1 39 77 9 1 2 2 0 97 8 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
6 1 4 7 1 5 1 4 5 105 0 1 0 3 2 1 3 105 9 1 2 2 0 97 8 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
17 16 1 0 53 51 47 45 41 39 35 33 25 23 16 30 17 30 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,160,o),
(55,156,qs),
(77,134,ls),
(81,130,o),
(85,134,qs),
(195,245,l),
(280,158,ls),
(312,125,o),
(339,152,qs),
(342,155,o),
(338,160,qs),
(225,275,l),
(334,384,ls),
(338,388,o),
(334,392,qs),
(312,414,l),
(308,417,o),
(304,414,q),
(195,304,l),
(108,389,ls),
(77,422,o),
(50,396,qs),
(46,392,o),
(51,388,q),
(165,275,l),
(55,164,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 4 1 50 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(471,90,qs),
(550,192,o),
(550,351,qs),
(549,442,o),
(500,500,qs),
(444,567,o),
(342,567,qs),
(213,567,o),
(133,465,qs),
(52,361,o),
(52,204,qs),
(53,113,o),
(102,56,qs),
(160,-10,o),
(263,-10,qs),
(394,-10,o)
);
},
{
closed = 1;
nodes = (
(108,133,o),
(103,190,qs),
(98,306,o),
(147,398,qs),
(211,520,o),
(338,520,qs),
(405,518,o),
(445,487,q),
(130,100,l)
);
},
{
closed = 1;
nodes = (
(497,417,o),
(499,354,qs),
(500,237,o),
(454,153,qs),
(392,38,o),
(267,37,qs),
(199,39,o),
(158,69,q),
(472,457,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
33 24 22 3 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 97 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 28 26 19 17 9 7 0 15 1 15 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,510,o),
(491,517,qs),
(491,556,o),
(458,556,qs),
(454,556,ls),
(450,556,o),
(448,549,q),
(387,202,ls),
(358,37,o),
(222,37,qs),
(104,37,o),
(104,145,qs),
(104,173,o),
(109,201,qs),
(162,504,ls),
(163,511,o),
(163,517,qs),
(163,556,o),
(130,556,qs),
(125,556,ls),
(120,556,o),
(119,549,qs),
(59,208,ls),
(54,177,o),
(53,149,qs),
(52,78,o),
(90,36,qs),
(132,-10,o),
(214,-10,qs),
(399,-10,o),
(433,184,qs),
(490,504,ls)
);
},
{
closed = 1;
nodes = (
(308,691,o),
(297,691,qs),
(252,691,ls),
(248,691,o),
(248,687,qs),
(248,686,o),
(248,685,q),
(310,629,ls),
(321,619,o),
(333,619,qs),
(365,619,ls),
(370,619,o),
(370,623,qs),
(370,624,o),
(369,625,qs),
(316,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
40 1 4 5 14 1 2 1 2 76 0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 38 55 51 39 55 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,510,o),
(491,517,qs),
(491,556,o),
(458,556,qs),
(454,556,ls),
(450,556,o),
(448,549,q),
(387,202,ls),
(358,37,o),
(222,37,qs),
(104,37,o),
(104,145,qs),
(104,173,o),
(109,201,qs),
(162,504,ls),
(163,511,o),
(163,517,qs),
(163,556,o),
(130,556,qs),
(125,556,ls),
(120,556,o),
(119,549,qs),
(59,208,ls),
(54,177,o),
(53,149,qs),
(52,78,o),
(90,36,qs),
(132,-10,o),
(214,-10,qs),
(399,-10,o),
(433,184,qs),
(490,504,ls)
);
},
{
closed = 1;
nodes = (
(254,622,qs),
(254,619,o),
(258,619,qs),
(294,619,ls),
(307,619,o),
(321,629,qs),
(402,685,ls),
(404,686,o),
(404,688,qs),
(404,691,o),
(400,691,qs),
(347,691,ls),
(335,691,o),
(324,682,qs),
(256,625,l),
(254,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
14 1 2 1 1 76 0 4 5 4 133 0 5 1 5 133 3 1 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 38 38 51 39 55 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,510,o),
(491,517,qs),
(491,556,o),
(458,556,qs),
(454,556,ls),
(450,556,o),
(448,549,q),
(387,202,ls),
(358,37,o),
(222,37,qs),
(104,37,o),
(104,145,qs),
(104,173,o),
(109,201,qs),
(162,504,ls),
(163,511,o),
(163,517,qs),
(163,556,o),
(130,556,qs),
(125,556,ls),
(120,556,o),
(119,549,qs),
(59,208,ls),
(54,177,o),
(53,149,qs),
(52,78,o),
(90,36,qs),
(132,-10,o),
(214,-10,qs),
(399,-10,o),
(433,184,qs),
(490,504,ls)
);
},
{
closed = 1;
nodes = (
(372,619,o),
(387,619,qs),
(417,619,ls),
(422,619,o),
(422,623,qs),
(422,624,o),
(421,625,qs),
(368,682,ls),
(360,691,o),
(349,691,qs),
(320,691,ls),
(309,691,o),
(297,682,qs),
(225,625,l),
(223,624,o),
(223,622,qs),
(223,619,o),
(227,619,qs),
(263,619,ls),
(278,619,o),
(289,629,qs),
(333,664,l),
(364,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
14 1 2 1 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 53 54 38 51 39 55 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(491,510,o),
(491,517,qs),
(491,556,o),
(458,556,qs),
(454,556,ls),
(450,556,o),
(448,549,q),
(387,202,ls),
(358,37,o),
(222,37,qs),
(104,37,o),
(104,145,qs),
(104,173,o),
(109,201,qs),
(162,504,ls),
(163,511,o),
(163,517,qs),
(163,556,o),
(130,556,qs),
(125,556,ls),
(120,556,o),
(119,549,qs),
(59,208,ls),
(54,177,o),
(53,149,qs),
(52,78,o),
(90,36,qs),
(132,-10,o),
(214,-10,qs),
(399,-10,o),
(433,184,qs),
(490,504,ls)
);
},
{
closed = 1;
nodes = (
(253,614,o),
(265,614,qs),
(281,614,o),
(303,637,o),
(303,653,qs),
(303,664,o),
(286,681,o),
(273,681,qs),
(258,681,o),
(236,657,o),
(236,642,qs),
(236,630,o)
);
},
{
closed = 1;
nodes = (
(365,614,o),
(378,614,qs),
(393,614,o),
(416,637,o),
(416,653,qs),
(416,664,o),
(398,681,o),
(385,681,qs),
(370,681,o),
(348,657,o),
(348,642,qs),
(348,630,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
14 1 2 1 1 76 6 1 4 7 1 5 1 4 5 105 3 1 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 36 36 36 38 51 39 55 33 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,5,o),
(142,3,qs),
(142,0,o),
(146,0,qs),
(186,0,ls),
(191,0,o),
(192,6,qs),
(229,219,l),
(467,547,l),
(469,549,o),
(469,552,qs),
(469,556,o),
(462,556,qs),
(426,556,ls),
(415,556,o),
(407,543,q),
(212,274,l),
(123,513,ls),
(107,556,o),
(74,556,qs),
(62,556,ls),
(57,556,o),
(56,551,qs),
(56,550,o),
(57,548,qs),
(180,219,l),
(142,6,ls)
);
},
{
closed = 1;
nodes = (
(214,622,qs),
(214,619,o),
(218,619,qs),
(254,619,ls),
(267,619,o),
(281,629,qs),
(362,685,ls),
(364,686,o),
(364,688,qs),
(364,691,o),
(360,691,qs),
(307,691,ls),
(295,691,o),
(284,682,qs),
(216,625,l),
(214,624,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
9 1 2 2 0 1 76 0 3 4 3 133 0 4 0 4 133 1 1 0 0 39 77 0 2 2 40 2 78 38 39 38 52 52 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,509,o),
(166,517,qs),
(166,556,o),
(134,556,qs),
(129,556,ls),
(124,556,o),
(123,549,qs),
(27,6,ls),
(27,5,o),
(27,4,qs),
(27,0,o),
(31,0,qs),
(71,0,ls),
(76,0,o),
(77,6,qs),
(85,52,l),
(96,110,l),
(242,110,ls),
(327,110,o),
(385,155,qs),
(455,208,o),
(455,303,qs),
(455,364,o),
(418,403,qs),
(374,451,o),
(295,451,qs),
(156,451,l),
(165,503,ls)
);
},
{
closed = 1;
nodes = (
(295,403,ls),
(344,403,o),
(402,349,o),
(402,302,qs),
(402,240,o),
(364,201,qs),
(322,157,o),
(248,157,qs),
(104,157,l),
(147,403,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 0 5 4 0 5 104 0 4 0 1 2 4 1 103 0 3 3 39 77 0 2 2 40 2 78 37 36 54 35 38 32 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(135,409,ls),
(144,460,o),
(207,519,o),
(252,519,qs),
(288,519,o),
(329,488,o),
(329,461,qs),
(329,427,o),
(274,375,qs),
(212,317,o),
(212,278,qs),
(212,236,o),
(274,188,qs),
(326,147,o),
(326,110,qs),
(326,77,o),
(277,37,o),
(237,37,qs),
(181,37,o),
(157,75,qs),
(147,90,o),
(143,90,qs),
(130,90,o),
(130,67,qs),
(130,33,o),
(192,-10,o),
(243,-10,qs),
(301,-10,o),
(378,62,o),
(378,116,qs),
(378,166,o),
(309,217,qs),
(261,253,o),
(261,285,qs),
(260,309,o),
(306,352,qs),
(351,394,o),
(381,441,o),
(381,467,qs),
(381,512,o),
(315,567,o),
(263,567,qs),
(113,567,o),
(87,418,qs),
(14,6,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 4 3 4 2 3 128 0 4 4 0 97 0 0 0 39 77 0 5 5 40 77 0 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 5 5 40 77 0 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 44 35 19 45 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(244,502,o),
(233,502,qs),
(188,502,ls),
(183,502,o),
(184,498,qs),
(184,497,o),
(184,496,q),
(246,440,ls),
(257,431,o),
(269,431,qs),
(301,431,ls),
(306,431,o),
(306,435,q),
(305,436,l),
(252,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 133 0 6 1 6 133 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 8 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 1 6 133 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 8 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
28 27 54 51 46 44 35 33 27 40 28 40 37 50 37 33 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(180,433,qs),
(180,431,o),
(184,431,qs),
(220,431,ls),
(233,431,o),
(247,440,qs),
(328,496,ls),
(330,497,o),
(330,499,qs),
(330,502,o),
(326,502,qs),
(273,502,ls),
(261,502,o),
(250,493,qs),
(182,436,l),
(180,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 6 133 0 7 1 7 133 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 8 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 7 6 133 0 7 1 7 133 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 8 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
28 27 53 51 45 43 35 33 27 40 28 40 37 50 37 33 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(301,431,o),
(316,431,qs),
(346,431,ls),
(350,431,o),
(350,435,q),
(349,436,l),
(297,493,ls),
(288,502,o),
(278,502,qs),
(249,502,ls),
(237,502,o),
(226,493,qs),
(154,436,l),
(152,435,o),
(152,433,qs),
(152,431,o),
(156,431,qs),
(192,431,ls),
(206,431,o),
(218,440,qs),
(262,475,l),
(293,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 9 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 9 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
28 27 61 59 54 51 45 43 35 33 27 40 28 40 37 50 37 33 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(192,431,o),
(195,438,qs),
(201,455,o),
(214,455,qs),
(224,455,o),
(247,443,qs),
(276,428,o),
(298,428,qs),
(322,428,o),
(362,466,o),
(361,487,qs),
(361,491,o),
(356,491,qs),
(329,491,ls),
(323,491,o),
(320,485,qs),
(312,468,o),
(297,468,qs),
(287,468,o),
(264,480,qs),
(233,495,o),
(211,495,qs),
(190,495,o),
(154,457,o),
(154,434,qs),
(154,431,o),
(160,431,qs),
(186,431,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
57 1 7 6 43 1 9 10 11 1 4 5 24 1 3 4 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
57 1 7 8 43 1 9 10 11 1 4 5 24 1 3 4 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 6 0 10 9 6 10 105 0 7 13 11 2 9 1 7 9 105 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 12 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 1 6 0 10 9 6 10 105 0 7 13 11 2 9 1 7 9 105 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 12 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 6 7 6 8 7 128 0 6 0 10 9 6 10 105 0 7 13 11 2 9 1 7 9 105 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 12 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 41 28 27 41 68 41 67 65 63 61 59 55 53 51 49 47 45 35 33 27 40 28 40 37 50 37 33 14 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(176,426,o),
(188,426,qs),
(204,426,o),
(226,448,o),
(227,464,qs),
(227,475,o),
(209,492,o),
(196,492,qs),
(181,492,o),
(159,469,o),
(159,453,qs),
(159,442,o)
);
},
{
closed = 1;
nodes = (
(289,426,o),
(301,426,qs),
(316,426,o),
(339,448,o),
(339,464,qs),
(339,475,o),
(321,492,o),
(308,492,qs),
(293,492,o),
(271,469,o),
(271,453,qs),
(271,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 6 9 1 7 1 6 7 105 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 10 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
8 1 6 9 1 7 1 6 7 105 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 10 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
28 27 63 61 57 55 51 49 45 43 35 33 27 40 28 40 37 50 37 33 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(410,354,l),
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(362,360,o),
(351,304,q),
(307,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(224,421,o),
(247,421,qs),
(277,421,o),
(322,462,o),
(322,491,qs),
(322,514,o),
(288,548,o),
(265,548,qs),
(234,548,o),
(190,507,o),
(190,478,qs),
(190,455,o)
);
},
{
closed = 1;
nodes = (
(223,477,qs),
(223,494,o),
(246,519,o),
(262,519,qs),
(289,519,o),
(289,492,qs),
(289,474,o),
(266,450,o),
(250,450,qs),
(223,450,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 4 5 24 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 8 0 7 1 8 7 105 0 9 9 6 97 0 6 6 39 77 0 5 5 1 97 2 1 1 1 48 77 0 3 3 40 77 10 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 8 0 7 1 8 7 105 0 9 9 6 97 0 6 6 39 77 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 10 1 4 4 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 6 0 9 8 6 9 105 11 1 8 0 7 1 8 7 105 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 10 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 28 27 59 57 53 62 54 62 51 49 45 43 35 33 27 40 28 40 37 50 37 33 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,356,o),
(410,357,q),
(410,360,o),
(406,360,qs),
(401,360,ls),
(363,360,o),
(352,305,q),
(309,367,o),
(221,367,qs),
(138,367,o),
(85,315,qs),
(25,255,o),
(25,154,qs),
(25,76,o),
(100,-9,o),
(168,-9,qs),
(254,-9,o),
(307,57,q),
(298,6,ls),
(298,5,o),
(298,4,qs),
(298,0,o),
(302,0,qs),
(343,0,ls),
(348,0,o),
(349,6,qs),
(358,58,l),
(392,-6,o),
(477,-9,qs),
(545,-9,o),
(630,42,o),
(630,83,qs),
(630,92,o),
(624,92,qs),
(620,92,o),
(612,85,qs),
(565,37,o),
(489,37,qs),
(441,37,o),
(382,88,o),
(378,134,qs),
(377,146,o),
(379,160,q),
(635,160,ls),
(647,160,o),
(652,176,qs),
(660,207,o),
(660,241,qs),
(660,292,o),
(627,326,qs),
(589,367,o),
(524,367,qs),
(442,364,o),
(403,313,q),
(410,354,l)
);
},
{
closed = 1;
nodes = (
(76,99,o),
(76,150,qs),
(76,220,o),
(110,265,qs),
(150,320,o),
(222,320,qs),
(273,320,o),
(332,265,o),
(332,217,qs),
(332,144,o),
(294,94,qs),
(250,38,o),
(175,38,qs),
(130,38,o)
);
},
{
closed = 1;
nodes = (
(520,321,qs),
(562,321,o),
(610,277,o),
(610,238,qs),
(610,226,o),
(606,203,q),
(386,203,l),
(425,321,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
47 1 11 10 36 27 2 2 3 33 1 4 2 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
47 1 11 10 36 27 2 2 3 33 1 5 2 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 1 2 1 3 2 128 0 11 0 1 3 11 1 104 12 1 10 10 0 97 8 7 2 0 0 48 77 13 9 2 2 2 4 97 6 5 2 4 4 46 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 1 2 1 3 2 128 0 11 0 1 3 11 1 104 12 1 10 10 0 97 8 7 2 0 0 48 77 13 9 2 2 2 4 97 6 5 2 4 4 49 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 3 1 2 1 3 2 128 0 11 0 1 3 11 1 104 12 1 10 10 0 97 8 7 2 0 0 48 77 0 5 5 40 77 13 9 2 2 2 4 97 6 1 4 4 49 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 3 1 2 1 3 2 128 0 11 0 1 3 11 1 104 0 8 8 42 77 12 1 10 10 0 97 7 1 0 0 48 77 0 5 5 40 77 13 9 2 2 2 4 97 6 1 4 4 49 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
56 55 76 74 70 69 63 61 55 68 56 68 50 37 38 35 35 34 36 38 33 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 712;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,-82,o),
(79,-84,qs),
(79,-86,o),
(83,-86,qs),
(116,-86,ls),
(131,-86,o),
(138,-77,qs),
(185,-9,l),
(234,-6,o),
(304,44,o),
(306,79,qs),
(306,89,o),
(299,89,qs),
(294,89,o),
(287,82,qs),
(243,37,o),
(182,37,qs),
(133,37,o),
(76,93,o),
(76,141,qs),
(76,213,o),
(108,260,qs),
(148,320,o),
(230,320,qs),
(276,320,o),
(318,294,qs),
(321,292,o),
(323,292,qs),
(327,292,o),
(329,298,qs),
(336,313,ls),
(339,320,o),
(339,326,qs),
(339,343,o),
(276,367,o),
(232,367,qs),
(134,367,o),
(79,307,qs),
(24,246,o),
(24,137,qs),
(26,80,o),
(54,43,qs),
(85,3,o),
(139,-7,q),
(81,-80,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 5 4 5 134 0 1 1 0 97 0 0 0 48 77 0 2 2 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 5 4 5 134 0 1 1 0 97 0 0 0 48 77 0 2 2 4 97 0 4 4 49 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 19 34 37 42 39 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,160,o),
(349,176,qs),
(357,206,o),
(357,241,qs),
(357,292,o),
(325,326,qs),
(286,367,o),
(222,367,qs),
(135,367,o),
(83,310,qs),
(25,246,o),
(25,134,qs),
(25,77,o),
(61,38,qs),
(104,-9,o),
(174,-9,qs),
(242,-9,o),
(328,42,o),
(328,83,qs),
(328,92,o),
(322,92,qs),
(317,92,o),
(310,85,qs),
(263,37,o),
(186,37,qs),
(138,37,o),
(79,88,o),
(75,134,qs),
(74,145,o),
(76,160,q),
(332,160,ls)
);
},
{
closed = 1;
nodes = (
(217,321,qs),
(259,321,o),
(307,277,o),
(307,238,qs),
(307,227,o),
(303,203,q),
(84,203,l),
(117,321,o)
);
},
{
closed = 1;
nodes = (
(237,502,o),
(226,502,qs),
(181,502,ls),
(176,502,o),
(176,498,qs),
(176,497,o),
(177,496,qs),
(239,440,ls),
(249,431,o),
(262,431,qs),
(294,431,ls),
(299,431,o),
(299,435,q),
(298,436,l),
(245,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
0 8 7 8 133 0 7 3 7 133 0 1 4 0 4 1 0 128 0 5 9 1 4 1 5 4 103 0 6 6 3 97 0 3 3 48 77 0 0 0 2 97 0 2 2 49 2 78 0 0 52 49 44 42 38 36 32 31 0 30 0 29 38 35 34 36 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,160,o),
(349,176,qs),
(357,206,o),
(357,241,qs),
(357,292,o),
(325,326,qs),
(286,367,o),
(222,367,qs),
(135,367,o),
(83,310,qs),
(25,246,o),
(25,134,qs),
(25,77,o),
(61,38,qs),
(104,-9,o),
(174,-9,qs),
(242,-9,o),
(328,42,o),
(328,83,qs),
(328,92,o),
(322,92,qs),
(317,92,o),
(310,85,qs),
(263,37,o),
(186,37,qs),
(138,37,o),
(79,88,o),
(75,134,qs),
(74,145,o),
(76,160,q),
(332,160,ls)
);
},
{
closed = 1;
nodes = (
(217,321,qs),
(259,321,o),
(307,277,o),
(307,238,qs),
(307,227,o),
(303,203,q),
(84,203,l),
(117,321,o)
);
},
{
closed = 1;
nodes = (
(169,433,qs),
(169,431,o),
(173,431,qs),
(210,431,ls),
(223,431,o),
(237,440,qs),
(318,496,ls),
(320,497,o),
(320,499,qs),
(320,502,o),
(316,502,qs),
(262,502,ls),
(250,502,o),
(240,493,qs),
(171,436,l),
(169,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
0 7 8 7 133 0 8 3 8 133 0 1 4 0 4 1 0 128 0 5 9 1 4 1 5 4 103 0 6 6 3 97 0 3 3 48 77 0 0 0 2 97 0 2 2 49 2 78 0 0 51 49 43 41 38 36 32 31 0 30 0 29 38 35 34 36 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,160,o),
(349,176,qs),
(357,206,o),
(357,241,qs),
(357,292,o),
(325,326,qs),
(286,367,o),
(222,367,qs),
(135,367,o),
(83,310,qs),
(25,246,o),
(25,134,qs),
(25,77,o),
(61,38,qs),
(104,-9,o),
(174,-9,qs),
(242,-9,o),
(328,42,o),
(328,83,qs),
(328,92,o),
(322,92,qs),
(317,92,o),
(310,85,qs),
(263,37,o),
(186,37,qs),
(138,37,o),
(79,88,o),
(75,134,qs),
(74,145,o),
(76,160,q),
(332,160,ls)
);
},
{
closed = 1;
nodes = (
(217,321,qs),
(259,321,o),
(307,277,o),
(307,238,qs),
(307,227,o),
(303,203,q),
(84,203,l),
(117,321,o)
);
},
{
closed = 1;
nodes = (
(289,431,o),
(304,431,qs),
(334,431,ls),
(339,431,o),
(339,435,q),
(338,436,l),
(285,493,ls),
(277,502,o),
(266,502,qs),
(237,502,ls),
(226,502,o),
(215,493,qs),
(142,436,l),
(140,435,o),
(140,433,qs),
(140,431,o),
(144,431,qs),
(180,431,ls),
(195,431,o),
(207,440,qs),
(251,475,l),
(281,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
54 1 7 8 1 76 0 8 7 8 133 9 1 7 3 7 133 0 1 4 0 4 1 0 128 0 5 10 1 4 1 5 4 103 0 6 6 3 97 0 3 3 48 77 0 0 0 2 97 0 2 2 49 2 78 0 0 59 57 52 49 43 41 38 36 32 31 0 30 0 29 38 35 34 36 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,160,o),
(349,176,qs),
(357,206,o),
(357,241,qs),
(357,292,o),
(325,326,qs),
(286,367,o),
(222,367,qs),
(135,367,o),
(83,310,qs),
(25,246,o),
(25,134,qs),
(25,77,o),
(61,38,qs),
(104,-9,o),
(174,-9,qs),
(242,-9,o),
(328,42,o),
(328,83,qs),
(328,92,o),
(322,92,qs),
(317,92,o),
(310,85,qs),
(263,37,o),
(186,37,qs),
(138,37,o),
(79,88,o),
(75,134,qs),
(74,145,o),
(76,160,q),
(332,160,ls)
);
},
{
closed = 1;
nodes = (
(217,321,qs),
(259,321,o),
(307,277,o),
(307,238,qs),
(307,227,o),
(303,203,q),
(84,203,l),
(117,321,o)
);
},
{
closed = 1;
nodes = (
(169,426,o),
(181,426,qs),
(197,426,o),
(219,448,o),
(219,464,qs),
(219,475,o),
(201,492,o),
(189,492,qs),
(174,492,o),
(151,469,o),
(151,453,qs),
(152,442,o)
);
},
{
closed = 1;
nodes = (
(281,426,o),
(293,426,qs),
(309,426,o),
(331,448,o),
(331,464,qs),
(331,475,o),
(314,492,o),
(301,492,qs),
(286,492,o),
(264,469,o),
(264,453,qs),
(264,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
39 1 8 7 1 76 0 1 4 0 4 1 0 128 9 1 7 10 1 8 3 7 8 105 0 5 11 1 4 1 5 4 103 0 6 6 3 97 0 3 3 48 77 0 0 0 2 97 0 2 2 49 2 78 0 0 61 59 55 53 49 47 43 41 38 36 32 31 0 30 0 29 38 35 34 36 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(117,308,ls),
(118,315,o),
(118,322,qs),
(118,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
},
{
closed = 1;
nodes = (
(121,502,o),
(110,502,qs),
(65,502,ls),
(61,502,o),
(61,498,qs),
(61,497,o),
(61,496,q),
(123,440,ls),
(134,431,o),
(146,431,qs),
(178,431,ls),
(183,431,o),
(183,435,q),
(182,436,l),
(129,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
23 1 2 3 1 76 0 3 2 3 133 0 2 0 2 133 0 0 0 42 77 4 1 1 1 40 1 78 0 0 29 27 21 19 0 15 0 14 54 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(117,308,ls),
(118,315,o),
(118,322,qs),
(118,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
},
{
closed = 1;
nodes = (
(47,433,qs),
(47,431,o),
(51,431,qs),
(88,431,ls),
(100,431,o),
(114,440,qs),
(196,496,ls),
(197,497,o),
(197,499,qs),
(197,502,o),
(193,502,qs),
(140,502,ls),
(128,502,o),
(117,493,qs),
(49,436,l),
(47,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 133 0 3 0 3 133 0 0 0 42 77 4 1 1 1 40 1 78 0 0 28 26 20 18 0 15 0 14 54 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(117,308,ls),
(118,315,o),
(118,322,qs),
(118,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
},
{
closed = 1;
nodes = (
(164,431,o),
(179,431,qs),
(209,431,ls),
(214,431,o),
(214,435,q),
(212,436,l),
(160,493,ls),
(151,502,o),
(141,502,qs),
(112,502,ls),
(100,502,o),
(89,493,qs),
(17,436,l),
(15,435,o),
(15,433,qs),
(15,431,o),
(19,431,qs),
(55,431,ls),
(69,431,o),
(81,440,qs),
(125,475,l),
(156,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 2 3 133 4 1 2 0 2 133 0 0 0 42 77 5 1 1 1 40 1 78 0 0 36 33 29 26 20 18 0 15 0 14 54 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(117,308,ls),
(118,315,o),
(118,322,qs),
(118,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
},
{
closed = 1;
nodes = (
(47,426,o),
(59,426,qs),
(74,426,o),
(97,448,o),
(97,464,qs),
(97,475,o),
(79,492,o),
(66,492,qs),
(51,492,o),
(29,469,o),
(29,453,qs),
(29,442,o)
);
},
{
closed = 1;
nodes = (
(159,426,o),
(171,426,qs),
(187,426,o),
(209,448,o),
(209,464,qs),
(209,475,o),
(191,492,o),
(178,492,qs),
(163,492,o),
(141,469,o),
(141,453,qs),
(141,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
4 1 2 5 1 3 0 2 3 105 0 0 0 42 77 6 1 1 1 40 1 78 0 0 38 36 32 30 26 24 20 18 0 15 0 14 54 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,447,o),
(133,445,q),
(133,444,o),
(134,442,qs),
(148,416,ls),
(150,412,o),
(152,412,qs),
(153,412,o),
(154,413,q),
(230,448,l),
(280,362,l),
(262,366,o),
(236,367,qs),
(150,367,o),
(92,307,qs),
(28,240,o),
(30,140,qs),
(31,79,o),
(68,38,qs),
(111,-9,o),
(183,-9,qs),
(268,-9,o),
(325,46,qs),
(388,107,o),
(392,205,qs),
(392,259,o),
(364,307,qs),
(276,469,l),
(334,498,ls),
(338,500,o),
(338,503,qs),
(338,504,o),
(337,507,q),
(323,532,l),
(323,535,o),
(321,535,qs),
(320,535,o),
(318,534,qs),
(257,506,l),
(247,523,ls),
(230,556,o),
(197,556,qs),
(178,556,ls),
(172,556,o),
(172,551,qs),
(172,550,o),
(172,549,q),
(210,483,l),
(138,449,ls)
);
},
{
closed = 1;
nodes = (
(83,91,o),
(81,138,qs),
(79,203,o),
(115,255,qs),
(160,320,o),
(234,320,qs),
(282,320,o),
(340,261,o),
(340,212,qs),
(341,147,o),
(304,98,qs),
(258,38,o),
(184,38,qs),
(138,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
44 39 38 20 10 9 1 7 2 0 37 1 4 2 2 76 0 0 0 39 77 0 4 4 2 97 0 2 2 48 77 5 1 3 3 1 97 0 1 1 49 1 78 50 49 57 55 49 62 50 62 36 34 28 26 52 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,321,qs),
(120,360,o),
(87,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls),
(63,0,o),
(64,6,qs),
(97,193,ls),
(120,320,o),
(232,320,qs),
(322,320,o),
(322,234,qs),
(322,217,o),
(319,200,qs),
(285,6,ls),
(285,5,o),
(285,4,qs),
(285,0,o),
(289,0,qs),
(329,0,ls),
(334,0,o),
(335,6,qs),
(372,214,ls),
(375,231,o),
(375,247,qs),
(375,302,o),
(307,367,o),
(250,367,qs),
(166,367,o),
(119,307,q),
(120,316,o)
);
},
{
closed = 1;
nodes = (
(189,431,o),
(191,438,qs),
(198,455,o),
(210,455,qs),
(220,455,o),
(243,443,qs),
(273,428,o),
(294,428,qs),
(318,428,o),
(359,466,o),
(358,487,q),
(357,491,o),
(352,491,qs),
(326,491,ls),
(320,491,o),
(316,485,q),
(308,468,o),
(293,468,qs),
(284,468,o),
(261,480,qs),
(229,495,o),
(208,495,qs),
(187,495,o),
(151,457,o),
(151,434,qs),
(151,431,o),
(156,431,qs),
(183,431,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
54 1 6 5 40 1 8 9 36 1 2 0 0 1 1 2 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
54 1 6 5 40 1 8 9 36 1 2 4 0 1 1 2 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
54 1 6 7 40 1 8 9 36 1 2 4 0 1 1 2 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
7 1 5 0 9 8 5 9 105 0 6 11 10 2 8 0 6 8 105 0 2 2 0 97 4 1 0 0 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
7 1 5 0 9 8 5 9 105 0 6 11 10 2 8 0 6 8 105 0 4 4 42 77 0 2 2 0 97 0 0 0 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 6 5 7 6 128 0 5 0 9 8 5 9 105 0 6 11 10 2 8 0 6 8 105 0 4 4 42 77 0 2 2 0 97 0 0 0 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
38 38 38 65 38 64 62 60 36 34 34 39 54 35 40 38 33 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
},
{
closed = 1;
nodes = (
(254,502,o),
(243,502,qs),
(198,502,ls),
(193,502,o),
(194,498,q),
(193,497,o),
(194,496,qs),
(256,440,ls),
(267,431,o),
(279,431,qs),
(311,431,ls),
(316,431,o),
(316,435,q),
(315,436,l),
(262,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 43 40 35 33 24 22 16 29 17 29 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
},
{
closed = 1;
nodes = (
(184,433,qs),
(184,431,o),
(188,431,qs),
(224,431,ls),
(237,431,o),
(251,440,qs),
(333,496,ls),
(334,497,o),
(334,499,qs),
(334,502,o),
(330,502,qs),
(277,502,ls),
(265,502,o),
(254,493,qs),
(186,436,l),
(184,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 5 4 133 0 5 1 5 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 42 40 34 32 24 22 16 29 17 29 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
},
{
closed = 1;
nodes = (
(302,431,o),
(317,431,qs),
(347,431,ls),
(352,431,o),
(352,435,q),
(351,436,l),
(298,493,ls),
(290,502,o),
(279,502,qs),
(250,502,ls),
(239,502,o),
(227,493,qs),
(155,436,l),
(153,435,o),
(153,433,qs),
(153,431,o),
(157,431,qs),
(193,431,ls),
(208,431,o),
(220,440,qs),
(263,475,l),
(294,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
45 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 0 3 3 1 97 0 1 1 48 77 8 1 2 2 0 97 7 1 0 0 49 0 78 17 16 1 0 50 48 43 40 34 32 24 22 16 29 17 29 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
},
{
closed = 1;
nodes = (
(191,431,o),
(193,438,qs),
(200,455,o),
(212,455,qs),
(222,455,o),
(245,443,qs),
(275,428,o),
(296,428,qs),
(320,428,o),
(361,466,o),
(360,487,q),
(359,491,o),
(354,491,qs),
(328,491,ls),
(322,491,o),
(318,485,q),
(310,468,o),
(295,468,qs),
(286,468,o),
(263,480,qs),
(231,495,o),
(210,495,qs),
(189,495,o),
(153,457,o),
(153,434,qs),
(153,431,o),
(158,431,qs),
(185,431,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
46 1 5 4 32 1 7 8 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
46 1 5 6 32 1 7 8 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
6 1 4 0 8 7 4 8 105 0 5 12 9 2 7 1 5 7 105 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 6 4 5 4 6 5 128 0 4 0 8 7 4 8 105 0 5 12 9 2 7 1 5 7 105 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
30 30 17 16 1 0 30 57 30 56 54 52 50 48 44 42 40 38 36 34 24 22 16 29 17 29 9 7 0 15 1 15 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,46,qs),
(388,106,o),
(392,205,qs),
(394,270,o),
(354,315,qs),
(308,367,o),
(230,367,qs),
(144,367,o),
(89,307,qs),
(28,241,o),
(30,140,qs),
(31,79,o),
(71,38,qs),
(116,-9,o),
(189,-9,qs),
(274,-9,o)
);
},
{
closed = 1;
nodes = (
(83,92,o),
(81,138,qs),
(79,203,o),
(113,255,qs),
(155,320,o),
(228,320,qs),
(278,320,o),
(340,260,o),
(340,212,qs),
(341,146,o),
(307,98,qs),
(264,38,o),
(190,38,qs),
(143,38,o)
);
},
{
closed = 1;
nodes = (
(183,426,o),
(196,426,qs),
(211,426,o),
(234,448,o),
(234,464,qs),
(234,475,o),
(216,492,o),
(203,492,qs),
(188,492,o),
(166,469,o),
(166,453,qs),
(166,442,o)
);
},
{
closed = 1;
nodes = (
(296,426,o),
(308,426,qs),
(323,426,o),
(346,448,o),
(346,464,qs),
(346,475,o),
(328,492,o),
(315,492,qs),
(300,492,o),
(278,469,o),
(278,453,qs),
(278,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
6 1 4 7 1 5 1 4 5 105 0 3 3 1 97 0 1 1 48 77 9 1 2 2 0 97 8 1 0 0 49 0 78 17 16 1 0 52 50 46 44 40 38 34 32 24 22 16 29 17 29 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,249,o),
(343,255,qs),
(343,260,ls),
(343,295,o),
(304,295,qs),
(45,295,ls),
(40,295,o),
(40,289,qs),
(40,255,ls),
(40,249,o),
(45,249,qs),
(338,249,ls)
);
},
{
closed = 1;
nodes = (
(179,364,o),
(191,364,qs),
(203,364,o),
(222,382,o),
(222,394,qs),
(222,407,o),
(203,426,o),
(191,426,qs),
(179,426,o),
(161,407,o),
(161,394,qs),
(161,383,o)
);
},
{
closed = 1;
nodes = (
(179,118,o),
(191,118,qs),
(203,118,o),
(222,135,o),
(222,148,qs),
(222,161,o),
(203,179,o),
(191,179,qs),
(178,179,o),
(161,160,o),
(161,148,qs),
(161,136,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
3 2 2 1 0 1 76 0 2 0 3 0 2 3 105 0 0 6 1 1 4 0 1 103 0 4 5 5 4 89 0 4 4 5 97 0 5 4 5 81 0 0 34 32 28 26 22 20 16 14 0 11 0 10 37 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,46,qs),
(388,107,o),
(392,205,qs),
(394,271,o),
(357,315,qs),
(313,367,o),
(236,367,qs),
(150,367,o),
(92,307,qs),
(28,240,o),
(30,140,qs),
(31,79,o),
(68,38,qs),
(111,-9,o),
(183,-9,qs),
(268,-9,o)
);
},
{
closed = 1;
nodes = (
(340,212,qs),
(341,147,o),
(304,98,qs),
(258,38,o),
(184,38,qs),
(157,39,o),
(139,46,q),
(324,274,l),
(339,250,o)
);
},
{
closed = 1;
nodes = (
(81,138,q),
(79,203,o),
(115,255,qs),
(160,320,o),
(234,320,qs),
(271,319,o),
(296,303,q),
(105,71,l),
(85,96,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
32 26 17 3 2 3 1 76 0 3 3 1 97 0 1 1 48 77 0 2 2 0 97 4 1 0 0 49 0 78 1 0 29 27 20 18 9 7 0 15 1 15 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,315,o),
(373,322,qs),
(373,360,o),
(340,360,qs),
(336,360,ls),
(331,360,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(171,36,qs),
(87,36,o),
(87,120,qs),
(87,137,o),
(91,156,qs),
(117,308,l),
(119,315,o),
(119,322,qs),
(119,360,o),
(85,360,qs),
(80,360,ls),
(76,360,o),
(75,354,qs),
(42,169,ls),
(38,144,o),
(38,121,qs),
(37,58,o),
(102,-10,o),
(163,-10,qs),
(242,-10,o),
(329,65,o),
(343,146,qs),
(372,308,ls)
);
},
{
closed = 1;
nodes = (
(231,502,o),
(220,502,qs),
(175,502,ls),
(171,502,o),
(171,498,qs),
(171,497,o),
(172,496,qs),
(233,440,ls),
(244,431,o),
(256,431,qs),
(288,431,ls),
(293,431,o),
(293,435,q),
(292,436,l),
(239,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 53 39 51 39 54 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,315,o),
(373,322,qs),
(373,360,o),
(340,360,qs),
(336,360,ls),
(331,360,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(171,36,qs),
(87,36,o),
(87,120,qs),
(87,137,o),
(91,156,qs),
(117,308,l),
(119,315,o),
(119,322,qs),
(119,360,o),
(85,360,qs),
(80,360,ls),
(76,360,o),
(75,354,qs),
(42,169,ls),
(38,144,o),
(38,121,qs),
(37,58,o),
(102,-10,o),
(163,-10,qs),
(242,-10,o),
(329,65,o),
(343,146,qs),
(372,308,ls)
);
},
{
closed = 1;
nodes = (
(174,433,qs),
(174,431,o),
(178,431,qs),
(215,431,ls),
(227,431,o),
(241,440,qs),
(323,496,ls),
(324,497,o),
(324,499,qs),
(324,502,o),
(320,502,qs),
(267,502,ls),
(255,502,o),
(244,493,qs),
(176,436,l),
(174,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 4 5 4 133 0 5 1 5 133 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 38 38 51 39 54 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,315,o),
(373,322,qs),
(373,360,o),
(340,360,qs),
(336,360,ls),
(331,360,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(171,36,qs),
(87,36,o),
(87,120,qs),
(87,137,o),
(91,156,qs),
(117,308,l),
(119,315,o),
(119,322,qs),
(119,360,o),
(85,360,qs),
(80,360,ls),
(76,360,o),
(75,354,qs),
(42,169,ls),
(38,144,o),
(38,121,qs),
(37,58,o),
(102,-10,o),
(163,-10,qs),
(242,-10,o),
(329,65,o),
(343,146,qs),
(372,308,ls)
);
},
{
closed = 1;
nodes = (
(283,431,o),
(298,431,qs),
(327,431,ls),
(332,431,o),
(332,435,q),
(331,436,l),
(278,493,ls),
(270,502,o),
(259,502,qs),
(230,502,ls),
(219,502,o),
(208,493,qs),
(136,436,l),
(134,435,o),
(134,433,qs),
(134,431,o),
(137,431,qs),
(173,431,ls),
(188,431,o),
(200,440,qs),
(244,475,l),
(274,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
47 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 37 54 38 51 39 54 34 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,315,o),
(373,322,qs),
(373,360,o),
(340,360,qs),
(336,360,ls),
(331,360,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(171,36,qs),
(87,36,o),
(87,120,qs),
(87,137,o),
(91,156,qs),
(117,308,l),
(119,315,o),
(119,322,qs),
(119,360,o),
(85,360,qs),
(80,360,ls),
(76,360,o),
(75,354,qs),
(42,169,ls),
(38,144,o),
(38,121,qs),
(37,58,o),
(102,-10,o),
(163,-10,qs),
(242,-10,o),
(329,65,o),
(343,146,qs),
(372,308,ls)
);
},
{
closed = 1;
nodes = (
(169,426,o),
(181,426,qs),
(197,426,o),
(219,448,o),
(220,464,qs),
(220,475,o),
(202,492,o),
(189,492,qs),
(174,492,o),
(152,469,o),
(152,453,qs),
(152,442,o)
);
},
{
closed = 1;
nodes = (
(282,426,o),
(294,426,qs),
(309,426,o),
(332,448,o),
(332,464,qs),
(332,475,o),
(314,492,o),
(301,492,qs),
(286,492,o),
(264,469,o),
(264,453,qs),
(264,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 1 4 7 1 5 1 4 5 105 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 36 36 36 38 51 39 54 34 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-62,qs),
(35,-95,o),
(23,-108,qs),
(8,-124,o),
(-16,-125,qs),
(-39,-125,o),
(-55,-104,qs),
(-64,-93,o),
(-68,-93,qs),
(-80,-93,o),
(-80,-115,qs),
(-80,-138,o),
(-44,-171,o),
(-17,-171,qs),
(23,-171,o),
(80,-112,o),
(129,-19,qs),
(326,354,l),
(327,355,o),
(327,357,qs),
(327,360,o),
(323,360,qs),
(286,360,ls),
(274,360,o),
(269,350,qs),
(124,63,l),
(88,320,ls),
(83,360,o),
(51,360,qs),
(38,360,ls),
(33,360,o),
(33,355,qs),
(33,354,l),
(91,-1,l),
(71,-37,o)
);
},
{
closed = 1;
nodes = (
(136,433,qs),
(136,431,o),
(140,431,qs),
(176,431,ls),
(189,431,o),
(203,440,qs),
(285,496,ls),
(286,497,o),
(286,499,qs),
(286,502,o),
(282,502,qs),
(229,502,ls),
(217,502,o),
(206,493,qs),
(138,436,l),
(136,435,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
8 1 3 0 1 76 0 5 6 5 133 0 6 0 6 133 0 3 0 4 0 3 4 128 1 1 0 0 42 77 0 4 4 2 97 0 2 2 44 2 78 38 39 35 19 39 36 36 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,510,o),
(153,517,qs),
(153,556,o),
(121,556,qs),
(116,556,ls),
(111,556,o),
(110,549,qs),
(-14,-154,ls),
(-14,-155,o),
(-14,-156,qs),
(-14,-160,o),
(-10,-160,qs),
(30,-160,ls),
(32,-160,o),
(33,-159,qs),
(35,-158,o),
(36,-154,qs),
(74,58,l),
(112,-9,o),
(198,-9,qs),
(279,-9,o),
(335,48,qs),
(399,113,o),
(399,217,qs),
(399,279,o),
(366,320,qs),
(327,367,o),
(258,367,qs),
(168,367,o),
(117,304,q),
(152,503,ls)
);
},
{
closed = 1;
nodes = (
(92,94,o),
(92,142,qs),
(92,213,o),
(130,263,qs),
(175,320,o),
(246,320,qs),
(294,320,o),
(347,264,o),
(347,213,qs),
(347,146,o),
(309,96,qs),
(264,38,o),
(198,38,qs),
(149,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 6 1 4 4 1 97 0 1 1 49 77 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 2 134 0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 6 1 4 4 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
32 31 39 37 31 44 32 44 54 52 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-62,qs),
(35,-95,o),
(23,-108,qs),
(8,-124,o),
(-16,-125,qs),
(-39,-125,o),
(-55,-104,qs),
(-64,-93,o),
(-68,-93,qs),
(-80,-93,o),
(-80,-115,qs),
(-80,-138,o),
(-44,-171,o),
(-17,-171,qs),
(23,-171,o),
(80,-112,o),
(129,-19,qs),
(326,354,l),
(327,355,o),
(327,357,qs),
(327,360,o),
(323,360,qs),
(286,360,ls),
(274,360,o),
(269,350,qs),
(124,63,l),
(88,320,ls),
(83,360,o),
(51,360,qs),
(38,360,ls),
(33,360,o),
(33,355,qs),
(33,354,l),
(91,-1,l),
(71,-37,o)
);
},
{
closed = 1;
nodes = (
(131,426,o),
(143,426,qs),
(159,426,o),
(181,448,o),
(181,464,qs),
(181,475,o),
(164,492,o),
(151,492,qs),
(136,492,o),
(114,469,o),
(114,453,qs),
(114,442,o)
);
},
{
closed = 1;
nodes = (
(243,426,o),
(256,426,qs),
(271,426,o),
(294,448,o),
(294,464,qs),
(294,475,o),
(276,492,o),
(263,492,qs),
(248,492,o),
(226,469,o),
(226,453,qs),
(226,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
8 1 3 0 1 76 0 3 0 4 0 3 4 128 7 1 5 8 1 6 0 5 6 105 1 1 0 0 42 77 0 4 4 2 97 0 2 2 44 2 78 36 36 36 39 35 19 39 36 36 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,0,o),
(64,6,qs),
(117,308,ls),
(118,315,o),
(118,322,qs),
(118,360,o),
(85,360,qs),
(82,360,ls),
(77,360,o),
(76,354,qs),
(14,6,ls),
(14,5,o),
(14,4,qs),
(14,0,o),
(18,0,qs),
(58,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 2 1 1 1 40 1 78 0 0 0 15 0 14 54 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,327,o),
(298,333,qs),
(304,371,l),
(305,372,l),
(305,375,o),
(302,375,qs),
(301,375,o),
(299,374,qs),
(130,291,l),
(168,503,ls),
(169,511,o),
(169,517,qs),
(169,556,o),
(137,556,qs),
(132,556,ls),
(127,556,o),
(126,549,qs),
(76,264,l),
(20,237,ls),
(15,234,o),
(14,228,qs),
(7,190,l),
(7,189,ls),
(7,186,o),
(10,186,qs),
(11,186,o),
(13,187,qs),
(67,213,l),
(30,6,ls),
(30,5,o),
(30,4,qs),
(30,0,o),
(34,0,qs),
(289,0,ls),
(297,0,o),
(298,7,qs),
(300,18,ls),
(301,22,o),
(301,26,qs),
(301,47,o),
(275,47,qs),
(87,47,l),
(122,240,l),
(291,324,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
34 31 15 3 0 2 4 1 1 0 2 76 0 2 2 39 77 0 0 0 1 95 0 1 1 40 1 78 30 27 37 33 3 9 24 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(196,276,o),
(197,283,qs),
(204,321,l),
(204,322,ls),
(204,324,o),
(202,325,q),
(200,325,o),
(198,324,qs),
(125,288,l),
(163,504,ls),
(164,511,o),
(164,518,qs),
(164,556,o),
(132,556,qs),
(127,556,ls),
(122,556,o),
(121,549,qs),
(70,261,l),
(20,237,ls),
(15,234,o),
(14,228,qs),
(7,190,l),
(7,189,ls),
(7,186,o),
(10,186,qs),
(11,186,o),
(13,187,qs),
(61,211,l),
(40,89,ls),
(37,74,o),
(37,59,qs),
(37,-9,o),
(104,-9,qs),
(141,-9,o),
(194,35,o),
(194,67,qs),
(194,77,o),
(188,77,qs),
(185,77,o),
(180,72,qs),
(154,49,o),
(139,41,o),
(122,41,qs),
(89,41,o),
(89,75,qs),
(89,81,o),
(90,92,q),
(116,238,l),
(191,275,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
44 39 20 3 1 3 1 76 0 1 3 0 3 1 0 128 0 3 3 39 77 0 0 0 2 97 0 2 2 49 2 78 35 32 35 35 36 4 9 25 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(750,252,ls),
(758,252,o),
(759,259,qs),
(761,270,ls),
(762,274,o),
(762,276,qs),
(762,298,o),
(736,298,qs),
(545,298,l),
(582,508,l),
(813,508,ls),
(821,508,o),
(822,516,qs),
(824,527,ls),
(825,532,o),
(825,534,qs),
(825,556,o),
(799,556,qs),
(544,556,ls),
(539,556,o),
(538,549,qs),
(523,466,l),
(470,567,o),
(342,567,qs),
(218,567,o),
(139,475,qs),
(52,373,o),
(52,198,qs),
(52,107,o),
(98,52,qs),
(150,-10,o),
(250,-10,qs),
(379,-10,o),
(457,89,q),
(442,6,ls),
(442,5,o),
(442,4,qs),
(442,0,o),
(446,0,qs),
(734,0,ls),
(741,0,o),
(743,7,q),
(744,18,l),
(745,21,o),
(745,26,qs),
(745,47,o),
(720,47,qs),
(501,47,l),
(537,252,l)
);
},
{
closed = 1;
nodes = (
(101,199,qs),
(101,330,o),
(159,418,qs),
(226,519,o),
(339,519,qs),
(409,519,o),
(450,483,qs),
(497,440,o),
(497,354,qs),
(497,223,o),
(439,137,qs),
(371,37,o),
(257,37,qs),
(101,37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
32 1 9 4 26 1 6 5 42 1 7 6 14 1 0 7 11 3 2 1 8 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 0 7 0 6 7 103 0 9 9 3 97 0 3 3 39 77 0 5 5 4 95 0 4 4 39 77 0 0 0 1 95 0 1 1 40 77 10 1 8 8 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 3 0 9 5 3 9 105 0 6 0 7 0 6 7 103 0 5 5 4 95 0 4 4 39 77 0 0 0 1 95 0 1 1 40 77 10 1 8 8 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
50 49 58 56 49 62 50 62 37 33 37 51 38 38 37 32 11 9 30 
CALL[ ]	/* CallFunction */";
};
width = 821;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,-9,qs),
(545,-9,o),
(631,42,o),
(631,83,qs),
(631,92,o),
(624,92,qs),
(620,92,o),
(612,85,qs),
(565,37,o),
(489,37,qs),
(441,37,o),
(382,88,o),
(378,134,qs),
(377,145,o),
(379,160,q),
(635,160,ls),
(648,160,o),
(652,176,qs),
(660,207,o),
(660,241,qs),
(660,292,o),
(627,326,qs),
(589,367,o),
(525,367,qs),
(422,363,o),
(373,282,q),
(341,363,o),
(236,367,qs),
(150,367,o),
(92,307,qs),
(28,240,o),
(30,140,qs),
(31,79,o),
(68,38,qs),
(111,-9,o),
(183,-9,qs),
(293,-5,o),
(346,79,q),
(379,-6,o)
);
},
{
closed = 1;
nodes = (
(520,321,qs),
(562,321,o),
(610,277,o),
(610,238,qs),
(610,226,o),
(606,203,q),
(387,203,l),
(426,321,o)
);
},
{
closed = 1;
nodes = (
(83,91,o),
(81,138,qs),
(79,203,o),
(115,255,qs),
(160,320,o),
(234,320,qs),
(282,320,o),
(340,261,o),
(340,212,qs),
(341,147,o),
(304,98,qs),
(258,38,o),
(184,38,qs),
(138,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
12 1 7 8 1 76 0 5 3 4 3 5 4 128 0 7 0 3 5 7 3 103 10 1 8 8 1 97 2 1 1 1 48 77 11 9 2 4 4 0 97 6 1 0 0 49 0 78 48 47 55 53 47 60 48 60 36 17 35 34 36 38 34 38 33 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,470,q),
(413,465,o),
(416,465,qs),
(422,465,o),
(425,473,qs),
(432,490,ls),
(434,497,o),
(434,502,qs),
(434,520,o),
(388,541,qs),
(330,567,o),
(271,567,qs),
(185,567,o),
(129,525,qs),
(66,478,o),
(66,402,qs),
(67,356,o),
(131,295,o),
(214,263,qs),
(278,237,o),
(333,187,o),
(333,153,qs),
(333,104,o),
(297,72,qs),
(254,36,o),
(178,36,qs),
(65,36,o),
(24,117,qs),
(19,127,o),
(12,127,qs),
(-4,127,o),
(-4,99,qs),
(-4,57,o),
(47,24,qs),
(106,-15,o),
(174,-11,qs),
(278,-6,o),
(328,30,qs),
(386,71,o),
(386,165,qs),
(386,210,o),
(318,276,o),
(241,306,qs),
(172,332,o),
(118,377,o),
(118,409,qs),
(118,453,o),
(154,484,qs),
(196,520,o),
(261,520,qs),
(342,520,o),
(405,471,qs),
(406,470,o)
);
},
{
closed = 1;
nodes = (
(244,691,o),
(230,691,qs),
(200,691,ls),
(196,691,o),
(195,687,qs),
(195,686,o),
(196,685,qs),
(249,628,ls),
(257,619,o),
(268,619,qs),
(297,619,ls),
(308,619,o),
(319,628,qs),
(392,685,l),
(394,686,o),
(394,688,qs),
(394,691,o),
(390,691,qs),
(354,691,ls),
(340,691,o),
(327,681,qs),
(285,646,l),
(253,681,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 7 6 44 1 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 6 7 6 133 0 7 4 7 133 0 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 0 0 4 97 0 4 4 39 77 0 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
8 1 6 7 6 133 0 7 4 7 133 0 5 0 2 0 5 2 128 0 2 3 0 2 3 126 0 4 0 0 5 4 0 106 0 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
38 54 37 39 44 34 36 44 33 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,321,o),
(279,326,qs),
(279,342,o),
(210,367,o),
(167,367,qs),
(104,367,o),
(32,307,o),
(32,256,qs),
(32,198,o),
(130,162,qs),
(204,134,o),
(204,101,qs),
(204,72,o),
(150,36,o),
(107,36,qs),
(35,36,o),
(12,82,qs),
(9,88,o),
(4,88,qs),
(-9,88,o),
(-9,66,qs),
(-9,30,o),
(56,-11,o),
(112,-11,qs),
(178,-11,o),
(255,54,o),
(255,110,qs),
(255,171,o),
(155,207,qs),
(83,233,o),
(83,265,qs),
(83,289,o),
(130,320,o),
(167,320,qs),
(222,320,o),
(257,293,qs),
(260,291,o),
(262,291,qs),
(265,291,o),
(268,297,qs),
(275,312,ls)
);
},
{
closed = 1;
nodes = (
(147,502,o),
(133,502,qs),
(103,502,ls),
(98,502,o),
(98,498,qs),
(98,497,o),
(99,496,qs),
(151,439,ls),
(159,431,o),
(171,431,qs),
(200,431,ls),
(210,431,o),
(222,439,qs),
(295,496,ls),
(296,497,o),
(296,499,qs),
(296,502,o),
(293,502,qs),
(257,502,ls),
(243,502,o),
(230,492,qs),
(188,457,l),
(156,492,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
38 1 0 4 1 76 7 1 5 6 5 133 0 6 4 6 133 0 2 0 3 0 2 3 128 0 0 0 4 97 0 4 4 48 77 0 3 3 1 97 0 1 1 46 1 78 53 54 39 40 35 19 40 37 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,5,o),
(142,3,qs),
(142,0,o),
(146,0,qs),
(186,0,ls),
(191,0,o),
(192,6,qs),
(229,219,l),
(467,547,l),
(469,549,o),
(469,552,qs),
(469,556,o),
(462,556,qs),
(426,556,ls),
(415,556,o),
(407,543,q),
(212,274,l),
(123,513,ls),
(107,556,o),
(74,556,qs),
(62,556,ls),
(57,556,o),
(56,551,qs),
(56,550,o),
(57,548,qs),
(180,219,l),
(142,6,ls)
);
},
{
closed = 1;
nodes = (
(206,614,o),
(218,614,qs),
(234,614,o),
(256,637,o),
(257,653,qs),
(257,664,o),
(239,681,o),
(226,681,qs),
(211,681,o),
(189,657,o),
(189,642,qs),
(189,630,o)
);
},
{
closed = 1;
nodes = (
(319,614,o),
(331,614,qs),
(346,614,o),
(369,637,o),
(369,653,qs),
(369,664,o),
(351,681,o),
(338,681,qs),
(323,681,o),
(301,657,o),
(301,642,qs),
(301,630,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
9 1 2 2 0 1 76 5 1 3 6 1 4 0 3 4 105 1 1 0 0 39 77 0 2 2 40 2 78 36 36 36 39 38 52 52 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,488,o),
(449,504,qs),
(450,514,ls),
(451,519,o),
(451,523,qs),
(451,556,o),
(409,556,qs),
(103,556,ls),
(98,556,o),
(97,549,qs),
(91,515,l),
(91,514,l),
(90,513,o),
(90,512,qs),
(90,509,o),
(95,509,qs),
(399,509,l),
(14,64,ls),
(1,49,o),
(-3,30,qs),
(-7,6,ls),
(-7,5,o),
(-7,4,qs),
(-7,0,o),
(-3,0,qs),
(353,0,ls),
(361,0,o),
(362,7,qs),
(364,18,l),
(364,22,o),
(364,26,qs),
(364,47,o),
(339,47,qs),
(60,47,l),
(429,468,ls)
);
},
{
closed = 1;
nodes = (
(249,691,o),
(235,691,qs),
(205,691,ls),
(201,691,o),
(200,687,qs),
(200,686,o),
(201,685,qs),
(254,628,ls),
(262,619,o),
(273,619,qs),
(302,619,ls),
(313,619,o),
(324,628,qs),
(397,685,l),
(399,686,o),
(399,688,qs),
(399,691,o),
(395,691,qs),
(359,691,ls),
(345,691,o),
(333,681,qs),
(290,646,l),
(258,681,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
50 1 5 4 29 20 2 2 3 5 1 1 0 3 76 6 1 4 5 4 133 0 5 3 5 133 0 2 2 3 95 0 3 3 39 77 0 0 0 1 95 0 1 1 40 1 78 38 54 41 55 24 37 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,298,o),
(297,331,qs),
(297,360,o),
(257,360,qs),
(61,360,ls),
(56,360,o),
(54,354,q),
(49,321,l),
(48,320,o),
(49,318,q),
(49,315,o),
(53,315,qs),
(250,315,l),
(12,62,ls),
(-4,45,o),
(-6,36,qs),
(-11,6,l),
(-11,5,ls),
(-11,4,o),
(-11,3,qs),
(-11,0,o),
(-7,0,qs),
(233,0,ls),
(238,0,o),
(239,6,qs),
(245,39,ls),
(245,40,o),
(245,41,qs),
(245,45,o),
(241,45,qs),
(56,45,l),
(275,274,ls)
);
},
{
closed = 1;
nodes = (
(149,502,o),
(135,502,qs),
(105,502,ls),
(101,502,o),
(100,498,qs),
(100,497,o),
(101,496,qs),
(154,439,ls),
(162,431,o),
(173,431,qs),
(202,431,ls),
(213,431,o),
(224,439,qs),
(297,496,l),
(299,497,o),
(299,499,qs),
(299,502,o),
(295,502,qs),
(259,502,ls),
(245,502,o),
(232,492,qs),
(190,457,l),
(158,492,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
47 1 5 4 21 1 2 3 3 1 1 0 3 76 6 1 4 5 4 133 0 5 3 5 133 0 2 2 3 95 0 3 3 42 77 0 0 0 1 95 0 1 1 40 1 78 38 54 38 54 25 38 16 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,-125,o),
(6,-125,qs),
(-23,-125,o),
(-40,-103,qs),
(-47,-94,o),
(-51,-94,qs),
(-65,-94,o),
(-60,-120,qs),
(-56,-142,o),
(-16,-171,o),
(12,-171,qs),
(89,-171,o),
(107,-74,qs),
(177,315,l),
(264,315,ls),
(270,315,o),
(271,321,qs),
(277,354,ls),
(277,356,o),
(277,357,q),
(276,359,o),
(273,359,qs),
(184,359,l),
(203,461,ls),
(213,516,o),
(254,516,qs),
(282,516,o),
(298,493,qs),
(305,484,o),
(309,484,qs),
(323,484,o),
(319,510,qs),
(315,533,o),
(275,562,o),
(248,562,qs),
(168,562,o),
(152,464,qs),
(134,359,l),
(71,359,ls),
(66,359,o),
(65,354,qs),
(59,321,ls),
(58,318,o),
(59,317,q),
(59,315,o),
(63,315,qs),
(126,315,l),
(58,-71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 3 4 1 4 3 1 128 0 8 0 9 0 8 9 128 0 4 4 2 97 0 2 2 39 77 6 1 0 0 1 95 5 1 1 1 42 77 0 9 9 7 97 0 7 7 44 7 78 46 44 19 34 38 18 35 19 34 23 16 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 347;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,431,o),
(196,431,qs),
(226,431,ls),
(231,431,o),
(231,435,q),
(230,436,l),
(177,493,ls),
(168,502,o),
(158,502,qs),
(129,502,ls),
(118,502,o),
(106,493,qs),
(34,436,l),
(32,435,o),
(32,433,qs),
(32,431,o),
(36,431,qs),
(72,431,ls),
(86,431,o),
(98,440,qs),
(142,475,l),
(173,440,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
15 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 37 54 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 200;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,502,o),
(78,502,qs),
(48,502,ls),
(44,502,o),
(43,498,qs),
(43,497,o),
(44,496,qs),
(97,439,ls),
(105,431,o),
(116,431,qs),
(145,431,ls),
(156,431,o),
(167,439,qs),
(240,496,l),
(242,497,o),
(242,499,qs),
(242,502,o),
(238,502,qs),
(202,502,ls),
(188,502,o),
(176,492,qs),
(133,457,l),
(101,492,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
15 1 1 0 1 76 2 1 0 1 0 133 0 1 1 118 38 54 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 200;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,502,o),
(184,494,qs),
(166,461,o),
(128,461,qs),
(87,461,o),
(84,494,qs),
(83,502,o),
(77,502,qs),
(48,502,ls),
(42,502,o),
(42,493,qs),
(42,462,o),
(89,426,o),
(128,426,qs),
(171,426,o),
(200,450,qs),
(228,473,o),
(228,498,qs),
(228,502,o),
(223,502,qs),
(193,502,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
2 1 2 1 1 76 4 3 2 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 0 0 0 20 0 19 35 35 37 5 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 187;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,426,o),
(64,426,qs),
(79,426,o),
(102,448,o),
(102,464,qs),
(102,475,o),
(84,492,o),
(71,492,qs),
(56,492,o),
(34,469,o),
(34,453,qs),
(34,442,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 67;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,421,o),
(94,421,qs),
(125,421,o),
(169,462,o),
(169,491,qs),
(169,514,o),
(135,548,o),
(112,548,qs),
(81,548,o),
(37,507,o),
(37,478,qs),
(37,455,o)
);
},
{
closed = 1;
nodes = (
(70,477,qs),
(70,494,o),
(94,519,o),
(109,519,qs),
(136,519,o),
(136,492,qs),
(136,474,o),
(113,450,o),
(97,450,qs),
(70,450,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 13 12 18 16 12 21 13 21 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 130;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,-99,qs),
(47,-99,o),
(47,-74,qs),
(47,-56,o),
(85,-15,o),
(114,-3,qs),
(117,-2,o),
(117,0,qs),
(117,2,o),
(114,2,qs),
(78,2,ls),
(54,2,o),
(7,-51,o),
(7,-78,qs),
(7,-102,o),
(41,-133,o),
(68,-133,qs),
(110,-133,o),
(112,-119,qs),
(116,-97,l),
(116,-96,ls),
(116,-92,o),
(113,-92,q),
(111,-93,l),
(111,-93,l),
(97,-99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
4 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
40 36 39 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 113;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,431,o),
(71,438,qs),
(77,455,o),
(89,455,qs),
(100,455,o),
(122,443,qs),
(152,428,o),
(173,428,qs),
(198,428,o),
(238,466,o),
(237,487,qs),
(237,491,o),
(232,491,qs),
(205,491,ls),
(199,491,o),
(195,485,q),
(187,468,o),
(173,468,qs),
(163,468,o),
(140,480,qs),
(109,495,o),
(87,495,qs),
(66,495,o),
(30,457,o),
(30,434,qs),
(30,431,o),
(35,431,qs),
(62,431,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
16 1 1 0 2 1 3 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
16 1 1 2 2 1 3 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 4 3 1 89 2 1 0 0 4 3 0 4 105 0 1 1 3 97 6 5 2 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 1 0 2 1 128 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 6 5 2 3 1 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 26 34 36 34 34 36 7 9 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 198;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,431,o),
(90,441,qs),
(149,496,l),
(151,497,o),
(151,499,qs),
(151,502,o),
(147,502,qs),
(108,502,ls),
(94,502,o),
(86,493,qs),
(32,437,ls),
(30,435,o),
(30,434,qs),
(30,431,o),
(34,431,qs),
(64,431,ls)
);
},
{
closed = 1;
nodes = (
(196,431,o),
(206,441,qs),
(266,496,ls),
(267,497,o),
(267,499,qs),
(267,502,o),
(264,502,qs),
(224,502,ls),
(210,502,o),
(202,493,qs),
(147,437,l),
(146,435,o),
(146,434,qs),
(146,431,o),
(150,431,qs),
(180,431,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
18 10 2 3 1 0 1 76 2 1 0 1 0 133 5 3 4 3 1 1 118 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 226;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,25,o),
(78,24,qs),
(112,-10,o),
(170,-10,qs),
(316,-10,o),
(344,150,qs),
(372,308,ls),
(373,314,o),
(373,322,qs),
(373,359,o),
(341,359,qs),
(336,359,ls),
(331,359,o),
(330,354,qs),
(294,153,ls),
(274,36,o),
(172,36,qs),
(88,36,o),
(88,121,qs),
(88,139,o),
(91,156,qs),
(118,308,ls),
(119,315,o),
(119,321,qs),
(119,359,o),
(87,359,qs),
(82,359,ls),
(77,359,o),
(76,354,qs),
(-14,-154,ls),
(-14,-155,o),
(-14,-156,qs),
(-14,-160,o),
(-10,-160,qs),
(30,-160,ls),
(35,-160,o),
(36,-154,qs),
(69,32,l),
(71,31,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
14 1 2 1 38 1 4 2 2 76 3 1 1 2 1 133 0 2 0 4 0 2 4 105 0 0 0 33 0 78 37 36 39 39 34 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,-16,o),
(159,-16,qs),
(142,-16,o),
(114,10,o),
(110,29,qs),
(98,97,o),
(156,154,qs),
(158,156,o),
(162,153,qs),
(180,139,o),
(166,114,qs),
(151,86,o),
(150,69,q),
(187,63,o),
(193,27,qs),
(196,9,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
44 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,188,o),
(123,188,qs),
(106,188,o),
(78,213,o),
(74,232,qs),
(62,301,o),
(120,357,q),
(122,360,o),
(125,356,q),
(144,342,o),
(130,317,qs),
(115,289,o),
(114,272,q),
(151,266,o),
(157,230,qs),
(160,213,o)
);
},
{
closed = 1;
nodes = (
(176,-16,o),
(159,-16,qs),
(142,-16,o),
(113,9,o),
(110,27,qs),
(108,44,o),
(128,69,o),
(144,69,qs),
(161,69,o),
(190,44,o),
(193,27,qs),
(196,9,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 0 133 0 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 36 44 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,132,o),
(236,140,qs),
(224,208,ls),
(217,243,o),
(160,279,qs),
(94,320,o),
(49,372,o),
(40,416,qs),
(28,480,o),
(60,518,qs),
(95,559,o),
(163,559,qs),
(201,559,o),
(271,524,o),
(279,502,qs),
(283,488,o),
(272,488,qs),
(267,488,o),
(259,492,qs),
(209,512,o),
(174,512,qs),
(126,512,o),
(83,461,o),
(93,414,qs),
(102,367,o),
(175,320,qs),
(230,286,o),
(268,245,o),
(274,214,qs),
(287,140,ls),
(288,132,o),
(280,132,qs),
(245,132,ls)
);
},
{
closed = 1;
nodes = (
(321,44,o),
(324,27,qs),
(327,9,o),
(307,-16,o),
(290,-16,qs),
(273,-16,o),
(244,9,o),
(241,27,qs),
(238,44,o),
(258,69,o),
(275,69,qs),
(292,69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 33 1 0 40 38 33 44 34 44 21 19 16 14 12 10 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 371;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,0,o),
(421,0,qs),
(197,0,ls),
(139,0,o),
(116,-22,qs),
(112,-26,o),
(106,-26,qs),
(100,-26,o),
(98,-19,qs),
(89,13,o),
(123,31,qs),
(140,41,o),
(163,43,q),
(109,89,o),
(94,171,qs),
(80,245,o),
(116,292,qs),
(153,342,o),
(227,341,qs),
(274,341,o),
(309,319,qs),
(335,302,o),
(338,286,qs),
(341,273,o),
(331,273,qs),
(327,273,o),
(319,276,q),
(279,296,o),
(230,296,qs),
(180,296,o),
(133,228,o),
(143,170,qs),
(153,116,o),
(232,46,o),
(283,46,qs),
(376,46,ls),
(395,46,o),
(425,26,o),
(427,11,qs),
(427,7,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
26 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 0 0 0 5 95 0 5 5 24 5 78 50 42 36 34 36 50 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-54,676,o),
(-51,661,qs),
(-48,650,o),
(-38,637,qs),
(-33,629,o),
(-29,637,qs),
(-28,640,o),
(-26,651,qs),
(-23,663,o),
(-13,663,qs),
(-4,663,o),
(35,650,qs),
(83,634,o),
(94,634,qs),
(110,634,o),
(127,654,o),
(123,669,qs),
(121,680,o),
(111,693,qs),
(105,701,o),
(102,694,qs),
(101,691,o),
(98,680,qs),
(96,668,o),
(86,668,qs),
(78,668,o),
(47,678,qs),
(-9,696,o),
(-23,696,qs),
(-38,697,o)
);
},
{
closed = 1;
nodes = (
(121,0,o),
(120,6,qs),
(32,504,ls),
(28,527,o),
(46,556,o),
(64,556,qs),
(69,556,ls),
(75,556,o),
(76,550,qs),
(163,51,ls),
(172,0,o),
(132,0,qs),
(127,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
6 1 0 1 0 133 0 1 3 1 133 0 3 2 3 133 0 2 5 2 133 0 5 5 23 77 7 1 4 4 24 4 78 31 30 1 0 37 34 30 42 31 41 20 18 16 14 5 3 0 29 1 29 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,638,o),
(111,638,qs),
(28,638,ls),
(-5,638,o),
(-27,631,q),
(-28,630,o),
(-31,629,qs),
(-35,627,o),
(-36,627,qs),
(-42,627,o),
(-44,639,qs),
(-48,664,o),
(-20,669,q),
(-38,689,o),
(-43,714,qs),
(-48,746,o),
(-16,788,o),
(14,788,qs),
(36,788,o),
(72,764,o),
(77,747,qs),
(80,739,o),
(74,739,qs),
(70,739,o),
(62,743,qs),
(42,755,o),
(26,754,qs),
(-11,752,o),
(-5,714,qs),
(-2,697,o),
(29,672,o),
(47,672,qs),
(84,672,ls),
(111,672,o),
(116,647,qs),
(117,644,ls)
);
},
{
closed = 1;
nodes = (
(174,0,o),
(133,0,qs),
(128,0,ls),
(122,0,o),
(122,6,q),
(34,504,ls),
(30,527,o),
(48,556,o),
(66,556,qs),
(71,556,ls),
(76,556,o),
(77,550,qs),
(165,51,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
22 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 6 5 4 6 128 0 3 0 1 2 3 1 105 0 0 0 5 4 0 5 103 0 6 6 23 77 0 7 7 24 7 78 37 51 52 39 35 34 35 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,482,q),
(125,502,o),
(120,528,qs),
(114,560,o),
(146,601,o),
(176,601,qs),
(198,601,o),
(235,577,o),
(239,560,q),
(242,552,o),
(236,552,qs),
(232,552,o),
(225,557,qs),
(205,568,o),
(188,567,qs),
(151,566,o),
(158,527,qs),
(161,510,o),
(191,486,o),
(209,486,qs),
(247,486,ls),
(274,486,o),
(279,460,q),
(279,457,l),
(281,452,o),
(273,452,qs),
(191,452,ls),
(158,452,o),
(136,444,q),
(135,443,o),
(132,442,qs),
(127,441,o),
(126,441,qs),
(121,441,o),
(119,453,qs),
(115,477,o)
);
},
{
closed = 1;
nodes = (
(447,-91,o),
(433,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-175,o),
(165,-161,qs),
(161,-149,o),
(173,-149,qs),
(178,-149,o),
(184,-151,qs),
(273,-179,o),
(330,-161,qs),
(414,-135,o),
(389,23,q),
(336,-11,o),
(276,-9,qs),
(207,-9,o),
(155,39,qs),
(98,91,o),
(83,178,qs),
(68,258,o),
(102,310,qs),
(140,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(406,220,o),
(427,113,qs),
(445,9,o)
);
},
{
closed = 1;
nodes = (
(379,74,q),
(378,78,ls),
(376,95,o),
(375,103,qs),
(357,206,o),
(325,256,qs),
(284,321,o),
(219,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(134,179,qs),
(145,117,o),
(223,38,o),
(274,38,qs),
(339,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 1 0 1 80 1 9 10 50 1 6 9 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 2 1 2 3 1 128 0 7 6 8 6 7 8 128 0 8 8 132 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 10 9 5 10 105 11 1 9 9 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 7 6 8 6 7 8 128 0 8 8 132 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 10 9 5 10 105 11 1 9 6 6 9 89 11 1 9 9 6 97 0 6 9 6 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
68 67 75 73 67 82 68 82 36 38 38 41 35 34 35 51 55 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,0,o),
(120,6,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,550,qs),
(164,51,ls),
(173,0,o),
(132,0,qs),
(127,0,ls)
);
},
{
closed = 1;
nodes = (
(266,-224,o),
(258,-224,qs),
(176,-224,ls),
(143,-224,o),
(121,-232,q),
(120,-233,o),
(117,-234,qs),
(112,-236,o),
(111,-236,qs),
(106,-236,o),
(104,-223,qs),
(100,-199,o),
(128,-194,q),
(110,-174,o),
(105,-148,qs),
(99,-116,o),
(131,-75,o),
(161,-75,qs),
(183,-75,o),
(220,-99,o),
(224,-116,q),
(227,-124,o),
(221,-124,qs),
(217,-124,o),
(210,-119,qs),
(190,-108,o),
(173,-109,qs),
(136,-110,o),
(143,-149,qs),
(146,-166,o),
(176,-191,o),
(194,-191,qs),
(232,-191,ls),
(259,-191,o),
(264,-216,q),
(264,-219,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
35 1 6 2 1 76 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 0 6 2 6 99 0 1 1 23 77 7 1 0 0 24 0 78 1 0 47 44 31 29 26 24 22 20 17 14 7 4 0 12 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,315,o),
(68,307,q),
(67,307,o),
(64,306,qs),
(60,304,o),
(59,304,qs),
(53,304,o),
(51,316,qs),
(47,340,o),
(75,346,q),
(57,366,o),
(52,391,qs),
(47,423,o),
(79,464,o),
(109,464,qs),
(131,464,o),
(167,441,o),
(172,423,q),
(175,416,o),
(169,416,qs),
(165,416,o),
(157,420,qs),
(137,431,o),
(121,431,qs),
(84,429,o),
(90,391,qs),
(93,374,o),
(124,349,o),
(142,349,qs),
(179,349,ls),
(206,349,o),
(211,323,q),
(212,321,l),
(213,315,o),
(206,315,qs),
(123,315,ls)
);
},
{
closed = 1;
nodes = (
(596,-150,qs),
(521,-219,o),
(403,-214,qs),
(291,-210,o),
(213,-153,qs),
(123,-86,o),
(102,34,qs),
(91,92,o),
(116,196,o),
(147,224,q),
(153,231,o),
(159,231,qs),
(172,231,o),
(173,219,qs),
(173,216,o),
(172,210,q),
(135,140,o),
(149,45,qs),
(166,-46,o),
(237,-103,qs),
(315,-167,o),
(422,-167,qs),
(496,-167,o),
(545,-131,qs),
(602,-89,o),
(603,-16,qs),
(603,5,o),
(565,28,o),
(514,37,qs),
(470,44,o),
(458,47,qs),
(312,79,o),
(291,201,qs),
(278,273,o),
(318,320,qs),
(361,368,o),
(434,368,qs),
(496,368,o),
(534,343,qs),
(561,325,o),
(563,308,qs),
(566,294,o),
(556,294,qs),
(552,294,o),
(545,298,qs),
(505,321,o),
(448,321,qs),
(399,321,o),
(369,295,qs),
(331,262,o),
(342,201,qs),
(349,162,o),
(422,101,o),
(475,91,qs),
(566,73,o),
(591,64,qs),
(652,42,o),
(655,-7,qs),
(660,-91,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
25 1 0 1 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
25 1 6 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 3 2 8 2 3 8 128 0 5 0 7 0 5 7 128 0 7 10 0 7 10 126 0 10 9 0 10 9 126 0 4 0 2 3 4 2 105 0 8 1 0 8 89 0 1 6 12 2 0 5 1 0 105 0 9 11 11 9 89 0 9 9 11 97 0 11 9 11 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 3 2 8 2 3 8 128 0 5 0 7 0 5 7 128 0 7 10 0 7 10 126 0 10 9 0 10 9 126 0 4 0 2 3 4 2 105 0 8 0 6 0 8 6 105 0 1 12 1 0 5 1 0 103 0 9 11 11 9 89 0 9 9 11 97 0 11 9 11 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 92 90 82 81 73 71 58 56 52 50 48 46 30 28 21 19 16 14 12 10 7 4 0 35 1 34 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,0,o),
(120,6,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,550,qs),
(164,51,ls),
(173,0,o),
(132,0,qs),
(127,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls)
);
},
{
closed = 1;
nodes = (
(480,-96,o),
(483,-112,qs),
(486,-128,o),
(469,-150,o),
(453,-150,qs),
(438,-150,o),
(413,-128,o),
(410,-112,qs),
(407,-96,o),
(424,-74,o),
(440,-74,qs),
(455,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 1 3 1 133 0 3 2 3 133 7 1 4 0 5 4 5 101 0 2 2 0 96 6 1 0 0 24 0 78 32 31 1 0 38 36 31 42 32 42 22 21 15 12 9 7 0 30 1 29 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,513,o),
(94,513,qs),
(80,513,o),
(57,533,o),
(54,548,qs),
(52,563,o),
(68,583,o),
(82,583,qs),
(97,583,o),
(120,563,o),
(123,548,qs),
(125,533,o)
);
},
{
closed = 1;
nodes = (
(155,533,o),
(152,548,qs),
(150,563,o),
(166,583,o),
(180,583,qs),
(195,583,o),
(218,563,o),
(220,548,qs),
(223,533,o),
(207,513,o),
(192,513,qs),
(178,513,o)
);
},
{
closed = 1;
nodes = (
(387,47,qs),
(352,-9,o),
(274,-9,qs),
(206,-9,o),
(153,32,qs),
(89,82,o),
(77,168,qs),
(59,301,o),
(186,359,q),
(171,372,o),
(158,388,q),
(137,423,o),
(163,440,qs),
(166,442,o),
(168,442,qs),
(172,443,o),
(177,436,qs),
(201,397,o),
(256,360,qs),
(271,350,o),
(279,345,qs),
(283,342,o),
(292,335,qs),
(297,332,o),
(300,330,qs),
(398,254,o),
(408,168,qs),
(416,93,o)
);
},
{
closed = 1;
nodes = (
(336,69,qs),
(367,107,o),
(355,171,qs),
(344,225,o),
(293,270,qs),
(269,292,o),
(225,324,q),
(110,279,o),
(130,166,qs),
(140,111,o),
(217,38,o),
(265,38,qs),
(311,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 42 2 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 13 12 52 64 53 64 49 47 19 17 12 23 13 23 36 34 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,391,o),
(279,406,qs),
(277,421,o),
(293,441,o),
(307,441,qs),
(322,441,o),
(345,421,o),
(348,406,qs),
(350,391,o),
(334,371,o),
(319,371,qs),
(305,371,o)
);
},
{
closed = 1;
nodes = (
(379,391,o),
(377,406,qs),
(375,421,o),
(391,441,o),
(405,441,qs),
(419,441,o),
(443,421,o),
(445,406,qs),
(448,391,o),
(432,371,o),
(417,371,qs),
(403,371,o)
);
},
{
closed = 1;
nodes = (
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 3 1 1 9 2 8 3 0 5 1 0 105 0 6 6 4 96 10 1 4 4 24 4 78 25 24 13 12 1 0 46 45 39 36 33 31 24 54 25 53 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,472,o),
(315,487,qs),
(312,502,o),
(328,522,o),
(343,522,qs),
(357,522,o),
(381,502,o),
(383,487,qs),
(386,472,o),
(369,452,o),
(355,452,qs),
(340,452,o)
);
},
{
closed = 1;
nodes = (
(283,391,o),
(280,406,qs),
(278,421,o),
(294,441,o),
(308,441,qs),
(323,441,o),
(346,421,o),
(349,406,qs),
(351,391,o),
(335,371,o),
(320,371,qs),
(306,371,o)
);
},
{
closed = 1;
nodes = (
(381,391,o),
(378,406,qs),
(376,421,o),
(392,441,o),
(406,441,qs),
(421,441,o),
(444,421,o),
(446,406,qs),
(449,391,o),
(433,371,o),
(418,371,qs),
(404,371,o)
);
},
{
closed = 1;
nodes = (
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
0 7 2 9 2 7 9 128 0 9 8 2 9 8 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 8 6 96 13 1 6 6 24 6 78 37 36 25 24 13 12 1 0 58 57 51 48 45 43 36 66 37 65 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-49,qs),
(188,0,o),
(264,0,qs),
(507,0,ls),
(555,0,o),
(547,44,qs),
(546,49,o),
(541,49,qs),
(516,50,o),
(500,64,qs),
(461,98,o),
(415,204,qs),
(341,368,o),
(204,368,qs),
(153,368,o),
(113,342,qs),
(80,319,o),
(64,282,qs),
(61,274,o),
(62,268,qs),
(64,257,o),
(74,257,qs),
(80,257,o),
(84,261,qs),
(87,263,o),
(92,268,qs),
(102,277,o),
(105,281,q),
(152,321,o),
(205,321,qs),
(304,321,o),
(363,197,qs),
(424,69,o),
(452,49,q),
(258,49,ls),
(169,49,o),
(120,-1,qs),
(67,-54,o),
(80,-141,qs),
(91,-214,o),
(145,-265,qs),
(212,-329,o),
(318,-331,qs),
(389,-333,o),
(438,-310,qs),
(479,-291,o),
(494,-261,qs),
(497,-255,o),
(496,-247,qs),
(495,-238,o),
(485,-238,qs),
(482,-238,o),
(475,-241,q),
(443,-261,o),
(414,-271,qs),
(374,-286,o),
(314,-284,qs),
(244,-282,o),
(148,-205,o),
(137,-142,qs),
(127,-88,o)
);
},
{
closed = 1;
nodes = (
(352,-122,o),
(355,-138,qs),
(358,-154,o),
(340,-176,o),
(325,-176,qs),
(310,-176,o),
(285,-154,o),
(282,-138,qs),
(279,-123,o),
(296,-101,o),
(312,-101,qs),
(327,-101,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 4 3 4 5 3 128 11 1 9 8 10 8 9 114 0 10 1 0 10 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 5 4 3 4 5 3 128 11 1 9 8 10 8 9 10 128 0 10 1 8 10 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
62 61 68 66 61 72 62 72 51 20 38 38 35 38 38 36 34 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-49,qs),
(188,0,o),
(264,0,qs),
(507,0,ls),
(555,0,o),
(547,44,qs),
(546,49,o),
(541,49,qs),
(516,50,o),
(500,64,qs),
(461,98,o),
(415,204,qs),
(341,368,o),
(204,368,qs),
(153,368,o),
(113,342,qs),
(80,319,o),
(64,282,qs),
(61,274,o),
(62,268,qs),
(64,257,o),
(74,257,qs),
(80,257,o),
(84,261,qs),
(87,263,o),
(92,268,qs),
(102,277,o),
(105,281,q),
(152,321,o),
(205,321,qs),
(304,321,o),
(363,197,qs),
(424,69,o),
(452,49,q),
(258,49,ls),
(169,49,o),
(120,-1,qs),
(67,-54,o),
(80,-141,qs),
(91,-214,o),
(145,-265,qs),
(212,-329,o),
(318,-331,qs),
(389,-333,o),
(438,-310,qs),
(479,-291,o),
(494,-261,qs),
(497,-255,o),
(496,-247,qs),
(495,-238,o),
(485,-238,qs),
(482,-238,o),
(475,-241,q),
(443,-261,o),
(414,-271,qs),
(374,-286,o),
(314,-284,qs),
(244,-282,o),
(148,-205,o),
(137,-142,qs),
(127,-88,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 5 4 3 4 5 3 128 0 1 8 0 8 1 0 128 0 6 0 4 5 6 4 105 0 0 0 2 0 2 101 7 1 3 3 8 95 0 8 8 24 8 78 51 20 38 38 35 38 38 36 34 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,503,o),
(221,487,qs),
(224,471,o),
(206,448,o),
(190,448,qs),
(175,448,o),
(150,471,o),
(147,487,qs),
(144,502,o),
(162,524,o),
(177,524,qs),
(193,524,o)
);
},
{
closed = 1;
nodes = (
(154,-49,qs),
(188,0,o),
(264,0,qs),
(507,0,ls),
(555,0,o),
(547,44,qs),
(546,49,o),
(541,49,qs),
(516,50,o),
(500,64,qs),
(461,98,o),
(415,204,qs),
(341,368,o),
(204,368,qs),
(153,368,o),
(113,342,qs),
(80,319,o),
(64,282,qs),
(61,274,o),
(62,268,qs),
(64,257,o),
(74,257,qs),
(80,257,o),
(84,261,qs),
(87,263,o),
(92,268,qs),
(102,277,o),
(105,281,q),
(152,321,o),
(205,321,qs),
(304,321,o),
(363,197,qs),
(424,69,o),
(452,49,q),
(258,49,ls),
(169,49,o),
(120,-1,qs),
(67,-54,o),
(80,-141,qs),
(91,-214,o),
(145,-265,qs),
(212,-329,o),
(318,-331,qs),
(389,-333,o),
(438,-310,qs),
(479,-291,o),
(494,-261,qs),
(497,-255,o),
(496,-247,qs),
(495,-238,o),
(485,-238,qs),
(482,-238,o),
(475,-241,q),
(443,-261,o),
(414,-271,qs),
(374,-286,o),
(314,-284,qs),
(244,-282,o),
(148,-205,o),
(137,-142,qs),
(127,-88,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
11 1 0 1 0 133 0 1 8 8 1 112 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
11 1 0 1 0 133 0 1 8 1 133 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 70 67 64 63 59 57 51 49 43 41 38 36 30 28 22 20 16 14 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(240,49,ls),
(290,49,o),
(336,118,o),
(325,176,qs),
(298,321,o),
(192,321,qs),
(161,322,o),
(130,307,qs),
(123,303,o),
(120,303,qs),
(110,303,o),
(108,313,qs),
(106,326,o),
(120,339,qs),
(147,368,o),
(195,368,qs),
(260,368,o),
(308,320,qs),
(362,267,o),
(377,174,qs),
(389,99,o),
(355,52,qs),
(317,0,o),
(241,0,qs),
(116,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 25 22 19 17 14 13 9 7 0 29 1 28 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,489,o),
(152,473,qs),
(155,457,o),
(137,435,o),
(121,435,qs),
(106,435,o),
(81,457,o),
(78,473,qs),
(75,489,o),
(92,511,o),
(108,511,qs),
(124,511,o)
);
},
{
closed = 1;
nodes = (
(106,0,o),
(105,7,qs),
(105,11,ls),
(100,49,o),
(145,49,qs),
(238,49,ls),
(288,49,o),
(334,118,o),
(323,176,qs),
(296,321,o),
(191,321,qs),
(160,322,o),
(128,307,q),
(122,303,o),
(118,303,qs),
(108,303,o),
(106,313,qs),
(105,326,o),
(118,339,qs),
(145,368,o),
(193,368,qs),
(258,368,o),
(307,320,qs),
(360,267,o),
(375,174,qs),
(387,99,o),
(353,52,qs),
(315,0,o),
(240,0,qs),
(114,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 37 34 31 29 26 25 21 19 12 41 13 40 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 97 0 2 0 2 81 1 0 17 15 11 9 5 3 0 22 1 22 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,474,o),
(153,458,qs),
(156,442,o),
(139,420,o),
(123,420,qs),
(108,420,o),
(83,442,o),
(80,458,qs),
(77,474,o),
(94,496,o),
(110,496,qs),
(125,496,o)
);
},
{
closed = 1;
nodes = (
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 7 1 2 4 4 2 89 7 1 2 2 4 97 0 4 2 4 81 13 12 1 0 29 27 23 21 17 15 12 34 13 34 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1043,77,o),
(1016,36,qs),
(985,-9,o),
(915,-9,qs),
(828,-9,o),
(785,44,q),
(758,-9,o),
(680,-9,qs),
(622,-9,o),
(582,16,q),
(592,-86,o),
(536,-149,qs),
(478,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(546,-66,o),
(527,46,qs),
(491,258,ls),
(487,281,o),
(505,309,o),
(523,309,qs),
(528,309,ls),
(533,309,o),
(534,303,qs),
(560,150,l),
(560,151,ls),
(570,99,o),
(629,39,o),
(672,39,qs),
(764,39,o),
(745,146,qs),
(722,278,ls),
(713,329,o),
(753,329,qs),
(758,329,ls),
(764,329,o),
(765,324,qs),
(795,151,ls),
(804,99,o),
(864,39,o),
(907,39,qs),
(998,39,o),
(979,146,qs),
(953,298,ls),
(949,321,o),
(966,349,o),
(985,349,qs),
(989,349,ls),
(995,349,o),
(995,344,q),
(1030,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
64 1 1 6 60 1 8 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 101 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 106 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
67 65 36 40 24 38 53 35 37 36 34 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1072;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,502,o),
(671,517,qs),
(669,531,o),
(685,551,o),
(699,551,qs),
(713,551,o),
(737,531,o),
(739,517,qs),
(742,502,o),
(726,481,o),
(711,481,qs),
(697,481,o)
);
},
{
closed = 1;
nodes = (
(639,421,o),
(637,436,qs),
(634,450,o),
(650,470,o),
(664,470,qs),
(679,470,o),
(702,450,o),
(705,436,qs),
(707,420,o),
(691,400,o),
(677,400,qs),
(662,400,o)
);
},
{
closed = 1;
nodes = (
(748,470,o),
(762,470,qs),
(777,470,o),
(800,450,o),
(803,436,qs),
(805,420,o),
(789,400,o),
(774,400,qs),
(760,400,o),
(737,421,o),
(734,436,qs),
(732,450,o)
);
},
{
closed = 1;
nodes = (
(1043,77,o),
(1016,36,qs),
(985,-9,o),
(915,-9,qs),
(828,-9,o),
(785,44,q),
(758,-9,o),
(680,-9,qs),
(622,-9,o),
(582,16,q),
(592,-86,o),
(536,-149,qs),
(478,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(546,-66,o),
(527,46,qs),
(491,258,ls),
(487,281,o),
(505,309,o),
(523,309,qs),
(528,309,ls),
(533,309,o),
(534,303,qs),
(560,150,l),
(560,151,ls),
(570,99,o),
(629,39,o),
(672,39,qs),
(764,39,o),
(745,146,qs),
(722,278,ls),
(713,329,o),
(753,329,qs),
(758,329,ls),
(764,329,o),
(765,324,qs),
(795,151,ls),
(804,99,o),
(864,39,o),
(907,39,qs),
(998,39,o),
(979,146,qs),
(953,298,ls),
(949,321,o),
(966,349,o),
(985,349,qs),
(989,349,ls),
(995,349,o),
(995,344,q),
(1030,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
100 1 7 12 96 1 14 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 101 16 1 0 0 1 97 0 1 1 23 77 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 106 0 11 0 13 11 13 101 16 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
13 12 1 0 103 101 99 97 93 91 83 82 74 72 66 63 58 56 53 51 46 44 40 38 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1072;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1164,53,qs),
(1126,0,o),
(1052,0,qs),
(680,0,ls),
(620,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(481,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(560,151,ls),
(569,103,o),
(629,49,o),
(671,49,qs),
(672,49,l),
(679,174,o),
(740,260,qs),
(818,368,o),
(955,368,qs),
(1033,368,o),
(1094,325,qs),
(1169,272,o),
(1186,177,qs),
(1200,101,o)
);
},
{
closed = 1;
nodes = (
(1097,49,o),
(1145,117,o),
(1134,178,qs),
(1121,244,o),
(1073,282,qs),
(1025,321,o),
(959,321,qs),
(862,321,o),
(799,249,qs),
(733,174,o),
(726,49,q),
(1043,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
47 1 6 1 1 76 0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 0 0 0 7 4 0 7 105 0 3 0 5 3 5 101 9 8 2 1 1 6 95 0 6 6 24 6 78 54 54 54 65 54 64 38 52 40 24 38 37 35 35 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1224;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(880,468,o),
(877,484,qs),
(874,500,o),
(892,522,o),
(907,522,qs),
(923,522,o),
(948,500,o),
(951,484,qs),
(954,468,o),
(936,446,o),
(920,446,qs),
(905,446,o)
);
},
{
closed = 1;
nodes = (
(1164,53,qs),
(1126,0,o),
(1052,0,qs),
(680,0,ls),
(620,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(481,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(560,151,ls),
(569,103,o),
(629,49,o),
(671,49,qs),
(672,49,l),
(679,174,o),
(740,260,qs),
(818,368,o),
(955,368,qs),
(1033,368,o),
(1094,325,qs),
(1169,272,o),
(1186,177,qs),
(1200,101,o)
);
},
{
closed = 1;
nodes = (
(1097,49,o),
(1145,117,o),
(1134,178,qs),
(1121,244,o),
(1073,282,qs),
(1025,321,o),
(959,321,qs),
(862,321,o),
(799,249,qs),
(733,174,o),
(726,49,q),
(1043,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
59 1 8 3 1 76 0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 0 2 0 9 6 2 9 105 0 5 0 7 5 7 101 12 10 2 3 3 8 95 0 8 8 24 8 78 66 66 1 0 66 77 66 76 71 69 63 60 56 54 46 45 37 35 29 27 22 20 17 15 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1224;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(716,53,qs),
(678,0,o),
(603,0,qs),
(116,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(227,49,l),
(147,504,ls),
(138,556,o),
(180,556,qs),
(184,556,ls),
(190,556,o),
(191,550,qs),
(254,191,l),
(284,265,o),
(340,311,qs),
(410,368,o),
(507,368,qs),
(585,368,o),
(646,325,qs),
(721,272,o),
(738,177,qs),
(751,101,o)
);
},
{
closed = 1;
nodes = (
(649,49,o),
(697,117,o),
(686,178,qs),
(673,244,o),
(625,282,qs),
(577,321,o),
(511,321,qs),
(414,321,o),
(352,251,qs),
(286,176,o),
(278,53,q),
(279,49,l),
(595,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
8 1 2 4 1 76 0 0 0 4 2 0 4 105 0 1 1 23 77 6 5 2 2 2 3 95 0 3 3 24 3 78 26 26 26 38 26 37 39 51 34 53 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(716,53,qs),
(678,0,o),
(603,0,qs),
(116,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(227,49,l),
(147,504,ls),
(138,556,o),
(180,556,qs),
(184,556,ls),
(190,556,o),
(191,550,qs),
(254,191,l),
(284,265,o),
(340,311,qs),
(410,368,o),
(507,368,qs),
(585,368,o),
(646,325,qs),
(721,272,o),
(738,177,qs),
(751,101,o)
);
},
{
closed = 1;
nodes = (
(433,468,o),
(430,484,qs),
(427,500,o),
(445,522,o),
(460,522,qs),
(476,522,o),
(501,500,o),
(504,484,qs),
(507,468,o),
(489,446,o),
(473,446,qs),
(458,446,o)
);
},
{
closed = 1;
nodes = (
(649,49,o),
(697,117,o),
(686,178,qs),
(673,244,o),
(625,282,qs),
(577,321,o),
(511,321,qs),
(414,321,o),
(352,251,qs),
(286,176,o),
(278,53,q),
(279,49,l),
(595,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 2 6 1 76 0 5 8 1 4 0 5 4 105 0 0 0 6 2 0 6 105 0 1 1 23 77 9 7 2 2 2 3 95 0 3 3 24 3 78 38 38 27 26 38 50 38 49 44 42 33 31 26 37 27 37 51 34 53 35 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,0,o),
(459,7,qs),
(458,11,ls),
(449,49,o),
(404,49,qs),
(270,49,ls),
(215,49,o),
(130,125,o),
(120,182,qs),
(109,243,o),
(138,281,qs),
(169,322,o),
(231,321,qs),
(286,321,o),
(333,298,qs),
(341,294,o),
(344,294,qs),
(356,295,o),
(352,308,qs),
(344,331,o),
(261,368,o),
(218,368,qs),
(148,368,o),
(108,327,qs),
(58,277,o),
(68,183,qs),
(74,135,o),
(130,45,o),
(166,26,q),
(121,3,o),
(80,-86,o),
(88,-141,qs),
(99,-214,o),
(155,-265,qs),
(223,-329,o),
(326,-331,qs),
(398,-333,o),
(446,-310,qs),
(487,-291,o),
(503,-261,qs),
(506,-255,o),
(504,-247,qs),
(503,-238,o),
(494,-238,qs),
(490,-238,o),
(483,-241,q),
(451,-261,o),
(423,-271,qs),
(382,-286,o),
(323,-284,qs),
(253,-282,o),
(156,-205,o),
(145,-142,qs),
(136,-88,o),
(163,-49,qs),
(197,0,o),
(272,0,qs),
(452,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
28 1 0 6 1 76 0 2 0 1 0 2 1 128 0 4 0 5 6 4 5 105 0 1 0 3 1 3 101 0 6 6 0 95 7 1 0 0 24 0 78 1 0 53 50 45 43 36 34 22 20 14 12 8 6 0 57 1 56 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,500,o),
(230,484,qs),
(233,468,o),
(215,446,o),
(199,446,qs),
(184,446,o),
(159,468,o),
(156,484,qs),
(153,500,o),
(171,522,o),
(186,522,qs),
(202,522,o)
);
},
{
closed = 1;
nodes = (
(461,0,o),
(459,7,qs),
(458,11,ls),
(449,49,o),
(404,49,qs),
(270,49,ls),
(215,49,o),
(130,125,o),
(120,182,qs),
(109,243,o),
(138,281,qs),
(169,322,o),
(231,321,qs),
(286,321,o),
(333,298,qs),
(341,294,o),
(344,294,qs),
(356,295,o),
(352,308,qs),
(344,331,o),
(261,368,o),
(218,368,qs),
(148,368,o),
(108,327,qs),
(58,277,o),
(68,183,qs),
(74,135,o),
(130,45,o),
(166,26,q),
(121,3,o),
(80,-86,o),
(88,-141,qs),
(99,-214,o),
(155,-265,qs),
(223,-329,o),
(326,-331,qs),
(398,-333,o),
(446,-310,qs),
(487,-291,o),
(503,-261,qs),
(506,-255,o),
(504,-247,qs),
(503,-238,o),
(494,-238,qs),
(490,-238,o),
(483,-241,q),
(451,-261,o),
(423,-271,qs),
(382,-286,o),
(323,-284,qs),
(253,-282,o),
(156,-205,o),
(145,-142,qs),
(136,-88,o),
(163,-49,qs),
(197,0,o),
(272,0,qs),
(452,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 1 0 1 0 133 0 1 6 6 1 112 0 4 2 3 2 4 3 128 0 6 0 7 8 6 7 106 0 3 0 5 3 5 101 0 8 8 2 95 10 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 1 0 133 0 1 6 1 133 0 4 2 3 2 4 3 128 0 6 0 7 8 6 7 106 0 3 0 5 3 5 101 0 8 8 2 95 10 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 65 62 57 55 48 46 34 32 26 24 20 18 12 69 13 68 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,0,l),
(5,0,l),
(-4,49,l),
(112,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,469,o),
(567,485,qs),
(564,501,o),
(582,523,o),
(597,523,qs),
(613,523,o),
(638,501,o),
(641,485,qs),
(644,469,o),
(626,447,o),
(610,447,qs),
(595,447,o)
);
},
{
closed = 1;
nodes = (
(800,60,qs),
(766,2,o),
(691,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(561,49,l),
(506,93,o),
(490,183,qs),
(477,257,o),
(511,309,qs),
(550,368,o),
(628,368,qs),
(694,368,o),
(745,322,qs),
(801,270,o),
(816,183,qs),
(829,110,o)
);
},
{
closed = 1;
nodes = (
(752,85,qs),
(776,123,o),
(765,184,qs),
(754,244,o),
(678,321,o),
(629,321,qs),
(582,321,o),
(558,285,qs),
(531,245,o),
(542,184,qs),
(552,127,o),
(634,49,o),
(683,49,qs),
(730,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 4 7 3 7 4 3 128 0 1 8 1 0 2 1 0 105 0 2 0 7 4 2 7 105 9 6 2 3 3 5 95 0 5 5 24 5 78 45 44 1 0 52 50 44 57 45 57 41 38 31 30 24 22 17 15 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,464,o),
(322,479,qs),
(319,493,o),
(335,513,o),
(349,513,qs),
(364,513,o),
(387,493,o),
(390,479,qs),
(392,464,o),
(376,443,o),
(362,443,qs),
(347,443,o)
);
},
{
closed = 1;
nodes = (
(422,464,o),
(419,479,qs),
(417,493,o),
(433,513,o),
(447,513,qs),
(462,513,o),
(485,493,o),
(488,479,qs),
(490,464,o),
(474,443,o),
(459,443,qs),
(445,443,o)
);
},
{
closed = 1;
nodes = (
(611,-134,qs),
(554,-214,o),
(423,-214,qs),
(297,-214,o),
(213,-151,qs),
(126,-84,o),
(104,34,qs),
(94,93,o),
(119,197,o),
(150,225,qs),
(156,231,o),
(162,231,qs),
(174,231,o),
(176,219,qs),
(176,216,o),
(174,211,qs),
(137,140,o),
(152,46,qs),
(169,-45,o),
(240,-103,qs),
(318,-167,o),
(424,-167,qs),
(505,-167,o),
(551,-123,qs),
(602,-74,o),
(598,19,q),
(547,-11,o),
(489,-9,qs),
(421,-9,o),
(369,39,qs),
(311,91,o),
(296,178,qs),
(282,258,o),
(316,310,qs),
(353,368,o),
(430,368,qs),
(527,368,o),
(585,272,qs),
(630,199,o),
(646,63,qs),
(663,-62,o)
);
},
{
closed = 1;
nodes = (
(592,74,q),
(592,76,ls),
(590,94,o),
(588,103,qs),
(570,206,o),
(539,256,qs),
(498,321,o),
(432,321,qs),
(386,321,o),
(363,287,qs),
(335,247,o),
(347,179,qs),
(358,117,o),
(436,38,o),
(487,38,qs),
(553,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
78 1 9 7 38 1 5 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 13 1 9 0 5 6 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
66 65 13 12 1 0 73 71 65 80 66 80 62 60 52 51 43 41 37 35 29 27 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(597,505,ls),
(588,556,o),
(629,556,qs),
(634,556,ls),
(639,556,o),
(640,551,qs),
(709,155,ls)
);
},
{
closed = 1;
nodes = (
(328,296,qs),
(329,296,l),
(310,317,o),
(308,346,qs),
(306,382,o),
(344,426,o),
(376,426,qs),
(401,426,o),
(441,401,o),
(445,382,q),
(450,373,o),
(443,373,qs),
(440,373,o),
(434,376,qs),
(431,377,o),
(430,378,q),
(403,389,o),
(388,389,qs),
(367,389,o),
(346,365,o),
(350,345,qs),
(358,299,o),
(401,299,qs),
(454,299,ls),
(483,299,o),
(489,271,q),
(489,268,l),
(491,262,o),
(483,262,qs),
(386,262,ls),
(343,262,o),
(320,253,q),
(319,253,o),
(317,252,qs),
(311,250,o),
(310,250,qs),
(304,250,o),
(301,263,qs),
(297,288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
67 1 5 2 1 76 0 8 7 2 7 8 2 128 0 4 5 1 5 4 1 128 0 9 0 7 8 9 7 105 6 1 2 0 5 4 2 5 103 0 0 0 23 77 0 1 1 3 95 0 3 3 24 3 78 63 61 36 35 51 52 37 55 22 51 34 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(579,42,ls),
(598,-70,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 101 0 1 1 23 1 78 1 0 26 25 17 15 9 6 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,-9,qs),
(317,-9,o),
(207,49,q),
(201,49,ls),
(119,42,o),
(138,-63,qs),
(168,-237,ls),
(173,-260,o),
(155,-288,o),
(136,-288,qs),
(132,-288,ls),
(126,-288,o),
(125,-282,qs),
(87,-62,ls),
(61,81,o),
(176,97,q),
(180,107,o),
(187,132,qs),
(192,148,o),
(194,154,qs),
(224,257,o),
(242,291,qs),
(282,368,o),
(353,368,qs),
(425,368,o),
(474,315,qs),
(527,256,o),
(539,153,qs),
(557,-9,o)
);
},
{
closed = 1;
nodes = (
(486,153,qs),
(472,232,o),
(404,321,o),
(357,321,qs),
(292,321,o),
(246,144,qs),
(243,135,ls),
(234,102,o),
(230,91,q),
(328,38,o),
(413,38,qs),
(506,40,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 1 134 0 0 0 4 3 0 4 105 5 1 3 3 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 2 1 134 0 0 0 4 3 0 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
30 29 37 35 29 40 30 40 39 59 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,384,o),
(330,368,qs),
(333,352,o),
(315,330,o),
(299,330,qs),
(284,330,o),
(259,352,o),
(256,368,qs),
(253,384,o),
(271,406,o),
(286,406,qs),
(302,406,o)
);
},
{
closed = 1;
nodes = (
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(579,42,ls),
(599,-71,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 97 7 1 2 4 2 81 13 12 1 0 38 37 29 27 21 19 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,47,qs),
(367,-9,o),
(289,-9,qs),
(221,-9,o),
(168,32,qs),
(104,82,o),
(92,168,qs),
(73,301,o),
(201,359,q),
(185,372,o),
(173,388,q),
(152,423,o),
(178,440,qs),
(181,442,o),
(183,442,qs),
(187,443,o),
(191,436,qs),
(216,397,o),
(271,360,qs),
(286,350,o),
(294,345,qs),
(298,342,o),
(306,336,qs),
(312,332,o),
(315,330,qs),
(413,254,o),
(423,168,qs),
(431,93,o)
);
},
{
closed = 1;
nodes = (
(351,69,qs),
(382,107,o),
(370,171,qs),
(359,225,o),
(308,270,qs),
(284,292,o),
(240,324,q),
(125,279,o),
(145,166,qs),
(155,111,o),
(232,38,o),
(280,38,qs),
(326,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 18 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 40 29 40 25 23 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(447,-91,o),
(433,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-175,o),
(165,-161,qs),
(161,-149,o),
(173,-149,qs),
(178,-149,o),
(184,-151,qs),
(273,-179,o),
(330,-161,qs),
(414,-135,o),
(389,23,q),
(336,-11,o),
(276,-9,qs),
(207,-9,o),
(155,39,qs),
(98,91,o),
(83,178,qs),
(68,258,o),
(102,310,qs),
(140,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(406,220,o),
(427,113,qs),
(445,9,o)
);
},
{
closed = 1;
nodes = (
(379,74,q),
(378,78,ls),
(376,95,o),
(375,103,qs),
(357,206,o),
(325,256,qs),
(284,321,o),
(219,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(134,179,qs),
(145,117,o),
(223,38,o),
(274,38,qs),
(339,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
44 1 4 5 14 1 1 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 1 3 1 2 3 128 0 3 3 132 0 0 0 5 4 0 5 105 6 1 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 3 1 2 3 128 0 3 3 132 0 0 0 5 4 0 5 105 6 1 4 1 1 4 89 6 1 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
32 31 39 37 31 46 32 46 36 38 38 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(497,-167,o),
(546,-131,qs),
(604,-89,o),
(604,-16,qs),
(604,5,o),
(566,28,o),
(515,37,qs),
(471,44,o),
(459,47,qs),
(313,79,o),
(292,201,qs),
(279,273,o),
(320,320,qs),
(362,368,o),
(435,368,qs),
(498,368,o),
(536,343,qs),
(562,325,o),
(565,308,qs),
(567,294,o),
(557,294,qs),
(553,294,o),
(546,298,qs),
(506,321,o),
(450,321,qs),
(401,321,o),
(371,295,qs),
(332,262,o),
(343,201,qs),
(350,162,o),
(423,101,o),
(476,91,qs),
(568,73,o),
(592,64,qs),
(654,42,o),
(656,-7,qs),
(661,-91,o),
(597,-150,qs),
(523,-219,o),
(404,-214,qs),
(292,-210,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 50 49 41 39 26 24 20 18 16 14 0 58 1 58 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(497,-167,o),
(546,-131,qs),
(604,-89,o),
(604,-16,qs),
(604,5,o),
(566,28,o),
(515,37,qs),
(471,44,o),
(459,47,qs),
(313,79,o),
(292,201,qs),
(279,273,o),
(320,320,qs),
(362,368,o),
(435,368,qs),
(498,368,o),
(536,343,qs),
(562,325,o),
(565,308,qs),
(568,294,o),
(557,294,qs),
(553,294,o),
(546,298,qs),
(506,321,o),
(450,321,qs),
(401,321,o),
(371,295,qs),
(332,262,o),
(343,201,qs),
(350,162,o),
(423,101,o),
(476,91,qs),
(567,73,o),
(592,64,qs),
(654,42,o),
(656,-7,qs),
(661,-91,o),
(597,-150,qs),
(523,-219,o),
(404,-214,qs),
(292,-210,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 10 1 0 6 4 0 105 12 8 11 3 6 7 7 6 89 12 8 11 3 6 6 7 97 9 1 7 6 7 81 72 71 60 59 1 0 78 76 71 82 72 82 66 64 59 70 60 70 50 49 41 39 26 24 20 18 16 14 0 58 1 58 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,742,o),
(146,717,q),
(147,714,ls),
(148,708,o),
(141,708,qs),
(57,708,ls),
(26,708,o),
(3,701,q),
(2,700,o),
(0,699,qs),
(-5,697,o),
(-6,697,qs),
(-12,697,o),
(-14,709,qs),
(-17,734,o),
(11,739,qs),
(30,742,o),
(60,742,qs),
(115,742,ls)
);
},
{
closed = 1;
nodes = (
(156,661,o),
(161,635,q),
(161,632,l),
(163,627,o),
(155,627,qs),
(71,627,ls),
(40,627,o),
(18,619,q),
(17,618,o),
(14,617,qs),
(9,616,o),
(8,616,qs),
(3,616,o),
(1,628,qs),
(-3,652,o),
(25,657,qs),
(44,661,o),
(75,661,qs),
(129,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 56 values pushed */
0 1 2 3 2 1 3 128 5 1 0 0 2 1 0 2 103 6 1 3 4 4 3 89 6 1 3 3 4 95 0 4 3 4 79 20 19 1 0 33 30 19 37 20 36 14 11 7 5 0 18 1 17 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,519,q),
(193,501,o),
(178,486,q),
(174,483,o),
(168,487,qs),
(155,498,l),
(137,482,ls),
(125,472,o),
(110,472,qs),
(96,472,o),
(68,492,q),
(52,506,o),
(45,506,qs),
(36,506,o),
(28,482,qs),
(25,474,o),
(17,481,qs),
(2,495,o),
(7,519,qs),
(13,540,o),
(37,540,qs),
(57,540,o),
(87,517,qs),
(100,507,o),
(106,507,qs),
(113,507,o),
(118,513,qs),
(123,518,l),
(88,541,o),
(84,576,qs),
(81,602,o),
(111,635,o),
(137,634,qs),
(165,634,o),
(202,602,o),
(203,576,qs),
(205,546,o)
);
},
{
closed = 1;
nodes = (
(152,603,o),
(140,603,qs),
(114,603,o),
(119,576,qs),
(124,558,o),
(148,539,q),
(169,558,o),
(170,574,qs),
(170,586,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 53 values pushed */
39 35 8 3 1 2 30 1 4 3 2 76 0 0 0 5 2 0 5 105 0 1 3 4 1 89 0 2 0 3 4 2 3 105 0 1 1 4 97 0 4 1 4 81 46 34 38 35 22 34 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,-77,o),
(148,-102,q),
(149,-105,l),
(149,-111,o),
(143,-111,qs),
(59,-111,ls),
(28,-111,o),
(5,-118,q),
(4,-119,o),
(2,-120,qs),
(-3,-122,o),
(-4,-122,qs),
(-10,-122,o),
(-12,-109,qs),
(-15,-85,o),
(13,-80,qs),
(32,-77,o),
(62,-77,qs),
(117,-77,ls)
);
},
{
closed = 1;
nodes = (
(158,-158,o),
(163,-184,q),
(163,-187,ls),
(164,-192,o),
(157,-192,qs),
(73,-192,ls),
(42,-192,o),
(20,-200,q),
(19,-200,o),
(16,-201,qs),
(11,-203,o),
(10,-203,qs),
(5,-203,o),
(3,-191,qs),
(-1,-167,o),
(27,-162,qs),
(46,-158,o),
(77,-158,qs),
(131,-158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 62 values pushed */
15 1 2 0 1 76 0 1 2 3 2 1 3 128 5 1 0 0 2 1 0 2 103 6 1 3 4 4 3 89 6 1 3 3 4 95 0 4 3 4 79 20 19 1 0 33 30 19 37 20 36 13 11 7 5 0 18 1 17 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,661,o),
(161,635,q),
(162,632,l),
(162,627,o),
(156,627,qs),
(71,627,ls),
(41,627,o),
(18,619,q),
(17,618,o),
(15,617,q),
(10,616,o),
(9,616,qs),
(3,616,o),
(1,628,qs),
(-2,652,o),
(26,657,qs),
(45,661,o),
(75,661,qs),
(130,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 42 values pushed */
15 1 2 0 1 76 0 1 2 1 134 3 1 0 2 2 0 89 3 1 0 0 2 95 0 2 0 2 79 1 0 13 11 7 5 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,542,q),
(129,524,o),
(115,509,q),
(110,506,o),
(105,511,qs),
(91,522,l),
(53,492,o),
(39,484,qs),
(29,479,o),
(22,479,qs),
(11,479,o),
(0,489,qs),
(-3,491,ls),
(-9,496,o),
(-3,499,q),
(-2,500,o),
(0,501,qs),
(36,523,o),
(59,542,q),
(24,566,o),
(20,599,qs),
(18,625,o),
(47,658,o),
(73,658,qs),
(102,657,o),
(138,625,o),
(140,599,qs),
(142,570,o)
);
},
{
closed = 1;
nodes = (
(85,563,q),
(105,581,o),
(106,598,qs),
(107,609,o),
(88,626,o),
(76,626,qs),
(50,626,o),
(55,599,qs),
(60,581,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 38 values pushed */
35 33 26 21 8 0 6 1 2 1 76 0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 43 44 34 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,-77,o),
(162,-102,q),
(163,-105,l),
(163,-111,o),
(157,-111,qs),
(72,-111,ls),
(42,-111,o),
(19,-118,q),
(18,-119,o),
(16,-120,qs),
(11,-122,o),
(10,-122,qs),
(4,-122,o),
(2,-109,qs),
(-1,-85,o),
(27,-80,qs),
(46,-77,o),
(76,-77,qs),
(131,-77,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 42 values pushed */
15 1 2 0 1 76 0 1 2 1 134 3 1 0 2 2 0 89 3 1 0 0 2 95 0 2 0 2 79 1 0 13 11 7 5 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,513,o),
(203,472,o),
(172,471,qs),
(142,470,o),
(123,491,q),
(104,470,o),
(74,471,qs),
(17,471,o),
(4,545,qs),
(0,563,ls),
(-3,583,o),
(1,592,qs),
(7,604,o),
(23,604,qs),
(25,604,ls),
(30,604,o),
(31,599,qs),
(41,539,ls),
(48,505,o),
(75,505,qs),
(103,505,o),
(98,539,qs),
(94,563,ls),
(90,582,o),
(95,593,qs),
(101,604,o),
(115,604,qs),
(119,604,ls),
(123,604,o),
(124,599,qs),
(134,539,ls),
(140,504,o),
(169,505,qs),
(196,506,o),
(190,539,qs),
(186,563,ls),
(183,582,o),
(188,593,qs),
(194,604,o),
(209,604,qs),
(211,604,ls),
(216,604,o),
(217,599,qs),
(227,547,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
38 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 2 2 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 2 2 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
34 37 36 37 36 37 34 7 7 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,505,o),
(-11,532,qs),
(-15,558,o),
(14,592,o),
(41,592,qs),
(66,592,o),
(103,560,o),
(107,532,qs),
(112,506,o),
(83,472,o),
(56,472,qs),
(30,472,o)
);
},
{
closed = 1;
nodes = (
(22,532,qs),
(28,501,o),
(54,501,qs),
(80,501,o),
(75,532,qs),
(69,564,o),
(43,564,qs),
(16,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 1 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 97 4 1 0 3 0 81 13 12 1 0 17 15 12 19 13 19 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,668,o),
(29,653,qs),
(32,642,o),
(42,629,qs),
(47,621,o),
(51,628,q),
(52,631,o),
(54,642,qs),
(57,654,o),
(67,654,qs),
(76,654,o),
(115,642,qs),
(163,626,o),
(174,626,qs),
(190,626,o),
(207,646,o),
(203,661,qs),
(201,672,o),
(191,685,qs),
(185,693,o),
(182,686,qs),
(181,683,o),
(178,672,qs),
(176,659,o),
(166,659,qs),
(158,659,o),
(127,669,qs),
(71,688,o),
(57,688,qs),
(42,688,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 1 3 2 1 89 4 1 0 0 3 2 0 3 105 0 1 1 2 97 0 2 1 2 81 1 0 20 18 16 14 5 3 0 29 1 29 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,624,o),
(198,624,qs),
(115,624,ls),
(82,624,o),
(60,616,q),
(59,616,o),
(57,615,qs),
(52,613,o),
(51,613,qs),
(45,613,o),
(43,625,qs),
(39,649,o),
(67,654,q),
(49,675,o),
(44,700,qs),
(39,732,o),
(71,773,o),
(101,773,qs),
(123,773,o),
(159,749,o),
(164,732,qs),
(167,724,o),
(161,724,qs),
(157,724,o),
(149,729,qs),
(129,740,o),
(113,739,qs),
(76,738,o),
(82,699,qs),
(85,683,o),
(116,658,o),
(134,658,qs),
(171,658,ls),
(198,658,o),
(203,632,qs),
(204,629,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
22 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 0 0 5 5 0 89 0 0 0 5 95 0 5 0 5 79 52 39 35 34 35 49 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,-226,o),
(172,-226,qs),
(89,-226,ls),
(56,-226,o),
(34,-234,q),
(33,-234,o),
(31,-235,qs),
(26,-237,o),
(25,-237,qs),
(19,-237,o),
(17,-225,qs),
(13,-201,o),
(41,-196,q),
(23,-175,o),
(18,-150,qs),
(13,-118,o),
(45,-77,o),
(75,-77,qs),
(97,-77,o),
(133,-101,o),
(138,-118,qs),
(141,-126,o),
(135,-126,qs),
(131,-126,o),
(123,-121,qs),
(103,-110,o),
(87,-111,qs),
(50,-112,o),
(56,-151,qs),
(59,-167,o),
(90,-192,o),
(108,-192,qs),
(145,-192,ls),
(172,-192,o),
(177,-218,qs),
(178,-221,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
22 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 0 0 5 5 0 89 0 0 0 5 95 0 5 0 5 79 52 39 35 34 35 49 6 7 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,403,q),
(214,301,ls),
(212,294,o),
(206,294,qs),
(186,294,ls),
(180,294,o),
(176,301,qs),
(115,403,l),
(111,408,o),
(119,408,qs),
(145,408,o),
(160,383,qs),
(190,333,l),
(203,383,ls),
(209,408,o),
(233,408,qs),
(239,408,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
3 1 2 0 1 76 1 1 0 2 0 133 0 2 2 118 35 36 16 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,99,qs),
(79,201,o),
(79,354,qs),
(79,420,o),
(103,464,qs),
(133,519,o),
(191,519,qs),
(301,519,o),
(356,430,qs),
(401,355,o),
(401,196,qs),
(401,121,o),
(335,37,o),
(277,37,qs),
(201,37,o)
);
},
{
closed = 1;
nodes = (
(400,38,qs),
(451,95,o),
(451,200,qs),
(451,349,o),
(407,432,qs),
(334,567,o),
(188,567,qs),
(117,567,o),
(75,511,qs),
(30,450,o),
(30,346,qs),
(30,227,o),
(92,112,qs),
(157,-10,o),
(284,-10,qs),
(355,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
16 15 1 0 24 22 15 30 16 30 8 6 0 14 1 14 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,47,o),
(94,44,qs),
(94,43,o),
(94,41,qs),
(100,6,ls),
(101,0,o),
(106,0,qs),
(366,0,ls),
(373,0,o),
(373,5,qs),
(373,6,o),
(373,7,qs),
(371,18,ls),
(366,47,o),
(336,47,qs),
(254,47,l),
(173,508,ls),
(165,556,o),
(129,556,qs),
(121,556,ls),
(100,556,o),
(76,547,qs),
(18,524,ls),
(12,522,o),
(12,516,qs),
(12,515,o),
(12,513,qs),
(19,474,ls),
(20,470,o),
(23,470,qs),
(24,470,o),
(25,471,q),
(122,509,l),
(203,47,l),
(98,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 2 1 3 1 0 30 22 2 2 1 2 76 0 0 0 23 77 4 3 2 1 1 2 95 0 2 2 24 2 78 0 0 0 34 0 34 37 34 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,149,o),
(235,207,qs),
(303,263,o),
(356,340,o),
(356,383,qs),
(356,446,o),
(318,497,qs),
(266,567,o),
(159,567,qs),
(101,567,o),
(52,542,qs),
(8,520,o),
(8,503,qs),
(8,496,o),
(11,489,qs),
(19,474,ls),
(23,466,o),
(28,466,qs),
(33,466,o),
(38,470,qs),
(92,519,o),
(164,519,qs),
(224,519,o),
(262,486,qs),
(306,447,o),
(306,380,qs),
(306,340,o),
(266,280,o),
(210,238,qs),
(142,186,o),
(83,98,o),
(83,46,qs),
(83,0,o),
(94,0,qs),
(421,0,ls),
(427,0,o),
(427,5,qs),
(427,6,o),
(427,7,qs),
(425,18,ls),
(420,47,o),
(390,47,qs),
(133,47,l),
(134,97,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 23 77 0 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
39 34 42 53 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,395,qs),
(360,468,o),
(316,513,qs),
(263,567,o),
(161,567,qs),
(111,567,o),
(13,524,o),
(13,502,qs),
(13,496,o),
(16,489,qs),
(24,474,ls),
(28,466,o),
(32,466,qs),
(37,466,o),
(44,472,qs),
(106,519,o),
(169,519,qs),
(311,519,o),
(311,394,qs),
(311,316,o),
(211,316,qs),
(123,316,ls),
(116,316,o),
(116,310,qs),
(116,308,l),
(118,298,ls),
(123,270,o),
(153,270,qs),
(205,270,ls),
(283,270,o),
(372,198,o),
(372,136,qs),
(372,93,o),
(306,37,o),
(255,37,qs),
(174,37,o),
(112,98,qs),
(86,125,o),
(80,125,qs),
(70,125,o),
(70,111,qs),
(70,79,o),
(113,42,qs),
(173,-10,o),
(266,-10,qs),
(326,-10,o),
(370,23,qs),
(424,63,o),
(424,129,qs),
(424,194,o),
(351,279,o),
(285,291,q),
(360,324,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 34 52 52 35 20 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,0,o),
(339,0,qs),
(380,0,ls),
(384,0,o),
(384,4,qs),
(384,5,o),
(384,6,qs),
(361,139,l),
(427,139,ls),
(434,139,o),
(434,143,qs),
(434,145,o),
(433,146,q),
(432,157,ls),
(427,186,o),
(396,186,qs),
(352,186,l),
(294,518,ls),
(287,556,o),
(256,556,qs),
(241,556,ls),
(225,556,o),
(217,539,qs),
(47,202,ls),
(41,190,o),
(41,182,qs),
(41,178,o),
(42,171,qs),
(47,145,ls),
(48,139,o),
(53,139,qs),
(310,139,l),
(333,6,ls)
);
},
{
closed = 1;
nodes = (
(301,186,l),
(91,186,l),
(246,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
35 1 2 1 1 76 5 1 2 3 1 0 4 2 0 104 0 1 1 23 77 0 4 4 24 4 78 19 21 37 34 57 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,508,o),
(315,513,qs),
(315,514,o),
(315,516,qs),
(313,527,ls),
(308,556,o),
(278,556,qs),
(16,556,ls),
(12,556,o),
(12,552,qs),
(12,551,o),
(12,549,qs),
(61,276,ls),
(62,269,o),
(67,269,qs),
(68,269,o),
(71,270,qs),
(135,298,o),
(208,298,qs),
(279,298,o),
(318,260,qs),
(360,219,o),
(360,139,qs),
(360,94,o),
(295,37,o),
(243,37,qs),
(165,37,o),
(104,98,qs),
(77,125,o),
(72,125,qs),
(62,125,o),
(62,111,qs),
(62,78,o),
(105,40,qs),
(164,-10,o),
(252,-10,qs),
(315,-10,o),
(359,25,qs),
(411,67,o),
(411,136,qs),
(411,226,o),
(364,280,qs),
(309,344,o),
(200,344,qs),
(157,344,o),
(101,329,q),
(69,508,l),
(308,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 35 2 6 5 1 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 3 0 1 3 1 101 7 1 6 6 5 95 0 5 5 23 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 57 37 35 20 38 34 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,512,o),
(223,528,qs),
(223,567,o),
(193,567,qs),
(186,567,o),
(182,558,qs),
(89,340,ls),
(55,260,o),
(55,206,qs),
(55,119,o),
(103,60,qs),
(160,-10,o),
(256,-10,qs),
(320,-10,o),
(368,34,qs),
(422,84,o),
(422,147,qs),
(422,348,o),
(228,348,qs),
(177,348,o),
(144,328,q),
(216,497,ls)
);
},
{
closed = 1;
nodes = (
(149,78,qs),
(106,122,o),
(106,198,qs),
(106,245,o),
(169,301,o),
(223,301,qs),
(302,301,o),
(338,263,qs),
(371,228,o),
(371,152,qs),
(371,114,o),
(340,80,qs),
(302,37,o),
(249,37,qs),
(188,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 106 0 2 2 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
23 22 31 29 22 36 23 36 39 36 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,5,ls),
(162,0,o),
(167,0,qs),
(206,0,ls),
(217,0,o),
(220,11,qs),
(354,478,ls),
(359,493,o),
(359,503,qs),
(359,509,o),
(357,518,qs),
(356,527,ls),
(351,556,o),
(321,556,qs),
(5,556,ls),
(1,556,o),
(1,552,qs),
(1,551,o),
(1,549,qs),
(7,514,ls),
(8,508,o),
(13,508,qs),
(308,508,l),
(162,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 23 77 0 2 2 24 2 78 40 54 16 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,274,o),
(228,274,qs),
(288,274,o),
(331,238,qs),
(383,196,o),
(383,129,qs),
(383,86,o),
(319,36,o),
(264,36,qs),
(202,36,o),
(162,71,qs),
(116,110,o),
(116,176,qs),
(116,220,o)
);
},
{
closed = 1;
nodes = (
(141,519,o),
(184,519,qs),
(246,519,o),
(318,455,o),
(318,400,qs),
(318,366,o),
(262,319,o),
(221,319,qs),
(165,319,o),
(86,389,o),
(86,438,qs),
(86,474,o)
);
},
{
closed = 1;
nodes = (
(66,179,qs),
(66,98,o),
(115,47,qs),
(172,-11,o),
(271,-11,qs),
(338,-11,o),
(382,21,qs),
(434,58,o),
(434,122,qs),
(434,195,o),
(402,235,qs),
(372,272,o),
(295,297,q),
(367,332,o),
(367,399,qs),
(367,466,o),
(323,512,qs),
(270,567,o),
(177,567,qs),
(117,567,o),
(37,499,o),
(37,448,qs),
(37,341,o),
(152,297,q),
(66,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 0 2 1 105 0 3 3 4 97 0 4 4 23 77 0 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 0 5 0 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
44 38 36 36 37 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,43,o),
(222,28,qs),
(222,-10,o),
(250,-10,qs),
(258,-10,o),
(262,-1,qs),
(355,217,ls),
(389,298,o),
(389,350,qs),
(389,442,o),
(341,499,qs),
(284,567,o),
(178,567,qs),
(113,567,o),
(71,529,qs),
(23,486,o),
(23,415,qs),
(23,319,o),
(71,267,qs),
(123,209,o),
(228,209,qs),
(273,209,o),
(301,232,q),
(228,58,ls)
);
},
{
closed = 1;
nodes = (
(74,330,o),
(74,411,qs),
(74,460,o),
(134,519,o),
(185,519,qs),
(254,519,o),
(294,481,qs),
(338,439,o),
(338,358,qs),
(338,310,o),
(279,256,o),
(228,256,qs),
(148,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 0 2 3 0 105 0 4 4 1 97 0 1 1 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 0 2 3 0 105 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 134 0 1 0 4 3 1 4 105 5 1 3 0 0 3 89 5 1 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 32 30 24 36 25 36 39 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,278,qs),
(320,342,o),
(320,445,qs),
(320,501,o),
(263,567,o),
(214,567,qs),
(151,567,o),
(107,510,qs),
(56,445,o),
(56,343,qs),
(56,287,o),
(113,223,o),
(164,223,qs),
(228,223,o)
);
},
{
closed = 1;
nodes = (
(100,335,qs),
(100,379,o),
(124,470,o),
(142,494,qs),
(169,528,o),
(213,528,qs),
(277,528,o),
(277,452,qs),
(277,408,o),
(253,319,o),
(235,294,qs),
(210,261,o),
(165,261,qs),
(100,261,o)
);
},
{
closed = 1;
nodes = (
(187,0,o),
(191,6,qs),
(550,503,ls),
(567,526,o),
(567,540,qs),
(567,556,o),
(548,556,qs),
(542,556,ls),
(538,556,o),
(536,552,q),
(535,551,ls),
(534,550,o),
(534,549,q),
(139,6,ls),
(137,3,o),
(137,2,qs),
(137,0,o),
(140,0,qs),
(182,0,ls)
);
},
{
closed = 1;
nodes = (
(619,47,qs),
(668,110,o),
(668,214,qs),
(668,270,o),
(611,335,o),
(561,335,qs),
(498,335,o),
(454,278,qs),
(404,213,o),
(404,110,qs),
(404,55,o),
(461,-9,o),
(511,-9,qs),
(575,-9,o)
);
},
{
closed = 1;
nodes = (
(447,105,qs),
(447,192,o),
(509,297,o),
(561,297,qs),
(625,297,o),
(625,220,qs),
(625,133,o),
(564,29,o),
(513,29,qs),
(447,29,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 9 2 7 9 106 11 1 2 10 1 0 8 2 0 105 0 4 4 23 77 0 3 3 1 97 0 1 1 23 77 12 1 5 5 24 77 14 1 8 8 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 3 7 1 3 105 0 7 0 9 2 7 9 106 11 1 2 10 1 0 8 2 0 105 0 4 4 23 77 12 1 5 5 24 77 14 1 8 8 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 3 7 1 3 105 0 7 0 9 2 7 9 106 11 1 2 10 1 0 8 2 0 105 14 1 8 13 1 6 8 6 101 0 4 4 23 77 12 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
62 61 48 47 28 28 15 14 1 0 67 65 61 70 62 70 55 53 47 60 48 60 28 46 28 45 40 37 22 20 14 27 15 27 8 6 0 13 1 13 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-101,qs),
(136,-103,o),
(132,-99,qs),
(114,-85,o),
(128,-61,qs),
(143,-33,o),
(144,-16,q),
(107,-9,o),
(101,27,qs),
(98,44,o),
(118,69,o),
(135,69,qs),
(152,69,o),
(180,43,o),
(184,24,qs),
(196,-44,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 34 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,-17,qs),
(122,-19,o),
(118,-16,qs),
(100,-1,o),
(114,23,qs),
(129,51,o),
(130,68,q),
(93,75,o),
(87,111,qs),
(84,128,o),
(104,153,o),
(121,153,qs),
(138,153,o),
(166,127,o),
(170,108,qs),
(182,40,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 34 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,308,o),
(17,307,qs),
(17,305,o),
(21,303,qs),
(63,280,l),
(64,280,l),
(66,278,o),
(67,278,qs),
(69,278,o),
(70,281,qs),
(105,368,l),
(174,281,ls),
(176,278,o),
(177,278,qs),
(178,278,o),
(181,280,qs),
(215,303,ls),
(218,305,o),
(218,307,qs),
(218,308,o),
(216,310,qs),
(141,388,l),
(230,414,l),
(232,415,o),
(233,418,q),
(233,420,o),
(232,423,q),
(210,466,ls),
(208,469,o),
(205,469,qs),
(204,469,o),
(203,469,q),
(121,432,l),
(109,533,l),
(109,538,o),
(102,538,qs),
(50,538,ls),
(45,538,o),
(45,534,qs),
(45,533,l),
(71,432,l),
(-26,469,l),
(-27,469,o),
(-28,469,qs),
(-31,469,o),
(-31,466,q),
(-39,423,l),
(-39,422,ls),
(-39,416,o),
(-34,414,q),
(65,388,l),
(18,310,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
49 40 29 24 19 18 11 10 4 9 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 2 0 96 4 1 0 0 24 0 78 1 0 22 21 15 12 9 7 0 30 1 29 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-70,469,qs),
(-74,469,o),
(-75,476,qs),
(-82,516,o),
(-102,556,qs),
(-106,564,o),
(-108,574,qs),
(-109,579,o),
(-108,583,qs),
(-107,593,o),
(-96,597,qs),
(-92,599,o),
(-88,597,q),
(-80,590,o),
(-74,573,qs),
(-48,508,o),
(-63,475,qs),
(-66,469,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
10 8 2 1 0 1 76 0 0 1 0 133 0 1 1 118 41 36 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,631,o),
(72,631,qs),
(54,631,o),
(18,645,qs),
(15,646,o),
(11,647,q),
(-16,658,o),
(-26,658,qs),
(-40,658,o),
(-45,646,q),
(-45,644,o),
(-47,640,qs),
(-49,634,o),
(-50,632,qs),
(-54,626,o),
(-59,632,qs),
(-66,642,o),
(-67,656,qs),
(-68,672,o),
(-49,692,o),
(-34,691,qs),
(-29,691,o),
(-19,688,qs),
(-14,687,ls),
(-11,687,o),
(-9,690,q),
(-9,691,o),
(-9,692,q),
(20,745,o),
(61,747,qs),
(87,748,o),
(123,718,o),
(126,693,qs),
(129,665,o)
);
},
{
closed = 1;
nodes = (
(66,663,qs),
(94,663,o),
(89,692,qs),
(85,714,o),
(64,714,qs),
(45,714,o),
(24,676,q),
(52,663,o)
);
},
{
closed = 1;
nodes = (
(170,0,o),
(129,0,qs),
(124,0,ls),
(118,0,o),
(118,6,q),
(30,504,ls),
(26,527,o),
(44,556,o),
(62,556,qs),
(67,556,ls),
(72,556,o),
(73,550,qs),
(161,51,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
15 1 3 2 1 76 0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 5 0 3 6 5 3 105 0 6 6 23 77 0 7 7 24 7 78 37 50 34 35 36 43 39 34 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,412,o),
(318,412,qs),
(328,412,l),
(304,551,ls),
(297,591,o),
(325,591,qs),
(327,591,ls),
(330,591,o),
(331,587,qs),
(341,530,l),
(387,530,ls),
(468,530,o),
(478,456,qs),
(482,421,o),
(447,381,o),
(411,381,qs),
(293,381,ls),
(290,381,o),
(289,384,q),
(289,387,l)
);
},
{
closed = 1;
nodes = (
(362,412,l),
(411,412,ls),
(451,412,o),
(445,456,qs),
(438,499,o),
(396,499,qs),
(346,499,l)
);
},
{
closed = 1;
nodes = (
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 2 1 2 133 0 6 0 8 0 6 8 128 0 8 7 0 8 7 126 0 1 10 1 4 3 1 4 105 5 1 3 0 0 6 3 0 104 0 7 7 9 96 0 9 9 24 9 78 21 20 54 51 44 43 37 34 31 29 25 23 20 26 21 26 34 35 35 49 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(721,86,o),
(694,46,qs),
(663,0,o),
(591,0,qs),
(300,0,ls)
);
},
{
closed = 1;
nodes = (
(433,-97,o),
(435,-112,qs),
(438,-127,o),
(422,-147,o),
(407,-147,qs),
(393,-147,o),
(369,-127,o),
(367,-112,qs),
(364,-97,o),
(381,-77,o),
(395,-77,qs),
(409,-77,o)
);
},
{
closed = 1;
nodes = (
(531,-97,o),
(533,-112,qs),
(536,-127,o),
(519,-147,o),
(505,-147,qs),
(490,-147,o),
(467,-127,o),
(465,-112,qs),
(462,-97,o),
(478,-77,o),
(493,-77,qs),
(507,-77,o)
);
},
{
closed = 1;
nodes = (
(496,-178,o),
(499,-193,qs),
(501,-208,o),
(485,-228,o),
(470,-228,qs),
(456,-228,o),
(433,-208,o),
(430,-193,qs),
(428,-178,o),
(444,-158,o),
(458,-158,qs),
(473,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 1 3 1 133 0 3 2 3 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 0 2 2 0 96 10 1 0 0 24 0 78 56 55 44 43 32 31 1 0 62 60 55 66 56 66 50 48 43 54 44 54 38 36 31 42 32 42 22 21 15 12 9 7 0 30 1 29 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-49,qs),
(188,0,o),
(264,0,qs),
(507,0,ls),
(555,0,o),
(547,44,qs),
(546,49,o),
(541,49,qs),
(516,50,o),
(500,64,qs),
(461,98,o),
(415,204,qs),
(341,368,o),
(204,368,qs),
(153,368,o),
(113,342,qs),
(80,319,o),
(64,282,qs),
(61,274,o),
(62,268,qs),
(64,257,o),
(74,257,qs),
(80,257,o),
(84,261,qs),
(87,263,o),
(92,268,qs),
(102,277,o),
(105,281,q),
(152,321,o),
(205,321,qs),
(304,321,o),
(363,197,qs),
(424,69,o),
(452,49,q),
(258,49,ls),
(169,49,o),
(120,-1,qs),
(67,-54,o),
(80,-141,qs),
(91,-214,o),
(145,-265,qs),
(212,-329,o),
(318,-331,qs),
(389,-333,o),
(438,-310,qs),
(479,-291,o),
(494,-261,qs),
(497,-255,o),
(496,-247,qs),
(495,-238,o),
(485,-238,qs),
(482,-238,o),
(475,-241,q),
(443,-261,o),
(414,-271,qs),
(374,-286,o),
(314,-284,qs),
(244,-282,o),
(148,-205,o),
(137,-142,qs),
(127,-88,o)
);
},
{
closed = 1;
nodes = (
(296,-96,o),
(298,-111,qs),
(301,-126,o),
(284,-146,o),
(270,-146,qs),
(256,-146,o),
(232,-126,o),
(230,-111,qs),
(227,-96,o),
(243,-76,o),
(258,-76,qs),
(272,-76,o)
);
},
{
closed = 1;
nodes = (
(394,-96,o),
(396,-111,qs),
(399,-126,o),
(382,-146,o),
(368,-146,qs),
(353,-146,o),
(330,-126,o),
(328,-111,qs),
(325,-96,o),
(341,-76,o),
(355,-76,qs),
(370,-76,o)
);
},
{
closed = 1;
nodes = (
(359,-177,o),
(362,-192,qs),
(364,-207,o),
(348,-227,o),
(333,-227,qs),
(319,-227,o),
(296,-207,o),
(293,-192,qs),
(291,-177,o),
(307,-157,o),
(321,-157,qs),
(336,-157,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 114 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 0 14 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 10 128 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 0 14 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 10 128 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 8 14 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
86 85 74 73 62 61 92 90 85 96 86 96 80 78 73 84 74 84 68 66 61 72 62 72 51 20 38 38 35 38 38 36 34 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,451,o),
(206,451,qs),
(88,451,ls),
(85,451,o),
(84,454,qs),
(83,457,ls),
(79,481,o),
(112,481,qs),
(123,481,l),
(98,621,ls),
(91,661,o),
(119,661,qs),
(122,661,ls),
(124,661,o),
(125,657,qs),
(135,599,l),
(182,599,ls),
(262,599,o),
(272,525,qs),
(277,490,o)
);
},
{
closed = 1;
nodes = (
(157,481,l),
(206,481,ls),
(246,481,o),
(239,525,qs),
(233,569,o),
(190,569,qs),
(141,569,l)
);
},
{
closed = 1;
nodes = (
(354,52,qs),
(317,0,o),
(241,0,qs),
(115,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(240,49,ls),
(289,49,o),
(336,118,o),
(325,176,qs),
(298,321,o),
(192,321,qs),
(161,322,o),
(130,307,qs),
(123,303,o),
(119,303,qs),
(109,303,o),
(108,313,qs),
(106,326,o),
(120,339,qs),
(147,368,o),
(194,368,qs),
(260,368,o),
(308,320,qs),
(361,267,o),
(377,174,qs),
(389,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 0 1 133 0 7 8 9 8 7 9 128 0 0 11 1 4 2 0 4 105 5 1 2 0 3 6 2 3 104 0 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 21 20 54 51 48 45 42 40 37 36 32 30 25 23 20 26 21 26 51 34 35 33 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,463,o),
(39,463,qs),
(50,463,l),
(25,602,ls),
(18,642,o),
(46,642,qs),
(48,642,ls),
(51,642,o),
(52,638,qs),
(62,581,l),
(108,581,ls),
(189,581,o),
(199,507,qs),
(204,472,o),
(168,432,o),
(133,432,qs),
(15,432,ls),
(11,432,o),
(11,436,q),
(10,438,l)
);
},
{
closed = 1;
nodes = (
(83,463,l),
(133,463,ls),
(173,463,o),
(166,507,qs),
(160,551,o),
(117,551,qs),
(68,551,l)
);
},
{
closed = 1;
nodes = (
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
0 2 1 2 133 0 6 0 8 0 6 8 128 0 8 7 0 8 7 126 0 1 10 1 4 3 1 4 105 5 1 3 0 0 6 3 0 104 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 21 20 48 46 42 40 38 36 31 29 25 23 20 26 21 26 34 35 35 49 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,547,o),
(42,547,qs),
(67,547,o),
(82,522,qs),
(112,471,l),
(126,522,ls),
(132,547,o),
(155,547,qs),
(162,547,o),
(161,541,qs),
(136,439,ls),
(135,433,o),
(128,433,qs),
(108,433,ls),
(103,433,o),
(98,439,q),
(37,541,ls)
);
},
{
closed = 1;
nodes = (
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 5 0 3 5 128 0 5 4 0 5 4 126 0 4 0 6 4 6 101 0 0 0 1 97 2 1 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 5 0 3 5 128 0 5 4 0 5 4 126 2 1 1 0 0 3 1 0 105 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 34 37 36 36 35 49 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o)
);
},
{
closed = 1;
nodes = (
(174,-306,o),
(177,-322,qs),
(180,-338,o),
(162,-360,o),
(147,-360,qs),
(131,-360,o),
(106,-338,o),
(103,-322,qs),
(101,-306,o),
(118,-284,o),
(133,-284,qs),
(149,-284,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 24 23 1 0 30 28 23 34 24 34 17 15 11 9 5 3 0 22 1 22 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls)
);
},
{
closed = 1;
nodes = (
(199,-298,qs),
(174,-399,ls),
(172,-406,o),
(166,-406,qs),
(146,-406,ls),
(140,-406,o),
(136,-399,qs),
(75,-298,ls),
(71,-292,o),
(80,-292,qs),
(105,-292,o),
(120,-317,qs),
(150,-368,l),
(163,-317,ls),
(170,-292,o),
(193,-292,qs),
(200,-292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
26 1 6 4 1 76 0 0 2 0 133 0 2 1 2 133 5 7 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 24 23 35 33 30 28 23 39 24 39 36 34 37 34 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,522,o),
(63,537,qs),
(60,552,o),
(76,572,o),
(91,572,qs),
(105,572,o),
(129,552,o),
(131,537,qs),
(134,522,o),
(117,502,o),
(103,502,qs),
(89,502,o)
);
},
{
closed = 1;
nodes = (
(31,441,o),
(28,456,qs),
(26,471,o),
(42,491,o),
(56,491,qs),
(71,491,o),
(94,471,o),
(97,456,qs),
(99,441,o),
(83,421,o),
(68,421,qs),
(54,421,o)
);
},
{
closed = 1;
nodes = (
(129,441,o),
(126,456,qs),
(124,471,o),
(140,491,o),
(154,491,qs),
(169,491,o),
(192,471,o),
(195,456,qs),
(197,441,o),
(181,421,o),
(166,421,qs),
(152,421,o)
);
},
{
closed = 1;
nodes = (
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 0 8 6 8 101 10 1 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 8 8 6 89 13 1 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 53 51 47 45 41 39 36 58 37 58 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 238;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(800,60,qs),
(766,2,o),
(691,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(561,49,l),
(506,93,o),
(490,183,qs),
(477,257,o),
(511,309,qs),
(550,368,o),
(628,368,qs),
(694,368,o),
(745,322,qs),
(801,270,o),
(816,183,qs),
(829,110,o)
);
},
{
closed = 1;
nodes = (
(752,85,qs),
(776,123,o),
(765,184,qs),
(754,244,o),
(678,321,o),
(629,321,qs),
(582,321,o),
(558,285,qs),
(531,245,o),
(542,184,qs),
(552,127,o),
(634,49,o),
(683,49,qs),
(730,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 5 1 5 2 1 128 0 0 0 5 2 0 5 105 6 4 2 1 1 3 95 0 3 3 24 3 78 33 32 40 38 32 45 33 45 55 22 37 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(552,546,o),
(550,561,qs),
(547,575,o),
(563,595,o),
(578,595,qs),
(592,595,o),
(616,575,o),
(618,561,qs),
(621,545,o),
(604,525,o),
(590,525,qs),
(575,525,o)
);
},
{
closed = 1;
nodes = (
(518,465,o),
(515,479,qs),
(513,494,o),
(529,514,o),
(543,514,qs),
(558,514,o),
(581,494,o),
(584,479,qs),
(586,464,o),
(570,444,o),
(555,444,qs),
(541,444,o)
);
},
{
closed = 1;
nodes = (
(627,514,o),
(641,514,qs),
(656,514,o),
(679,494,o),
(681,479,qs),
(684,464,o),
(668,444,o),
(653,444,qs),
(639,444,o),
(616,465,o),
(613,479,qs),
(611,494,o)
);
},
{
closed = 1;
nodes = (
(800,60,qs),
(766,2,o),
(691,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(561,49,l),
(506,93,o),
(490,183,qs),
(477,257,o),
(511,309,qs),
(550,368,o),
(628,368,qs),
(694,368,o),
(745,322,qs),
(801,270,o),
(816,183,qs),
(829,110,o)
);
},
{
closed = 1;
nodes = (
(752,85,qs),
(776,123,o),
(765,184,qs),
(754,244,o),
(678,321,o),
(629,321,qs),
(582,321,o),
(558,285,qs),
(531,245,o),
(542,184,qs),
(552,127,o),
(634,49,o),
(683,49,qs),
(730,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
0 8 11 7 11 8 7 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 8 6 11 105 14 10 2 7 7 9 95 0 9 9 24 9 78 69 68 13 12 1 0 76 74 68 81 69 81 65 62 55 54 48 46 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 851;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(712,50,qs),
(675,0,o),
(603,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(595,49,ls),
(638,49,o),
(662,75,qs),
(694,109,o),
(681,176,qs),
(672,232,o),
(599,302,o),
(550,302,qs),
(351,302,ls),
(311,302,o),
(305,334,qs),
(303,349,ls),
(299,369,o),
(311,379,qs),
(520,554,ls),
(524,557,o),
(528,555,qs),
(544,544,o),
(545,512,o),
(530,499,qs),
(359,355,ls),
(357,353,o),
(357,352,qs),
(357,349,o),
(361,349,qs),
(548,349,ls),
(706,349,o),
(734,173,qs),
(747,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 0 0 1 3 0 1 103 0 2 2 4 95 0 4 4 24 4 78 55 22 53 63 33 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,484,o),
(275,499,qs),
(273,504,o),
(272,513,qs),
(270,524,o),
(281,532,qs),
(444,668,l),
(449,670,o),
(451,668,qs),
(462,660,o),
(464,649,qs),
(466,637,o),
(449,623,qs),
(293,495,ls)
);
},
{
closed = 1;
nodes = (
(712,50,qs),
(675,0,o),
(603,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(595,49,ls),
(638,49,o),
(662,75,qs),
(694,109,o),
(681,176,qs),
(672,232,o),
(599,302,o),
(550,302,qs),
(351,302,ls),
(311,302,o),
(305,334,qs),
(303,349,ls),
(299,369,o),
(311,379,qs),
(520,554,ls),
(524,557,o),
(528,555,q),
(543,544,o),
(545,512,o),
(530,499,qs),
(359,355,ls),
(357,353,o),
(357,352,qs),
(357,349,o),
(361,349,qs),
(548,349,ls),
(706,349,o),
(734,173,qs),
(747,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 1 0 133 0 4 2 3 2 4 3 128 0 1 0 2 4 1 2 104 0 3 3 5 95 0 5 5 24 5 78 55 22 53 63 41 36 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,752,o),
(372,752,qs),
(397,752,o),
(413,727,qs),
(443,677,l),
(456,727,ls),
(462,752,o),
(485,752,qs),
(492,752,o),
(492,747,q),
(467,645,ls),
(465,638,o),
(459,638,qs),
(439,638,ls),
(433,638,o),
(429,645,qs),
(368,747,l)
);
},
{
closed = 1;
nodes = (
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l),
(710,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
11 6 2 0 1 56 1 8 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 101 0 4 4 23 77 0 3 3 8 97 0 8 8 24 8 78 36 40 24 38 52 34 36 21 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,680,o),
(481,664,qs),
(484,648,o),
(466,626,o),
(450,626,qs),
(435,626,o),
(410,648,o),
(407,664,qs),
(404,680,o),
(422,702,o),
(437,702,qs),
(453,702,o)
);
},
{
closed = 1;
nodes = (
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(579,42,ls),
(598,-70,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 101 0 3 3 23 3 78 13 12 1 0 38 37 29 27 21 18 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,728,o),
(395,743,qs),
(393,758,o),
(409,778,o),
(423,778,qs),
(438,778,o),
(461,758,o),
(464,743,qs),
(466,728,o),
(450,708,o),
(435,708,qs),
(421,708,o)
);
},
{
closed = 1;
nodes = (
(363,647,o),
(361,662,qs),
(359,677,o),
(375,697,o),
(389,697,qs),
(403,697,o),
(427,677,o),
(429,662,qs),
(432,647,o),
(416,627,o),
(401,627,qs),
(387,627,o)
);
},
{
closed = 1;
nodes = (
(461,647,o),
(459,662,qs),
(456,677,o),
(472,697,o),
(487,697,qs),
(501,697,o),
(525,677,o),
(527,662,qs),
(530,647,o),
(513,627,o),
(499,627,qs),
(484,627,o)
);
},
{
closed = 1;
nodes = (
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(579,42,ls),
(598,-70,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 101 0 7 7 23 7 78 37 36 25 24 13 12 1 0 62 61 53 51 45 42 36 70 37 70 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(579,42,ls),
(599,-71,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 1 0 26 25 17 15 9 7 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,47,qs),
(367,-9,o),
(289,-9,qs),
(221,-9,o),
(168,32,qs),
(104,82,o),
(92,168,qs),
(73,301,o),
(201,359,q),
(185,372,o),
(173,388,q),
(152,423,o),
(178,440,qs),
(181,442,o),
(183,442,qs),
(187,443,o),
(191,436,qs),
(216,397,o),
(271,360,qs),
(286,350,o),
(294,345,qs),
(298,342,o),
(306,336,qs),
(312,332,o),
(315,330,qs),
(413,254,o),
(423,168,qs),
(431,93,o)
);
},
{
closed = 1;
nodes = (
(351,69,qs),
(382,107,o),
(370,171,qs),
(359,225,o),
(308,270,qs),
(284,292,o),
(240,324,q),
(125,279,o),
(145,166,qs),
(155,111,o),
(232,38,o),
(280,38,qs),
(326,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 18 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 40 29 40 25 23 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,526,o),
(83,518,q),
(82,517,o),
(79,516,qs),
(75,514,o),
(74,514,qs),
(68,514,o),
(66,527,qs),
(62,551,o),
(90,556,q),
(72,576,o),
(67,602,qs),
(62,634,o),
(94,675,o),
(124,675,qs),
(146,675,o),
(182,651,o),
(187,634,qs),
(190,626,o),
(184,626,qs),
(180,626,o),
(172,631,qs),
(152,642,o),
(136,641,qs),
(99,640,o),
(105,601,qs),
(108,584,o),
(139,559,o),
(157,559,qs),
(194,559,ls),
(221,559,o),
(226,534,qs),
(227,531,ls),
(228,526,o),
(221,526,qs),
(138,526,ls)
);
},
{
closed = 1;
nodes = (
(390,47,qs),
(355,-9,o),
(277,-9,qs),
(209,-9,o),
(156,32,qs),
(92,82,o),
(80,168,qs),
(61,301,o),
(189,359,q),
(173,372,o),
(161,388,q),
(140,423,o),
(166,440,qs),
(169,442,o),
(171,442,qs),
(175,443,o),
(179,436,qs),
(204,397,o),
(259,360,qs),
(274,350,o),
(282,345,qs),
(286,342,o),
(294,336,qs),
(300,332,o),
(303,330,qs),
(401,254,o),
(411,168,qs),
(419,93,o)
);
},
{
closed = 1;
nodes = (
(339,69,qs),
(370,107,o),
(358,171,qs),
(347,225,o),
(296,270,qs),
(272,292,o),
(228,324,q),
(113,279,o),
(133,166,qs),
(143,111,o),
(220,38,o),
(268,38,qs),
(314,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 0 1 69 54 2 7 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 1 2 3 1 128 0 5 0 7 0 5 7 128 0 4 0 2 3 4 2 105 8 1 0 0 1 97 0 1 1 23 77 9 1 7 7 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 5 0 7 0 5 7 128 0 4 0 2 3 4 2 105 9 1 7 0 6 7 6 101 8 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
65 64 1 0 64 76 65 76 61 59 30 28 21 19 16 14 12 10 7 4 0 35 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,47,qs),
(367,-9,o),
(289,-9,qs),
(221,-9,o),
(168,32,qs),
(104,82,o),
(92,168,qs),
(73,301,o),
(201,359,q),
(185,372,o),
(173,388,q),
(152,423,o),
(178,440,qs),
(181,442,o),
(183,442,qs),
(187,443,o),
(191,436,qs),
(216,397,o),
(271,360,qs),
(286,350,o),
(294,345,qs),
(298,342,o),
(306,336,qs),
(312,332,o),
(315,330,qs),
(413,254,o),
(423,168,qs),
(431,93,o)
);
},
{
closed = 1;
nodes = (
(351,69,qs),
(382,107,o),
(370,171,qs),
(359,225,o),
(308,270,qs),
(284,292,o),
(240,324,q),
(125,279,o),
(145,166,qs),
(155,111,o),
(232,38,o),
(280,38,qs),
(326,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 18 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 40 29 40 25 23 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,526,o),
(83,518,q),
(82,517,o),
(79,516,qs),
(75,514,o),
(74,514,qs),
(68,514,o),
(66,527,qs),
(62,551,o),
(90,556,q),
(72,576,o),
(67,602,qs),
(62,634,o),
(94,675,o),
(124,675,qs),
(146,675,o),
(182,651,o),
(187,634,qs),
(190,626,o),
(184,626,qs),
(180,626,o),
(172,631,qs),
(152,642,o),
(136,641,qs),
(99,640,o),
(105,601,qs),
(108,584,o),
(139,559,o),
(157,559,qs),
(194,559,ls),
(221,559,o),
(226,534,qs),
(227,531,ls),
(228,526,o),
(221,526,qs),
(138,526,ls)
);
},
{
closed = 1;
nodes = (
(390,47,qs),
(355,-9,o),
(277,-9,qs),
(209,-9,o),
(156,32,qs),
(92,82,o),
(80,168,qs),
(61,301,o),
(189,359,q),
(173,372,o),
(161,388,q),
(140,423,o),
(166,440,qs),
(169,442,o),
(171,442,qs),
(175,443,o),
(179,436,qs),
(204,397,o),
(259,360,qs),
(274,350,o),
(282,345,qs),
(286,342,o),
(294,336,qs),
(300,332,o),
(303,330,qs),
(401,254,o),
(411,168,qs),
(419,93,o)
);
},
{
closed = 1;
nodes = (
(339,69,qs),
(370,107,o),
(358,171,qs),
(347,225,o),
(296,270,qs),
(272,292,o),
(228,324,q),
(113,279,o),
(133,166,qs),
(143,111,o),
(220,38,o),
(268,38,qs),
(314,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
25 1 0 1 69 54 2 7 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 1 2 3 1 128 0 5 0 7 0 5 7 128 0 4 0 2 3 4 2 105 8 1 0 0 1 97 0 1 1 23 77 9 1 7 7 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 1 2 3 1 128 0 5 0 7 0 5 7 128 0 4 0 2 3 4 2 105 9 1 7 0 6 7 6 101 8 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
65 64 1 0 64 76 65 76 61 59 30 28 21 19 16 14 12 10 7 4 0 35 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,513,o),
(94,513,qs),
(80,513,o),
(57,533,o),
(54,548,qs),
(52,563,o),
(68,583,o),
(82,583,qs),
(97,583,o),
(120,563,o),
(123,548,qs),
(125,533,o)
);
},
{
closed = 1;
nodes = (
(155,533,o),
(152,548,qs),
(150,563,o),
(166,583,o),
(180,583,qs),
(195,583,o),
(218,563,o),
(220,548,qs),
(223,533,o),
(207,513,o),
(192,513,qs),
(178,513,o)
);
},
{
closed = 1;
nodes = (
(387,47,qs),
(352,-9,o),
(274,-9,qs),
(206,-9,o),
(153,32,qs),
(89,82,o),
(77,168,qs),
(59,301,o),
(186,359,q),
(171,372,o),
(158,388,q),
(137,423,o),
(163,440,qs),
(166,442,o),
(168,442,qs),
(172,443,o),
(177,436,qs),
(201,397,o),
(256,360,qs),
(271,350,o),
(279,345,qs),
(283,342,o),
(292,335,qs),
(297,332,o),
(300,330,qs),
(398,254,o),
(408,168,qs),
(416,93,o)
);
},
{
closed = 1;
nodes = (
(336,69,qs),
(367,107,o),
(355,171,qs),
(344,225,o),
(293,270,qs),
(269,292,o),
(225,324,q),
(110,279,o),
(130,166,qs),
(140,111,o),
(217,38,o),
(265,38,qs),
(311,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 42 2 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
53 52 13 12 52 64 53 64 49 47 19 17 12 23 13 23 36 34 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,564,o),
(119,564,qs),
(144,564,o),
(159,539,qs),
(189,488,l),
(203,539,ls),
(209,564,o),
(232,564,qs),
(239,564,o),
(238,558,qs),
(213,457,ls),
(211,450,o),
(205,450,qs),
(185,450,ls),
(180,450,o),
(175,457,qs),
(114,558,ls)
);
},
{
closed = 1;
nodes = (
(447,-91,o),
(433,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-175,o),
(165,-161,qs),
(161,-149,o),
(173,-149,qs),
(178,-149,o),
(184,-151,qs),
(273,-179,o),
(330,-161,qs),
(414,-135,o),
(389,23,q),
(336,-11,o),
(276,-9,qs),
(207,-9,o),
(155,39,qs),
(98,91,o),
(83,178,qs),
(68,258,o),
(102,310,qs),
(140,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(406,220,o),
(427,113,qs),
(445,9,o)
);
},
{
closed = 1;
nodes = (
(379,74,q),
(378,78,ls),
(376,95,o),
(375,103,qs),
(357,206,o),
(325,256,qs),
(284,321,o),
(219,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(134,179,qs),
(145,117,o),
(223,38,o),
(274,38,qs),
(339,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 61 1 7 8 31 1 4 7 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 3 1 0 3 128 0 5 4 6 4 5 6 128 0 6 6 132 0 3 0 8 7 3 8 106 2 1 1 1 23 77 9 1 7 7 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 1 3 1 0 3 128 0 5 4 6 4 5 6 128 0 6 6 132 0 3 0 8 7 3 8 106 9 1 7 0 4 5 7 4 105 2 1 1 1 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 5 4 6 4 5 6 128 0 6 6 132 0 3 0 8 7 3 8 106 9 1 7 4 4 7 89 9 1 7 7 4 97 0 4 7 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
49 48 56 54 48 63 49 63 36 38 38 37 36 36 33 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,464,o),
(109,479,qs),
(106,493,o),
(122,513,o),
(136,513,qs),
(151,513,o),
(175,493,o),
(177,479,qs),
(180,464,o),
(163,443,o),
(149,443,qs),
(134,443,o)
);
},
{
closed = 1;
nodes = (
(209,464,o),
(206,479,qs),
(204,493,o),
(220,513,o),
(234,513,qs),
(249,513,o),
(272,493,o),
(275,479,qs),
(277,464,o),
(261,443,o),
(246,443,qs),
(232,443,o)
);
},
{
closed = 1;
nodes = (
(447,-91,o),
(433,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-175,o),
(165,-161,qs),
(161,-149,o),
(173,-149,qs),
(178,-149,o),
(184,-151,qs),
(273,-179,o),
(330,-161,qs),
(414,-135,o),
(389,23,q),
(336,-11,o),
(276,-9,qs),
(207,-9,o),
(155,39,qs),
(98,91,o),
(83,178,qs),
(68,258,o),
(102,310,qs),
(140,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(406,220,o),
(427,113,qs),
(445,9,o)
);
},
{
closed = 1;
nodes = (
(379,74,q),
(378,78,ls),
(376,95,o),
(375,103,qs),
(357,206,o),
(325,256,qs),
(284,321,o),
(219,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(134,179,qs),
(145,117,o),
(223,38,o),
(274,38,qs),
(339,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
68 1 8 9 38 1 5 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 7 5 6 7 128 0 7 7 132 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 8 4 9 105 12 1 8 8 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 7 5 6 7 128 0 7 7 132 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 8 4 9 105 12 1 8 5 5 8 89 12 1 8 8 5 97 0 5 8 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 55 13 12 1 0 63 61 55 70 56 70 51 49 45 43 37 35 29 27 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,-154,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(497,-167,o),
(546,-131,qs),
(604,-89,o),
(604,-16,qs),
(604,5,o),
(566,28,o),
(515,37,qs),
(471,44,o),
(459,47,qs),
(313,79,o),
(292,201,qs),
(279,273,o),
(320,320,qs),
(362,368,o),
(435,368,qs),
(498,368,o),
(536,343,qs),
(562,325,o),
(565,308,qs),
(568,294,o),
(557,294,qs),
(553,294,o),
(546,298,qs),
(506,321,o),
(450,321,qs),
(401,321,o),
(371,295,qs),
(332,262,o),
(343,201,qs),
(350,162,o),
(423,101,o),
(476,91,qs),
(567,73,o),
(592,64,qs),
(654,42,o),
(656,-7,qs),
(661,-91,o),
(597,-150,qs),
(523,-217,o),
(404,-214,qs),
(293,-212,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 50 49 41 39 26 24 20 18 16 14 0 58 1 58 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,315,o),
(125,322,qs),
(64,423,ls),
(60,429,o),
(68,429,qs),
(94,429,o),
(109,404,qs),
(139,353,l),
(152,404,ls),
(158,429,o),
(182,429,qs),
(188,429,o),
(188,423,q),
(163,322,ls),
(161,315,o),
(155,315,qs),
(135,315,ls)
);
},
{
closed = 1;
nodes = (
(594,-150,qs),
(520,-219,o),
(402,-214,qs),
(290,-210,o),
(212,-153,qs),
(122,-86,o),
(100,34,qs),
(90,92,o),
(115,196,o),
(146,224,q),
(152,231,o),
(158,231,qs),
(170,231,o),
(172,219,qs),
(172,216,o),
(170,210,q),
(133,140,o),
(148,45,qs),
(165,-46,o),
(236,-103,qs),
(314,-167,o),
(420,-167,qs),
(495,-167,o),
(544,-131,qs),
(601,-89,o),
(602,-16,qs),
(602,5,o),
(564,28,o),
(513,37,qs),
(469,44,o),
(457,47,qs),
(311,79,o),
(289,201,qs),
(277,273,o),
(317,320,qs),
(359,368,o),
(433,368,qs),
(495,368,o),
(533,343,qs),
(559,325,o),
(562,308,qs),
(565,294,o),
(555,294,qs),
(551,294,o),
(544,298,qs),
(504,321,o),
(447,321,qs),
(398,321,o),
(368,295,qs),
(330,262,o),
(340,201,qs),
(347,162,o),
(421,101,o),
(474,91,qs),
(565,73,o),
(589,64,qs),
(651,42,o),
(654,-7,qs),
(658,-91,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
3 1 5 0 8 1 2 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
3 1 5 0 8 1 3 5 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
1 1 0 5 0 133 0 4 2 7 2 4 7 128 0 7 6 2 7 6 126 0 5 3 9 2 2 4 5 2 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
1 1 0 5 0 133 9 1 2 3 4 3 2 4 128 0 4 7 3 4 7 126 0 7 6 3 7 6 126 0 5 0 3 2 5 3 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
0 0 73 71 63 62 54 52 39 37 33 31 29 27 0 16 0 15 36 21 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,0,o),
(162,34,qs),
(100,80,o),
(84,173,qs),
(70,250,o),
(105,298,qs),
(142,349,o),
(214,349,qs),
(271,349,ls),
(289,349,o),
(284,363,q),
(281,378,ls),
(267,455,o),
(297,505,qs),
(333,564,o),
(417,564,qs),
(488,564,o),
(537,520,qs),
(585,477,o),
(602,403,qs),
(602,402,o),
(602,399,q),
(603,398,o),
(603,397,qs),
(606,378,o),
(589,354,o),
(572,354,qs),
(567,354,ls),
(560,354,o),
(559,362,q),
(558,364,o),
(557,374,qs),
(545,443,o),
(473,517,o),
(420,517,qs),
(311,517,o),
(334,374,qs),
(337,350,ls),
(345,302,o),
(295,302,qs),
(226,302,ls),
(182,302,o),
(156,272,qs),
(124,237,o),
(135,176,qs),
(145,115,o),
(213,49,o),
(263,49,qs),
(662,49,ls),
(683,49,o),
(714,27,o),
(716,11,qs),
(717,7,ls),
(718,0,o),
(711,0,qs),
(270,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 6 3 4 6 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 6 3 4 6 128 0 5 0 3 4 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 48 45 40 38 29 26 21 19 16 13 8 5 0 55 1 54 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,431,o),
(50,423,q),
(49,423,o),
(47,422,qs),
(42,420,o),
(41,420,qs),
(35,420,o),
(33,432,qs),
(29,456,o),
(57,462,q),
(39,482,o),
(34,507,qs),
(29,539,o),
(61,581,o),
(91,581,qs),
(113,581,o),
(149,557,o),
(154,539,q),
(157,532,o),
(151,532,qs),
(147,532,o),
(139,536,qs),
(119,547,o),
(103,547,qs),
(66,545,o),
(72,507,qs),
(75,490,o),
(106,465,o),
(124,465,qs),
(161,465,ls),
(188,465,o),
(193,439,q),
(194,437,l),
(195,431,o),
(188,431,qs),
(105,431,ls)
);
},
{
closed = 1;
nodes = (
(711,0,o),
(704,0,qs),
(263,0,ls),
(202,0,o),
(156,34,qs),
(94,80,o),
(77,173,qs),
(63,250,o),
(98,298,qs),
(136,349,o),
(208,349,qs),
(264,349,ls),
(281,349,o),
(277,363,qs),
(274,378,ls),
(260,455,o),
(290,505,qs),
(326,564,o),
(411,564,qs),
(481,564,o),
(530,520,qs),
(578,477,o),
(595,403,q),
(595,401,o),
(596,398,qs),
(596,397,ls),
(600,378,o),
(582,354,o),
(565,354,qs),
(560,354,ls),
(554,354,o),
(553,362,q),
(551,365,o),
(550,374,qs),
(538,443,o),
(467,517,o),
(413,517,qs),
(305,517,o),
(327,374,qs),
(331,350,ls),
(338,302,o),
(289,302,qs),
(220,302,ls),
(176,302,o),
(149,272,qs),
(117,237,o),
(128,176,qs),
(139,115,o),
(206,49,o),
(256,49,qs),
(656,49,ls),
(677,49,o),
(708,27,o),
(710,11,qs),
(710,7,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
25 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 3 2 8 2 3 8 128 0 5 0 9 0 5 9 128 0 9 11 0 9 11 126 0 4 0 2 3 4 2 105 0 1 13 1 0 5 1 0 103 0 11 0 7 6 11 7 103 0 8 8 10 97 0 10 10 23 77 0 6 6 12 95 0 12 12 24 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 8 2 3 8 128 0 5 0 9 0 5 9 128 0 9 11 0 9 11 126 0 4 0 2 3 4 2 105 0 10 0 8 1 10 8 105 0 1 13 1 0 5 1 0 103 0 11 0 7 6 11 7 103 0 6 6 12 95 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
1 0 89 86 80 77 72 70 62 59 54 52 49 46 41 38 30 28 21 19 16 14 12 10 7 4 0 35 1 34 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 721;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,47,qs),
(367,-9,o),
(289,-9,qs),
(221,-9,o),
(168,32,qs),
(104,82,o),
(92,168,qs),
(73,301,o),
(201,359,q),
(185,372,o),
(173,388,q),
(152,423,o),
(178,440,qs),
(181,442,o),
(183,442,qs),
(187,443,o),
(191,436,qs),
(216,397,o),
(271,360,qs),
(286,350,o),
(294,345,qs),
(298,342,o),
(306,336,qs),
(312,332,o),
(315,330,qs),
(413,254,o),
(423,168,qs),
(431,93,o)
);
},
{
closed = 1;
nodes = (
(351,69,qs),
(382,107,o),
(370,171,qs),
(359,225,o),
(308,270,qs),
(284,292,o),
(240,324,q),
(125,279,o),
(145,166,qs),
(155,111,o),
(232,38,o),
(280,38,qs),
(326,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 18 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 40 29 40 25 23 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,530,o),
(92,545,qs),
(89,560,o),
(105,579,o),
(120,579,qs),
(134,579,o),
(158,560,o),
(160,545,qs),
(163,530,o),
(146,509,o),
(132,509,qs),
(117,509,o)
);
},
{
closed = 1;
nodes = (
(60,449,o),
(57,464,qs),
(55,478,o),
(71,498,o),
(85,498,qs),
(100,498,o),
(123,478,o),
(126,464,qs),
(128,449,o),
(112,428,o),
(97,428,qs),
(83,428,o)
);
},
{
closed = 1;
nodes = (
(158,449,o),
(155,464,qs),
(153,478,o),
(169,498,o),
(183,498,qs),
(198,498,o),
(221,478,o),
(223,464,qs),
(226,449,o),
(210,428,o),
(195,428,qs),
(181,428,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,99,qs),
(79,201,o),
(79,354,qs),
(79,420,o),
(103,464,qs),
(133,519,o),
(191,519,qs),
(301,519,o),
(356,430,qs),
(401,355,o),
(401,196,qs),
(401,121,o),
(335,37,o),
(277,37,qs),
(201,37,o)
);
},
{
closed = 1;
nodes = (
(400,38,qs),
(451,95,o),
(451,200,qs),
(451,349,o),
(407,432,qs),
(334,567,o),
(188,567,qs),
(117,567,o),
(75,511,qs),
(30,450,o),
(30,346,qs),
(30,227,o),
(92,112,qs),
(157,-10,o),
(284,-10,qs),
(355,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
16 15 1 0 24 22 15 30 16 30 8 6 0 14 1 14 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,47,o),
(94,44,qs),
(94,43,o),
(94,41,qs),
(100,6,ls),
(101,0,o),
(106,0,qs),
(366,0,ls),
(373,0,o),
(373,5,qs),
(373,6,o),
(373,7,qs),
(371,18,ls),
(366,47,o),
(336,47,qs),
(254,47,l),
(173,508,ls),
(165,556,o),
(129,556,qs),
(121,556,ls),
(100,556,o),
(76,547,qs),
(18,524,ls),
(12,522,o),
(12,516,qs),
(12,515,o),
(12,513,qs),
(19,474,ls),
(20,470,o),
(23,470,qs),
(24,470,o),
(25,471,q),
(122,509,l),
(203,47,l),
(98,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 2 1 3 1 0 30 22 2 2 1 2 76 0 0 0 23 77 4 3 2 1 1 2 95 0 2 2 24 2 78 0 0 0 34 0 34 37 34 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,149,o),
(235,207,qs),
(303,263,o),
(356,340,o),
(356,383,qs),
(356,446,o),
(318,497,qs),
(266,567,o),
(159,567,qs),
(101,567,o),
(52,542,qs),
(8,520,o),
(8,503,qs),
(8,496,o),
(11,489,qs),
(19,474,ls),
(23,466,o),
(28,466,qs),
(33,466,o),
(38,470,qs),
(92,519,o),
(164,519,qs),
(224,519,o),
(262,486,qs),
(306,447,o),
(306,380,qs),
(306,340,o),
(266,280,o),
(210,238,qs),
(142,186,o),
(83,98,o),
(83,46,qs),
(83,0,o),
(94,0,qs),
(421,0,ls),
(427,0,o),
(427,5,qs),
(427,6,o),
(427,7,qs),
(425,18,ls),
(420,47,o),
(390,47,qs),
(133,47,l),
(134,97,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 23 77 0 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
39 34 42 53 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,395,qs),
(360,468,o),
(316,513,qs),
(263,567,o),
(161,567,qs),
(111,567,o),
(13,524,o),
(13,502,qs),
(13,496,o),
(16,489,qs),
(24,474,ls),
(28,466,o),
(32,466,qs),
(37,466,o),
(44,472,qs),
(106,519,o),
(169,519,qs),
(311,519,o),
(311,394,qs),
(311,316,o),
(211,316,qs),
(123,316,ls),
(116,316,o),
(116,310,qs),
(116,308,l),
(118,298,ls),
(123,270,o),
(153,270,qs),
(205,270,ls),
(283,270,o),
(372,198,o),
(372,136,qs),
(372,93,o),
(306,37,o),
(255,37,qs),
(174,37,o),
(112,98,qs),
(86,125,o),
(80,125,qs),
(70,125,o),
(70,111,qs),
(70,79,o),
(113,42,qs),
(173,-10,o),
(266,-10,qs),
(326,-10,o),
(370,23,qs),
(424,63,o),
(424,129,qs),
(424,194,o),
(351,279,o),
(285,291,q),
(360,324,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 34 52 52 35 20 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,0,o),
(339,0,qs),
(380,0,ls),
(384,0,o),
(384,4,qs),
(384,5,o),
(384,6,qs),
(361,139,l),
(427,139,ls),
(434,139,o),
(434,143,qs),
(434,145,o),
(433,146,q),
(432,157,ls),
(427,186,o),
(396,186,qs),
(352,186,l),
(294,518,ls),
(287,556,o),
(256,556,qs),
(241,556,ls),
(225,556,o),
(217,539,qs),
(47,202,ls),
(41,190,o),
(41,182,qs),
(41,178,o),
(42,171,qs),
(47,145,ls),
(48,139,o),
(53,139,qs),
(310,139,l),
(333,6,ls)
);
},
{
closed = 1;
nodes = (
(301,186,l),
(91,186,l),
(246,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
35 1 2 1 1 76 5 1 2 3 1 0 4 2 0 104 0 1 1 23 77 0 4 4 24 4 78 19 21 37 34 57 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,508,o),
(315,513,qs),
(315,514,o),
(315,516,qs),
(313,527,ls),
(308,556,o),
(278,556,qs),
(16,556,ls),
(12,556,o),
(12,552,qs),
(12,551,o),
(12,549,qs),
(61,276,ls),
(62,269,o),
(67,269,qs),
(68,269,o),
(71,270,qs),
(135,298,o),
(208,298,qs),
(279,298,o),
(318,260,qs),
(360,219,o),
(360,139,qs),
(360,94,o),
(295,37,o),
(243,37,qs),
(165,37,o),
(104,98,qs),
(77,125,o),
(72,125,qs),
(62,125,o),
(62,111,qs),
(62,78,o),
(105,40,qs),
(164,-10,o),
(252,-10,qs),
(315,-10,o),
(359,25,qs),
(411,67,o),
(411,136,qs),
(411,226,o),
(364,280,qs),
(309,344,o),
(200,344,qs),
(157,344,o),
(101,329,q),
(69,508,l),
(308,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 35 2 6 5 1 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 3 0 1 3 1 101 7 1 6 6 5 95 0 5 5 23 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 57 37 35 20 38 34 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,512,o),
(223,528,qs),
(223,567,o),
(193,567,qs),
(186,567,o),
(182,558,qs),
(89,340,ls),
(55,260,o),
(55,206,qs),
(55,119,o),
(103,60,qs),
(160,-10,o),
(256,-10,qs),
(320,-10,o),
(368,34,qs),
(422,84,o),
(422,147,qs),
(422,348,o),
(228,348,qs),
(177,348,o),
(144,328,q),
(216,497,ls)
);
},
{
closed = 1;
nodes = (
(149,78,qs),
(106,122,o),
(106,198,qs),
(106,245,o),
(169,301,o),
(223,301,qs),
(302,301,o),
(338,263,qs),
(371,228,o),
(371,152,qs),
(371,114,o),
(340,80,qs),
(302,37,o),
(249,37,qs),
(188,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 106 0 2 2 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
23 22 31 29 22 36 23 36 39 36 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,5,ls),
(162,0,o),
(167,0,qs),
(206,0,ls),
(217,0,o),
(220,11,qs),
(354,478,ls),
(359,493,o),
(359,503,qs),
(359,509,o),
(357,518,qs),
(356,527,ls),
(351,556,o),
(321,556,qs),
(5,556,ls),
(1,556,o),
(1,552,qs),
(1,551,o),
(1,549,qs),
(7,514,ls),
(8,508,o),
(13,508,qs),
(308,508,l),
(162,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 23 77 0 2 2 24 2 78 40 54 16 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,274,o),
(228,274,qs),
(288,274,o),
(331,238,qs),
(383,196,o),
(383,129,qs),
(383,86,o),
(319,36,o),
(264,36,qs),
(202,36,o),
(162,71,qs),
(116,110,o),
(116,176,qs),
(116,220,o)
);
},
{
closed = 1;
nodes = (
(141,519,o),
(184,519,qs),
(246,519,o),
(318,455,o),
(318,400,qs),
(318,366,o),
(262,319,o),
(221,319,qs),
(165,319,o),
(86,389,o),
(86,438,qs),
(86,474,o)
);
},
{
closed = 1;
nodes = (
(66,179,qs),
(66,98,o),
(115,47,qs),
(172,-11,o),
(271,-11,qs),
(338,-11,o),
(382,21,qs),
(434,58,o),
(434,122,qs),
(434,195,o),
(402,235,qs),
(372,272,o),
(295,297,q),
(367,332,o),
(367,399,qs),
(367,466,o),
(323,512,qs),
(270,567,o),
(177,567,qs),
(117,567,o),
(37,499,o),
(37,448,qs),
(37,341,o),
(152,297,q),
(66,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 0 2 1 105 0 3 3 4 97 0 4 4 23 77 0 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 0 5 0 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
44 38 36 36 37 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,43,o),
(222,28,qs),
(222,-10,o),
(250,-10,qs),
(258,-10,o),
(262,-1,qs),
(355,217,ls),
(389,298,o),
(389,350,qs),
(389,442,o),
(341,499,qs),
(284,567,o),
(178,567,qs),
(113,567,o),
(71,529,qs),
(23,486,o),
(23,415,qs),
(23,319,o),
(71,267,qs),
(123,209,o),
(228,209,qs),
(273,209,o),
(301,232,q),
(228,58,ls)
);
},
{
closed = 1;
nodes = (
(74,330,o),
(74,411,qs),
(74,460,o),
(134,519,o),
(185,519,qs),
(254,519,o),
(294,481,qs),
(338,439,o),
(338,358,qs),
(338,310,o),
(279,256,o),
(228,256,qs),
(148,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 0 2 3 0 105 0 4 4 1 97 0 1 1 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 0 2 3 0 105 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 134 0 1 0 4 3 1 4 105 5 1 3 0 0 3 89 5 1 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 32 30 24 36 25 36 39 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,180,o),
(309,186,qs),
(315,219,ls),
(315,220,o),
(315,221,qs),
(315,225,o),
(311,225,qs),
(-2,225,ls),
(-7,225,o),
(-8,219,qs),
(-14,186,ls),
(-14,185,o),
(-14,184,qs),
(-14,180,o),
(-10,180,qs),
(303,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
10 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 38 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,180,o),
(623,186,qs),
(629,219,ls),
(629,220,o),
(629,221,qs),
(629,225,o),
(625,225,qs),
(-2,225,ls),
(-7,225,o),
(-8,219,qs),
(-14,186,ls),
(-14,185,o),
(-14,184,qs),
(-14,180,o),
(-10,180,qs),
(617,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
10 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 38 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,521,qs),
(152,537,o),
(152,548,qs),
(152,551,o),
(146,562,o),
(144,562,qs),
(143,562,o),
(142,561,qs),
(105,537,o),
(51,460,o),
(51,430,qs),
(51,415,o),
(73,391,o),
(88,391,qs),
(107,391,o),
(134,419,o),
(134,438,qs),
(134,469,o),
(106,476,q),
(115,495,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 74 0 0 0 118 36 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 122;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,432,qs),
(50,416,o),
(50,405,qs),
(50,402,o),
(56,391,o),
(58,391,qs),
(59,391,o),
(60,392,qs),
(97,416,o),
(151,493,o),
(151,522,qs),
(151,538,o),
(128,562,o),
(114,562,qs),
(95,562,o),
(68,534,o),
(68,514,qs),
(68,484,o),
(96,477,q),
(87,458,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 73 0 0 0 39 0 78 36 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 121;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-17,-61,qs),
(-32,-78,o),
(-32,-88,qs),
(-32,-92,o),
(-26,-102,o),
(-24,-102,qs),
(-23,-102,o),
(-22,-101,qs),
(15,-77,o),
(69,-1,o),
(69,29,qs),
(69,44,o),
(46,68,o),
(32,68,qs),
(13,68,o),
(-14,41,o),
(-14,21,qs),
(-14,-9,o),
(14,-16,q),
(5,-35,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 73 0 0 0 118 36 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 127;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,521,qs),
(152,537,o),
(152,548,qs),
(152,551,o),
(146,562,o),
(144,562,qs),
(143,562,o),
(142,561,qs),
(105,537,o),
(51,460,o),
(51,430,qs),
(51,415,o),
(73,391,o),
(88,391,qs),
(107,391,o),
(134,419,o),
(134,438,qs),
(134,469,o),
(106,476,q),
(115,495,o)
);
},
{
closed = 1;
nodes = (
(285,521,qs),
(300,537,o),
(300,548,qs),
(300,551,o),
(294,562,o),
(292,562,qs),
(291,562,o),
(290,561,qs),
(253,537,o),
(199,460,o),
(199,430,qs),
(199,415,o),
(221,391,o),
(236,391,qs),
(255,391,o),
(282,419,o),
(282,438,qs),
(282,469,o),
(254,476,q),
(263,495,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
31 11 2 0 74 1 1 0 0 118 26 24 36 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,432,qs),
(50,416,o),
(50,405,qs),
(50,402,o),
(56,391,o),
(58,391,qs),
(59,391,o),
(60,392,qs),
(97,416,o),
(151,493,o),
(151,522,qs),
(151,538,o),
(128,562,o),
(114,562,qs),
(95,562,o),
(68,534,o),
(68,514,qs),
(68,484,o),
(96,477,q),
(87,458,o)
);
},
{
closed = 1;
nodes = (
(213,432,qs),
(198,416,o),
(198,405,qs),
(198,402,o),
(204,391,o),
(206,391,qs),
(207,391,o),
(208,392,qs),
(245,416,o),
(299,493,o),
(299,522,qs),
(299,538,o),
(277,562,o),
(262,562,qs),
(243,562,o),
(216,534,o),
(216,514,qs),
(216,484,o),
(244,477,q),
(236,458,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
31 11 2 0 73 1 1 0 0 39 0 78 26 24 36 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-17,-61,qs),
(-32,-78,o),
(-32,-88,qs),
(-32,-92,o),
(-26,-102,o),
(-24,-102,qs),
(-23,-102,o),
(-22,-101,qs),
(15,-77,o),
(69,-1,o),
(69,29,qs),
(69,44,o),
(46,68,o),
(32,68,qs),
(13,68,o),
(-14,41,o),
(-14,21,qs),
(-14,-9,o),
(14,-16,q),
(5,-35,o)
);
},
{
closed = 1;
nodes = (
(131,-61,qs),
(116,-78,o),
(116,-88,qs),
(116,-92,o),
(122,-102,o),
(124,-102,qs),
(125,-102,o),
(126,-101,qs),
(163,-77,o),
(217,-1,o),
(217,29,qs),
(217,44,o),
(195,68,o),
(180,68,qs),
(161,68,o),
(134,41,o),
(134,21,qs),
(134,-9,o),
(162,-16,q),
(154,-35,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
31 11 2 0 73 1 1 0 0 118 26 24 36 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 275;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,-155,o),
(59,-156,qs),
(59,-160,o),
(63,-160,qs),
(101,-160,ls),
(106,-160,o),
(107,-154,qs),
(188,309,l),
(279,309,ls),
(284,309,o),
(285,315,qs),
(290,346,l),
(291,348,l),
(291,352,o),
(286,352,qs),
(196,352,l),
(222,503,l),
(224,508,o),
(224,515,qs),
(223,554,o),
(190,554,qs),
(184,554,o),
(183,548,qs),
(149,352,l),
(59,352,ls),
(54,352,o),
(53,346,qs),
(47,315,ls),
(47,314,o),
(47,313,qs),
(47,309,o),
(51,309,qs),
(141,309,l),
(59,-154,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 3 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 2 39 77 4 1 0 0 1 95 3 1 1 1 42 77 0 5 5 44 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 0 5 134 0 2 2 39 77 4 1 0 0 1 95 3 1 1 1 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 5 0 5 134 3 1 1 4 1 0 5 1 0 104 0 2 2 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 37 20 34 38 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,-155,o),
(59,-156,qs),
(59,-160,o),
(63,-160,qs),
(100,-160,ls),
(105,-160,o),
(106,-154,qs),
(153,113,l),
(244,113,ls),
(249,113,o),
(250,119,qs),
(256,150,l),
(256,151,ls),
(256,152,o),
(256,153,qs),
(256,156,o),
(252,156,qs),
(161,156,l),
(188,309,l),
(278,309,ls),
(283,309,o),
(285,315,q),
(290,346,l),
(290,348,ls),
(290,352,o),
(286,352,qs),
(195,352,l),
(222,503,ls),
(223,509,o),
(223,515,qs),
(223,554,o),
(189,554,qs),
(184,554,o),
(183,548,qs),
(148,352,l),
(58,352,ls),
(53,352,o),
(52,346,qs),
(47,315,ls),
(47,314,o),
(47,313,qs),
(47,309,o),
(51,309,qs),
(141,309,l),
(114,156,l),
(24,156,ls),
(19,156,o),
(18,150,qs),
(12,119,ls),
(12,118,o),
(12,116,qs),
(12,113,o),
(16,113,qs),
(106,113,l),
(59,-154,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
24 1 3 4 30 13 2 2 3 39 3 2 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 1 8 1 0 9 1 0 103 0 4 4 39 77 6 1 2 2 3 95 5 1 3 3 42 77 0 9 9 44 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 0 9 134 7 1 1 8 1 0 9 1 0 103 0 4 4 39 77 6 1 2 2 3 95 5 1 3 3 42 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 8 1 0 9 1 0 103 0 4 4 39 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
50 48 39 17 37 20 34 38 17 38 16 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,239,o),
(229,279,qs),
(229,320,o),
(181,368,o),
(141,368,qs),
(102,368,o),
(55,319,o),
(55,279,qs),
(55,238,o),
(103,190,o),
(143,190,qs),
(182,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,14,o),
(97,34,qs),
(97,48,o),
(75,68,o),
(60,68,qs),
(41,68,o),
(13,39,o),
(13,19,qs),
(13,5,o),
(35,-16,o),
(50,-16,qs),
(68,-16,o)
);
},
{
closed = 1;
nodes = (
(272,14,o),
(272,34,qs),
(272,48,o),
(251,68,o),
(236,68,qs),
(217,68,o),
(189,39,o),
(189,19,qs),
(189,5,o),
(210,-16,o),
(225,-16,qs),
(244,-16,o)
);
},
{
closed = 1;
nodes = (
(448,14,o),
(448,33,qs),
(448,48,o),
(426,68,o),
(410,68,qs),
(392,68,o),
(364,39,o),
(364,19,qs),
(364,5,o),
(385,-16,o),
(400,-16,qs),
(419,-16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,278,qs),
(320,342,o),
(320,445,qs),
(320,501,o),
(263,567,o),
(214,567,qs),
(151,567,o),
(107,510,qs),
(56,445,o),
(56,343,qs),
(56,287,o),
(113,223,o),
(164,223,qs),
(228,223,o)
);
},
{
closed = 1;
nodes = (
(100,335,qs),
(100,379,o),
(124,470,o),
(142,494,qs),
(169,528,o),
(213,528,qs),
(277,528,o),
(277,452,qs),
(277,408,o),
(253,319,o),
(235,294,qs),
(210,261,o),
(165,261,qs),
(100,261,o)
);
},
{
closed = 1;
nodes = (
(187,0,o),
(191,6,qs),
(550,503,ls),
(567,526,o),
(567,540,qs),
(567,556,o),
(548,556,qs),
(542,556,ls),
(538,556,o),
(536,552,q),
(535,551,ls),
(534,550,o),
(534,549,q),
(139,6,ls),
(137,3,o),
(137,2,qs),
(137,0,o),
(140,0,qs),
(182,0,ls)
);
},
{
closed = 1;
nodes = (
(619,47,qs),
(668,110,o),
(668,214,qs),
(668,270,o),
(611,335,o),
(561,335,qs),
(498,335,o),
(454,278,qs),
(404,213,o),
(404,110,qs),
(404,55,o),
(461,-9,o),
(511,-9,qs),
(575,-9,o)
);
},
{
closed = 1;
nodes = (
(447,105,qs),
(447,192,o),
(509,297,o),
(561,297,qs),
(625,297,o),
(625,220,qs),
(625,133,o),
(564,29,o),
(513,29,qs),
(447,29,o)
);
},
{
closed = 1;
nodes = (
(931,47,qs),
(981,110,o),
(981,212,qs),
(981,269,o),
(923,335,o),
(873,335,qs),
(810,335,o),
(766,278,qs),
(716,213,o),
(716,111,qs),
(716,55,o),
(773,-9,o),
(823,-9,qs),
(887,-9,o)
);
},
{
closed = 1;
nodes = (
(760,105,qs),
(760,191,o),
(822,297,o),
(872,297,qs),
(937,297,o),
(937,220,qs),
(937,133,o),
(876,29,o),
(825,29,qs),
(760,29,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 7 13 1 9 2 7 9 106 15 1 2 14 1 0 8 2 0 105 0 4 4 39 77 0 3 3 1 97 0 1 1 39 77 16 1 5 5 40 77 20 12 18 3 8 8 6 97 19 10 17 3 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 1 0 3 7 1 3 105 11 1 7 13 1 9 2 7 9 106 15 1 2 14 1 0 8 2 0 105 0 4 4 39 77 16 1 5 5 40 77 20 12 18 3 8 8 6 97 19 10 17 3 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
86 85 72 71 62 61 48 47 28 28 15 14 1 0 91 89 85 94 86 94 79 77 71 84 72 84 67 65 61 70 62 70 55 53 47 60 48 60 28 46 28 45 40 37 22 20 14 27 15 27 8 6 0 13 1 13 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1031;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,323,o),
(206,325,qs),
(206,328,o),
(202,328,qs),
(158,328,ls),
(149,328,o),
(141,320,qs),
(25,198,ls),
(15,188,o),
(15,182,qs),
(15,178,o),
(20,170,qs),
(99,48,ls),
(105,40,o),
(114,40,qs),
(151,40,ls),
(157,40,o),
(157,44,qs),
(157,46,o),
(156,47,q),
(73,179,l),
(204,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 40 52 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-11,45,o),
(-11,43,qs),
(-11,40,o),
(-7,40,qs),
(37,40,ls),
(47,40,o),
(54,48,qs),
(171,170,ls),
(180,180,o),
(180,186,qs),
(180,190,o),
(176,198,q),
(96,320,ls),
(91,328,o),
(82,328,qs),
(44,328,ls),
(39,328,o),
(39,324,qs),
(39,322,o),
(39,321,q),
(123,189,l),
(-9,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
1 1 1 0 1 76 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 52 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,0,o),
(9,6,qs),
(368,503,ls),
(385,527,o),
(385,540,qs),
(385,556,o),
(366,556,qs),
(360,556,ls),
(356,556,o),
(351,549,qs),
(-43,6,ls),
(-45,3,o),
(-45,2,qs),
(-45,0,o),
(-42,0,qs),
(0,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 39 77 2 1 1 1 40 1 78 0 0 0 15 0 14 54 3 9 23 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,188,o),
(373,194,qs),
(393,229,l),
(394,229,l),
(395,232,o),
(395,233,qs),
(395,235,o),
(392,235,qs),
(126,235,l),
(128,272,o),
(136,307,q),
(428,307,ls),
(432,307,o),
(437,313,q),
(457,348,l),
(458,351,o),
(458,352,qs),
(458,354,o),
(455,354,qs),
(151,354,l),
(180,429,o),
(237,473,qs),
(294,517,o),
(376,519,qs),
(449,519,o),
(499,481,qs),
(521,464,o),
(524,464,qs),
(529,464,o),
(533,473,qs),
(539,489,ls),
(542,496,o),
(542,502,qs),
(542,523,o),
(494,543,qs),
(439,567,o),
(379,567,qs),
(330,565,o),
(298,556,qs),
(227,536,o),
(176,485,qs),
(122,431,o),
(97,354,q),
(51,354,ls),
(46,354,o),
(43,348,qs),
(23,313,ls),
(21,310,o),
(21,309,qs),
(21,307,o),
(25,307,qs),
(85,307,l),
(79,278,o),
(76,235,q),
(21,235,ls),
(16,235,o),
(13,229,qs),
(-7,194,ls),
(-9,191,o),
(-9,190,qs),
(-9,188,o),
(-5,188,qs),
(76,188,l),
(81,105,o),
(118,57,qs),
(167,-8,o),
(280,-11,qs),
(375,-11,o),
(439,44,qs),
(484,83,o),
(484,113,qs),
(484,125,o),
(474,125,qs),
(468,125,o),
(462,118,qs),
(389,36,o),
(288,36,qs),
(197,39,o),
(158,91,qs),
(129,129,o),
(125,188,q),
(366,188,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
48 1 8 9 66 1 5 6 77 1 3 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 9 6 9 8 6 128 0 1 3 0 3 1 0 128 12 1 4 14 13 2 3 1 4 3 103 0 9 9 7 97 0 7 7 39 77 11 1 5 5 6 97 10 1 6 6 42 77 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 9 6 9 8 6 128 0 1 3 0 3 1 0 128 0 7 0 9 8 7 9 105 12 1 4 14 13 2 3 1 4 3 103 11 1 5 5 6 97 10 1 6 6 42 77 0 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 81 0 80 73 72 70 68 62 61 58 56 39 37 38 18 38 19 36 34 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,273,o),
(156,273,qs),
(191,273,ls),
(193,273,o),
(193,276,qs),
(193,518,l),
(270,518,ls),
(274,518,o),
(274,522,qs),
(274,541,ls),
(274,556,o),
(259,556,qs),
(76,556,ls),
(73,556,o),
(73,553,qs),
(73,521,ls),
(73,518,o),
(76,518,qs),
(153,518,l),
(153,276,ls)
);
},
{
closed = 1;
nodes = (
(375,556,o),
(355,556,qs),
(332,556,ls),
(329,556,o),
(329,553,qs),
(315,276,ls),
(315,273,o),
(317,273,qs),
(348,273,ls),
(351,273,o),
(351,276,qs),
(363,484,l),
(436,276,l),
(438,273,o),
(440,273,qs),
(462,273,ls),
(465,273,o),
(467,276,q),
(542,488,l),
(553,276,l),
(552,273,o),
(557,273,qs),
(589,273,ls),
(592,273,o),
(592,276,qs),
(577,532,l),
(577,556,o),
(556,556,qs),
(532,556,ls),
(528,556,o),
(527,552,qs),
(452,337,l),
(383,536,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
47 10 2 0 1 41 40 33 32 27 14 6 4 0 2 76 44 30 17 3 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 134 5 3 2 1 0 0 1 89 5 3 2 1 1 0 95 2 1 0 1 0 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
5 1 3 1 3 133 0 4 0 4 134 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 4 134 5 3 2 1 0 0 1 89 5 3 2 1 1 0 95 2 1 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
29 27 42 20 67 16 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,249,o),
(343,255,qs),
(343,260,ls),
(343,295,o),
(304,295,qs),
(45,295,ls),
(40,295,o),
(40,289,qs),
(40,255,ls),
(40,249,o),
(45,249,qs),
(338,249,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
3 2 2 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 37 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,63,l),
(17,61,o),
(20,61,qs),
(61,61,ls),
(65,61,o),
(70,67,qs),
(138,159,l),
(320,159,ls),
(325,159,o),
(326,165,qs),
(327,170,ls),
(328,173,o),
(328,176,qs),
(328,206,o),
(294,206,qs),
(172,206,l),
(266,333,l),
(351,333,ls),
(356,333,o),
(357,339,qs),
(358,344,ls),
(358,346,o),
(358,350,qs),
(358,379,o),
(325,379,qs),
(299,379,l),
(333,427,ls),
(348,447,o),
(348,461,qs),
(348,478,o),
(328,478,qs),
(322,478,ls),
(318,478,o),
(315,472,q),
(314,472,l),
(247,379,l),
(66,379,ls),
(61,379,o),
(60,374,qs),
(54,339,ls),
(54,338,o),
(54,336,qs),
(54,333,o),
(58,333,qs),
(213,333,l),
(121,206,l),
(36,206,ls),
(31,206,o),
(29,200,q),
(23,165,ls),
(23,164,o),
(23,162,qs),
(23,159,o),
(27,159,qs),
(86,159,l),
(19,67,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
32 13 2 2 3 42 3 2 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 3 4 112 0 9 0 0 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 4 133 0 9 0 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 0 0 1 87 7 1 1 1 0 95 8 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
52 50 37 33 37 36 51 23 17 38 16 10 6 31 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,387,o),
(392,398,q),
(393,433,ls),
(393,441,o),
(386,438,qs),
(38,295,l),
(33,292,o),
(33,287,qs),
(33,254,ls),
(33,248,o),
(38,246,qs),
(386,102,ls),
(393,99,o),
(392,108,qs),
(392,115,ls),
(392,154,o),
(356,169,qs),
(102,272,l),
(379,381,ls)
);
},
{
closed = 1;
nodes = (
(393,0,o),
(392,6,q),
(393,41,l),
(392,47,o),
(388,47,qs),
(38,47,ls),
(33,47,o),
(33,41,qs),
(33,6,ls),
(33,0,o),
(38,0,qs),
(387,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
28 27 22 21 4 1 0 1 76 16 10 4 3 0 74 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 19 19 19 30 19 29 25 24 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,154,o),
(27,115,qs),
(27,108,ls),
(27,99,o),
(34,102,qs),
(382,246,l),
(387,249,o),
(387,254,qs),
(387,287,ls),
(387,292,o),
(382,295,q),
(34,438,ls),
(27,441,o),
(27,433,qs),
(27,398,ls),
(27,387,o),
(41,381,qs),
(317,272,l),
(63,169,ls)
);
},
{
closed = 1;
nodes = (
(387,0,o),
(387,6,qs),
(387,41,ls),
(387,47,o),
(382,47,qs),
(32,47,ls),
(27,47,o),
(27,41,qs),
(27,6,ls),
(27,0,o),
(32,0,qs),
(382,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
28 27 22 21 4 1 0 1 76 10 1 0 74 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 19 19 19 30 19 30 25 24 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,521,qs),
(153,517,o),
(154,513,qs),
(159,485,o),
(187,485,qs),
(207,485,o),
(209,505,q),
(210,508,o),
(209,512,qs),
(205,538,o),
(176,541,q),
(156,539,o)
);
},
{
closed = 1;
nodes = (
(245,496,qs),
(244,492,o),
(245,489,qs),
(247,477,o),
(266,460,o),
(278,460,qs),
(298,460,o),
(300,480,qs),
(301,484,o),
(300,487,qs),
(296,511,o),
(267,516,q),
(247,514,o)
);
},
{
closed = 1;
nodes = (
(-7,325,q),
(-7,321,o),
(-7,318,qs),
(-5,306,o),
(16,289,o),
(27,289,qs),
(47,289,o),
(49,309,qs),
(50,313,o),
(49,317,qs),
(45,341,o),
(16,345,q),
(-4,344,o)
);
},
{
closed = 1;
nodes = (
(383,325,q),
(382,322,o),
(383,318,qs),
(385,306,o),
(404,289,o),
(416,289,qs),
(436,289,o),
(438,309,qs),
(439,313,o),
(438,317,qs),
(434,341,o),
(405,345,q),
(385,344,o)
);
},
{
closed = 1;
nodes = (
(278,114,q),
(279,117,o),
(278,121,qs),
(276,132,o),
(256,149,o),
(245,149,qs),
(225,149,o),
(222,130,q),
(222,126,o),
(223,122,qs),
(227,96,o),
(256,93,q),
(276,95,o)
);
},
{
closed = 1;
nodes = (
(330,429,q),
(329,426,o),
(330,422,qs),
(332,410,o),
(351,393,o),
(363,393,qs),
(383,393,o),
(385,413,qs),
(386,417,o),
(385,421,qs),
(381,445,o),
(352,449,q),
(332,448,o)
);
},
{
closed = 1;
nodes = (
(64,496,qs),
(64,493,o),
(65,489,qs),
(67,478,o),
(87,461,o),
(98,461,qs),
(118,461,o),
(120,480,qs),
(121,484,o),
(120,488,qs),
(115,514,o),
(87,517,q),
(67,515,o)
);
},
{
closed = 1;
nodes = (
(4,420,q),
(3,417,o),
(4,413,qs),
(6,402,o),
(26,385,o),
(38,385,qs),
(57,385,o),
(60,404,q),
(60,408,o),
(59,412,qs),
(55,438,o),
(27,441,q),
(6,439,o)
);
},
{
closed = 1;
nodes = (
(372,147,qs),
(373,151,o),
(372,154,qs),
(370,166,o),
(350,183,o),
(339,183,qs),
(319,183,o),
(317,163,qs),
(316,159,o),
(317,155,qs),
(322,129,o),
(350,127,q),
(370,128,o)
);
},
{
closed = 1;
nodes = (
(427,214,q),
(428,217,o),
(427,221,qs),
(425,232,o),
(405,249,o),
(394,249,qs),
(374,249,o),
(371,230,q),
(371,226,o),
(372,222,qs),
(376,196,o),
(405,193,q),
(425,195,o)
);
},
{
closed = 1;
nodes = (
(178,147,q),
(179,150,o),
(178,154,qs),
(176,166,o),
(157,183,o),
(145,183,qs),
(125,183,o),
(123,163,qs),
(122,159,o),
(123,155,qs),
(127,131,o),
(156,127,q),
(176,128,o)
);
},
{
closed = 1;
nodes = (
(87,213,qs),
(88,217,o),
(87,221,qs),
(85,232,o),
(66,249,o),
(54,249,qs),
(34,249,o),
(32,230,qs),
(31,226,o),
(32,222,qs),
(36,198,o),
(65,193,q),
(85,195,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 189 values pushed */
81 16 2 1 0 101 99 94 75 73 68 66 7 7 8 49 47 42 40 36 34 29 27 8 2 3 153 151 146 144 127 125 120 7 11 13 138 133 131 112 107 105 6 6 11 140 114 55 3 12 6 6 76 88 79 23 21 14 10 8 4 2 9 0 74 62 60 2 12 73 0 0 1 0 133 9 1 1 8 1 133 19 1 8 7 8 133 0 7 10 7 133 0 10 3 10 133 18 5 17 3 3 2 3 133 4 1 2 13 2 133 16 1 13 11 13 133 14 1 11 6 11 133 0 6 12 6 133 21 15 20 3 12 12 118 129 129 103 103 64 64 38 38 25 25 149 147 129 141 129 141 136 134 123 121 103 115 103 115 110 108 97 95 84 82 64 76 64 76 71 69 58 56 38 50 38 50 45 43 25 37 25 37 43 42 37 22 6 25 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,74,qs),
(408,127,o),
(453,290,o),
(453,375,qs),
(453,567,o),
(294,567,qs),
(178,567,o),
(114,456,qs),
(82,402,o),
(45,250,o),
(45,177,qs),
(45,-10,o),
(204,-10,qs),
(308,-10,o)
);
},
{
closed = 1;
nodes = (
(95,172,qs),
(95,236,o),
(128,385,o),
(152,428,qs),
(202,519,o),
(292,519,qs),
(403,519,o),
(403,384,qs),
(403,319,o),
(371,171,o),
(347,128,qs),
(297,37,o),
(206,37,qs),
(95,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 23 77 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 3 2 1 3 105 5 1 2 2 0 97 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 22 20 14 27 15 27 8 6 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,47,o),
(117,41,q),
(111,6,ls),
(111,5,o),
(111,4,qs),
(111,0,o),
(115,0,qs),
(375,0,ls),
(383,0,o),
(384,7,qs),
(386,18,ls),
(387,22,o),
(387,26,qs),
(387,47,o),
(361,47,qs),
(280,47,l),
(361,508,l),
(363,515,o),
(363,524,qs),
(363,556,o),
(334,556,qs),
(326,556,ls),
(305,556,o),
(278,547,qs),
(211,524,ls),
(204,522,o),
(202,513,qs),
(195,474,l),
(195,473,ls),
(196,470,o),
(198,470,qs),
(199,470,o),
(200,471,q),
(311,509,l),
(229,47,l),
(123,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 2 1 0 30 22 2 2 1 2 76 0 0 0 23 77 4 3 2 1 1 2 95 0 2 2 24 2 78 0 0 0 35 0 34 37 36 60 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,149,o),
(266,202,qs),
(361,260,o),
(391,288,qs),
(455,349,o),
(455,441,qs),
(455,495,o),
(419,528,qs),
(379,567,o),
(306,567,qs),
(247,567,o),
(137,519,o),
(137,494,qs),
(137,491,o),
(137,489,qs),
(140,474,ls),
(141,466,o),
(145,466,qs),
(150,466,o),
(157,470,qs),
(231,519,o),
(301,519,qs),
(404,519,o),
(403,435,qs),
(403,382,o),
(331,297,o),
(241,245,qs),
(127,179,o),
(86,115,qs),
(70,91,o),
(43,20,o),
(43,3,qs),
(43,0,o),
(47,0,qs),
(374,0,ls),
(382,0,o),
(383,7,qs),
(385,18,ls),
(386,22,o),
(386,26,qs),
(386,47,o),
(360,47,qs),
(103,47,l),
(120,95,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 11 3 2 1 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 23 77 0 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 34 43 37 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,445,qs),
(450,498,o),
(414,530,qs),
(373,567,o),
(296,567,qs),
(238,567,o),
(129,519,o),
(129,494,qs),
(129,491,o),
(130,489,q),
(132,474,ls),
(133,466,o),
(137,466,qs),
(141,466,o),
(151,472,qs),
(229,519,o),
(293,519,qs),
(399,519,o),
(399,442,qs),
(399,388,o),
(366,354,qs),
(329,316,o),
(263,316,qs),
(174,316,ls),
(167,316,o),
(165,308,qs),
(164,298,ls),
(163,293,o),
(163,290,qs),
(163,270,o),
(189,270,qs),
(240,270,ls),
(301,270,o),
(367,221,o),
(367,176,qs),
(367,120,o),
(327,82,qs),
(281,37,o),
(208,37,qs),
(114,37,o),
(76,115,qs),
(71,125,o),
(65,125,qs),
(48,125,o),
(48,97,qs),
(48,54,o),
(83,26,qs),
(127,-10,o),
(210,-10,qs),
(299,-10,o),
(355,35,qs),
(418,85,o),
(418,173,qs),
(418,219,o),
(373,281,o),
(333,289,q),
(450,331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
46 1 6 5 27 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 36 53 53 35 20 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,5,o),
(291,4,qs),
(291,0,o),
(295,0,qs),
(336,0,ls),
(341,0,o),
(342,6,qs),
(366,139,l),
(432,139,ls),
(440,139,o),
(441,146,qs),
(443,157,ls),
(444,161,o),
(444,165,qs),
(444,186,o),
(418,186,qs),
(374,186,l),
(433,518,ls),
(434,524,o),
(434,530,qs),
(434,556,o),
(408,556,qs),
(393,556,ls),
(378,556,o),
(364,539,qs),
(74,202,ls),
(62,187,o),
(59,171,qs),
(54,145,ls),
(54,144,o),
(54,143,qs),
(54,139,o),
(58,139,qs),
(315,139,l),
(291,6,ls)
);
},
{
closed = 1;
nodes = (
(323,186,l),
(116,186,l),
(377,493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
37 14 2 2 1 20 1 0 2 2 76 5 1 2 3 1 0 4 2 0 104 0 1 1 23 77 0 4 4 24 4 78 21 34 37 36 57 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,508,o),
(447,516,qs),
(449,527,ls),
(450,531,o),
(450,535,qs),
(450,556,o),
(424,556,qs),
(162,556,ls),
(157,556,o),
(156,549,qs),
(108,276,ls),
(108,275,o),
(108,274,qs),
(108,273,ls),
(108,269,o),
(112,269,qs),
(113,269,o),
(117,270,qs),
(189,298,o),
(263,298,qs),
(371,298,o),
(371,204,qs),
(371,136,o),
(330,90,qs),
(282,37,o),
(205,37,qs),
(115,37,o),
(77,115,qs),
(72,125,o),
(67,125,qs),
(49,125,o),
(49,98,qs),
(49,55,o),
(85,25,qs),
(129,-10,o),
(206,-10,qs),
(294,-10,o),
(354,44,qs),
(423,106,o),
(423,207,qs),
(423,266,o),
(388,302,qs),
(347,344,o),
(272,344,qs),
(228,344,o),
(167,329,q),
(199,508,l),
(437,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
42 1 6 5 1 1 4 0 36 1 2 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 3 0 1 3 1 101 7 1 6 6 5 95 0 5 5 23 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 58 36 35 20 38 34 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,523,o),
(363,545,qs),
(363,567,o),
(344,567,qs),
(337,567,o),
(330,558,qs),
(160,340,ls),
(106,272,o),
(65,184,o),
(65,138,qs),
(65,72,o),
(105,33,qs),
(148,-10,o),
(224,-10,qs),
(310,-10,o),
(367,42,qs),
(433,102,o),
(433,202,qs),
(433,266,o),
(396,305,qs),
(356,348,o),
(288,348,qs),
(250,348,o),
(210,328,q),
(342,497,ls)
);
},
{
closed = 1;
nodes = (
(116,90,o),
(116,138,qs),
(116,202,o),
(156,248,qs),
(202,301,o),
(274,301,qs),
(325,301,o),
(382,247,o),
(382,199,qs),
(382,135,o),
(343,89,qs),
(297,37,o),
(225,37,qs),
(173,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 105 0 2 2 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 105 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 105 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 38 26 38 40 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,6,o),
(60,5,q),
(63,3,l),
(63,0,o),
(66,0,qs),
(105,0,ls),
(116,0,o),
(123,11,qs),
(422,478,ls),
(436,499,o),
(439,518,qs),
(441,527,ls),
(442,530,o),
(442,535,qs),
(441,556,o),
(416,556,qs),
(100,556,ls),
(95,556,o),
(94,549,qs),
(88,514,ls),
(88,513,o),
(88,512,qs),
(88,508,o),
(92,508,qs),
(387,508,l),
(58,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
11 3 2 0 1 1 76 0 0 0 1 95 0 1 1 23 77 0 2 2 24 2 78 40 54 16 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,128,qs),
(51,64,o),
(91,28,qs),
(134,-11,o),
(213,-11,qs),
(297,-11,o),
(354,34,qs),
(419,87,o),
(419,173,qs),
(419,258,o),
(332,295,q),
(448,341,o),
(448,442,qs),
(448,491,o),
(413,526,qs),
(372,567,o),
(305,567,qs),
(230,567,o),
(178,526,qs),
(118,480,o),
(118,404,qs),
(118,333,o),
(189,299,q),
(51,250,o)
);
},
{
closed = 1;
nodes = (
(398,476,o),
(398,438,qs),
(398,392,o),
(364,358,qs),
(324,319,o),
(264,319,qs),
(220,319,o),
(166,364,o),
(166,400,qs),
(166,447,o),
(199,480,qs),
(237,519,o),
(297,519,qs),
(344,519,o)
);
},
{
closed = 1;
nodes = (
(369,220,o),
(369,175,qs),
(369,119,o),
(332,81,qs),
(289,36,o),
(219,36,qs),
(164,36,o),
(102,85,o),
(102,128,qs),
(102,184,o),
(142,225,qs),
(188,274,o),
(257,274,qs),
(308,274,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 7 1 4 5 3 4 105 6 1 2 2 0 97 0 0 0 23 77 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 6 1 2 3 0 2 105 0 3 7 1 4 5 3 4 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
39 38 25 24 46 44 38 51 39 51 32 30 24 37 25 37 42 37 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,33,o),
(135,12,qs),
(135,-10,o),
(154,-10,qs),
(162,-10,o),
(169,-1,qs),
(339,217,ls),
(392,285,o),
(433,373,o),
(433,418,qs),
(433,567,o),
(274,567,qs),
(189,567,o),
(131,515,qs),
(65,455,o),
(65,355,qs),
(65,298,o),
(102,257,qs),
(145,209,o),
(210,209,qs),
(248,209,o),
(288,229,q),
(156,60,ls)
);
},
{
closed = 1;
nodes = (
(383,467,o),
(383,419,qs),
(383,355,o),
(343,309,qs),
(296,256,o),
(225,256,qs),
(174,256,o),
(116,310,o),
(116,358,qs),
(116,422,o),
(156,467,qs),
(201,519,o),
(273,519,qs),
(325,519,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 0 0 2 4 0 105 5 1 3 3 1 97 0 1 1 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 5 1 3 4 1 3 105 0 4 0 0 2 4 0 105 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 0 2 134 0 1 5 1 3 4 1 3 105 0 4 0 0 4 89 0 4 4 0 97 0 0 4 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 31 29 23 36 24 36 38 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,404,o),
(143,409,o),
(146,409,qs),
(187,409,l),
(190,506,o),
(260,661,o),
(317,697,qs),
(325,702,o),
(327,691,qs),
(331,669,o),
(326,650,o),
(313,634,qs),
(237,545,o),
(233,409,q),
(268,409,ls),
(276,409,o),
(271,402,q),
(244,353,l),
(231,360,o),
(216,360,qs),
(199,360,o),
(190,353,q),
(145,402,l)
);
},
{
closed = 1;
nodes = (
(142,293,o),
(145,277,qs),
(148,262,o),
(158,249,q),
(115,213,l),
(109,209,o),
(107,216,q),
(102,249,l),
(63,262,ls),
(58,264,o),
(57,269,qs),
(55,284,ls),
(54,289,o),
(57,291,q),
(92,304,l),
(86,337,ls),
(85,345,o),
(92,340,qs),
(148,304,l)
);
},
{
closed = 1;
nodes = (
(303,303,q),
(346,339,ls),
(352,344,o),
(353,337,qs),
(359,303,l),
(398,291,ls),
(404,289,o),
(405,284,qs),
(407,269,ls),
(408,264,o),
(403,262,qs),
(369,249,l),
(375,216,ls),
(376,207,o),
(368,213,qs),
(313,249,l),
(318,261,o),
(316,276,qs),
(313,292,o)
);
},
{
closed = 1;
nodes = (
(260,290,o),
(263,276,qs),
(265,263,o),
(250,243,o),
(236,243,qs),
(223,243,o),
(200,263,o),
(198,276,qs),
(195,289,o),
(211,309,o),
(225,309,qs),
(238,309,o)
);
},
{
closed = 1;
nodes = (
(465,-144,qs),
(303,-67,o),
(232,143,q),
(193,143,ls),
(184,143,o),
(189,151,qs),
(216,199,l),
(230,192,o),
(246,192,qs),
(260,192,o),
(271,199,q),
(316,151,l),
(318,148,o),
(317,143,o),
(315,143,qs),
(280,143,l),
(331,4,o),
(439,-78,qs),
(457,-91,o),
(469,-113,o),
(473,-138,qs),
(475,-149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
4 1 3 0 59 48 44 41 37 29 26 7 4 3 87 83 2 6 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
2 1 1 0 3 1 112 0 0 3 0 133 0 6 4 5 4 6 5 128 7 1 5 4 5 111 8 1 3 4 4 3 89 8 1 3 3 4 98 0 4 3 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 7 1 5 5 132 8 1 3 4 4 3 89 8 1 3 3 4 98 0 4 3 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
62 61 91 89 86 84 79 78 68 66 61 72 62 72 26 35 33 9 6 25 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,539,o),
(25,631,qs),
(7,647,o),
(-5,668,o),
(-9,691,qs),
(-11,702,o),
(0,697,qs),
(157,619,o),
(233,409,q),
(270,409,ls),
(273,409,o),
(276,404,o),
(274,402,q),
(247,353,l),
(234,360,o),
(217,360,qs),
(202,360,o),
(192,353,q),
(147,402,ls),
(145,404,o),
(146,409,o),
(148,409,qs),
(186,409,l)
);
},
{
closed = 1;
nodes = (
(160,249,q),
(117,213,ls),
(111,208,o),
(109,216,qs),
(104,249,l),
(65,262,ls),
(59,264,o),
(58,269,qs),
(56,284,ls),
(55,289,o),
(60,291,qs),
(94,303,l),
(88,337,l),
(88,344,o),
(95,339,qs),
(150,303,l),
(145,294,o),
(147,276,qs),
(149,263,o)
);
},
{
closed = 1;
nodes = (
(409,264,o),
(406,262,q),
(371,249,l),
(377,216,ls),
(378,208,o),
(370,213,qs),
(315,249,l),
(320,262,o),
(318,277,qs),
(315,293,o),
(305,304,q),
(348,340,ls),
(354,345,o),
(356,337,qs),
(361,304,l),
(400,291,ls),
(405,289,o),
(406,284,qs),
(408,269,ls)
);
},
{
closed = 1;
nodes = (
(262,290,o),
(265,276,qs),
(268,263,o),
(252,243,o),
(239,243,qs),
(225,243,o),
(203,263,o),
(200,276,qs),
(197,290,o),
(214,309,o),
(227,309,qs),
(240,309,o)
);
},
{
closed = 1;
nodes = (
(321,148,o),
(320,143,o),
(317,143,qs),
(278,143,l),
(277,43,o),
(209,-106,o),
(148,-144,qs),
(139,-149,o),
(138,-138,qs),
(134,-114,o),
(138,-95,o),
(151,-81,qs),
(231,4,o),
(232,143,q),
(195,143,ls),
(187,143,o),
(192,151,qs),
(219,199,l),
(233,192,o),
(247,192,qs),
(263,192,o),
(273,199,q),
(318,151,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
28 8 4 3 3 0 60 57 53 49 40 29 25 7 4 3 77 1 5 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 2 2 1 0 3 1 112 0 0 3 0 133 0 5 4 6 4 5 6 128 7 1 6 4 6 111 9 1 3 4 4 3 89 9 1 3 3 4 98 0 4 3 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
8 2 2 1 0 1 133 0 0 3 0 133 0 5 4 6 4 5 6 128 7 1 6 6 132 9 1 3 4 4 3 89 9 1 3 3 4 98 0 4 3 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
62 61 0 0 92 91 81 79 76 74 68 66 61 72 62 72 0 22 0 22 36 37 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(49,407,ls),
(37,471,o),
(66,513,qs),
(100,564,o),
(182,564,qs),
(334,564,o),
(362,407,qs),
(425,51,ls),
(434,0,o),
(393,0,qs),
(389,0,ls),
(383,0,o),
(382,6,qs),
(310,412,ls),
(302,461,o),
(235,518,o),
(185,518,qs),
(137,518,o),
(91,461,o),
(99,412,qs),
(144,155,ls),
(156,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(5,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 28 26 21 19 16 13 9 7 0 29 1 29 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,132,o),
(103,141,qs),
(37,504,ls),
(28,556,o),
(68,556,qs),
(73,556,ls),
(79,556,o),
(79,551,q),
(149,141,ls),
(150,132,o),
(140,132,qs),
(114,132,ls)
);
},
{
closed = 1;
nodes = (
(185,44,o),
(188,27,qs),
(192,9,o),
(172,-16,o),
(155,-16,qs),
(138,-16,o),
(109,9,o),
(106,27,qs),
(103,44,o),
(123,69,o),
(140,69,qs),
(157,69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 1 2 1 0 2 128 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 1 2 1 0 2 128 5 1 2 0 3 2 3 101 0 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,0,o),
(175,10,qs),
(88,502,ls),
(79,551,o),
(116,554,qs),
(129,556,o),
(143,556,qs),
(235,556,o),
(286,497,qs),
(288,494,o),
(290,497,q),
(317,556,o),
(407,556,qs),
(457,556,ls),
(462,556,o),
(463,551,qs),
(464,547,ls),
(469,515,o),
(435,511,qs),
(426,509,o),
(406,509,qs),
(371,507,o),
(328,472,o),
(311,431,q),
(308,420,o),
(301,420,qs),
(296,420,o),
(287,431,qs),
(253,474,o),
(202,507,o),
(166,508,qs),
(162,508,o),
(152,509,qs),
(145,509,o),
(143,509,qs),
(138,509,o),
(139,504,qs),
(226,10,ls),
(228,0,o),
(217,0,qs),
(187,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
29 1 3 1 1 76 0 3 1 0 1 3 0 128 4 2 2 1 1 5 97 6 1 5 5 23 77 7 1 0 0 24 0 78 1 0 34 32 28 25 20 18 15 13 10 8 7 5 0 40 1 39 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(357,556,o),
(360,556,qs),
(364,556,o),
(366,551,qs),
(373,532,o),
(370,494,o),
(361,486,q),
(192,311,l),
(121,230,o),
(134,159,qs),
(142,109,o),
(218,47,o),
(271,47,qs),
(558,47,ls),
(604,47,o),
(611,11,q),
(611,7,l),
(613,0,o),
(605,0,qs),
(277,0,ls),
(211,0,o),
(160,33,qs),
(97,76,o),
(82,157,qs),
(73,209,o),
(110,299,o),
(167,361,qs),
(355,553,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 95 0 0 0 24 0 78 41 51 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,527,o),
(75,527,qs),
(55,527,ls),
(50,527,o),
(45,534,qs),
(-16,636,ls),
(-19,641,o),
(-11,641,qs),
(12,641,o),
(27,616,qs),
(59,563,l),
(73,616,ls),
(79,641,o),
(102,641,qs),
(110,641,o),
(108,636,q),
(83,534,ls)
);
},
{
closed = 1;
nodes = (
(466,86,o),
(439,46,qs),
(408,0,o),
(336,0,qs),
(115,0,ls),
(108,0,o),
(106,7,qs),
(105,12,ls),
(101,27,o),
(121,49,o),
(139,49,qs),
(259,49,l),
(89,384,ls),
(69,423,o),
(88,437,q),
(89,437,o),
(89,438,q),
(96,442,o),
(103,445,qs),
(106,447,l),
(111,448,o),
(113,443,qs),
(314,49,l),
(333,49,ls),
(422,49,o),
(403,156,qs),
(341,504,ls),
(332,556,o),
(373,556,qs),
(378,556,ls),
(384,556,o),
(385,550,qs),
(454,155,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 1 3 0 1 76 1 1 0 0 2 4 0 2 105 0 3 3 23 77 5 1 4 4 6 95 0 6 6 24 6 78 52 43 35 51 51 36 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,527,o),
(75,527,qs),
(55,527,ls),
(50,527,o),
(45,534,qs),
(-16,636,ls),
(-19,641,o),
(-11,641,qs),
(12,641,o),
(27,616,qs),
(59,563,l),
(73,616,ls),
(79,641,o),
(102,641,qs),
(110,641,o),
(108,636,q),
(83,534,ls)
);
},
{
closed = 1;
nodes = (
(606,0,l),
(575,0,ls),
(488,0,o),
(443,53,q),
(414,0,o),
(336,0,qs),
(115,0,ls),
(108,0,o),
(106,7,qs),
(105,12,ls),
(101,27,o),
(121,49,o),
(139,49,qs),
(259,49,l),
(89,384,ls),
(69,423,o),
(88,437,q),
(89,437,o),
(89,438,q),
(96,442,o),
(103,445,qs),
(106,447,l),
(111,448,o),
(113,443,qs),
(314,49,l),
(333,49,ls),
(422,49,o),
(403,156,qs),
(341,504,ls),
(332,556,o),
(373,556,qs),
(378,556,ls),
(384,556,o),
(385,550,qs),
(454,155,ls),
(463,105,o),
(522,49,o),
(565,49,qs),
(598,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
5 1 4 0 51 1 3 2 2 76 1 1 0 0 2 3 0 2 105 0 4 4 23 77 6 5 9 3 3 3 7 97 8 1 7 7 24 7 78 18 17 54 52 50 47 43 41 30 28 25 22 17 55 18 55 51 36 33 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,680,o),
(481,664,qs),
(484,648,o),
(466,626,o),
(450,626,qs),
(435,626,o),
(410,648,o),
(407,664,qs),
(404,680,o),
(422,702,o),
(437,702,qs),
(453,702,o)
);
},
{
closed = 1;
nodes = (
(710,0,l),
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
50 1 7 2 1 76 0 5 3 2 3 5 2 128 8 1 0 0 1 3 0 1 105 0 4 0 6 4 6 101 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 53 51 47 45 37 36 28 26 20 17 12 54 13 54 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,680,o),
(68,664,qs),
(71,648,o),
(53,626,o),
(37,626,qs),
(22,626,o),
(-3,648,o),
(-6,664,qs),
(-9,680,o),
(8,702,o),
(24,702,qs),
(40,702,o)
);
},
{
closed = 1;
nodes = (
(-2,49,l),
(22,49,ls),
(114,49,o),
(95,156,qs),
(33,505,ls),
(25,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,551,qs),
(146,155,ls),
(158,86,o),
(131,46,qs),
(100,0,o),
(28,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 26 24 21 19 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,648,o),
(-6,664,qs),
(-9,680,o),
(8,702,o),
(24,702,qs),
(40,702,o),
(65,680,o),
(68,664,qs),
(71,648,o),
(53,626,o),
(37,626,qs),
(22,626,o)
);
},
{
closed = 1;
nodes = (
(298,0,l),
(267,0,ls),
(180,0,o),
(135,53,q),
(106,0,o),
(28,0,qs),
(6,0,l),
(-2,49,l),
(22,49,ls),
(114,49,o),
(95,156,qs),
(33,505,ls),
(25,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,551,qs),
(146,155,ls),
(155,105,o),
(214,49,o),
(257,49,qs),
(289,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
29 1 2 3 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 18 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(398,728,o),
(395,743,qs),
(393,758,o),
(409,778,o),
(423,778,qs),
(438,778,o),
(461,758,o),
(464,743,qs),
(466,728,o),
(450,708,o),
(435,708,qs),
(421,708,o)
);
},
{
closed = 1;
nodes = (
(363,647,o),
(361,662,qs),
(359,677,o),
(375,697,o),
(389,697,qs),
(403,697,o),
(427,677,o),
(429,662,qs),
(432,647,o),
(416,627,o),
(401,627,qs),
(387,627,o)
);
},
{
closed = 1;
nodes = (
(461,647,o),
(459,662,qs),
(456,677,o),
(472,697,o),
(487,697,qs),
(501,697,o),
(525,677,o),
(527,662,qs),
(530,647,o),
(513,627,o),
(499,627,qs),
(484,627,o)
);
},
{
closed = 1;
nodes = (
(710,0,l),
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
74 1 11 6 1 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 15 1 6 6 11 97 0 11 11 24 11 78 37 36 25 24 13 12 1 0 77 75 71 69 61 60 52 50 44 41 36 78 37 78 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-16,729,o),
(-18,744,qs),
(-21,758,o),
(-5,778,o),
(10,778,qs),
(24,778,o),
(48,758,o),
(50,744,qs),
(53,729,o),
(36,708,o),
(22,708,qs),
(7,708,o)
);
},
{
closed = 1;
nodes = (
(-50,648,o),
(-53,663,qs),
(-55,677,o),
(-39,697,o),
(-25,697,qs),
(-10,697,o),
(13,677,o),
(16,663,qs),
(18,648,o),
(2,627,o),
(-13,627,qs),
(-27,627,o)
);
},
{
closed = 1;
nodes = (
(48,648,o),
(45,663,qs),
(43,677,o),
(59,697,o),
(73,697,qs),
(88,697,o),
(111,677,o),
(113,663,qs),
(116,648,o),
(100,627,o),
(85,627,qs),
(71,627,o)
);
},
{
closed = 1;
nodes = (
(-2,49,l),
(22,49,ls),
(114,49,o),
(95,156,qs),
(33,505,ls),
(25,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,551,qs),
(146,155,ls),
(158,86,o),
(131,46,qs),
(100,0,o),
(28,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 97 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 50 48 45 43 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-16,729,o),
(-18,744,qs),
(-21,758,o),
(-5,778,o),
(10,778,qs),
(24,778,o),
(48,758,o),
(50,744,qs),
(53,729,o),
(36,708,o),
(22,708,qs),
(7,708,o)
);
},
{
closed = 1;
nodes = (
(2,627,o),
(-13,627,qs),
(-27,627,o),
(-50,648,o),
(-53,663,qs),
(-55,677,o),
(-39,697,o),
(-25,697,qs),
(-10,697,o),
(13,677,o),
(16,663,qs),
(18,648,o)
);
},
{
closed = 1;
nodes = (
(59,697,o),
(73,697,qs),
(88,697,o),
(111,677,o),
(113,663,qs),
(116,648,o),
(100,627,o),
(85,627,qs),
(71,627,o),
(48,648,o),
(45,663,qs),
(43,677,o)
);
},
{
closed = 1;
nodes = (
(298,0,l),
(267,0,ls),
(180,0,o),
(135,53,q),
(106,0,o),
(28,0,qs),
(6,0,l),
(-2,49,l),
(22,49,ls),
(114,49,o),
(95,156,qs),
(33,505,ls),
(25,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(76,551,qs),
(146,155,ls),
(155,105,o),
(214,49,o),
(257,49,qs),
(290,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
53 1 6 7 1 76 0 1 11 1 0 2 1 0 105 5 1 2 4 1 3 7 2 3 105 0 7 7 23 77 8 12 2 6 6 9 97 10 1 9 9 24 9 78 37 36 1 0 56 54 52 50 49 47 44 42 36 57 37 57 34 32 28 26 22 20 16 14 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,752,o),
(372,752,qs),
(397,752,o),
(413,727,qs),
(443,677,l),
(456,727,ls),
(462,752,o),
(485,752,qs),
(492,752,o),
(492,747,q),
(467,645,ls),
(465,638,o),
(459,638,qs),
(439,638,ls),
(433,638,o),
(429,645,qs),
(368,747,l)
);
},
{
closed = 1;
nodes = (
(598,-70,o),
(543,-141,qs),
(485,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(579,42,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
11 6 2 0 1 1 76 2 1 1 0 1 133 0 0 3 0 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 101 0 3 3 23 3 78 40 24 38 51 36 21 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,639,o),
(16,646,qs),
(-45,747,ls),
(-49,753,o),
(-41,753,qs),
(-15,753,o),
(0,728,qs),
(30,677,l),
(43,728,ls),
(49,753,o),
(73,753,qs),
(79,753,o),
(79,747,q),
(54,646,ls),
(52,639,o),
(46,639,qs),
(26,639,ls)
);
},
{
closed = 1;
nodes = (
(159,86,o),
(132,46,qs),
(101,0,o),
(29,0,qs),
(7,0,l),
(-1,49,l),
(23,49,ls),
(114,49,o),
(96,156,qs),
(34,505,ls),
(25,556,o),
(66,556,qs),
(71,556,ls),
(76,556,o),
(77,551,qs),
(147,155,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
8 3 2 2 0 1 76 1 1 0 2 0 133 6 1 2 3 2 133 0 3 3 23 77 0 4 4 5 97 0 5 5 24 5 78 0 0 29 27 26 24 21 19 0 16 0 15 36 21 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,639,o),
(16,646,qs),
(-45,747,ls),
(-49,753,o),
(-41,753,qs),
(-15,753,o),
(0,728,qs),
(30,677,l),
(43,728,ls),
(49,753,o),
(73,753,qs),
(79,753,o),
(79,747,q),
(54,646,ls),
(52,639,o),
(46,639,qs),
(26,639,ls)
);
},
{
closed = 1;
nodes = (
(299,0,l),
(268,0,ls),
(181,0,o),
(136,53,q),
(107,0,o),
(29,0,qs),
(7,0,l),
(-1,49,l),
(23,49,ls),
(114,49,o),
(96,156,qs),
(34,505,ls),
(25,556,o),
(66,556,qs),
(71,556,ls),
(76,556,o),
(77,551,qs),
(147,155,ls),
(156,105,o),
(214,49,o),
(258,49,qs),
(290,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
8 3 2 2 0 34 1 3 4 2 76 1 1 0 2 0 133 8 1 2 4 2 133 0 4 4 23 77 5 9 2 3 3 6 97 7 1 6 6 24 6 78 18 17 0 0 37 35 33 31 30 28 25 23 17 38 18 38 0 16 0 15 36 21 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(106,8,qs),
(297,527,ls),
(308,556,o),
(326,556,qs),
(349,556,ls),
(356,556,o),
(354,548,q),
(154,6,l),
(151,0,o),
(147,0,qs),
(112,0,ls)
);
},
{
closed = 1;
nodes = (
(157,493,o),
(160,477,qs),
(163,461,o),
(145,439,o),
(130,439,qs),
(115,439,o),
(89,461,o),
(87,477,qs),
(84,492,o),
(101,514,o),
(117,514,qs),
(132,514,o)
);
},
{
closed = 1;
nodes = (
(351,45,o),
(354,29,qs),
(356,14,o),
(339,-8,o),
(324,-8,qs),
(308,-8,o),
(283,14,o),
(280,29,qs),
(278,45,o),
(295,67,o),
(311,67,qs),
(326,67,o)
);
},
{
closed = 1;
nodes = (
(514,45,o),
(516,29,qs),
(519,14,o),
(502,-8,o),
(486,-8,qs),
(471,-8,o),
(446,14,o),
(443,29,qs),
(440,45,o),
(458,67,o),
(474,67,qs),
(489,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
0 0 2 0 133 8 1 1 4 5 4 1 5 128 9 1 2 0 3 4 2 3 105 11 6 10 3 4 1 5 4 89 11 6 10 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 0 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 0 11 0 10 52 12 6 23 
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
},
{
closed = 1;
nodes = (
(174,-306,o),
(177,-322,qs),
(180,-338,o),
(162,-360,o),
(147,-360,qs),
(131,-360,o),
(106,-338,o),
(103,-322,qs),
(101,-306,o),
(118,-284,o),
(133,-284,qs),
(149,-284,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
28 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 105 8 1 6 0 7 6 7 101 0 0 0 5 97 0 5 5 24 5 78 33 32 39 37 32 43 33 43 35 36 34 37 37 32 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,547,o),
(42,547,qs),
(67,547,o),
(82,522,qs),
(112,471,l),
(126,522,ls),
(132,547,o),
(155,547,qs),
(162,547,o),
(161,541,qs),
(136,439,ls),
(135,433,o),
(128,433,qs),
(108,433,ls),
(103,433,o),
(98,439,q),
(37,541,ls)
);
},
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 45 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 0 3 0 4 3 128 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 0 0 0 1 97 2 1 1 1 23 77 0 3 3 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 3 0 4 3 128 0 6 8 5 8 6 5 128 2 1 1 0 0 4 1 0 105 0 5 0 7 5 7 101 0 3 3 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
35 36 34 37 37 34 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
},
{
closed = 1;
nodes = (
(199,-298,qs),
(174,-399,ls),
(172,-406,o),
(166,-406,qs),
(146,-406,ls),
(140,-406,o),
(136,-399,qs),
(75,-298,ls),
(71,-292,o),
(80,-292,qs),
(105,-292,o),
(120,-317,qs),
(150,-368,l),
(163,-317,ls),
(170,-292,o),
(193,-292,qs),
(200,-292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
28 1 5 0 35 1 8 6 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 7 9 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 105 0 0 0 5 97 0 5 5 24 5 78 33 32 44 42 39 37 32 48 33 48 35 36 34 37 37 32 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,393,o),
(203,393,qs),
(85,393,ls),
(82,393,o),
(81,397,qs),
(80,399,l),
(76,424,o),
(109,424,qs),
(120,424,l),
(95,563,ls),
(88,603,o),
(116,603,qs),
(119,603,ls),
(121,603,o),
(122,599,qs),
(132,542,l),
(179,542,ls),
(259,542,o),
(269,468,qs),
(274,433,o)
);
},
{
closed = 1;
nodes = (
(243,424,o),
(236,468,qs),
(230,512,o),
(187,512,qs),
(138,512,l),
(154,424,l),
(203,424,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 133 0 0 0 4 2 0 4 105 6 5 2 2 3 3 2 89 6 5 2 2 2 3 95 0 3 2 3 79 20 20 20 26 20 25 35 51 34 35 33 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,-97,o),
(116,-112,qs),
(118,-127,o),
(102,-147,o),
(87,-147,qs),
(73,-147,o),
(50,-127,o),
(47,-112,qs),
(45,-97,o),
(61,-77,o),
(75,-77,qs),
(90,-77,o)
);
},
{
closed = 1;
nodes = (
(211,-97,o),
(213,-112,qs),
(216,-127,o),
(200,-147,o),
(185,-147,qs),
(171,-147,o),
(148,-127,o),
(145,-112,qs),
(143,-97,o),
(159,-77,o),
(173,-77,qs),
(187,-77,o)
);
},
{
closed = 1;
nodes = (
(177,-178,o),
(179,-193,qs),
(182,-208,o),
(165,-228,o),
(151,-228,qs),
(136,-228,o),
(113,-208,o),
(111,-193,qs),
(108,-178,o),
(124,-158,o),
(138,-158,qs),
(153,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,449,o),
(50,464,qs),
(48,478,o),
(64,498,o),
(78,498,qs),
(93,498,o),
(116,478,o),
(119,464,qs),
(121,449,o),
(105,428,o),
(90,428,qs),
(76,428,o)
);
},
{
closed = 1;
nodes = (
(151,449,o),
(148,464,qs),
(146,478,o),
(162,498,o),
(176,498,qs),
(191,498,o),
(214,478,o),
(216,464,qs),
(219,449,o),
(203,428,o),
(188,428,qs),
(174,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,-97,o),
(123,-112,qs),
(125,-127,o),
(109,-147,o),
(94,-147,qs),
(80,-147,o),
(57,-127,o),
(54,-112,qs),
(52,-97,o),
(68,-77,o),
(82,-77,qs),
(97,-77,o)
);
},
{
closed = 1;
nodes = (
(218,-97,o),
(220,-112,qs),
(223,-127,o),
(207,-147,o),
(192,-147,qs),
(178,-147,o),
(155,-127,o),
(152,-112,qs),
(150,-97,o),
(166,-77,o),
(180,-77,qs),
(194,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,519,o),
(94,519,qs),
(76,519,o),
(40,533,qs),
(37,534,o),
(33,536,qs),
(6,546,o),
(-4,546,qs),
(-18,546,o),
(-23,534,q),
(-23,532,o),
(-25,529,q),
(-27,523,o),
(-28,520,q),
(-32,514,o),
(-37,521,qs),
(-44,530,o),
(-45,544,qs),
(-46,560,o),
(-27,580,o),
(-12,579,qs),
(-7,579,o),
(3,577,qs),
(8,576,ls),
(11,575,o),
(13,578,q),
(13,580,l),
(42,634,o),
(83,635,qs),
(109,636,o),
(145,606,o),
(148,582,qs),
(151,554,o)
);
},
{
closed = 1;
nodes = (
(88,552,qs),
(116,552,o),
(111,581,qs),
(107,602,o),
(86,602,qs),
(67,602,o),
(46,564,q),
(74,552,o)
);
},
{
closed = 1;
nodes = (
(463,86,o),
(436,46,qs),
(405,0,o),
(333,0,qs),
(112,0,ls),
(105,0,o),
(103,7,qs),
(102,12,ls),
(98,27,o),
(118,49,o),
(136,49,qs),
(256,49,l),
(86,384,ls),
(66,423,o),
(85,437,q),
(86,437,o),
(86,438,q),
(93,442,o),
(100,445,qs),
(103,447,l),
(108,448,o),
(110,443,qs),
(311,49,l),
(330,49,ls),
(419,49,o),
(400,156,qs),
(338,504,ls),
(329,556,o),
(370,556,qs),
(375,556,ls),
(381,556,o),
(382,550,qs),
(451,155,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 3 3 5 97 6 1 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 6 6 23 77 0 3 3 5 97 0 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
70 67 43 35 50 34 35 36 43 38 34 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,519,o),
(94,519,qs),
(76,519,o),
(40,533,qs),
(37,534,o),
(33,536,qs),
(6,546,o),
(-4,546,qs),
(-18,546,o),
(-23,534,q),
(-23,532,o),
(-25,529,q),
(-27,523,o),
(-28,520,q),
(-32,514,o),
(-37,521,qs),
(-44,530,o),
(-45,544,qs),
(-46,560,o),
(-27,580,o),
(-12,579,qs),
(-7,579,o),
(3,577,qs),
(8,576,ls),
(11,575,o),
(13,578,q),
(13,580,l),
(42,634,o),
(83,635,qs),
(109,636,o),
(145,606,o),
(148,582,qs),
(151,554,o)
);
},
{
closed = 1;
nodes = (
(88,552,qs),
(116,552,o),
(111,581,qs),
(107,602,o),
(86,602,qs),
(67,602,o),
(46,564,q),
(74,552,o)
);
},
{
closed = 1;
nodes = (
(603,0,l),
(572,0,ls),
(485,0,o),
(440,53,q),
(411,0,o),
(333,0,qs),
(112,0,ls),
(105,0,o),
(103,7,qs),
(102,12,ls),
(98,27,o),
(118,49,o),
(136,49,qs),
(256,49,l),
(86,384,ls),
(66,423,o),
(85,437,q),
(86,437,o),
(86,438,q),
(93,442,o),
(100,445,qs),
(103,447,l),
(108,448,o),
(110,443,qs),
(311,49,l),
(330,49,ls),
(419,49,o),
(400,156,qs),
(338,504,ls),
(329,556,o),
(370,556,qs),
(375,556,ls),
(381,556,o),
(382,550,qs),
(451,155,ls),
(460,105,o),
(519,49,o),
(562,49,qs),
(595,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 3 2 75 1 6 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 3 3 5 97 7 1 5 5 23 77 9 8 12 3 6 6 10 97 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 7 7 23 77 0 3 3 5 97 0 5 5 23 77 9 8 12 3 6 6 10 97 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
42 41 78 76 74 71 67 65 54 52 49 46 41 79 42 79 34 35 36 43 38 34 13 7 28 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,767,qs),
(-7,791,o),
(21,796,qs),
(40,799,o),
(70,799,qs),
(125,799,ls),
(152,799,o),
(156,774,q),
(157,771,ls),
(158,766,o),
(151,766,qs),
(67,766,ls),
(36,766,o),
(13,758,q),
(12,757,o),
(9,756,qs),
(5,754,o),
(4,754,qs),
(-2,754,o)
);
},
{
closed = 1;
nodes = (
(166,718,o),
(171,692,q),
(171,689,l),
(173,684,o),
(165,684,qs),
(81,684,ls),
(50,684,o),
(28,676,q),
(26,676,o),
(23,674,q),
(19,673,o),
(18,673,qs),
(13,673,o),
(11,685,qs),
(7,709,o),
(35,714,qs),
(54,718,o),
(85,718,qs),
(139,718,ls)
);
},
{
closed = 1;
nodes = (
(235,514,o),
(204,472,o),
(173,472,qs),
(143,471,o),
(124,491,q),
(106,470,o),
(76,471,qs),
(18,472,o),
(5,546,qs),
(2,564,ls),
(-2,584,o),
(3,593,qs),
(8,605,o),
(24,605,qs),
(27,605,ls),
(31,605,o),
(32,599,qs),
(43,540,ls),
(49,506,o),
(77,506,qs),
(105,506,o),
(99,540,qs),
(95,564,ls),
(92,583,o),
(96,593,qs),
(102,605,o),
(117,605,qs),
(120,605,ls),
(124,605,o),
(125,599,qs),
(136,540,ls),
(142,505,o),
(170,506,qs),
(197,506,o),
(192,540,qs),
(188,564,ls),
(185,583,o),
(190,593,qs),
(195,605,o),
(210,605,qs),
(213,605,ls),
(218,605,o),
(218,599,q),
(228,547,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 10 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
12 1 0 1 3 1 0 3 128 9 7 2 5 4 6 6 5 114 0 2 0 1 0 2 1 103 13 1 3 0 4 5 3 4 103 8 1 6 10 10 6 89 8 1 6 6 10 98 11 1 10 6 10 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 0 1 3 1 0 3 128 9 7 2 5 4 6 4 5 6 128 0 2 0 1 0 2 1 103 13 1 3 0 4 5 3 4 103 8 1 6 10 10 6 89 8 1 6 6 10 98 11 1 10 6 10 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
20 19 1 0 79 77 75 73 68 65 62 60 55 52 49 47 42 40 33 30 19 37 20 36 14 11 8 5 0 18 1 18 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,708,o),
(29,736,qs),
(24,762,o),
(53,796,o),
(80,796,qs),
(137,796,o),
(147,736,qs),
(151,709,o),
(122,676,o),
(95,676,qs),
(70,676,o)
);
},
{
closed = 1;
nodes = (
(61,736,qs),
(67,704,o),
(93,704,qs),
(120,704,o),
(114,736,qs),
(108,767,o),
(83,767,qs),
(56,767,o)
);
},
{
closed = 1;
nodes = (
(233,513,o),
(203,472,o),
(172,471,qs),
(142,470,o),
(123,491,q),
(104,470,o),
(74,471,qs),
(17,471,o),
(4,545,qs),
(0,563,ls),
(-3,583,o),
(1,592,qs),
(7,604,o),
(23,604,qs),
(25,604,ls),
(30,604,o),
(31,599,qs),
(41,539,ls),
(48,505,o),
(75,505,qs),
(103,505,o),
(98,539,qs),
(94,563,ls),
(90,582,o),
(95,593,qs),
(101,604,o),
(115,604,qs),
(119,604,ls),
(123,604,o),
(124,599,qs),
(134,539,ls),
(140,504,o),
(169,505,qs),
(196,506,o),
(190,539,qs),
(186,563,ls),
(183,582,o),
(188,593,qs),
(194,604,o),
(209,604,qs),
(211,604,ls),
(216,604,o),
(217,599,qs),
(227,547,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
57 1 9 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
8 6 2 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 6 2 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
12 11 1 0 60 58 56 54 49 47 43 41 36 34 30 28 23 21 16 14 11 18 12 18 6 4 0 10 1 10 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,239,o),
(339,230,qs),
(295,175,l),
(288,169,o),
(280,175,qs),
(215,230,ls),
(206,238,o),
(212,246,qs),
(257,299,ls),
(263,307,o),
(272,299,qs),
(336,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,0,o),
(320,8,qs),
(233,504,ls),
(228,527,o),
(246,556,o),
(265,556,qs),
(270,556,ls),
(274,556,o),
(276,550,q),
(371,8,ls),
(372,0,o),
(365,0,qs),
(330,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,0,o),
(275,8,qs),
(210,377,ls),
(178,556,o),
(339,556,qs),
(424,556,ls),
(428,556,o),
(429,551,qs),
(430,547,ls),
(435,509,o),
(392,509,qs),
(344,509,ls),
(238,509,o),
(261,378,qs),
(326,8,ls),
(327,0,o),
(320,0,qs),
(285,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 13 10 7 4 0 17 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,361,o),
(525,316,qs),
(493,264,o),
(421,264,qs),
(334,264,o),
(291,323,q),
(264,268,o),
(188,264,qs),
(129,261,o),
(90,288,q),
(139,8,ls),
(141,0,o),
(132,0,qs),
(98,0,ls),
(89,0,o),
(88,8,qs),
(0,504,ls),
(-9,556,o),
(32,556,qs),
(37,556,ls),
(42,556,o),
(43,551,qs),
(62,442,ls),
(84,313,o),
(180,313,qs),
(224,313,o),
(262,381,o),
(252,442,qs),
(241,507,ls),
(237,528,o),
(253,557,o),
(268,557,qs),
(273,557,ls),
(279,557,o),
(280,551,qs),
(298,442,ls),
(309,381,o),
(371,313,o),
(416,313,qs),
(461,313,o),
(500,381,o),
(489,441,qs),
(477,507,ls),
(473,530,o),
(490,558,o),
(508,558,qs),
(513,558,ls),
(519,558,o),
(520,552,qs),
(541,430,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
43 1 1 0 39 1 6 1 2 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 36 37 52 37 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,0,o),
(514,0,qs),
(399,0,ls),
(331,0,o),
(281,30,qs),
(214,70,o),
(202,156,qs),
(190,241,o),
(256,279,q),
(177,316,o),
(164,412,qs),
(156,476,o),
(186,517,qs),
(221,564,o),
(295,564,qs),
(337,564,o),
(403,534,o),
(411,512,qs),
(416,497,o),
(405,497,qs),
(401,497,o),
(393,500,qs),
(348,518,o),
(310,518,qs),
(261,518,o),
(208,459,o),
(215,414,qs),
(224,362,o),
(298,303,o),
(354,303,qs),
(422,303,ls),
(442,303,o),
(472,282,o),
(475,267,q),
(475,263,ls),
(476,256,o),
(469,256,qs),
(352,256,ls),
(302,256,o),
(246,198,o),
(254,154,qs),
(263,104,o),
(336,47,o),
(391,47,qs),
(468,47,ls),
(488,47,o),
(517,26,o),
(520,11,q),
(520,7,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 2 0 1 0 2 1 103 0 3 3 5 97 0 5 5 23 77 0 0 0 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 0 0 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
58 35 34 36 52 52 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,523,qs),
(422,476,o),
(443,388,qs),
(480,226,o),
(490,178,q),
(491,176,o),
(490,176,q),
(505,95,o),
(475,46,qs),
(441,-10,o),
(359,-10,qs),
(287,-10,o),
(236,33,qs),
(178,83,o),
(162,176,qs),
(162,177,o),
(161,180,q),
(153,240,o),
(134,387,qs),
(125,463,o),
(153,510,qs),
(185,564,o),
(258,564,qs),
(321,564,o)
);
},
{
closed = 1;
nodes = (
(179,446,o),
(187,383,qs),
(213,177,l),
(238,37,o),
(350,37,qs),
(405,37,o),
(450,110,o),
(439,177,q),
(392,384,ls),
(378,446,o),
(311,517,o),
(266,517,qs),
(221,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 1 0 32 30 24 36 25 36 13 11 0 23 1 23 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,0,o),
(388,8,qs),
(323,378,ls),
(300,509,o),
(194,509,qs),
(145,509,ls),
(102,509,o),
(95,547,qs),
(94,551,ls),
(93,556,o),
(97,556,qs),
(182,556,ls),
(269,556,o),
(359,472,o),
(374,377,qs),
(439,8,ls),
(441,0,o),
(432,0,qs),
(397,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 2 1 1 76 0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 14 11 7 5 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,102,q),
(399,547,ls),
(399,556,o),
(406,556,qs),
(408,556,ls),
(426,556,o),
(451,528,o),
(451,508,qs),
(456,116,ls),
(458,-7,o),
(363,-7,qs),
(312,-7,o),
(251,48,o),
(227,116,qs),
(94,508,ls),
(87,528,o),
(102,556,o),
(120,556,qs),
(123,556,ls),
(129,556,o),
(132,547,qs),
(282,102,l),
(308,41,o),
(355,41,qs),
(402,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 21 18 14 12 7 4 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,0,o),
(159,12,qs),
(153,442,ls),
(151,564,o),
(246,564,qs),
(299,564,o),
(358,511,o),
(382,442,qs),
(528,12,l),
(531,0,o),
(521,0,qs),
(490,0,ls),
(480,0,o),
(477,11,qs),
(327,456,l),
(304,516,o),
(255,516,qs),
(208,516,o),
(204,456,q),
(210,11,l),
(211,0,o),
(201,0,qs),
(171,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 2 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 12 9 6 4 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,524,qs),
(418,475,o),
(433,382,qs),
(499,8,ls),
(501,0,o),
(493,0,qs),
(458,0,ls),
(449,0,o),
(448,8,qs),
(414,201,l),
(303,201,ls),
(238,201,o),
(185,243,qs),
(123,294,o),
(107,382,qs),
(94,459,o),
(129,509,qs),
(167,564,o),
(242,564,qs),
(309,564,o)
);
},
{
closed = 1;
nodes = (
(177,485,qs),
(148,447,o),
(159,382,qs),
(170,323,o),
(246,248,o),
(295,248,qs),
(406,248,l),
(384,376,ls),
(373,439,o),
(298,517,o),
(247,517,qs),
(201,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
32 1 0 3 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 98 5 1 4 4 24 4 78 1 0 35 33 31 28 21 20 14 11 8 6 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 7 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 6 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(968,-1,l),
(751,-1,ls),
(705,-1,o),
(683,14,q),
(667,-1,o),
(620,-1,qs),
(420,-1,l),
(420,0,l),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(584,49,l),
(548,70,o),
(494,151,o),
(487,195,qs),
(476,261,o),
(506,309,qs),
(543,368,o),
(621,368,qs),
(699,368,o),
(751,321,qs),
(806,273,o),
(815,195,qs),
(820,151,o),
(787,73,o),
(753,48,q),
(960,48,l)
);
},
{
closed = 1;
nodes = (
(771,151,o),
(763,195,qs),
(753,250,o),
(678,321,o),
(629,321,qs),
(586,321,o),
(560,291,qs),
(529,256,o),
(539,195,qs),
(547,148,o),
(628,66,o),
(675,58,q),
(720,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 1 3 1 1 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 7 5 2 1 1 3 95 4 1 3 3 24 3 78 0 0 49 47 0 40 0 40 34 87 22 38 38 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 943;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(385,60,qs),
(351,2,o),
(276,0,qs),
(4,0,l),
(-4,49,l),
(146,49,l),
(91,93,o),
(75,183,qs),
(62,257,o),
(96,309,qs),
(135,368,o),
(213,368,qs),
(279,368,o),
(330,322,qs),
(387,270,o),
(402,183,qs),
(414,110,o)
);
},
{
closed = 1;
nodes = (
(338,85,qs),
(361,123,o),
(350,184,qs),
(339,244,o),
(263,321,o),
(214,321,qs),
(167,321,o),
(143,285,qs),
(116,245,o),
(127,184,qs),
(137,127,o),
(219,49,o),
(268,49,qs),
(315,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 0 0 4 1 0 4 105 5 3 2 1 1 2 95 0 2 2 24 2 78 18 17 25 23 17 30 18 30 33 21 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,0,l),
(336,0,ls),
(290,0,o),
(268,15,q),
(252,0,o),
(204,0,qs),
(4,0,l),
(-4,49,l),
(169,49,l),
(133,70,o),
(79,152,o),
(72,196,qs),
(61,261,o),
(91,309,qs),
(127,368,o),
(205,368,qs),
(283,368,o),
(336,322,qs),
(390,274,o),
(399,196,qs),
(405,152,o),
(371,73,o),
(337,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(356,152,o),
(348,196,qs),
(338,250,o),
(262,321,o),
(214,321,qs),
(170,321,o),
(145,292,qs),
(114,256,o),
(124,196,qs),
(132,148,o),
(213,67,o),
(260,58,q),
(304,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 32 30 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,477,o),
(121,492,qs),
(119,506,o),
(135,526,o),
(149,526,qs),
(164,526,o),
(187,506,o),
(190,492,qs),
(192,477,o),
(176,456,o),
(161,456,qs),
(147,456,o)
);
},
{
closed = 1;
nodes = (
(222,477,o),
(219,492,qs),
(217,506,o),
(233,526,o),
(247,526,qs),
(262,526,o),
(285,506,o),
(288,492,qs),
(290,477,o),
(274,456,o),
(259,456,qs),
(245,456,o)
);
},
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 98 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 102 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
52 51 25 24 13 12 1 0 59 57 51 62 52 62 49 47 45 43 37 35 32 30 24 50 25 50 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,239,o),
(339,230,qs),
(295,175,l),
(288,169,o),
(280,175,qs),
(215,230,ls),
(206,238,o),
(212,246,qs),
(257,299,ls),
(263,307,o),
(272,299,qs),
(336,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,0,o),
(319,8,qs),
(232,504,ls),
(227,527,o),
(245,556,o),
(264,556,qs),
(269,556,ls),
(273,556,o),
(275,550,q),
(370,8,ls),
(371,0,o),
(364,0,qs),
(329,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,0,o),
(274,8,qs),
(209,377,ls),
(177,556,o),
(333,556,qs),
(423,556,ls),
(427,556,o),
(428,551,qs),
(429,547,ls),
(436,509,o),
(391,509,qs),
(343,509,ls),
(237,509,o),
(260,378,qs),
(325,8,ls),
(326,0,o),
(319,0,qs),
(284,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 13 10 7 4 0 17 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,361,o),
(525,316,qs),
(493,264,o),
(421,264,qs),
(334,264,o),
(291,323,q),
(264,268,o),
(188,264,qs),
(129,261,o),
(90,288,q),
(139,8,ls),
(141,0,o),
(132,0,qs),
(98,0,ls),
(89,0,o),
(88,8,qs),
(0,504,ls),
(-9,556,o),
(32,556,qs),
(37,556,ls),
(42,556,o),
(43,551,qs),
(62,442,ls),
(84,313,o),
(180,313,qs),
(224,313,o),
(262,381,o),
(252,442,qs),
(241,507,ls),
(237,528,o),
(253,557,o),
(268,557,qs),
(273,557,ls),
(279,557,o),
(280,551,qs),
(298,442,ls),
(309,381,o),
(371,313,o),
(416,313,qs),
(461,313,o),
(500,381,o),
(489,441,qs),
(477,507,ls),
(473,530,o),
(490,558,o),
(508,558,qs),
(513,558,ls),
(519,558,o),
(520,552,qs),
(541,430,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
43 1 1 0 39 1 6 1 2 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 36 37 52 37 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,306,qs),
(452,279,o),
(392,246,o),
(349,246,qs),
(269,247,o),
(214,283,q),
(262,10,ls),
(264,0,o),
(254,0,qs),
(224,0,ls),
(213,0,o),
(211,10,qs),
(124,504,ls),
(119,527,o),
(137,556,o),
(156,556,qs),
(160,556,ls),
(166,556,o),
(167,550,qs),
(175,504,l),
(209,565,o),
(282,564,qs),
(322,564,o),
(382,533,o),
(390,509,q),
(396,496,o),
(384,496,qs),
(381,496,o),
(376,497,qs),
(373,498,o),
(372,499,q),
(328,517,o),
(292,516,qs),
(245,516,o),
(187,446,o),
(195,398,qs),
(195,396,o),
(196,388,qs),
(203,349,o),
(289,293,o),
(343,292,qs),
(384,290,o),
(429,313,qs),
(431,314,ls),
(439,317,o),
(443,317,qs),
(454,318,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
26 1 2 1 45 1 0 2 40 1 6 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 52 51 35 36 38 36 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,139,q),
(161,142,o),
(151,220,qs),
(131,386,ls),
(122,463,o),
(149,510,qs),
(182,564,o),
(254,564,qs),
(317,564,o),
(365,522,qs),
(419,474,o),
(440,386,qs),
(493,155,l),
(525,-10,o),
(419,-10,qs),
(380,-10,o),
(352,19,qs),
(350,21,o),
(348,19,q),
(330,-10,o),
(288,-10,qs),
(185,-10,o)
);
},
{
closed = 1;
nodes = (
(329,85,qs),
(329,97,o),
(336,97,qs),
(343,97,o),
(347,85,qs),
(365,37,o),
(405,37,qs),
(438,37,o),
(455,81,o),
(444,142,qs),
(441,164,o),
(389,383,qs),
(375,446,o),
(308,517,o),
(262,518,qs),
(217,517,o),
(175,446,o),
(182,383,qs),
(206,183,o),
(213,142,qs),
(230,38,o),
(289,38,qs),
(329,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 42 40 38 36 30 28 22 44 23 44 14 12 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,292,o),
(464,284,q),
(373,253,o),
(320,181,qs),
(273,119,o),
(247,8,qs),
(245,0,o),
(238,0,qs),
(203,0,ls),
(193,0,o),
(194,9,qs),
(198,68,o),
(252,195,o),
(291,238,q),
(228,254,o),
(147,347,o),
(145,407,qs),
(142,476,o),
(173,518,qs),
(209,564,o),
(274,564,qs),
(313,564,o),
(376,534,o),
(384,511,qs),
(388,497,o),
(377,497,qs),
(374,497,o),
(368,499,qs),
(366,500,o),
(365,500,q),
(323,517,o),
(288,517,qs),
(195,517,o),
(196,405,qs),
(197,360,o),
(233,324,qs),
(273,285,o),
(334,278,q),
(403,326,o),
(478,342,q),
(485,345,o),
(489,336,qs),
(498,321,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
31 28 4 3 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
58 35 36 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,102,q),
(399,547,ls),
(399,556,o),
(406,556,qs),
(408,556,ls),
(426,556,o),
(451,528,o),
(451,508,qs),
(456,116,ls),
(458,-7,o),
(363,-7,qs),
(312,-7,o),
(251,48,o),
(227,116,qs),
(94,508,ls),
(87,528,o),
(102,556,o),
(120,556,qs),
(123,556,ls),
(129,556,o),
(132,547,qs),
(282,102,l),
(308,41,o),
(355,41,qs),
(402,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 21 18 14 12 7 4 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,0,o),
(159,12,qs),
(153,442,ls),
(151,564,o),
(246,564,qs),
(299,564,o),
(358,511,o),
(382,442,qs),
(528,12,l),
(531,0,o),
(521,0,qs),
(490,0,ls),
(480,0,o),
(477,11,qs),
(327,456,l),
(304,516,o),
(255,516,qs),
(208,516,o),
(204,456,q),
(210,11,l),
(211,0,o),
(201,0,qs),
(171,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 2 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 12 9 6 4 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,524,qs),
(425,475,o),
(440,382,qs),
(506,8,ls),
(508,0,o),
(500,0,qs),
(465,0,ls),
(456,0,o),
(455,8,qs),
(421,201,l),
(310,201,ls),
(245,201,o),
(192,243,qs),
(130,294,o),
(114,382,qs),
(101,459,o),
(136,509,qs),
(174,564,o),
(249,564,qs),
(316,564,o)
);
},
{
closed = 1;
nodes = (
(184,485,qs),
(155,447,o),
(166,382,qs),
(177,323,o),
(253,248,o),
(302,248,qs),
(413,248,l),
(391,376,ls),
(380,439,o),
(305,517,o),
(254,517,qs),
(208,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 117 values pushed */
34 1 0 1 1 76 0 3 2 5 2 3 5 128 0 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 14 1 12 15 1 13 16 12 13 105 0 8 0 10 17 8 10 105 18 1 16 0 17 16 17 101 0 6 6 7 98 11 1 7 7 24 7 78 110 109 116 114 109 120 110 120 107 105 101 99 95 93 89 87 81 79 76 74 66 65 35 36 51 40 35 34 35 51 55 19 7 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 0 4 0 133 0 4 1 4 133 9 1 7 10 1 8 11 7 8 105 0 3 0 5 12 3 5 105 13 1 11 0 12 11 12 101 0 1 1 2 98 6 1 2 2 24 2 78 74 73 80 78 73 84 74 84 71 69 65 63 36 38 35 40 24 35 36 51 34 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
0 0 4 0 133 0 4 1 4 133 9 1 7 10 1 8 11 7 8 105 0 3 0 5 12 3 5 105 17 1 11 0 12 13 11 12 105 19 15 18 3 13 16 1 14 13 14 101 0 1 1 2 98 6 1 2 2 24 2 78 98 97 86 85 74 73 104 102 97 108 98 108 92 90 85 96 86 96 80 78 73 84 74 84 71 69 65 63 36 38 35 40 24 35 36 51 34 20 7 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
50 1 0 5 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 98 8 7 2 3 3 24 3 78 80 79 68 67 1 0 86 84 79 90 80 90 74 72 67 78 68 78 65 63 59 57 53 51 49 47 44 42 34 33 25 23 20 18 14 11 8 6 0 54 1 54 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
50 1 0 5 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 21 1 13 0 14 15 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 98 8 7 2 3 3 24 3 78 104 103 92 91 80 79 68 67 1 0 110 108 103 114 104 114 98 96 91 102 92 102 86 84 79 90 80 90 74 72 67 78 68 78 65 63 59 57 53 51 49 47 44 42 34 33 25 23 20 18 14 11 8 6 0 54 1 54 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(797,-19,qs),
(791,-30,ls),
(777,-54,o),
(775,-75,q),
(806,-81,o),
(811,-112,qs),
(814,-127,o),
(797,-149,o),
(782,-149,qs),
(745,-149,o),
(737,-109,qs),
(728,-58,o),
(772,3,q),
(755,0,o),
(737,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(731,49,ls),
(774,49,o),
(812,106,o),
(803,156,qs),
(778,299,ls),
(770,349,o),
(810,349,qs),
(815,349,ls),
(820,349,o),
(821,344,qs),
(855,155,ls),
(870,67,o),
(822,26,q),
(815,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
34 1 0 1 86 1 7 6 95 1 12 7 3 76 0 3 2 5 2 3 5 128 0 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 12 7 8 7 12 8 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 91 89 85 83 80 78 70 69 35 36 52 43 35 34 35 51 55 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 898;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,-19,qs),
(791,-30,ls),
(777,-54,o),
(775,-75,q),
(806,-81,o),
(811,-112,qs),
(814,-127,o),
(797,-149,o),
(782,-149,qs),
(745,-149,o),
(737,-109,qs),
(728,-58,o),
(772,3,q),
(755,0,o),
(737,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(731,49,ls),
(774,49,o),
(812,106,o),
(803,156,qs),
(778,299,ls),
(770,349,o),
(810,349,qs),
(815,349,ls),
(820,349,o),
(821,344,qs),
(855,155,ls),
(870,67,o),
(822,26,q),
(815,14,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
50 1 2 1 59 1 7 2 2 76 0 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 36 35 40 24 35 36 52 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 898;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(797,-19,qs),
(791,-30,ls),
(777,-54,o),
(775,-75,q),
(806,-81,o),
(811,-112,qs),
(814,-127,o),
(797,-149,o),
(782,-149,qs),
(745,-149,o),
(737,-109,qs),
(728,-58,o),
(772,3,q),
(755,0,o),
(737,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(731,49,ls),
(774,49,o),
(812,106,o),
(803,156,qs),
(778,299,ls),
(770,349,o),
(810,349,qs),
(815,349,ls),
(820,349,o),
(821,344,qs),
(855,155,ls),
(870,67,o),
(822,26,q),
(815,14,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
50 1 2 1 59 1 7 2 2 76 0 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 8 3 5 105 13 10 12 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 77 76 65 64 83 81 76 87 77 87 71 69 64 75 65 75 36 35 40 24 35 36 52 37 14 7 30 
CALL[ ]	/* CallFunction */";
};
width = 898;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 0 4 0 133 0 4 1 4 133 9 11 2 7 10 1 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 98 6 1 2 2 24 2 78 50 49 71 69 65 63 56 54 49 60 50 60 35 40 24 35 36 51 34 12 7 29 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
50 1 0 5 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 98 8 7 2 3 3 24 3 78 68 67 56 55 1 0 74 72 67 78 68 78 62 60 55 66 56 66 53 51 49 47 44 42 34 33 25 23 20 18 14 11 8 6 0 54 1 54 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(849,86,o),
(821,46,qs),
(791,0,o),
(719,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(713,49,ls),
(756,49,o),
(795,106,o),
(786,156,qs),
(761,299,ls),
(752,349,o),
(792,349,qs),
(797,349,ls),
(803,349,o),
(803,344,q),
(837,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(796,-112,qs),
(799,-127,o),
(782,-149,o),
(766,-149,qs),
(751,-149,o),
(726,-128,o),
(723,-112,qs),
(720,-96,o),
(737,-74,o),
(753,-74,qs),
(768,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
34 1 0 1 1 76 0 3 2 5 2 3 5 128 0 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 14 1 12 0 13 8 12 13 105 0 8 0 10 8 10 101 0 6 6 7 96 11 1 7 7 24 7 78 87 86 93 91 86 97 87 97 82 80 77 75 67 66 35 36 52 40 35 34 35 51 55 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 105 values pushed */
34 1 0 1 1 76 0 3 2 5 2 3 5 128 0 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 14 16 2 12 15 1 13 8 12 13 105 0 8 0 10 8 10 101 0 6 6 7 98 11 1 7 7 24 7 78 86 85 107 105 101 99 92 90 85 96 86 96 81 79 76 74 66 65 35 36 51 40 35 34 35 51 55 17 7 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 129 values pushed */
34 1 0 1 86 1 5 10 2 76 0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 9 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 98 13 12 2 8 8 24 8 78 104 103 92 91 37 36 110 108 103 114 104 114 98 96 91 102 92 102 89 87 85 83 80 78 70 69 61 59 56 54 50 47 44 42 36 90 37 90 35 34 35 51 55 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,625,o),
(175,625,qs),
(157,625,o),
(121,639,qs),
(118,640,o),
(114,641,q),
(87,652,o),
(77,652,qs),
(63,652,o),
(58,639,q),
(58,638,o),
(56,634,qs),
(54,628,o),
(53,626,qs),
(49,620,o),
(44,626,qs),
(37,636,o),
(36,650,qs),
(35,666,o),
(54,685,o),
(69,685,qs),
(74,685,o),
(84,682,qs),
(89,681,ls),
(92,681,o),
(94,684,q),
(94,685,o),
(94,686,q),
(123,739,o),
(164,741,qs),
(190,741,o),
(226,712,o),
(229,687,qs),
(232,659,o)
);
},
{
closed = 1;
nodes = (
(192,686,qs),
(188,708,o),
(167,708,qs),
(148,708,o),
(127,670,q),
(155,657,o),
(169,657,qs),
(197,657,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
36 1 4 1 15 1 3 2 2 76 0 0 0 5 1 0 5 105 6 1 4 2 3 4 89 0 1 0 2 3 1 2 105 6 1 4 4 3 97 0 3 4 3 81 35 34 39 37 34 41 35 41 36 43 39 34 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,464,o),
(108,479,qs),
(105,493,o),
(121,513,o),
(135,513,qs),
(150,513,o),
(174,493,o),
(176,479,qs),
(179,464,o),
(162,443,o),
(148,443,qs),
(133,443,o)
);
},
{
closed = 1;
nodes = (
(208,464,o),
(205,479,qs),
(203,493,o),
(219,513,o),
(233,513,qs),
(248,513,o),
(271,493,o),
(274,479,qs),
(276,464,o),
(260,443,o),
(245,443,qs),
(231,443,o)
);
},
{
closed = 1;
nodes = (
(440,0,l),
(452,-80,o),
(432,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-176,o),
(165,-161,qs),
(160,-149,o),
(173,-149,qs),
(177,-149,o),
(184,-151,qs),
(272,-179,o),
(330,-161,qs),
(410,-136,o),
(388,0,q),
(276,0,ls),
(209,0,o),
(156,45,qs),
(96,97,o),
(82,178,qs),
(68,258,o),
(102,310,qs),
(139,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(420,194,o),
(435,49,q),
(557,49,l),
(565,0,l)
);
},
{
closed = 1;
nodes = (
(379,69,ls),
(364,194,o),
(325,256,qs),
(284,321,o),
(218,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(133,179,qs),
(143,123,o),
(220,49,o),
(268,49,qs),
(382,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
0 7 6 8 6 7 8 128 0 8 8 132 3 1 1 13 2 12 3 0 5 1 0 105 0 5 0 11 4 5 11 105 14 10 2 4 4 6 95 9 1 6 6 24 6 78 57 56 13 12 1 0 64 62 56 68 57 68 55 54 51 49 45 43 38 36 30 28 25 24 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,564,o),
(118,564,qs),
(143,564,o),
(158,539,qs),
(188,488,l),
(202,539,ls),
(208,564,o),
(231,564,qs),
(238,564,o),
(237,558,qs),
(212,457,ls),
(210,450,o),
(204,450,qs),
(184,450,ls),
(179,450,o),
(174,457,qs),
(113,558,ls)
);
},
{
closed = 1;
nodes = (
(440,0,l),
(452,-80,o),
(432,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-176,o),
(165,-161,qs),
(160,-149,o),
(173,-149,qs),
(177,-149,o),
(184,-151,qs),
(272,-179,o),
(330,-161,qs),
(410,-136,o),
(388,0,q),
(276,0,ls),
(209,0,o),
(156,45,qs),
(96,97,o),
(82,178,qs),
(68,258,o),
(102,310,qs),
(139,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(420,194,o),
(435,49,q),
(557,49,l),
(565,0,l)
);
},
{
closed = 1;
nodes = (
(379,69,ls),
(364,194,o),
(325,256,qs),
(284,321,o),
(218,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(133,179,qs),
(143,123,o),
(220,49,o),
(268,49,qs),
(382,49,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 4 1 0 4 128 0 6 5 7 5 6 7 128 0 7 7 132 0 4 0 10 3 4 10 106 2 1 1 1 23 77 11 9 2 3 3 5 95 8 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 6 5 7 5 6 7 128 0 7 7 132 0 4 0 10 3 4 10 106 11 9 2 3 3 5 95 8 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
50 49 57 55 49 61 50 61 19 36 37 38 35 18 36 36 33 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,547,o),
(675,547,qs),
(700,547,o),
(716,522,qs),
(746,471,l),
(759,522,ls),
(765,547,o),
(788,547,qs),
(795,547,o),
(795,541,q),
(770,439,ls),
(768,433,o),
(762,433,qs),
(742,433,ls),
(736,433,o),
(732,439,qs),
(671,541,ls)
);
},
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
11 6 2 0 1 1 76 2 1 1 0 1 133 0 0 3 0 133 0 3 7 3 133 0 7 4 7 133 0 4 9 1 5 10 4 5 105 12 14 2 10 13 1 11 6 10 11 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 67 66 88 86 82 80 73 71 66 77 67 77 62 60 40 24 35 36 51 36 36 21 33 15 6 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 6 2 0 1 67 1 3 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 18 14 17 3 12 15 1 13 7 12 13 105 0 7 0 9 7 9 101 2 1 1 1 23 77 5 16 2 3 3 6 98 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 7 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 98 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
85 84 73 72 18 17 91 89 84 95 85 95 79 77 72 83 73 83 70 68 66 64 61 59 51 50 42 40 37 35 31 28 25 23 17 71 18 71 36 21 33 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
},
{
closed = 1;
nodes = (
(488,-408,o),
(490,-423,qs),
(493,-438,o),
(476,-458,o),
(462,-458,qs),
(447,-458,o),
(424,-438,o),
(422,-423,qs),
(419,-408,o),
(435,-388,o),
(450,-388,qs),
(464,-388,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 6 2 0 1 67 1 3 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 26 18 25 3 16 19 1 17 20 16 17 105 27 1 20 0 21 20 21 101 2 1 1 1 23 77 5 22 2 3 3 6 98 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 26 18 25 3 16 19 1 17 20 16 17 105 27 1 20 0 21 20 21 101 5 22 2 3 3 6 98 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 68 values pushed */
121 120 109 108 97 96 85 84 73 72 18 17 127 125 120 131 121 131 115 113 108 119 109 119 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 70 68 66 64 61 59 51 50 42 40 37 35 31 28 25 23 17 71 18 71 36 21 33 28 7 25 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
},
{
closed = 1;
nodes = (
(494,-408,o),
(497,-423,qs),
(499,-438,o),
(483,-458,o),
(468,-458,qs),
(454,-458,o),
(431,-438,o),
(428,-423,qs),
(426,-408,o),
(442,-388,o),
(456,-388,qs),
(471,-388,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 6 2 0 1 67 1 3 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 26 18 25 3 16 19 1 17 20 16 17 105 27 1 20 0 21 20 21 101 2 1 1 1 23 77 5 22 2 3 3 6 98 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 26 18 25 3 16 19 1 17 20 16 17 105 27 1 20 0 21 20 21 101 5 22 2 3 3 6 98 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 68 values pushed */
121 120 109 108 97 96 85 84 73 72 18 17 127 125 120 131 121 131 115 113 108 119 109 119 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 70 68 66 64 61 59 51 50 42 40 37 35 31 28 25 23 17 71 18 71 36 21 33 28 7 25 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,547,o),
(675,547,qs),
(700,547,o),
(716,522,qs),
(746,471,l),
(759,522,ls),
(765,547,o),
(788,547,qs),
(795,547,o),
(795,541,q),
(770,439,ls),
(768,433,o),
(762,433,qs),
(742,433,ls),
(736,433,o),
(732,439,qs),
(671,541,ls)
);
},
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 136 values pushed */
11 6 2 7 1 51 1 3 4 2 76 2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 6 5 8 5 6 8 128 0 8 4 5 8 4 126 0 12 3 9 3 12 9 128 0 7 0 5 6 7 5 105 0 4 0 3 12 4 3 103 0 9 14 1 10 15 9 10 105 17 19 2 15 18 1 16 11 15 16 105 0 11 13 13 11 89 0 11 11 13 97 0 13 11 13 81 103 102 124 122 118 116 109 107 102 113 103 113 98 96 93 91 83 82 74 72 69 67 63 60 40 35 34 35 51 57 36 21 33 20 6 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
11 6 2 7 1 51 1 3 4 103 1 8 13 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 87 values pushed */
0 0 7 5 7 0 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 12 17 18 105 0 12 0 14 12 14 101 2 1 1 1 23 77 10 21 2 8 8 11 98 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 12 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 98 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
121 120 109 108 54 53 127 125 120 131 121 131 115 113 108 119 109 119 106 104 102 100 97 95 87 86 78 76 73 71 67 64 61 59 53 107 54 107 35 34 35 51 57 36 21 33 24 7 30 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 147 values pushed */
11 6 2 0 1 67 1 3 8 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 5 20 2 3 11 10 2 6 12 3 6 105 22 14 21 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 17 17 16 89 24 18 23 3 16 16 17 97 19 1 17 16 17 81 109 108 97 96 85 84 73 72 18 17 115 113 108 119 109 119 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 70 68 66 64 61 59 51 50 42 40 37 35 31 28 25 23 17 71 18 71 36 21 33 25 6 25 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(433,-311,o),
(436,-326,qs),
(438,-340,o),
(422,-360,o),
(407,-360,qs),
(393,-360,o),
(370,-340,o),
(367,-326,qs),
(365,-311,o),
(381,-290,o),
(395,-290,qs),
(410,-290,o)
);
},
{
closed = 1;
nodes = (
(531,-311,o),
(533,-326,qs),
(536,-340,o),
(520,-360,o),
(505,-360,qs),
(491,-360,o),
(468,-340,o),
(465,-326,qs),
(463,-311,o),
(479,-290,o),
(493,-290,qs),
(507,-290,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
11 6 2 7 1 51 1 3 4 103 1 8 13 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 99 values pushed */
0 0 7 5 7 0 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 27 19 26 3 17 20 1 18 12 17 18 105 0 12 0 14 21 12 14 105 29 23 28 3 21 24 1 22 21 22 101 2 1 1 1 23 77 10 25 2 8 8 11 98 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 99 values pushed */
2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 27 19 26 3 17 20 1 18 12 17 18 105 0 12 0 14 21 12 14 105 29 23 28 3 21 24 1 22 21 22 101 10 25 2 8 8 11 98 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 65 values pushed */
145 144 133 132 121 120 109 108 54 53 151 149 144 155 145 155 139 137 132 143 133 143 127 125 120 131 121 131 115 113 108 119 109 119 106 104 102 100 97 95 87 86 78 76 73 71 67 64 61 59 53 107 54 107 35 34 35 51 57 36 21 33 30 7 30 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,547,o),
(675,547,qs),
(700,547,o),
(716,522,qs),
(746,471,l),
(759,522,ls),
(765,547,o),
(788,547,qs),
(795,547,o),
(795,541,q),
(770,439,ls),
(768,433,o),
(762,433,qs),
(742,433,ls),
(736,433,o),
(732,439,qs),
(671,541,ls)
);
},
{
closed = 1;
nodes = (
(256,406,o),
(265,406,qs),
(290,406,o),
(305,381,qs),
(335,331,l),
(348,381,ls),
(355,406,o),
(378,406,qs),
(385,406,o),
(384,401,qs),
(359,299,ls),
(357,292,o),
(351,292,qs),
(331,292,ls),
(325,292,o),
(321,299,qs),
(260,401,l)
);
},
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
11 6 2 0 1 23 1 6 4 28 1 3 6 3 76 2 1 1 0 1 133 0 0 4 0 133 5 1 4 6 4 133 0 6 3 6 133 0 3 10 3 133 0 10 7 10 133 0 7 12 1 8 13 7 8 105 15 17 2 13 16 1 14 9 13 14 105 0 9 11 11 9 89 0 9 9 11 97 0 11 9 11 81 84 83 105 103 99 97 90 88 83 94 84 94 79 77 74 72 64 63 55 53 36 51 36 36 21 35 36 21 33 18 6 31 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,547,o),
(660,547,qs),
(685,547,o),
(701,522,qs),
(731,471,l),
(744,522,ls),
(750,547,o),
(773,547,qs),
(780,547,o),
(780,541,q),
(755,439,ls),
(753,433,o),
(747,433,qs),
(727,433,ls),
(721,433,o),
(717,439,qs),
(656,541,ls)
);
},
{
closed = 1;
nodes = (
(256,406,o),
(265,406,qs),
(290,406,o),
(305,381,qs),
(335,331,l),
(348,381,ls),
(355,406,o),
(378,406,qs),
(385,406,o),
(384,401,qs),
(359,299,ls),
(357,292,o),
(351,292,qs),
(331,292,ls),
(325,292,o),
(321,299,qs),
(260,401,l)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
11 6 2 0 1 23 1 7 4 28 1 3 7 84 1 6 11 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 0 1 4 1 0 4 128 5 1 4 7 1 4 7 126 0 7 3 1 7 3 126 0 3 11 1 3 11 126 0 11 6 1 11 6 126 21 17 20 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 2 1 1 1 23 77 8 19 2 6 6 9 98 14 13 2 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
2 1 1 0 1 133 0 0 4 0 133 5 1 4 7 4 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 98 14 13 2 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
102 101 90 89 35 34 108 106 101 112 102 112 96 94 89 100 90 100 87 85 83 81 78 76 68 67 59 57 54 52 48 45 42 40 34 88 35 88 36 21 35 36 21 33 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,406,o),
(265,406,qs),
(290,406,o),
(305,381,qs),
(335,331,l),
(348,381,ls),
(355,406,o),
(378,406,qs),
(385,406,o),
(384,401,qs),
(359,299,ls),
(357,292,o),
(351,292,qs),
(331,292,ls),
(325,292,o),
(321,299,qs),
(260,401,l)
);
},
{
closed = 1;
nodes = (
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(683,49,l),
(692,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
11 6 2 0 1 1 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 0 3 3 4 95 8 1 4 4 24 4 78 19 40 24 35 36 34 36 21 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,433,o),
(53,439,qs),
(-8,541,ls),
(-12,547,o),
(-4,547,qs),
(22,547,o),
(37,522,qs),
(67,471,l),
(80,522,ls),
(86,547,o),
(110,547,qs),
(116,547,o),
(116,541,q),
(91,439,ls),
(89,433,o),
(83,433,qs),
(63,433,ls)
);
},
{
closed = 1;
nodes = (
(159,86,o),
(131,46,qs),
(101,0,o),
(29,0,qs),
(7,0,l),
(-2,49,l),
(23,49,ls),
(114,49,o),
(96,156,qs),
(71,299,ls),
(62,349,o),
(102,349,qs),
(107,349,ls),
(113,349,o),
(113,344,q),
(147,155,ls)
);
},
{
closed = 1;
nodes = (
(114,-97,o),
(117,-112,qs),
(119,-127,o),
(103,-147,o),
(88,-147,qs),
(74,-147,o),
(51,-127,o),
(48,-112,qs),
(46,-97,o),
(62,-77,o),
(76,-77,qs),
(91,-77,o)
);
},
{
closed = 1;
nodes = (
(201,-147,o),
(186,-147,qs),
(172,-147,o),
(149,-127,o),
(146,-112,qs),
(144,-97,o),
(160,-77,o),
(174,-77,qs),
(189,-77,o),
(212,-97,o),
(215,-112,qs),
(217,-127,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
8 3 2 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 2 0 3 0 2 3 128 0 3 4 0 3 4 126 8 11 2 6 9 1 7 6 7 101 1 1 0 0 23 77 0 4 4 5 98 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
1 1 0 2 0 133 10 1 2 3 2 133 0 3 4 3 133 8 11 2 6 9 1 7 6 7 101 0 4 4 5 98 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
34 33 0 0 55 53 49 47 40 38 33 44 34 44 29 27 26 24 21 19 0 16 0 15 36 21 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,547,o),
(4,547,qs),
(30,547,o),
(45,522,qs),
(75,471,l),
(88,522,ls),
(94,547,o),
(118,547,qs),
(124,547,o),
(124,541,q),
(99,439,ls),
(97,433,o),
(91,433,qs),
(71,433,ls),
(65,433,o),
(61,439,qs),
(0,541,ls)
);
},
{
closed = 1;
nodes = (
(297,0,l),
(266,0,ls),
(179,0,o),
(134,53,q),
(105,0,o),
(28,0,qs),
(5,0,l),
(-3,49,l),
(21,49,ls),
(113,49,o),
(94,156,qs),
(69,299,ls),
(60,349,o),
(101,349,qs),
(106,349,ls),
(111,349,o),
(112,344,qs),
(145,155,ls),
(154,105,o),
(213,49,o),
(256,49,qs),
(289,49,l)
);
},
{
closed = 1;
nodes = (
(137,-97,o),
(139,-112,qs),
(142,-127,o),
(125,-147,o),
(111,-147,qs),
(97,-147,o),
(73,-127,o),
(71,-112,qs),
(68,-97,o),
(84,-77,o),
(99,-77,qs),
(113,-77,o)
);
},
{
closed = 1;
nodes = (
(235,-97,o),
(237,-112,qs),
(240,-127,o),
(223,-147,o),
(209,-147,qs),
(194,-147,o),
(171,-127,o),
(169,-112,qs),
(166,-97,o),
(182,-77,o),
(196,-77,qs),
(211,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 6 2 0 1 34 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 4 1 0 4 128 0 4 3 1 4 3 126 14 10 13 3 8 11 1 9 8 9 101 2 1 1 1 23 77 5 12 2 3 3 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
52 51 40 39 18 17 58 56 51 62 52 62 46 44 39 50 40 50 37 35 33 31 30 28 25 23 17 38 18 38 36 21 33 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,806,qs),
(538,810,o),
(539,815,qs),
(541,825,o),
(551,829,q),
(556,830,o),
(559,828,qs),
(566,823,o),
(574,805,qs),
(599,739,o),
(584,707,qs),
(581,701,o),
(578,701,qs),
(573,701,o),
(573,708,q),
(566,746,o),
(545,787,qs),
(540,799,o)
);
},
{
closed = 1;
nodes = (
(479,610,o),
(483,619,qs),
(488,632,o),
(504,632,qs),
(507,632,ls),
(512,632,o),
(513,626,qs),
(523,567,ls),
(529,532,o),
(557,532,qs),
(585,532,o),
(579,567,qs),
(575,591,ls),
(572,610,o),
(576,620,qs),
(582,632,o),
(597,632,qs),
(600,632,ls),
(604,632,o),
(605,626,qs),
(616,567,ls),
(622,531,o),
(650,532,qs),
(678,533,o),
(672,567,qs),
(668,591,ls),
(665,609,o),
(670,620,qs),
(676,632,o),
(690,632,qs),
(693,632,ls),
(698,632,o),
(699,626,qs),
(709,574,ls),
(715,540,o),
(685,499,o),
(654,498,qs),
(624,498,o),
(604,518,q),
(586,497,o),
(556,498,qs),
(499,499,o),
(485,572,qs),
(482,591,ls)
);
},
{
closed = 1;
nodes = (
(991,86,o),
(964,46,qs),
(933,0,o),
(861,0,qs),
(815,0,ls),
(729,0,o),
(684,52,q),
(655,0,o),
(578,0,qs),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(570,49,ls),
(662,49,o),
(643,156,qs),
(605,373,ls),
(601,395,o),
(619,424,o),
(637,424,qs),
(642,424,ls),
(647,424,o),
(648,418,qs),
(695,155,l),
(696,144,l),
(720,49,o),
(805,49,qs),
(831,49,l),
(855,49,ls),
(946,49,o),
(928,156,qs),
(889,373,ls),
(880,424,o),
(921,424,qs),
(926,424,ls),
(932,424,o),
(933,419,qs),
(979,156,ls)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
22 1 1 4 113 108 2 9 18 2 76 16 14 12 2 4 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 0 3 0 133 7 5 2 3 4 4 3 112 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 11 1 9 9 15 98 16 1 15 15 24 77 19 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 11 1 9 9 15 98 16 1 15 15 24 77 19 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 19 1 17 0 14 17 14 101 11 1 9 9 15 98 16 1 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
122 121 129 127 121 132 122 132 117 114 112 109 107 105 99 97 94 92 87 84 80 77 73 69 38 51 37 51 37 52 34 46 35 20 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1019;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o),
(793,-97,o),
(796,-112,qs),
(798,-127,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(856,-178,o),
(859,-193,qs),
(862,-208,o),
(845,-228,o),
(831,-228,qs),
(816,-228,o),
(793,-208,o),
(791,-193,qs),
(788,-178,o),
(804,-158,o),
(818,-158,qs),
(832,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 141 values pushed */
34 1 0 1 86 1 5 10 2 76 0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 21 16 2 14 17 1 15 18 14 15 105 0 9 0 11 19 9 11 105 22 1 18 0 19 18 19 101 7 20 2 5 5 8 98 13 12 2 8 8 24 8 78 116 115 104 103 37 36 122 120 115 126 116 126 110 108 103 114 104 114 101 99 95 93 89 87 85 83 80 78 70 69 61 59 56 54 50 47 44 42 36 90 37 90 35 34 35 51 55 23 7 27 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
22 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 98 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 102 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 35 33 27 38 28 38 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = quotedbl.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,382,o),
(75,385,qs),
(75,386,o),
(75,388,qs),
(62,503,ls),
(56,556,o),
(12,556,qs),
(5,556,ls),
(1,556,o),
(1,551,qs),
(1,550,o),
(1,549,q),
(43,388,ls),
(44,382,o),
(49,382,qs),
(71,382,ls)
);
},
{
closed = 1;
nodes = (
(174,382,o),
(174,385,qs),
(174,386,o),
(174,388,qs),
(161,503,ls),
(155,556,o),
(111,556,qs),
(104,556,ls),
(100,556,o),
(100,551,qs),
(100,550,o),
(100,549,qs),
(141,388,ls),
(143,382,o),
(148,382,qs),
(170,382,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
19 3 2 1 0 1 76 5 3 4 3 1 1 0 97 2 1 0 0 23 1 78 16 16 0 0 16 31 16 31 25 22 0 15 0 15 54 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = quotedbl.arabic;
unicode = 57856;
},
{
glyphname = numbersign.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,5,l),
(200,0,o),
(206,0,qs),
(247,0,ls),
(250,0,o),
(249,3,qs),
(248,6,l),
(207,159,l),
(364,159,l),
(407,6,l),
(407,5,l),
(409,0,o),
(414,0,qs),
(456,0,ls),
(459,0,o),
(457,6,qs),
(415,159,l),
(490,159,ls),
(496,159,o),
(494,165,qs),
(485,198,ls),
(483,204,o),
(477,204,qs),
(404,204,l),
(363,352,l),
(437,352,ls),
(442,352,o),
(440,358,qs),
(431,391,ls),
(429,397,o),
(423,397,qs),
(351,397,l),
(320,509,ls),
(319,513,o),
(318,515,qs),
(304,556,o),
(268,556,qs),
(259,556,ls),
(255,556,o),
(257,551,q),
(257,550,l),
(257,549,l),
(299,397,l),
(142,397,l),
(111,509,ls),
(110,514,o),
(109,517,qs),
(95,556,o),
(59,556,qs),
(50,556,ls),
(46,556,o),
(48,551,q),
(48,550,l),
(48,549,l),
(90,397,l),
(16,397,ls),
(10,397,o),
(12,391,qs),
(22,358,l),
(22,357,l),
(24,352,o),
(30,352,qs),
(102,352,l),
(143,204,l),
(69,204,ls),
(63,204,o),
(65,198,qs),
(75,165,l),
(75,164,l),
(77,159,o),
(83,159,qs),
(155,159,l),
(198,6,l)
);
},
{
closed = 1;
nodes = (
(311,352,l),
(352,204,l),
(195,204,l),
(155,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
7 5 2 3 15 8 2 2 1 3 2 104 14 9 2 1 12 10 2 0 11 1 0 103 6 1 4 4 23 77 13 1 11 11 24 11 78 76 75 74 73 69 67 64 63 59 57 55 53 49 48 36 20 52 20 52 37 17 37 16 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = numbersign.arabic;
unicode = 57857;
},
{
glyphname = dollar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,117,qs),
(67,127,o),
(60,127,qs),
(50,127,o),
(50,113,qs),
(50,82,o),
(93,44,qs),
(147,-4,o),
(250,-11,q),
(258,-59,ls),
(259,-65,o),
(264,-65,qs),
(295,-65,ls),
(299,-65,o),
(299,-61,qs),
(299,-60,o),
(299,-59,qs),
(290,-9,l),
(368,3,o),
(401,48,qs),
(425,80,o),
(425,125,qs),
(425,207,o),
(355,251,qs),
(320,273,o),
(236,300,q),
(197,518,l),
(267,511,o),
(331,472,qs),
(341,466,o),
(344,466,qs),
(350,466,o),
(350,474,qs),
(351,489,l),
(352,491,o),
(352,492,qs),
(352,515,o),
(309,536,qs),
(260,560,o),
(189,566,q),
(180,616,ls),
(179,622,o),
(174,622,qs),
(143,622,ls),
(139,622,o),
(139,618,qs),
(139,617,o),
(139,616,qs),
(148,566,l),
(81,558,o),
(46,526,qs),
(10,493,o),
(10,444,qs),
(10,366,o),
(79,319,qs),
(116,294,o),
(201,268,q),
(241,36,l),
(156,39,o)
);
},
{
closed = 1;
nodes = (
(377,170,o),
(377,127,qs),
(377,56,o),
(282,39,q),
(244,253,l),
(318,225,o)
);
},
{
closed = 1;
nodes = (
(58,398,o),
(58,439,qs),
(58,510,o),
(156,519,q),
(192,315,l),
(119,341,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
31 25 22 10 9 5 1 0 60 1 5 4 41 40 2 2 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 0 1 4 1 133 0 4 5 4 133 0 2 3 2 134 6 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 133 0 1 4 1 133 0 4 5 4 133 0 2 3 2 134 6 1 5 3 3 5 89 6 1 5 5 3 97 0 3 5 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
0 0 0 58 0 58 56 54 50 49 46 45 43 30 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = dollar.arabic;
unicode = 57858;
},
{
glyphname = percent.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,63,qs),
(497,120,o),
(497,221,qs),
(497,255,o),
(533,297,o),
(562,297,qs),
(606,297,o),
(632,262,qs),
(674,206,o),
(674,101,qs),
(674,29,o),
(610,29,qs),
(564,29,o)
);
},
{
closed = 1;
nodes = (
(110,295,qs),
(68,352,o),
(68,454,qs),
(68,488,o),
(104,528,o),
(133,528,qs),
(177,528,o),
(202,494,qs),
(245,438,o),
(245,333,qs),
(245,301,o),
(209,261,o),
(180,261,qs),
(135,261,o)
);
},
{
closed = 1;
nodes = (
(294,0,o),
(296,6,qs),
(480,503,ls),
(485,518,o),
(485,529,qs),
(485,556,o),
(459,556,qs),
(453,556,ls),
(449,556,o),
(447,549,qs),
(244,6,ls),
(243,4,o),
(243,3,qs),
(243,0,o),
(247,0,qs),
(289,0,ls)
);
},
{
closed = 1;
nodes = (
(718,54,o),
(718,111,qs),
(718,188,o),
(683,252,qs),
(638,335,o),
(558,335,qs),
(512,335,o),
(454,266,o),
(454,213,qs),
(454,136,o),
(488,73,qs),
(532,-9,o),
(616,-9,qs),
(664,-9,o)
);
},
{
closed = 1;
nodes = (
(288,291,o),
(288,343,qs),
(288,430,o),
(247,494,qs),
(200,567,o),
(128,567,qs),
(83,567,o),
(24,497,o),
(24,444,qs),
(24,368,o),
(58,305,qs),
(102,223,o),
(187,223,qs),
(230,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 2 7 1 105 11 1 2 14 1 8 0 2 8 105 0 4 4 23 77 0 3 3 9 97 0 9 9 23 77 12 1 5 5 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 105 11 1 2 14 1 8 0 2 8 105 0 4 4 23 77 12 1 5 5 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 105 11 1 2 14 1 8 0 2 8 105 10 1 0 13 1 6 0 6 101 0 4 4 23 77 12 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
58 57 44 43 27 27 14 13 1 0 65 63 57 70 58 70 51 49 43 56 44 56 27 42 27 41 36 33 21 19 13 26 14 26 7 5 0 12 1 12 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = percent.arabic;
unicode = 57859;
},
{
glyphname = ampersand.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,364,o),
(326,434,qs),
(326,492,o),
(292,526,qs),
(252,567,o),
(173,567,qs),
(125,567,o),
(54,508,o),
(54,468,qs),
(54,430,o),
(97,361,o),
(154,309,q),
(55,243,o),
(55,172,qs),
(55,96,o),
(103,47,qs),
(156,-6,o),
(241,-6,qs),
(287,-6,o),
(353,35,o),
(388,86,q),
(467,9,ls),
(476,0,o),
(488,0,qs),
(527,0,ls),
(531,0,o),
(531,3,qs),
(531,5,o),
(529,8,q),
(406,127,l),
(471,283,l),
(472,284,o),
(472,285,qs),
(472,290,o),
(466,290,qs),
(435,290,ls),
(425,290,o),
(421,280,qs),
(371,159,l),
(225,298,l)
);
},
{
closed = 1;
nodes = (
(104,462,qs),
(104,485,o),
(151,522,o),
(180,522,qs),
(277,522,o),
(277,434,qs),
(277,404,o),
(240,358,o),
(193,331,q),
(104,410,o)
);
},
{
closed = 1;
nodes = (
(280,40,o),
(238,40,qs),
(175,40,o),
(104,110,o),
(104,171,qs),
(104,203,o),
(140,248,o),
(188,276,q),
(354,117,l),
(332,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
39 27 2 0 4 51 18 9 3 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 4 5 4 0 5 128 0 4 4 3 97 0 3 3 23 77 0 5 5 1 97 2 1 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 4 5 4 0 5 128 0 4 4 3 97 0 3 3 23 77 0 1 1 24 77 0 5 5 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 5 4 0 5 128 0 3 0 4 0 3 4 105 0 1 1 24 77 0 5 5 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 42 42 36 42 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = ampersand.arabic;
unicode = 57860;
},
{
glyphname = quotesingle.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,382,o),
(61,385,qs),
(61,386,o),
(61,388,qs),
(48,503,ls),
(42,556,o),
(-2,556,qs),
(-9,556,ls),
(-13,556,o),
(-13,551,qs),
(-13,550,o),
(-13,549,q),
(29,388,ls),
(30,382,o),
(35,382,qs),
(57,382,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 1 0 1 76 2 1 1 1 0 97 0 0 0 23 1 78 0 0 0 15 0 15 54 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 118;
}
);
note = quotesingle.arabic;
unicode = 57861;
},
{
glyphname = parenleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,530,qs),
(112,648,o),
(189,697,qs),
(197,702,o),
(199,691,qs),
(203,669,o),
(198,650,o),
(185,634,qs),
(75,505,o),
(117,277,qs),
(156,40,o),
(311,-78,qs),
(329,-91,o),
(341,-113,o),
(345,-138,qs),
(347,-149,o),
(337,-144,qs),
(128,-45,o),
(69,277,qs),
(44,415,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 3 1 50 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = parenleft.arabic;
unicode = 57862;
},
{
glyphname = parenright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,16,qs),
(218,-94,o),
(137,-144,qs),
(128,-149,o),
(127,-138,qs),
(123,-114,o),
(127,-95,o),
(140,-81,qs),
(252,39,o),
(208,277,qs),
(188,396,o),
(97,563,o),
(14,631,qs),
(-4,647,o),
(-16,668,o),
(-20,691,qs),
(-22,702,o),
(-11,697,qs),
(79,652,o),
(145,559,qs),
(227,444,o),
(256,277,qs),
(282,127,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
18 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = parenright.arabic;
unicode = 57863;
},
{
glyphname = asterisk.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,308,o),
(64,307,qs),
(64,305,o),
(68,303,qs),
(110,280,l),
(111,280,l),
(113,278,o),
(114,278,qs),
(116,278,o),
(117,281,qs),
(152,368,l),
(221,281,ls),
(223,278,o),
(224,278,qs),
(225,278,o),
(228,280,qs),
(262,303,ls),
(265,305,o),
(265,307,qs),
(265,308,o),
(263,310,qs),
(188,388,l),
(277,414,l),
(279,415,o),
(280,418,q),
(280,420,o),
(279,423,q),
(257,466,ls),
(255,469,o),
(252,469,qs),
(251,469,o),
(250,469,q),
(168,432,l),
(156,533,l),
(156,538,o),
(149,538,qs),
(97,538,ls),
(92,538,o),
(92,534,qs),
(92,533,l),
(118,432,l),
(21,469,l),
(20,469,o),
(19,469,qs),
(16,469,o),
(16,466,q),
(8,423,l),
(8,422,ls),
(8,416,o),
(13,414,q),
(112,388,l),
(65,310,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
49 40 29 24 19 18 11 10 4 9 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
46 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = asterisk.arabic;
unicode = 57864;
},
{
glyphname = plus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,101,o),
(175,101,qs),
(211,101,ls),
(217,101,o),
(216,107,q),
(216,249,l),
(340,249,ls),
(345,249,o),
(345,255,qs),
(345,289,ls),
(345,295,o),
(340,295,qs),
(216,295,l),
(216,397,ls),
(216,443,o),
(175,443,qs),
(170,443,o),
(170,437,qs),
(170,295,l),
(47,295,ls),
(42,295,o),
(42,289,qs),
(42,255,ls),
(42,249,o),
(47,249,qs),
(170,249,l),
(170,107,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
8 1 1 2 17 16 4 3 4 0 1 26 21 2 5 0 3 76 0 2 1 5 2 89 3 1 1 4 1 0 5 1 0 103 0 2 2 5 97 0 5 2 5 81 34 21 18 19 21 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plus.arabic;
unicode = 57865;
},
{
glyphname = hyphen.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,180,o),
(266,186,qs),
(260,221,l),
(259,223,ls),
(258,227,o),
(254,227,qs),
(40,227,ls),
(35,227,o),
(36,221,qs),
(42,186,ls),
(42,185,o),
(42,184,q),
(44,180,o),
(48,180,qs),
(262,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 14 0 13 38 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = hyphen.arabic;
unicode = 57866;
},
{
glyphname = period.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,48,o),
(75,34,qs),
(75,14,o),
(105,-16,o),
(124,-16,qs),
(139,-16,o),
(158,4,o),
(158,19,qs),
(158,39,o),
(129,69,o),
(109,69,qs),
(95,69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 0 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 183;
}
);
note = period.arabic;
unicode = 57867;
},
{
glyphname = slash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,0,o),
(54,6,qs),
(176,503,ls),
(178,512,o),
(178,521,qs),
(178,556,o),
(148,556,qs),
(142,556,ls),
(137,556,o),
(136,549,q),
(2,6,l),
(1,3,l),
(1,0,o),
(5,0,qs),
(47,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 14 0 13 53 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = slash.arabic;
unicode = 57868;
},
{
glyphname = zero.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,99,qs),
(79,201,o),
(79,354,qs),
(79,420,o),
(103,464,qs),
(133,519,o),
(191,519,qs),
(301,519,o),
(356,430,qs),
(401,355,o),
(401,196,qs),
(401,121,o),
(335,37,o),
(277,37,qs),
(201,37,o)
);
},
{
closed = 1;
nodes = (
(400,38,qs),
(451,95,o),
(451,200,qs),
(451,349,o),
(407,432,qs),
(334,567,o),
(188,567,qs),
(117,567,o),
(75,511,qs),
(30,450,o),
(30,346,qs),
(30,227,o),
(92,112,qs),
(157,-10,o),
(284,-10,qs),
(355,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
16 15 1 0 24 22 15 30 16 30 8 6 0 14 1 14 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.arabic;
unicode = 57869;
},
{
glyphname = one.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,47,o),
(94,44,qs),
(94,43,o),
(94,41,qs),
(100,6,ls),
(101,0,o),
(106,0,qs),
(366,0,ls),
(373,0,o),
(373,5,qs),
(373,6,o),
(373,7,qs),
(371,18,ls),
(366,47,o),
(336,47,qs),
(254,47,l),
(173,508,ls),
(165,556,o),
(129,556,qs),
(121,556,ls),
(100,556,o),
(76,547,qs),
(18,524,ls),
(12,522,o),
(12,516,qs),
(12,515,o),
(12,513,qs),
(19,474,ls),
(20,470,o),
(23,470,qs),
(24,470,o),
(25,471,q),
(122,509,l),
(203,47,l),
(98,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 2 1 3 1 0 30 22 2 2 1 2 76 0 0 0 23 77 4 3 2 1 1 2 95 0 2 2 24 2 78 0 0 0 34 0 34 37 34 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one.arabic;
unicode = 57870;
},
{
glyphname = two.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,149,o),
(235,207,qs),
(303,263,o),
(356,340,o),
(356,383,qs),
(356,446,o),
(318,497,qs),
(266,567,o),
(159,567,qs),
(101,567,o),
(52,542,qs),
(8,520,o),
(8,503,qs),
(8,496,o),
(11,489,qs),
(19,474,ls),
(23,466,o),
(28,466,qs),
(33,466,o),
(38,470,qs),
(92,519,o),
(164,519,qs),
(224,519,o),
(262,486,qs),
(306,447,o),
(306,380,qs),
(306,340,o),
(266,280,o),
(210,238,qs),
(142,186,o),
(83,98,o),
(83,46,qs),
(83,0,o),
(94,0,qs),
(421,0,ls),
(427,0,o),
(427,5,qs),
(427,6,o),
(427,7,qs),
(425,18,ls),
(420,47,o),
(390,47,qs),
(133,47,l),
(134,97,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 23 77 0 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
39 34 42 53 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two.arabic;
unicode = 57871;
},
{
glyphname = three.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,395,qs),
(360,468,o),
(316,513,qs),
(263,567,o),
(161,567,qs),
(111,567,o),
(13,524,o),
(13,502,qs),
(13,496,o),
(16,489,qs),
(24,474,ls),
(28,466,o),
(32,466,qs),
(37,466,o),
(44,472,qs),
(106,519,o),
(169,519,qs),
(311,519,o),
(311,394,qs),
(311,316,o),
(211,316,qs),
(123,316,ls),
(116,316,o),
(116,310,qs),
(116,308,l),
(118,298,ls),
(123,270,o),
(153,270,qs),
(205,270,ls),
(283,270,o),
(372,198,o),
(372,136,qs),
(372,93,o),
(306,37,o),
(255,37,qs),
(174,37,o),
(112,98,qs),
(86,125,o),
(80,125,qs),
(70,125,o),
(70,111,qs),
(70,79,o),
(113,42,qs),
(173,-10,o),
(266,-10,qs),
(326,-10,o),
(370,23,qs),
(424,63,o),
(424,129,qs),
(424,194,o),
(351,279,o),
(285,291,q),
(360,324,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 34 52 52 35 20 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three.arabic;
unicode = 57872;
},
{
glyphname = four.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,0,o),
(339,0,qs),
(380,0,ls),
(384,0,o),
(384,4,qs),
(384,5,o),
(384,6,qs),
(361,139,l),
(427,139,ls),
(434,139,o),
(434,143,qs),
(434,145,o),
(433,146,q),
(432,157,ls),
(427,186,o),
(396,186,qs),
(352,186,l),
(294,518,ls),
(287,556,o),
(256,556,qs),
(241,556,ls),
(225,556,o),
(217,539,qs),
(47,202,ls),
(41,190,o),
(41,182,qs),
(41,178,o),
(42,171,qs),
(47,145,ls),
(48,139,o),
(53,139,qs),
(310,139,l),
(333,6,ls)
);
},
{
closed = 1;
nodes = (
(301,186,l),
(91,186,l),
(246,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
35 1 2 1 1 76 5 1 2 3 1 0 4 2 0 104 0 1 1 23 77 0 4 4 24 4 78 19 21 37 34 57 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four.arabic;
unicode = 57873;
},
{
glyphname = five.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,508,o),
(315,513,qs),
(315,514,o),
(315,516,qs),
(313,527,ls),
(308,556,o),
(278,556,qs),
(16,556,ls),
(12,556,o),
(12,552,qs),
(12,551,o),
(12,549,qs),
(61,276,ls),
(62,269,o),
(67,269,qs),
(68,269,o),
(71,270,qs),
(135,298,o),
(208,298,qs),
(279,298,o),
(318,260,qs),
(360,219,o),
(360,139,qs),
(360,94,o),
(295,37,o),
(243,37,qs),
(165,37,o),
(104,98,qs),
(77,125,o),
(72,125,qs),
(62,125,o),
(62,111,qs),
(62,78,o),
(105,40,qs),
(164,-10,o),
(252,-10,qs),
(315,-10,o),
(359,25,qs),
(411,67,o),
(411,136,qs),
(411,226,o),
(364,280,qs),
(309,344,o),
(200,344,qs),
(157,344,o),
(101,329,q),
(69,508,l),
(308,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 35 2 6 5 1 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 3 0 1 3 1 101 7 1 6 6 5 95 0 5 5 23 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 57 37 35 20 38 34 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five.arabic;
unicode = 57874;
},
{
glyphname = six.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,512,o),
(223,528,qs),
(223,567,o),
(193,567,qs),
(186,567,o),
(182,558,qs),
(89,340,ls),
(55,260,o),
(55,206,qs),
(55,119,o),
(103,60,qs),
(160,-10,o),
(256,-10,qs),
(320,-10,o),
(368,34,qs),
(422,84,o),
(422,147,qs),
(422,348,o),
(228,348,qs),
(177,348,o),
(144,328,q),
(216,497,ls)
);
},
{
closed = 1;
nodes = (
(149,78,qs),
(106,122,o),
(106,198,qs),
(106,245,o),
(169,301,o),
(223,301,qs),
(302,301,o),
(338,263,qs),
(371,228,o),
(371,152,qs),
(371,114,o),
(340,80,qs),
(302,37,o),
(249,37,qs),
(188,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 106 0 2 2 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
23 22 31 29 22 36 23 36 39 36 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.arabic;
unicode = 57875;
},
{
glyphname = seven.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,5,ls),
(162,0,o),
(167,0,qs),
(206,0,ls),
(217,0,o),
(220,11,qs),
(354,478,ls),
(359,493,o),
(359,503,qs),
(359,509,o),
(357,518,qs),
(356,527,ls),
(351,556,o),
(321,556,qs),
(5,556,ls),
(1,556,o),
(1,552,qs),
(1,551,o),
(1,549,qs),
(7,514,ls),
(8,508,o),
(13,508,qs),
(308,508,l),
(162,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 23 77 0 2 2 24 2 78 40 54 16 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven.arabic;
unicode = 57876;
},
{
glyphname = eight.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,274,o),
(228,274,qs),
(288,274,o),
(331,238,qs),
(383,196,o),
(383,129,qs),
(383,86,o),
(319,36,o),
(264,36,qs),
(202,36,o),
(162,71,qs),
(116,110,o),
(116,176,qs),
(116,220,o)
);
},
{
closed = 1;
nodes = (
(141,519,o),
(184,519,qs),
(246,519,o),
(318,455,o),
(318,400,qs),
(318,366,o),
(262,319,o),
(221,319,qs),
(165,319,o),
(86,389,o),
(86,438,qs),
(86,474,o)
);
},
{
closed = 1;
nodes = (
(66,179,qs),
(66,98,o),
(115,47,qs),
(172,-11,o),
(271,-11,qs),
(338,-11,o),
(382,21,qs),
(434,58,o),
(434,122,qs),
(434,195,o),
(402,235,qs),
(372,272,o),
(295,297,q),
(367,332,o),
(367,399,qs),
(367,466,o),
(323,512,qs),
(270,567,o),
(177,567,qs),
(117,567,o),
(37,499,o),
(37,448,qs),
(37,341,o),
(152,297,q),
(66,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 0 2 1 105 0 3 3 4 97 0 4 4 23 77 0 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 0 5 0 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
44 38 36 36 37 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight.arabic;
unicode = 57877;
},
{
glyphname = nine.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,43,o),
(222,28,qs),
(222,-10,o),
(250,-10,qs),
(258,-10,o),
(262,-1,qs),
(355,217,ls),
(389,298,o),
(389,350,qs),
(389,442,o),
(341,499,qs),
(284,567,o),
(178,567,qs),
(113,567,o),
(71,529,qs),
(23,486,o),
(23,415,qs),
(23,319,o),
(71,267,qs),
(123,209,o),
(228,209,qs),
(273,209,o),
(301,232,q),
(228,58,ls)
);
},
{
closed = 1;
nodes = (
(74,330,o),
(74,411,qs),
(74,460,o),
(134,519,o),
(185,519,qs),
(254,519,o),
(294,481,qs),
(338,439,o),
(338,358,qs),
(338,310,o),
(279,256,o),
(228,256,qs),
(148,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 0 2 3 0 105 0 4 4 1 97 0 1 1 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 0 2 3 0 105 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 134 0 1 0 4 3 1 4 105 5 1 3 0 0 3 89 5 1 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 32 30 24 36 25 36 39 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.arabic;
unicode = 57878;
},
{
glyphname = colon.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,268,o),
(60,254,qs),
(60,235,o),
(90,204,o),
(109,204,qs),
(124,204,o),
(143,224,o),
(143,240,qs),
(143,259,o),
(114,289,o),
(94,289,qs),
(80,289,o)
);
},
{
closed = 1;
nodes = (
(99,48,o),
(99,34,qs),
(99,14,o),
(129,-16,o),
(148,-16,qs),
(163,-16,o),
(182,4,o),
(182,19,qs),
(182,39,o),
(152,69,o),
(133,69,qs),
(119,69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 3 3 2 89 5 1 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = colon.arabic;
unicode = 57879;
},
{
glyphname = less.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,387,o),
(414,398,qs),
(415,433,ls),
(415,441,o),
(408,438,qs),
(60,295,l),
(55,292,o),
(55,287,qs),
(55,254,ls),
(55,248,o),
(60,246,qs),
(408,102,ls),
(415,99,o),
(414,108,qs),
(414,115,ls),
(414,154,o),
(378,169,qs),
(124,272,l),
(401,381,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = less.arabic;
unicode = 57880;
},
{
glyphname = equal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,333,o),
(343,339,qs),
(343,344,ls),
(343,379,o),
(304,379,qs),
(45,379,ls),
(40,379,o),
(40,374,qs),
(40,339,ls),
(40,333,o),
(45,333,qs),
(338,333,ls)
);
},
{
closed = 1;
nodes = (
(343,159,o),
(343,165,qs),
(343,170,ls),
(343,206,o),
(304,206,qs),
(45,206,ls),
(40,206,o),
(40,200,qs),
(40,165,ls),
(40,159,o),
(45,159,qs),
(338,159,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
3 2 2 1 0 15 14 2 3 2 2 76 0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 12 12 0 0 12 23 12 22 19 17 0 11 0 10 37 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = equal.arabic;
unicode = 57881;
},
{
glyphname = greater.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,154,o),
(36,115,qs),
(36,108,ls),
(36,99,o),
(43,102,qs),
(391,246,l),
(396,249,o),
(396,254,qs),
(396,287,ls),
(396,292,o),
(391,295,q),
(43,438,ls),
(36,441,o),
(36,433,qs),
(36,398,ls),
(36,387,o),
(50,381,qs),
(326,272,l),
(72,169,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greater.arabic;
unicode = 57882;
},
{
glyphname = at.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,124,qs),
(251,169,o),
(251,244,qs),
(251,301,o),
(311,366,o),
(364,366,qs),
(422,366,o),
(459,326,qs),
(502,281,o),
(502,204,qs),
(502,148,o),
(436,85,o),
(379,85,qs),
(324,85,o)
);
},
{
closed = 1;
nodes = (
(599,38,qs),
(652,38,o),
(684,79,qs),
(722,126,o),
(722,210,qs),
(722,359,o),
(633,456,qs),
(531,568,o),
(353,568,qs),
(227,568,o),
(140,491,qs),
(43,405,o),
(43,271,qs),
(43,109,o),
(134,2,qs),
(240,-124,o),
(421,-124,qs),
(485,-124,o),
(612,-92,o),
(642,-68,qs),
(674,-41,o),
(674,-24,qs),
(674,-9,o),
(664,-9,qs),
(659,-9,o),
(652,-15,qs),
(625,-40,o),
(487,-78,o),
(421,-78,qs),
(282,-78,o),
(194,8,qs),
(95,104,o),
(95,269,qs),
(95,372,o),
(161,442,qs),
(236,523,o),
(361,523,qs),
(492,523,o),
(577,444,qs),
(672,356,o),
(672,207,qs),
(672,150,o),
(633,83,o),
(600,83,qs),
(569,83,o),
(560,112,qs),
(557,122,o),
(554,162,qs),
(534,399,ls),
(534,404,o),
(528,404,qs),
(519,404,ls),
(486,404,o),
(486,363,qs),
(486,359,o),
(486,354,q),
(436,413,o),
(358,413,qs),
(294,413,o),
(250,373,qs),
(199,326,o),
(199,251,qs),
(199,169,o),
(242,109,qs),
(294,37,o),
(375,37,qs),
(419,37,o),
(491,76,o),
(508,108,q),
(529,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 3 1 3 4 1 128 0 3 0 1 0 3 1 105 5 12 2 0 11 1 2 8 0 2 105 0 7 0 9 7 9 101 0 6 6 10 97 0 10 10 23 77 0 8 8 25 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 3 1 3 4 1 128 0 10 0 6 3 10 6 105 0 3 0 1 0 3 1 105 5 12 2 0 11 1 2 8 0 2 105 0 7 0 9 7 9 101 0 8 8 25 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 4 3 1 3 4 1 128 0 8 2 7 2 8 7 128 0 10 0 6 3 10 6 105 0 3 0 1 0 3 1 105 5 12 2 0 11 1 2 8 0 2 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 83 81 75 73 67 65 60 58 55 53 47 45 40 38 32 30 26 24 18 16 8 6 0 13 1 13 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 771;
}
);
note = at.arabic;
unicode = 57883;
},
{
glyphname = bracketleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,-144,o),
(142,-113,o),
(137,-88,qs),
(9,639,ls),
(5,664,o),
(31,696,o),
(57,696,qs),
(157,696,ls),
(165,696,o),
(166,689,qs),
(167,686,l),
(172,652,o),
(134,652,qs),
(77,652,ls),
(55,652,o),
(59,628,qs),
(183,-77,ls),
(187,-101,o),
(210,-101,qs),
(266,-101,ls),
(306,-101,o),
(311,-134,q),
(312,-137,ls),
(314,-144,o),
(305,-144,qs),
(205,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 2 1 3 2 103 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 1 0 19 16 13 10 7 4 0 25 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = bracketleft.arabic;
unicode = 57884;
},
{
glyphname = backslash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,0,o),
(282,2,q),
(281,3,o),
(279,6,qs),
(-23,513,ls),
(-49,556,o),
(-88,556,qs),
(-93,556,ls),
(-97,556,o),
(-97,552,qs),
(-97,550,o),
(-96,548,qs),
(229,6,ls),
(232,0,o),
(238,0,qs),
(279,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 23 77 2 1 1 1 24 1 78 0 0 0 15 0 13 54 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = backslash.arabic;
unicode = 57885;
},
{
glyphname = bracketright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-144,o),
(130,-137,qs),
(129,-134,l),
(124,-101,o),
(162,-101,qs),
(219,-101,ls),
(241,-101,o),
(237,-77,qs),
(113,628,ls),
(109,652,o),
(86,652,qs),
(30,652,ls),
(-10,652,o),
(-15,686,q),
(-16,689,ls),
(-18,696,o),
(-9,696,qs),
(91,696,ls),
(117,696,o),
(154,665,o),
(159,639,qs),
(287,-88,ls),
(291,-113,o),
(265,-144,o),
(239,-144,qs),
(139,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 87 0 3 3 0 95 4 1 0 3 0 79 1 0 21 18 15 12 9 6 0 25 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 291;
}
);
note = bracketright.arabic;
unicode = 57886;
},
{
glyphname = asciicircum.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,274,o),
(340,274,qs),
(374,274,ls),
(380,274,o),
(378,279,qs),
(251,517,ls),
(230,556,o),
(193,556,qs),
(183,556,o),
(177,546,qs),
(35,279,ls),
(32,274,o),
(39,274,qs),
(73,274,ls),
(84,274,o),
(89,283,qs),
(207,503,l),
(324,283,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 134 0 1 1 23 1 78 51 35 50 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = asciicircum.arabic;
unicode = 57887;
},
{
glyphname = braceleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,-144,o),
(175,-113,o),
(170,-88,qs),
(117,216,ls),
(111,250,o),
(71,255,qs),
(62,256,o),
(60,264,qs),
(56,288,ls),
(54,296,o),
(63,297,qs),
(102,300,o),
(95,337,qs),
(42,639,ls),
(38,664,o),
(64,696,o),
(89,696,qs),
(190,696,ls),
(197,696,o),
(199,689,q),
(199,686,l),
(205,652,o),
(167,652,qs),
(110,652,ls),
(87,652,o),
(91,628,qs),
(143,334,ls),
(150,297,o),
(129,276,q),
(156,257,o),
(163,218,qs),
(215,-77,ls),
(219,-101,o),
(242,-101,qs),
(299,-101,ls),
(338,-101,o),
(344,-134,q),
(344,-137,l),
(346,-144,o),
(338,-144,qs),
(237,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
11 1 1 2 1 76 0 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 4 1 0 1 0 79 1 0 24 21 18 15 7 4 0 40 1 39 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = braceleft.arabic;
unicode = 57888;
},
{
glyphname = bar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,-149,o),
(101,-143,qs),
(101,514,ls),
(101,537,o),
(78,567,o),
(60,567,qs),
(55,567,o),
(55,561,qs),
(55,-143,ls),
(55,-149,o),
(60,-149,qs),
(96,-149,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
9 3 2 3 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 0 1 134 0 0 0 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 133 2 1 1 1 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 11 0 11 21 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = bar.arabic;
unicode = 57889;
},
{
glyphname = braceright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-144,o),
(130,-137,qs),
(129,-134,l),
(124,-101,o),
(162,-101,qs),
(219,-101,ls),
(241,-101,o),
(237,-77,qs),
(185,218,ls),
(178,257,o),
(200,276,q),
(172,297,o),
(165,334,qs),
(113,628,ls),
(109,652,o),
(86,652,qs),
(30,652,ls),
(-10,652,o),
(-15,686,q),
(-16,689,ls),
(-18,696,o),
(-10,696,qs),
(91,696,ls),
(117,696,o),
(154,665,o),
(159,639,qs),
(212,337,ls),
(218,300,o),
(257,297,qs),
(266,296,o),
(268,288,qs),
(272,264,ls),
(274,256,o),
(265,255,qs),
(227,250,o),
(233,216,qs),
(286,-88,ls),
(291,-113,o),
(265,-144,o),
(239,-144,qs),
(138,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
29 1 3 2 1 76 0 1 0 2 3 1 2 105 0 3 0 0 3 87 0 3 3 0 95 4 1 0 3 0 79 1 0 36 33 25 22 19 16 0 40 1 39 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = braceright.arabic;
unicode = 57890;
},
{
glyphname = asciitilde.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,213,q),
(87,242,o),
(124,242,qs),
(144,242,o),
(177,231,qs),
(218,218,o),
(240,218,qs),
(279,218,o),
(309,242,qs),
(318,250,o),
(318,267,qs),
(318,291,ls),
(318,298,o),
(311,293,qs),
(290,275,o),
(263,265,o),
(240,265,qs),
(220,265,o),
(187,275,qs),
(147,288,o),
(124,288,qs),
(88,288,o),
(55,265,qs),
(46,259,o),
(46,240,qs),
(46,215,ls),
(46,205,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 3 2 1 89 0 0 0 3 2 0 3 105 0 1 1 2 97 0 2 1 2 81 34 40 34 36 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = asciitilde.arabic;
unicode = 57891;
},
{
glyphname = cent.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,39,o),
(323,66,qs),
(323,89,o),
(310,89,qs),
(306,89,o),
(303,83,q),
(274,43,o),
(225,38,q),
(175,319,l),
(213,316,o),
(257,294,qs),
(260,292,o),
(263,292,qs),
(266,292,o),
(267,298,qs),
(269,313,ls),
(269,314,o),
(269,316,qs),
(269,336,o),
(212,364,o),
(167,367,q),
(157,421,ls),
(156,427,o),
(151,427,qs),
(115,427,ls),
(110,427,o),
(110,423,qs),
(110,422,o),
(111,421,q),
(121,364,l),
(61,352,o),
(31,310,qs),
(5,272,o),
(5,219,qs),
(5,128,o),
(58,62,qs),
(103,6,o),
(186,-8,q),
(196,-65,ls),
(197,-71,o),
(202,-71,qs),
(239,-71,ls),
(243,-71,o),
(243,-67,qs),
(243,-66,o),
(243,-65,qs),
(233,-9,l),
(274,-3,o)
);
},
{
closed = 1;
nodes = (
(56,148,o),
(56,216,qs),
(56,297,o),
(129,317,q),
(178,41,l),
(120,56,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
49 38 29 17 4 3 2 39 1 2 0 3 2 76 0 1 2 1 133 0 3 2 0 2 3 0 128 0 2 3 0 2 89 0 2 2 0 95 0 0 2 0 79 47 19 47 21 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = cent.arabic;
unicode = 57892;
},
{
glyphname = sterling.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,149,qs),
(194,184,o),
(181,228,o),
(161,262,q),
(324,262,ls),
(331,262,o),
(331,267,qs),
(331,268,o),
(331,269,qs),
(329,279,ls),
(324,308,o),
(294,308,qs),
(129,308,l),
(72,385,o),
(72,436,qs),
(72,476,o),
(128,519,o),
(178,519,qs),
(209,519,o),
(290,492,o),
(316,474,qs),
(324,468,o),
(330,468,qs),
(334,468,o),
(335,476,qs),
(338,492,ls),
(338,493,o),
(338,495,qs),
(338,515,o),
(307,531,qs),
(239,567,o),
(167,567,qs),
(100,567,o),
(21,501,o),
(21,446,qs),
(21,381,o),
(75,308,q),
(2,308,ls),
(-2,308,o),
(-2,304,qs),
(-2,303,o),
(-2,302,qs),
(4,268,ls),
(5,262,o),
(10,262,qs),
(108,262,l),
(131,232,o),
(146,186,o),
(146,146,qs),
(146,96,o),
(131,47,q),
(48,47,ls),
(44,47,o),
(44,44,qs),
(44,43,o),
(44,41,qs),
(50,6,ls),
(51,0,o),
(56,0,qs),
(422,0,ls),
(428,0,o),
(428,5,qs),
(428,6,o),
(428,7,qs),
(426,18,ls),
(421,47,o),
(391,47,qs),
(177,47,l),
(194,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
40 1 6 7 59 26 2 3 4 12 4 2 1 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 7 4 7 6 4 128 8 1 4 9 1 3 0 4 3 103 0 7 7 5 97 0 5 5 23 77 2 1 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 7 4 7 6 4 128 0 5 0 7 6 5 7 105 8 1 4 9 1 3 0 4 3 103 2 1 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
64 62 36 35 39 36 23 21 23 37 32 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = sterling.arabic;
unicode = 57893;
},
{
glyphname = Euro.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,38,qs),
(281,-11,o),
(371,-11,qs),
(438,-11,o),
(534,54,o),
(534,100,qs),
(534,125,o),
(519,125,qs),
(513,125,o),
(507,115,qs),
(489,80,o),
(469,65,qs),
(430,36,o),
(366,36,qs),
(219,36,o),
(147,188,q),
(386,188,ls),
(390,188,o),
(392,194,qs),
(400,229,l),
(400,231,o),
(400,232,qs),
(400,235,o),
(396,235,qs),
(131,235,l),
(119,286,o),
(118,307,q),
(407,307,ls),
(412,307,o),
(413,313,qs),
(421,348,l),
(421,350,ls),
(422,354,o),
(417,354,qs),
(116,354,l),
(123,440,o),
(166,480,qs),
(209,519,o),
(280,519,qs),
(351,519,o),
(422,472,qs),
(431,466,o),
(436,466,qs),
(440,466,o),
(441,474,qs),
(444,489,l),
(444,492,o),
(444,494,qs),
(444,511,o),
(417,527,qs),
(350,567,o),
(271,567,qs),
(188,567,o),
(133,514,qs),
(74,456,o),
(66,354,q),
(13,354,ls),
(8,354,o),
(7,348,qs),
(-1,313,l),
(-1,311,o),
(-1,310,qs),
(-1,307,o),
(4,307,qs),
(68,307,l),
(69,289,o),
(81,235,q),
(25,235,ls),
(20,235,o),
(19,229,qs),
(11,194,l),
(11,192,o),
(11,191,qs),
(11,188,o),
(15,188,qs),
(97,188,l),
(142,86,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
28 1 5 6 44 14 2 2 3 54 3 2 0 1 3 76 0 5 6 3 6 5 3 128 0 12 0 11 0 12 11 128 0 4 0 6 5 4 6 105 7 1 3 8 1 2 1 3 2 103 9 1 1 10 1 0 12 1 0 103 0 11 13 13 11 89 0 11 11 13 97 0 13 11 13 81 74 72 69 67 63 61 60 58 52 51 37 19 34 39 35 38 18 38 16 14 6 31 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = Euro.arabic;
unicode = 57894;
},
{
glyphname = yen.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,0,o),
(258,0,qs),
(299,0,ls),
(304,0,o),
(304,4,qs),
(304,5,o),
(303,6,q),
(281,133,l),
(429,133,ls),
(433,133,o),
(433,136,qs),
(433,138,o),
(433,139,qs),
(427,172,ls),
(426,178,o),
(421,178,qs),
(273,178,l),
(266,219,l),
(278,251,l),
(408,251,ls),
(412,251,o),
(412,254,qs),
(412,255,o),
(412,257,qs),
(406,289,ls),
(405,295,o),
(400,295,qs),
(293,295,l),
(387,547,l),
(388,548,o),
(388,550,qs),
(389,556,o),
(380,556,qs),
(347,556,ls),
(337,556,o),
(333,543,qs),
(233,275,l),
(59,513,ls),
(40,539,o),
(15,556,o),
(-5,556,qs),
(-21,556,ls),
(-25,556,o),
(-25,552,qs),
(-25,550,o),
(-23,548,q),
(159,295,l),
(49,295,ls),
(44,295,o),
(44,291,q),
(45,289,l),
(50,257,ls),
(51,251,o),
(56,251,qs),
(192,251,l),
(215,219,l),
(222,178,l),
(69,178,ls),
(65,178,o),
(65,174,qs),
(65,172,l),
(71,139,ls),
(72,133,o),
(77,133,qs),
(230,133,l),
(252,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
41 28 2 2 3 47 1 1 2 52 4 2 0 1 3 76 6 1 3 7 1 2 1 3 2 104 8 1 1 9 1 0 10 1 0 103 5 1 4 4 23 77 0 10 10 24 10 78 63 61 57 56 18 23 20 53 52 37 18 22 16 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = yen.arabic;
unicode = 57895;
},
{
glyphname = brokenbar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,272,o),
(101,277,qs),
(101,514,ls),
(101,537,o),
(78,567,o),
(60,567,qs),
(55,567,o),
(55,561,qs),
(55,277,ls),
(55,272,o),
(60,272,qs),
(96,272,ls)
);
},
{
closed = 1;
nodes = (
(101,-149,o),
(101,-143,qs),
(101,140,ls),
(101,146,o),
(96,146,qs),
(60,146,ls),
(55,146,o),
(55,140,qs),
(55,-143,ls),
(55,-149,o),
(60,-149,qs),
(96,-149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
9 3 2 3 1 0 21 20 15 14 4 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 2 5 1 3 2 3 99 4 1 1 1 0 97 0 0 0 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 4 1 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 23 18 17 0 11 0 11 21 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = brokenbar.arabic;
unicode = 57896;
},
{
glyphname = section.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,193,qs),
(60,227,o),
(60,269,qs),
(60,318,o),
(125,357,q),
(207,315,o),
(255,271,o),
(255,238,qs),
(255,211,o),
(237,182,qs),
(230,169,o),
(198,144,q),
(132,177,o)
);
},
{
closed = 1;
nodes = (
(302,239,qs),
(302,284,o),
(237,351,o),
(158,388,qs),
(101,416,o),
(55,456,o),
(55,479,qs),
(55,521,o),
(122,521,qs),
(165,521,o),
(218,493,q),
(219,493,o),
(220,493,qs),
(223,492,o),
(224,492,qs),
(228,492,o),
(228,495,qs),
(228,498,l),
(230,513,ls),
(230,514,o),
(230,516,qs),
(230,535,o),
(210,546,qs),
(170,568,o),
(113,568,qs),
(63,568,o),
(5,522,o),
(5,484,qs),
(5,450,o),
(41,404,o),
(89,377,q),
(13,327,o),
(13,268,qs),
(13,226,o),
(80,156,o),
(159,117,qs),
(224,84,o),
(277,34,o),
(277,6,qs),
(277,-51,o),
(200,-51,qs),
(143,-51,o),
(94,-14,qs),
(78,-2,o),
(75,-2,qs),
(71,-2,o),
(70,-8,qs),
(68,-19,ls),
(68,-22,o),
(68,-25,qs),
(68,-49,o),
(108,-71,qs),
(155,-97,o),
(209,-97,qs),
(261,-97,o),
(328,-40,o),
(328,4,qs),
(328,40,o),
(287,94,o),
(236,124,q),
(302,182,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
58 52 42 7 4 1 4 23 1 2 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 0 0 2 0 101 0 4 4 3 97 0 3 3 23 77 0 1 1 25 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 4 1 3 4 105 0 2 0 0 2 0 101 0 1 1 25 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
65 63 49 47 33 31 29 27 20 18 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = section.arabic;
unicode = 57897;
},
{
glyphname = copyright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,443,o),
(320,451,qs),
(297,463,o),
(264,463,qs),
(214,463,o),
(151,395,o),
(151,340,qs),
(151,284,o),
(211,217,o),
(260,217,qs),
(292,217,o),
(342,256,o),
(342,281,qs),
(342,288,o),
(337,288,qs),
(335,288,o),
(331,283,qs),
(305,248,o),
(263,248,qs),
(187,248,o),
(187,339,qs),
(187,382,o),
(229,433,o),
(264,433,qs),
(297,433,o),
(325,412,q),
(328,409,o),
(330,409,qs),
(333,409,o),
(333,413,qs),
(335,431,ls)
);
},
{
closed = 1;
nodes = (
(86,186,qs),
(148,117,o),
(256,117,qs),
(349,117,o),
(410,171,qs),
(479,233,o),
(479,340,qs),
(479,433,o),
(425,494,qs),
(363,563,o),
(256,563,qs),
(162,563,o),
(102,509,qs),
(33,448,o),
(33,340,qs),
(33,246,o)
);
},
{
closed = 1;
nodes = (
(128,198,qs),
(71,249,o),
(71,340,qs),
(71,419,o),
(115,469,qs),
(166,527,o),
(256,527,qs),
(335,527,o),
(385,482,qs),
(442,431,o),
(442,340,qs),
(442,261,o),
(398,211,qs),
(347,153,o),
(256,153,qs),
(177,153,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
2 1 2 0 1 76 0 2 0 1 0 2 1 128 0 4 0 0 2 4 0 105 0 1 0 3 7 1 3 105 9 1 7 0 6 7 6 102 0 8 8 5 97 0 5 5 23 8 78 48 47 56 54 47 62 48 62 38 39 36 35 34 35 37 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = copyright.arabic;
unicode = 57898;
},
{
glyphname = guillemotleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,40,o),
(368,40,qs),
(324,40,ls),
(315,40,o),
(308,48,qs),
(190,170,ls),
(181,179,o),
(181,184,q),
(180,188,o),
(185,198,q),
(260,320,ls),
(265,328,o),
(274,328,qs),
(318,328,ls),
(326,328,o),
(322,321,qs),
(242,184,l),
(370,47,ls)
);
},
{
closed = 1;
nodes = (
(238,40,o),
(230,40,qs),
(186,40,ls),
(176,40,o),
(169,48,qs),
(53,170,ls),
(44,179,o),
(43,184,qs),
(42,188,o),
(48,198,qs),
(121,320,ls),
(126,328,o),
(135,328,qs),
(180,328,ls),
(187,328,o),
(184,321,q),
(104,184,l),
(232,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 56 52 56 50 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotleft.arabic;
unicode = 57899;
},
{
glyphname = uni00AD.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,186,qs),
(42,221,ls),
(41,227,o),
(46,227,qs),
(260,227,ls),
(265,227,o),
(266,221,qs),
(272,186,ls),
(273,180,o),
(268,180,qs),
(54,180,ls),
(49,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 3 2 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = uni00AD.arabic;
unicode = 57900;
},
{
glyphname = registered.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(313,226,ls),
(316,222,o),
(322,222,qs),
(351,222,ls),
(356,222,o),
(353,225,q),
(297,311,l),
(348,329,o),
(348,386,qs),
(348,459,o),
(262,459,qs),
(173,459,ls),
(171,459,o),
(171,457,qs),
(171,225,ls),
(171,222,o),
(173,222,qs),
(205,222,ls),
(207,222,o),
(207,225,qs),
(207,308,l),
(261,308,l)
);
},
{
closed = 1;
nodes = (
(254,428,ls),
(312,428,o),
(312,388,qs),
(312,340,o),
(250,340,qs),
(207,340,l),
(207,428,l)
);
},
{
closed = 1;
nodes = (
(86,186,qs),
(148,117,o),
(256,117,qs),
(349,117,o),
(410,171,qs),
(479,233,o),
(479,340,qs),
(479,433,o),
(425,494,qs),
(363,563,o),
(256,563,qs),
(162,563,o),
(102,509,qs),
(33,448,o),
(33,340,qs),
(33,246,o)
);
},
{
closed = 1;
nodes = (
(128,198,qs),
(71,249,o),
(71,340,qs),
(71,419,o),
(115,469,qs),
(166,527,o),
(256,527,qs),
(335,527,o),
(385,482,qs),
(442,431,o),
(442,340,qs),
(442,261,o),
(398,211,qs),
(347,153,o),
(256,153,qs),
(177,153,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
14 1 1 2 15 4 1 3 6 1 2 76 0 0 0 3 2 0 3 105 0 2 8 1 1 6 2 1 103 9 1 6 0 5 6 5 101 0 7 7 4 97 0 4 4 23 7 78 46 45 0 0 54 52 45 60 46 60 42 40 34 32 28 26 24 22 0 21 0 21 71 10 7 23 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = registered.arabic;
unicode = 57901;
},
{
glyphname = degree.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,429,o),
(26,474,qs),
(26,521,o),
(84,579,o),
(130,579,qs),
(176,579,o),
(235,521,o),
(235,474,qs),
(235,429,o),
(176,369,o),
(130,369,qs),
(85,369,o)
);
},
{
closed = 1;
nodes = (
(193,445,o),
(193,474,qs),
(193,504,o),
(157,543,o),
(130,543,qs),
(103,543,o),
(68,504,o),
(68,474,qs),
(68,445,o),
(103,407,o),
(130,407,qs),
(157,407,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 261;
}
);
note = degree.arabic;
unicode = 57902;
},
{
glyphname = plusminus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,249,o),
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(169,295,l),
(169,437,ls),
(169,443,o),
(174,443,qs),
(215,443,o),
(215,397,qs),
(215,295,l),
(339,295,ls),
(344,295,o),
(344,289,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(215,249,l),
(215,107,ls),
(215,101,o),
(210,101,qs),
(174,101,ls),
(169,101,o),
(169,107,qs),
(169,249,l),
(46,249,ls)
);
},
{
closed = 1;
nodes = (
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(305,47,ls),
(344,47,o),
(344,11,qs),
(344,6,ls),
(344,0,o),
(339,0,qs),
(46,0,ls),
(41,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
19 1 2 3 24 23 11 10 4 1 2 6 1 2 0 1 37 36 30 3 6 7 4 76 4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 103 0 7 7 6 95 0 6 6 24 6 78 0 0 34 32 28 27 0 26 0 26 19 18 21 19 19 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plusminus.arabic;
unicode = 57903;
},
{
glyphname = twosuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,279,o),
(245,263,qs),
(248,243,ls),
(249,239,o),
(244,239,qs),
(36,239,ls),
(33,239,o),
(32,242,qs),
(23,293,o),
(47,329,qs),
(62,352,o),
(103,380,qs),
(145,410,o),
(169,444,o),
(165,469,qs),
(155,522,o),
(82,522,qs),
(42,522,o),
(8,494,q),
(7,494,o),
(6,493,qs),
(3,491,o),
(1,491,qs),
(-3,491,o),
(-4,496,qs),
(-11,518,ls),
(-16,533,o),
(3,543,qs),
(38,562,o),
(77,562,qs),
(129,562,o),
(202,511,o),
(209,471,qs),
(214,439,o),
(186,390,o),
(144,360,qs),
(103,330,o),
(77,299,o),
(75,279,q),
(224,279,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
16 1 3 1 36 1 2 3 2 76 4 1 3 0 2 3 2 99 0 1 1 0 97 0 0 0 23 1 78 0 0 0 39 0 38 26 43 40 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = twosuperior.arabic;
unicode = 57904;
},
{
glyphname = threesuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,327,qs),
(269,284,o),
(214,233,o),
(161,233,qs),
(115,233,o),
(40,279,o),
(34,311,qs),
(33,322,o),
(40,322,qs),
(44,322,o),
(50,316,qs),
(89,272,o),
(147,272,qs),
(226,272,o),
(216,325,qs),
(206,386,o),
(119,386,qs),
(88,386,ls),
(71,386,o),
(68,403,qs),
(65,421,ls),
(64,424,o),
(68,424,qs),
(120,424,ls),
(190,424,o),
(181,477,qs),
(172,523,o),
(99,523,qs),
(59,523,o),
(24,497,q),
(20,493,o),
(17,493,qs),
(14,493,o),
(13,498,q),
(6,518,ls),
(2,530,o),
(20,543,q),
(53,562,o),
(96,562,qs),
(149,562,o),
(217,518,o),
(224,479,qs),
(234,423,o),
(183,404,q),
(250,388,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
12 1 2 1 24 1 3 2 2 76 0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 4 0 6 4 6 101 0 1 1 0 97 0 0 0 23 1 78 35 34 34 52 34 41 36 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = threesuperior.arabic;
unicode = 57905;
},
{
glyphname = paragraph.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,221,o),
(59,260,qs),
(-2,307,o),
(-17,391,qs),
(-46,556,o),
(145,556,qs),
(216,556,ls),
(277,556,o),
(288,491,qs),
(374,6,ls),
(375,0,o),
(370,0,qs),
(340,0,ls),
(335,0,o),
(334,6,qs),
(244,514,l),
(172,514,l),
(261,6,l),
(263,0,o),
(258,0,qs),
(228,0,ls),
(223,0,o),
(221,6,q),
(184,221,l),
(180,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 23 77 2 1 0 0 24 0 78 20 52 34 19 34 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = paragraph.arabic;
unicode = 57906;
},
{
glyphname = onesuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-58,491,o),
(-59,494,qs),
(-66,532,l),
(-66,536,o),
(-62,538,qs),
(-26,551,ls),
(-13,556,o),
(0,556,qs),
(19,556,ls),
(40,556,o),
(45,528,qs),
(95,245,ls),
(96,239,o),
(91,239,qs),
(56,239,ls),
(51,239,o),
(50,245,qs),
(3,514,l),
(-55,493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
16 15 2 0 1 1 76 0 0 1 0 134 0 1 1 23 1 78 52 34 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = onesuperior.arabic;
unicode = 57907;
},
{
glyphname = guillemotright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,328,o),
(35,328,qs),
(79,328,ls),
(89,328,o),
(95,320,qs),
(190,198,ls),
(197,190,o),
(197,184,qs),
(197,178,o),
(190,170,qs),
(95,48,ls),
(89,40,o),
(79,40,qs),
(35,40,ls),
(27,40,o),
(32,47,qs),
(136,184,l),
(32,321,ls)
);
},
{
closed = 1;
nodes = (
(165,328,o),
(173,328,qs),
(217,328,ls),
(227,328,o),
(233,320,qs),
(328,198,ls),
(335,189,o),
(335,184,qs),
(335,178,o),
(328,170,qs),
(233,48,ls),
(227,40,o),
(217,40,qs),
(173,40,ls),
(165,40,o),
(170,47,qs),
(275,184,l),
(170,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 56 52 56 50 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotright.arabic;
unicode = 57908;
},
{
glyphname = onequarter.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,79,o),
(303,82,q),
(300,97,ls),
(298,107,o),
(303,115,qs),
(406,308,ls),
(411,317,o),
(421,317,qs),
(446,317,ls),
(466,317,o),
(470,296,qs),
(502,117,l),
(528,117,ls),
(546,117,o),
(548,100,qs),
(551,83,ls),
(552,79,o),
(547,79,qs),
(508,79,l),
(522,3,l),
(522,0,o),
(519,0,qs),
(482,0,ls),
(479,0,o),
(479,3,q),
(465,79,l),
(307,79,ls)
);
},
{
closed = 1;
nodes = (
(110,6,qs),
(314,549,ls),
(317,556,o),
(320,556,qs),
(326,556,ls),
(345,556,o),
(356,527,o),
(347,503,qs),
(162,6,l),
(161,0,o),
(155,0,qs),
(113,0,ls),
(108,0,o)
);
},
{
closed = 1;
nodes = (
(-58,492,o),
(-59,494,q),
(-66,532,l),
(-66,536,o),
(-62,538,qs),
(-25,551,ls),
(-13,556,o),
(0,556,qs),
(19,556,ls),
(40,556,o),
(45,528,qs),
(95,245,ls),
(96,239,o),
(91,239,qs),
(56,239,ls),
(51,239,o),
(50,245,qs),
(3,514,l),
(-55,493,ls)
);
},
{
closed = 1;
nodes = (
(431,275,l),
(347,117,l),
(459,117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
56 55 2 2 5 60 1 6 2 10 1 0 1 3 76 4 1 4 73 0 2 5 6 5 2 6 128 0 6 1 5 6 1 126 11 8 2 1 9 3 2 0 4 1 0 104 7 1 5 5 23 77 10 1 4 4 24 4 78 59 59 28 27 0 0 59 61 59 61 51 48 44 42 36 33 27 39 28 39 0 26 0 26 50 36 23 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = onequarter.arabic;
unicode = 57909;
},
{
glyphname = onehalf.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,6,qs),
(314,549,ls),
(317,556,o),
(320,556,qs),
(326,556,ls),
(345,556,o),
(356,527,o),
(347,503,qs),
(162,6,l),
(161,0,o),
(155,0,qs),
(113,0,ls),
(108,0,o)
);
},
{
closed = 1;
nodes = (
(604,41,o),
(607,24,qs),
(610,4,ls),
(611,0,o),
(606,0,qs),
(398,0,ls),
(395,0,o),
(394,3,qs),
(385,54,o),
(409,90,qs),
(424,113,o),
(465,141,qs),
(507,171,o),
(531,205,o),
(526,231,qs),
(517,283,o),
(444,283,qs),
(402,283,o),
(370,257,qs),
(369,256,o),
(368,255,qs),
(365,253,o),
(363,253,qs),
(359,253,o),
(358,258,qs),
(351,279,ls),
(346,294,o),
(366,304,qs),
(400,323,o),
(439,323,qs),
(490,323,o),
(564,273,o),
(571,233,qs),
(577,201,o),
(549,152,o),
(507,121,qs),
(465,91,o),
(439,61,o),
(437,41,q),
(586,41,ls)
);
},
{
closed = 1;
nodes = (
(-58,492,o),
(-59,494,q),
(-66,532,l),
(-66,536,o),
(-62,538,qs),
(-25,551,ls),
(-13,556,o),
(0,556,qs),
(19,556,ls),
(40,556,o),
(45,528,qs),
(95,245,ls),
(96,239,o),
(91,239,qs),
(56,239,ls),
(51,239,o),
(50,245,qs),
(3,514,l),
(-55,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
69 68 2 2 1 29 1 6 3 49 1 0 5 3 76 0 6 3 5 3 6 5 128 0 2 0 3 6 2 3 105 7 1 1 1 23 77 9 1 5 5 0 97 4 8 2 0 0 24 0 78 13 13 1 0 64 61 57 55 13 52 13 51 47 46 36 34 23 21 9 6 0 12 1 12 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 672;
}
);
note = onehalf.arabic;
unicode = 57910;
},
{
glyphname = threequarters.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,79,o),
(439,82,q),
(437,97,ls),
(435,107,o),
(439,115,qs),
(542,308,ls),
(547,317,o),
(558,317,qs),
(583,317,ls),
(603,317,o),
(607,296,qs),
(638,117,l),
(664,117,ls),
(681,117,o),
(684,100,qs),
(687,83,ls),
(688,79,o),
(684,79,qs),
(645,79,l),
(658,3,l),
(659,0,o),
(656,0,qs),
(619,0,ls),
(616,0,o),
(615,3,q),
(602,79,l),
(443,79,ls)
);
},
{
closed = 1;
nodes = (
(261,327,qs),
(269,284,o),
(214,233,o),
(161,233,qs),
(118,233,o),
(40,281,o),
(34,311,q),
(33,322,o),
(40,322,qs),
(44,322,o),
(50,316,qs),
(89,272,o),
(147,272,qs),
(226,272,o),
(216,325,qs),
(206,386,o),
(119,386,qs),
(88,386,ls),
(71,386,o),
(68,403,qs),
(65,421,ls),
(64,424,o),
(68,424,qs),
(120,424,ls),
(190,424,o),
(181,477,qs),
(172,523,o),
(99,523,qs),
(59,523,o),
(24,497,q),
(20,493,o),
(17,493,qs),
(14,493,o),
(13,498,q),
(6,518,ls),
(2,530,o),
(20,543,q),
(53,562,o),
(96,562,qs),
(149,562,o),
(217,518,o),
(224,479,qs),
(234,423,o),
(183,404,q),
(250,388,o)
);
},
{
closed = 1;
nodes = (
(247,6,qs),
(450,549,ls),
(452,556,o),
(456,556,qs),
(462,556,ls),
(480,556,o),
(492,527,o),
(483,503,qs),
(299,6,ls),
(297,0,o),
(292,0,qs),
(250,0,ls),
(245,0,o)
);
},
{
closed = 1;
nodes = (
(567,275,l),
(483,117,l),
(595,117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
39 1 7 6 51 1 8 7 86 1 9 3 10 1 1 2 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
10 1 3 8 9 8 3 9 128 0 7 0 8 3 7 8 105 0 9 0 11 2 9 11 105 17 14 2 2 15 4 2 1 0 2 1 104 0 6 6 5 97 13 1 5 5 23 77 16 12 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
10 1 3 8 9 8 3 9 128 0 7 0 8 3 7 8 105 0 9 0 11 2 9 11 105 17 14 2 2 15 4 2 1 0 2 1 104 0 13 13 23 77 0 6 6 5 97 0 5 5 23 77 16 12 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 10 8 3 8 10 3 128 0 3 9 8 3 9 126 0 7 0 8 10 7 8 105 0 9 0 11 2 9 11 105 17 14 2 2 15 4 2 1 0 2 1 104 0 13 13 23 77 0 6 6 5 97 0 5 5 23 77 16 12 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
85 85 73 72 0 0 85 87 85 87 81 78 72 84 73 84 68 66 63 61 59 57 55 52 48 46 44 42 33 31 0 26 0 26 50 36 19 19 18 7 26 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = threequarters.arabic;
unicode = 57911;
},
{
glyphname = multiply.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,160,o),
(55,156,qs),
(77,134,ls),
(81,130,o),
(85,134,qs),
(195,245,l),
(280,158,ls),
(312,125,o),
(339,152,qs),
(342,155,o),
(338,160,qs),
(225,275,l),
(334,384,ls),
(338,388,o),
(334,392,qs),
(312,414,l),
(308,417,o),
(304,414,q),
(195,304,l),
(108,389,ls),
(77,422,o),
(50,396,qs),
(46,392,o),
(51,388,q),
(165,275,l),
(55,164,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 4 1 50 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = multiply.arabic;
unicode = 57912;
},
{
glyphname = divide.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,249,o),
(343,255,qs),
(343,260,ls),
(343,295,o),
(304,295,qs),
(45,295,ls),
(40,295,o),
(40,289,qs),
(40,255,ls),
(40,249,o),
(45,249,qs),
(338,249,ls)
);
},
{
closed = 1;
nodes = (
(179,364,o),
(191,364,qs),
(203,364,o),
(222,382,o),
(222,394,qs),
(222,407,o),
(203,426,o),
(191,426,qs),
(179,426,o),
(161,407,o),
(161,394,qs),
(161,383,o)
);
},
{
closed = 1;
nodes = (
(179,118,o),
(191,118,qs),
(203,118,o),
(222,135,o),
(222,148,qs),
(222,161,o),
(203,179,o),
(191,179,qs),
(178,179,o),
(161,160,o),
(161,148,qs),
(161,136,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
3 2 2 1 0 1 76 0 2 0 3 0 2 3 105 0 0 6 1 1 4 0 1 103 0 4 5 5 4 89 0 4 4 5 97 0 5 4 5 81 0 0 34 32 28 26 22 20 16 14 0 11 0 10 37 7 7 23 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = divide.arabic;
unicode = 57913;
},
{
glyphname = endash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,186,qs),
(0,219,ls),
(0,225,o),
(5,225,qs),
(318,225,ls),
(323,225,o),
(323,219,qs),
(323,186,ls),
(323,180,o),
(318,180,qs),
(5,180,ls),
(0,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = endash.arabic;
unicode = 57914;
},
{
glyphname = emdash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,186,q),
(-5,219,ls),
(-6,225,o),
(-1,225,qs),
(625,225,ls),
(630,225,o),
(631,219,qs),
(637,186,ls),
(638,180,o),
(633,180,qs),
(7,180,ls),
(2,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
9 3 2 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = emdash.arabic;
unicode = 57915;
},
{
glyphname = quoteleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,433,qs),
(104,416,o),
(80,391,o),
(63,391,qs),
(46,391,o),
(22,417,o),
(22,436,qs),
(22,504,o),
(90,561,qs),
(92,563,o),
(95,559,q),
(111,545,o),
(93,521,qs),
(74,493,o),
(69,476,q),
(104,469,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 122;
}
);
note = quoteleft.arabic;
unicode = 57916;
},
{
glyphname = quoteright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,536,o),
(107,517,qs),
(107,449,o),
(38,392,q),
(37,390,o),
(33,393,q),
(18,408,o),
(36,432,qs),
(55,460,o),
(60,477,q),
(25,483,o),
(25,519,qs),
(25,537,o),
(49,562,o),
(66,562,qs),
(83,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
5 1 0 73 1 1 0 0 23 0 78 1 0 0 15 1 15 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 121;
}
);
note = quoteright.arabic;
unicode = 57917;
},
{
glyphname = quotesinglbase.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,43,o),
(109,24,qs),
(109,-44,o),
(40,-101,q),
(39,-103,o),
(35,-100,qs),
(20,-86,o),
(38,-61,qs),
(57,-34,o),
(62,-16,q),
(27,-10,o),
(27,26,qs),
(27,43,o),
(51,68,o),
(68,68,qs),
(85,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
5 1 0 73 1 1 0 0 118 1 0 0 15 1 15 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 127;
}
);
note = quotesinglbase.arabic;
unicode = 57918;
},
{
glyphname = quotedblleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,433,qs),
(104,416,o),
(80,391,o),
(63,391,qs),
(46,391,o),
(22,417,o),
(22,436,qs),
(22,504,o),
(90,561,qs),
(92,563,o),
(95,559,q),
(111,545,o),
(93,521,qs),
(74,493,o),
(69,476,q),
(104,469,o)
);
},
{
closed = 1;
nodes = (
(252,433,qs),
(252,416,o),
(228,391,o),
(211,391,qs),
(193,391,o),
(170,417,o),
(170,436,qs),
(170,504,o),
(238,561,qs),
(240,563,o),
(243,559,q),
(259,545,o),
(240,521,qs),
(221,493,o),
(217,476,q),
(252,469,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 0 118 46 42 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = quotedblleft.arabic;
unicode = 57919;
},
{
glyphname = quotedblright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,536,o),
(107,517,qs),
(107,449,o),
(38,392,q),
(37,390,o),
(33,393,q),
(18,408,o),
(36,432,qs),
(55,460,o),
(60,477,q),
(25,483,o),
(25,519,qs),
(25,537,o),
(49,562,o),
(66,562,qs),
(83,562,o)
);
},
{
closed = 1;
nodes = (
(255,536,o),
(255,517,qs),
(255,449,o),
(186,392,q),
(185,390,o),
(181,393,q),
(166,408,o),
(184,432,qs),
(203,460,o),
(207,477,q),
(172,483,o),
(172,519,qs),
(172,537,o),
(197,562,o),
(213,562,qs),
(231,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 5 2 0 73 3 1 2 3 0 0 23 0 78 17 16 1 0 16 31 17 31 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = quotedblright.arabic;
unicode = 57920;
},
{
glyphname = quotedblbase.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,43,o),
(109,24,qs),
(109,-44,o),
(40,-101,q),
(39,-103,o),
(35,-100,qs),
(20,-86,o),
(38,-61,qs),
(57,-34,o),
(62,-16,q),
(27,-10,o),
(27,26,qs),
(27,43,o),
(51,68,o),
(68,68,qs),
(85,68,o)
);
},
{
closed = 1;
nodes = (
(257,43,o),
(257,24,qs),
(257,-45,o),
(188,-101,q),
(187,-103,o),
(183,-100,qs),
(168,-86,o),
(186,-61,qs),
(205,-33,o),
(209,-16,q),
(174,-10,o),
(174,26,qs),
(174,43,o),
(199,68,o),
(215,68,qs),
(233,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
21 5 2 0 73 3 1 2 3 0 0 118 17 16 1 0 16 31 17 31 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 275;
}
);
note = quotedblbase.arabic;
unicode = 57921;
},
{
glyphname = dagger.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-17,309,o),
(-18,315,qs),
(-23,346,ls),
(-24,352,o),
(-19,352,qs),
(71,352,l),
(36,548,ls),
(35,554,o),
(40,554,qs),
(59,554,o),
(87,526,o),
(91,503,qs),
(118,352,l),
(208,352,ls),
(213,352,o),
(214,346,qs),
(220,315,ls),
(221,309,o),
(216,309,qs),
(125,309,l),
(207,-154,ls),
(208,-160,o),
(203,-160,qs),
(166,-160,ls),
(161,-160,o),
(160,-154,qs),
(78,309,l),
(-12,309,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
24 10 2 1 2 1 76 0 0 1 0 134 4 1 2 6 5 2 1 0 2 1 104 0 3 3 23 3 78 0 0 0 27 0 26 19 19 36 19 34 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = dagger.arabic;
unicode = 57922;
},
{
glyphname = daggerdbl.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,113,o),
(17,119,qs),
(11,150,ls),
(10,156,o),
(15,156,qs),
(105,156,l),
(78,309,l),
(-12,309,ls),
(-17,309,o),
(-18,315,qs),
(-23,346,ls),
(-24,352,o),
(-19,352,qs),
(71,352,l),
(36,548,ls),
(35,554,o),
(40,554,qs),
(59,554,o),
(87,526,o),
(91,503,qs),
(118,352,l),
(208,352,ls),
(213,352,o),
(214,346,qs),
(220,315,ls),
(221,309,o),
(216,309,qs),
(125,309,l),
(152,156,l),
(243,156,ls),
(248,156,o),
(249,150,qs),
(254,119,l),
(256,113,o),
(251,113,qs),
(160,113,l),
(207,-154,ls),
(208,-160,o),
(203,-160,qs),
(166,-160,ls),
(161,-160,o),
(160,-154,qs),
(113,113,l),
(23,113,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
32 18 2 3 4 40 10 2 1 2 2 76 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 10 9 2 1 0 2 1 103 0 5 5 23 5 78 0 0 0 43 0 42 17 36 19 19 36 17 36 19 34 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = daggerdbl.arabic;
unicode = 57923;
},
{
glyphname = bullet.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,238,o),
(55,279,qs),
(47,319,o),
(85,368,o),
(124,368,qs),
(165,368,o),
(222,320,o),
(229,279,qs),
(236,239,o),
(197,190,o),
(158,190,qs),
(118,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = bullet.arabic;
unicode = 57924;
},
{
glyphname = ellipsis.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,9,o),
(56,27,qs),
(56,44,o),
(80,68,o),
(97,68,qs),
(114,68,o),
(138,44,o),
(138,27,qs),
(138,9,o),
(114,-16,o),
(97,-16,qs),
(80,-16,o)
);
},
{
closed = 1;
nodes = (
(232,9,o),
(232,27,qs),
(232,44,o),
(256,68,o),
(273,68,qs),
(290,68,o),
(314,44,o),
(314,27,qs),
(314,9,o),
(290,-16,o),
(273,-16,qs),
(256,-16,o)
);
},
{
closed = 1;
nodes = (
(407,9,o),
(407,27,qs),
(407,44,o),
(431,68,o),
(448,68,qs),
(465,68,o),
(489,44,o),
(489,27,qs),
(489,9,o),
(465,-16,o),
(448,-16,qs),
(431,-16,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
5 3 2 1 0 0 1 89 5 3 2 1 1 0 97 8 4 7 2 6 5 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = ellipsis.arabic;
unicode = 57925;
},
{
glyphname = perthousand.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670,92,o),
(658,162,qs),
(634,297,o),
(551,297,qs),
(467,297,o),
(491,162,qs),
(515,29,o),
(598,29,qs),
(642,29,o)
);
},
{
closed = 1;
nodes = (
(982,92,o),
(970,162,qs),
(946,297,o),
(863,297,qs),
(780,297,o),
(804,162,qs),
(827,29,o),
(910,29,qs),
(954,29,o)
);
},
{
closed = 1;
nodes = (
(241,324,o),
(229,394,qs),
(205,528,o),
(122,528,qs),
(39,528,o),
(62,394,qs),
(86,261,o),
(169,261,qs),
(213,261,o)
);
},
{
closed = 1;
nodes = (
(233,6,qs),
(436,549,ls),
(438,556,o),
(442,556,qs),
(448,556,ls),
(466,556,o),
(478,527,o),
(469,503,qs),
(285,6,ls),
(283,0,o),
(278,0,qs),
(236,0,ls),
(231,0,o)
);
},
{
closed = 1;
nodes = (
(508,32,qs),
(462,77,o),
(447,162,qs),
(433,242,o),
(485,335,o),
(544,335,qs),
(600,335,o),
(641,294,qs),
(687,247,o),
(702,162,qs),
(716,82,o),
(665,-9,o),
(605,-9,qs),
(549,-9,o)
);
},
{
closed = 1;
nodes = (
(820,32,qs),
(774,77,o),
(759,162,qs),
(745,242,o),
(797,335,o),
(856,335,qs),
(912,335,o),
(953,294,qs),
(1000,247,o),
(1015,162,qs),
(1029,82,o),
(977,-9,o),
(917,-9,qs),
(861,-9,o)
);
},
{
closed = 1;
nodes = (
(79,263,qs),
(32,309,o),
(17,394,qs),
(3,474,o),
(56,567,o),
(115,567,qs),
(170,567,o),
(211,525,qs),
(257,479,o),
(272,394,qs),
(287,314,o),
(236,223,o),
(176,223,qs),
(119,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 9 3 1 1 4 9 1 105 16 1 4 20 1 12 0 4 12 105 0 7 7 23 77 0 5 5 13 97 0 13 13 23 77 17 1 6 6 24 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 13 0 5 9 13 5 105 11 1 9 3 1 1 4 9 1 105 16 1 4 20 1 12 0 4 12 105 0 7 7 23 77 17 1 6 6 24 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 13 0 5 9 13 5 105 11 1 9 3 1 1 4 9 1 105 16 1 4 20 1 12 0 4 12 105 15 2 14 3 0 19 10 18 3 8 0 8 101 0 7 7 23 77 17 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
69 68 55 54 41 40 28 27 19 18 10 9 1 0 76 74 68 81 69 81 62 60 54 67 55 67 48 46 40 53 41 53 36 33 27 39 28 39 23 21 18 26 19 26 14 12 9 17 10 17 5 3 0 8 1 8 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1031;
}
);
note = perthousand.arabic;
unicode = 57926;
},
{
glyphname = guilsinglleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,40,o),
(191,40,qs),
(147,40,ls),
(137,40,o),
(131,48,qs),
(36,170,ls),
(29,179,o),
(29,184,qs),
(29,188,o),
(36,198,qs),
(131,320,ls),
(137,328,o),
(147,328,qs),
(191,328,ls),
(199,328,o),
(194,321,qs),
(90,184,l),
(194,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 56 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglleft.arabic;
unicode = 57927;
},
{
glyphname = guilsinglright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,328,o),
(35,328,qs),
(79,328,ls),
(89,328,o),
(95,320,qs),
(190,198,ls),
(197,190,o),
(197,184,qs),
(197,178,o),
(190,170,qs),
(95,48,ls),
(89,40,o),
(79,40,qs),
(35,40,ls),
(27,40,o),
(32,47,qs),
(136,184,l),
(32,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 56 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglright.arabic;
unicode = 57928;
},
{
glyphname = fraction.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,6,qs),
(303,549,l),
(306,556,o),
(310,556,qs),
(316,556,ls),
(334,556,o),
(341,527,o),
(328,503,qs),
(56,6,ls),
(53,0,o),
(48,0,qs),
(6,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 9 6 0 12 1 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = fraction.arabic;
unicode = 57929;
},
{
glyphname = uni20AC.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,188,o),
(18,194,qs),
(26,229,ls),
(28,235,o),
(32,235,qs),
(87,235,l),
(86,240,o),
(84,249,qs),
(80,269,o),
(78,278,qs),
(75,297,o),
(74,307,q),
(10,307,ls),
(4,307,o),
(6,313,qs),
(14,348,ls),
(16,354,o),
(20,354,qs),
(73,354,l),
(75,442,o),
(124,500,qs),
(181,567,o),
(276,567,qs),
(346,567,o),
(412,533,qs),
(453,512,o),
(450,489,qs),
(448,474,ls),
(447,466,o),
(443,466,qs),
(437,466,o),
(428,472,qs),
(357,519,o),
(288,519,qs),
(219,519,o),
(176,481,qs),
(127,437,o),
(123,354,q),
(424,354,ls),
(430,354,o),
(428,348,qs),
(420,313,l),
(417,307,o),
(414,307,qs),
(124,307,l),
(125,297,o),
(129,276,qs),
(130,267,o),
(134,251,qs),
(137,239,o),
(137,235,q),
(402,235,ls),
(409,235,o),
(406,229,q),
(399,194,l),
(397,188,o),
(393,188,qs),
(154,188,l),
(185,115,o),
(298,36,o),
(371,36,qs),
(475,36,o),
(514,115,qs),
(519,125,o),
(526,125,qs),
(537,125,o),
(540,109,qs),
(546,72,o),
(512,36,qs),
(466,-11,o),
(378,-11,qs),
(293,-11,o),
(224,35,qs),
(144,88,o),
(104,188,q),
(22,188,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 10 1 6 11 1 5 4 6 5 103 0 4 13 12 2 3 1 4 3 103 0 7 7 9 97 0 9 9 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 10 1 6 11 1 5 4 6 5 103 0 4 13 12 2 3 1 4 3 103 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 75 0 74 63 61 57 56 53 51 34 35 36 22 36 18 34 36 35 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni20AC.arabic;
unicode = 57930;
},
{
glyphname = trademark.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,518,o),
(34,521,qs),
(34,553,ls),
(34,556,o),
(37,556,qs),
(220,556,ls),
(235,556,o),
(235,541,qs),
(235,522,ls),
(235,518,o),
(231,518,qs),
(154,518,l),
(154,276,ls),
(154,273,o),
(152,273,qs),
(117,273,ls),
(114,273,o),
(114,276,qs),
(114,518,l),
(37,518,ls)
);
},
{
closed = 1;
nodes = (
(489,556,o),
(493,556,qs),
(517,556,ls),
(538,556,o),
(538,532,q),
(553,276,ls),
(553,273,o),
(550,273,qs),
(518,273,ls),
(513,273,o),
(513,276,qs),
(503,488,l),
(428,276,l),
(426,273,o),
(423,273,qs),
(401,273,ls),
(399,273,o),
(397,276,q),
(324,484,l),
(312,276,ls),
(312,273,o),
(309,273,qs),
(278,273,ls),
(276,273,o),
(276,276,qs),
(290,553,ls),
(290,556,o),
(293,556,qs),
(316,556,ls),
(336,556,o),
(344,536,qs),
(413,337,l),
(488,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 0 1 41 40 33 27 1 5 4 0 2 76 30 4 2 4 73 7 2 2 0 0 1 97 6 3 2 1 1 23 77 5 1 4 4 1 97 6 3 2 1 1 23 4 78 0 0 50 48 44 43 37 36 24 22 0 19 0 17 36 23 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = trademark.arabic;
unicode = 57931;
},
{
glyphname = minus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(305,295,ls),
(344,295,o),
(344,260,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(46,249,ls),
(41,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
10 9 3 3 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 16 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = minus.arabic;
unicode = 57932;
},
{
glyphname = notequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,159,o),
(41,165,qs),
(41,200,ls),
(41,206,o),
(46,206,qs),
(131,206,l),
(201,333,l),
(46,333,ls),
(41,333,o),
(41,339,qs),
(41,374,ls),
(41,379,o),
(46,379,qs),
(227,379,l),
(278,472,ls),
(281,478,o),
(285,478,qs),
(290,478,ls),
(309,478,o),
(317,449,o),
(305,427,qs),
(279,379,l),
(305,379,ls),
(344,379,o),
(344,344,qs),
(344,339,ls),
(344,333,o),
(339,333,qs),
(254,333,l),
(183,206,l),
(305,206,ls),
(344,206,o),
(344,170,qs),
(344,165,ls),
(344,159,o),
(339,159,qs),
(157,159,l),
(105,67,ls),
(102,61,o),
(97,61,qs),
(56,61,ls),
(52,61,o),
(54,67,q),
(105,159,l),
(46,159,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 33 18 3 3 4 42 41 10 3 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 44 17 21 18 51 36 17 36 19 34 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = notequal.arabic;
unicode = 57933;
},
{
glyphname = lessequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,154,o),
(400,115,qs),
(400,108,ls),
(400,99,o),
(394,102,qs),
(46,246,ls),
(41,248,o),
(41,254,qs),
(41,287,ls),
(41,292,o),
(46,295,q),
(394,438,ls),
(400,441,o),
(400,433,qs),
(400,398,ls),
(400,387,o),
(387,381,qs),
(110,272,l),
(364,169,ls)
);
},
{
closed = 1;
nodes = (
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(395,47,ls),
(400,47,o),
(400,41,qs),
(400,6,ls),
(400,0,o),
(395,0,qs),
(46,0,ls),
(41,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
29 28 23 22 4 0 1 1 76 10 1 1 74 0 1 1 0 95 0 0 0 24 0 78 26 25 20 19 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = lessequal.arabic;
unicode = 57934;
},
{
glyphname = greaterequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,387,o),
(48,398,qs),
(48,433,ls),
(48,441,o),
(55,438,qs),
(403,295,l),
(408,292,o),
(408,287,qs),
(408,254,ls),
(408,248,o),
(403,246,qs),
(55,102,ls),
(48,99,o),
(48,108,qs),
(48,115,ls),
(48,154,o),
(84,169,qs),
(338,272,l),
(62,381,ls)
);
},
{
closed = 1;
nodes = (
(48,6,qs),
(48,41,ls),
(48,47,o),
(53,47,qs),
(403,47,ls),
(408,47,o),
(408,41,qs),
(408,6,ls),
(408,0,o),
(403,0,qs),
(53,0,ls),
(48,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
29 28 23 22 4 0 1 1 76 10 1 1 74 0 1 1 0 95 0 0 0 24 0 78 26 25 20 19 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greaterequal.arabic;
unicode = 57935;
},
{
glyphname = zero.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,99,qs),
(79,201,o),
(79,354,qs),
(79,420,o),
(103,464,qs),
(133,519,o),
(191,519,qs),
(301,519,o),
(356,430,qs),
(401,355,o),
(401,196,qs),
(401,121,o),
(335,37,o),
(277,37,qs),
(201,37,o)
);
},
{
closed = 1;
nodes = (
(400,38,qs),
(451,95,o),
(451,200,qs),
(451,349,o),
(407,432,qs),
(334,567,o),
(188,567,qs),
(117,567,o),
(75,511,qs),
(30,450,o),
(30,346,qs),
(30,227,o),
(92,112,qs),
(157,-10,o),
(284,-10,qs),
(355,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
16 15 1 0 24 22 15 30 16 30 8 6 0 14 1 14 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.tab.arabic;
unicode = 57936;
},
{
glyphname = one.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,47,o),
(173,44,qs),
(173,43,o),
(173,41,qs),
(179,6,ls),
(180,0,o),
(185,0,qs),
(445,0,ls),
(452,0,o),
(452,5,qs),
(452,6,o),
(452,7,qs),
(450,18,ls),
(445,47,o),
(415,47,qs),
(333,47,l),
(252,508,ls),
(244,556,o),
(208,556,qs),
(200,556,ls),
(179,556,o),
(155,547,qs),
(97,524,ls),
(91,522,o),
(91,516,qs),
(91,515,o),
(91,513,qs),
(98,474,ls),
(99,470,o),
(102,470,qs),
(103,470,o),
(104,471,q),
(201,509,l),
(282,47,l),
(177,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 2 1 3 1 0 30 22 2 2 1 2 76 0 0 0 23 77 4 3 2 1 1 2 95 0 2 2 24 2 78 0 0 0 34 0 34 37 34 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = one.tab.arabic;
unicode = 57937;
},
{
glyphname = two.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,149,o),
(266,207,qs),
(334,263,o),
(387,340,o),
(387,383,qs),
(387,446,o),
(349,497,qs),
(297,567,o),
(190,567,qs),
(132,567,o),
(83,542,qs),
(39,520,o),
(39,503,qs),
(39,496,o),
(42,489,qs),
(50,474,ls),
(54,466,o),
(59,466,qs),
(64,466,o),
(69,470,qs),
(123,519,o),
(195,519,qs),
(255,519,o),
(293,486,qs),
(337,447,o),
(337,380,qs),
(337,340,o),
(297,280,o),
(241,238,qs),
(173,186,o),
(114,98,o),
(114,46,qs),
(114,0,o),
(125,0,qs),
(452,0,ls),
(458,0,o),
(458,5,qs),
(458,6,o),
(458,7,qs),
(456,18,ls),
(451,47,o),
(421,47,qs),
(164,47,l),
(165,97,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
4 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 2 0 2 3 0 128 0 2 2 4 97 0 4 4 23 77 0 0 0 1 95 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 0 2 3 0 128 0 4 0 2 3 4 2 105 0 0 0 1 95 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
39 34 42 53 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = two.tab.arabic;
unicode = 57938;
},
{
glyphname = three.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,395,qs),
(391,468,o),
(347,513,qs),
(294,567,o),
(192,567,qs),
(142,567,o),
(44,524,o),
(44,502,qs),
(44,496,o),
(47,489,qs),
(55,474,ls),
(59,466,o),
(63,466,qs),
(68,466,o),
(75,472,qs),
(137,519,o),
(200,519,qs),
(342,519,o),
(342,394,qs),
(342,316,o),
(242,316,qs),
(154,316,ls),
(147,316,o),
(147,310,qs),
(147,308,l),
(149,298,ls),
(154,270,o),
(184,270,qs),
(236,270,ls),
(314,270,o),
(403,198,o),
(403,136,qs),
(403,93,o),
(337,37,o),
(286,37,qs),
(205,37,o),
(143,98,qs),
(117,125,o),
(111,125,qs),
(101,125,o),
(101,111,qs),
(101,79,o),
(144,42,qs),
(204,-10,o),
(297,-10,qs),
(357,-10,o),
(401,23,qs),
(455,63,o),
(455,129,qs),
(455,194,o),
(382,279,o),
(316,291,q),
(391,324,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 7 0 5 6 7 5 105 0 4 0 3 1 4 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
38 34 34 52 52 35 20 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = three.tab.arabic;
unicode = 57939;
},
{
glyphname = four.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(353,0,o),
(358,0,qs),
(399,0,ls),
(403,0,o),
(403,4,qs),
(403,5,o),
(403,6,qs),
(380,139,l),
(446,139,ls),
(453,139,o),
(453,143,qs),
(453,145,o),
(452,146,q),
(451,157,ls),
(446,186,o),
(415,186,qs),
(371,186,l),
(313,518,ls),
(306,556,o),
(275,556,qs),
(260,556,ls),
(244,556,o),
(236,539,qs),
(66,202,ls),
(60,190,o),
(60,182,qs),
(60,178,o),
(61,171,qs),
(66,145,ls),
(67,139,o),
(72,139,qs),
(329,139,l),
(352,6,ls)
);
},
{
closed = 1;
nodes = (
(320,186,l),
(110,186,l),
(265,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
35 1 2 1 1 76 5 1 2 3 1 0 4 2 0 104 0 1 1 23 77 0 4 4 24 4 78 19 21 37 34 57 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = four.tab.arabic;
unicode = 57940;
},
{
glyphname = five.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,508,o),
(344,513,qs),
(344,514,o),
(344,516,qs),
(342,527,ls),
(337,556,o),
(307,556,qs),
(45,556,ls),
(41,556,o),
(41,552,qs),
(41,551,o),
(41,549,qs),
(90,276,ls),
(91,269,o),
(96,269,qs),
(97,269,o),
(100,270,qs),
(164,298,o),
(237,298,qs),
(308,298,o),
(347,260,qs),
(389,219,o),
(389,139,qs),
(389,94,o),
(324,37,o),
(272,37,qs),
(194,37,o),
(133,98,qs),
(106,125,o),
(101,125,qs),
(91,125,o),
(91,111,qs),
(91,78,o),
(134,40,qs),
(193,-10,o),
(281,-10,qs),
(344,-10,o),
(388,25,qs),
(440,67,o),
(440,136,qs),
(440,226,o),
(393,280,qs),
(338,344,o),
(229,344,qs),
(186,344,o),
(130,329,q),
(98,508,l),
(337,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 35 2 6 5 1 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 7 1 6 6 5 95 0 5 5 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 4 3 4 2 3 128 0 0 0 4 2 0 4 105 0 3 0 1 3 1 101 7 1 6 6 5 95 0 5 5 23 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 47 0 46 57 37 35 20 38 34 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = five.tab.arabic;
unicode = 57941;
},
{
glyphname = six.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,512,o),
(241,528,qs),
(241,567,o),
(211,567,qs),
(204,567,o),
(200,558,qs),
(107,340,ls),
(73,260,o),
(73,206,qs),
(73,119,o),
(121,60,qs),
(178,-10,o),
(274,-10,qs),
(338,-10,o),
(386,31,qs),
(440,78,o),
(440,140,qs),
(440,226,o),
(403,278,qs),
(354,348,o),
(246,348,qs),
(195,348,o),
(162,328,q),
(234,497,ls)
);
},
{
closed = 1;
nodes = (
(167,78,qs),
(124,122,o),
(124,198,qs),
(124,245,o),
(187,301,o),
(241,301,qs),
(319,301,o),
(356,260,qs),
(389,223,o),
(389,145,qs),
(389,108,o),
(358,76,qs),
(321,37,o),
(267,37,qs),
(206,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 4 3 0 4 106 0 2 2 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 0 0 0 4 3 0 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 38 25 38 39 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = six.tab.arabic;
unicode = 57942;
},
{
glyphname = seven.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,5,ls),
(198,0,o),
(203,0,qs),
(242,0,ls),
(253,0,o),
(256,11,qs),
(390,478,ls),
(395,493,o),
(395,503,qs),
(395,509,o),
(393,518,qs),
(392,527,ls),
(387,556,o),
(357,556,qs),
(41,556,ls),
(37,556,o),
(37,552,qs),
(37,551,o),
(37,549,qs),
(43,514,ls),
(44,508,o),
(49,508,qs),
(344,508,l),
(198,6,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
4 1 0 1 1 76 0 0 0 1 95 0 1 1 23 77 0 2 2 24 2 78 40 54 16 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = seven.tab.arabic;
unicode = 57943;
},
{
glyphname = eight.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,274,o),
(234,274,qs),
(294,274,o),
(337,238,qs),
(389,196,o),
(389,129,qs),
(389,86,o),
(325,36,o),
(270,36,qs),
(208,36,o),
(168,71,qs),
(122,110,o),
(122,176,qs),
(122,220,o)
);
},
{
closed = 1;
nodes = (
(147,519,o),
(190,519,qs),
(252,519,o),
(324,455,o),
(324,400,qs),
(324,366,o),
(268,319,o),
(227,319,qs),
(171,319,o),
(92,389,o),
(92,438,qs),
(92,474,o)
);
},
{
closed = 1;
nodes = (
(72,179,qs),
(72,98,o),
(121,47,qs),
(178,-11,o),
(277,-11,qs),
(344,-11,o),
(388,21,qs),
(440,58,o),
(440,122,qs),
(440,195,o),
(408,235,qs),
(378,272,o),
(301,297,q),
(373,332,o),
(373,399,qs),
(373,466,o),
(329,512,qs),
(276,567,o),
(183,567,qs),
(123,567,o),
(43,499,o),
(43,448,qs),
(43,341,o),
(158,297,q),
(72,257,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 0 1 0 2 1 105 0 3 3 4 97 0 4 4 23 77 0 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 0 5 0 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
44 38 36 36 37 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = eight.tab.arabic;
unicode = 57944;
},
{
glyphname = nine.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,43,o),
(247,28,qs),
(247,-10,o),
(275,-10,qs),
(283,-10,o),
(287,-1,qs),
(380,217,ls),
(414,298,o),
(414,350,qs),
(414,442,o),
(366,499,qs),
(309,567,o),
(203,567,qs),
(138,567,o),
(96,529,qs),
(48,486,o),
(48,415,qs),
(48,319,o),
(96,267,qs),
(148,209,o),
(253,209,qs),
(298,209,o),
(326,232,q),
(253,58,ls)
);
},
{
closed = 1;
nodes = (
(99,330,o),
(99,411,qs),
(99,460,o),
(159,519,o),
(210,519,qs),
(279,519,o),
(319,481,qs),
(363,439,o),
(363,358,qs),
(363,310,o),
(304,256,o),
(253,256,qs),
(173,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 0 2 3 0 105 0 4 4 1 97 0 1 1 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 0 2 3 0 105 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 134 0 1 0 4 3 1 4 105 5 1 3 0 0 3 89 5 1 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 32 30 24 36 25 36 39 38 33 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = nine.tab.arabic;
unicode = 57945;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,544,o),
(140,559,qs),
(138,573,o),
(154,593,o),
(168,593,qs),
(182,593,o),
(206,573,o),
(208,559,qs),
(211,544,o),
(195,523,o),
(180,523,qs),
(166,523,o)
);
},
{
closed = 1;
nodes = (
(108,463,o),
(106,478,qs),
(103,492,o),
(119,512,o),
(133,512,qs),
(148,512,o),
(171,492,o),
(174,478,qs),
(176,463,o),
(160,442,o),
(146,442,qs),
(131,442,o)
);
},
{
closed = 1;
nodes = (
(206,463,o),
(203,478,qs),
(201,492,o),
(217,512,o),
(231,512,qs),
(246,512,o),
(269,492,o),
(272,478,qs),
(274,463,o),
(258,442,o),
(243,442,qs),
(229,442,o)
);
},
{
closed = 1;
nodes = (
(461,0,o),
(459,7,qs),
(458,11,ls),
(449,49,o),
(404,49,qs),
(270,49,ls),
(215,49,o),
(130,125,o),
(120,182,qs),
(109,243,o),
(138,281,qs),
(169,322,o),
(231,321,qs),
(286,321,o),
(333,298,qs),
(341,294,o),
(344,294,qs),
(356,295,o),
(352,308,qs),
(344,331,o),
(261,368,o),
(218,368,qs),
(148,368,o),
(108,327,qs),
(58,277,o),
(68,183,qs),
(74,135,o),
(130,45,o),
(166,26,q),
(121,3,o),
(80,-86,o),
(88,-141,qs),
(99,-214,o),
(155,-265,qs),
(223,-329,o),
(326,-331,qs),
(398,-333,o),
(446,-310,qs),
(487,-291,o),
(503,-261,qs),
(506,-255,o),
(504,-247,qs),
(503,-238,o),
(494,-238,qs),
(490,-238,o),
(483,-241,q),
(451,-261,o),
(423,-271,qs),
(382,-286,o),
(323,-284,qs),
(253,-282,o),
(156,-205,o),
(145,-142,qs),
(136,-88,o),
(163,-49,qs),
(197,0,o),
(272,0,qs),
(452,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 6 12 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 1 0 1 133 13 1 0 3 0 133 5 1 3 2 3 133 15 4 14 3 2 10 10 2 112 0 8 6 7 6 8 7 128 0 10 0 11 12 10 11 106 0 12 16 1 6 8 12 6 103 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 1 0 1 133 13 1 0 3 0 133 5 1 3 2 3 133 15 4 14 3 2 10 2 133 0 8 6 7 6 8 7 128 0 10 0 11 12 10 11 106 0 12 16 1 6 8 12 6 103 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 25 24 13 12 1 0 89 86 81 79 72 70 58 56 50 48 44 42 36 93 37 92 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,544,o),
(176,559,qs),
(173,573,o),
(189,593,o),
(204,593,qs),
(218,593,o),
(242,573,o),
(244,559,qs),
(247,544,o),
(230,523,o),
(216,523,qs),
(202,523,o)
);
},
{
closed = 1;
nodes = (
(144,463,o),
(141,478,qs),
(139,492,o),
(155,512,o),
(169,512,qs),
(184,512,o),
(207,492,o),
(210,478,qs),
(212,463,o),
(196,442,o),
(181,442,qs),
(167,442,o)
);
},
{
closed = 1;
nodes = (
(253,512,o),
(267,512,qs),
(282,512,o),
(305,492,o),
(308,478,qs),
(310,463,o),
(294,442,o),
(279,442,qs),
(265,442,o),
(242,463,o),
(239,478,qs),
(237,492,o)
);
},
{
closed = 1;
nodes = (
(502,-247,qs),
(503,-255,o),
(500,-261,qs),
(485,-291,o),
(444,-310,qs),
(395,-333,o),
(324,-331,qs),
(233,-329,o),
(169,-279,qs),
(99,-225,o),
(86,-141,qs),
(76,-73,o),
(107,-24,qs),
(146,36,o),
(231,47,q),
(101,186,ls),
(79,210,o),
(74,244,qs),
(66,294,o),
(113,330,qs),
(163,368,o),
(241,368,qs),
(311,368,o),
(372,338,qs),
(447,301,o),
(454,244,qs),
(457,220,o),
(439,189,qs),
(354,49,l),
(600,49,l),
(609,0,l),
(361,0,ls),
(319,0,o),
(299,13,q),
(282,-2,o),
(265,-2,qs),
(202,-2,o),
(168,-40,qs),
(132,-80,o),
(143,-142,qs),
(153,-196,o),
(191,-234,qs),
(241,-281,o),
(320,-284,qs),
(380,-286,o),
(420,-271,qs),
(449,-261,o),
(481,-241,q),
(488,-238,o),
(491,-238,qs),
(501,-238,o)
);
},
{
closed = 1;
nodes = (
(157,199,q),
(162,195,o),
(163,194,qs),
(288,63,ls),
(296,54,o),
(302,63,qs),
(380,194,l),
(381,195,o),
(382,197,qs),
(400,225,o),
(397,241,qs),
(392,268,o),
(357,291,qs),
(312,321,o),
(249,321,qs),
(194,321,o),
(123,274,o),
(129,241,qs),
(132,225,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
71 52 2 7 9 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
71 52 2 8 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
71 52 2 7 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
16 1 12 7 6 7 12 6 128 0 1 14 1 0 3 1 0 105 5 1 3 4 15 2 2 10 3 2 105 0 10 0 13 9 10 13 105 0 9 8 1 7 12 9 7 105 0 6 11 11 6 89 0 6 6 11 97 0 11 6 11 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 8 12 8 7 12 128 16 1 12 6 8 12 6 126 0 1 14 1 0 3 1 0 105 5 1 3 4 15 2 2 10 3 2 105 0 10 0 13 9 10 13 105 0 9 0 8 7 9 8 103 0 6 11 11 6 89 0 6 6 11 97 0 11 6 11 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
16 1 12 7 6 7 12 6 128 0 1 14 1 0 3 1 0 105 5 1 3 4 15 2 2 10 3 2 105 0 10 0 13 9 10 13 105 0 9 8 1 7 12 9 7 105 0 6 11 11 6 89 0 6 6 11 97 0 11 6 11 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
36 36 13 12 1 0 91 89 36 86 36 86 80 78 65 63 57 56 55 53 51 49 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,544,o),
(148,559,qs),
(145,573,o),
(161,593,o),
(175,593,qs),
(190,593,o),
(214,573,o),
(216,559,qs),
(219,544,o),
(202,523,o),
(188,523,qs),
(173,523,o)
);
},
{
closed = 1;
nodes = (
(116,463,o),
(113,478,qs),
(111,492,o),
(127,512,o),
(141,512,qs),
(156,512,o),
(179,492,o),
(182,478,qs),
(184,463,o),
(168,442,o),
(153,442,qs),
(139,442,o)
);
},
{
closed = 1;
nodes = (
(213,463,o),
(211,478,qs),
(209,492,o),
(225,512,o),
(239,512,qs),
(253,512,o),
(277,492,o),
(279,478,qs),
(282,463,o),
(266,442,o),
(251,442,qs),
(237,442,o)
);
},
{
closed = 1;
nodes = (
(460,0,ls),
(469,0,o),
(468,7,qs),
(467,11,ls),
(457,49,o),
(412,49,qs),
(278,49,ls),
(223,49,o),
(138,125,o),
(128,182,qs),
(117,243,o),
(146,281,qs),
(177,322,o),
(239,321,qs),
(294,321,o),
(341,298,qs),
(349,294,o),
(353,294,qs),
(364,295,o),
(360,308,qs),
(353,331,o),
(270,368,o),
(226,368,qs),
(157,368,o),
(116,327,qs),
(66,277,o),
(77,183,qs),
(85,104,o),
(143,49,q),
(-4,49,l),
(4,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 1 0 1 133 11 1 0 3 0 133 5 1 3 2 3 133 13 4 12 3 2 7 7 2 112 0 7 0 8 6 7 8 106 9 1 6 10 10 6 87 9 1 6 6 10 95 0 10 6 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 133 11 1 0 3 0 133 5 1 3 2 3 133 13 4 12 3 2 7 2 133 0 7 0 8 6 7 8 106 9 1 6 10 10 6 87 9 1 6 6 10 95 0 10 6 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
25 24 13 12 1 0 66 64 61 58 53 51 44 42 37 36 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 6 22 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,544,o),
(169,559,qs),
(167,573,o),
(183,593,o),
(197,593,qs),
(212,593,o),
(235,573,o),
(238,559,qs),
(240,544,o),
(224,523,o),
(209,523,qs),
(195,523,o)
);
},
{
closed = 1;
nodes = (
(137,463,o),
(135,478,qs),
(132,492,o),
(148,512,o),
(163,512,qs),
(177,512,o),
(201,492,o),
(203,478,qs),
(206,463,o),
(189,442,o),
(175,442,qs),
(161,442,o)
);
},
{
closed = 1;
nodes = (
(246,512,o),
(260,512,qs),
(275,512,o),
(299,492,o),
(301,478,qs),
(304,463,o),
(287,442,o),
(273,442,qs),
(258,442,o),
(235,463,o),
(233,478,qs),
(230,492,o)
);
},
{
closed = 1;
nodes = (
(602,0,l),
(354,0,ls),
(311,0,o),
(292,13,q),
(272,0,o),
(229,0,qs),
(4,0,l),
(-4,49,l),
(222,49,l),
(93,186,ls),
(71,210,o),
(66,244,qs),
(58,294,o),
(105,330,qs),
(156,368,o),
(233,368,qs),
(303,368,o),
(364,338,qs),
(440,301,o),
(447,244,qs),
(450,220,o),
(431,189,qs),
(346,49,l),
(593,49,l)
);
},
{
closed = 1;
nodes = (
(289,54,o),
(294,63,qs),
(373,194,ls),
(392,225,o),
(389,241,qs),
(385,268,o),
(350,291,qs),
(305,321,o),
(242,321,qs),
(189,321,o),
(116,273,o),
(122,241,qs),
(125,225,o),
(155,194,qs),
(280,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
55 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 8 8 7 87 14 10 2 7 7 8 95 9 1 8 7 8 79 36 36 13 12 1 0 66 64 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,0,o),
(124,10,qs),
(37,502,ls),
(28,551,o),
(65,554,qs),
(78,556,o),
(92,556,qs),
(184,556,o),
(235,497,qs),
(237,494,o),
(239,497,q),
(266,556,o),
(356,556,qs),
(406,556,ls),
(411,556,o),
(412,551,qs),
(413,547,ls),
(418,515,o),
(384,511,qs),
(375,509,o),
(355,509,qs),
(320,507,o),
(277,472,o),
(260,431,q),
(257,420,o),
(250,420,qs),
(245,420,o),
(236,431,qs),
(202,474,o),
(151,507,o),
(115,508,qs),
(111,508,o),
(101,509,qs),
(94,509,o),
(92,509,qs),
(87,509,o),
(88,504,qs),
(175,10,ls),
(177,0,o),
(166,0,qs),
(136,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
29 1 3 1 1 76 0 3 1 0 1 3 0 128 4 2 2 1 1 5 97 6 1 5 5 23 77 7 1 0 0 24 0 78 1 0 34 32 28 25 20 18 15 13 10 8 7 5 0 40 1 39 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(357,556,o),
(360,556,qs),
(364,556,o),
(366,551,qs),
(373,532,o),
(370,494,o),
(361,486,q),
(192,311,l),
(121,230,o),
(134,159,qs),
(142,109,o),
(218,47,o),
(271,47,qs),
(558,47,ls),
(604,47,o),
(611,11,q),
(611,7,l),
(613,0,o),
(605,0,qs),
(277,0,ls),
(211,0,o),
(160,33,qs),
(97,76,o),
(82,157,qs),
(73,209,o),
(110,299,o),
(167,361,qs),
(355,553,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 95 0 0 0 24 0 78 41 51 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,5,o),
(39,4,qs),
(39,0,o),
(43,0,qs),
(83,0,ls),
(87,0,o),
(88,6,qs),
(143,315,l),
(232,315,ls),
(237,315,o),
(238,321,qs),
(244,354,ls),
(244,355,o),
(244,356,qs),
(244,360,o),
(240,360,qs),
(151,360,l),
(169,461,ls),
(178,516,o),
(220,516,qs),
(233,516,o),
(265,500,o),
(271,489,qs),
(274,485,o),
(277,485,qs),
(287,485,o),
(287,501,qs),
(287,528,o),
(251,560,o),
(220,562,qs),
(181,563,o),
(128,511,o),
(120,464,qs),
(101,360,l),
(38,360,ls),
(33,360,o),
(32,354,qs),
(26,321,ls),
(26,320,o),
(26,319,qs),
(26,315,o),
(30,315,qs),
(93,315,l),
(39,6,ls)
);
},
{
closed = 1;
nodes = (
(331,0,o),
(332,6,qs),
(385,308,ls),
(386,314,o),
(386,321,qs),
(386,360,o),
(353,360,qs),
(349,360,ls),
(344,360,o),
(343,354,qs),
(282,6,ls),
(282,5,o),
(282,4,qs),
(282,0,o),
(286,0,qs),
(326,0,ls)
);
},
{
closed = 1;
nodes = (
(372,426,o),
(384,426,qs),
(400,426,o),
(422,448,o),
(422,464,qs),
(422,475,o),
(404,492,o),
(392,492,qs),
(377,492,o),
(354,469,o),
(354,453,qs),
(354,442,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
29 3 2 0 1 1 76 0 3 10 11 10 3 11 128 0 10 0 11 1 10 11 105 0 4 4 2 97 0 2 2 39 77 6 1 0 0 1 95 8 5 2 1 1 42 77 12 9 2 7 7 40 7 78 44 44 70 68 64 62 44 59 44 58 59 34 38 18 36 19 35 38 16 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,5,o),
(39,4,qs),
(39,0,o),
(43,0,qs),
(83,0,ls),
(87,0,o),
(88,6,qs),
(143,315,l),
(232,315,ls),
(237,315,o),
(238,321,qs),
(244,354,ls),
(244,355,o),
(244,356,qs),
(244,360,o),
(240,360,qs),
(151,360,l),
(169,461,ls),
(178,516,o),
(220,516,qs),
(233,516,o),
(265,500,o),
(271,489,qs),
(274,485,o),
(277,485,qs),
(287,485,o),
(287,501,qs),
(287,528,o),
(251,560,o),
(220,562,qs),
(181,563,o),
(128,511,o),
(120,464,qs),
(101,360,l),
(38,360,ls),
(33,360,o),
(32,354,qs),
(26,321,ls),
(26,320,o),
(26,319,qs),
(26,315,o),
(30,315,qs),
(93,315,l),
(39,6,ls)
);
},
{
closed = 1;
nodes = (
(421,510,o),
(421,518,qs),
(421,556,o),
(389,556,qs),
(384,556,ls),
(379,556,o),
(378,549,qs),
(296,89,ls),
(294,73,o),
(294,59,qs),
(294,-9,o),
(360,-9,qs),
(398,-9,o),
(450,35,o),
(450,67,qs),
(450,77,o),
(444,77,qs),
(441,77,o),
(437,72,q),
(410,49,o),
(396,41,o),
(379,41,qs),
(345,41,o),
(345,75,qs),
(345,80,o),
(347,92,qs),
(420,504,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
29 3 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 3 4 1 4 3 1 128 0 9 0 8 0 9 8 128 0 4 4 2 97 11 1 2 2 39 77 6 1 0 0 1 95 5 1 1 1 42 77 0 7 7 40 77 0 8 8 10 97 0 10 10 49 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 3 4 1 4 3 1 128 0 9 0 8 0 9 8 128 0 11 11 39 77 0 4 4 2 97 0 2 2 39 77 6 1 0 0 1 95 5 1 1 1 42 77 0 7 7 40 77 0 8 8 10 97 0 10 10 49 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
67 64 59 57 54 52 40 34 38 18 36 19 35 38 16 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 488;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,631,o),
(72,631,qs),
(54,631,o),
(18,645,qs),
(15,646,o),
(11,647,q),
(-16,658,o),
(-26,658,qs),
(-40,658,o),
(-45,646,q),
(-45,644,o),
(-47,640,qs),
(-49,634,o),
(-50,632,qs),
(-54,626,o),
(-59,632,qs),
(-66,642,o),
(-67,656,qs),
(-68,672,o),
(-49,692,o),
(-34,691,qs),
(-29,691,o),
(-19,688,qs),
(-14,687,ls),
(-11,687,o),
(-9,690,q),
(-9,691,o),
(-9,692,q),
(20,745,o),
(61,747,qs),
(87,748,o),
(123,718,o),
(126,693,qs),
(129,665,o)
);
},
{
closed = 1;
nodes = (
(66,663,qs),
(94,663,o),
(89,692,qs),
(85,714,o),
(64,714,qs),
(45,714,o),
(24,676,q),
(52,663,o)
);
},
{
closed = 1;
nodes = (
(294,0,l),
(259,0,ls),
(194,0,o),
(156,29,qs),
(107,65,o),
(91,155,qs),
(30,504,ls),
(26,527,o),
(44,556,o),
(62,556,qs),
(67,556,ls),
(72,556,o),
(73,550,qs),
(143,156,ls),
(151,105,o),
(210,49,o),
(253,49,qs),
(285,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
15 1 3 2 1 76 0 0 0 4 1 0 4 105 0 1 0 2 3 1 2 105 0 5 0 3 7 5 3 105 0 7 7 23 77 9 1 6 6 8 97 0 8 8 24 8 78 43 42 58 56 50 47 42 59 43 59 34 35 36 43 39 34 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
},
{
closed = 1;
nodes = (
(422,-147,o),
(407,-147,qs),
(393,-147,o),
(369,-127,o),
(367,-112,qs),
(364,-97,o),
(381,-77,o),
(395,-77,qs),
(409,-77,o),
(433,-97,o),
(435,-112,qs),
(438,-127,o)
);
},
{
closed = 1;
nodes = (
(531,-97,o),
(533,-112,qs),
(536,-127,o),
(519,-147,o),
(505,-147,qs),
(490,-147,o),
(467,-127,o),
(465,-112,qs),
(462,-97,o),
(478,-77,o),
(493,-77,qs),
(507,-77,o)
);
},
{
closed = 1;
nodes = (
(496,-178,o),
(499,-193,qs),
(501,-208,o),
(485,-228,o),
(470,-228,qs),
(456,-228,o),
(433,-208,o),
(430,-193,qs),
(428,-178,o),
(444,-158,o),
(458,-158,qs),
(473,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
32 1 0 3 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 98 5 1 4 4 24 4 78 62 61 50 49 1 0 68 66 61 72 62 72 56 54 49 60 50 60 47 45 41 39 35 33 31 28 21 20 14 11 8 6 0 36 1 36 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(112,-97,o),
(114,-112,qs),
(117,-127,o),
(101,-147,o),
(86,-147,qs),
(72,-147,o),
(48,-127,o),
(46,-112,qs),
(43,-97,o),
(60,-77,o),
(74,-77,qs),
(88,-77,o)
);
},
{
closed = 1;
nodes = (
(210,-97,o),
(212,-112,qs),
(215,-127,o),
(198,-147,o),
(184,-147,qs),
(169,-147,o),
(146,-127,o),
(144,-112,qs),
(141,-97,o),
(157,-77,o),
(172,-77,qs),
(186,-77,o)
);
},
{
closed = 1;
nodes = (
(175,-178,o),
(178,-193,qs),
(180,-208,o),
(164,-228,o),
(149,-228,qs),
(135,-228,o),
(112,-208,o),
(109,-193,qs),
(107,-178,o),
(123,-158,o),
(137,-158,qs),
(152,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 105 12 1 7 0 8 7 8 101 0 2 2 0 98 9 1 0 0 24 0 78 41 40 29 28 17 16 1 0 47 45 40 51 41 51 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 7 0 15 1 15 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(124,-147,o),
(110,-147,qs),
(96,-147,o),
(72,-127,o),
(70,-112,qs),
(67,-97,o),
(83,-77,o),
(98,-77,qs),
(112,-77,o),
(136,-97,o),
(138,-112,qs),
(141,-127,o)
);
},
{
closed = 1;
nodes = (
(234,-97,o),
(236,-112,qs),
(239,-127,o),
(222,-147,o),
(208,-147,qs),
(193,-147,o),
(170,-127,o),
(168,-112,qs),
(165,-97,o),
(181,-77,o),
(195,-77,qs),
(210,-77,o)
);
},
{
closed = 1;
nodes = (
(199,-178,o),
(202,-193,qs),
(204,-208,o),
(188,-228,o),
(173,-228,qs),
(159,-228,o),
(136,-208,o),
(133,-193,qs),
(131,-178,o),
(147,-158,o),
(161,-158,qs),
(176,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
17 1 0 1 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 98 4 1 3 3 24 3 78 47 46 35 34 1 0 53 51 46 57 47 57 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 6 0 21 1 21 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,412,o),
(318,412,qs),
(328,412,l),
(304,551,ls),
(297,591,o),
(325,591,qs),
(327,591,ls),
(330,591,o),
(331,587,qs),
(341,530,l),
(387,530,ls),
(468,530,o),
(478,456,qs),
(482,421,o),
(447,381,o),
(411,381,qs),
(293,381,ls),
(290,381,o),
(289,384,q),
(289,387,l)
);
},
{
closed = 1;
nodes = (
(362,412,l),
(411,412,ls),
(451,412,o),
(445,456,qs),
(438,499,o),
(396,499,qs),
(346,499,l)
);
},
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
59 1 6 9 1 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 0 1 12 1 4 3 1 4 105 5 1 3 0 0 7 3 0 104 8 13 2 6 6 10 98 11 1 10 10 24 10 78 28 27 21 20 62 60 58 55 48 47 41 38 35 33 27 63 28 63 25 23 20 26 21 26 34 35 35 49 14 7 26 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,432,o),
(89,432,qs),
(-29,432,ls),
(-32,432,o),
(-33,436,qs),
(-34,438,l),
(-38,463,o),
(-5,463,qs),
(6,463,l),
(-19,602,ls),
(-26,642,o),
(2,642,qs),
(5,642,ls),
(7,642,o),
(8,638,qs),
(18,581,l),
(65,581,ls),
(145,581,o),
(155,507,qs),
(160,472,o)
);
},
{
closed = 1;
nodes = (
(40,463,l),
(89,463,ls),
(129,463,o),
(122,507,qs),
(116,551,o),
(73,551,qs),
(24,551,l)
);
},
{
closed = 1;
nodes = (
(161,86,o),
(133,46,qs),
(102,0,o),
(31,0,qs),
(8,0,l),
(0,49,l),
(25,49,ls),
(116,49,o),
(97,156,qs),
(72,299,ls),
(63,349,o),
(104,349,qs),
(109,349,ls),
(114,349,o),
(115,344,qs),
(148,155,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 133 0 6 3 7 3 6 7 128 0 0 9 1 4 2 0 4 105 5 1 2 0 3 6 2 3 104 0 7 7 8 98 0 8 8 24 8 78 21 20 39 37 36 34 31 29 25 23 20 26 21 26 51 34 35 33 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,432,o),
(89,432,qs),
(-29,432,ls),
(-32,432,o),
(-33,436,qs),
(-34,438,l),
(-38,463,o),
(-5,463,qs),
(6,463,l),
(-19,602,ls),
(-26,642,o),
(2,642,qs),
(5,642,ls),
(7,642,o),
(8,638,qs),
(18,581,l),
(65,581,ls),
(145,581,o),
(155,507,qs),
(160,472,o)
);
},
{
closed = 1;
nodes = (
(40,463,l),
(89,463,ls),
(129,463,o),
(122,507,qs),
(116,551,o),
(73,551,qs),
(24,551,l)
);
},
{
closed = 1;
nodes = (
(300,0,l),
(270,0,ls),
(182,0,o),
(137,53,q),
(108,0,o),
(31,0,qs),
(8,0,l),
(0,49,l),
(25,49,ls),
(116,49,o),
(97,156,qs),
(72,299,ls),
(63,349,o),
(104,349,qs),
(109,349,ls),
(114,349,o),
(115,344,qs),
(148,155,ls),
(157,105,o),
(216,49,o),
(259,49,qs),
(292,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
44 1 6 7 1 76 0 1 0 1 133 0 7 3 6 3 7 6 128 0 0 11 1 4 2 0 4 105 5 1 2 0 3 7 2 3 104 8 12 2 6 6 9 98 10 1 9 9 24 9 78 28 27 21 20 47 45 43 41 40 38 35 33 27 48 28 48 25 23 20 26 21 26 51 34 35 33 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,545,o),
(553,560,qs),
(550,575,o),
(566,594,o),
(580,594,qs),
(595,594,o),
(618,575,o),
(621,560,qs),
(623,545,o),
(607,524,o),
(593,524,qs),
(578,524,o)
);
},
{
closed = 1;
nodes = (
(521,464,o),
(518,479,qs),
(516,493,o),
(532,513,o),
(546,513,qs),
(561,513,o),
(584,493,o),
(586,479,qs),
(589,464,o),
(573,443,o),
(558,443,qs),
(544,443,o)
);
},
{
closed = 1;
nodes = (
(629,513,o),
(644,513,qs),
(658,513,o),
(682,493,o),
(684,479,qs),
(687,464,o),
(670,443,o),
(656,443,qs),
(642,443,o),
(618,464,o),
(616,479,qs),
(613,493,o)
);
},
{
closed = 1;
nodes = (
(968,-1,l),
(751,-1,ls),
(705,-1,o),
(683,14,q),
(667,-1,o),
(620,-1,qs),
(420,-1,l),
(420,0,l),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(584,49,l),
(548,70,o),
(494,151,o),
(487,195,qs),
(476,261,o),
(506,309,qs),
(543,368,o),
(621,368,qs),
(699,368,o),
(751,321,qs),
(806,273,o),
(815,195,qs),
(820,151,o),
(787,73,o),
(753,48,q),
(960,48,l)
);
},
{
closed = 1;
nodes = (
(771,151,o),
(763,195,qs),
(753,250,o),
(678,321,o),
(629,321,qs),
(586,321,o),
(560,291,qs),
(529,256,o),
(539,195,qs),
(547,148,o),
(628,66,o),
(675,58,q),
(720,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
72 1 9 7 1 76 0 8 12 7 12 8 7 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 8 6 12 105 15 11 2 7 7 9 95 10 1 9 9 24 9 78 36 36 13 12 1 0 85 83 36 76 36 76 75 73 71 66 59 58 52 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 943;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,546,o),
(137,561,qs),
(134,575,o),
(150,595,o),
(164,595,qs),
(179,595,o),
(202,575,o),
(205,561,qs),
(207,545,o),
(191,525,o),
(177,525,qs),
(162,525,o)
);
},
{
closed = 1;
nodes = (
(105,465,o),
(102,479,qs),
(100,494,o),
(116,514,o),
(130,514,qs),
(145,514,o),
(168,494,o),
(170,479,qs),
(173,464,o),
(157,444,o),
(142,444,qs),
(128,444,o)
);
},
{
closed = 1;
nodes = (
(213,514,o),
(228,514,qs),
(242,514,o),
(266,494,o),
(268,479,qs),
(271,464,o),
(254,444,o),
(240,444,qs),
(226,444,o),
(202,465,o),
(200,479,qs),
(197,494,o)
);
},
{
closed = 1;
nodes = (
(385,60,qs),
(351,2,o),
(276,0,qs),
(4,0,l),
(-4,49,l),
(146,49,l),
(91,93,o),
(75,183,qs),
(62,257,o),
(96,309,qs),
(135,368,o),
(213,368,qs),
(279,368,o),
(330,322,qs),
(387,270,o),
(402,183,qs),
(414,110,o)
);
},
{
closed = 1;
nodes = (
(338,85,qs),
(361,123,o),
(350,184,qs),
(339,244,o),
(263,321,o),
(214,321,qs),
(167,321,o),
(143,285,qs),
(116,245,o),
(127,184,qs),
(137,127,o),
(219,49,o),
(268,49,qs),
(315,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 0 6 0 10 7 6 10 105 13 9 2 7 7 8 95 0 8 8 24 8 78 54 53 13 12 1 0 61 59 53 66 54 66 50 48 47 46 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,546,o),
(137,561,qs),
(135,575,o),
(151,595,o),
(165,595,qs),
(180,595,o),
(203,575,o),
(205,561,qs),
(208,545,o),
(192,525,o),
(177,525,qs),
(163,525,o)
);
},
{
closed = 1;
nodes = (
(105,465,o),
(103,479,qs),
(100,494,o),
(116,514,o),
(130,514,qs),
(145,514,o),
(169,494,o),
(171,479,qs),
(174,464,o),
(157,444,o),
(143,444,qs),
(128,444,o)
);
},
{
closed = 1;
nodes = (
(214,514,o),
(228,514,qs),
(243,514,o),
(266,494,o),
(269,479,qs),
(271,464,o),
(255,444,o),
(240,444,qs),
(226,444,o),
(203,465,o),
(200,479,qs),
(198,494,o)
);
},
{
closed = 1;
nodes = (
(553,0,l),
(336,0,ls),
(290,0,o),
(268,15,q),
(252,0,o),
(204,0,qs),
(4,0,l),
(-4,49,l),
(169,49,l),
(133,70,o),
(79,152,o),
(72,196,qs),
(61,261,o),
(91,309,qs),
(127,368,o),
(205,368,qs),
(283,368,o),
(336,322,qs),
(390,274,o),
(399,196,qs),
(405,152,o),
(371,73,o),
(337,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(356,152,o),
(348,196,qs),
(338,250,o),
(262,321,o),
(214,321,qs),
(170,321,o),
(145,292,qs),
(114,256,o),
(124,196,qs),
(132,148,o),
(213,67,o),
(260,58,q),
(304,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
55 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 68 66 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,0,o),
(473,37,q),
(514,0,o),
(570,0,qs),
(600,0,l),
(591,49,l),
(567,49,ls),
(537,49,o),
(511,68,qs),
(477,93,o),
(426,204,qs),
(351,368,o),
(215,368,qs),
(164,368,o),
(124,342,qs),
(92,319,o),
(75,282,q),
(75,281,l),
(72,274,o),
(73,268,qs),
(75,257,o),
(85,257,qs),
(91,257,o),
(95,261,qs),
(98,263,o),
(104,269,qs),
(112,277,o),
(116,281,qs),
(163,321,o),
(216,321,qs),
(315,321,o),
(374,197,qs),
(410,118,o),
(437,79,q),
(403,49,o),
(334,49,qs),
(261,49,ls),
(172,49,o),
(123,-1,qs),
(69,-54,o),
(83,-141,qs),
(93,-214,o),
(149,-265,qs),
(217,-329,o),
(320,-331,qs),
(392,-333,o),
(440,-310,qs),
(481,-291,o),
(497,-261,qs),
(500,-255,o),
(499,-247,qs),
(498,-238,o),
(488,-238,qs),
(484,-238,o),
(478,-241,qs),
(445,-261,o),
(417,-271,qs),
(377,-286,o),
(317,-284,qs),
(247,-282,o),
(150,-205,o),
(139,-142,qs),
(130,-88,o),
(157,-49,qs),
(191,0,o),
(266,0,qs),
(344,0,ls)
);
},
{
closed = 1;
nodes = (
(298,-96,o),
(301,-111,qs),
(303,-126,o),
(287,-146,o),
(273,-146,qs),
(258,-146,o),
(235,-126,o),
(233,-111,qs),
(230,-96,o),
(246,-76,o),
(260,-76,qs),
(275,-76,o)
);
},
{
closed = 1;
nodes = (
(396,-96,o),
(399,-111,qs),
(401,-126,o),
(385,-146,o),
(370,-146,qs),
(356,-146,o),
(333,-126,o),
(330,-111,qs),
(328,-96,o),
(344,-76,o),
(358,-76,qs),
(373,-76,o)
);
},
{
closed = 1;
nodes = (
(362,-177,o),
(364,-192,qs),
(367,-207,o),
(350,-227,o),
(336,-227,qs),
(322,-227,o),
(298,-207,o),
(296,-192,qs),
(293,-177,o),
(309,-157,o),
(324,-157,qs),
(338,-157,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
32 1 4 6 64 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 6 5 4 5 6 4 128 18 12 17 3 10 0 11 0 10 114 13 1 11 14 0 11 14 126 19 1 14 15 0 14 15 126 0 15 2 1 15 112 0 2 1 0 2 1 126 0 7 0 5 6 7 5 105 0 1 0 3 1 3 102 8 1 4 4 0 97 9 16 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 6 5 4 5 6 4 128 18 12 17 3 10 0 11 0 10 11 128 13 1 11 14 0 11 14 126 19 1 14 15 0 14 15 126 0 15 2 1 15 112 0 2 1 0 2 1 126 0 7 0 5 6 7 5 105 0 1 0 3 1 3 102 8 1 4 4 0 97 9 16 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 6 5 4 5 6 4 128 18 12 17 3 10 0 11 0 10 11 128 13 1 11 14 0 11 14 126 19 1 14 15 0 14 15 126 0 15 2 0 15 2 126 0 2 1 0 2 1 126 0 7 0 5 6 7 5 105 0 1 0 3 1 3 102 8 1 4 4 0 97 9 16 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
92 91 80 79 68 67 1 0 98 96 91 102 92 102 86 84 79 90 80 90 74 72 67 78 68 78 63 61 60 58 54 52 45 43 37 35 31 28 22 20 14 12 8 6 0 66 1 65 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,0,ls),
(531,0,o),
(523,44,q),
(523,49,o),
(517,49,qs),
(492,50,o),
(476,64,qs),
(437,98,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(89,342,qs),
(57,318,o),
(40,282,qs),
(37,274,o),
(38,268,qs),
(40,257,o),
(50,257,qs),
(56,257,o),
(60,261,qs),
(63,263,o),
(68,267,qs),
(78,277,o),
(82,281,qs),
(128,321,o),
(182,321,qs),
(280,321,o),
(339,197,qs),
(400,69,o),
(428,49,q),
(-4,49,l),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(244,-97,o),
(247,-112,qs),
(249,-127,o),
(233,-147,o),
(218,-147,qs),
(204,-147,o),
(181,-127,o),
(178,-112,qs),
(176,-97,o),
(192,-77,o),
(206,-77,qs),
(221,-77,o)
);
},
{
closed = 1;
nodes = (
(342,-97,o),
(344,-112,qs),
(347,-127,o),
(331,-147,o),
(316,-147,qs),
(302,-147,o),
(278,-127,o),
(276,-112,qs),
(273,-97,o),
(290,-77,o),
(304,-77,qs),
(318,-77,o)
);
},
{
closed = 1;
nodes = (
(307,-178,o),
(310,-193,qs),
(312,-208,o),
(296,-228,o),
(282,-228,qs),
(267,-228,o),
(244,-208,o),
(242,-193,qs),
(239,-178,o),
(255,-158,o),
(269,-158,qs),
(284,-158,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 1 0 1 2 0 128 13 8 12 3 6 5 7 5 6 114 9 1 7 10 5 7 10 126 14 1 10 11 5 10 11 126 0 11 11 132 0 3 0 1 2 3 1 105 4 1 0 0 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 0 1 2 0 128 13 8 12 3 6 5 7 5 6 7 128 9 1 7 10 5 7 10 126 14 1 10 11 5 10 11 126 0 11 11 132 0 3 0 1 2 3 1 105 4 1 0 0 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
58 57 46 45 34 33 64 62 57 68 58 68 52 50 45 56 46 56 40 38 33 44 34 44 35 20 38 38 35 16 15 7 28 
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,0,l),
(310,0,ls),
(395,0,o),
(439,37,q),
(479,0,o),
(536,0,qs),
(565,0,l),
(557,49,l),
(533,49,ls),
(502,49,o),
(477,68,qs),
(442,93,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(130,368,o),
(90,342,qs),
(58,319,o),
(41,282,q),
(40,281,l),
(37,274,o),
(38,268,qs),
(41,257,o),
(51,257,qs),
(57,257,o),
(61,261,qs),
(64,263,o),
(69,269,q),
(78,277,o),
(82,281,qs),
(129,321,o),
(182,321,qs),
(281,321,o),
(340,197,qs),
(376,118,o),
(403,79,q),
(368,49,o),
(299,49,qs),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(245,-97,o),
(247,-112,qs),
(250,-127,o),
(233,-147,o),
(219,-147,qs),
(204,-147,o),
(181,-127,o),
(179,-112,qs),
(176,-97,o),
(192,-77,o),
(207,-77,qs),
(221,-77,o)
);
},
{
closed = 1;
nodes = (
(342,-97,o),
(345,-112,qs),
(347,-127,o),
(331,-147,o),
(317,-147,qs),
(302,-147,o),
(279,-127,o),
(277,-112,qs),
(274,-97,o),
(290,-77,o),
(304,-77,qs),
(319,-77,o)
);
},
{
closed = 1;
nodes = (
(308,-178,o),
(310,-193,qs),
(313,-208,o),
(297,-228,o),
(282,-228,qs),
(268,-228,o),
(245,-208,o),
(242,-193,qs),
(240,-178,o),
(256,-158,o),
(270,-158,qs),
(284,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 0 2 34 1 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 15 9 14 3 7 5 8 5 7 114 10 1 8 11 5 8 11 126 16 1 11 12 5 11 12 126 0 12 12 132 0 3 0 1 2 3 1 105 4 13 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 2 1 0 1 2 0 128 15 9 14 3 7 5 8 5 7 8 128 10 1 8 11 5 8 11 126 16 1 11 12 5 11 12 126 0 12 12 132 0 3 0 1 2 3 1 105 4 13 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
64 63 52 51 40 39 1 0 70 68 63 74 64 74 58 56 51 62 52 62 46 44 39 50 40 50 37 35 33 31 30 28 24 22 15 13 7 5 0 38 1 38 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,451,o),
(206,451,qs),
(88,451,ls),
(85,451,o),
(84,454,qs),
(83,457,ls),
(79,481,o),
(112,481,qs),
(123,481,l),
(98,621,ls),
(91,661,o),
(119,661,qs),
(122,661,ls),
(124,661,o),
(125,657,qs),
(135,599,l),
(182,599,ls),
(262,599,o),
(272,525,qs),
(277,490,o)
);
},
{
closed = 1;
nodes = (
(157,481,l),
(206,481,ls),
(246,481,o),
(239,525,qs),
(233,569,o),
(190,569,qs),
(141,569,l)
);
},
{
closed = 1;
nodes = (
(531,0,l),
(500,0,ls),
(407,0,o),
(362,63,q),
(325,0,o),
(241,0,qs),
(115,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(240,49,ls),
(289,49,o),
(336,118,o),
(325,176,qs),
(298,321,o),
(192,321,qs),
(161,322,o),
(130,307,qs),
(123,303,o),
(119,303,qs),
(109,303,o),
(108,313,qs),
(106,326,o),
(120,339,qs),
(147,368,o),
(194,368,qs),
(259,368,o),
(307,321,qs),
(361,269,o),
(376,177,qs),
(380,154,ls),
(390,104,o),
(447,49,o),
(489,49,qs),
(523,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
59 1 6 8 1 76 0 1 0 1 133 0 8 9 6 9 8 6 128 0 0 13 1 4 2 0 4 105 5 1 2 0 3 7 2 3 104 0 7 0 9 8 7 9 105 10 14 2 6 6 11 97 12 1 11 11 24 11 78 28 27 21 20 62 60 58 55 52 49 46 44 41 40 36 34 27 63 28 63 25 23 20 26 21 26 51 34 35 33 15 7 26 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,522,o),
(63,537,qs),
(60,552,o),
(76,572,o),
(91,572,qs),
(105,572,o),
(129,552,o),
(131,537,qs),
(134,522,o),
(117,502,o),
(103,502,qs),
(89,502,o)
);
},
{
closed = 1;
nodes = (
(31,441,o),
(28,456,qs),
(26,471,o),
(42,491,o),
(56,491,qs),
(71,491,o),
(94,471,o),
(97,456,qs),
(99,441,o),
(83,421,o),
(68,421,qs),
(54,421,o)
);
},
{
closed = 1;
nodes = (
(140,491,o),
(154,491,qs),
(169,491,o),
(192,471,o),
(195,456,qs),
(197,441,o),
(181,421,o),
(166,421,qs),
(152,421,o),
(129,441,o),
(126,456,qs),
(124,471,o)
);
},
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 11 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 12 1 0 0 1 97 0 1 1 23 77 0 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
13 12 1 0 67 65 62 60 56 54 52 50 45 43 38 36 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,463,o),
(39,463,qs),
(50,463,l),
(25,602,ls),
(18,642,o),
(46,642,qs),
(48,642,ls),
(51,642,o),
(52,638,qs),
(62,581,l),
(108,581,ls),
(189,581,o),
(199,507,qs),
(204,472,o),
(168,432,o),
(133,432,qs),
(15,432,ls),
(11,432,o),
(11,436,q),
(10,438,l)
);
},
{
closed = 1;
nodes = (
(83,463,l),
(133,463,ls),
(173,463,o),
(166,507,qs),
(160,551,o),
(117,551,qs),
(68,551,l)
);
},
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
55 1 11 6 1 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 4 3 1 4 105 5 1 3 0 0 7 3 0 104 0 8 0 10 8 10 101 0 6 6 11 97 0 11 11 24 11 78 21 20 58 56 53 51 47 45 43 41 36 34 29 27 25 23 20 26 21 26 34 35 35 49 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(858,0,ls),
(765,0,o),
(720,62,q),
(684,0,o),
(603,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(595,49,ls),
(638,49,o),
(662,75,qs),
(694,109,o),
(681,176,qs),
(672,232,o),
(599,302,o),
(550,302,qs),
(351,302,ls),
(311,302,o),
(305,334,qs),
(303,349,ls),
(299,369,o),
(311,379,qs),
(520,554,ls),
(524,557,o),
(528,555,qs),
(544,544,o),
(545,512,o),
(530,499,qs),
(359,355,ls),
(357,353,o),
(357,352,qs),
(357,349,o),
(361,349,qs),
(548,349,ls),
(704,349,o),
(734,177,qs),
(738,154,ls),
(747,104,o),
(805,49,o),
(847,49,qs),
(880,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
51 1 0 4 1 76 0 4 2 0 2 4 0 128 0 1 0 2 4 1 2 103 3 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 54 52 50 47 40 39 33 30 25 22 7 5 0 55 1 55 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 863;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(435,349,o),
(464,173,qs),
(476,97,o),
(442,50,qs),
(405,0,o),
(333,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 32 30 25 22 7 5 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,0,l),
(588,0,ls),
(495,0,o),
(449,62,q),
(414,0,o),
(333,0,qs),
(4,0,l),
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(434,349,o),
(463,177,qs),
(468,154,ls),
(477,104,o),
(534,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 39 37 35 33 32 30 25 22 7 5 0 40 1 40 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,513,qs),
(270,524,o),
(281,532,qs),
(444,668,l),
(449,670,o),
(451,668,qs),
(462,660,o),
(464,649,qs),
(466,637,o),
(449,623,qs),
(293,495,ls),
(279,484,o),
(275,499,qs),
(273,504,o)
);
},
{
closed = 1;
nodes = (
(889,0,l),
(858,0,ls),
(765,0,o),
(720,62,q),
(684,0,o),
(603,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(595,49,ls),
(638,49,o),
(662,75,qs),
(694,109,o),
(681,176,qs),
(672,232,o),
(599,302,o),
(550,302,qs),
(351,302,ls),
(311,302,o),
(305,334,qs),
(303,349,ls),
(299,369,o),
(311,379,qs),
(520,554,ls),
(524,557,o),
(528,555,q),
(543,544,o),
(545,512,o),
(530,499,qs),
(359,355,ls),
(357,353,o),
(357,352,qs),
(357,349,o),
(361,349,qs),
(548,349,ls),
(704,349,o),
(734,177,qs),
(738,154,ls),
(747,104,o),
(805,49,o),
(847,49,qs),
(880,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
65 1 1 5 1 76 0 0 2 0 133 0 5 3 1 3 5 1 128 0 2 0 3 5 2 3 104 4 8 2 1 1 6 97 7 1 6 6 24 6 78 15 14 68 66 64 61 54 53 47 44 39 36 21 19 14 69 15 69 39 9 7 23 
CALL[ ]	/* CallFunction */";
};
width = 863;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,484,o),
(4,499,qs),
(3,503,o),
(2,513,qs),
(0,524,o),
(10,532,qs),
(174,668,ls),
(178,671,o),
(181,668,qs),
(192,660,o),
(193,649,qs),
(195,637,o),
(179,623,qs),
(22,495,ls)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(435,349,o),
(464,173,qs),
(476,97,o),
(442,50,qs),
(405,0,o),
(333,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 104 0 4 4 1 95 5 1 1 1 24 1 78 15 14 46 44 39 36 21 19 14 47 15 47 36 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,513,qs),
(0,524,o),
(10,532,qs),
(174,668,ls),
(178,671,o),
(181,668,qs),
(192,660,o),
(193,649,qs),
(195,637,o),
(179,623,qs),
(22,495,ls),
(9,484,o),
(4,499,qs),
(3,503,o)
);
},
{
closed = 1;
nodes = (
(618,0,l),
(588,0,ls),
(495,0,o),
(449,62,q),
(414,0,o),
(333,0,qs),
(4,0,l),
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(434,349,o),
(463,177,qs),
(468,154,ls),
(477,104,o),
(534,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
50 1 1 3 1 76 0 0 2 0 133 0 2 0 3 1 2 3 104 4 7 2 1 1 5 97 6 1 5 5 24 5 78 15 14 53 51 49 47 46 44 39 36 21 19 14 54 15 54 39 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(710,0,l),
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
38 1 5 0 1 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 41 39 35 33 25 24 16 14 8 6 0 42 1 42 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,498,q),
(124,518,o),
(119,543,qs),
(114,575,o),
(146,617,o),
(176,617,qs),
(198,617,o),
(234,593,o),
(239,576,qs),
(242,568,o),
(236,568,qs),
(232,568,o),
(224,572,qs),
(204,583,o),
(188,583,qs),
(151,581,o),
(157,543,qs),
(160,526,o),
(191,501,o),
(209,501,qs),
(246,501,ls),
(273,501,o),
(278,476,qs),
(279,473,ls),
(280,467,o),
(273,467,qs),
(190,467,ls),
(157,467,o),
(135,459,q),
(134,459,o),
(131,458,qs),
(127,456,o),
(126,456,qs),
(120,456,o),
(118,468,qs),
(114,492,o)
);
},
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 1 2 58 1 6 12 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 4 3 2 3 4 2 128 0 0 1 7 1 0 7 128 0 7 8 1 7 8 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 8 0 12 6 8 12 103 13 1 6 6 10 97 0 10 10 24 77 14 1 11 11 9 98 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 4 3 2 3 4 2 128 0 0 1 7 1 0 7 128 0 7 8 1 7 8 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 8 0 12 6 8 12 103 14 1 11 0 9 11 9 102 13 1 6 6 10 97 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
64 63 37 36 71 69 63 74 64 74 61 59 57 55 49 47 44 42 36 62 37 62 35 34 35 51 52 33 15 7 28 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
22 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 98 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 102 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 35 33 27 38 28 38 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-1,qs),
(86,-20,o),
(80,-30,qs),
(66,-54,o),
(64,-75,q),
(95,-80,o),
(100,-112,qs),
(103,-127,o),
(86,-149,o),
(71,-149,qs),
(35,-149,o),
(27,-109,qs),
(17,-58,o),
(61,3,q),
(46,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(160,66,o),
(110,26,q),
(106,17,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
16 1 2 1 25 1 3 2 2 76 0 0 1 0 133 0 3 2 3 134 0 1 1 2 97 0 2 2 24 2 78 36 33 35 37 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,-112,qs),
(582,-127,o),
(564,-149,o),
(549,-149,qs),
(513,-149,o),
(505,-109,qs),
(496,-61,o),
(537,0,q),
(389,0,ls),
(376,0,o),
(380,-21,qs),
(381,-27,o),
(381,-29,qs),
(389,-109,o),
(360,-157,qs),
(325,-214,o),
(243,-214,qs),
(176,-214,o),
(127,-169,qs),
(72,-120,o),
(57,-37,qs),
(54,-17,o),
(54,2,q),
(46,0,o),
(17,0,qs),
(9,0,o),
(5,0,q),
(-4,49,l),
(24,49,ls),
(68,49,o),
(87,68,qs),
(93,73,o),
(98,73,qs),
(107,73,o),
(107,62,qs),
(104,18,o),
(108,-17,qs),
(118,-86,o),
(189,-167,o),
(239,-167,qs),
(298,-167,o),
(319,-125,qs),
(337,-91,o),
(328,-34,qs),
(319,17,o),
(332,49,o),
(362,49,qs),
(625,49,l),
(634,0,l),
(574,0,l),
(569,-9,o),
(558,-30,qs),
(545,-54,o),
(542,-75,q),
(573,-81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
31 1 0 1 1 76 0 3 1 3 133 0 8 0 2 0 8 2 128 0 2 0 6 2 6 101 4 1 1 1 0 95 7 5 2 0 0 24 0 78 35 38 38 49 35 21 37 33 20 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(833,0,l),
(803,0,ls),
(710,0,o),
(665,62,q),
(629,0,o),
(543,0,qs),
(399,0,ls),
(351,0,o),
(332,13,q),
(317,0,o),
(269,0,qs),
(114,0,ls),
(106,0,o),
(105,7,qs),
(105,11,ls),
(100,49,o),
(145,49,qs),
(244,49,l),
(207,68,o),
(156,145,o),
(150,191,qs),
(140,283,o),
(188,328,q),
(169,329,o),
(152,332,qs),
(103,340,o),
(89,382,qs),
(85,396,o),
(95,392,qs),
(115,385,o),
(135,381,qs),
(180,372,o),
(260,371,qs),
(287,370,ls),
(390,368,o),
(443,368,qs),
(535,368,o),
(594,325,qs),
(665,275,o),
(679,176,qs),
(683,154,ls),
(692,104,o),
(749,49,o),
(792,49,qs),
(825,49,l)
);
},
{
closed = 1;
nodes = (
(592,49,o),
(637,117,o),
(627,176,qs),
(602,319,o),
(447,322,qs),
(420,322,o),
(372,323,q),
(435,275,o),
(450,191,qs),
(457,147,o),
(427,69,o),
(394,49,q),
(543,49,ls)
);
},
{
closed = 1;
nodes = (
(277,70,o),
(324,58,q),
(367,70,o),
(411,145,o),
(402,193,qs),
(392,248,o),
(322,318,o),
(278,318,qs),
(239,318,o),
(216,289,qs),
(187,253,o),
(198,193,qs),
(207,145,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
68 40 2 0 9 35 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
68 40 2 0 7 35 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
45 45 1 0 63 61 45 57 45 56 53 50 43 41 39 36 34 31 28 26 21 20 12 7 0 44 1 44 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 816;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,52,qs),
(543,0,o),
(464,0,qs),
(320,0,ls),
(272,0,o),
(253,13,q),
(238,0,o),
(190,0,qs),
(4,0,l),
(-4,49,l),
(165,49,l),
(128,68,o),
(77,145,o),
(72,191,qs),
(61,283,o),
(109,328,q),
(90,329,o),
(73,332,qs),
(24,340,o),
(10,382,qs),
(6,396,o),
(17,392,qs),
(36,385,o),
(56,381,qs),
(101,372,o),
(181,371,qs),
(208,370,ls),
(311,368,o),
(364,368,qs),
(456,368,o),
(516,325,qs),
(587,275,o),
(600,175,qs),
(613,99,o)
);
},
{
closed = 1;
nodes = (
(513,49,o),
(558,117,o),
(548,176,qs),
(523,319,o),
(368,322,qs),
(342,322,o),
(293,323,q),
(356,275,o),
(371,191,qs),
(379,147,o),
(348,69,o),
(315,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(198,70,o),
(245,58,q),
(288,70,o),
(332,145,o),
(323,193,qs),
(313,248,o),
(243,318,o),
(199,318,qs),
(160,318,o),
(137,289,qs),
(109,253,o),
(119,193,qs),
(128,145,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
57 1 2 7 27 1 3 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
57 1 2 5 27 1 3 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 7 1 2 1 7 114 0 0 5 1 1 7 0 1 105 8 6 2 2 2 3 95 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 5 5 1 114 0 0 7 1 5 2 0 5 105 8 6 2 2 2 3 95 4 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
34 34 52 50 34 46 34 45 56 50 33 21 24 83 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(754,0,l),
(724,0,ls),
(631,0,o),
(586,62,q),
(550,0,o),
(464,0,qs),
(320,0,ls),
(272,0,o),
(253,13,q),
(238,0,o),
(190,0,qs),
(4,0,l),
(-4,49,l),
(165,49,l),
(128,68,o),
(77,145,o),
(72,191,qs),
(61,283,o),
(109,328,q),
(90,329,o),
(73,332,qs),
(24,340,o),
(10,382,qs),
(6,396,o),
(17,392,qs),
(36,385,o),
(56,381,qs),
(101,372,o),
(181,371,qs),
(208,370,ls),
(311,368,o),
(364,368,qs),
(456,368,o),
(516,325,qs),
(586,275,o),
(600,176,qs),
(604,154,ls),
(613,104,o),
(671,49,o),
(713,49,qs),
(746,49,l)
);
},
{
closed = 1;
nodes = (
(513,49,o),
(558,117,o),
(548,176,qs),
(523,319,o),
(368,322,qs),
(342,322,o),
(293,323,q),
(356,275,o),
(371,191,qs),
(379,147,o),
(348,69,o),
(315,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(198,70,o),
(245,58,q),
(288,70,o),
(332,145,o),
(323,193,qs),
(313,248,o),
(243,318,o),
(199,318,qs),
(160,318,o),
(137,289,qs),
(109,253,o),
(119,193,qs),
(128,145,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
64 36 2 0 9 31 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
64 36 2 0 7 31 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 41 1 0 59 57 41 53 41 52 49 46 39 37 35 32 30 28 27 26 21 20 12 7 0 40 1 40 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,49,l),
(269,49,ls),
(180,49,o),
(131,-1,qs),
(77,-54,o),
(91,-141,qs),
(102,-214,o),
(156,-265,qs),
(223,-329,o),
(328,-331,qs),
(400,-333,o),
(448,-310,qs),
(489,-291,o),
(505,-261,qs),
(508,-255,o),
(507,-247,qs),
(506,-238,o),
(496,-238,qs),
(492,-238,o),
(486,-241,qs),
(453,-261,o),
(425,-271,qs),
(385,-286,o),
(325,-284,qs),
(255,-282,o),
(158,-205,o),
(147,-142,qs),
(138,-88,o),
(165,-49,qs),
(199,0,o),
(274,0,qs),
(541,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 0 1 0 2 1 128 0 1 0 3 1 3 101 0 4 4 0 95 5 1 0 0 24 0 78 1 0 30 28 22 20 14 12 8 6 0 31 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,162,q),
(167,183,o),
(162,208,qs),
(157,240,o),
(189,281,o),
(219,281,qs),
(241,281,o),
(277,257,o),
(282,240,qs),
(285,232,o),
(279,232,qs),
(275,232,o),
(267,237,qs),
(248,248,o),
(231,247,qs),
(194,246,o),
(200,207,qs),
(203,190,o),
(234,166,o),
(252,166,qs),
(290,166,ls),
(317,166,o),
(321,140,q),
(322,137,ls),
(323,132,o),
(316,132,qs),
(234,132,ls),
(200,132,o),
(179,124,q),
(177,124,o),
(175,123,qs),
(170,121,o),
(169,121,qs),
(164,121,o),
(161,133,q),
(158,157,o)
);
},
{
closed = 1;
nodes = (
(505,-247,qs),
(506,-255,o),
(503,-261,qs),
(487,-291,o),
(446,-310,qs),
(398,-333,o),
(326,-331,qs),
(234,-329,o),
(170,-279,qs),
(101,-226,o),
(89,-141,qs),
(77,-66,o),
(117,-14,qs),
(165,49,o),
(267,49,qs),
(530,49,l),
(539,0,l),
(272,0,ls),
(206,0,o),
(171,-39,qs),
(134,-79,o),
(145,-142,qs),
(155,-196,o),
(194,-234,qs),
(243,-281,o),
(323,-284,qs),
(383,-286,o),
(423,-271,qs),
(451,-261,o),
(484,-241,qs),
(490,-238,o),
(494,-238,qs),
(504,-238,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
34 1 0 1 1 76 0 3 2 1 2 3 1 128 10 1 9 6 5 6 9 5 128 0 4 0 2 3 4 2 105 0 1 0 0 7 1 0 103 0 5 0 8 5 8 101 0 7 7 6 95 0 6 6 24 6 78 36 36 36 68 36 68 38 33 38 43 35 34 35 51 55 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,486,o),
(189,469,qs),
(192,453,o),
(174,431,o),
(158,431,qs),
(143,431,o),
(118,453,o),
(115,469,qs),
(112,485,o),
(129,507,o),
(145,507,qs),
(161,507,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-96,o),
(135,-112,qs),
(138,-127,o),
(121,-149,o),
(105,-149,qs),
(90,-149,o),
(65,-128,o),
(62,-112,qs),
(59,-96,o),
(76,-74,o),
(92,-74,qs),
(107,-74,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 7 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 6 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(683,49,l),
(692,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 0 0 0 1 95 5 1 1 1 24 1 78 19 40 24 35 36 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(112,-97,o),
(114,-112,qs),
(117,-127,o),
(101,-147,o),
(86,-147,qs),
(72,-147,o),
(48,-127,o),
(46,-112,qs),
(43,-97,o),
(60,-77,o),
(74,-77,qs),
(88,-77,o)
);
},
{
closed = 1;
nodes = (
(210,-97,o),
(212,-112,qs),
(215,-127,o),
(198,-147,o),
(184,-147,qs),
(169,-147,o),
(146,-127,o),
(144,-112,qs),
(141,-97,o),
(157,-77,o),
(172,-77,qs),
(186,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 7 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(124,-147,o),
(110,-147,qs),
(96,-147,o),
(72,-127,o),
(70,-112,qs),
(67,-97,o),
(83,-77,o),
(98,-77,qs),
(112,-77,o),
(136,-97,o),
(138,-112,qs),
(141,-127,o)
);
},
{
closed = 1;
nodes = (
(234,-97,o),
(236,-112,qs),
(239,-127,o),
(222,-147,o),
(208,-147,qs),
(193,-147,o),
(170,-127,o),
(168,-112,qs),
(165,-97,o),
(181,-77,o),
(195,-77,qs),
(210,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
17 1 0 1 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 1 0 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 6 0 21 1 21 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,86,o),
(821,46,qs),
(791,0,o),
(719,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(713,49,ls),
(756,49,o),
(795,106,o),
(786,156,qs),
(761,299,ls),
(752,349,o),
(792,349,qs),
(797,349,ls),
(803,349,o),
(803,344,q),
(837,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(796,-112,qs),
(799,-127,o),
(782,-149,o),
(766,-149,qs),
(751,-149,o),
(726,-128,o),
(723,-112,qs),
(720,-96,o),
(737,-74,o),
(753,-74,qs),
(768,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 0 4 0 133 0 4 1 4 133 9 1 7 0 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 96 6 1 2 2 24 2 78 51 50 57 55 50 61 51 61 35 40 24 35 36 52 34 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,86,o),
(821,46,qs),
(791,0,o),
(719,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(713,49,ls),
(756,49,o),
(795,106,o),
(786,156,qs),
(761,299,ls),
(752,349,o),
(792,349,qs),
(797,349,ls),
(803,349,o),
(803,344,q),
(837,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-96,o),
(796,-112,qs),
(799,-127,o),
(782,-149,o),
(766,-149,qs),
(751,-149,o),
(726,-128,o),
(723,-112,qs),
(720,-96,o),
(737,-74,o),
(753,-74,qs),
(768,-74,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 0 4 0 133 0 4 1 4 133 13 1 7 0 8 3 7 8 105 0 3 0 5 9 3 5 105 15 11 14 3 9 12 1 10 9 10 101 0 1 1 2 96 6 1 2 2 24 2 78 75 74 63 62 51 50 81 79 74 85 75 85 69 67 62 73 63 73 57 55 50 61 51 61 35 40 24 35 36 52 34 16 7 29 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(744,463,o),
(741,479,qs),
(738,495,o),
(755,517,o),
(771,517,qs),
(787,517,o),
(812,495,o),
(815,479,qs),
(818,463,o),
(800,441,o),
(784,441,qs),
(769,441,o)
);
},
{
closed = 1;
nodes = (
(972,60,qs),
(938,2,o),
(863,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(733,49,l),
(678,93,o),
(662,183,qs),
(649,257,o),
(683,309,qs),
(722,368,o),
(800,368,qs),
(866,368,o),
(917,322,qs),
(973,270,o),
(988,183,qs),
(1001,110,o)
);
},
{
closed = 1;
nodes = (
(924,85,qs),
(948,123,o),
(937,184,qs),
(926,244,o),
(850,321,o),
(801,321,qs),
(754,321,o),
(730,284,qs),
(703,245,o),
(714,184,qs),
(724,127,o),
(806,49,o),
(855,49,qs),
(902,49,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 0 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 18 13 17 3 11 14 1 12 11 12 101 16 9 2 3 3 4 95 8 1 4 4 24 4 78 89 88 77 76 63 62 1 0 95 93 88 99 89 99 83 81 76 87 77 87 70 68 62 75 63 75 59 57 54 52 44 43 35 33 30 28 24 22 17 15 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1028;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 0 4 0 133 0 4 1 4 133 9 11 2 7 10 1 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 98 6 1 2 2 24 2 78 50 49 71 69 65 63 56 54 49 60 50 60 35 40 24 35 36 51 34 12 7 29 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(838,86,o),
(810,46,qs),
(779,0,o),
(708,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(702,49,ls),
(793,49,o),
(775,156,qs),
(750,299,ls),
(741,349,o),
(781,349,qs),
(786,349,ls),
(792,349,o),
(792,344,q),
(826,155,ls)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o),
(891,-97,o),
(893,-112,qs),
(896,-127,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 0 4 0 133 0 4 1 4 133 9 15 2 7 10 1 8 3 7 8 105 0 3 0 5 11 3 5 105 17 13 16 3 11 14 1 12 11 12 101 0 1 1 2 98 6 1 2 2 24 2 78 86 85 74 73 50 49 92 90 85 96 86 96 80 78 73 84 74 84 71 69 65 63 56 54 49 60 50 60 35 40 24 35 36 51 34 18 7 29 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,684,qs),
(-21,699,o),
(-16,722,qs),
(-10,743,o),
(14,743,qs),
(34,743,o),
(64,721,qs),
(77,711,o),
(83,711,qs),
(90,711,o),
(95,716,qs),
(100,721,l),
(65,745,o),
(61,779,qs),
(58,805,o),
(88,838,o),
(114,838,qs),
(142,837,o),
(179,805,o),
(180,779,qs),
(182,750,o),
(154,722,q),
(170,704,o),
(155,689,q),
(151,686,o),
(145,691,qs),
(132,702,l),
(114,686,ls),
(102,675,o),
(87,675,qs),
(73,675,o),
(45,696,qs),
(29,709,o),
(22,709,qs),
(13,709,o),
(5,685,qs),
(2,677,o)
);
},
{
closed = 1;
nodes = (
(96,779,qs),
(101,761,o),
(125,743,q),
(146,761,o),
(147,778,qs),
(147,789,o),
(129,806,o),
(117,806,qs),
(91,806,o)
);
},
{
closed = 1;
nodes = (
(236,513,o),
(205,472,o),
(174,471,qs),
(144,470,o),
(125,491,q),
(107,470,o),
(77,471,qs),
(19,471,o),
(6,545,qs),
(3,563,ls),
(-1,583,o),
(4,592,qs),
(9,604,o),
(25,604,qs),
(28,604,ls),
(32,604,o),
(33,599,qs),
(44,539,ls),
(50,505,o),
(78,505,qs),
(106,505,o),
(100,539,qs),
(96,563,ls),
(93,582,o),
(97,593,q),
(103,604,o),
(118,604,qs),
(121,604,ls),
(125,604,o),
(126,599,qs),
(137,539,ls),
(142,504,o),
(171,505,qs),
(198,506,o),
(193,539,qs),
(189,563,ls),
(185,582,o),
(190,593,qs),
(196,604,o),
(211,604,qs),
(214,604,ls),
(219,604,o),
(219,599,q),
(229,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
24 14 2 3 4 9 1 1 0 84 1 11 7 3 76 42 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
10 8 2 6 1 7 7 6 114 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
10 8 2 6 1 7 1 6 7 128 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
38 37 87 85 83 81 76 74 70 68 63 61 57 55 50 48 37 45 38 45 35 22 43 34 33 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,675,qs),
(17,676,o),
(4,749,qs),
(0,768,ls),
(-3,787,o),
(1,797,qs),
(7,809,o),
(23,809,qs),
(25,809,ls),
(30,809,o),
(31,803,qs),
(41,744,ls),
(48,709,o),
(75,709,qs),
(103,709,o),
(98,744,qs),
(94,768,ls),
(90,787,o),
(95,797,qs),
(101,809,o),
(115,809,qs),
(119,809,ls),
(123,809,o),
(124,803,qs),
(134,744,ls),
(140,709,o),
(169,709,qs),
(196,710,o),
(190,744,qs),
(186,768,ls),
(183,786,o),
(188,797,qs),
(194,809,o),
(209,809,qs),
(211,809,ls),
(216,809,o),
(217,803,qs),
(227,751,ls),
(233,718,o),
(203,676,o),
(172,676,qs),
(142,675,o),
(123,695,q),
(104,674,o)
);
},
{
closed = 1;
nodes = (
(107,558,o),
(85,550,q),
(84,550,o),
(81,549,qs),
(76,547,o),
(75,547,qs),
(70,547,o),
(68,559,qs),
(64,583,o),
(92,588,qs),
(111,592,o),
(141,592,qs),
(196,592,ls),
(223,592,o),
(228,566,q),
(228,563,ls),
(229,558,o),
(223,558,qs),
(138,558,ls)
);
},
{
closed = 1;
nodes = (
(243,476,o),
(236,476,qs),
(152,476,ls),
(121,476,o),
(99,468,q),
(98,468,o),
(96,467,qs),
(90,465,l),
(84,465,o),
(82,477,qs),
(78,501,o),
(106,507,qs),
(125,510,o),
(156,510,qs),
(210,510,ls),
(237,510,o),
(242,484,q),
(243,482,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
5 3 2 1 2 2 1 112 4 1 2 6 1 0 7 2 0 106 0 7 11 1 8 9 7 8 103 0 9 10 10 9 89 0 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
5 3 2 1 2 1 133 4 1 2 6 1 0 7 2 0 106 0 7 11 1 8 9 7 8 103 0 9 10 10 9 89 0 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
44 44 79 76 67 64 44 62 44 61 53 37 51 37 51 37 52 33 12 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,689,qs),
(6,714,o),
(34,719,qs),
(53,722,o),
(84,722,qs),
(138,722,ls),
(165,722,o),
(170,697,q),
(170,694,ls),
(171,688,o),
(164,688,qs),
(80,688,ls),
(49,688,o),
(27,681,q),
(26,680,o),
(23,679,qs),
(18,677,o),
(18,677,q),
(12,677,o)
);
},
{
closed = 1;
nodes = (
(233,513,o),
(203,472,o),
(172,471,qs),
(142,470,o),
(123,491,q),
(104,470,o),
(74,471,qs),
(17,471,o),
(4,545,qs),
(0,563,ls),
(-3,583,o),
(1,592,qs),
(7,604,o),
(23,604,qs),
(25,604,ls),
(30,604,o),
(31,599,qs),
(41,539,ls),
(48,505,o),
(75,505,qs),
(103,505,o),
(98,539,qs),
(94,563,ls),
(90,582,o),
(95,593,qs),
(101,604,o),
(115,604,qs),
(119,604,ls),
(123,604,o),
(124,599,qs),
(134,539,ls),
(140,504,o),
(169,505,qs),
(196,506,o),
(190,539,qs),
(186,563,ls),
(183,582,o),
(188,593,qs),
(194,604,o),
(209,604,qs),
(211,604,ls),
(216,604,o),
(217,599,qs),
(227,547,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
57 1 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 4 2 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 4 2 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 37 36 37 36 37 39 51 53 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,695,o),
(8,698,q),
(9,699,o),
(11,700,qs),
(47,722,o),
(69,741,q),
(35,765,o),
(31,798,qs),
(28,824,o),
(58,857,o),
(84,857,qs),
(112,856,o),
(149,824,o),
(150,798,qs),
(152,769,o),
(124,741,q),
(140,723,o),
(125,708,q),
(121,705,o),
(115,709,qs),
(101,721,l),
(63,690,o),
(50,683,qs),
(39,678,o),
(33,678,qs),
(22,678,o),
(10,688,qs),
(8,690,ls)
);
},
{
closed = 1;
nodes = (
(66,798,qs),
(71,780,o),
(95,762,q),
(116,780,o),
(117,797,qs),
(117,808,o),
(99,825,o),
(87,825,qs),
(61,825,o)
);
},
{
closed = 1;
nodes = (
(233,513,o),
(203,472,o),
(172,471,qs),
(142,470,o),
(123,491,q),
(104,470,o),
(74,471,qs),
(17,471,o),
(4,545,qs),
(0,563,ls),
(-3,583,o),
(1,592,qs),
(7,604,o),
(23,604,qs),
(25,604,ls),
(30,604,o),
(31,599,qs),
(41,539,ls),
(48,505,o),
(75,505,qs),
(103,505,o),
(98,539,qs),
(94,563,ls),
(90,582,o),
(95,593,qs),
(101,604,o),
(115,604,qs),
(119,604,ls),
(123,604,o),
(124,599,qs),
(134,539,ls),
(140,504,o),
(169,505,qs),
(196,506,o),
(190,539,qs),
(186,563,ls),
(183,582,o),
(188,593,qs),
(194,604,o),
(209,604,qs),
(211,604,ls),
(216,604,o),
(217,599,qs),
(227,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
33 21 11 6 4 0 2 75 1 8 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 3 2 0 3 128 7 5 2 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 2 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
29 28 78 76 74 72 67 65 61 59 54 52 48 46 41 39 28 36 29 36 45 17 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,581,qs),
(17,582,o),
(4,656,qs),
(0,674,ls),
(-3,694,o),
(1,703,qs),
(7,715,o),
(23,715,qs),
(25,715,ls),
(30,715,o),
(31,709,qs),
(41,650,ls),
(48,616,o),
(75,616,qs),
(103,616,o),
(98,650,qs),
(94,674,ls),
(90,693,o),
(95,703,qs),
(101,715,o),
(115,715,qs),
(119,715,ls),
(123,715,o),
(124,709,qs),
(134,650,ls),
(140,615,o),
(169,616,qs),
(196,616,o),
(190,650,qs),
(186,674,ls),
(183,693,o),
(188,703,qs),
(194,715,o),
(209,715,qs),
(211,715,ls),
(216,715,o),
(217,709,qs),
(227,657,ls),
(233,624,o),
(203,582,o),
(172,582,qs),
(142,581,o),
(123,601,q),
(104,580,o)
);
},
{
closed = 1;
nodes = (
(234,476,o),
(229,476,qs),
(135,476,ls),
(93,476,o),
(71,467,q),
(70,467,o),
(69,466,qs),
(67,465,o),
(66,465,qs),
(64,465,o),
(62,469,qs),
(60,474,o),
(60,478,qs),
(60,492,o),
(74,499,qs),
(86,506,o),
(109,507,qs),
(203,507,ls),
(228,507,o),
(233,483,qs),
(234,480,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
64 51 2 8 7 1 76 55 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
5 3 2 1 2 2 1 112 4 1 2 6 1 0 7 2 0 106 0 7 8 8 7 87 0 7 7 8 95 0 8 7 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
5 3 2 1 2 1 133 4 1 2 6 1 0 7 2 0 106 0 7 8 8 7 87 0 7 7 8 95 0 8 7 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
44 50 37 51 37 51 37 52 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,778,q),
(57,783,o),
(58,788,qs),
(59,798,o),
(70,802,qs),
(74,803,o),
(77,801,qs),
(84,796,o),
(92,778,qs),
(117,712,o),
(102,679,qs),
(99,673,o),
(96,673,qs),
(92,673,o),
(91,681,qs),
(84,719,o),
(64,760,qs),
(58,771,o)
);
},
{
closed = 1;
nodes = (
(233,513,o),
(203,472,o),
(172,471,qs),
(142,470,o),
(123,491,q),
(104,470,o),
(74,471,qs),
(17,471,o),
(4,545,qs),
(0,563,ls),
(-3,583,o),
(1,592,qs),
(7,604,o),
(23,604,qs),
(25,604,ls),
(30,604,o),
(31,599,qs),
(41,539,ls),
(48,505,o),
(75,505,qs),
(103,505,o),
(98,539,qs),
(94,563,ls),
(90,582,o),
(95,593,qs),
(101,604,o),
(115,604,qs),
(119,604,ls),
(123,604,o),
(124,599,qs),
(134,539,ls),
(140,504,o),
(169,505,qs),
(196,506,o),
(190,539,qs),
(186,563,ls),
(183,582,o),
(188,593,qs),
(194,604,o),
(209,604,qs),
(211,604,ls),
(216,604,o),
(217,599,qs),
(227,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
56 1 6 2 1 76 14 12 2 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 5 3 2 1 2 2 1 112 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 5 3 2 1 2 1 133 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 37 36 37 36 37 47 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
50 1 0 5 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 98 8 7 2 3 3 24 3 78 68 67 56 55 1 0 74 72 67 78 68 78 62 60 55 66 56 66 53 51 49 47 44 42 34 33 25 23 20 18 14 11 8 6 0 54 1 54 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,0,l),
(921,0,ls),
(834,0,o),
(789,53,q),
(762,3,o),
(692,0,qs),
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(676,49,ls),
(768,49,o),
(749,156,qs),
(724,299,ls),
(715,349,o),
(756,349,qs),
(761,349,ls),
(766,349,o),
(767,344,qs),
(800,155,ls),
(809,105,o),
(868,49,o),
(911,49,qs),
(943,49,l)
);
},
{
closed = 1;
nodes = (
(793,-97,o),
(796,-112,qs),
(798,-127,o),
(782,-147,o),
(767,-147,qs),
(753,-147,o),
(730,-127,o),
(727,-112,qs),
(725,-97,o),
(741,-77,o),
(755,-77,qs),
(770,-77,o)
);
},
{
closed = 1;
nodes = (
(891,-97,o),
(893,-112,qs),
(896,-127,o),
(880,-147,o),
(865,-147,qs),
(851,-147,o),
(828,-127,o),
(825,-112,qs),
(823,-97,o),
(839,-77,o),
(853,-77,qs),
(867,-77,o)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
50 1 0 5 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 4 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 98 8 7 2 3 3 24 3 78 92 91 80 79 68 67 56 55 1 0 98 96 91 102 92 102 86 84 79 90 80 90 74 72 67 78 68 78 62 60 55 66 56 66 53 51 49 47 44 42 34 33 25 23 20 18 14 11 8 6 0 54 1 54 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,806,qs),
(538,810,o),
(539,815,qs),
(541,825,o),
(551,829,q),
(556,830,o),
(559,828,qs),
(566,823,o),
(574,805,qs),
(599,739,o),
(584,707,qs),
(581,701,o),
(578,701,qs),
(573,701,o),
(573,708,q),
(566,746,o),
(545,787,qs),
(540,799,o)
);
},
{
closed = 1;
nodes = (
(479,610,o),
(483,619,qs),
(488,632,o),
(504,632,qs),
(507,632,ls),
(512,632,o),
(513,626,qs),
(523,567,ls),
(529,532,o),
(557,532,qs),
(585,532,o),
(579,567,qs),
(575,591,ls),
(572,610,o),
(576,620,qs),
(582,632,o),
(597,632,qs),
(600,632,ls),
(604,632,o),
(605,626,qs),
(616,567,ls),
(622,531,o),
(650,532,qs),
(678,533,o),
(672,567,qs),
(668,591,ls),
(665,609,o),
(670,620,qs),
(676,632,o),
(690,632,qs),
(693,632,ls),
(698,632,o),
(699,626,qs),
(709,574,ls),
(715,540,o),
(685,499,o),
(654,498,qs),
(624,498,o),
(604,518,q),
(586,497,o),
(556,498,qs),
(499,499,o),
(485,572,qs),
(482,591,ls)
);
},
{
closed = 1;
nodes = (
(991,86,o),
(964,46,qs),
(933,0,o),
(861,0,qs),
(815,0,ls),
(729,0,o),
(684,52,q),
(655,0,o),
(578,0,qs),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(570,49,ls),
(662,49,o),
(643,156,qs),
(605,373,ls),
(601,395,o),
(619,424,o),
(637,424,qs),
(642,424,ls),
(647,424,o),
(648,418,qs),
(695,155,l),
(696,144,l),
(720,49,o),
(805,49,qs),
(831,49,l),
(855,49,ls),
(946,49,o),
(928,156,qs),
(889,373,ls),
(880,424,o),
(921,424,qs),
(926,424,ls),
(932,424,o),
(933,419,qs),
(979,156,ls)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
},
{
closed = 1;
nodes = (
(1137,0,o),
(1136,6,qs),
(1048,504,ls),
(1044,527,o),
(1062,556,o),
(1080,556,qs),
(1085,556,ls),
(1091,556,o),
(1091,550,q),
(1179,51,ls),
(1188,0,o),
(1148,0,qs),
(1143,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
22 1 1 4 113 108 2 9 18 2 76 16 14 12 2 4 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 0 3 0 133 7 5 2 3 20 4 3 112 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 0 20 20 23 77 11 1 9 9 15 98 22 19 16 3 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 0 20 20 23 77 11 1 9 9 15 98 22 19 16 3 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 103 21 1 17 0 14 17 14 101 0 20 20 23 77 11 1 9 9 15 98 22 19 16 3 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
134 133 122 121 140 138 133 145 134 144 129 127 121 132 122 132 117 114 112 109 107 105 99 97 94 92 87 84 80 77 73 69 38 51 37 51 37 52 34 46 35 23 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1210;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,21,o),
(299,40,qs),
(322,76,ls),
(331,89,o),
(331,98,qs),
(331,207,l),
(431,228,l),
(431,72,l),
(655,120,l),
(665,143,o),
(671,176,q),
(483,136,l),
(483,239,l),
(655,275,l),
(667,305,o),
(671,332,q),
(483,292,l),
(483,565,l),
(457,547,o),
(431,516,q),
(431,281,l),
(331,260,l),
(331,603,l),
(307,585,o),
(279,555,q),
(279,249,l),
(105,212,l),
(93,181,o),
(89,155,q),
(279,195,l),
(279,73,l),
(69,28,l),
(57,-3,o),
(53,-29,q),
(264,16,ls)
);
},
{
closed = 1;
nodes = (
(434,-83,q),
(655,-36,l),
(667,-5,o),
(671,21,q),
(450,-26,l),
(438,-55,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 725;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-54,676,o),
(-51,661,qs),
(-48,650,o),
(-38,637,qs),
(-33,629,o),
(-29,637,qs),
(-28,640,o),
(-26,651,qs),
(-23,663,o),
(-13,663,qs),
(-4,663,o),
(35,650,qs),
(83,634,o),
(94,634,qs),
(110,634,o),
(127,654,o),
(123,669,qs),
(121,680,o),
(111,693,qs),
(105,701,o),
(102,694,qs),
(101,691,o),
(98,680,qs),
(96,668,o),
(86,668,qs),
(78,668,o),
(47,678,qs),
(-9,696,o),
(-23,696,qs),
(-38,697,o)
);
},
{
closed = 1;
nodes = (
(196,0,o),
(158,29,qs),
(110,65,o),
(94,155,qs),
(32,504,ls),
(28,527,o),
(46,556,o),
(64,556,qs),
(69,556,ls),
(74,556,o),
(75,550,qs),
(145,156,ls),
(154,105,o),
(212,49,o),
(255,49,qs),
(288,49,l),
(297,0,l),
(261,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
7 1 0 1 0 133 0 1 3 1 133 0 3 2 3 133 0 2 5 2 133 0 5 5 23 77 0 4 4 6 97 8 1 6 6 24 6 78 30 30 1 0 30 47 30 46 40 37 33 31 20 18 16 14 5 3 0 29 1 29 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,638,o),
(111,638,qs),
(28,638,ls),
(-5,638,o),
(-27,631,q),
(-28,630,o),
(-31,629,qs),
(-35,627,o),
(-36,627,qs),
(-42,627,o),
(-44,639,qs),
(-48,664,o),
(-20,669,q),
(-38,689,o),
(-43,714,qs),
(-48,746,o),
(-16,788,o),
(14,788,qs),
(36,788,o),
(72,764,o),
(77,747,qs),
(80,739,o),
(74,739,qs),
(70,739,o),
(62,743,qs),
(42,755,o),
(26,754,qs),
(-11,752,o),
(-5,714,qs),
(-2,697,o),
(29,672,o),
(47,672,qs),
(84,672,ls),
(111,672,o),
(116,647,qs),
(117,644,ls)
);
},
{
closed = 1;
nodes = (
(298,0,l),
(263,0,ls),
(198,0,o),
(160,29,qs),
(111,65,o),
(96,155,qs),
(34,504,ls),
(30,527,o),
(48,556,o),
(66,556,qs),
(71,556,ls),
(76,556,o),
(77,550,qs),
(147,156,ls),
(156,105,o),
(214,49,o),
(257,49,qs),
(289,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
22 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 7 5 4 7 128 0 3 0 1 2 3 1 105 0 0 0 5 4 0 5 103 0 7 7 23 77 9 1 6 6 8 97 0 8 8 24 8 78 37 36 52 50 44 41 36 53 37 53 52 39 35 34 35 49 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,482,q),
(124,502,o),
(119,528,qs),
(113,560,o),
(145,601,o),
(175,601,qs),
(197,601,o),
(234,577,o),
(238,560,q),
(241,552,o),
(235,552,qs),
(231,552,o),
(224,557,qs),
(204,568,o),
(187,567,qs),
(150,566,o),
(157,527,qs),
(160,510,o),
(190,486,o),
(208,486,qs),
(246,486,ls),
(273,486,o),
(278,460,q),
(278,457,l),
(280,452,o),
(272,452,qs),
(190,452,ls),
(157,452,o),
(135,444,q),
(134,443,o),
(131,442,qs),
(126,441,o),
(125,441,qs),
(120,441,o),
(118,453,qs),
(114,477,o)
);
},
{
closed = 1;
nodes = (
(440,0,l),
(452,-80,o),
(432,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-176,o),
(165,-161,qs),
(160,-149,o),
(173,-149,qs),
(177,-149,o),
(184,-151,qs),
(272,-179,o),
(330,-161,qs),
(410,-136,o),
(388,0,q),
(276,0,ls),
(209,0,o),
(156,45,qs),
(96,97,o),
(82,178,qs),
(68,258,o),
(102,310,qs),
(139,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(420,194,o),
(435,49,q),
(557,49,l),
(565,0,l)
);
},
{
closed = 1;
nodes = (
(379,69,ls),
(364,194,o),
(325,256,qs),
(284,321,o),
(218,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(133,179,qs),
(143,123,o),
(220,49,o),
(268,49,qs),
(382,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
34 1 0 1 1 76 0 3 2 1 2 3 1 128 0 8 7 9 7 8 9 128 0 9 9 132 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 6 0 12 5 6 12 105 13 11 2 5 5 7 95 10 1 7 7 24 7 78 69 68 76 74 68 80 69 80 67 66 63 61 37 38 35 22 35 34 35 51 55 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,0,o),
(158,29,qs),
(110,65,o),
(94,155,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(75,550,q),
(145,156,ls),
(154,105,o),
(212,49,o),
(255,49,qs),
(288,49,l),
(297,0,l),
(261,0,ls)
);
},
{
closed = 1;
nodes = (
(289,-224,o),
(282,-224,qs),
(200,-224,ls),
(167,-224,o),
(145,-232,q),
(144,-233,o),
(141,-234,qs),
(136,-236,o),
(135,-236,qs),
(130,-236,o),
(128,-223,qs),
(124,-199,o),
(151,-194,q),
(133,-174,o),
(129,-148,qs),
(123,-116,o),
(155,-75,o),
(185,-75,qs),
(207,-75,o),
(244,-99,o),
(248,-116,q),
(251,-124,o),
(245,-124,qs),
(241,-124,o),
(234,-119,qs),
(214,-108,o),
(197,-109,qs),
(160,-111,o),
(166,-149,qs),
(169,-166,o),
(200,-191,o),
(218,-191,qs),
(256,-191,ls),
(283,-191,o),
(288,-216,q),
(288,-219,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 5 4 3 2 5 114 0 6 0 4 5 6 4 105 0 3 0 7 3 7 99 0 1 1 23 77 0 0 0 2 97 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 0 3 0 7 3 7 99 0 1 1 23 77 0 0 0 2 97 8 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
0 0 52 49 36 34 31 29 27 25 22 19 0 17 0 16 37 33 9 7 24 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,322,q),
(254,342,o),
(250,367,qs),
(244,399,o),
(276,441,o),
(306,441,qs),
(328,441,o),
(365,417,o),
(369,399,q),
(372,392,o),
(366,392,qs),
(362,392,o),
(355,396,qs),
(335,407,o),
(318,407,qs),
(281,405,o),
(287,367,qs),
(290,350,o),
(321,325,o),
(339,325,qs),
(377,325,ls),
(404,325,o),
(408,299,q),
(409,297,l),
(410,291,o),
(403,291,qs),
(321,291,ls),
(288,291,o),
(266,283,q),
(264,283,o),
(262,282,qs),
(257,280,o),
(256,280,qs),
(251,280,o),
(248,292,q),
(245,316,o)
);
},
{
closed = 1;
nodes = (
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(683,49,l),
(692,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
34 1 0 1 1 76 0 3 2 1 2 3 1 128 0 8 0 5 0 8 5 128 0 4 0 2 3 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 0 5 5 6 95 10 1 6 6 24 6 78 72 71 68 66 24 35 36 38 35 34 35 51 55 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,433,o),
(8,425,q),
(7,425,o),
(5,424,qs),
(0,422,o),
(-1,422,qs),
(-7,422,o),
(-9,434,qs),
(-13,458,o),
(15,463,q),
(-3,484,o),
(-8,509,qs),
(-13,541,o),
(19,582,o),
(49,582,qs),
(71,582,o),
(107,558,o),
(112,541,qs),
(115,533,o),
(109,533,qs),
(105,533,o),
(97,538,qs),
(77,549,o),
(61,548,qs),
(24,547,o),
(30,508,qs),
(33,491,o),
(64,467,o),
(82,467,qs),
(119,467,ls),
(146,467,o),
(151,441,qs),
(152,438,ls),
(153,433,o),
(146,433,qs),
(63,433,ls)
);
},
{
closed = 1;
nodes = (
(160,86,o),
(132,46,qs),
(102,0,o),
(30,0,qs),
(8,0,l),
(-1,49,l),
(24,49,ls),
(115,49,o),
(97,156,qs),
(72,299,ls),
(63,349,o),
(103,349,qs),
(108,349,ls),
(114,349,o),
(114,344,q),
(148,155,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
25 1 0 1 1 76 0 3 2 1 2 3 1 128 0 5 0 6 0 5 6 128 0 6 7 0 6 7 126 0 4 0 2 3 4 2 105 0 1 9 1 0 5 1 0 103 0 7 7 8 98 0 8 8 24 8 78 1 0 48 46 45 43 40 38 30 28 21 19 16 14 12 10 7 4 0 35 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,433,o),
(8,425,q),
(7,425,o),
(5,424,qs),
(0,422,o),
(-1,422,qs),
(-7,422,o),
(-9,434,qs),
(-13,458,o),
(15,463,q),
(-3,484,o),
(-8,509,qs),
(-13,541,o),
(19,582,o),
(49,582,qs),
(71,582,o),
(107,558,o),
(112,541,qs),
(115,533,o),
(109,533,qs),
(105,533,o),
(97,538,qs),
(77,549,o),
(61,548,qs),
(24,547,o),
(30,508,qs),
(33,491,o),
(64,467,o),
(82,467,qs),
(119,467,ls),
(146,467,o),
(151,441,qs),
(152,438,ls),
(153,433,o),
(146,433,qs),
(63,433,ls)
);
},
{
closed = 1;
nodes = (
(299,0,l),
(269,0,ls),
(182,0,o),
(137,53,q),
(108,0,o),
(30,0,qs),
(8,0,l),
(-1,49,l),
(24,49,ls),
(115,49,o),
(97,156,qs),
(72,299,ls),
(63,349,o),
(103,349,qs),
(108,349,ls),
(114,349,o),
(114,344,q),
(148,155,ls),
(157,105,o),
(215,49,o),
(258,49,qs),
(291,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
25 1 0 1 53 1 6 7 2 76 0 3 2 1 2 3 1 128 0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 0 4 0 2 3 4 2 105 0 1 11 1 0 5 1 0 103 8 12 2 6 6 9 98 10 1 9 9 24 9 78 37 36 1 0 56 54 52 50 49 47 44 42 36 57 37 57 30 28 21 19 16 14 12 10 7 4 0 35 1 34 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,0,o),
(158,29,qs),
(110,65,o),
(94,155,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(75,556,o),
(75,550,q),
(145,156,ls),
(154,105,o),
(213,49,o),
(255,49,qs),
(288,49,l),
(297,0,l),
(261,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 97 3 1 2 2 24 2 78 0 0 0 17 0 16 37 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
},
{
closed = 1;
nodes = (
(480,-96,o),
(483,-112,qs),
(486,-128,o),
(469,-150,o),
(453,-150,qs),
(438,-150,o),
(413,-128,o),
(410,-112,qs),
(407,-96,o),
(424,-74,o),
(440,-74,qs),
(455,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
32 1 0 3 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 98 5 1 4 4 24 4 78 38 37 1 0 44 42 37 48 38 48 35 33 31 28 21 20 14 11 8 6 0 36 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(102,-96,o),
(105,-112,qs),
(108,-127,o),
(90,-149,o),
(75,-149,qs),
(60,-149,o),
(35,-128,o),
(32,-112,qs),
(29,-96,o),
(46,-74,o),
(62,-74,qs),
(77,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 98 5 1 0 0 24 0 78 17 16 1 0 23 21 16 27 17 27 14 12 9 7 0 15 1 15 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(200,-96,o),
(203,-112,qs),
(206,-127,o),
(188,-149,o),
(173,-149,qs),
(157,-149,o),
(132,-128,o),
(129,-112,qs),
(126,-96,o),
(144,-74,o),
(159,-74,qs),
(175,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
17 1 0 1 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 98 4 1 3 3 24 3 78 23 22 1 0 29 27 22 33 23 33 20 18 16 14 13 11 8 6 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,477,o),
(121,492,qs),
(119,506,o),
(135,526,o),
(149,526,qs),
(164,526,o),
(187,506,o),
(190,492,qs),
(192,477,o),
(176,456,o),
(161,456,qs),
(147,456,o)
);
},
{
closed = 1;
nodes = (
(222,477,o),
(219,492,qs),
(217,506,o),
(233,526,o),
(247,526,qs),
(262,526,o),
(285,506,o),
(288,492,qs),
(290,477,o),
(274,456,o),
(259,456,qs),
(245,456,o)
);
},
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 98 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 102 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
52 51 25 24 13 12 1 0 59 57 51 62 52 62 49 47 45 43 37 35 32 30 24 50 25 50 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,391,o),
(279,406,qs),
(277,421,o),
(293,441,o),
(307,441,qs),
(322,441,o),
(345,421,o),
(348,406,qs),
(350,391,o),
(334,371,o),
(319,371,qs),
(305,371,o)
);
},
{
closed = 1;
nodes = (
(379,391,o),
(377,406,qs),
(375,421,o),
(391,441,o),
(405,441,qs),
(419,441,o),
(443,421,o),
(445,406,qs),
(448,391,o),
(432,371,o),
(417,371,qs),
(403,371,o)
);
},
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
56 1 4 7 1 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 98 9 1 8 8 24 8 78 25 24 13 12 1 0 59 57 55 52 45 44 38 35 32 30 24 60 25 60 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-13,441,o),
(-16,456,qs),
(-18,471,o),
(-2,491,o),
(12,491,qs),
(27,491,o),
(50,471,o),
(53,456,qs),
(55,441,o),
(39,421,o),
(24,421,qs),
(10,421,o)
);
},
{
closed = 1;
nodes = (
(85,441,o),
(82,456,qs),
(80,471,o),
(96,491,o),
(110,491,qs),
(125,491,o),
(148,471,o),
(150,456,qs),
(153,441,o),
(137,421,o),
(122,421,qs),
(108,421,o)
);
},
{
closed = 1;
nodes = (
(-2,49,l),
(23,49,ls),
(114,49,o),
(95,156,qs),
(70,299,ls),
(62,349,o),
(102,349,qs),
(107,349,ls),
(112,349,o),
(113,344,qs),
(147,155,ls),
(159,86,o),
(131,46,qs),
(100,0,o),
(29,0,qs),
(7,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 98 9 1 4 4 24 4 78 25 24 13 12 1 0 38 36 33 31 24 39 25 39 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,421,o),
(24,421,qs),
(10,421,o),
(-13,441,o),
(-16,456,qs),
(-18,471,o),
(-2,491,o),
(12,491,qs),
(27,491,o),
(50,471,o),
(53,456,qs),
(55,441,o)
);
},
{
closed = 1;
nodes = (
(85,441,o),
(82,456,qs),
(80,471,o),
(96,491,o),
(110,491,qs),
(125,491,o),
(148,471,o),
(150,456,qs),
(153,441,o),
(137,421,o),
(122,421,qs),
(108,421,o)
);
},
{
closed = 1;
nodes = (
(298,0,l),
(268,0,ls),
(180,0,o),
(135,53,q),
(106,0,o),
(29,0,qs),
(7,0,l),
(-2,49,l),
(23,49,ls),
(114,49,o),
(95,156,qs),
(70,299,ls),
(62,349,o),
(102,349,qs),
(107,349,ls),
(112,349,o),
(113,344,qs),
(147,155,ls),
(155,105,o),
(214,49,o),
(257,49,qs),
(290,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
41 1 4 5 1 76 0 5 1 4 1 5 4 128 3 1 0 9 2 2 1 5 0 1 105 6 10 2 4 4 7 98 8 1 7 7 24 7 78 25 24 13 12 44 42 40 38 37 35 32 30 24 45 25 45 19 17 12 23 13 23 36 34 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,472,o),
(315,487,qs),
(312,502,o),
(328,522,o),
(343,522,qs),
(357,522,o),
(381,502,o),
(383,487,qs),
(386,472,o),
(369,452,o),
(355,452,qs),
(340,452,o)
);
},
{
closed = 1;
nodes = (
(283,391,o),
(280,406,qs),
(278,421,o),
(294,441,o),
(308,441,qs),
(323,441,o),
(346,421,o),
(349,406,qs),
(351,391,o),
(335,371,o),
(320,371,qs),
(306,371,o)
);
},
{
closed = 1;
nodes = (
(392,441,o),
(406,441,qs),
(421,441,o),
(444,421,o),
(446,406,qs),
(449,391,o),
(433,371,o),
(418,371,qs),
(404,371,o),
(381,391,o),
(378,406,qs),
(376,421,o)
);
},
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(633,299,ls),
(624,349,o),
(665,349,qs),
(670,349,ls),
(675,349,o),
(676,344,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
68 1 6 9 1 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 8 14 2 6 6 10 98 11 1 10 10 24 10 78 37 36 13 12 1 0 71 69 67 64 57 56 50 47 44 42 36 72 37 72 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,522,o),
(19,537,qs),
(16,552,o),
(32,572,o),
(47,572,qs),
(61,572,o),
(85,552,o),
(87,537,qs),
(90,522,o),
(73,502,o),
(59,502,qs),
(44,502,o)
);
},
{
closed = 1;
nodes = (
(-13,441,o),
(-16,456,qs),
(-18,471,o),
(-2,491,o),
(12,491,qs),
(27,491,o),
(50,471,o),
(53,456,qs),
(55,441,o),
(39,421,o),
(24,421,qs),
(10,421,o)
);
},
{
closed = 1;
nodes = (
(85,441,o),
(82,456,qs),
(80,471,o),
(96,491,o),
(110,491,qs),
(125,491,o),
(148,471,o),
(150,456,qs),
(153,441,o),
(137,421,o),
(122,421,qs),
(108,421,o)
);
},
{
closed = 1;
nodes = (
(-2,49,l),
(23,49,ls),
(114,49,o),
(95,156,qs),
(70,299,ls),
(62,349,o),
(102,349,qs),
(107,349,ls),
(112,349,o),
(113,344,qs),
(147,155,ls),
(159,86,o),
(131,46,qs),
(100,0,o),
(29,0,qs),
(7,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 8 2 7 8 128 5 1 3 11 4 10 3 2 7 3 2 105 9 1 0 0 1 97 0 1 1 23 77 0 8 8 6 98 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 8 8 6 98 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 25 24 13 12 1 0 50 48 45 43 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,522,o),
(19,537,qs),
(16,552,o),
(32,572,o),
(47,572,qs),
(61,572,o),
(85,552,o),
(87,537,qs),
(90,522,o),
(73,502,o),
(59,502,qs),
(44,502,o)
);
},
{
closed = 1;
nodes = (
(39,421,o),
(24,421,qs),
(10,421,o),
(-13,441,o),
(-16,456,qs),
(-18,471,o),
(-2,491,o),
(12,491,qs),
(27,491,o),
(50,471,o),
(53,456,qs),
(55,441,o)
);
},
{
closed = 1;
nodes = (
(96,491,o),
(110,491,qs),
(125,491,o),
(148,471,o),
(150,456,qs),
(153,441,o),
(137,421,o),
(122,421,qs),
(108,421,o),
(85,441,o),
(82,456,qs),
(80,471,o)
);
},
{
closed = 1;
nodes = (
(298,0,l),
(268,0,ls),
(180,0,o),
(135,53,q),
(106,0,o),
(29,0,qs),
(7,0,l),
(-2,49,l),
(23,49,ls),
(114,49,o),
(95,156,qs),
(70,299,ls),
(62,349,o),
(102,349,qs),
(107,349,ls),
(112,349,o),
(113,344,qs),
(147,155,ls),
(155,105,o),
(214,49,o),
(257,49,qs),
(290,49,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 3 6 3 7 6 128 5 1 2 4 1 3 7 2 3 105 11 1 0 0 1 97 0 1 1 23 77 8 12 2 6 6 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 3 6 3 7 6 128 0 1 11 1 0 2 1 0 105 5 1 2 4 1 3 7 2 3 105 8 12 2 6 6 9 98 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
37 36 1 0 56 54 52 50 49 47 44 42 36 57 37 57 34 32 28 26 22 20 16 14 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,0,o),
(473,37,q),
(514,0,o),
(570,0,qs),
(600,0,l),
(591,49,l),
(567,49,ls),
(537,49,o),
(511,68,qs),
(477,93,o),
(426,204,qs),
(351,368,o),
(215,368,qs),
(164,368,o),
(124,342,qs),
(92,319,o),
(75,282,q),
(75,281,l),
(72,274,o),
(73,268,qs),
(75,257,o),
(85,257,qs),
(91,257,o),
(95,261,qs),
(98,263,o),
(104,269,qs),
(112,277,o),
(116,281,qs),
(163,321,o),
(216,321,qs),
(315,321,o),
(374,197,qs),
(410,118,o),
(437,79,q),
(403,49,o),
(334,49,qs),
(261,49,ls),
(172,49,o),
(123,-1,qs),
(69,-54,o),
(83,-141,qs),
(93,-214,o),
(149,-265,qs),
(217,-329,o),
(320,-331,qs),
(392,-333,o),
(440,-310,qs),
(481,-291,o),
(497,-261,qs),
(500,-255,o),
(499,-247,qs),
(498,-238,o),
(488,-238,qs),
(484,-238,o),
(478,-241,qs),
(445,-261,o),
(417,-271,qs),
(377,-286,o),
(317,-284,qs),
(247,-282,o),
(150,-205,o),
(139,-142,qs),
(130,-88,o),
(157,-49,qs),
(191,0,o),
(266,0,qs),
(344,0,ls)
);
},
{
closed = 1;
nodes = (
(355,-122,o),
(358,-138,qs),
(360,-154,o),
(343,-176,o),
(328,-176,qs),
(312,-176,o),
(287,-154,o),
(284,-138,qs),
(281,-123,o),
(299,-101,o),
(314,-101,qs),
(330,-101,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
32 1 4 6 64 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 6 5 4 5 6 4 128 13 1 10 0 11 0 10 114 0 11 2 1 11 112 0 2 1 0 2 1 126 0 7 0 5 6 7 5 105 0 1 0 3 1 3 102 8 1 4 4 0 97 9 12 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 6 5 4 5 6 4 128 13 1 10 0 11 0 10 11 128 0 11 2 0 11 2 126 0 2 1 0 2 1 126 0 7 0 5 6 7 5 105 0 1 0 3 1 3 102 8 1 4 4 0 97 9 12 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
68 67 1 0 74 72 67 78 68 78 63 61 60 58 54 52 45 43 37 35 31 28 22 20 14 12 8 6 0 66 1 65 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,0,ls),
(531,0,o),
(523,44,q),
(523,49,o),
(517,49,qs),
(492,50,o),
(476,64,qs),
(437,98,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(89,342,qs),
(57,318,o),
(40,282,qs),
(37,274,o),
(38,268,qs),
(40,257,o),
(50,257,qs),
(56,257,o),
(60,261,qs),
(63,263,o),
(68,267,qs),
(78,277,o),
(82,281,qs),
(128,321,o),
(182,321,qs),
(280,321,o),
(339,197,qs),
(400,69,o),
(428,49,q),
(-4,49,l),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(287,-96,o),
(290,-112,qs),
(293,-127,o),
(276,-149,o),
(260,-149,qs),
(245,-149,o),
(220,-128,o),
(217,-112,qs),
(214,-96,o),
(232,-74,o),
(247,-74,qs),
(262,-74,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 0 1 2 0 128 8 1 6 5 7 5 6 114 0 7 7 132 0 3 0 1 2 3 1 105 4 1 0 0 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 8 1 6 5 7 5 6 7 128 0 7 7 132 0 3 0 1 2 3 1 105 4 1 0 0 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
34 33 40 38 33 44 34 44 35 20 38 38 35 16 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,0,l),
(310,0,ls),
(395,0,o),
(439,37,q),
(479,0,o),
(536,0,qs),
(565,0,l),
(557,49,l),
(533,49,ls),
(502,49,o),
(477,68,qs),
(442,93,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(130,368,o),
(90,342,qs),
(58,319,o),
(41,282,q),
(40,281,l),
(37,274,o),
(38,268,qs),
(41,257,o),
(51,257,qs),
(57,257,o),
(61,261,qs),
(64,263,o),
(69,269,q),
(78,277,o),
(82,281,qs),
(129,321,o),
(182,321,qs),
(281,321,o),
(340,197,qs),
(376,118,o),
(403,79,q),
(368,49,o),
(299,49,qs),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(288,-96,o),
(291,-112,qs),
(294,-127,o),
(276,-149,o),
(261,-149,qs),
(246,-149,o),
(221,-128,o),
(218,-112,qs),
(215,-96,o),
(232,-74,o),
(248,-74,qs),
(263,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 0 2 34 1 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 0 1 2 0 128 10 1 7 5 8 5 7 114 0 8 8 132 0 3 0 1 2 3 1 105 4 9 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 0 1 2 0 128 10 1 7 5 8 5 7 8 128 0 8 8 132 0 3 0 1 2 3 1 105 4 9 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
40 39 1 0 46 44 39 50 40 50 37 35 33 31 30 28 24 22 15 13 7 5 0 38 1 38 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,0,o),
(473,37,q),
(514,0,o),
(570,0,qs),
(600,0,l),
(591,49,l),
(567,49,ls),
(537,49,o),
(511,68,qs),
(477,93,o),
(426,204,qs),
(351,368,o),
(215,368,qs),
(164,368,o),
(124,342,qs),
(92,319,o),
(75,282,q),
(75,281,l),
(72,274,o),
(73,268,qs),
(75,257,o),
(85,257,qs),
(91,257,o),
(95,261,qs),
(98,263,o),
(104,269,qs),
(112,277,o),
(116,281,qs),
(163,321,o),
(216,321,qs),
(315,321,o),
(374,197,qs),
(410,118,o),
(437,79,q),
(403,49,o),
(334,49,qs),
(261,49,ls),
(172,49,o),
(123,-1,qs),
(69,-54,o),
(83,-141,qs),
(93,-214,o),
(149,-265,qs),
(217,-329,o),
(320,-331,qs),
(392,-333,o),
(440,-310,qs),
(481,-291,o),
(497,-261,qs),
(500,-255,o),
(499,-247,qs),
(498,-238,o),
(488,-238,qs),
(484,-238,o),
(478,-241,qs),
(445,-261,o),
(417,-271,qs),
(377,-286,o),
(317,-284,qs),
(247,-282,o),
(150,-205,o),
(139,-142,qs),
(130,-88,o),
(157,-49,qs),
(191,0,o),
(266,0,qs),
(344,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
32 1 4 6 64 1 0 4 2 76 0 6 5 4 5 6 4 128 0 2 0 1 0 2 1 128 0 7 0 5 6 7 5 105 0 1 0 3 1 3 101 8 1 4 4 0 97 9 10 2 0 0 24 0 78 1 0 63 61 60 58 54 52 45 43 37 35 31 28 22 20 14 12 8 6 0 66 1 65 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,0,ls),
(531,0,o),
(523,44,q),
(523,49,o),
(517,49,qs),
(492,50,o),
(476,64,qs),
(437,98,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(89,342,qs),
(57,318,o),
(40,282,qs),
(37,274,o),
(38,268,qs),
(40,257,o),
(50,257,qs),
(56,257,o),
(60,261,qs),
(63,263,o),
(68,267,qs),
(78,277,o),
(82,281,qs),
(128,321,o),
(182,321,qs),
(280,321,o),
(339,197,qs),
(400,69,o),
(428,49,q),
(-4,49,l),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 1 0 0 5 95 0 5 5 24 5 78 35 20 38 38 35 16 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,0,l),
(310,0,ls),
(395,0,o),
(439,37,q),
(479,0,o),
(536,0,qs),
(565,0,l),
(557,49,l),
(533,49,ls),
(502,49,o),
(477,68,qs),
(442,93,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(90,342,qs),
(58,319,o),
(41,282,q),
(40,281,l),
(37,274,o),
(38,268,qs),
(41,257,o),
(51,257,qs),
(57,257,o),
(61,261,qs),
(64,263,o),
(69,269,q),
(78,277,o),
(82,281,qs),
(129,321,o),
(182,321,qs),
(281,321,o),
(340,197,qs),
(376,119,o),
(403,79,q),
(368,49,o),
(299,49,qs),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
2 1 0 2 34 1 5 0 2 76 0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 37 35 33 31 30 28 24 22 15 13 7 5 0 38 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,503,o),
(224,487,qs),
(227,471,o),
(209,448,o),
(193,448,qs),
(178,448,o),
(153,471,o),
(150,487,qs),
(147,502,o),
(164,524,o),
(180,524,qs),
(195,524,o)
);
},
{
closed = 1;
nodes = (
(429,0,o),
(473,37,q),
(514,0,o),
(570,0,qs),
(600,0,l),
(591,49,l),
(567,49,ls),
(537,49,o),
(511,68,qs),
(477,93,o),
(426,204,qs),
(351,368,o),
(215,368,qs),
(164,368,o),
(124,342,qs),
(92,319,o),
(75,282,q),
(75,281,l),
(72,274,o),
(73,268,qs),
(75,257,o),
(85,257,qs),
(91,257,o),
(95,261,qs),
(98,263,o),
(104,269,qs),
(112,277,o),
(116,281,qs),
(163,321,o),
(216,321,qs),
(315,321,o),
(374,197,qs),
(410,118,o),
(437,79,q),
(403,49,o),
(334,49,qs),
(261,49,ls),
(172,49,o),
(123,-1,qs),
(69,-54,o),
(83,-141,qs),
(93,-214,o),
(149,-265,qs),
(217,-329,o),
(320,-331,qs),
(392,-333,o),
(440,-310,qs),
(481,-291,o),
(497,-261,qs),
(500,-255,o),
(499,-247,qs),
(498,-238,o),
(488,-238,qs),
(484,-238,o),
(478,-241,qs),
(445,-261,o),
(417,-271,qs),
(377,-286,o),
(317,-284,qs),
(247,-282,o),
(150,-205,o),
(139,-142,qs),
(130,-88,o),
(157,-49,qs),
(191,0,o),
(266,0,qs),
(344,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
44 1 6 8 76 1 2 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
12 1 0 1 0 133 0 1 9 9 1 112 0 8 7 6 7 8 6 128 0 4 2 3 2 4 3 128 0 9 0 7 8 9 7 106 0 3 0 5 3 5 101 10 1 6 6 2 97 11 13 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
12 1 0 1 0 133 0 1 9 1 133 0 8 7 6 7 8 6 128 0 4 2 3 2 4 3 128 0 9 0 7 8 9 7 106 0 3 0 5 3 5 101 10 1 6 6 2 97 11 13 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
13 12 1 0 75 73 72 70 66 64 57 55 49 47 43 40 34 32 26 24 20 18 12 78 13 77 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,501,o),
(195,485,qs),
(198,469,o),
(180,447,o),
(164,447,qs),
(149,447,o),
(124,469,o),
(121,485,qs),
(118,501,o),
(136,523,o),
(151,523,qs),
(167,523,o)
);
},
{
closed = 1;
nodes = (
(483,0,ls),
(531,0,o),
(523,44,q),
(523,49,o),
(517,49,qs),
(492,50,o),
(476,64,qs),
(437,98,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(89,342,qs),
(57,318,o),
(40,282,qs),
(37,274,o),
(38,268,qs),
(40,257,o),
(50,257,qs),
(56,257,o),
(60,261,qs),
(63,263,o),
(68,267,qs),
(78,277,o),
(82,281,qs),
(128,321,o),
(182,321,qs),
(280,321,o),
(339,197,qs),
(400,69,o),
(428,49,q),
(-4,49,l),
(4,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 0 1 0 133 0 1 5 5 1 112 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 1 2 2 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
8 1 0 1 0 133 0 1 5 1 133 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 1 2 2 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 44 42 39 38 34 32 26 24 18 16 13 12 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,501,o),
(195,485,qs),
(198,469,o),
(181,447,o),
(165,447,qs),
(150,447,o),
(125,469,o),
(122,485,qs),
(119,501,o),
(136,523,o),
(152,523,qs),
(167,523,o)
);
},
{
closed = 1;
nodes = (
(5,0,l),
(310,0,ls),
(395,0,o),
(439,37,q),
(479,0,o),
(536,0,qs),
(565,0,l),
(557,49,l),
(533,49,ls),
(502,49,o),
(477,68,qs),
(442,93,o),
(392,204,qs),
(317,368,o),
(180,368,qs),
(129,368,o),
(90,342,qs),
(58,319,o),
(41,282,q),
(40,281,l),
(37,274,o),
(38,268,qs),
(41,257,o),
(51,257,qs),
(57,257,o),
(61,261,qs),
(64,263,o),
(69,269,q),
(78,277,o),
(82,281,qs),
(129,321,o),
(182,321,qs),
(281,321,o),
(340,197,qs),
(376,119,o),
(403,79,q),
(368,49,o),
(299,49,qs),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 2 4 46 1 7 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 1 0 133 0 1 5 5 1 112 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 0 1 0 133 0 1 5 1 133 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 49 47 45 43 42 40 36 34 27 25 19 17 12 50 13 50 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(531,0,l),
(501,0,ls),
(407,0,o),
(362,63,q),
(326,0,o),
(241,0,qs),
(116,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(240,49,ls),
(290,49,o),
(336,118,o),
(325,176,qs),
(298,321,o),
(192,321,qs),
(161,322,o),
(130,307,qs),
(123,303,o),
(120,303,qs),
(110,303,o),
(108,313,qs),
(106,326,o),
(120,339,qs),
(147,368,o),
(195,368,qs),
(259,368,o),
(307,321,qs),
(361,269,o),
(376,177,qs),
(381,154,ls),
(390,104,o),
(447,49,o),
(490,49,qs),
(523,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
32 1 0 2 1 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 35 33 31 28 25 22 19 17 14 13 9 7 0 36 1 36 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,435,o),
(121,435,qs),
(106,435,o),
(81,457,o),
(78,473,qs),
(75,489,o),
(92,511,o),
(108,511,qs),
(124,511,o),
(149,489,o),
(152,473,qs),
(155,457,o)
);
},
{
closed = 1;
nodes = (
(530,0,l),
(499,0,ls),
(405,0,o),
(360,63,q),
(324,0,o),
(240,0,qs),
(114,0,ls),
(106,0,o),
(105,7,qs),
(105,11,ls),
(100,49,o),
(145,49,qs),
(238,49,ls),
(288,49,o),
(334,118,o),
(323,176,qs),
(296,321,o),
(191,321,qs),
(160,322,o),
(128,307,q),
(122,303,o),
(118,303,qs),
(108,303,o),
(106,313,qs),
(105,326,o),
(118,339,qs),
(145,368,o),
(193,368,qs),
(258,368,o),
(306,321,qs),
(359,269,o),
(375,177,qs),
(379,154,ls),
(388,104,o),
(446,49,o),
(488,49,qs),
(521,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
44 1 2 4 1 76 0 4 5 2 5 4 2 128 0 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 6 9 2 2 2 7 97 8 1 7 7 24 7 78 13 12 47 45 43 40 37 34 31 29 26 25 21 19 12 48 13 48 36 34 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
28 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 101 0 0 0 5 97 0 5 5 24 5 78 35 36 34 37 37 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,442,o),
(80,458,qs),
(77,474,o),
(94,496,o),
(110,496,qs),
(125,496,o),
(150,474,o),
(153,458,qs),
(156,442,o),
(139,420,o),
(123,420,qs),
(108,420,o)
);
},
{
closed = 1;
nodes = (
(314,0,ls),
(257,0,o),
(216,26,q),
(220,2,ls),
(258,-211,o),
(103,-214,qs),
(54,-214,o),
(16,-189,qs),
(-8,-174,o),
(-13,-161,qs),
(-18,-149,o),
(-5,-149,qs),
(-1,-149,o),
(6,-151,qs),
(53,-167,o),
(89,-167,qs),
(147,-166,o),
(166,-129,qs),
(185,-93,o),
(171,-13,qs),
(117,299,ls),
(108,349,o),
(149,349,qs),
(154,349,ls),
(159,349,o),
(160,344,qs),
(193,152,ls),
(203,103,o),
(261,49,o),
(303,49,qs),
(336,49,l),
(345,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
40 1 7 2 1 76 0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 2 2 7 97 0 7 7 24 7 78 1 0 43 41 38 36 32 30 28 26 21 19 14 12 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1180,0,l),
(1150,0,ls),
(1067,0,o),
(1022,48,q),
(995,-9,o),
(915,-9,qs),
(828,-9,o),
(785,44,q),
(758,-9,o),
(680,-9,qs),
(622,-9,o),
(582,16,q),
(592,-86,o),
(536,-149,qs),
(478,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(546,-66,o),
(527,46,qs),
(491,258,ls),
(487,281,o),
(505,309,o),
(523,309,qs),
(528,309,ls),
(533,309,o),
(534,303,qs),
(560,150,l),
(560,151,ls),
(570,99,o),
(629,39,o),
(672,39,qs),
(764,39,o),
(745,146,qs),
(722,278,ls),
(713,329,o),
(753,329,qs),
(758,329,ls),
(764,329,o),
(765,324,qs),
(795,151,ls),
(804,99,o),
(864,39,o),
(907,39,qs),
(998,39,o),
(979,146,qs),
(953,298,ls),
(949,321,o),
(966,349,o),
(985,349,qs),
(989,349,ls),
(995,349,o),
(995,344,q),
(1029,155,ls),
(1038,105,o),
(1096,49,o),
(1139,49,qs),
(1172,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
72 68 2 2 0 64 1 11 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 106 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 75 73 71 69 67 65 61 59 51 50 42 40 34 31 26 24 21 19 14 12 8 6 0 76 1 76 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1161;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,77,o),
(601,36,qs),
(570,-9,o),
(500,-9,qs),
(413,-9,o),
(370,44,q),
(343,-9,o),
(265,-9,qs),
(174,-9,o),
(132,49,q),
(101,0,o),
(27,0,qs),
(5,0,l),
(-4,49,l),
(20,49,ls),
(113,49,o),
(94,156,qs),
(75,258,ls),
(67,308,o),
(107,308,qs),
(112,308,ls),
(118,308,o),
(119,303,qs),
(145,155,ls),
(145,154,o),
(145,152,q),
(146,150,o),
(146,149,qs),
(156,98,o),
(215,39,o),
(257,39,qs),
(349,39,o),
(330,146,qs),
(307,278,ls),
(298,329,o),
(338,329,qs),
(343,329,ls),
(349,329,o),
(350,324,qs),
(380,151,ls),
(389,99,o),
(449,39,o),
(492,39,qs),
(583,39,o),
(564,146,qs),
(538,298,ls),
(534,321,o),
(551,349,o),
(570,349,qs),
(574,349,ls),
(580,349,o),
(580,344,q),
(615,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
46 1 1 5 1 76 42 1 5 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 98 0 6 6 24 77 3 1 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 102 0 5 5 6 98 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 34 33 35 41 35 37 36 34 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(765,0,l),
(735,0,ls),
(652,0,o),
(607,48,q),
(580,-9,o),
(500,-9,qs),
(413,-9,o),
(370,44,q),
(343,-9,o),
(265,-9,qs),
(174,-9,o),
(132,49,q),
(101,0,o),
(27,0,qs),
(5,0,l),
(-4,49,l),
(20,49,ls),
(113,49,o),
(94,156,qs),
(75,258,ls),
(67,308,o),
(107,308,qs),
(112,308,ls),
(118,308,o),
(119,303,qs),
(145,155,ls),
(145,154,o),
(145,152,q),
(146,150,o),
(146,149,qs),
(156,98,o),
(215,39,o),
(257,39,qs),
(349,39,o),
(330,146,qs),
(307,278,ls),
(298,329,o),
(338,329,qs),
(343,329,ls),
(349,329,o),
(350,324,qs),
(380,151,ls),
(389,99,o),
(449,39,o),
(492,39,qs),
(583,39,o),
(564,146,qs),
(538,298,ls),
(534,321,o),
(551,349,o),
(570,349,qs),
(574,349,ls),
(580,349,o),
(580,344,q),
(614,155,ls),
(623,105,o),
(681,49,o),
(724,49,qs),
(757,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
54 50 2 2 0 1 76 46 1 0 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 98 10 1 7 7 24 77 4 1 2 2 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 102 6 11 2 0 0 7 98 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 57 55 53 51 49 47 45 43 42 40 37 35 26 24 21 19 14 12 8 6 0 58 1 58 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,502,o),
(671,517,qs),
(669,531,o),
(685,551,o),
(699,551,qs),
(713,551,o),
(737,531,o),
(739,517,qs),
(742,502,o),
(726,481,o),
(711,481,qs),
(697,481,o)
);
},
{
closed = 1;
nodes = (
(639,421,o),
(637,436,qs),
(634,450,o),
(650,470,o),
(664,470,qs),
(679,470,o),
(702,450,o),
(705,436,qs),
(707,420,o),
(691,400,o),
(677,400,qs),
(662,400,o)
);
},
{
closed = 1;
nodes = (
(748,470,o),
(762,470,qs),
(777,470,o),
(800,450,o),
(803,436,qs),
(805,420,o),
(789,400,o),
(774,400,qs),
(760,400,o),
(737,421,o),
(734,436,qs),
(732,450,o)
);
},
{
closed = 1;
nodes = (
(1180,0,l),
(1150,0,ls),
(1067,0,o),
(1022,48,q),
(995,-9,o),
(915,-9,qs),
(828,-9,o),
(785,44,q),
(758,-9,o),
(680,-9,qs),
(622,-9,o),
(582,16,q),
(592,-86,o),
(536,-149,qs),
(478,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(546,-66,o),
(527,46,qs),
(491,258,ls),
(487,281,o),
(505,309,o),
(523,309,qs),
(528,309,ls),
(533,309,o),
(534,303,qs),
(560,150,l),
(560,151,ls),
(570,99,o),
(629,39,o),
(672,39,qs),
(764,39,o),
(745,146,qs),
(722,278,ls),
(713,329,o),
(753,329,qs),
(758,329,ls),
(764,329,o),
(765,324,qs),
(795,151,ls),
(804,99,o),
(864,39,o),
(907,39,qs),
(998,39,o),
(979,146,qs),
(953,298,ls),
(949,321,o),
(966,349,o),
(985,349,qs),
(989,349,ls),
(995,349,o),
(995,344,q),
(1029,155,ls),
(1038,105,o),
(1096,49,o),
(1139,49,qs),
(1172,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
108 104 2 8 6 100 1 17 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 18 1 0 0 1 97 0 1 1 23 77 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 106 0 12 0 14 12 14 101 18 1 0 0 1 97 0 1 1 23 77 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 111 109 107 105 103 101 97 95 87 86 78 76 70 67 62 60 57 55 50 48 44 42 36 112 37 112 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1161;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,502,o),
(255,517,qs),
(253,531,o),
(269,551,o),
(283,551,qs),
(298,551,o),
(321,531,o),
(324,517,qs),
(326,502,o),
(310,481,o),
(295,481,qs),
(281,481,o)
);
},
{
closed = 1;
nodes = (
(223,421,o),
(221,436,qs),
(219,450,o),
(235,470,o),
(249,470,qs),
(263,470,o),
(287,450,o),
(289,436,qs),
(292,420,o),
(276,400,o),
(261,400,qs),
(247,400,o)
);
},
{
closed = 1;
nodes = (
(332,470,o),
(347,470,qs),
(361,470,o),
(385,450,o),
(387,436,qs),
(390,420,o),
(373,400,o),
(359,400,qs),
(344,400,o),
(321,421,o),
(319,436,qs),
(316,450,o)
);
},
{
closed = 1;
nodes = (
(628,77,o),
(601,36,qs),
(570,-9,o),
(500,-9,qs),
(413,-9,o),
(370,44,q),
(343,-9,o),
(265,-9,qs),
(174,-9,o),
(132,49,q),
(101,0,o),
(27,0,qs),
(5,0,l),
(-4,49,l),
(20,49,ls),
(113,49,o),
(94,156,qs),
(75,258,ls),
(67,308,o),
(107,308,qs),
(112,308,ls),
(118,308,o),
(119,303,qs),
(145,155,ls),
(145,154,o),
(145,152,q),
(146,150,o),
(146,149,qs),
(156,98,o),
(215,39,o),
(257,39,qs),
(349,39,o),
(330,146,qs),
(307,278,ls),
(298,329,o),
(338,329,qs),
(343,329,ls),
(349,329,o),
(350,324,qs),
(380,151,ls),
(389,99,o),
(449,39,o),
(492,39,qs),
(583,39,o),
(564,146,qs),
(538,298,ls),
(534,321,o),
(551,349,o),
(570,349,qs),
(574,349,ls),
(580,349,o),
(580,344,q),
(615,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
82 1 7 11 1 76 78 1 11 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 5 1 3 4 16 2 2 6 3 2 105 15 1 0 0 1 97 0 1 1 23 77 0 11 11 12 98 0 12 12 24 77 9 1 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 102 15 1 0 0 1 97 0 1 1 23 77 0 11 11 12 98 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
13 12 1 0 85 83 81 79 77 75 74 72 69 67 58 56 53 51 46 44 40 38 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,502,o),
(255,517,qs),
(253,531,o),
(269,551,o),
(283,551,qs),
(298,551,o),
(321,531,o),
(324,517,qs),
(326,502,o),
(310,481,o),
(295,481,qs),
(281,481,o)
);
},
{
closed = 1;
nodes = (
(223,421,o),
(221,436,qs),
(219,450,o),
(235,470,o),
(249,470,qs),
(263,470,o),
(287,450,o),
(289,436,qs),
(292,420,o),
(276,400,o),
(261,400,qs),
(247,400,o)
);
},
{
closed = 1;
nodes = (
(332,470,o),
(347,470,qs),
(361,470,o),
(385,450,o),
(387,436,qs),
(390,420,o),
(373,400,o),
(359,400,qs),
(344,400,o),
(321,421,o),
(319,436,qs),
(316,450,o)
);
},
{
closed = 1;
nodes = (
(765,0,l),
(735,0,ls),
(652,0,o),
(607,48,q),
(580,-9,o),
(500,-9,qs),
(413,-9,o),
(370,44,q),
(343,-9,o),
(265,-9,qs),
(174,-9,o),
(132,49,q),
(101,0,o),
(27,0,qs),
(5,0,l),
(-4,49,l),
(20,49,ls),
(113,49,o),
(94,156,qs),
(75,258,ls),
(67,308,o),
(107,308,qs),
(112,308,ls),
(118,308,o),
(119,303,qs),
(145,155,ls),
(145,154,o),
(145,152,q),
(146,150,o),
(146,149,qs),
(156,98,o),
(215,39,o),
(257,39,qs),
(349,39,o),
(330,146,qs),
(307,278,ls),
(298,329,o),
(338,329,qs),
(343,329,ls),
(349,329,o),
(350,324,qs),
(380,151,ls),
(389,99,o),
(449,39,o),
(492,39,qs),
(583,39,o),
(564,146,qs),
(538,298,ls),
(534,321,o),
(551,349,o),
(570,349,qs),
(574,349,ls),
(580,349,o),
(580,344,q),
(614,155,ls),
(623,105,o),
(681,49,o),
(724,49,qs),
(757,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
90 86 2 8 6 1 76 82 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 5 1 3 4 18 2 2 7 3 2 105 17 1 0 0 1 97 0 1 1 23 77 12 19 2 6 6 13 98 16 1 13 13 24 77 10 1 8 8 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 102 17 1 0 0 1 97 0 1 1 23 77 12 19 2 6 6 13 98 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 93 91 89 87 85 83 81 79 78 76 73 71 62 60 57 55 50 48 44 42 36 94 37 94 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1340,0,l),
(1310,0,ls),
(1216,0,o),
(1171,63,q),
(1134,0,o),
(1052,0,qs),
(680,0,ls),
(620,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(481,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(560,151,ls),
(569,103,o),
(629,49,o),
(671,49,qs),
(672,49,l),
(679,174,o),
(740,260,qs),
(818,368,o),
(955,368,qs),
(1033,368,o),
(1094,325,qs),
(1169,272,o),
(1186,177,qs),
(1188,164,l),
(1190,154,ls),
(1210,49,o),
(1299,49,qs),
(1332,49,l)
);
},
{
closed = 1;
nodes = (
(1097,49,o),
(1145,117,o),
(1134,178,qs),
(1121,244,o),
(1073,282,qs),
(1025,321,o),
(959,321,qs),
(862,321,o),
(799,249,qs),
(733,174,o),
(726,49,q),
(1043,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
56 1 0 5 51 1 7 0 2 76 0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 61 61 1 0 61 72 61 71 66 64 59 57 55 52 48 46 38 37 29 27 21 19 14 12 9 7 0 60 1 60 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1321;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(750,53,qs),
(712,0,o),
(637,0,qs),
(265,0,ls),
(177,0,o),
(134,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(79,238,ls),
(70,289,o),
(110,289,qs),
(115,289,ls),
(121,289,o),
(122,284,qs),
(144,155,ls),
(153,106,o),
(213,49,o),
(257,49,q),
(264,174,o),
(326,260,qs),
(404,368,o),
(541,368,qs),
(619,368,o),
(680,325,qs),
(755,272,o),
(772,177,qs),
(785,101,o)
);
},
{
closed = 1;
nodes = (
(683,49,o),
(731,117,o),
(719,178,qs),
(707,244,o),
(659,282,qs),
(610,321,o),
(544,321,qs),
(447,321,o),
(385,250,qs),
(319,174,o),
(312,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
25 1 1 2 1 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 8 7 3 3 1 1 4 98 5 1 4 4 24 4 78 32 32 32 43 32 42 38 50 33 35 37 19 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(926,0,l),
(895,0,ls),
(802,0,o),
(757,63,q),
(720,0,o),
(637,0,qs),
(265,0,ls),
(177,0,o),
(134,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(79,238,ls),
(70,289,o),
(110,289,qs),
(115,289,ls),
(121,289,o),
(122,284,qs),
(144,155,ls),
(153,106,o),
(213,49,o),
(257,49,q),
(264,174,o),
(326,260,qs),
(404,368,o),
(541,368,qs),
(619,368,o),
(680,325,qs),
(755,272,o),
(772,177,q),
(773,164,l),
(775,154,ls),
(785,104,o),
(842,49,o),
(884,49,qs),
(918,49,l)
);
},
{
closed = 1;
nodes = (
(683,49,o),
(731,117,o),
(719,178,qs),
(707,244,o),
(659,282,qs),
(610,321,o),
(544,321,qs),
(447,321,o),
(385,250,qs),
(319,174,o),
(312,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
35 30 2 0 3 1 76 0 3 8 0 8 3 0 128 0 1 0 8 3 1 8 105 11 9 4 2 10 5 0 0 5 98 7 6 2 5 5 24 5 78 40 40 1 0 40 51 40 50 45 43 38 36 34 31 29 27 26 24 21 19 14 13 10 8 0 39 1 39 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(880,468,o),
(877,484,qs),
(874,500,o),
(892,522,o),
(907,522,qs),
(923,522,o),
(948,500,o),
(951,484,qs),
(954,468,o),
(936,446,o),
(920,446,qs),
(905,446,o)
);
},
{
closed = 1;
nodes = (
(1340,0,l),
(1310,0,ls),
(1216,0,o),
(1171,63,q),
(1134,0,o),
(1052,0,qs),
(680,0,ls),
(620,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(481,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(560,151,ls),
(569,103,o),
(629,49,o),
(671,49,qs),
(672,49,l),
(679,174,o),
(740,260,qs),
(818,368,o),
(955,368,qs),
(1033,368,o),
(1094,325,qs),
(1169,272,o),
(1186,177,qs),
(1188,164,l),
(1190,154,ls),
(1210,49,o),
(1299,49,qs),
(1332,49,l)
);
},
{
closed = 1;
nodes = (
(1097,49,o),
(1145,117,o),
(1134,178,qs),
(1121,244,o),
(1073,282,qs),
(1025,321,o),
(959,321,qs),
(862,321,o),
(799,249,qs),
(733,174,o),
(726,49,q),
(1043,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
68 1 2 7 63 1 9 2 2 76 0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 73 73 13 12 1 0 73 84 73 83 78 76 71 69 67 64 60 58 50 49 41 39 33 31 26 24 21 19 12 72 13 72 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1321;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,468,o),
(463,484,qs),
(460,500,o),
(477,522,o),
(493,522,qs),
(508,522,o),
(534,500,o),
(537,484,qs),
(540,468,o),
(522,446,o),
(506,446,qs),
(491,446,o)
);
},
{
closed = 1;
nodes = (
(750,53,qs),
(712,0,o),
(637,0,qs),
(265,0,ls),
(177,0,o),
(134,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(79,238,ls),
(70,289,o),
(110,289,qs),
(115,289,ls),
(121,289,o),
(122,284,qs),
(144,155,ls),
(153,106,o),
(213,49,o),
(257,49,q),
(264,174,o),
(326,260,qs),
(404,368,o),
(541,368,qs),
(619,368,o),
(680,325,qs),
(755,272,o),
(772,177,qs),
(785,101,o)
);
},
{
closed = 1;
nodes = (
(683,49,o),
(731,117,o),
(719,178,qs),
(707,244,o),
(659,282,qs),
(610,321,o),
(544,321,qs),
(447,321,o),
(385,250,qs),
(319,174,o),
(312,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
37 1 3 4 1 76 0 4 8 3 8 4 3 128 0 1 10 1 0 2 1 0 105 0 2 0 8 4 2 8 105 11 9 5 3 3 3 6 98 7 1 6 6 24 6 78 44 44 1 0 44 55 44 54 49 47 41 38 36 34 33 31 28 26 21 20 17 15 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 815;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,468,o),
(463,484,qs),
(460,500,o),
(477,522,o),
(493,522,qs),
(508,522,o),
(534,500,o),
(537,484,qs),
(540,468,o),
(522,446,o),
(506,446,qs),
(491,446,o)
);
},
{
closed = 1;
nodes = (
(926,0,l),
(895,0,ls),
(802,0,o),
(757,63,q),
(720,0,o),
(637,0,qs),
(265,0,ls),
(177,0,o),
(134,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(79,238,ls),
(70,289,o),
(110,289,qs),
(115,289,ls),
(121,289,o),
(122,284,qs),
(144,155,ls),
(153,106,o),
(213,49,o),
(257,49,q),
(264,174,o),
(326,260,qs),
(404,368,o),
(541,368,qs),
(619,368,o),
(680,325,qs),
(755,272,o),
(772,177,q),
(773,164,l),
(775,154,ls),
(785,104,o),
(842,49,o),
(884,49,qs),
(918,49,l)
);
},
{
closed = 1;
nodes = (
(683,49,o),
(731,117,o),
(719,178,qs),
(707,244,o),
(659,282,qs),
(610,321,o),
(544,321,qs),
(447,321,o),
(385,250,qs),
(319,174,o),
(312,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
47 42 2 2 5 1 76 0 5 10 2 10 5 2 128 0 1 12 1 0 3 1 0 105 0 3 0 10 5 3 10 105 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 52 52 13 12 1 0 52 63 52 62 57 55 50 48 46 43 41 39 38 36 33 31 26 25 22 20 12 51 13 51 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(892,0,l),
(862,0,ls),
(768,0,o),
(723,63,q),
(686,0,o),
(603,0,qs),
(116,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(227,49,l),
(147,504,ls),
(138,556,o),
(180,556,qs),
(184,556,ls),
(190,556,o),
(191,550,qs),
(254,191,l),
(284,265,o),
(340,311,qs),
(410,368,o),
(507,368,qs),
(585,368,o),
(646,325,qs),
(721,272,o),
(738,177,qs),
(740,164,l),
(742,154,ls),
(751,104,o),
(809,49,o),
(851,49,qs),
(884,49,l)
);
},
{
closed = 1;
nodes = (
(649,49,o),
(697,117,o),
(686,178,qs),
(673,244,o),
(625,282,qs),
(577,321,o),
(511,321,qs),
(414,321,o),
(352,251,qs),
(286,176,o),
(278,53,q),
(279,49,l),
(595,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
29 13 2 0 6 1 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 34 34 1 0 34 46 34 45 40 38 32 30 28 25 22 20 18 15 10 8 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,53,qs),
(562,0,o),
(486,0,qs),
(5,0,l),
(-3,49,l),
(111,49,l),
(31,504,ls),
(22,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(75,550,qs),
(138,191,l),
(168,265,o),
(224,311,qs),
(294,368,o),
(391,368,qs),
(469,368,o),
(530,325,qs),
(605,272,o),
(622,177,qs),
(636,101,o)
);
},
{
closed = 1;
nodes = (
(533,49,o),
(581,117,o),
(570,178,qs),
(557,244,o),
(509,282,qs),
(461,321,o),
(395,321,qs),
(299,321,o),
(236,251,qs),
(171,176,o),
(162,53,q),
(163,49,l),
(479,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
8 1 2 4 1 76 0 0 0 4 2 0 4 105 0 1 1 23 77 6 5 2 2 2 3 95 0 3 3 24 3 78 22 22 22 34 22 33 39 33 18 53 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(776,0,l),
(746,0,ls),
(652,0,o),
(607,63,q),
(570,0,o),
(486,0,qs),
(5,0,l),
(-3,49,l),
(111,49,l),
(31,504,ls),
(22,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(75,550,qs),
(138,191,l),
(168,265,o),
(224,311,qs),
(294,368,o),
(391,368,qs),
(469,368,o),
(530,325,qs),
(605,272,o),
(622,177,qs),
(624,164,l),
(626,154,ls),
(646,49,o),
(735,49,qs),
(768,49,l)
);
},
{
closed = 1;
nodes = (
(533,49,o),
(581,117,o),
(570,178,qs),
(557,244,o),
(509,282,qs),
(461,321,o),
(395,321,qs),
(299,321,o),
(236,251,qs),
(171,176,o),
(162,53,q),
(163,49,l),
(479,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
24 12 2 0 6 1 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 29 29 1 0 29 41 29 40 35 33 27 25 23 21 20 19 17 14 9 7 0 28 1 28 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(892,0,l),
(862,0,ls),
(768,0,o),
(723,63,q),
(686,0,o),
(603,0,qs),
(116,0,ls),
(107,0,o),
(107,7,q),
(106,11,l),
(102,49,o),
(147,49,qs),
(227,49,l),
(147,504,ls),
(138,556,o),
(180,556,qs),
(184,556,ls),
(190,556,o),
(191,550,qs),
(254,191,l),
(284,265,o),
(340,311,qs),
(410,368,o),
(507,368,qs),
(585,368,o),
(646,325,qs),
(721,272,o),
(738,177,qs),
(740,164,l),
(742,154,ls),
(751,104,o),
(809,49,o),
(851,49,qs),
(884,49,l)
);
},
{
closed = 1;
nodes = (
(433,468,o),
(430,484,qs),
(427,500,o),
(445,522,o),
(460,522,qs),
(476,522,o),
(501,500,o),
(504,484,qs),
(507,468,o),
(489,446,o),
(473,446,qs),
(458,446,o)
);
},
{
closed = 1;
nodes = (
(649,49,o),
(697,117,o),
(686,178,qs),
(673,244,o),
(625,282,qs),
(577,321,o),
(511,321,qs),
(414,321,o),
(352,251,qs),
(286,176,o),
(278,53,q),
(279,49,l),
(595,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
29 13 2 0 8 1 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 46 46 35 34 1 0 46 58 46 57 52 50 41 39 34 45 35 45 32 30 28 25 22 20 18 15 10 8 0 33 1 33 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 874;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,53,qs),
(562,0,o),
(486,0,qs),
(5,0,l),
(-3,49,l),
(111,49,l),
(31,504,ls),
(22,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(75,550,qs),
(138,191,l),
(168,265,o),
(224,311,qs),
(294,368,o),
(391,368,qs),
(469,368,o),
(530,325,qs),
(605,272,o),
(622,177,qs),
(636,101,o)
);
},
{
closed = 1;
nodes = (
(316,468,o),
(313,484,qs),
(310,500,o),
(328,522,o),
(343,522,qs),
(359,522,o),
(384,500,o),
(387,484,qs),
(390,468,o),
(372,446,o),
(356,446,qs),
(341,446,o)
);
},
{
closed = 1;
nodes = (
(533,49,o),
(581,117,o),
(570,178,qs),
(557,244,o),
(509,282,qs),
(461,321,o),
(395,321,qs),
(299,321,o),
(236,251,qs),
(171,176,o),
(162,53,q),
(163,49,l),
(479,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 2 6 1 76 0 5 8 1 4 0 5 4 105 0 0 0 6 2 0 6 105 0 1 1 23 77 9 7 2 2 2 3 95 0 3 3 24 3 78 34 34 23 22 34 46 34 45 40 38 29 27 22 33 23 33 33 18 53 35 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(776,0,l),
(746,0,ls),
(652,0,o),
(607,63,q),
(570,0,o),
(486,0,qs),
(5,0,l),
(-3,49,l),
(111,49,l),
(31,504,ls),
(22,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(75,550,qs),
(138,191,l),
(168,265,o),
(224,311,qs),
(294,368,o),
(391,368,qs),
(469,368,o),
(530,325,qs),
(605,272,o),
(622,177,qs),
(624,164,l),
(626,154,ls),
(646,49,o),
(735,49,qs),
(768,49,l)
);
},
{
closed = 1;
nodes = (
(316,468,o),
(313,484,qs),
(310,500,o),
(328,522,o),
(343,522,qs),
(359,522,o),
(384,500,o),
(387,484,qs),
(390,468,o),
(372,446,o),
(356,446,qs),
(341,446,o)
);
},
{
closed = 1;
nodes = (
(533,49,o),
(581,117,o),
(570,178,qs),
(557,244,o),
(509,282,qs),
(461,321,o),
(395,321,qs),
(299,321,o),
(236,251,qs),
(171,176,o),
(162,53,q),
(163,49,l),
(479,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
24 12 2 0 8 1 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 41 41 30 29 1 0 41 53 41 52 47 45 36 34 29 40 30 40 27 25 23 21 20 19 17 14 9 7 0 28 1 28 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,-247,qs),
(503,-255,o),
(500,-261,qs),
(485,-291,o),
(444,-310,qs),
(395,-333,o),
(324,-331,qs),
(233,-329,o),
(169,-279,qs),
(99,-225,o),
(86,-141,qs),
(76,-73,o),
(107,-24,qs),
(146,36,o),
(231,47,q),
(101,186,ls),
(79,210,o),
(74,244,qs),
(66,294,o),
(113,330,qs),
(163,368,o),
(241,368,qs),
(311,368,o),
(372,338,qs),
(447,301,o),
(454,244,qs),
(457,220,o),
(439,189,qs),
(354,49,l),
(600,49,l),
(609,0,l),
(361,0,ls),
(319,0,o),
(299,13,q),
(282,-2,o),
(265,-2,qs),
(202,-2,o),
(168,-40,qs),
(132,-80,o),
(143,-142,qs),
(153,-196,o),
(191,-234,qs),
(241,-281,o),
(320,-284,qs),
(380,-286,o),
(420,-271,qs),
(449,-261,o),
(481,-241,q),
(488,-238,o),
(491,-238,qs),
(501,-238,o)
);
},
{
closed = 1;
nodes = (
(157,199,q),
(162,195,o),
(163,194,qs),
(288,63,ls),
(296,54,o),
(302,63,qs),
(380,194,l),
(381,195,o),
(382,197,qs),
(400,225,o),
(397,241,qs),
(392,268,o),
(357,291,qs),
(312,321,o),
(249,321,qs),
(194,321,o),
(123,274,o),
(129,241,qs),
(132,225,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
35 16 2 1 3 1 76 8 1 6 1 0 1 6 0 128 0 4 0 7 3 4 7 105 0 0 0 5 0 5 101 0 3 3 1 97 2 1 1 1 24 1 78 0 0 55 53 0 50 0 50 45 38 17 34 38 37 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,0,ls),
(469,0,o),
(468,7,qs),
(467,11,ls),
(457,49,o),
(412,49,qs),
(278,49,ls),
(223,49,o),
(138,125,o),
(128,182,qs),
(117,243,o),
(146,281,qs),
(177,322,o),
(239,321,qs),
(294,321,o),
(341,298,qs),
(349,294,o),
(353,294,qs),
(364,295,o),
(360,308,qs),
(353,331,o),
(270,368,o),
(226,368,qs),
(157,368,o),
(116,327,qs),
(66,277,o),
(77,183,qs),
(85,104,o),
(143,49,q),
(-4,49,l),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 2 0 1 2 105 3 1 0 0 4 95 0 4 4 24 4 78 35 53 39 37 16 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(602,0,l),
(354,0,ls),
(311,0,o),
(292,13,q),
(272,0,o),
(229,0,qs),
(4,0,l),
(-4,49,l),
(222,49,l),
(93,186,ls),
(71,210,o),
(66,244,qs),
(58,294,o),
(105,330,qs),
(156,368,o),
(233,368,qs),
(303,368,o),
(364,338,qs),
(440,301,o),
(447,244,qs),
(450,220,o),
(431,189,qs),
(346,49,l),
(593,49,l)
);
},
{
closed = 1;
nodes = (
(289,54,o),
(294,63,qs),
(373,194,ls),
(392,225,o),
(389,241,qs),
(385,268,o),
(350,291,qs),
(305,321,o),
(242,321,qs),
(189,321,o),
(116,273,o),
(122,241,qs),
(125,225,o),
(155,194,qs),
(280,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 30 28 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,469,o),
(180,485,qs),
(177,501,o),
(195,523,o),
(210,523,qs),
(226,523,o),
(251,501,o),
(254,485,qs),
(257,469,o),
(239,447,o),
(224,447,qs),
(208,447,o)
);
},
{
closed = 1;
nodes = (
(502,-247,qs),
(503,-255,o),
(500,-261,qs),
(485,-291,o),
(444,-310,qs),
(395,-333,o),
(324,-331,qs),
(233,-329,o),
(169,-279,qs),
(99,-225,o),
(86,-141,qs),
(76,-73,o),
(107,-24,qs),
(146,36,o),
(231,47,q),
(101,186,ls),
(79,210,o),
(74,244,qs),
(66,294,o),
(113,330,qs),
(163,368,o),
(241,368,qs),
(311,368,o),
(372,338,qs),
(447,301,o),
(454,244,qs),
(457,220,o),
(439,189,qs),
(354,49,l),
(600,49,l),
(609,0,l),
(361,0,ls),
(319,0,o),
(299,13,q),
(282,-2,o),
(265,-2,qs),
(202,-2,o),
(168,-40,qs),
(132,-80,o),
(143,-142,qs),
(153,-196,o),
(191,-234,qs),
(241,-281,o),
(320,-284,qs),
(380,-286,o),
(420,-271,qs),
(449,-261,o),
(481,-241,q),
(488,-238,o),
(491,-238,qs),
(501,-238,o)
);
},
{
closed = 1;
nodes = (
(157,199,q),
(162,195,o),
(163,194,qs),
(288,63,ls),
(296,54,o),
(302,63,qs),
(380,194,l),
(381,195,o),
(382,197,qs),
(400,225,o),
(397,241,qs),
(392,268,o),
(357,291,qs),
(312,321,o),
(249,321,qs),
(194,321,o),
(123,274,o),
(129,241,qs),
(132,225,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
47 28 2 3 5 1 76 11 1 8 3 2 3 8 2 128 0 1 10 1 0 6 1 0 105 0 6 0 9 5 6 9 105 0 2 0 7 2 7 101 0 5 5 3 97 4 1 3 3 24 3 78 12 12 1 0 67 65 12 62 12 62 56 54 41 39 33 32 31 29 27 25 19 17 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,500,o),
(238,484,qs),
(241,468,o),
(223,446,o),
(207,446,qs),
(192,446,o),
(167,468,o),
(164,484,qs),
(161,500,o),
(178,522,o),
(194,522,qs),
(209,522,o)
);
},
{
closed = 1;
nodes = (
(460,0,ls),
(469,0,o),
(468,7,qs),
(467,11,ls),
(457,49,o),
(412,49,qs),
(278,49,ls),
(223,49,o),
(138,125,o),
(128,182,qs),
(117,243,o),
(146,281,qs),
(177,322,o),
(239,321,qs),
(294,321,o),
(341,298,qs),
(349,294,o),
(353,294,qs),
(364,295,o),
(360,308,qs),
(353,331,o),
(270,368,o),
(226,368,qs),
(157,368,o),
(116,327,qs),
(66,277,o),
(77,183,qs),
(85,104,o),
(143,49,q),
(-4,49,l),
(4,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
7 1 0 1 0 133 0 1 3 3 1 112 0 3 0 4 2 3 4 106 5 1 2 2 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 0 1 0 133 0 1 3 1 133 0 3 0 4 2 3 4 106 5 1 2 2 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 42 40 37 34 29 27 20 18 13 12 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,469,o),
(174,485,qs),
(171,501,o),
(188,523,o),
(204,523,qs),
(219,523,o),
(245,501,o),
(248,485,qs),
(251,469,o),
(233,447,o),
(217,447,qs),
(202,447,o)
);
},
{
closed = 1;
nodes = (
(602,0,l),
(354,0,ls),
(311,0,o),
(292,13,q),
(272,0,o),
(229,0,qs),
(4,0,l),
(-4,49,l),
(222,49,l),
(93,186,ls),
(71,210,o),
(66,244,qs),
(58,294,o),
(105,330,qs),
(156,368,o),
(233,368,qs),
(303,368,o),
(364,338,qs),
(440,301,o),
(447,244,qs),
(450,220,o),
(431,189,qs),
(346,49,l),
(593,49,l)
);
},
{
closed = 1;
nodes = (
(289,54,o),
(294,63,qs),
(373,194,ls),
(392,225,o),
(389,241,qs),
(385,268,o),
(350,291,qs),
(305,321,o),
(242,321,qs),
(189,321,o),
(116,273,o),
(122,241,qs),
(125,225,o),
(155,194,qs),
(280,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
31 1 4 3 1 76 0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 42 40 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(571,469,o),
(568,485,qs),
(565,501,o),
(582,523,o),
(598,523,qs),
(613,523,o),
(638,501,o),
(641,485,qs),
(644,469,o),
(627,447,o),
(611,447,qs),
(596,447,o)
);
},
{
closed = 1;
nodes = (
(968,-1,l),
(751,-1,ls),
(705,-1,o),
(683,14,q),
(667,-1,o),
(620,-1,qs),
(420,-1,l),
(420,0,l),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(584,49,l),
(548,70,o),
(494,151,o),
(487,195,qs),
(476,261,o),
(506,309,qs),
(543,368,o),
(621,368,qs),
(699,368,o),
(751,321,qs),
(806,273,o),
(815,195,qs),
(820,151,o),
(787,73,o),
(753,48,q),
(960,48,l)
);
},
{
closed = 1;
nodes = (
(771,151,o),
(763,195,qs),
(753,250,o),
(678,321,o),
(629,321,qs),
(586,321,o),
(560,291,qs),
(529,256,o),
(539,195,qs),
(547,148,o),
(628,66,o),
(675,58,q),
(720,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
48 1 5 3 1 76 0 4 8 3 8 4 3 128 0 1 9 1 0 2 1 0 105 0 2 0 8 4 2 8 105 10 7 2 3 3 5 95 6 1 5 5 24 5 78 12 12 1 0 61 59 12 52 12 52 51 49 47 42 35 34 28 26 20 18 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 943;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,469,o),
(151,485,qs),
(148,501,o),
(166,523,o),
(181,523,qs),
(197,523,o),
(222,501,o),
(225,485,qs),
(228,469,o),
(210,447,o),
(194,447,qs),
(179,447,o)
);
},
{
closed = 1;
nodes = (
(385,60,qs),
(351,2,o),
(276,0,qs),
(4,0,l),
(-4,49,l),
(146,49,l),
(91,93,o),
(75,183,qs),
(62,257,o),
(96,309,qs),
(135,368,o),
(213,368,qs),
(279,368,o),
(330,322,qs),
(387,270,o),
(402,183,qs),
(414,110,o)
);
},
{
closed = 1;
nodes = (
(338,85,qs),
(361,123,o),
(350,184,qs),
(339,244,o),
(263,321,o),
(214,321,qs),
(167,321,o),
(143,285,qs),
(116,245,o),
(127,184,qs),
(137,127,o),
(219,49,o),
(268,49,qs),
(315,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 1 7 1 0 2 1 0 105 0 2 0 6 3 2 6 105 8 5 2 3 3 4 95 0 4 4 24 4 78 30 29 1 0 37 35 29 42 30 42 26 24 23 22 17 15 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,469,o),
(152,486,qs),
(149,501,o),
(167,523,o),
(182,523,qs),
(198,523,o),
(223,502,o),
(226,486,qs),
(229,470,o),
(211,447,o),
(195,447,qs),
(180,447,o)
);
},
{
closed = 1;
nodes = (
(553,0,l),
(336,0,ls),
(290,0,o),
(268,15,q),
(252,0,o),
(204,0,qs),
(4,0,l),
(-4,49,l),
(169,49,l),
(133,70,o),
(79,152,o),
(72,196,qs),
(61,261,o),
(91,309,qs),
(127,368,o),
(205,368,qs),
(283,368,o),
(336,322,qs),
(390,274,o),
(399,196,qs),
(405,152,o),
(371,73,o),
(337,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(356,152,o),
(348,196,qs),
(338,250,o),
(262,321,o),
(214,321,qs),
(170,321,o),
(145,292,qs),
(114,256,o),
(124,196,qs),
(132,148,o),
(213,67,o),
(260,58,q),
(304,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
31 1 4 3 1 76 0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 44 42 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,464,o),
(322,479,qs),
(319,493,o),
(335,513,o),
(349,513,qs),
(364,513,o),
(387,493,o),
(390,479,qs),
(392,464,o),
(376,443,o),
(362,443,qs),
(347,443,o)
);
},
{
closed = 1;
nodes = (
(422,464,o),
(419,479,qs),
(417,493,o),
(433,513,o),
(447,513,qs),
(462,513,o),
(485,493,o),
(488,479,qs),
(490,464,o),
(474,443,o),
(459,443,qs),
(445,443,o)
);
},
{
closed = 1;
nodes = (
(650,0,l),
(648,-98,o),
(596,-153,qs),
(537,-214,o),
(423,-214,qs),
(297,-214,o),
(213,-151,qs),
(126,-84,o),
(104,34,qs),
(94,93,o),
(119,197,o),
(150,225,qs),
(156,231,o),
(162,231,qs),
(174,231,o),
(176,219,qs),
(176,216,o),
(174,211,qs),
(137,140,o),
(152,46,qs),
(169,-45,o),
(240,-103,qs),
(318,-167,o),
(424,-167,qs),
(500,-167,o),
(545,-128,qs),
(596,-84,o),
(598,0,q),
(490,0,ls),
(423,0,o),
(370,45,qs),
(310,97,o),
(295,178,qs),
(281,258,o),
(316,310,qs),
(353,368,o),
(430,368,qs),
(527,368,o),
(585,272,qs),
(633,194,o),
(648,49,q),
(771,49,l),
(779,0,l)
);
},
{
closed = 1;
nodes = (
(595,55,o),
(593,69,qs),
(577,194,o),
(539,256,qs),
(498,321,o),
(432,321,qs),
(386,321,o),
(363,287,qs),
(335,247,o),
(347,179,qs),
(357,123,o),
(434,49,o),
(482,49,qs),
(595,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 8 12 4 12 8 4 128 3 1 1 14 2 13 3 0 5 1 0 105 0 5 0 12 8 5 12 105 0 7 0 9 7 9 101 15 11 2 4 4 6 95 10 1 6 6 24 6 78 68 67 13 12 1 0 75 73 67 80 68 79 66 65 62 60 52 51 43 41 38 36 30 28 25 24 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,464,o),
(102,479,qs),
(100,493,o),
(116,513,o),
(130,513,qs),
(145,513,o),
(168,493,o),
(170,479,qs),
(173,464,o),
(157,443,o),
(142,443,qs),
(128,443,o)
);
},
{
closed = 1;
nodes = (
(202,464,o),
(200,479,qs),
(197,493,o),
(213,513,o),
(228,513,qs),
(242,513,o),
(266,493,o),
(268,479,qs),
(271,464,o),
(254,443,o),
(240,443,qs),
(226,443,o)
);
},
{
closed = 1;
nodes = (
(385,60,qs),
(351,2,o),
(276,0,qs),
(4,0,l),
(-4,49,l),
(146,49,l),
(91,93,o),
(75,183,qs),
(62,257,o),
(96,309,qs),
(135,368,o),
(213,368,qs),
(279,368,o),
(330,322,qs),
(387,270,o),
(402,183,qs),
(414,110,o)
);
},
{
closed = 1;
nodes = (
(338,85,qs),
(361,123,o),
(350,184,qs),
(339,244,o),
(263,321,o),
(214,321,qs),
(167,321,o),
(143,285,qs),
(116,245,o),
(127,184,qs),
(137,127,o),
(219,49,o),
(268,49,qs),
(315,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 0 4 0 8 5 4 8 105 11 7 2 5 5 6 95 0 6 6 24 6 78 42 41 13 12 1 0 49 47 41 54 42 54 38 36 35 34 29 27 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,464,o),
(103,479,qs),
(101,493,o),
(117,513,o),
(131,513,qs),
(146,513,o),
(169,493,o),
(172,479,qs),
(174,464,o),
(158,443,o),
(143,443,qs),
(129,443,o)
);
},
{
closed = 1;
nodes = (
(203,464,o),
(201,479,qs),
(199,493,o),
(215,513,o),
(229,513,qs),
(243,513,o),
(267,493,o),
(269,479,qs),
(272,464,o),
(256,443,o),
(241,443,qs),
(227,443,o)
);
},
{
closed = 1;
nodes = (
(553,0,l),
(336,0,ls),
(290,0,o),
(268,15,q),
(252,0,o),
(204,0,qs),
(4,0,l),
(-4,49,l),
(169,49,l),
(133,70,o),
(79,152,o),
(72,196,qs),
(61,261,o),
(91,309,qs),
(127,368,o),
(205,368,qs),
(283,368,o),
(336,322,qs),
(390,274,o),
(399,196,qs),
(405,152,o),
(371,73,o),
(337,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(356,152,o),
(348,196,qs),
(338,250,o),
(262,321,o),
(214,321,qs),
(170,321,o),
(145,292,qs),
(114,256,o),
(124,196,qs),
(132,148,o),
(213,67,o),
(260,58,q),
(304,71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
43 1 6 5 1 76 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 56 54 24 47 24 47 46 44 42 40 39 38 32 30 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(861,0,l),
(830,0,ls),
(743,0,o),
(698,53,q),
(669,0,o),
(591,0,qs),
(300,0,ls),
(219,0,o),
(167,30,qs),
(99,69,o),
(88,152,qs),
(76,242,o),
(136,292,qs),
(143,298,o),
(149,298,qs),
(161,298,o),
(162,288,qs),
(163,281,o),
(160,277,qs),
(122,219,o),
(131,162,qs),
(152,49,o),
(293,49,qs),
(585,49,ls),
(677,49,o),
(658,156,qs),
(597,505,ls),
(588,556,o),
(629,556,qs),
(634,556,ls),
(639,556,o),
(640,551,qs),
(709,155,ls),
(718,105,o),
(777,49,o),
(820,49,qs),
(853,49,l)
);
},
{
closed = 1;
nodes = (
(328,296,qs),
(329,296,l),
(310,317,o),
(308,346,qs),
(306,382,o),
(344,426,o),
(376,426,qs),
(401,426,o),
(441,401,o),
(445,382,q),
(450,373,o),
(443,373,qs),
(440,373,o),
(434,376,qs),
(431,377,o),
(430,378,q),
(403,389,o),
(388,389,qs),
(367,389,o),
(346,365,o),
(350,345,qs),
(358,299,o),
(401,299,qs),
(454,299,ls),
(483,299,o),
(489,271,q),
(489,268,l),
(491,262,o),
(483,262,qs),
(386,262,ls),
(343,262,o),
(320,253,q),
(319,253,o),
(317,252,qs),
(311,250,o),
(310,250,qs),
(304,250,o),
(301,263,qs),
(297,288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
73 1 7 3 32 1 0 6 2 76 0 10 9 3 9 10 3 128 0 6 7 0 7 6 0 128 0 11 0 9 10 11 9 105 8 1 3 0 7 6 3 7 103 0 1 1 23 77 2 12 2 0 0 4 97 5 1 4 4 24 4 78 1 0 69 67 64 62 58 56 53 50 47 44 40 38 35 33 31 28 21 20 14 11 8 6 0 36 1 36 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 836;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(435,349,o),
(464,173,qs),
(476,97,o),
(442,50,qs),
(405,0,o),
(333,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 32 30 25 22 7 5 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,0,l),
(588,0,ls),
(495,0,o),
(449,62,q),
(414,0,o),
(333,0,qs),
(4,0,l),
(-4,49,l),
(324,49,ls),
(368,49,o),
(392,75,qs),
(423,109,o),
(411,176,qs),
(401,232,o),
(328,302,o),
(280,302,qs),
(81,302,ls),
(40,302,o),
(35,334,qs),
(32,349,ls),
(28,369,o),
(41,379,qs),
(250,554,ls),
(253,557,o),
(257,555,qs),
(273,544,o),
(275,512,o),
(259,499,qs),
(89,355,ls),
(87,353,o),
(87,352,qs),
(87,349,o),
(90,349,qs),
(277,349,ls),
(434,349,o),
(463,177,qs),
(468,154,ls),
(477,104,o),
(534,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 39 37 35 33 32 30 25 22 7 5 0 40 1 40 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(710,0,l),
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(444,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(447,504,ls),
(443,527,o),
(461,556,o),
(479,556,qs),
(484,556,ls),
(489,556,o),
(490,550,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
38 1 5 0 1 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 41 39 35 33 25 24 16 14 8 5 0 42 1 42 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(32,505,ls),
(23,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(74,551,q),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 97 3 1 0 0 24 0 78 1 0 14 12 9 7 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(32,505,ls),
(23,556,o),
(63,556,qs),
(68,556,ls),
(74,556,o),
(74,551,q),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 0 1 1 76 0 1 1 23 77 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 6 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(691,0,l),
(660,0,ls),
(576,0,o),
(531,51,q),
(506,-9,o),
(420,-9,qs),
(317,-9,o),
(207,49,q),
(201,49,ls),
(119,42,o),
(138,-63,qs),
(168,-237,ls),
(173,-260,o),
(155,-288,o),
(136,-288,qs),
(132,-288,ls),
(126,-288,o),
(125,-282,qs),
(87,-62,ls),
(61,81,o),
(176,97,q),
(180,107,o),
(187,132,qs),
(192,148,o),
(194,154,qs),
(224,257,o),
(242,291,qs),
(282,368,o),
(353,368,qs),
(421,368,o),
(469,321,qs),
(520,269,o),
(536,175,qs),
(540,154,ls),
(549,104,o),
(607,49,o),
(649,49,qs),
(682,49,l)
);
},
{
closed = 1;
nodes = (
(486,153,qs),
(472,232,o),
(404,321,o),
(357,321,qs),
(292,321,o),
(246,144,qs),
(243,135,ls),
(234,102,o),
(230,91,q),
(328,38,o),
(413,38,qs),
(506,40,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 33 2 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 8 1 5 0 3 2 5 3 105 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
39 38 1 0 46 44 38 49 39 49 36 34 32 30 23 20 9 7 0 37 1 37 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 654;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,-9,qs),
(227,-9,o),
(120,46,q),
(104,20,o),
(57,0,o),
(10,0,qs),
(5,0,l),
(-4,49,l),
(2,49,ls),
(49,49,o),
(84,85,o),
(102,154,qs),
(133,258,o),
(150,291,qs),
(190,368,o),
(261,368,qs),
(333,368,o),
(382,315,qs),
(436,256,o),
(447,153,qs),
(466,-9,o)
);
},
{
closed = 1;
nodes = (
(394,153,qs),
(380,232,o),
(312,321,o),
(265,321,qs),
(200,321,o),
(154,144,qs),
(151,135,ls),
(142,103,o),
(138,91,q),
(236,38,o),
(321,38,qs),
(414,40,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 5 17 1 4 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 6 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 1 0 5 105 6 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
22 21 29 27 21 32 22 32 35 34 21 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(599,0,l),
(568,0,ls),
(485,0,o),
(439,51,q),
(414,-9,o),
(328,-9,qs),
(227,-9,o),
(120,46,q),
(104,20,o),
(57,0,o),
(10,0,qs),
(5,0,l),
(-4,49,l),
(2,49,ls),
(49,49,o),
(84,85,o),
(102,154,qs),
(133,258,o),
(150,291,qs),
(190,368,o),
(261,368,qs),
(329,368,o),
(377,321,qs),
(429,269,o),
(444,175,qs),
(448,154,ls),
(468,49,o),
(557,49,qs),
(590,49,l)
);
},
{
closed = 1;
nodes = (
(394,153,qs),
(380,232,o),
(312,321,o),
(265,321,qs),
(200,321,o),
(154,144,qs),
(151,135,ls),
(142,103,o),
(138,91,q),
(236,38,o),
(321,38,qs),
(414,40,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 24 2 0 7 20 1 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
30 29 1 0 37 35 29 40 30 40 27 25 23 21 18 16 14 13 8 6 0 28 1 28 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 583;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(327,384,o),
(330,368,qs),
(333,352,o),
(315,330,o),
(299,330,qs),
(284,330,o),
(259,352,o),
(256,368,qs),
(253,384,o),
(271,406,o),
(286,406,qs),
(302,406,o)
);
},
{
closed = 1;
nodes = (
(710,0,l),
(680,0,ls),
(624,0,o),
(581,27,q),
(595,-80,o),
(540,-145,qs),
(482,-214,o),
(374,-214,qs),
(280,-214,o),
(211,-163,qs),
(124,-98,o),
(103,34,qs),
(94,92,o),
(120,197,o),
(150,225,qs),
(157,231,o),
(163,231,qs),
(175,231,o),
(177,219,qs),
(177,216,o),
(175,211,qs),
(137,139,o),
(150,46,qs),
(165,-53,o),
(230,-111,qs),
(294,-167,o),
(376,-167,qs),
(445,-167,o),
(488,-124,qs),
(547,-66,o),
(527,46,qs),
(483,298,ls),
(479,321,o),
(496,349,o),
(515,349,qs),
(519,349,ls),
(524,349,o),
(525,344,qs),
(559,156,ls),
(568,105,o),
(626,49,o),
(669,49,qs),
(702,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
50 1 7 2 1 76 0 3 0 1 0 3 1 128 0 5 1 2 1 5 2 128 8 1 0 0 1 5 0 1 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 53 51 47 45 37 36 28 26 20 18 12 54 13 54 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,474,o),
(102,458,qs),
(105,442,o),
(87,420,o),
(72,420,qs),
(56,420,o),
(31,442,o),
(28,458,qs),
(25,474,o),
(43,496,o),
(58,496,qs),
(74,496,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 19 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,442,o),
(28,458,qs),
(25,474,o),
(43,496,o),
(58,496,qs),
(74,496,o),
(99,474,o),
(102,458,qs),
(105,442,o),
(87,420,o),
(72,420,qs),
(56,420,o)
);
},
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
29 1 2 3 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 18 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,0,l),
(530,0,ls),
(440,0,o),
(399,58,q),
(366,-9,o),
(279,-9,qs),
(211,-9,o),
(158,32,qs),
(95,82,o),
(83,170,qs),
(72,248,o),
(106,296,qs),
(143,349,o),
(220,349,qs),
(328,349,l),
(323,378,ls),
(320,398,o),
(338,424,o),
(355,424,qs),
(360,424,ls),
(366,424,o),
(367,419,qs),
(413,156,ls),
(422,105,o),
(480,49,o),
(524,49,qs),
(556,49,l)
);
},
{
closed = 1;
nodes = (
(371,107,o),
(360,170,qs),
(336,302,l),
(224,302,ls),
(177,302,o),
(152,271,qs),
(123,235,o),
(134,170,qs),
(145,110,o),
(219,38,o),
(270,38,qs),
(324,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
22 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 98 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 102 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 35 33 27 38 28 38 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,52,qs),
(543,0,o),
(464,0,qs),
(320,0,ls),
(272,0,o),
(253,13,q),
(238,0,o),
(190,0,qs),
(4,0,l),
(-4,49,l),
(165,49,l),
(128,68,o),
(77,145,o),
(72,191,qs),
(61,283,o),
(109,328,q),
(90,329,o),
(73,332,qs),
(24,340,o),
(10,382,qs),
(6,396,o),
(17,392,qs),
(36,385,o),
(56,381,qs),
(101,372,o),
(181,371,qs),
(208,370,ls),
(311,368,o),
(364,368,qs),
(456,368,o),
(516,325,qs),
(587,275,o),
(600,175,qs),
(613,99,o)
);
},
{
closed = 1;
nodes = (
(513,49,o),
(558,117,o),
(548,176,qs),
(523,319,o),
(368,322,qs),
(342,322,o),
(293,323,q),
(356,275,o),
(371,191,qs),
(379,147,o),
(348,69,o),
(315,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(198,70,o),
(245,58,q),
(288,70,o),
(332,145,o),
(323,193,qs),
(313,248,o),
(243,318,o),
(199,318,qs),
(160,318,o),
(137,289,qs),
(109,253,o),
(119,193,qs),
(128,145,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
57 1 2 7 27 1 3 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
57 1 2 5 27 1 3 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 7 1 2 1 7 114 0 0 5 1 1 7 0 1 105 8 6 2 2 2 3 95 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 5 5 1 114 0 0 7 1 5 2 0 5 105 8 6 2 2 2 3 95 4 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
34 34 52 50 34 46 34 45 56 50 33 21 24 83 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(754,0,l),
(724,0,ls),
(631,0,o),
(586,62,q),
(550,0,o),
(464,0,qs),
(320,0,ls),
(272,0,o),
(253,13,q),
(238,0,o),
(190,0,qs),
(4,0,l),
(-4,49,l),
(165,49,l),
(128,68,o),
(77,145,o),
(72,191,qs),
(61,283,o),
(109,328,q),
(90,329,o),
(73,332,qs),
(24,340,o),
(10,382,qs),
(6,396,o),
(17,392,qs),
(36,385,o),
(56,381,qs),
(101,372,o),
(181,371,qs),
(208,370,ls),
(311,368,o),
(364,368,qs),
(456,368,o),
(516,325,qs),
(586,275,o),
(600,176,qs),
(604,154,ls),
(613,104,o),
(671,49,o),
(713,49,qs),
(746,49,l)
);
},
{
closed = 1;
nodes = (
(513,49,o),
(558,117,o),
(548,176,qs),
(523,319,o),
(368,322,qs),
(342,322,o),
(293,323,q),
(356,275,o),
(371,191,qs),
(379,147,o),
(348,69,o),
(315,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(198,70,o),
(245,58,q),
(288,70,o),
(332,145,o),
(323,193,qs),
(313,248,o),
(243,318,o),
(199,318,qs),
(160,318,o),
(137,289,qs),
(109,253,o),
(119,193,qs),
(128,145,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
64 36 2 0 9 31 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
64 36 2 0 7 31 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 7 7 2 114 0 1 9 1 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 41 1 0 59 57 41 53 41 52 49 46 39 37 35 32 30 28 27 26 21 20 12 7 0 40 1 40 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,0,l),
(452,-80,o),
(432,-132,qs),
(404,-214,o),
(299,-214,qs),
(239,-214,o),
(194,-189,qs),
(171,-176,o),
(165,-161,qs),
(160,-149,o),
(173,-149,qs),
(177,-149,o),
(184,-151,qs),
(272,-179,o),
(330,-161,qs),
(410,-136,o),
(388,0,q),
(276,0,ls),
(209,0,o),
(156,45,qs),
(96,97,o),
(82,178,qs),
(68,258,o),
(102,310,qs),
(139,368,o),
(217,368,qs),
(315,368,o),
(373,272,qs),
(420,194,o),
(435,49,q),
(557,49,l),
(565,0,l)
);
},
{
closed = 1;
nodes = (
(379,69,ls),
(364,194,o),
(325,256,qs),
(284,321,o),
(218,321,qs),
(173,321,o),
(149,287,qs),
(122,247,o),
(133,179,qs),
(143,123,o),
(220,49,o),
(268,49,qs),
(382,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 2 4 2 3 4 128 0 4 4 132 0 1 0 7 0 1 7 105 8 6 2 0 0 2 95 5 1 2 2 24 2 78 33 32 40 38 32 44 33 44 19 36 37 38 35 16 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(683,49,l),
(692,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 0 0 0 1 95 5 1 1 1 24 1 78 19 40 24 35 36 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,0,l),
(657,-93,o),
(598,-150,qs),
(532,-214,o),
(404,-214,qs),
(292,-210,o),
(215,-153,qs),
(125,-86,o),
(103,34,qs),
(93,92,o),
(117,196,o),
(148,224,qs),
(155,231,o),
(161,231,qs),
(173,231,o),
(175,219,qs),
(175,216,o),
(173,210,q),
(136,140,o),
(151,45,qs),
(168,-46,o),
(238,-103,qs),
(316,-167,o),
(423,-167,qs),
(493,-167,o),
(541,-131,qs),
(602,-85,o),
(600,0,q),
(482,0,ls),
(475,0,o),
(473,7,qs),
(472,11,ls),
(468,27,o),
(492,49,o),
(513,49,qs),
(683,49,l),
(692,0,l)
);
},
{
closed = 1;
nodes = (
(423,-308,o),
(426,-323,qs),
(428,-338,o),
(412,-358,o),
(397,-358,qs),
(383,-358,o),
(360,-338,o),
(357,-323,qs),
(355,-308,o),
(371,-288,o),
(385,-288,qs),
(400,-288,o)
);
},
{
closed = 1;
nodes = (
(521,-308,o),
(523,-323,qs),
(526,-338,o),
(510,-358,o),
(495,-358,qs),
(481,-358,o),
(458,-338,o),
(455,-323,qs),
(453,-308,o),
(469,-288,o),
(483,-288,qs),
(497,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 3 0 3 133 0 2 0 4 6 2 4 105 11 8 10 3 6 9 1 7 6 7 101 0 0 0 1 95 5 1 1 1 24 1 78 50 49 38 37 56 54 49 60 50 60 44 42 37 48 38 48 19 40 24 35 36 32 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(157,86,o),
(129,46,qs),
(98,0,o),
(27,0,qs),
(4,0,l)
);
},
{
closed = 1;
nodes = (
(112,-97,o),
(114,-112,qs),
(117,-127,o),
(101,-147,o),
(86,-147,qs),
(72,-147,o),
(48,-127,o),
(46,-112,qs),
(44,-97,o),
(60,-77,o),
(74,-77,qs),
(88,-77,o)
);
},
{
closed = 1;
nodes = (
(210,-97,o),
(212,-112,qs),
(215,-127,o),
(198,-147,o),
(184,-147,qs),
(169,-147,o),
(146,-127,o),
(144,-112,qs),
(141,-97,o),
(157,-77,o),
(172,-77,qs),
(186,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 7 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 193;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,0,l),
(265,0,ls),
(178,0,o),
(133,53,q),
(104,0,o),
(27,0,qs),
(4,0,l),
(-4,49,l),
(20,49,ls),
(112,49,o),
(93,156,qs),
(68,299,ls),
(59,349,o),
(100,349,qs),
(105,349,ls),
(110,349,o),
(111,344,qs),
(144,155,ls),
(153,105,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(136,-97,o),
(138,-112,qs),
(141,-127,o),
(124,-147,o),
(110,-147,qs),
(96,-147,o),
(72,-127,o),
(70,-112,qs),
(67,-97,o),
(83,-77,o),
(98,-77,qs),
(112,-77,o)
);
},
{
closed = 1;
nodes = (
(234,-97,o),
(236,-112,qs),
(239,-127,o),
(222,-147,o),
(208,-147,qs),
(193,-147,o),
(170,-127,o),
(168,-112,qs),
(165,-97,o),
(181,-77,o),
(195,-77,qs),
(210,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 0 1 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 23 22 1 0 41 39 34 45 35 45 29 27 22 33 23 33 20 18 16 14 13 11 8 6 0 21 1 21 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-35,564,o),
(-32,549,qs),
(-29,539,o),
(-19,526,qs),
(-14,518,o),
(-10,525,q),
(-9,528,o),
(-7,539,qs),
(-4,551,o),
(6,551,qs),
(15,551,o),
(54,538,qs),
(102,523,o),
(113,523,qs),
(129,523,o),
(146,543,o),
(142,558,qs),
(140,569,o),
(130,582,qs),
(124,590,o),
(121,582,qs),
(120,579,o),
(117,568,qs),
(115,556,o),
(105,556,qs),
(97,556,o),
(66,566,qs),
(10,584,o),
(-4,584,qs),
(-19,585,o)
);
},
{
closed = 1;
nodes = (
(108,0,o),
(106,7,qs),
(105,12,ls),
(101,27,o),
(120,49,o),
(138,49,qs),
(259,49,l),
(88,384,ls),
(69,423,o),
(88,437,q),
(88,438,o),
(90,438,q),
(96,442,o),
(102,445,qs),
(106,447,ls),
(110,448,o),
(113,443,qs),
(314,49,l),
(332,49,ls),
(421,49,o),
(403,156,qs),
(341,504,ls),
(332,556,o),
(373,556,qs),
(378,556,ls),
(384,556,o),
(385,550,qs),
(454,155,ls),
(466,86,o),
(438,46,qs),
(408,0,o),
(336,0,qs),
(115,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 1 0 133 0 1 3 1 133 0 2 3 6 3 2 6 128 5 1 3 3 23 77 7 1 6 6 4 95 9 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
8 1 0 1 0 133 0 1 5 1 133 0 2 3 6 3 2 6 128 0 5 5 23 77 0 3 3 23 77 7 1 6 6 4 95 9 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
31 30 1 0 57 55 44 42 39 36 30 62 31 61 20 18 16 14 5 3 0 29 1 29 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,523,o),
(113,523,qs),
(103,523,o),
(63,536,qs),
(15,551,o),
(6,551,qs),
(-4,551,o),
(-7,539,qs),
(-9,528,o),
(-10,525,q),
(-14,518,o),
(-19,526,qs),
(-29,539,o),
(-32,549,qs),
(-35,564,o),
(-19,585,o),
(-4,584,qs),
(11,584,o),
(58,569,qs),
(96,556,o),
(105,556,qs),
(115,556,o),
(117,568,qs),
(120,579,o),
(121,582,qs),
(124,590,o),
(130,582,qs),
(140,569,o),
(142,558,qs),
(146,543,o)
);
},
{
closed = 1;
nodes = (
(606,0,l),
(575,0,ls),
(488,0,o),
(443,53,q),
(414,0,o),
(336,0,qs),
(115,0,ls),
(108,0,o),
(106,7,qs),
(105,12,ls),
(101,27,o),
(120,49,o),
(138,49,qs),
(259,49,l),
(88,384,ls),
(69,423,o),
(88,437,q),
(88,438,o),
(90,438,q),
(96,442,o),
(102,445,qs),
(106,447,ls),
(110,448,o),
(113,443,qs),
(314,49,l),
(332,49,ls),
(421,49,o),
(403,156,qs),
(341,504,ls),
(332,556,o),
(373,556,qs),
(378,556,ls),
(384,556,o),
(385,550,qs),
(454,155,ls),
(463,105,o),
(521,49,o),
(565,49,qs),
(597,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
64 1 4 3 1 76 0 1 0 2 3 1 2 105 0 3 3 0 97 5 1 0 0 23 77 7 6 10 3 4 4 8 97 9 1 8 8 24 8 78 31 30 67 65 63 60 56 54 43 41 38 35 30 68 31 68 34 41 34 39 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,527,o),
(138,527,qs),
(55,527,ls),
(22,527,o),
(0,519,q),
(-1,518,o),
(-4,517,qs),
(-8,516,o),
(-9,516,qs),
(-15,516,o),
(-17,528,qs),
(-21,552,o),
(7,557,q),
(-11,577,o),
(-16,603,qs),
(-21,635,o),
(11,676,o),
(41,676,qs),
(63,676,o),
(99,652,o),
(104,635,qs),
(107,627,o),
(101,627,qs),
(97,627,o),
(89,632,qs),
(69,643,o),
(53,642,qs),
(16,641,o),
(22,602,qs),
(25,585,o),
(56,561,o),
(74,561,qs),
(111,561,ls),
(138,561,o),
(143,535,qs),
(144,532,ls)
);
},
{
closed = 1;
nodes = (
(467,86,o),
(440,46,qs),
(409,0,o),
(338,0,qs),
(116,0,ls),
(109,0,o),
(107,7,qs),
(106,12,ls),
(102,27,o),
(122,49,o),
(140,49,qs),
(260,49,l),
(90,384,ls),
(70,423,o),
(89,437,qs),
(90,438,o),
(91,438,q),
(97,442,o),
(104,445,qs),
(108,447,ls),
(112,448,o),
(114,443,qs),
(315,49,l),
(334,49,ls),
(423,49,o),
(404,156,qs),
(343,504,ls),
(333,556,o),
(374,556,qs),
(379,556,ls),
(385,556,o),
(386,550,qs),
(455,155,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
22 1 5 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
22 1 6 0 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 0 1 2 0 128 0 4 5 7 5 4 7 128 0 3 0 1 2 3 1 105 0 5 5 0 97 6 1 0 0 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 2 1 0 1 2 0 128 0 4 5 7 5 4 7 128 0 3 0 1 2 3 1 105 0 6 6 23 77 0 5 5 0 97 0 0 0 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 62 43 35 51 52 39 35 34 35 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,527,o),
(138,527,qs),
(55,527,ls),
(22,527,o),
(0,519,q),
(-1,518,o),
(-4,517,qs),
(-8,516,o),
(-9,516,qs),
(-15,516,o),
(-17,528,qs),
(-21,552,o),
(7,557,q),
(-11,577,o),
(-16,603,qs),
(-21,635,o),
(11,676,o),
(41,676,qs),
(63,676,o),
(99,652,o),
(104,635,qs),
(107,627,o),
(101,627,qs),
(97,627,o),
(89,632,qs),
(69,643,o),
(53,642,qs),
(16,641,o),
(22,602,qs),
(25,585,o),
(56,561,o),
(74,561,qs),
(111,561,ls),
(138,561,o),
(143,535,qs),
(144,532,ls)
);
},
{
closed = 1;
nodes = (
(607,0,l),
(576,0,ls),
(489,0,o),
(444,53,q),
(415,0,o),
(338,0,qs),
(116,0,ls),
(109,0,o),
(107,7,qs),
(106,12,ls),
(102,27,o),
(122,49,o),
(140,49,qs),
(260,49,l),
(90,384,ls),
(70,423,o),
(89,437,qs),
(90,438,o),
(91,438,q),
(97,442,o),
(104,445,qs),
(108,447,ls),
(112,448,o),
(114,443,qs),
(315,49,l),
(334,49,ls),
(423,49,o),
(404,156,qs),
(343,504,ls),
(333,556,o),
(374,556,qs),
(379,556,ls),
(385,556,o),
(386,550,qs),
(455,155,ls),
(464,105,o),
(523,49,o),
(566,49,qs),
(599,49,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
22 1 5 0 70 1 6 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
22 1 7 0 70 1 6 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 1 0 1 2 0 128 0 4 5 6 5 4 6 128 0 3 0 1 2 3 1 105 0 5 5 0 97 7 1 0 0 23 77 9 8 12 3 6 6 10 97 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 0 1 2 0 128 0 4 5 6 5 4 6 128 0 3 0 1 2 3 1 105 0 7 7 23 77 0 5 5 0 97 0 0 0 23 77 9 8 12 3 6 6 10 97 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
37 36 73 71 69 66 62 60 49 47 44 41 36 74 37 74 52 39 35 34 35 49 13 7 28 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,86,o),
(446,46,qs),
(415,0,o),
(344,0,qs),
(122,0,ls),
(115,0,o),
(113,7,qs),
(112,12,ls),
(108,27,o),
(128,49,o),
(146,49,qs),
(267,49,l),
(96,384,ls),
(76,423,o),
(95,437,qs),
(96,438,o),
(97,438,q),
(103,442,o),
(110,445,qs),
(114,447,ls),
(118,448,o),
(120,443,qs),
(322,49,l),
(340,49,ls),
(429,49,o),
(410,156,qs),
(349,504,ls),
(340,556,o),
(380,556,qs),
(385,556,ls),
(391,556,o),
(392,550,qs),
(462,155,ls)
);
},
{
closed = 1;
nodes = (
(437,-224,o),
(429,-224,qs),
(347,-224,ls),
(314,-224,o),
(292,-232,q),
(291,-233,o),
(288,-234,qs),
(283,-236,l),
(277,-236,o),
(275,-223,qs),
(271,-199,o),
(299,-194,q),
(281,-174,o),
(276,-148,qs),
(270,-116,o),
(302,-75,o),
(333,-75,qs),
(355,-75,o),
(391,-99,o),
(395,-116,q),
(398,-124,o),
(393,-124,qs),
(389,-124,o),
(381,-119,qs),
(361,-108,o),
(344,-109,qs),
(307,-111,o),
(314,-149,qs),
(317,-166,o),
(348,-191,o),
(365,-191,qs),
(403,-191,ls),
(430,-191,o),
(435,-216,q),
(435,-219,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
55 1 8 4 1 76 0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 0 4 0 8 4 8 99 0 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 60 35 34 35 53 52 43 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(613,0,l),
(583,0,ls),
(495,0,o),
(450,53,q),
(422,0,o),
(344,0,qs),
(122,0,ls),
(115,0,o),
(113,7,qs),
(112,12,ls),
(108,27,o),
(128,49,o),
(146,49,qs),
(267,49,l),
(96,384,ls),
(76,423,o),
(95,437,qs),
(96,438,o),
(97,438,q),
(103,442,o),
(110,445,qs),
(114,447,ls),
(118,448,o),
(120,443,qs),
(322,49,l),
(340,49,ls),
(429,49,o),
(410,156,qs),
(349,504,ls),
(340,556,o),
(380,556,qs),
(385,556,ls),
(391,556,o),
(392,550,qs),
(462,155,ls),
(470,105,o),
(529,49,o),
(572,49,qs),
(605,49,l)
);
},
{
closed = 1;
nodes = (
(437,-224,o),
(429,-224,qs),
(347,-224,ls),
(314,-224,o),
(292,-232,q),
(291,-233,o),
(288,-234,qs),
(283,-236,l),
(277,-236,o),
(275,-223,qs),
(271,-199,o),
(299,-194,q),
(281,-174,o),
(276,-148,qs),
(270,-116,o),
(302,-75,o),
(333,-75,qs),
(355,-75,o),
(391,-99,o),
(395,-116,q),
(398,-124,o),
(393,-124,qs),
(389,-124,o),
(381,-119,qs),
(361,-108,o),
(344,-109,qs),
(307,-111,o),
(314,-149,qs),
(317,-166,o),
(348,-191,o),
(365,-191,qs),
(403,-191,ls),
(430,-191,o),
(435,-216,q),
(435,-219,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
34 1 0 1 61 1 10 6 2 76 0 8 7 6 7 8 6 128 0 9 0 7 8 9 7 105 0 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 97 5 1 4 4 24 4 78 1 0 72 69 57 55 52 50 48 46 43 40 37 35 33 30 26 24 13 11 8 5 0 38 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,0,o),
(113,7,qs),
(112,12,ls),
(108,27,o),
(128,49,o),
(146,49,qs),
(267,49,l),
(96,384,ls),
(76,423,o),
(95,437,q),
(96,437,o),
(96,438,q),
(103,442,o),
(110,445,qs),
(114,447,ls),
(118,448,o),
(120,443,qs),
(322,49,l),
(340,49,ls),
(429,49,o),
(410,156,qs),
(349,504,ls),
(340,556,o),
(380,556,qs),
(385,556,ls),
(391,556,o),
(392,550,qs),
(462,155,ls),
(473,86,o),
(446,46,qs),
(415,0,o),
(344,0,qs),
(122,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 1 1 23 77 3 1 2 2 0 95 4 1 0 0 24 0 78 1 0 27 25 14 12 9 6 0 32 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(613,0,l),
(583,0,ls),
(495,0,o),
(450,53,q),
(422,0,o),
(344,0,qs),
(122,0,ls),
(115,0,o),
(113,7,qs),
(112,12,ls),
(108,27,o),
(128,49,o),
(146,49,qs),
(267,49,l),
(96,384,ls),
(76,423,o),
(95,437,q),
(96,437,o),
(96,438,q),
(103,442,o),
(110,445,qs),
(114,447,ls),
(118,448,o),
(120,443,qs),
(322,49,l),
(340,49,ls),
(429,49,o),
(410,156,qs),
(349,504,ls),
(340,556,o),
(380,556,qs),
(385,556,ls),
(391,556,o),
(392,550,qs),
(462,155,ls),
(470,105,o),
(529,49,o),
(572,49,qs),
(605,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
34 1 0 1 1 76 0 1 1 23 77 3 2 6 3 0 0 4 97 5 1 4 4 24 4 78 1 0 37 35 33 30 26 24 13 11 8 5 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,306,qs),
(361,279,o),
(301,246,o),
(258,246,qs),
(178,247,o),
(123,283,q),
(171,10,ls),
(173,0,o),
(163,0,qs),
(133,0,ls),
(122,0,o),
(120,10,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(69,556,ls),
(75,556,o),
(76,550,qs),
(84,504,l),
(118,565,o),
(191,564,qs),
(231,564,o),
(291,533,o),
(299,509,q),
(305,496,o),
(293,496,qs),
(290,496,o),
(285,497,qs),
(282,498,o),
(281,499,q),
(237,517,o),
(201,516,qs),
(154,516,o),
(96,446,o),
(104,398,qs),
(104,396,o),
(105,388,qs),
(112,349,o),
(198,293,o),
(252,292,qs),
(293,290,o),
(338,313,qs),
(340,314,ls),
(348,317,o),
(352,317,qs),
(363,318,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
26 1 2 1 45 1 0 2 40 1 6 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 52 51 35 36 38 36 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,139,q),
(47,142,o),
(37,220,qs),
(17,386,ls),
(8,463,o),
(35,510,qs),
(68,564,o),
(140,564,qs),
(203,564,o),
(251,522,qs),
(305,474,o),
(326,386,qs),
(379,155,l),
(411,-10,o),
(305,-10,qs),
(266,-10,o),
(238,19,qs),
(236,21,o),
(234,19,q),
(216,-10,o),
(174,-10,qs),
(71,-10,o)
);
},
{
closed = 1;
nodes = (
(215,85,qs),
(215,97,o),
(222,97,qs),
(229,97,o),
(233,85,qs),
(251,37,o),
(291,37,qs),
(324,37,o),
(341,81,o),
(330,142,qs),
(327,164,o),
(275,383,qs),
(261,446,o),
(194,517,o),
(148,518,qs),
(103,517,o),
(61,446,o),
(68,383,qs),
(92,183,o),
(99,142,qs),
(116,38,o),
(175,38,qs),
(215,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 42 40 38 36 30 28 22 44 23 44 14 12 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,292,o),
(348,284,q),
(256,253,o),
(203,181,qs),
(157,119,o),
(130,8,q),
(129,0,o),
(122,0,qs),
(86,0,ls),
(77,0,o),
(78,9,qs),
(82,68,o),
(136,195,o),
(175,238,q),
(119,252,o),
(39,344,o),
(28,407,qs),
(17,473,o),
(52,517,qs),
(89,564,o),
(158,564,qs),
(196,564,o),
(259,534,o),
(267,511,qs),
(272,497,o),
(260,497,qs),
(257,497,o),
(251,499,q),
(250,500,o),
(249,500,q),
(207,517,o),
(171,517,qs),
(122,517,o),
(71,454,o),
(80,405,qs),
(88,356,o),
(167,284,o),
(218,278,q),
(286,326,o),
(361,342,q),
(368,345,o),
(373,336,qs),
(381,321,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
31 28 4 3 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
58 35 36 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni06F6;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,239,o),
(183,230,qs),
(139,175,l),
(132,169,o),
(124,175,qs),
(59,230,ls),
(50,238,o),
(56,246,qs),
(101,299,ls),
(107,307,o),
(116,299,qs),
(180,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uni0660;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,0,o),
(82,12,qs),
(76,442,ls),
(74,564,o),
(169,564,qs),
(222,564,o),
(281,511,o),
(305,442,qs),
(451,12,l),
(454,0,o),
(444,0,qs),
(413,0,ls),
(403,0,o),
(400,11,qs),
(250,456,l),
(227,516,o),
(178,516,qs),
(131,516,o),
(127,456,q),
(133,11,l),
(134,0,o),
(124,0,qs),
(94,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 2 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 12 9 6 4 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,524,qs),
(357,475,o),
(372,382,qs),
(438,8,ls),
(440,0,o),
(432,0,qs),
(397,0,ls),
(388,0,o),
(387,8,qs),
(353,201,l),
(242,201,ls),
(177,201,o),
(124,243,qs),
(62,294,o),
(46,382,qs),
(33,459,o),
(68,509,qs),
(106,564,o),
(181,564,qs),
(248,564,o)
);
},
{
closed = 1;
nodes = (
(116,485,qs),
(87,447,o),
(98,382,qs),
(109,323,o),
(185,248,o),
(234,248,qs),
(345,248,l),
(323,376,ls),
(312,439,o),
(237,517,o),
(186,517,qs),
(140,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06F9;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,102,q),
(300,547,ls),
(300,556,o),
(307,556,qs),
(309,556,ls),
(327,556,o),
(352,528,o),
(352,508,qs),
(357,116,ls),
(359,-7,o),
(264,-7,qs),
(213,-7,o),
(152,48,o),
(128,116,qs),
(-5,508,ls),
(-12,528,o),
(3,556,o),
(21,556,qs),
(24,556,ls),
(30,556,o),
(33,547,qs),
(183,102,l),
(209,41,o),
(256,41,qs),
(303,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 21 18 14 12 7 4 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni06F7;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,0,o),
(120,8,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(74,556,o),
(76,550,q),
(171,8,ls),
(172,0,o),
(165,0,qs),
(130,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0661;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,0,o),
(144,8,qs),
(79,377,ls),
(47,556,o),
(208,556,qs),
(293,556,ls),
(297,556,o),
(298,551,qs),
(299,547,ls),
(304,509,o),
(261,509,qs),
(213,509,ls),
(107,509,o),
(130,378,qs),
(195,8,ls),
(196,0,o),
(189,0,qs),
(154,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 13 10 7 4 0 17 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = uni0662;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,361,o),
(562,316,qs),
(530,264,o),
(458,264,qs),
(371,264,o),
(328,323,q),
(301,268,o),
(225,264,qs),
(166,261,o),
(127,288,q),
(176,8,ls),
(178,0,o),
(169,0,qs),
(135,0,ls),
(126,0,o),
(125,8,qs),
(37,504,ls),
(28,556,o),
(69,556,qs),
(74,556,ls),
(79,556,o),
(80,551,qs),
(99,442,ls),
(121,313,o),
(217,313,qs),
(261,313,o),
(299,381,o),
(289,442,qs),
(278,507,ls),
(274,528,o),
(290,557,o),
(305,557,qs),
(310,557,ls),
(316,557,o),
(317,551,qs),
(335,442,ls),
(346,381,o),
(408,313,o),
(453,313,qs),
(498,313,o),
(537,381,o),
(526,441,qs),
(514,507,ls),
(510,530,o),
(527,558,o),
(545,558,qs),
(550,558,ls),
(556,558,o),
(557,552,qs),
(578,430,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
43 1 1 0 39 1 6 1 2 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 36 37 52 37 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni0663;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,0,o),
(362,0,qs),
(247,0,ls),
(179,0,o),
(129,30,qs),
(62,70,o),
(50,156,qs),
(38,241,o),
(104,279,q),
(25,316,o),
(12,412,qs),
(4,476,o),
(34,517,qs),
(69,564,o),
(143,564,qs),
(185,564,o),
(251,534,o),
(259,512,qs),
(264,497,o),
(253,497,qs),
(249,497,o),
(241,500,qs),
(196,518,o),
(158,518,qs),
(109,518,o),
(56,459,o),
(63,414,qs),
(72,362,o),
(146,303,o),
(202,303,qs),
(270,303,ls),
(290,303,o),
(320,282,o),
(323,267,q),
(323,263,ls),
(324,256,o),
(317,256,qs),
(200,256,ls),
(150,256,o),
(94,198,o),
(102,154,qs),
(111,104,o),
(184,47,o),
(239,47,qs),
(316,47,ls),
(336,47,o),
(365,26,o),
(368,11,q),
(368,7,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 2 0 1 0 2 1 103 0 3 3 5 97 0 5 5 23 77 0 0 0 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 0 0 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
58 35 34 36 52 52 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = uni0664;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,523,qs),
(340,476,o),
(361,388,qs),
(398,226,o),
(408,178,q),
(409,176,o),
(408,176,q),
(423,95,o),
(393,46,qs),
(359,-10,o),
(277,-10,qs),
(205,-10,o),
(154,33,qs),
(96,83,o),
(80,176,qs),
(80,177,o),
(79,180,q),
(71,240,o),
(52,387,qs),
(43,463,o),
(71,510,qs),
(103,564,o),
(176,564,qs),
(239,564,o)
);
},
{
closed = 1;
nodes = (
(97,446,o),
(105,383,qs),
(131,177,l),
(156,37,o),
(268,37,qs),
(323,37,o),
(368,110,o),
(357,177,q),
(310,384,ls),
(296,446,o),
(229,517,o),
(184,517,qs),
(139,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 1 0 32 30 24 36 25 36 13 11 0 23 1 23 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uni0665;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,0,o),
(302,8,qs),
(237,378,ls),
(214,509,o),
(108,509,qs),
(59,509,ls),
(16,509,o),
(9,547,qs),
(8,551,ls),
(7,556,o),
(11,556,qs),
(96,556,ls),
(183,556,o),
(273,472,o),
(288,377,qs),
(353,8,ls),
(355,0,o),
(346,0,qs),
(311,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
9 1 2 1 1 76 0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 14 11 7 5 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 375;
}
);
note = uni0666;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,102,q),
(300,547,ls),
(300,556,o),
(307,556,qs),
(309,556,ls),
(327,556,o),
(352,528,o),
(352,508,qs),
(357,116,ls),
(359,-7,o),
(264,-7,qs),
(213,-7,o),
(152,48,o),
(128,116,qs),
(-5,508,ls),
(-12,528,o),
(3,556,o),
(21,556,qs),
(24,556,ls),
(30,556,o),
(33,547,qs),
(183,102,l),
(209,41,o),
(256,41,qs),
(303,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 21 18 14 12 7 4 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0667;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,0,o),
(82,12,qs),
(76,442,ls),
(74,564,o),
(169,564,qs),
(222,564,o),
(281,511,o),
(305,442,qs),
(451,12,l),
(454,0,o),
(444,0,qs),
(413,0,ls),
(403,0,o),
(400,11,qs),
(250,456,l),
(227,516,o),
(178,516,qs),
(131,516,o),
(127,456,q),
(133,11,l),
(134,0,o),
(124,0,qs),
(94,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 2 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 12 9 6 4 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = uni0668;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,524,qs),
(357,475,o),
(372,382,qs),
(438,8,ls),
(440,0,o),
(432,0,qs),
(397,0,ls),
(388,0,o),
(387,8,qs),
(353,201,l),
(242,201,ls),
(177,201,o),
(124,243,qs),
(62,294,o),
(46,382,qs),
(33,459,o),
(68,509,qs),
(106,564,o),
(181,564,qs),
(248,564,o)
);
},
{
closed = 1;
nodes = (
(116,485,qs),
(87,447,o),
(98,382,qs),
(109,323,o),
(185,248,o),
(234,248,qs),
(345,248,l),
(323,376,ls),
(312,439,o),
(237,517,o),
(186,517,qs),
(140,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0669;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,239,o),
(183,230,qs),
(139,175,l),
(132,169,o),
(124,175,qs),
(59,230,ls),
(50,238,o),
(56,246,qs),
(101,299,ls),
(107,307,o),
(116,299,qs),
(180,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,0,o),
(120,8,qs),
(33,504,ls),
(28,527,o),
(46,556,o),
(65,556,qs),
(70,556,ls),
(74,556,o),
(76,550,q),
(171,8,ls),
(172,0,o),
(165,0,qs),
(130,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,0,o),
(144,8,qs),
(79,377,ls),
(47,556,o),
(203,556,qs),
(293,556,ls),
(297,556,o),
(298,551,qs),
(299,547,ls),
(306,509,o),
(261,509,qs),
(213,509,ls),
(107,509,o),
(130,378,qs),
(195,8,ls),
(196,0,o),
(189,0,qs),
(154,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 13 10 7 4 0 17 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = uni06F2;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(590,361,o),
(562,316,qs),
(530,264,o),
(458,264,qs),
(371,264,o),
(328,323,q),
(301,268,o),
(225,264,qs),
(166,261,o),
(127,288,q),
(176,8,ls),
(178,0,o),
(169,0,qs),
(135,0,ls),
(126,0,o),
(125,8,qs),
(37,504,ls),
(28,556,o),
(69,556,qs),
(74,556,ls),
(79,556,o),
(80,551,qs),
(99,442,ls),
(121,313,o),
(217,313,qs),
(261,313,o),
(299,381,o),
(289,442,qs),
(278,507,ls),
(274,528,o),
(290,557,o),
(305,557,qs),
(310,557,ls),
(316,557,o),
(317,551,qs),
(335,442,ls),
(346,381,o),
(408,313,o),
(453,313,qs),
(498,313,o),
(537,381,o),
(526,441,qs),
(514,507,ls),
(510,530,o),
(527,558,o),
(545,558,qs),
(550,558,ls),
(556,558,o),
(557,552,qs),
(578,430,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
43 1 1 0 39 1 6 1 2 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 36 37 52 37 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni06F3;
}
);
instances = (
{
customParameters = (
{
name = styleMapFamilyName;
value = Light;
}
);
instanceInterpolations = {
m01 = 1;
};
isItalic = 1;
name = "Light Italic";
properties = (
{
key = postscriptFullName;
value = "Zain Light Italic";
},
{
key = postscriptFontName;
value = "Zain-LightItalic";
}
);
weightClass = 300;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -19;
"@MMK_R_O" = -19;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
"@MMK_R_quoteright" = 8;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -19;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -17;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -5;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -19;
"@MMK_R_C" = -18;
"@MMK_R_O" = -15;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_a" = {
"@MMK_R_y" = -5;
};
"@MMK_L_c" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 4;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -13;
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -14;
"@MMK_R_u" = -6;
"@MMK_R_y" = -13;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -22;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -11;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 12;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -8;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -5;
"@MMK_R_quoteright" = 11;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -11;
"@MMK_R_e" = -5;
"@MMK_R_o" = -5;
};
A = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -8;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
y = -6;
yacute = -6;
ydieresis = -6;
};
C = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -18;
AE = -27;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
J = -18;
M = -4;
T = -23;
V = -16;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = -3;
uni0622 = 43;
uni0623 = 43;
uni0625 = 21;
uni0631 = -3;
uni0632 = -3;
uni0671 = 43;
uni0691 = -3;
uni0694 = -3;
uni0695 = -3;
uni0698 = -3;
};
E = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -23;
AE = -36;
Aacute = -23;
Acircumflex = -23;
Adieresis = -23;
Agrave = -23;
Aring = -23;
Atilde = -23;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 6;
V = 4;
W = 4;
X = -6;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -29;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -29;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -9;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -13;
Scaron = -13;
T = -5;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -42;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -29;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
colon = 4;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -11;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -19;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -4;
Scaron = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
o = -3;
oacute = -3;
ocircumflex = -3;
odieresis = -3;
oe = -3;
ograve = -3;
oslash = -3;
otilde = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
P = {
A = -28;
AE = -49;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
J = -32;
M = -3;
T = -8;
X = -18;
Y = -4;
Yacute = -4;
Ydieresis = -4;
Z = -9;
Zcaron = -9;
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -13;
ccedilla = -13;
comma = -29;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
g = -14;
hyphen = -6;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -29;
q = -13;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
z = -8;
zcaron = -8;
};
Q = {
A = -17;
AE = -12;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -17;
Yacute = -17;
Ydieresis = -17;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
d = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -4;
scaron = -4;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -28;
AE = -48;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 6;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -18;
AE = -33;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
C = -12;
Ccedilla = -12;
G = -12;
J = -23;
O = -11;
OE = -11;
Oacute = -11;
Ocircumflex = -11;
Odieresis = -11;
Ograve = -11;
Oslash = -11;
Otilde = -11;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
c = -31;
ccedilla = -31;
colon = -7;
comma = -24;
d = -29;
dotlessi = -11;
e = -29;
eacute = -29;
ecircumflex = -29;
edieresis = -29;
egrave = -29;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -29;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
p = -11;
period = -24;
q = -29;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -13;
AE = -29;
Aacute = -13;
Acircumflex = -13;
Adieresis = -13;
Agrave = -13;
Aring = -13;
Atilde = -13;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -18;
OE = -18;
Oacute = -18;
Ocircumflex = -18;
Odieresis = -18;
Ograve = -18;
Oslash = -18;
Otilde = -18;
Q = -18;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
v = -5;
};
aacute = {
question = -11;
v = -5;
};
acircumflex = {
question = -11;
v = -5;
};
adieresis = {
question = -11;
v = -5;
};
ae = {
question = -22;
t = -4;
v = -4;
x = -10;
};
agrave = {
question = -11;
v = -5;
};
aring = {
question = -11;
v = -5;
};
atilde = {
question = -11;
v = -5;
};
b = {
comma = -7;
f = -4;
fi = -4;
fl = -4;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 56;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
rehvabovear = -7;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -9;
uni0632 = -9;
uni0671 = 51;
uni0691 = -5;
uni0694 = -9;
uni0695 = -9;
uni0698 = -9;
};
bracketleft = {
j = 51;
uni0632 = 4;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
rehvabovear = -7;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -9;
uni0632 = -9;
uni0671 = 51;
uni0691 = -5;
uni0694 = -9;
uni0695 = -9;
uni0698 = -9;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
comma = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
dollar = {
eight = 5;
eight.ar = 5;
eight.farsi = 5;
four = 14;
four.ar = 14;
four.farsi = 14;
nine = -10;
nine.ar = -10;
nine.farsi = -10;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eacute = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ecircumflex = {
question = -22;
t = -4;
v = -4;
x = -10;
};
edieresis = {
question = -22;
t = -4;
v = -4;
x = -10;
};
egrave = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eight = {
comma = -7;
eight = 5;
four = 7;
period = -7;
seven = -7;
two = -10;
};
eight.ar = {
comma = -7;
eight.ar = 5;
four.ar = 7;
period = -7;
seven.ar = -7;
two.ar = -10;
};
eight.farsi = {
comma = -7;
eight.farsi = 5;
four.farsi = 7;
period = -7;
seven.farsi = -7;
two.farsi = -10;
};
exclamdown = {
j = 44;
y = 8;
yacute = 8;
ydieresis = 8;
};
f = {
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -14;
ccedilla = -14;
comma = -21;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
exclam = 6;
g = -14;
hyphen = -9;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -21;
q = -14;
question = 12;
quotedblright = 13;
quoteright = 13;
};
fi = {
v = -5;
w = -3;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -10;
zero = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -12;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
four = {
four = 6;
nine = -16;
one = -6;
seven = -10;
six = -4;
two = -5;
zero = -10;
};
four.ar = {
four.ar = 6;
nine.ar = -16;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -10;
};
four.farsi = {
four.farsi = 6;
nine.farsi = -16;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -10;
};
g = {
j = 29;
question = -12;
quotedblright = -5;
quoteright = -5;
v = -4;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
hyphen = -8;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 4;
q = -12;
question = -6;
s = -4;
scaron = -4;
};
l = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -12;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
lam_alefvabovear = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 27;
lamvabovear = 17;
lamvabovear.init = 17;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 43;
uni0623 = 43;
uni0624 = 23;
uni0625 = 26;
uni0626 = 21;
uni0627 = 17;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 43;
uni0686 = 28;
uni0691 = 38;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 26;
uniFB7C = 28;
uniFDF2 = 17;
uniFE8B = 21;
uniFE97 = 26;
uniFE9B = 26;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 0;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
lam_alefvabovear.fina = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 27;
lamvabovear = 17;
lamvabovear.init = 17;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 43;
uni0624 = 23;
uni0625 = 26;
uni0626 = 21;
uni0627 = 17;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 43;
uni0686 = 28;
uni0691 = 38;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 26;
uniFB7C = 28;
uniFDF2 = 17;
uniFE8B = 21;
uniFE9B = 26;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 17;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine = {
comma = -27;
five = -3;
four = -8;
period = -27;
seven = -7;
six = -7;
three = -9;
two = -16;
};
nine.ar = {
comma = -27;
five.ar = -3;
four.ar = -8;
period = -27;
seven.ar = -7;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
comma = -27;
five.farsi = -3;
four.farsi = -8;
period = -27;
seven.farsi = -7;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oacute = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
ocircumflex = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
odieresis = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oe = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ograve = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
one = {
eight = -11;
five = -10;
four = -16;
nine = -28;
seven = -21;
six = -16;
three = -8;
zero = -24;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -16;
nine.ar = -28;
seven.ar = -21;
six.ar = -16;
three.ar = -8;
zero.ar = -24;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -16;
nine.farsi = -28;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -8;
zero.farsi = -24;
};
oslash = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
otilde = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
p = {
comma = -7;
f = -7;
fi = -7;
fl = -7;
period = -7;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -5;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -6;
zcaron = -6;
};
parenleft = {
comma = 16;
j = 51;
p = 13;
uni0631 = 4;
uni0632 = 4;
y = 38;
yacute = 38;
ydieresis = 38;
};
parenright = {
rehvabovear = -3;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -8;
uni0632 = -8;
uni0671 = 26;
uni0691 = -1;
uni0694 = -8;
uni0695 = -8;
uni0698 = -8;
};
period = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -1;
quoteright = -1;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
q = {
j = 34;
};
questiondown = {
j = 74;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0691 = 34;
uni0698 = 21;
uniFB68 = 30;
uniFE8B = 34;
uniFE97 = 27;
uniFE9B = 27;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
colon = -2;
period = -2;
rehvabovear = 17;
uni0691 = 50;
uni0698 = 21;
uniFB68 = 50;
uniFE8B = 34;
uniFE97 = 32;
uniFE9B = 32;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
quoteleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0698 = 27;
uniFE8B = 34;
uniFE97 = 5;
uniFE9B = 5;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
colon = -2;
comma = -23;
d = -31;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -12;
n = -12;
ntilde = -12;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
period = -2;
r = -12;
rehvabovear = 17;
s = -21;
scaron = -21;
uni0691 = 50;
uni0698 = 32;
uniFB68 = 50;
uniFE8B = 34;
uniFE97 = 32;
uniFE9B = 32;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
r = {
a = -10;
aacute = -10;
acircumflex = -10;
adieresis = -10;
ae = -10;
agrave = -10;
aring = -10;
atilde = -10;
c = -10;
ccedilla = -10;
comma = -15;
d = -10;
e = -10;
eacute = -10;
ecircumflex = -10;
edieresis = -10;
egrave = -10;
f = 4;
fi = 4;
fl = 4;
g = -10;
hyphen = -4;
o = -10;
oacute = -10;
ocircumflex = -10;
odieresis = -10;
oe = -10;
ograve = -10;
oslash = -10;
otilde = -10;
period = -15;
q = -10;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
space = 34;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvabovear = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 77;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvabovear.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvbelowar.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
s = {
comma = 5;
period = 5;
question = -18;
};
scaron = {
comma = 5;
period = 5;
question = -18;
};
seven = {
comma = -35;
eight = -6;
four = -19;
one = 5;
period = -35;
six = -17;
two = -12;
zero = -11;
};
seven.ar = {
comma = -35;
eight.ar = -6;
four.ar = -19;
one.ar = 5;
period = -35;
six.ar = -17;
two.ar = -12;
zero.ar = -11;
};
seven.farsi = {
comma = -35;
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
period = -35;
six.farsi = -17;
two.farsi = -12;
zero.farsi = -11;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -18;
two = -11;
zero = -4;
};
six.ar = {
comma = -9;
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -18;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
comma = -9;
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -18;
two.farsi = -11;
zero.farsi = -4;
};
space = {
uni0642 = 8;
uni0646 = 8;
uni064A = 8;
yehvabovear = 17;
};
sterling = {
eight = -5;
four = -12;
seven = 6;
six = -18;
};
t = {
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -18;
d = -9;
e = -8;
eacute = -8;
ecircumflex = -8;
edieresis = -8;
egrave = -8;
f = 4;
fi = 4;
fl = 4;
g = -9;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = -18;
q = -9;
question = -6;
t = 3;
x = -5;
};
three = {
comma = -7;
four = 9;
one = -7;
period = -7;
seven = -9;
two = -10;
zero = -6;
};
three.ar = {
comma = -7;
four.ar = 9;
one.ar = -7;
period = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
comma = -7;
four.farsi = 9;
one.farsi = -7;
period = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two = {
comma = -7;
eight = -4;
five = -5;
four = -16;
nine = -4;
period = -7;
seven = -5;
six = -16;
three = -5;
zero = -11;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -5;
four.ar = -16;
nine.ar = -4;
period = -7;
seven.ar = -5;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -5;
four.farsi = -16;
nine.farsi = -4;
period = -7;
seven.farsi = -5;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uni0622 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 38;
lamdotabovear.init = 38;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 56;
lamvabovear = 34;
lamvabovear.init = 26;
parenleft = 43;
uni0622 = 68;
uni0623 = 59;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0671 = 64;
uni0686 = 8;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 8;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 44;
};
uni0623 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 26;
lamdotabovear.init = 26;
lamthreedotsabovear = 51;
lamthreedotsabovear.init = 51;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 43;
uni0622 = 59;
uni0623 = 59;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 56;
uni0639 = 8;
uni063A = 8;
uni0671 = 59;
uni0686 = 8;
uni0691 = 33;
uni0698 = 44;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 44;
uniFE97 = 56;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 56;
};
uni0625 = {
Decoratedbracketleft = 30;
braceleft = 30;
bracketleft = 30;
parenleft = 30;
uni0625 = 64;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 11;
uni0639 = 8;
uni063A = 8;
uni0686 = 8;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 11;
};
uni0627 = {
braceleft = 0;
parenleft = 0;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0686 = 8;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 22;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 11;
};
uni062F = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 18;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0630 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0631 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 77;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0661 = 63;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 19;
uniFECB = 51;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0632 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -36;
uni0663 = -29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F3 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 19;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0637 = {
uni0621 = 28;
};
uni0638 = {
uni0621 = 28;
};
uni06440671 = {
aleflaminitial = 8;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
rehvabovear = 44;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 56;
uni0644 = 22;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 95;
uni0694 = 8;
uni0695 = 8;
uni0698 = 58;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 56;
uniFE8B = 72;
uniFE97 = 440;
uniFE9B = 57;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 56;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 8;
yehvabove_pehar = 8;
yehvabove_yehHamzaabovear = 8;
yehvabove_yehar = 8;
yehvabove_yehvar = 8;
yehvabovear = 18;
yehvabovear.init = 8;
};
uni06440671.fina = {
aleflaminitial = 8;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
rehvabovear = 44;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 56;
uni0644 = 22;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 95;
uni0694 = 8;
uni0695 = 8;
uni0698 = 58;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 56;
uniFE8B = 72;
uniFE97 = 57;
uniFE9B = 57;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 56;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 8;
yehvabove_pehar = 8;
yehvabove_yehHamzaabovear = 8;
yehvabove_yehar = 8;
yehvabove_yehvar = 51;
yehvabovear = 18;
yehvabovear.init = 8;
};
uni0660 = {
uni0666 = -101;
uni0669 = -17;
};
uni0661 = {
uni0664 = 22;
uni0667 = 17;
uni0668 = 4;
uni0691 = 5;
uni0698 = 5;
uni06F7 = 1;
};
uni0662 = {
uni0660 = -102;
uni0665 = -22;
uni0666 = 17;
uni0667 = 19;
uni0668 = -44;
uni0669 = -44;
uni06F9 = -2;
uniF806 = -57;
};
uni0663 = {
uni0660 = -62;
uni0665 = -8;
uni0666 = -13;
uni0667 = 21;
uni0668 = -31;
uni0669 = -17;
uniF806 = -67;
};
uni0664 = {
uni0666 = -4;
uni0668 = 5;
};
uni0665 = {
uni0663 = 13;
uni0664 = 17;
uni0666 = -17;
uni0667 = 4;
uni0668 = 3;
uni0669 = -17;
uniF806 = 2;
};
uni0666 = {
uni0664 = 33;
uni0666 = -17;
uni0667 = 17;
uni0668 = 4;
uni0691 = 36;
uni0695 = -34;
uni0698 = -7;
uniFB8B = 0;
uniFB8D = 4;
};
uni0667 = {
uni0632 = 4;
uni0661 = 17;
uni0662 = 7;
uni0663 = 27;
uni0664 = 17;
uni0665 = 4;
uni0666 = 28;
uni0667 = 54;
uni0668 = 1;
uni0669 = 12;
uni0691 = 53;
uni0694 = 4;
uni0695 = 4;
uni0698 = 11;
uni06F3 = 1;
};
uni0668 = {
uni0631 = 4;
uni0632 = 4;
uni0661 = 4;
uni0662 = 18;
uni0663 = 17;
uni0664 = 33;
uni0665 = 3;
uni0666 = -44;
uni0667 = 1;
uni0668 = 53;
uni0669 = -18;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06F7 = -2;
uniF806 = 2;
};
uni0669 = {
uni0664 = 22;
uni0666 = -33;
uni0667 = 4;
uni0668 = 17;
};
uni0671 = {
Decoratedbracketleft = 43;
braceleft = 51;
bracketleft = 51;
lamdotabovear = 43;
lamdotabovear.init = 43;
lamthreedotsabovear = 59;
lamthreedotsabovear.init = 59;
lamvabovear = 34;
lamvabovear.init = 34;
parenleft = 51;
uni0622 = 64;
uni0623 = 38;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0671 = 64;
uni0686 = 8;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 8;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 44;
};
uni0688 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0691 = {
Decoratedbracketleft = 117;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0667 = 29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 5;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 30;
uniFB7C = 0;
uniFB8D = 19;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 27;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE97 = 4;
uniFE9B = 4;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0694 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0695 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0666 = 0;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0698 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0661 = 5;
uni0662 = -17;
uni0667 = 4;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 17;
uniFB7C = 0;
uniFB8B = 19;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 3;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni06F1 = {
uni0691 = 5;
uni0698 = 4;
uni06F5 = 44;
uni06F6 = 22;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -7;
uni0666 = 15;
uni0667 = 1;
uni06F0 = -83;
uni06F2 = -28;
uni06F7 = 13;
uni06F8 = -26;
uni06F9 = -33;
uniF805 = -22;
uniF806 = -139;
};
uni06F3 = {
uni0632 = 4;
uni0664 = -1;
uni0698 = 7;
uni06F0 = -44;
uni06F5 = 17;
uni06F7 = 22;
uni06F8 = -28;
uniF806 = -78;
};
uni06F4 = {
uni0632 = 4;
uni0691 = 7;
uni0698 = 7;
uni06F5 = 33;
uni06F6 = 22;
uni06F8 = -22;
uniF806 = -25;
};
uni06F5 = {
uni06F1 = -33;
uni06F2 = -28;
uni06F3 = -28;
uni06F4 = -39;
uni06F5 = 3;
uni06F7 = -28;
uni06F8 = -33;
uni06F9 = -61;
uniF805 = -44;
uniF806 = -44;
};
uni06F6 = {
uni0668 = -2;
uni06F5 = 44;
uni06F8 = -17;
uniF806 = -33;
};
uni06F7 = {
uni0631 = 4;
uni0632 = 4;
uni0661 = 2;
uni0691 = 7;
uni0694 = 4;
uni0695 = 4;
uni0698 = 11;
uni06F1 = 17;
uni06F2 = 7;
uni06F3 = 27;
uni06F4 = 22;
uni06F5 = 44;
uni06F6 = 28;
uni06F7 = 54;
uni06F8 = 1;
uni06F9 = 12;
uniF805 = 17;
};
uni06F8 = {
uni0631 = 4;
uni0632 = 4;
uni0667 = -1;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 61;
uni06F6 = 61;
uni06F7 = 1;
uni06F8 = 53;
uni06F9 = -18;
uniF806 = 15;
};
uni06F9 = {
uni06F5 = 44;
uni06F6 = 17;
uni06F7 = 4;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni06F0 = -133;
uni06F1 = -22;
uni06F2 = -61;
uni06F3 = -22;
uni06F4 = -22;
uni06F5 = -22;
uni06F6 = -22;
uni06F7 = 17;
uni06F8 = -83;
uni06F9 = -61;
uniF805 = -22;
uniF806 = -222;
};
uniF806 = {
uni0660 = -81;
uni0661 = 20;
uni0662 = 20;
uni0666 = -46;
uni0667 = -48;
uni0668 = 32;
uni0669 = -110;
uni06F0 = -81;
uni06F1 = 25;
uni06F3 = 25;
uni06F4 = 25;
uni06F6 = 48;
uni06F7 = -48;
uni06F8 = 28;
uni06F9 = -130;
uniF805 = -22;
};
uniFB51 = {
Decoratedbracketleft = 43;
braceleft = 51;
bracketleft = 51;
lamdotabovear = 43;
lamdotabovear.init = 43;
lamthreedotsabovear = 59;
lamthreedotsabovear.init = 59;
lamvabovear = 34;
lamvabovear.init = 34;
parenleft = 51;
uni0622 = 64;
uni0623 = 68;
uni0632 = 44;
uni0671 = 64;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFB89 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFB8B = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
space = 16;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -17;
uni0663 = -17;
uni0666 = -17;
uni0667 = 4;
uni0686 = 25;
uni0691 = 79;
uni0694 = 78;
uni0695 = 78;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 17;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 3;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFB8D = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0667 = 29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 5;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 30;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 27;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE97 = 4;
uniFE9B = 4;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFE82 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 38;
lamdotabovear.init = 38;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 56;
lamvabovear = 34;
lamvabovear.init = 26;
parenleft = 43;
uni0622 = 68;
uni0623 = 30;
uni0632 = 44;
uni0671 = 64;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFE84 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 26;
lamdotabovear.init = 26;
lamthreedotsabovear = 51;
lamthreedotsabovear.init = 51;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 43;
uni0622 = 59;
uni0623 = 59;
uni0632 = 56;
uni0671 = 59;
uni0691 = 33;
uni0698 = 44;
uniFB68 = 33;
uniFE8B = 44;
uniFE97 = 56;
uniFE9B = 44;
uniFEE7 = 56;
};
uniFE88 = {
Decoratedbracketleft = 17;
braceleft = 17;
bracketleft = 17;
parenleft = 17;
uni0625 = 43;
uni0632 = 11;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 11;
};
uniFE8E = {
braceleft = 0;
parenleft = 0;
uni0632 = 11;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 11;
};
uniFE91 = {
uniFEAE = 1;
uniFEB0 = 1;
};
uniFEAA = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFEAC = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFEAE = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFEB0 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -36;
uni0663 = -29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F2 = -11;
uni06F3 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = 0;
uniFC0A = 0;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = 0;
uniFE91FE8A = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFEC2 = {
uni0621 = 28;
};
uniFEC6 = {
uni0621 = 28;
};
uniFEF5 = {
aleflaminitial = 8;
lamdotabovear = 19;
lamdotabovear.init = 45;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 45;
lamvabovear = 19;
lamvabovear.init = 45;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 45;
uni0644 = 19;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 88;
uni0694 = 8;
uni0695 = 8;
uni0698 = 56;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 72;
uniFB7C = 28;
uniFDF2 = 47;
uniFE8B = 71;
uniFE97 = 54;
uniFE9B = 54;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 45;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 5;
yehvabove_pehar = 5;
yehvabove_yehHamzaabovear = 5;
yehvabove_yehar = 5;
yehvabove_yehvar = 5;
yehvabovear = 18;
yehvabovear.init = 5;
};
uniFEF6 = {
aleflaminitial = 8;
lamdotabovear = 19;
lamdotabovear.init = 45;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 45;
lamvabovear = 19;
lamvabovear.init = 45;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 45;
uni0644 = 19;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 88;
uni0694 = 8;
uni0695 = 8;
uni0698 = 56;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 72;
uniFB7C = 28;
uniFDF2 = 47;
uniFE8B = 71;
uniFE97 = 54;
uniFE9B = 54;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 45;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 5;
yehvabove_pehar = 5;
yehvabove_yehHamzaabovear = 5;
yehvabove_yehar = 5;
yehvabove_yehvar = 5;
yehvabovear = 18;
yehvabovear.init = 5;
};
uniFEF7 = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 34;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 39;
lamvabovear = 17;
lamvabovear.init = 34;
rehvabovear = 34;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 34;
uni0626 = 21;
uni0627 = 34;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 89;
uni0694 = 8;
uni0695 = 8;
uni0698 = 44;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 34;
uniFE8B = 48;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 34;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 3;
yehvabove_pehar = 3;
yehvabove_yehHamzaabovear = 3;
yehvabove_yehar = 3;
yehvabove_yehvar = 37;
yehvabovear = 18;
yehvabovear.init = 3;
};
uniFEF8 = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 34;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 34;
lamvabovear = 17;
lamvabovear.init = 34;
rehvabovear = 34;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 34;
uni0626 = 21;
uni0627 = 34;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 34;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 89;
uni0694 = 8;
uni0695 = 8;
uni0698 = 44;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 34;
uniFE8B = 48;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 34;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 3;
yehvabove_pehar = 3;
yehvabove_yehHamzaabovear = 3;
yehvabove_yehar = 3;
yehvabove_yehvar = 37;
yehvabovear = 18;
yehvabovear.init = 3;
};
uniFEF9 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
uniFEFA = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
uniFEFB = {
aleflaminitial = 8;
lamdotabovear = 17;
lamthreedotsabovear = 17;
lamvabovear = 17;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE8B = 0;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 17;
};
uniFEFC = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 0;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 0;
lamvabovear = 17;
lamvabovear.init = 0;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 0;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE8B = 0;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 0;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -3;
hyphen = -6;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -12;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -12;
hyphen = -12;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = 7;
q = -12;
question = -12;
t = -3;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yen = {
five = 7;
seven = 12;
six = -6;
two = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -4;
one = -8;
period = -23;
seven = -19;
six = -5;
three = -7;
two = -17;
};
zero.ar = {
comma = -23;
five.ar = -4;
one.ar = -8;
period = -23;
seven.ar = -19;
six.ar = -5;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
comma = -23;
five.farsi = -4;
one.farsi = -8;
period = -23;
seven.farsi = -19;
six.farsi = -5;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
