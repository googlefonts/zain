{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:48:15 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    95,\012    95,\012    92,\012    92,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    98,\012    98,\012    90,\012    90,\012    556,\012    0,\012    556,\012    376,\012    0,\012    \"-160\",\012    556,\012    \"-10\",\012    556,\012    384,\012    \"-10\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    566,\012    228,\012    566,\012    221\012)";
}
);
iconName = Bold;
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = Bold;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,-206,l),
(79,-206,l),
(79,497,l),
(445,497,l)
);
},
{
closed = 1;
nodes = (
(506,-268,l),
(506,559,l),
(18,559,l),
(18,-268,l)
);
},
{
closed = 1;
nodes = (
(293,-70,o),
(293,-48,qs),
(293,-26,o),
(265,3,o),
(243,3,qs),
(221,3,o),
(192,-26,o),
(192,-48,qs),
(192,-70,o),
(221,-100,o),
(243,-100,qs),
(264,-100,o)
);
},
{
closed = 1;
nodes = (
(217,40,qs),
(268,40,ls),
(276,40,o),
(276,49,qs),
(276,67,ls),
(276,86,o),
(293,99,qs),
(359,148,o),
(409,219,o),
(409,264,qs),
(409,320,o),
(370,353,qs),
(328,390,o),
(251,390,qs),
(197,390,o),
(148,368,qs),
(100,348,o),
(114,305,qs),
(120,286,ls),
(122,279,o),
(129,279,qs),
(133,279,o),
(140,283,qs),
(196,314,o),
(250,314,qs),
(324,314,o),
(324,252,qs),
(324,214,o),
(271,171,qs),
(232,139,o),
(208,103,o),
(208,77,qs),
(208,49,ls),
(208,40,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
0 7 6 9 6 7 9 128 0 9 5 6 9 5 126 0 2 10 1 1 8 2 1 103 0 8 0 6 7 8 6 105 0 5 11 1 4 0 5 4 105 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 9 8 0 0 53 50 40 38 33 31 29 27 15 13 8 19 9 19 7 6 5 4 0 3 0 3 17 12 6 23 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 156;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,25,o),
(27,51,qs),
(27,77,o),
(61,111,o),
(86,111,qs),
(112,111,o),
(145,77,o),
(145,51,qs),
(145,24,o),
(112,-10,o),
(86,-10,qs),
(61,-10,o)
);
},
{
closed = 1;
nodes = (
(37,556,o),
(47,556,qs),
(56,556,ls),
(135,556,o),
(134,468,qs),
(126,166,ls),
(126,155,o),
(116,155,qs),
(58,155,ls),
(47,155,o),
(47,166,qs),
(37,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 2 3 97 0 3 3 39 77 0 1 1 0 97 4 1 0 0 46 0 78 1 0 22 19 16 13 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 175;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,556,o),
(38,556,qs),
(55,556,ls),
(97,556,o),
(124,520,o),
(119,473,qs),
(110,372,l),
(108,362,o),
(99,362,qs),
(54,362,ls),
(45,362,o),
(44,372,qs),
(27,544,ls)
);
},
{
closed = 1;
nodes = (
(168,556,o),
(180,556,qs),
(197,556,ls),
(240,556,o),
(268,521,o),
(263,473,qs),
(254,372,l),
(252,362,o),
(243,362,qs),
(197,362,ls),
(187,362,o),
(186,372,qs),
(170,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
2 1 0 0 1 97 3 1 1 1 39 0 78 52 51 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,143,o),
(24,154,qs),
(36,199,ls),
(40,210,o),
(49,210,qs),
(112,210,l),
(145,342,l),
(82,342,ls),
(71,342,o),
(74,353,qs),
(85,398,ls),
(88,408,o),
(98,408,qs),
(161,408,l),
(195,544,ls),
(198,556,o),
(208,556,qs),
(231,556,ls),
(286,556,o),
(273,493,qs),
(251,408,l),
(383,408,l),
(415,544,ls),
(418,556,o),
(430,556,qs),
(451,556,ls),
(508,556,o),
(493,493,qs),
(471,408,l),
(535,408,ls),
(547,408,o),
(544,398,qs),
(533,353,ls),
(530,342,o),
(519,342,qs),
(456,342,l),
(423,210,l),
(485,210,ls),
(498,210,o),
(494,199,q),
(483,154,l),
(479,143,o),
(469,143,qs),
(406,143,l),
(375,11,l),
(371,0,o),
(364,0,qs),
(293,0,ls),
(283,0,o),
(285,11,qs),
(316,143,l),
(186,143,l),
(153,11,ls),
(150,0,o),
(142,0,qs),
(72,0,ls),
(61,0,o),
(64,11,qs),
(95,143,l),
(33,143,ls)
);
},
{
closed = 1;
nodes = (
(366,342,l),
(236,342,l),
(202,210,l),
(333,210,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
10 8 2 6 14 11 2 5 4 6 5 104 17 15 12 3 4 16 13 3 3 1 0 4 1 103 9 1 7 7 39 77 2 1 0 0 40 0 78 60 60 0 0 60 63 60 63 62 61 0 59 0 58 55 53 52 50 47 45 43 40 18 50 35 33 35 34 50 18 50 18 9 31 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,276,o),
(42,347,o),
(42,408,qs),
(42,470,o),
(85,512,qs),
(132,559,o),
(212,566,q),
(212,611,ls),
(212,621,o),
(223,621,qs),
(255,621,ls),
(266,621,o),
(266,611,qs),
(266,566,l),
(318,563,o),
(370,543,qs),
(424,523,o),
(411,469,qs),
(406,449,ls),
(403,438,o),
(396,438,qs),
(390,438,o),
(380,443,qs),
(326,471,o),
(266,478,q),
(266,321,l),
(341,296,o),
(372,275,qs),
(433,234,o),
(433,163,qs),
(433,100,o),
(393,55,qs),
(348,3,o),
(266,-8,q),
(266,-54,ls),
(266,-65,o),
(255,-65,qs),
(223,-65,ls),
(212,-65,o),
(212,-54,qs),
(212,-10,l),
(128,-7,o),
(76,33,qs),
(24,74,o),
(24,131,qs),
(24,152,o),
(38,152,qs),
(45,152,o),
(50,147,qs),
(119,77,o),
(212,76,q),
(212,244,l)
);
},
{
closed = 1;
nodes = (
(338,94,o),
(338,152,qs),
(338,195,o),
(266,225,q),
(266,79,l)
);
},
{
closed = 1;
nodes = (
(135,471,o),
(135,413,qs),
(135,368,o),
(212,339,q),
(212,479,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
44 1 5 6 61 26 2 4 5 57 52 51 25 4 1 4 56 1 0 1 17 1 2 0 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 6 0 3 6 3 101 0 5 5 39 77 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 6 4 6 5 4 128 0 4 1 6 4 1 126 0 1 0 6 1 0 126 0 6 0 3 6 3 101 0 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
50 21 46 50 20 34 16 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(691,162,qs),
(691,268,o),
(620,268,qs),
(548,268,o),
(548,162,qs),
(548,59,o),
(620,59,qs),
(691,59,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,498,o),
(175,498,qs),
(105,498,o),
(105,393,qs),
(105,289,o),
(175,289,qs),
(248,289,o)
);
},
{
closed = 1;
nodes = (
(203,11,qs),
(495,544,l),
(503,556,o),
(512,556,qs),
(530,556,ls),
(559,556,o),
(576,517,o),
(561,489,qs),
(298,11,l),
(293,0,o),
(282,0,qs),
(208,0,ls),
(196,0,o)
);
},
{
closed = 1;
nodes = (
(519,33,qs),
(473,81,o),
(473,163,qs),
(473,235,o),
(508,281,qs),
(549,334,o),
(620,334,qs),
(681,334,o),
(720,293,qs),
(766,246,o),
(766,163,qs),
(766,92,o),
(731,45,qs),
(690,-9,o),
(620,-9,qs),
(559,-9,o)
);
},
{
closed = 1;
nodes = (
(75,264,qs),
(31,312,o),
(31,396,qs),
(31,467,o),
(65,513,qs),
(105,566,o),
(175,566,qs),
(237,566,o),
(276,525,qs),
(322,478,o),
(322,396,qs),
(322,323,o),
(287,276,qs),
(247,223,o),
(175,223,qs),
(114,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 3 3 5 97 9 1 5 5 39 77 10 1 0 0 4 97 13 6 12 3 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 0 3 3 9 97 0 9 9 39 77 10 1 0 0 4 97 13 6 12 3 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 0 3 3 9 97 0 9 9 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 46 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 46 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
46 45 30 29 18 16 9 8 1 0 54 52 45 60 46 60 38 36 29 44 30 44 25 22 16 28 18 28 13 11 8 15 9 15 5 3 0 7 1 7 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,278,ls),
(430,289,o),
(444,289,qs),
(512,289,ls),
(517,289,o),
(520,282,o),
(517,279,q),
(418,138,l),
(522,12,ls),
(524,9,o),
(521,0,o),
(517,0,qs),
(460,0,ls),
(412,0,o),
(387,32,qs),
(360,64,l),
(302,-7,o),
(209,-7,qs),
(136,-7,o),
(89,32,qs),
(36,76,o),
(36,150,qs),
(36,200,o),
(92,272,o),
(155,304,q),
(121,342,o),
(93,400,o),
(93,433,qs),
(93,489,o),
(132,525,qs),
(178,566,o),
(257,566,qs),
(327,566,o),
(371,536,qs),
(420,501,o),
(420,438,qs),
(420,356,o),
(290,284,q),
(367,198,l)
);
},
{
closed = 1;
nodes = (
(327,433,qs),
(327,459,o),
(289,492,o),
(259,492,qs),
(230,492,o),
(192,459,o),
(192,433,qs),
(192,394,o),
(245,342,q),
(327,384,o)
);
},
{
closed = 1;
nodes = (
(168,223,o),
(134,180,o),
(134,152,qs),
(134,116,o),
(180,72,o),
(218,72,qs),
(246,72,o),
(286,94,o),
(312,123,q),
(208,246,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
13 1 3 4 58 38 31 30 4 5 3 22 1 1 5 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
13 1 3 4 58 38 31 30 4 5 3 22 1 2 5 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 46 77 0 5 5 1 97 2 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 2 95 0 2 2 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 95 0 2 2 40 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 39 55 35 44 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,556,o),
(38,556,qs),
(55,556,ls),
(97,556,o),
(124,520,o),
(119,473,qs),
(110,372,l),
(108,362,o),
(99,362,qs),
(54,362,ls),
(45,362,o),
(44,372,qs),
(27,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 39 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 147;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,556,qs),
(180,669,o),
(275,697,q),
(285,699,o),
(285,691,qs),
(285,689,o),
(285,686,qs),
(286,674,o),
(285,669,q),
(284,627,o),
(261,605,qs),
(254,599,o),
(251,597,q),
(191,536,o),
(136,383,o),
(136,276,qs),
(136,170,o),
(191,16,o),
(251,-44,q),
(254,-46,o),
(257,-50,q),
(274,-65,o),
(285,-91,o),
(285,-117,q),
(286,-122,o),
(285,-132,qs),
(285,-136,o),
(285,-138,qs),
(285,-147,o),
(275,-144,qs),
(195,-121,o),
(133,-32,qs),
(48,91,o),
(49,276,qs),
(48,440,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,-4,qs),
(149,-117,o),
(55,-144,qs),
(45,-147,o),
(45,-138,qs),
(45,-136,o),
(44,-133,q),
(44,-122,o),
(45,-117,q),
(45,-75,o),
(69,-53,qs),
(76,-46,o),
(78,-44,qs),
(139,16,o),
(194,170,o),
(193,276,qs),
(194,383,o),
(139,536,o),
(78,597,qs),
(76,599,o),
(72,603,qs),
(56,617,o),
(45,644,o),
(45,669,q),
(44,674,o),
(44,684,q),
(45,689,o),
(45,691,qs),
(45,699,o),
(55,697,q),
(135,673,o),
(197,584,qs),
(282,462,o),
(281,276,qs),
(282,113,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
30 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,394,o),
(31,406,q),
(50,461,ls),
(53,472,o),
(63,467,qs),
(152,431,l),
(145,527,l),
(143,538,o),
(156,538,qs),
(217,538,ls),
(229,538,o),
(227,527,q),
(221,431,l),
(310,467,ls),
(320,471,o),
(322,461,q),
(341,406,l),
(343,394,o),
(335,392,qs),
(242,368,l),
(302,292,ls),
(308,284,o),
(301,278,q),
(253,245,ls),
(244,238,o),
(238,247,qs),
(186,331,l),
(135,247,ls),
(128,237,o),
(120,245,q),
(73,278,ls),
(63,284,o),
(70,292,qs),
(132,368,l),
(38,392,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
28 22 21 14 7 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,231,o),
(33,242,qs),
(33,299,ls),
(33,311,o),
(44,311,qs),
(166,311,l),
(166,446,ls),
(166,457,o),
(177,457,qs),
(218,457,o),
(252,423,o),
(252,383,qs),
(252,311,l),
(374,311,ls),
(385,311,o),
(385,299,qs),
(385,242,ls),
(385,231,o),
(374,231,qs),
(252,231,l),
(252,96,ls),
(252,86,o),
(241,86,qs),
(177,86,ls),
(166,86,o),
(166,96,qs),
(166,231,l),
(44,231,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 95 0 0 3 0 79 0 0 0 27 0 26 34 35 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,28,o),
(22,51,qs),
(22,77,o),
(56,111,o),
(81,111,qs),
(108,111,o),
(140,78,o),
(140,50,qs),
(140,-31,o),
(58,-96,qs),
(51,-101,o),
(46,-96,qs),
(25,-74,o),
(45,-53,qs),
(66,-32,o),
(71,-9,q),
(49,-5,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,169,qs),
(33,238,ls),
(33,249,o),
(44,249,qs),
(254,249,ls),
(265,249,o),
(265,238,qs),
(265,169,ls),
(265,158,o),
(254,158,qs),
(44,158,ls),
(33,158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,75,o),
(157,49,qs),
(157,24,o),
(121,-13,o),
(96,-13,qs),
(71,-13,o),
(35,24,o),
(35,49,qs),
(35,75,o),
(71,112,o),
(96,112,qs),
(121,112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,11,qs),
(231,544,ls),
(236,556,o),
(248,556,qs),
(260,556,ls),
(288,556,o),
(308,513,o),
(295,482,qs),
(96,11,l),
(94,0,o),
(80,0,qs),
(12,0,ls),
(0,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,119,qs),
(363,166,o),
(363,278,qs),
(363,379,o),
(309,474,o),
(251,474,qs),
(199,474,o),
(173,436,qs),
(140,390,o),
(140,278,qs),
(140,176,o),
(194,82,o),
(251,82,qs),
(303,82,o)
);
},
{
closed = 1;
nodes = (
(103,55,qs),
(42,128,o),
(42,278,qs),
(42,407,o),
(90,481,qs),
(144,566,o),
(251,566,qs),
(344,566,o),
(398,501,qs),
(460,426,o),
(460,278,qs),
(460,148,o),
(413,74,qs),
(360,-10,o),
(251,-10,qs),
(156,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 8 6 0 13 1 13 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,428,ls),
(32,423,o),
(32,436,qs),
(32,507,ls),
(32,520,o),
(45,526,q),
(102,546,ls),
(130,556,o),
(153,556,qs),
(173,556,ls),
(233,556,o),
(233,494,qs),
(233,89,l),
(285,89,ls),
(344,89,o),
(344,34,qs),
(344,14,ls),
(344,0,o),
(330,0,qs),
(42,0,ls),
(31,0,o),
(31,11,qs),
(31,78,ls),
(31,89,o),
(42,89,qs),
(136,89,l),
(136,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 39 77 2 1 0 0 1 96 0 1 1 40 1 78 50 35 51 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,89,o),
(413,35,qs),
(413,14,ls),
(413,0,o),
(400,0,qs),
(43,0,ls),
(32,0,o),
(32,11,qs),
(32,104,o),
(81,168,qs),
(112,210,o),
(184,257,qs),
(244,296,o),
(260,310,qs),
(309,351,o),
(309,403,qs),
(309,439,o),
(260,479,o),
(215,479,qs),
(152,479,o),
(81,441,qs),
(74,437,o),
(69,437,qs),
(62,437,o),
(60,444,qs),
(51,467,l),
(36,521,o),
(91,542,qs),
(157,566,o),
(224,566,qs),
(301,566,o),
(349,532,qs),
(408,490,o),
(408,408,qs),
(408,342,o),
(364,289,qs),
(335,253,o),
(271,210,qs),
(212,169,o),
(201,160,qs),
(154,124,o),
(150,89,q),
(355,89,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 59 35 21 43 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,162,qs),
(410,91,o),
(363,45,qs),
(307,-10,o),
(210,-10,qs),
(126,-10,o),
(73,32,qs),
(21,73,o),
(21,126,qs),
(21,150,o),
(37,150,qs),
(46,150,o),
(54,141,qs),
(118,77,o),
(202,77,qs),
(253,77,o),
(313,124,o),
(313,165,qs),
(313,242,o),
(215,242,qs),
(155,242,ls),
(126,242,o),
(100,264,o),
(100,289,qs),
(100,314,ls),
(100,329,o),
(114,329,qs),
(207,329,ls),
(294,329,o),
(294,407,qs),
(294,481,o),
(203,481,qs),
(136,481,o),
(71,443,qs),
(62,437,o),
(57,437,qs),
(51,437,o),
(48,446,qs),
(40,467,ls),
(22,520,o),
(80,542,qs),
(142,566,o),
(209,566,qs),
(284,566,o),
(332,534,qs),
(393,494,o),
(393,417,qs),
(393,375,o),
(348,308,o),
(309,291,q),
(410,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 38 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,118,o),
(13,129,qs),
(13,182,ls),
(13,196,o),
(23,213,qs),
(230,533,ls),
(244,556,o),
(270,556,qs),
(313,556,ls),
(372,556,o),
(372,497,qs),
(372,207,l),
(404,207,ls),
(461,207,o),
(461,151,qs),
(461,132,ls),
(461,118,o),
(448,118,qs),
(372,118,l),
(372,11,ls),
(372,0,o),
(362,0,qs),
(286,0,ls),
(276,0,o),
(276,11,qs),
(276,118,l),
(24,118,ls)
);
},
{
closed = 1;
nodes = (
(276,448,l),
(117,207,l),
(276,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,361,o),
(232,361,qs),
(313,361,o),
(363,319,qs),
(419,272,o),
(419,185,qs),
(419,103,o),
(367,49,qs),
(308,-10,o),
(215,-10,qs),
(136,-10,o),
(83,27,qs),
(26,67,o),
(26,123,qs),
(26,148,o),
(42,148,qs),
(50,148,o),
(59,138,qs),
(118,77,o),
(205,77,qs),
(260,77,o),
(322,131,o),
(322,181,qs),
(322,225,o),
(262,276,o),
(209,276,qs),
(136,276,o),
(65,252,qs),
(51,247,o),
(51,261,qs),
(51,544,ls),
(51,556,o),
(61,556,qs),
(329,556,ls),
(388,556,o),
(388,499,qs),
(388,481,ls),
(388,467,o),
(373,467,qs),
(144,467,l),
(144,349,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 37 51 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,374,qs),
(336,374,o),
(388,325,qs),
(444,271,o),
(444,192,qs),
(444,108,o),
(396,54,qs),
(340,-10,o),
(244,-10,qs),
(159,-10,o),
(102,37,qs),
(37,91,o),
(37,180,qs),
(37,219,o),
(66,299,o),
(105,363,qs),
(223,556,ls),
(229,566,o),
(240,566,qs),
(272,566,o),
(284,539,qs),
(299,505,o),
(274,462,qs),
(215,367,l),
(242,374,o)
);
},
{
closed = 1;
nodes = (
(160,110,qs),
(190,77,o),
(243,77,qs),
(286,77,o),
(315,103,qs),
(348,133,o),
(348,183,qs),
(348,227,o),
(322,257,qs),
(292,292,o),
(241,292,qs),
(197,292,o),
(167,265,qs),
(134,234,o),
(134,183,qs),
(134,139,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 39 77 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 2 0 133 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,467,o),
(23,477,qs),
(23,544,ls),
(23,556,o),
(34,556,qs),
(329,556,ls),
(387,556,o),
(387,499,qs),
(387,487,ls),
(387,465,o),
(375,437,qs),
(183,12,ls),
(178,0,o),
(165,0,qs),
(85,0,ls),
(74,0,o),
(79,11,qs),
(285,467,l),
(34,467,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 17 54 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,98,qs),
(184,70,o),
(239,70,qs),
(288,70,o),
(348,118,o),
(348,158,qs),
(348,200,o),
(289,250,o),
(239,250,qs),
(187,250,o),
(128,200,o),
(128,158,qs),
(128,121,o)
);
},
{
closed = 1;
nodes = (
(194,329,o),
(239,329,qs),
(282,329,o),
(335,372,o),
(335,408,qs),
(335,444,o),
(283,487,o),
(239,487,qs),
(193,487,o),
(140,444,o),
(140,408,qs),
(140,372,o)
);
},
{
closed = 1;
nodes = (
(46,419,qs),
(46,482,o),
(94,522,qs),
(147,566,o),
(239,566,qs),
(317,566,o),
(369,532,qs),
(430,491,o),
(430,419,qs),
(430,331,o),
(344,292,q),
(445,258,o),
(445,157,qs),
(445,89,o),
(398,44,qs),
(341,-10,o),
(239,-10,qs),
(148,-10,o),
(92,32,qs),
(31,78,o),
(31,157,qs),
(31,258,o),
(131,292,q),
(46,331,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 39 77 0 1 1 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 1 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 37 36 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,181,qs),
(137,181,o),
(86,229,qs),
(31,283,o),
(31,362,qs),
(31,446,o),
(81,502,qs),
(139,566,o),
(235,566,qs),
(319,566,o),
(374,519,qs),
(438,466,o),
(438,376,qs),
(438,335,o),
(408,255,o),
(369,193,qs),
(254,2,ls),
(246,-10,o),
(235,-10,qs),
(202,-10,o),
(190,19,qs),
(176,52,o),
(202,92,qs),
(262,191,l),
(231,181,o)
);
},
{
closed = 1;
nodes = (
(307,291,qs),
(340,322,o),
(340,373,qs),
(340,420,o),
(282,478,o),
(234,478,qs),
(189,478,o),
(160,452,qs),
(127,423,o),
(127,373,qs),
(127,323,o),
(185,264,o),
(234,264,qs),
(277,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 38 26 38 38 40 36 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,293,o),
(160,267,qs),
(160,241,o),
(125,205,o),
(99,205,qs),
(74,205,o),
(38,242,o),
(38,267,qs),
(38,293,o),
(74,329,o),
(99,329,qs),
(125,329,o)
);
},
{
closed = 1;
nodes = (
(160,75,o),
(160,49,qs),
(160,24,o),
(125,-13,o),
(99,-13,qs),
(74,-13,o),
(38,24,o),
(38,49,qs),
(38,75,o),
(74,112,o),
(99,112,qs),
(125,112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 198;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,253,o),
(32,279,qs),
(32,305,o),
(66,339,o),
(91,339,qs),
(117,339,o),
(150,305,o),
(150,279,qs),
(150,253,o),
(116,219,o),
(91,219,qs),
(66,219,o)
);
},
{
closed = 1;
nodes = (
(32,28,o),
(32,51,qs),
(32,77,o),
(66,111,o),
(91,111,qs),
(118,111,o),
(150,78,o),
(150,50,qs),
(150,-31,o),
(68,-96,qs),
(61,-101,o),
(56,-96,qs),
(35,-74,o),
(55,-53,qs),
(76,-32,o),
(81,-9,q),
(59,-5,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 3 1 0 1 0 81 1 0 24 22 7 5 0 11 1 11 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 182;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,173,o),
(413,127,o),
(413,86,qs),
(413,83,ls),
(413,71,o),
(402,76,qs),
(44,230,l),
(33,236,o),
(33,248,qs),
(33,293,ls),
(33,304,o),
(44,309,qs),
(400,462,ls),
(413,467,o),
(413,457,qs),
(413,393,ls),
(413,380,o),
(398,373,qs),
(150,271,l),
(345,189,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,329,qs),
(33,389,ls),
(33,399,o),
(44,399,qs),
(324,399,ls),
(385,399,o),
(385,343,qs),
(385,329,ls),
(385,319,o),
(374,319,qs),
(44,319,ls),
(33,319,o)
);
},
{
closed = 1;
nodes = (
(33,151,qs),
(33,210,ls),
(33,221,o),
(44,221,qs),
(324,221,ls),
(385,221,o),
(385,163,qs),
(385,151,ls),
(385,140,o),
(374,140,qs),
(44,140,ls),
(33,140,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 1 4 1 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 5 1 2 3 2 79 14 12 2 0 20 17 12 23 14 23 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,380,o),
(39,393,qs),
(39,457,ls),
(39,466,o),
(51,462,q),
(408,309,ls),
(418,304,o),
(418,293,qs),
(418,248,ls),
(418,234,o),
(408,230,qs),
(49,76,ls),
(39,71,o),
(39,83,qs),
(39,86,ls),
(39,127,o),
(69,173,o),
(106,189,qs),
(301,271,l),
(54,373,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,25,o),
(114,51,qs),
(114,77,o),
(148,111,o),
(174,111,qs),
(199,111,o),
(233,77,o),
(233,51,qs),
(233,25,o),
(199,-10,o),
(174,-10,qs),
(148,-10,o)
);
},
{
closed = 1;
nodes = (
(132,225,o),
(146,249,qs),
(159,270,o),
(194,298,qs),
(241,338,o),
(269,377,o),
(269,404,qs),
(269,439,o),
(223,477,o),
(182,477,qs),
(118,477,o),
(52,441,qs),
(44,436,o),
(39,436,qs),
(32,436,o),
(29,444,qs),
(22,467,ls),
(14,494,o),
(32,528,o),
(62,541,qs),
(120,566,o),
(184,566,qs),
(262,566,o),
(310,533,qs),
(369,494,o),
(369,418,qs),
(369,363,o),
(335,317,qs),
(307,280,o),
(232,224,qs),
(213,210,o),
(213,187,qs),
(213,166,ls),
(213,155,o),
(203,155,qs),
(143,155,ls),
(132,155,o),
(132,166,qs),
(132,199,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 5 5 3 97 0 3 3 39 77 0 1 1 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 3 0 5 4 3 5 105 0 1 1 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 41 39 36 35 29 27 16 13 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,145,qs),
(460,178,o),
(460,239,qs),
(460,279,o),
(417,324,o),
(381,324,qs),
(339,324,o),
(313,295,qs),
(283,262,o),
(283,208,qs),
(283,165,o),
(327,114,o),
(363,114,qs),
(406,114,o)
);
},
{
closed = 1;
nodes = (
(341,31,qs),
(281,31,o),
(240,74,qs),
(191,126,o),
(191,214,qs),
(191,288,o),
(235,343,qs),
(288,408,o),
(368,408,qs),
(445,408,o),
(477,349,q),
(491,401,o),
(550,401,qs),
(553,401,ls),
(564,401,o),
(562,389,qs),
(541,163,ls),
(538,141,o),
(538,132,qs),
(538,107,o),
(561,107,qs),
(592,107,o),
(614,139,qs),
(642,181,o),
(642,262,qs),
(642,365,o),
(581,426,qs),
(514,493,o),
(393,493,qs),
(284,493,o),
(209,424,qs),
(124,345,o),
(124,221,qs),
(124,97,o),
(193,22,qs),
(270,-62,o),
(406,-62,qs),
(534,-62,o),
(620,1,qs),
(630,9,o),
(636,9,qs),
(645,9,o),
(645,-3,qs),
(645,-39,o),
(590,-80,qs),
(513,-137,o),
(398,-137,qs),
(247,-137,o),
(150,-51,qs),
(39,47,o),
(39,220,qs),
(39,356,o),
(130,455,qs),
(235,568,o),
(395,568,qs),
(522,568,o),
(613,499,qs),
(725,414,o),
(725,267,qs),
(725,174,o),
(678,109,qs),
(624,32,o),
(540,32,qs),
(509,32,o),
(462,71,o),
(461,98,q),
(422,31,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
69 1 1 9 14 1 2 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
69 1 1 9 14 1 2 8 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 2 5 6 128 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 77 0 1 1 9 97 10 1 9 9 48 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 2 5 6 128 10 1 9 0 1 0 9 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 10 0 1 0 10 1 105 12 1 0 8 2 0 89 0 8 11 1 2 5 8 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 12 1 0 8 2 0 89 0 8 11 1 2 5 8 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 80 78 72 70 68 65 60 58 52 50 44 42 39 38 34 32 26 24 18 16 8 6 0 13 1 13 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 22 19 16 13 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,86,o),
(358,124,o),
(358,167,qs),
(358,205,o),
(309,249,o),
(266,249,qs),
(155,249,l),
(155,86,l),
(265,86,ls)
);
},
{
closed = 1;
nodes = (
(340,332,o),
(340,403,qs),
(340,469,o),
(263,469,qs),
(155,469,l),
(155,332,l),
(268,332,ls)
);
},
{
closed = 1;
nodes = (
(459,205,o),
(459,157,qs),
(459,87,o),
(419,47,qs),
(372,0,o),
(276,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(259,556,ls),
(339,556,o),
(385,523,qs),
(438,485,o),
(438,412,qs),
(438,325,o),
(352,289,q),
(400,277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
7 1 3 0 0 1 3 0 103 0 2 2 4 95 0 4 4 39 77 6 1 1 1 5 95 0 5 5 40 5 78 9 9 0 0 30 27 24 21 9 15 9 14 12 10 0 8 0 7 33 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,57,qs),
(44,134,o),
(44,276,qs),
(44,400,o),
(109,478,qs),
(182,566,o),
(308,566,qs),
(379,566,o),
(437,541,q),
(464,527,o),
(482,494,o),
(476,467,qs),
(470,442,ls),
(467,431,o),
(460,431,qs),
(456,431,o),
(445,436,qs),
(378,472,o),
(310,472,qs),
(238,472,o),
(196,430,qs),
(144,378,o),
(144,276,qs),
(144,188,o),
(185,138,qs),
(230,84,o),
(313,84,qs),
(403,84,o),
(461,148,qs),
(468,157,o),
(477,157,qs),
(492,157,o),
(492,133,qs),
(492,91,o),
(456,51,qs),
(401,-10,o),
(301,-10,qs),
(192,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 5 0 3 4 5 3 105 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 31 29 23 21 19 17 11 9 7 5 0 37 1 37 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,91,o),
(413,283,qs),
(413,374,o),
(371,418,qs),
(326,464,o),
(228,464,qs),
(155,464,l),
(155,91,l),
(232,91,ls)
);
},
{
closed = 1;
nodes = (
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(230,556,ls),
(347,556,o),
(418,504,qs),
(514,436,o),
(514,286,qs),
(514,150,o),
(445,78,qs),
(371,0,o),
(222,0,qs),
(68,0,ls),
(57,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 5 1 2 2 40 2 78 11 9 0 0 20 17 9 23 11 23 0 8 0 7 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,91,o),
(392,35,qs),
(392,14,ls),
(392,0,o),
(379,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(326,556,ls),
(384,556,o),
(384,500,qs),
(384,479,ls),
(384,465,o),
(370,465,qs),
(155,465,l),
(155,323,l),
(306,323,ls),
(364,323,o),
(364,268,qs),
(364,246,ls),
(364,232,o),
(351,232,qs),
(155,232,l),
(155,91,l),
(334,91,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 51 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(326,556,ls),
(384,556,o),
(384,499,qs),
(384,478,ls),
(384,464,o),
(370,464,qs),
(155,464,l),
(155,319,l),
(303,319,ls),
(362,319,o),
(362,264,qs),
(362,244,ls),
(362,230,o),
(348,230,qs),
(155,230,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 51 51 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,215,ls),
(290,215,o),
(290,271,qs),
(290,289,ls),
(290,304,o),
(303,304,qs),
(506,304,ls),
(517,304,o),
(517,291,qs),
(517,95,ls),
(517,70,o),
(497,54,qs),
(415,-10,o),
(312,-10,qs),
(202,-10,o),
(132,50,qs),
(44,125,o),
(44,279,qs),
(44,403,o),
(108,479,qs),
(182,566,o),
(317,566,qs),
(392,566,o),
(452,542,qs),
(481,531,o),
(500,497,o),
(492,469,qs),
(487,446,ls),
(483,433,o),
(476,433,qs),
(473,433,o),
(463,438,qs),
(461,439,o),
(460,439,q),
(397,473,o),
(324,473,qs),
(147,473,o),
(147,274,qs),
(147,189,o),
(184,139,qs),
(227,82,o),
(311,82,qs),
(374,82,o),
(425,117,q),
(425,215,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 103 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 103 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 53 38 38 36 36 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,468,qs),
(155,319,l),
(374,319,l),
(374,544,ls),
(374,556,o),
(385,556,qs),
(394,556,ls),
(472,556,o),
(472,468,qs),
(472,11,ls),
(472,0,o),
(462,0,qs),
(385,0,ls),
(374,0,o),
(374,11,qs),
(374,230,l),
(155,230,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 3 0 0 1 3 0 103 4 1 2 2 39 77 5 1 1 1 40 1 78 51 50 18 51 50 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,469,qs),
(155,11,ls),
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,72,qs),
(153,72,o),
(153,135,qs),
(153,544,ls),
(153,556,o),
(164,556,qs),
(173,556,ls),
(252,556,o),
(252,468,qs),
(252,131,ls),
(252,69,o),
(221,32,qs),
(186,-10,o),
(117,-10,qs),
(69,-10,o),
(5,45,o),
(5,87,qs),
(5,104,o),
(17,104,qs),
(21,104,o),
(26,101,q),
(60,72,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 2 3 2 0 3 128 0 2 2 39 77 0 3 3 1 98 0 1 1 46 1 78 35 53 35 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,468,qs),
(155,304,l),
(356,543,ls),
(366,556,o),
(377,556,qs),
(459,556,ls),
(463,556,o),
(466,547,o),
(463,544,qs),
(291,339,l),
(489,12,l),
(495,0,o),
(483,0,qs),
(396,0,ls),
(382,0,o),
(376,12,q),
(225,262,l),
(155,179,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
16 9 8 1 0 5 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 52 53 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,91,o),
(361,35,qs),
(361,14,ls),
(361,0,o),
(348,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,468,qs),
(155,91,l),
(303,91,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 15 0 14 51 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(442,556,o),
(452,556,qs),
(508,556,ls),
(538,556,o),
(576,521,o),
(577,493,qs),
(603,11,ls),
(603,0,o),
(596,0,qs),
(517,0,ls),
(507,0,o),
(507,11,qs),
(486,401,l),
(369,11,l),
(367,0,o),
(356,0,qs),
(282,0,ls),
(273,0,o),
(269,11,qs),
(157,398,l),
(136,11,ls),
(136,0,o),
(127,0,qs),
(49,0,ls),
(40,0,o),
(40,11,qs),
(70,544,ls),
(70,556,o),
(80,556,qs),
(137,556,ls),
(172,556,o),
(207,534,o),
(215,507,qs),
(321,145,l),
(438,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 14 2 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 52 52 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 643;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,556,o),
(389,556,qs),
(397,556,ls),
(476,556,o),
(476,469,qs),
(476,11,ls),
(476,0,o),
(465,0,qs),
(394,0,ls),
(379,0,o),
(372,13,qs),
(154,368,l),
(154,11,ls),
(154,0,o),
(143,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(97,556,ls),
(126,556,o),
(161,535,o),
(178,507,qs),
(378,180,l),
(378,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
14 0 2 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 51 52 51 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(463,277,qs),
(463,374,o),
(421,424,qs),
(380,473,o),
(304,473,qs),
(238,473,o),
(198,436,qs),
(144,387,o),
(144,277,qs),
(144,83,o),
(304,83,qs),
(463,83,o)
);
},
{
closed = 1;
nodes = (
(121,58,qs),
(44,134,o),
(44,277,qs),
(44,401,o),
(104,477,qs),
(174,566,o),
(304,566,qs),
(417,566,o),
(486,497,qs),
(563,419,o),
(563,277,qs),
(563,153,o),
(504,78,qs),
(435,-10,o),
(304,-10,qs),
(190,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,283,o),
(365,377,qs),
(365,418,o),
(314,464,o),
(269,464,qs),
(155,464,l),
(155,283,l),
(268,283,ls)
);
},
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(261,556,ls),
(355,556,o),
(407,512,qs),
(463,465,o),
(463,377,qs),
(463,300,o),
(418,251,qs),
(366,193,o),
(273,193,qs),
(155,193,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 1 0 2 4 1 2 103 0 0 0 3 95 0 3 3 39 77 0 4 4 40 4 78 0 0 25 22 19 16 10 8 0 7 0 6 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,70,qs),
(44,146,o),
(44,277,qs),
(44,401,o),
(104,477,qs),
(174,566,o),
(304,566,qs),
(417,566,o),
(486,497,qs),
(563,419,o),
(563,277,qs),
(563,175,o),
(523,106,qs),
(477,26,o),
(386,3,q),
(411,-32,o),
(456,-32,qs),
(491,-32,o),
(527,-4,qs),
(532,0,o),
(537,0,qs),
(548,0,o),
(548,-18,qs),
(548,-50,o),
(520,-78,qs),
(483,-114,o),
(427,-114,qs),
(316,-114,o),
(268,-8,q),
(169,3,o)
);
},
{
closed = 1;
nodes = (
(462,277,qs),
(462,472,o),
(304,472,qs),
(238,472,o),
(198,436,qs),
(144,387,o),
(144,277,qs),
(144,180,o),
(186,131,qs),
(227,83,o),
(304,83,qs),
(462,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 4 5 1 2 4 114 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
31 30 39 37 30 41 31 41 40 35 20 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(366,283,o),
(366,377,qs),
(366,418,o),
(314,464,o),
(269,464,qs),
(155,464,l),
(155,283,l),
(268,283,ls)
);
},
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(260,556,ls),
(355,556,o),
(407,512,qs),
(463,466,o),
(463,377,qs),
(463,316,o),
(404,227,o),
(351,206,q),
(467,11,ls),
(469,7,o),
(465,0,o),
(461,0,qs),
(377,0,ls),
(360,0,o),
(354,12,qs),
(254,193,l),
(155,193,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
17 1 2 1 1 76 6 1 1 0 2 3 1 2 103 0 0 0 4 95 0 4 4 39 77 5 1 3 3 40 3 78 0 0 32 29 26 23 13 11 9 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,79,qs),
(266,79,o),
(327,119,o),
(327,154,qs),
(327,182,o),
(297,202,qs),
(276,215,o),
(224,232,qs),
(142,259,o),
(111,278,qs),
(35,324,o),
(35,408,qs),
(35,477,o),
(85,520,qs),
(139,566,o),
(230,566,qs),
(302,566,o),
(364,543,qs),
(392,533,o),
(411,499,o),
(405,470,qs),
(400,448,ls),
(396,436,o),
(389,436,qs),
(384,436,o),
(374,441,qs),
(306,478,o),
(231,478,qs),
(186,478,o),
(135,444,o),
(135,413,qs),
(135,384,o),
(166,364,qs),
(187,350,o),
(238,333,qs),
(322,305,o),
(352,288,qs),
(427,245,o),
(427,163,qs),
(427,89,o),
(380,44,qs),
(325,-10,o),
(223,-10,qs),
(131,-10,o),
(74,33,qs),
(18,75,o),
(18,136,qs),
(18,157,o),
(32,157,qs),
(39,157,o),
(43,152,qs),
(114,79,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 2 2 4 97 0 4 4 39 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
45 38 34 45 36 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,464,o),
(12,476,qs),
(12,544,ls),
(12,556,o),
(23,556,qs),
(374,556,ls),
(433,556,o),
(433,499,qs),
(433,478,ls),
(433,464,o),
(419,464,qs),
(270,464,l),
(270,11,ls),
(270,0,o),
(260,0,qs),
(183,0,ls),
(171,0,o),
(171,11,qs),
(171,464,l),
(23,464,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 18 51 34 50 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,57,qs),
(54,113,o),
(54,203,qs),
(54,544,ls),
(54,556,o),
(65,556,qs),
(73,556,ls),
(152,556,o),
(152,469,qs),
(152,222,ls),
(152,82,o),
(261,82,qs),
(373,82,o),
(373,222,qs),
(373,544,ls),
(373,556,o),
(385,556,qs),
(393,556,ls),
(472,556,o),
(472,469,qs),
(472,204,ls),
(472,130,o),
(440,77,qs),
(387,-10,o),
(261,-10,qs),
(152,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 39 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 20 17 14 12 9 6 0 25 1 25 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,556,o),
(410,556,qs),
(482,556,ls),
(493,556,o),
(490,544,q),
(311,11,ls),
(307,0,o),
(298,0,qs),
(207,0,ls),
(195,0,o),
(192,11,qs),
(13,543,ls),
(9,556,o),
(20,556,qs),
(53,556,ls),
(90,556,o),
(127,524,o),
(140,482,qs),
(256,116,l),
(391,542,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,556,o),
(336,556,qs),
(364,556,ls),
(403,556,o),
(440,524,o),
(450,482,qs),
(539,125,l),
(635,542,ls),
(639,556,o),
(650,556,qs),
(728,556,ls),
(738,556,o),
(735,544,qs),
(600,11,ls),
(597,0,o),
(588,0,qs),
(499,0,ls),
(489,0,o),
(485,11,q),
(375,418,l),
(269,11,l),
(265,0,o),
(255,0,qs),
(167,0,ls),
(156,0,o),
(153,11,qs),
(23,543,l),
(21,556,o),
(31,556,qs),
(51,556,ls),
(90,556,o),
(128,523,o),
(138,482,qs),
(218,125,l),
(321,542,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,0,o),
(99,0,qs),
(18,0,ls),
(13,0,o),
(9,7,o),
(11,11,qs),
(178,289,l),
(25,543,l),
(23,548,o),
(27,556,o),
(31,556,qs),
(70,556,ls),
(107,556,o),
(140,534,o),
(162,496,qs),
(246,358,l),
(357,542,ls),
(365,556,o),
(377,556,qs),
(457,556,ls),
(462,556,o),
(466,549,o),
(462,544,q),
(315,294,l),
(487,11,ls),
(490,7,o),
(486,0,o),
(481,0,qs),
(399,0,ls),
(385,0,o),
(378,13,qs),
(248,227,l),
(118,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
25 16 8 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 55 37 55 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,556,o),
(14,556,qs),
(53,556,ls),
(85,556,o),
(124,530,o),
(140,500,qs),
(241,308,l),
(363,542,ls),
(370,556,o),
(382,556,qs),
(459,556,ls),
(472,556,o),
(466,543,qs),
(285,206,l),
(285,11,ls),
(285,0,o),
(274,0,qs),
(197,0,ls),
(187,0,o),
(187,11,qs),
(187,208,l),
(8,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 7 0 3 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 53 52 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,91,o),
(419,35,qs),
(419,14,ls),
(419,0,o),
(405,0,qs),
(39,0,ls),
(29,0,o),
(29,11,qs),
(29,69,ls),
(29,89,o),
(43,108,qs),
(300,465,l),
(46,465,ls),
(35,465,o),
(35,476,qs),
(35,544,ls),
(35,556,o),
(46,556,qs),
(356,556,ls),
(418,556,o),
(418,496,qs),
(418,482,ls),
(418,464,o),
(405,445,qs),
(148,91,l),
(361,91,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,-144,o),
(56,-108,o),
(56,-77,qs),
(56,628,ls),
(56,660,o),
(93,696,o),
(125,696,qs),
(237,696,ls),
(254,696,o),
(254,678,qs),
(254,672,ls),
(254,614,o),
(193,614,qs),
(156,614,ls),
(143,614,o),
(143,601,qs),
(143,-49,ls),
(143,-63,o),
(156,-63,qs),
(193,-63,ls),
(254,-63,o),
(254,-120,qs),
(254,-127,ls),
(254,-144,o),
(237,-144,qs),
(125,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 16 13 10 7 4 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,556,o),
(12,556,qs),
(29,556,ls),
(65,556,o),
(101,529,o),
(117,492,qs),
(321,11,ls),
(326,0,o),
(315,0,qs),
(247,0,ls),
(235,0,o),
(231,11,qs),
(5,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,-144,o),
(45,-127,qs),
(45,-120,ls),
(45,-63,o),
(107,-63,qs),
(143,-63,ls),
(156,-63,o),
(156,-49,qs),
(156,601,ls),
(156,614,o),
(143,614,qs),
(107,614,ls),
(45,614,o),
(45,672,qs),
(45,678,ls),
(45,696,o),
(63,696,qs),
(174,696,ls),
(206,696,o),
(243,660,o),
(243,628,qs),
(243,-77,ls),
(243,-108,o),
(206,-144,o),
(174,-144,qs),
(63,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 21 18 15 12 9 6 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,269,o),
(98,269,qs),
(33,269,ls),
(28,269,o),
(23,275,o),
(25,279,qs),
(166,543,ls),
(173,556,o),
(186,556,qs),
(241,556,o),
(265,508,qs),
(388,279,ls),
(390,275,o),
(385,269,o),
(380,269,qs),
(315,269,ls),
(301,269,o),
(295,281,qs),
(206,453,l),
(117,281,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 52 37 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 411;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,-186,qs),
(-7,-123,ls),
(-7,-113,o),
(4,-113,qs),
(447,-113,ls),
(457,-113,o),
(457,-123,qs),
(457,-186,ls),
(457,-197,o),
(447,-197,qs),
(4,-197,ls),
(-7,-197,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 451;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,528,o),
(9,528,qs),
(89,528,ls),
(104,528,o),
(116,518,qs),
(199,442,ls),
(203,439,o),
(199,430,o),
(193,430,qs),
(128,430,ls),
(109,430,o),
(95,441,qs),
(6,516,l),
(1,519,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 37 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 200;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-9,qs),
(129,-9,o),
(83,42,qs),
(33,97,o),
(33,189,qs),
(33,269,o),
(74,322,qs),
(123,386,o),
(207,386,qs),
(286,386,o),
(330,332,q),
(344,376,o),
(401,376,qs),
(406,376,ls),
(417,376,o),
(417,364,qs),
(417,11,ls),
(417,0,o),
(406,0,qs),
(332,0,ls),
(322,0,o),
(322,11,qs),
(322,47,l),
(280,-9,o)
);
},
{
closed = 1;
nodes = (
(322,138,o),
(322,189,qs),
(322,239,o),
(273,294,o),
(227,294,qs),
(183,294,o),
(131,237,o),
(131,189,qs),
(131,140,o),
(183,81,o),
(226,81,qs),
(271,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 35 25 35 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,0,o),
(131,0,qs),
(56,0,ls),
(47,0,o),
(47,11,qs),
(47,544,ls),
(47,556,o),
(56,556,qs),
(61,556,ls),
(141,556,o),
(141,472,qs),
(141,328,l),
(181,386,o),
(259,386,qs),
(332,386,o),
(378,339,qs),
(430,285,o),
(430,189,qs),
(430,110,o),
(392,57,qs),
(345,-9,o),
(259,-9,qs),
(182,-9,o),
(141,46,q),
(141,11,ls)
);
},
{
closed = 1;
nodes = (
(331,139,o),
(331,189,qs),
(331,237,o),
(280,294,o),
(236,294,qs),
(191,294,o),
(141,239,o),
(141,189,qs),
(141,139,o),
(193,81,o),
(236,81,qs),
(280,81,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 3 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 3 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 6 1 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 32 30 25 36 26 36 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,111,qs),
(348,111,o),
(348,95,qs),
(348,60,o),
(324,31,qs),
(288,-10,o),
(217,-10,qs),
(138,-10,o),
(90,36,qs),
(33,89,o),
(33,188,qs),
(33,272,o),
(79,325,qs),
(131,384,o),
(223,384,qs),
(268,384,o),
(301,372,qs),
(349,353,o),
(335,301,qs),
(329,279,l),
(325,271,o),
(321,271,qs),
(316,271,o),
(312,274,q),
(266,294,o),
(227,294,qs),
(183,294,o),
(131,236,o),
(131,186,qs),
(131,132,o),
(187,74,o),
(238,74,qs),
(284,74,o),
(325,104,qs),
(333,111,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 0 1 5 0 126 0 1 1 3 97 0 3 3 48 77 0 0 0 4 97 0 4 4 46 4 78 20 38 37 34 36 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,556,o),
(333,556,qs),
(338,556,ls),
(418,556,o),
(418,472,qs),
(418,11,ls),
(418,0,o),
(408,0,qs),
(333,0,ls),
(322,0,o),
(322,11,qs),
(322,47,l),
(280,-9,o),
(205,-9,qs),
(129,-9,o),
(83,43,qs),
(33,98,o),
(33,189,qs),
(33,269,o),
(74,322,qs),
(123,386,o),
(211,386,qs),
(286,386,o),
(322,333,q),
(322,544,ls)
);
},
{
closed = 1;
nodes = (
(322,138,o),
(322,189,qs),
(322,239,o),
(273,294,o),
(228,294,qs),
(183,294,o),
(131,238,o),
(131,189,qs),
(131,140,o),
(183,81,o),
(227,81,qs),
(272,81,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 1 5 0 12 1 1 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 5 0 12 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 6 1 4 4 1 97 2 1 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 0 2 2 40 77 6 1 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 32 30 25 36 26 36 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,72,o),
(240,72,qs),
(298,72,o),
(353,102,qs),
(364,108,o),
(369,108,qs),
(380,108,o),
(380,94,qs),
(380,59,o),
(349,30,qs),
(307,-10,o),
(228,-10,qs),
(149,-10,o),
(97,34,qs),
(33,89,o),
(33,189,qs),
(33,269,o),
(76,322,qs),
(127,384,o),
(217,384,qs),
(295,384,o),
(341,338,qs),
(387,291,o),
(387,213,qs),
(387,188,o),
(385,167,qs),
(383,154,o),
(368,154,qs),
(129,154,l),
(134,115,o)
);
},
{
closed = 1;
nodes = (
(295,258,o),
(254,303,o),
(217,303,qs),
(141,303,o),
(129,223,q),
(291,223,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 7 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 30 30 30 35 30 35 35 35 20 38 38 32 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,290,o),
(12,301,qs),
(12,364,ls),
(12,376,o),
(22,376,qs),
(79,376,l),
(79,424,ls),
(79,488,o),
(106,523,qs),
(135,561,o),
(190,561,qs),
(233,561,o),
(290,512,o),
(290,476,qs),
(290,459,o),
(280,459,qs),
(274,459,o),
(270,461,qs),
(239,479,o),
(219,479,qs),
(174,479,o),
(174,418,qs),
(174,376,l),
(266,376,ls),
(278,376,o),
(278,364,qs),
(278,301,ls),
(278,290,o),
(266,290,qs),
(174,290,l),
(174,11,ls),
(174,0,o),
(163,0,qs),
(90,0,ls),
(79,0,o),
(79,11,qs),
(79,290,l),
(22,290,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 0 78 0 0 0 37 0 36 36 35 19 34 35 34 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-3,qs),
(129,-3,o),
(83,46,qs),
(33,99,o),
(33,189,qs),
(33,268,o),
(75,322,qs),
(124,386,o),
(208,386,qs),
(288,386,o),
(331,332,q),
(345,376,o),
(403,376,qs),
(408,376,ls),
(418,376,o),
(418,364,qs),
(418,16,ls),
(418,-65,o),
(376,-113,qs),
(326,-171,o),
(225,-171,qs),
(154,-171,o),
(105,-138,qs),
(53,-104,o),
(53,-57,qs),
(53,-37,o),
(66,-37,qs),
(71,-37,o),
(77,-42,qs),
(78,-43,o),
(79,-44,qs),
(126,-83,o),
(204,-83,qs),
(322,-83,o),
(322,15,qs),
(322,53,l),
(279,-3,o)
);
},
{
closed = 1;
nodes = (
(322,138,o),
(322,189,qs),
(322,239,o),
(273,294,o),
(228,294,qs),
(183,294,o),
(131,238,o),
(131,189,qs),
(131,140,o),
(183,81,o),
(227,81,qs),
(272,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 7 3 0 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 40 77 0 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 0 5 1 0 128 0 3 3 42 77 0 7 7 4 97 0 4 4 48 77 8 1 6 6 5 97 0 5 5 40 77 0 0 0 2 97 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
38 37 44 42 37 48 38 48 38 34 53 36 36 34 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,386,qs),
(313,386,o),
(353,348,qs),
(400,304,o),
(400,219,qs),
(400,11,ls),
(400,0,o),
(389,0,qs),
(315,0,ls),
(304,0,o),
(304,11,qs),
(304,207,ls),
(304,297,o),
(224,297,qs),
(141,297,o),
(141,204,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(58,0,ls),
(47,0,o),
(47,11,qs),
(47,544,ls),
(47,556,o),
(58,556,qs),
(63,556,ls),
(141,556,o),
(141,472,qs),
(141,336,l),
(178,386,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 1 76 0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 37 51 35 51 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,11,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(141,376,o),
(141,291,qs),
(141,11,ls),
(141,0,o),
(130,0,qs),
(56,0,ls),
(46,0,o)
);
},
{
closed = 1;
nodes = (
(70,529,o),
(93,529,qs),
(116,529,o),
(147,497,o),
(147,474,qs),
(147,451,o),
(116,419,o),
(93,419,qs),
(70,419,o),
(39,451,o),
(39,474,qs),
(39,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 1 42 77 4 1 0 0 40 0 78 2 0 22 20 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 189;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-58,-67,qs),
(-53,-67,o),
(-49,-70,qs),
(-17,-89,o),
(3,-89,qs),
(27,-89,o),
(47,-59,o),
(47,-25,qs),
(47,364,ls),
(47,376,o),
(57,376,qs),
(62,376,ls),
(142,376,o),
(142,291,qs),
(142,-32,ls),
(142,-171,o),
(34,-171,qs),
(-9,-171,o),
(-69,-121,o),
(-69,-85,qs),
(-69,-67,o)
);
},
{
closed = 1;
nodes = (
(71,529,o),
(94,529,qs),
(117,529,o),
(148,497,o),
(148,473,qs),
(148,451,o),
(116,419,o),
(94,419,qs),
(71,419,o),
(40,451,o),
(40,473,qs),
(40,497,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 128 0 5 0 4 1 5 4 105 0 1 1 42 77 0 2 2 0 98 0 0 0 50 0 78 36 35 34 36 51 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 189;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,0,o),
(131,0,qs),
(56,0,ls),
(47,0,o),
(47,11,qs),
(47,544,ls),
(47,556,o),
(56,556,qs),
(61,556,ls),
(141,556,o),
(141,472,qs),
(141,240,l),
(258,363,l),
(267,376,o),
(279,376,qs),
(363,376,ls),
(367,376,o),
(371,368,o),
(368,364,qs),
(250,239,l),
(383,11,ls),
(385,7,o),
(381,0,o),
(376,0,qs),
(294,0,ls),
(278,0,o),
(273,12,q),
(184,168,l),
(141,123,l),
(141,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
17 9 1 0 4 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 51 52 55 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 393;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,98,qs),
(232,101,o),
(235,101,qs),
(246,101,o),
(246,87,qs),
(246,44,o),
(193,-8,o),
(149,-8,qs),
(47,-8,o),
(47,119,qs),
(47,544,ls),
(47,556,o),
(57,556,qs),
(62,556,ls),
(143,556,o),
(143,472,qs),
(143,128,ls),
(143,76,o),
(180,76,qs),
(204,76,o),
(225,96,q),
(226,96,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 0 1 3 0 128 0 1 1 39 77 0 0 0 2 98 0 2 2 46 2 78 19 35 51 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,383,qs),
(331,383,o),
(369,317,q),
(417,383,o),
(491,383,qs),
(559,383,o),
(597,346,qs),
(643,303,o),
(643,216,qs),
(643,11,ls),
(643,0,o),
(631,0,qs),
(557,0,ls),
(547,0,o),
(547,11,qs),
(547,205,ls),
(547,297,o),
(471,297,qs),
(434,297,o),
(393,248,o),
(393,204,qs),
(393,11,ls),
(393,0,o),
(383,0,qs),
(308,0,ls),
(297,0,o),
(297,11,qs),
(297,205,ls),
(297,297,o),
(221,297,qs),
(143,297,o),
(143,204,qs),
(143,11,ls),
(143,0,o),
(132,0,qs),
(56,0,ls),
(47,0,o),
(47,11,qs),
(47,364,ls),
(47,376,o),
(56,376,qs),
(61,376,ls),
(123,376,o),
(136,329,q),
(177,383,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 37 51 36 51 35 51 49 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,383,qs),
(316,383,o),
(355,346,qs),
(401,303,o),
(401,216,qs),
(401,11,ls),
(401,0,o),
(390,0,qs),
(316,0,ls),
(305,0,o),
(305,11,qs),
(305,204,ls),
(305,295,o),
(224,295,qs),
(143,295,o),
(143,202,qs),
(143,11,ls),
(143,0,o),
(131,0,qs),
(58,0,ls),
(47,0,o),
(47,11,qs),
(47,364,ls),
(47,376,o),
(58,376,qs),
(63,376,ls),
(123,376,o),
(136,327,q),
(178,383,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 51 35 51 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 445;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 48 77 5 1 2 2 0 97 4 1 0 0 46 0 78 17 16 1 0 23 21 16 28 17 28 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,-160,o),
(131,-160,qs),
(56,-160,ls),
(47,-160,o),
(47,-149,qs),
(47,364,ls),
(47,376,o),
(56,376,qs),
(61,376,ls),
(120,376,o),
(135,327,q),
(174,384,o),
(253,384,qs),
(331,384,o),
(379,335,qs),
(430,282,o),
(430,189,qs),
(430,110,o),
(392,57,qs),
(345,-9,o),
(259,-9,qs),
(181,-9,o),
(141,44,q),
(141,-149,ls)
);
},
{
closed = 1;
nodes = (
(331,140,o),
(331,189,qs),
(331,237,o),
(280,294,o),
(236,294,qs),
(191,294,o),
(141,239,o),
(141,189,qs),
(141,139,o),
(193,81,o),
(238,81,qs),
(280,81,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 2 0 1 0 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 35 25 35 51 50 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-9,qs),
(129,-9,o),
(83,43,qs),
(33,98,o),
(33,189,qs),
(33,268,o),
(75,322,qs),
(124,386,o),
(208,386,qs),
(286,386,o),
(331,332,q),
(343,376,o),
(403,376,qs),
(408,376,ls),
(418,376,o),
(418,364,qs),
(418,-149,ls),
(418,-160,o),
(408,-160,qs),
(333,-160,ls),
(322,-160,o),
(322,-149,qs),
(322,47,l),
(280,-9,o)
);
},
{
closed = 1;
nodes = (
(322,138,o),
(322,189,qs),
(322,239,o),
(273,294,o),
(228,294,qs),
(183,294,o),
(131,238,o),
(131,189,qs),
(131,140,o),
(183,81,o),
(227,81,qs),
(272,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 97 0 3 3 46 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 46 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 35 25 35 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,376,o),
(244,376,qs),
(255,376,ls),
(265,376,o),
(265,364,qs),
(265,296,ls),
(265,284,o),
(255,284,qs),
(229,284,ls),
(180,284,o),
(161,260,qs),
(141,237,o),
(141,176,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(56,0,ls),
(47,0,o),
(47,11,qs),
(47,364,ls),
(47,376,o),
(56,376,qs),
(61,376,ls),
(126,376,o),
(138,321,q),
(155,352,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 2 2 0 97 3 1 0 0 42 77 0 1 1 40 1 78 51 53 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,68,qs),
(209,68,o),
(209,107,qs),
(209,121,o),
(183,140,o),
(145,153,qs),
(78,178,o),
(28,227,o),
(28,268,qs),
(28,322,o),
(67,353,qs),
(107,384,o),
(174,384,qs),
(220,384,o),
(252,369,qs),
(279,358,o),
(294,326,o),
(286,299,qs),
(283,288,ls),
(281,280,o),
(275,280,qs),
(273,280,o),
(269,282,qs),
(265,283,o),
(264,284,q),
(216,307,o),
(172,307,qs),
(124,307,o),
(124,274,qs),
(124,261,o),
(150,241,o),
(188,227,qs),
(256,201,o),
(305,154,o),
(305,115,qs),
(305,63,o),
(270,29,qs),
(230,-10,o),
(159,-10,qs),
(102,-10,o),
(62,18,qs),
(18,49,o),
(18,93,qs),
(18,113,o),
(30,113,qs),
(32,113,o),
(36,111,q),
(37,110,o),
(38,109,qs),
(89,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
28 1 0 2 1 76 0 0 2 4 2 0 4 128 0 2 2 3 97 0 3 3 48 77 0 4 4 1 97 0 1 1 46 1 78 42 44 42 36 35 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,289,o),
(14,301,qs),
(14,364,ls),
(14,376,o),
(25,376,qs),
(91,376,l),
(91,497,ls),
(91,508,o),
(101,508,qs),
(106,508,ls),
(186,508,o),
(186,424,qs),
(186,376,l),
(267,376,ls),
(276,376,o),
(276,364,qs),
(276,301,ls),
(276,289,o),
(267,289,qs),
(186,289,l),
(186,11,ls),
(186,0,o),
(176,0,qs),
(101,0,ls),
(91,0,o),
(91,11,qs),
(91,289,l),
(25,289,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 5 2 1 1 2 95 4 1 2 2 42 77 0 3 3 0 95 0 0 0 40 0 78 0 0 0 27 0 26 34 50 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,36,qs),
(46,85,o),
(46,182,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(142,376,o),
(142,291,qs),
(142,170,ls),
(142,126,o),
(182,78,o),
(219,78,qs),
(299,78,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,-10,o),
(219,-10,qs),
(137,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 42 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 19 16 12 10 7 4 0 24 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,376,o),
(294,376,qs),
(369,376,ls),
(380,376,o),
(376,364,qs),
(254,11,ls),
(250,0,o),
(240,0,qs),
(150,0,ls),
(139,0,o),
(135,11,qs),
(14,364,ls),
(10,376,o),
(20,376,qs),
(37,376,ls),
(80,376,o),
(120,342,o),
(134,294,qs),
(196,94,l),
(279,363,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 383;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,376,o),
(269,376,qs),
(279,376,ls),
(322,376,o),
(361,342,o),
(374,294,qs),
(424,115,l),
(494,363,ls),
(498,376,o),
(511,376,qs),
(575,376,ls),
(586,376,o),
(583,364,qs),
(476,11,l),
(474,0,o),
(462,0,qs),
(387,0,ls),
(376,0,o),
(373,11,qs),
(302,252,l),
(232,11,ls),
(229,0,o),
(218,0,qs),
(141,0,ls),
(130,0,o),
(127,11,qs),
(17,364,ls),
(13,376,o),
(25,376,qs),
(40,376,ls),
(82,376,o),
(122,341,o),
(134,294,qs),
(183,116,l),
(253,363,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,0,o),
(92,0,qs),
(18,0,ls),
(14,0,o),
(11,7,o),
(13,11,qs),
(130,197,l),
(26,364,ls),
(19,376,o),
(31,376,qs),
(66,376,ls),
(101,376,o),
(135,352,o),
(161,311,qs),
(192,263,l),
(254,363,ls),
(263,376,o),
(276,376,qs),
(344,376,ls),
(357,376,o),
(351,364,q),
(253,203,l),
(372,11,ls),
(378,0,o),
(366,0,qs),
(289,0,ls),
(275,0,o),
(269,12,q),
(189,140,l),
(111,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
22 14 7 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 53 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,368,o),
(14,376,o),
(17,376,qs),
(38,376,ls),
(79,376,o),
(117,343,o),
(135,295,qs),
(197,109,l),
(281,363,ls),
(286,376,o),
(297,376,qs),
(371,376,ls),
(381,376,o),
(377,364,qs),
(247,-1,ls),
(214,-97,o),
(146,-171,o),
(92,-171,qs),
(51,-171,o),
(-6,-120,o),
(-6,-82,qs),
(-6,-63,o),
(6,-63,qs),
(9,-63,o),
(15,-68,qs),
(43,-88,o),
(69,-88,qs),
(96,-88,o),
(128,-54,o),
(145,-9,q),
(11,364,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 37 52 35 34 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,86,o),
(321,74,qs),
(321,11,ls),
(321,0,o),
(311,0,qs),
(38,0,ls),
(27,0,o),
(27,11,qs),
(27,54,ls),
(27,70,o),
(40,87,qs),
(204,290,l),
(45,290,ls),
(34,290,o),
(34,301,qs),
(34,364,ls),
(34,376,o),
(45,376,qs),
(259,376,ls),
(292,376,o),
(318,347,o),
(318,311,qs),
(318,291,o),
(305,275,qs),
(149,86,l),
(311,86,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,-144,o),
(102,-108,o),
(102,-77,qs),
(102,179,ls),
(102,230,o),
(62,237,qs),
(48,239,o),
(48,253,qs),
(48,299,ls),
(48,313,o),
(62,314,q),
(102,321,o),
(102,374,qs),
(102,628,ls),
(102,660,o),
(139,696,o),
(172,696,qs),
(283,696,ls),
(301,696,o),
(301,678,qs),
(301,672,ls),
(301,614,o),
(239,614,qs),
(202,614,ls),
(190,614,o),
(190,601,qs),
(190,368,ls),
(190,305,o),
(156,276,q),
(190,249,o),
(190,184,qs),
(190,-49,ls),
(190,-63,o),
(202,-63,qs),
(239,-63,ls),
(301,-63,o),
(301,-120,qs),
(301,-127,ls),
(301,-144,o),
(283,-144,qs),
(172,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 24 21 18 15 7 4 0 40 1 39 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,-138,qs),
(55,556,ls),
(55,566,o),
(65,566,qs),
(139,566,o),
(139,482,qs),
(139,-138,ls),
(139,-149,o),
(128,-149,qs),
(65,-149,ls),
(55,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 39 77 2 1 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 89 0 1 1 0 95 2 1 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
2 0 7 5 0 10 2 10 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,-144,o),
(45,-127,qs),
(45,-120,ls),
(45,-63,o),
(107,-63,qs),
(143,-63,ls),
(156,-63,o),
(156,-49,qs),
(156,184,ls),
(156,249,o),
(189,276,q),
(156,305,o),
(156,368,qs),
(156,601,ls),
(156,614,o),
(143,614,qs),
(107,614,ls),
(45,614,o),
(45,672,qs),
(45,678,ls),
(45,696,o),
(63,696,qs),
(174,696,ls),
(206,696,o),
(243,660,o),
(243,628,qs),
(243,374,ls),
(243,321,o),
(283,314,q),
(298,313,o),
(298,299,qs),
(298,253,ls),
(298,239,o),
(283,237,qs),
(243,230,o),
(243,179,qs),
(243,-77,ls),
(243,-108,o),
(206,-144,o),
(174,-144,qs),
(63,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 3 4 3 1 4 128 0 2 0 3 1 2 3 105 0 4 4 0 95 5 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 4 3 1 4 128 0 2 0 3 1 2 3 105 0 4 0 0 4 89 0 4 4 0 95 5 1 0 4 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 36 33 25 22 19 16 11 10 0 40 1 39 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,219,o),
(39,224,qs),
(39,281,ls),
(39,300,o),
(49,308,qs),
(86,339,o),
(130,339,qs),
(163,339,o),
(211,321,qs),
(269,299,o),
(294,299,qs),
(342,299,o),
(376,334,qs),
(379,337,o),
(386,335,o),
(386,331,qs),
(386,274,ls),
(386,255,o),
(376,246,qs),
(340,215,o),
(294,215,qs),
(260,215,o),
(213,233,qs),
(156,254,o),
(130,254,qs),
(82,254,o),
(49,221,q),
(46,217,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
11 1 2 3 25 1 1 0 2 76 0 2 0 1 2 89 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 423;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,298,o),
(30,324,qs),
(30,350,o),
(63,384,o),
(89,384,qs),
(114,384,o),
(148,350,o),
(148,324,qs),
(148,298,o),
(114,264,o),
(89,264,qs),
(63,264,o)
);
},
{
closed = 1;
nodes = (
(39,-170,qs),
(48,210,ls),
(48,221,o),
(59,221,qs),
(127,221,o),
(130,134,qs),
(138,-170,ls),
(138,-181,o),
(128,-181,qs),
(50,-181,ls),
(39,-181,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 5 1 2 3 2 99 4 1 0 0 1 97 0 1 1 48 0 78 14 12 1 0 19 17 12 22 14 22 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 183;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,-67,o),
(243,-67,qs),
(208,-67,ls),
(196,-67,o),
(196,-56,qs),
(196,-9,l),
(127,-4,o),
(83,42,qs),
(32,96,o),
(32,188,qs),
(32,265,o),
(72,317,qs),
(116,375,o),
(196,383,q),
(196,438,ls),
(196,448,o),
(208,448,qs),
(243,448,ls),
(253,448,o),
(253,438,qs),
(253,383,l),
(276,381,o),
(299,372,qs),
(348,353,o),
(334,301,qs),
(329,282,ls),
(326,274,o),
(320,274,qs),
(316,274,o),
(311,276,qs),
(275,294,o),
(253,296,q),
(253,73,l),
(288,77,o),
(324,102,q),
(331,108,o),
(336,108,qs),
(346,108,o),
(346,93,qs),
(346,59,o),
(293,3,o),
(253,-5,q),
(253,-56,ls)
);
},
{
closed = 1;
nodes = (
(128,272,o),
(128,186,qs),
(128,98,o),
(196,78,q),
(196,293,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
47 28 21 10 4 1 2 43 36 9 0 4 3 0 2 76 0 1 2 0 2 1 0 128 0 0 3 2 0 3 126 0 2 1 3 2 89 0 2 2 3 97 0 3 2 3 81 60 56 40 20 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,89,o),
(433,34,qs),
(433,14,ls),
(433,0,o),
(419,0,qs),
(52,0,ls),
(41,0,o),
(41,11,qs),
(41,78,ls),
(41,89,o),
(52,89,qs),
(135,89,l),
(159,146,o),
(159,193,qs),
(159,215,o),
(149,239,q),
(52,239,ls),
(41,239,o),
(41,250,qs),
(41,317,ls),
(41,328,o),
(52,328,qs),
(111,328,l),
(90,367,o),
(90,409,qs),
(90,480,o),
(135,521,qs),
(185,566,o),
(274,566,qs),
(334,566,o),
(385,543,qs),
(416,529,o),
(435,496,o),
(427,469,qs),
(419,448,l),
(417,439,o),
(410,439,qs),
(406,439,o),
(395,444,qs),
(328,479,o),
(275,479,qs),
(235,479,o),
(189,440,o),
(189,404,qs),
(189,375,o),
(210,328,q),
(324,328,ls),
(383,328,o),
(383,273,qs),
(383,253,ls),
(383,239,o),
(369,239,qs),
(245,239,l),
(253,215,o),
(253,193,qs),
(253,146,o),
(229,89,q),
(374,89,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 39 77 10 9 2 7 7 8 95 0 8 8 40 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 40 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 57 0 56 51 36 35 37 38 34 36 35 36 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,124,o),
(47,135,qs),
(47,184,ls),
(47,195,o),
(58,195,qs),
(195,195,l),
(195,208,l),
(172,252,l),
(58,252,ls),
(47,252,o),
(47,263,qs),
(47,311,ls),
(47,322,o),
(58,322,qs),
(134,322,l),
(16,544,ls),
(14,549,o),
(17,556,o),
(22,556,qs),
(62,556,ls),
(93,556,o),
(132,530,o),
(148,499,qs),
(249,308,l),
(371,542,ls),
(378,556,o),
(390,556,qs),
(467,556,ls),
(480,556,o),
(474,543,qs),
(356,322,l),
(431,322,ls),
(442,322,o),
(442,311,qs),
(442,263,ls),
(442,252,o),
(431,252,qs),
(318,252,l),
(293,206,l),
(293,195,l),
(431,195,ls),
(442,195,o),
(442,184,qs),
(442,135,ls),
(442,124,o),
(431,124,qs),
(293,124,l),
(293,11,ls),
(293,0,o),
(282,0,qs),
(205,0,ls),
(195,0,o),
(195,11,qs),
(195,124,l),
(58,124,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
30 1 3 4 47 15 2 2 3 2 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 54 0 53 50 48 35 36 37 50 35 34 35 34 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,269,qs),
(55,556,ls),
(55,566,o),
(65,566,qs),
(139,566,o),
(139,482,qs),
(139,269,ls),
(139,258,o),
(128,258,qs),
(65,258,ls),
(55,258,o)
);
},
{
closed = 1;
nodes = (
(55,-138,qs),
(55,149,ls),
(55,160,o),
(65,160,qs),
(128,160,ls),
(139,160,o),
(139,149,qs),
(139,-138,ls),
(139,-149,o),
(128,-149,qs),
(65,-149,ls),
(55,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 39 77 0 3 3 2 95 5 1 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 5 1 2 3 2 99 4 1 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 4 1 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 5 1 2 3 2 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 11 2 0 19 16 11 22 13 22 7 5 0 10 2 10 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,234,qs),
(300,253,o),
(266,284,o),
(219,305,qs),
(195,317,o),
(187,321,q),
(146,291,o),
(146,259,qs),
(146,231,o),
(177,207,qs),
(194,195,o),
(261,162,q),
(300,195,o)
);
},
{
closed = 1;
nodes = (
(374,35,qs),
(374,-19,o),
(338,-54,qs),
(294,-98,o),
(214,-98,qs),
(135,-98,o),
(92,-63,qs),
(48,-30,o),
(65,15,qs),
(70,28,ls),
(74,40,o),
(83,31,qs),
(138,-26,o),
(204,-26,qs),
(236,-26,o),
(275,1,o),
(275,24,qs),
(275,43,o),
(241,76,o),
(197,99,qs),
(133,133,o),
(112,149,qs),
(55,191,o),
(55,247,qs),
(55,311,o),
(127,359,q),
(85,399,o),
(85,449,qs),
(85,499,o),
(122,531,qs),
(163,566,o),
(232,566,qs),
(288,566,o),
(324,548,qs),
(346,537,o),
(358,506,o),
(351,477,q),
(350,467,l),
(348,461,o),
(341,461,qs),
(339,461,o),
(334,463,q),
(332,465,o),
(331,466,qs),
(288,494,o),
(242,494,qs),
(215,494,o),
(182,472,o),
(182,452,qs),
(182,434,o),
(215,404,o),
(257,383,qs),
(319,353,o),
(340,338,qs),
(395,299,o),
(395,246,qs),
(395,173,o),
(324,123,q),
(374,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
45 6 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 101 0 0 0 2 97 0 2 2 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 4 4 3 89 0 3 3 4 97 0 4 3 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
67 65 58 56 40 38 32 30 26 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,529,o),
(54,529,qs),
(77,529,o),
(108,497,o),
(108,474,qs),
(108,451,o),
(77,419,o),
(54,419,qs),
(31,419,o),
(0,451,o),
(0,474,qs),
(0,498,o)
);
},
{
closed = 1;
nodes = (
(188,529,o),
(212,529,qs),
(234,529,o),
(265,498,o),
(265,474,qs),
(265,451,o),
(234,419,o),
(212,419,qs),
(189,419,o),
(157,451,o),
(157,474,qs),
(157,498,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 266;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,494,qs),
(142,563,o),
(250,563,qs),
(343,563,o),
(403,509,qs),
(472,447,o),
(472,339,qs),
(472,246,o),
(418,186,qs),
(357,116,o),
(250,116,qs),
(156,116,o),
(96,170,qs),
(27,232,o),
(27,339,qs),
(27,433,o)
);
},
{
closed = 1;
nodes = (
(369,207,qs),
(423,255,o),
(423,339,qs),
(423,413,o),
(381,460,qs),
(334,514,o),
(250,514,qs),
(177,514,o),
(130,472,qs),
(76,424,o),
(76,339,qs),
(76,266,o),
(118,219,qs),
(166,165,o),
(250,165,qs),
(323,165,o)
);
},
{
closed = 1;
nodes = (
(177,250,qs),
(143,283,o),
(143,339,qs),
(143,391,o),
(173,425,qs),
(207,462,o),
(260,462,qs),
(289,462,o),
(314,452,qs),
(336,441,o),
(329,414,qs),
(326,403,ls),
(325,396,o),
(315,401,qs),
(289,417,o),
(261,417,qs),
(231,417,o),
(195,375,o),
(195,339,qs),
(195,305,o),
(231,267,o),
(263,267,qs),
(300,267,o),
(324,294,qs),
(329,299,o),
(331,299,qs),
(338,299,o),
(338,288,qs),
(338,260,o),
(288,221,o),
(253,221,qs),
(207,221,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 78 values pushed */
0 5 7 6 7 5 6 128 0 1 0 3 8 1 3 105 0 8 0 7 5 8 7 105 0 6 10 1 4 2 6 4 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 33 32 17 16 57 55 48 46 42 40 37 36 32 63 33 63 25 23 16 31 17 31 38 35 11 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 499;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,251,qs),
(96,251,o),
(58,291,qs),
(16,334,o),
(16,407,qs),
(16,469,o),
(51,511,qs),
(92,561,o),
(160,561,qs),
(226,561,o),
(263,519,q),
(275,553,o),
(322,553,qs),
(327,553,ls),
(335,553,o),
(335,544,qs),
(335,266,ls),
(335,258,o),
(328,258,qs),
(263,258,ls),
(255,258,o),
(255,266,qs),
(255,294,l),
(222,251,o)
);
},
{
closed = 1;
nodes = (
(254,366,o),
(254,406,qs),
(254,487,o),
(178,487,qs),
(141,487,o),
(99,443,o),
(99,406,qs),
(99,368,o),
(141,321,o),
(175,321,qs),
(212,321,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 34 25 34 38 34 51 50 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(394,45,o),
(390,38,o),
(385,38,qs),
(321,38,ls),
(306,38,o),
(297,49,qs),
(197,178,ls),
(190,186,o),
(190,192,qs),
(190,197,o),
(197,206,qs),
(297,336,ls),
(306,347,o),
(321,347,qs),
(385,347,ls),
(390,347,o),
(394,340,o),
(391,336,qs),
(281,192,l),
(391,49,ls)
);
},
{
closed = 1;
nodes = (
(227,45,o),
(224,38,o),
(219,38,qs),
(154,38,ls),
(139,38,o),
(130,49,qs),
(30,178,ls),
(23,187,o),
(23,192,qs),
(23,196,o),
(30,206,qs),
(130,336,ls),
(139,347,o),
(154,347,qs),
(219,347,ls),
(224,347,o),
(227,339,o),
(224,336,q),
(114,192,l),
(224,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
21 1 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,169,qs),
(33,238,ls),
(33,249,o),
(44,249,qs),
(254,249,ls),
(265,249,o),
(265,238,qs),
(265,169,ls),
(265,158,o),
(254,158,qs),
(44,158,ls),
(33,158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,494,qs),
(142,563,o),
(250,563,qs),
(343,563,o),
(403,509,qs),
(472,447,o),
(472,339,qs),
(472,246,o),
(418,186,qs),
(357,116,o),
(250,116,qs),
(156,116,o),
(96,170,qs),
(27,232,o),
(27,339,qs),
(27,433,o)
);
},
{
closed = 1;
nodes = (
(369,207,qs),
(423,255,o),
(423,339,qs),
(423,413,o),
(381,460,qs),
(334,514,o),
(250,514,qs),
(177,514,o),
(130,472,qs),
(76,424,o),
(76,339,qs),
(76,266,o),
(118,219,qs),
(166,165,o),
(250,165,qs),
(323,165,o)
);
},
{
closed = 1;
nodes = (
(301,346,o),
(301,383,qs),
(301,417,o),
(259,417,qs),
(213,417,l),
(213,346,l),
(256,346,ls)
);
},
{
closed = 1;
nodes = (
(213,226,o),
(206,226,qs),
(170,226,ls),
(165,226,o),
(165,233,qs),
(165,451,ls),
(165,457,o),
(170,457,qs),
(256,457,ls),
(349,457,o),
(349,382,qs),
(349,327,o),
(299,309,q),
(350,233,ls),
(354,226,o),
(349,226,qs),
(309,226,ls),
(300,226,o),
(295,233,q),
(254,304,l),
(213,304,l),
(213,233,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 91 values pushed */
54 1 4 8 47 1 6 5 2 76 9 1 7 6 2 6 7 2 128 0 1 0 3 8 1 3 105 0 8 0 4 5 8 4 105 11 1 5 0 6 7 5 6 103 10 1 2 0 0 2 89 10 1 2 2 0 97 0 0 2 0 81 32 32 17 16 59 56 52 50 44 42 40 39 32 38 32 37 35 33 25 23 16 31 17 31 38 35 12 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 499;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,442,qs),
(0,488,ls),
(0,499,o),
(11,499,qs),
(244,499,ls),
(254,499,o),
(254,488,qs),
(254,442,ls),
(254,431,o),
(244,431,qs),
(11,431,ls),
(0,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 254;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,396,qs),
(21,426,o),
(21,474,qs),
(21,517,o),
(47,547,qs),
(77,581,o),
(127,581,qs),
(170,581,o),
(200,554,qs),
(233,524,o),
(233,474,qs),
(233,433,o),
(207,403,qs),
(177,368,o),
(127,368,qs),
(83,368,o)
);
},
{
closed = 1;
nodes = (
(175,452,o),
(175,474,qs),
(175,497,o),
(147,527,o),
(127,527,qs),
(106,527,o),
(79,497,o),
(79,474,qs),
(79,452,o),
(106,423,o),
(127,423,qs),
(147,423,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 254;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,284,o),
(33,294,qs),
(33,354,ls),
(33,366,o),
(44,366,qs),
(166,366,l),
(166,499,ls),
(166,509,o),
(177,509,qs),
(217,509,o),
(252,477,o),
(252,438,qs),
(252,366,l),
(374,366,ls),
(385,366,o),
(385,354,qs),
(385,294,ls),
(385,284,o),
(374,284,qs),
(252,284,l),
(252,150,ls),
(252,139,o),
(241,139,qs),
(177,139,ls),
(166,139,o),
(166,150,qs),
(166,284,l),
(44,284,ls)
);
},
{
closed = 1;
nodes = (
(33,11,qs),
(33,71,ls),
(33,82,o),
(44,82,qs),
(324,82,ls),
(385,82,o),
(385,24,qs),
(385,11,ls),
(385,0,o),
(374,0,qs),
(44,0,ls),
(33,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 0 7 3 0 103 8 5 2 1 1 2 95 4 1 2 2 42 77 0 7 7 6 95 9 1 6 6 40 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 103 0 7 7 6 95 9 1 6 6 40 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
30 28 0 0 36 33 28 39 30 39 0 27 0 26 34 35 35 34 50 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,292,o),
(281,253,qs),
(281,238,ls),
(281,228,o),
(272,228,qs),
(37,228,ls),
(30,228,o),
(30,236,qs),
(30,292,o),
(59,330,qs),
(79,356,o),
(122,383,qs),
(162,407,o),
(168,412,qs),
(197,434,o),
(197,461,qs),
(197,501,o),
(143,501,qs),
(111,501,o),
(62,474,qs),
(52,469,o),
(48,478,qs),
(40,497,ls),
(28,527,o),
(56,543,qs),
(95,566,o),
(151,566,qs),
(209,566,o),
(277,514,o),
(277,471,qs),
(277,432,o),
(253,401,qs),
(234,376,o),
(186,346,qs),
(131,311,o),
(125,292,q),
(240,292,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 36 0 35 58 39 40 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(281,321,qs),
(281,278,o),
(253,252,qs),
(219,221,o),
(155,221,qs),
(104,221,o),
(31,275,o),
(31,313,qs),
(31,327,o),
(41,327,qs),
(46,327,o),
(51,322,qs),
(87,284,o),
(144,284,qs),
(210,284,o),
(210,326,qs),
(210,347,o),
(179,363,o),
(138,363,qs),
(125,363,ls),
(84,363,o),
(84,403,qs),
(84,418,ls),
(84,428,o),
(94,428,qs),
(143,428,ls),
(198,428,o),
(198,466,qs),
(198,502,o),
(144,502,qs),
(106,502,o),
(66,478,qs),
(53,470,o),
(49,482,qs),
(41,502,ls),
(29,531,o),
(59,546,qs),
(99,566,o),
(148,566,qs),
(207,566,o),
(271,519,o),
(271,477,qs),
(271,428,o),
(220,401,q),
(281,382,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 58 6 78 35 34 35 51 50 39 36 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,439,o),
(4,442,qs),
(88,518,ls),
(100,528,o),
(114,528,qs),
(194,528,ls),
(199,528,o),
(202,519,o),
(198,516,qs),
(108,441,ls),
(94,430,o),
(76,430,qs),
(9,430,ls),
(4,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
11 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 2 0 9 6 0 13 2 13 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 201;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,221,o),
(85,262,qs),
(32,309,o),
(32,391,qs),
(32,462,o),
(71,503,qs),
(119,556,o),
(223,556,qs),
(294,556,ls),
(338,556,o),
(379,513,o),
(379,467,qs),
(379,10,ls),
(379,0,o),
(369,0,qs),
(331,0,ls),
(321,0,o),
(321,10,qs),
(321,493,l),
(268,493,l),
(268,10,ls),
(268,0,o),
(258,0,qs),
(220,0,ls),
(210,0,o),
(210,10,qs),
(210,221,l),
(205,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 39 77 2 1 0 0 40 0 78 22 52 50 18 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,253,o),
(22,279,qs),
(22,305,o),
(56,339,o),
(81,339,qs),
(107,339,o),
(140,305,o),
(140,279,qs),
(140,253,o),
(106,219,o),
(81,219,qs),
(56,219,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,-97,qs),
(66,-6,ls),
(74,5,o),
(93,5,qs),
(140,5,ls),
(151,5,o),
(146,-5,qs),
(102,-94,ls),
(95,-109,o),
(75,-109,qs),
(13,-109,ls),
(0,-109,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 142;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,458,o),
(33,467,qs),
(33,523,ls),
(33,535,o),
(45,538,qs),
(77,549,ls),
(98,556,o),
(108,556,qs),
(139,556,ls),
(176,556,o),
(176,519,qs),
(176,237,ls),
(176,228,o),
(167,228,qs),
(106,228,ls),
(97,228,o),
(97,237,qs),
(97,481,l),
(43,462,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 55 77 0 0 0 56 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 133 0 0 0 56 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
51 50 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 224;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,513,qs),
(97,561,o),
(175,561,qs),
(243,561,o),
(286,524,qs),
(334,481,o),
(334,406,qs),
(334,340,o),
(297,298,qs),
(254,251,o),
(175,251,qs),
(109,251,o),
(66,288,qs),
(16,330,o),
(16,406,qs),
(16,471,o)
);
},
{
closed = 1;
nodes = (
(252,365,o),
(252,404,qs),
(252,444,o),
(210,489,o),
(175,489,qs),
(140,489,o),
(99,444,o),
(99,406,qs),
(99,366,o),
(139,322,o),
(175,322,qs),
(211,322,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 2 0 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 17 16 23 21 16 27 17 27 38 35 5 10 24 
CALL[ ]	/* CallFunction */";
};
width = 351;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,340,o),
(26,347,o),
(31,347,qs),
(94,347,ls),
(109,347,o),
(118,336,qs),
(219,206,ls),
(226,196,o),
(226,192,qs),
(226,187,o),
(219,178,qs),
(118,49,ls),
(109,38,o),
(94,38,qs),
(31,38,ls),
(26,38,o),
(22,45,o),
(25,49,qs),
(134,192,l),
(25,336,ls)
);
},
{
closed = 1;
nodes = (
(189,339,o),
(192,347,o),
(197,347,qs),
(262,347,ls),
(276,347,o),
(285,336,qs),
(385,206,ls),
(393,196,o),
(393,192,qs),
(393,187,o),
(385,178,qs),
(285,49,ls),
(276,38,o),
(262,38,qs),
(197,38,ls),
(192,38,o),
(189,45,o),
(192,49,qs),
(300,192,l),
(192,336,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 2 1 0 1 0 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,70,o),
(374,78,qs),
(374,112,ls),
(374,121,o),
(380,131,qs),
(507,314,ls),
(517,328,o),
(532,328,qs),
(579,328,ls),
(616,328,o),
(616,294,qs),
(616,130,l),
(635,130,ls),
(670,130,o),
(670,97,qs),
(670,78,ls),
(670,70,o),
(661,70,qs),
(616,70,l),
(616,9,ls),
(616,0,o),
(606,0,qs),
(549,0,ls),
(540,0,o),
(540,9,qs),
(540,70,l),
(383,70,ls)
);
},
{
closed = 1;
nodes = (
(133,11,qs),
(427,544,l),
(432,556,o),
(443,556,qs),
(456,556,ls),
(484,556,o),
(501,517,o),
(485,488,qs),
(224,11,l),
(219,0,o),
(208,0,qs),
(139,0,ls),
(127,0,o)
);
},
{
closed = 1;
nodes = (
(540,262,l),
(450,130,l),
(540,130,l)
);
},
{
closed = 1;
nodes = (
(33,458,o),
(33,467,qs),
(33,523,ls),
(33,534,o),
(45,538,qs),
(77,549,ls),
(98,556,o),
(108,556,qs),
(139,556,ls),
(176,556,o),
(176,519,qs),
(176,237,ls),
(176,228,o),
(167,228,qs),
(106,228,ls),
(97,228,o),
(97,237,qs),
(97,481,l),
(43,462,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
43 1 3 6 41 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 8 6 3 8 128 11 5 2 0 1 1 0 113 9 1 6 0 8 2 6 8 103 12 7 2 2 1 1 2 89 12 7 2 2 2 1 98 10 4 2 1 2 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 8 6 3 8 128 11 5 2 0 1 0 134 9 1 6 0 8 2 6 8 103 12 7 2 2 1 1 2 89 12 7 2 2 2 1 98 10 4 2 1 2 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 40 29 27 0 0 54 51 48 45 40 42 40 42 36 33 27 39 29 39 0 26 0 25 50 35 34 50 13 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 703;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,511,o),
(485,488,qs),
(224,11,l),
(219,0,o),
(208,0,qs),
(189,0,l),
(139,0,ls),
(127,0,o),
(133,11,qs),
(427,544,l),
(432,556,o),
(443,556,qs),
(456,556,ls),
(467,556,o),
(474,551,q),
(492,545,o)
);
},
{
closed = 1;
nodes = (
(33,458,o),
(33,467,qs),
(33,521,ls),
(33,527,o),
(34,528,q),
(36,536,o),
(45,538,qs),
(75,548,l),
(80,551,o),
(92,553,qs),
(95,554,o),
(103,554,q),
(110,556,o),
(125,556,qs),
(136,556,ls),
(144,556,o),
(148,554,q),
(172,551,o),
(175,527,qs),
(176,523,o),
(176,516,qs),
(176,237,ls),
(176,228,o),
(167,228,qs),
(106,228,ls),
(97,228,o),
(97,237,qs),
(97,481,l),
(43,462,ls)
);
},
{
closed = 1;
nodes = (
(692,65,o),
(692,25,qs),
(692,10,ls),
(692,0,o),
(682,0,qs),
(449,0,ls),
(442,0,o),
(442,8,qs),
(442,64,o),
(471,103,qs),
(491,129,o),
(534,155,qs),
(585,187,o),
(609,212,o),
(609,234,qs),
(609,274,o),
(555,274,qs),
(521,274,o),
(472,248,qs),
(462,242,o),
(460,252,q),
(452,271,ls),
(439,298,o),
(467,316,qs),
(507,339,o),
(562,339,qs),
(620,339,o),
(687,287,o),
(687,244,qs),
(687,205,o),
(664,173,qs),
(645,149,o),
(597,118,qs),
(543,84,o),
(537,65,q),
(650,65,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 64 values pushed */
41 16 2 5 0 1 76 0 5 0 6 2 5 6 105 4 3 2 0 0 2 8 0 2 103 9 1 8 1 1 8 87 9 1 8 8 1 96 7 1 1 8 1 80 45 45 45 80 45 79 76 73 64 62 55 53 17 40 55 67 49 10 9 27 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 747;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,70,o),
(440,78,qs),
(440,112,ls),
(440,121,o),
(447,131,qs),
(574,314,ls),
(584,328,o),
(599,328,qs),
(645,328,ls),
(682,328,o),
(682,294,qs),
(682,130,l),
(700,130,ls),
(737,130,o),
(737,97,qs),
(737,78,ls),
(737,70,o),
(728,70,qs),
(682,70,l),
(682,9,ls),
(682,0,o),
(672,0,qs),
(615,0,ls),
(607,0,o),
(607,9,qs),
(607,70,l),
(450,70,ls)
);
},
{
closed = 1;
nodes = (
(200,11,qs),
(493,544,l),
(498,556,o),
(509,556,qs),
(522,556,ls),
(550,556,o),
(567,517,o),
(552,488,qs),
(290,11,l),
(285,0,o),
(275,0,qs),
(206,0,ls),
(194,0,o)
);
},
{
closed = 1;
nodes = (
(607,262,l),
(515,130,l),
(607,130,l)
);
},
{
closed = 1;
nodes = (
(281,321,qs),
(281,278,o),
(253,252,qs),
(219,221,o),
(155,221,qs),
(104,221,o),
(31,275,o),
(31,313,qs),
(31,327,o),
(41,327,qs),
(46,327,o),
(51,322,qs),
(87,284,o),
(144,284,qs),
(210,284,o),
(210,326,qs),
(210,347,o),
(179,363,o),
(138,363,qs),
(125,363,ls),
(84,363,o),
(84,403,qs),
(84,418,ls),
(84,428,o),
(94,428,qs),
(143,428,ls),
(198,428,o),
(198,466,qs),
(198,502,o),
(144,502,qs),
(106,502,o),
(66,478,qs),
(53,470,o),
(49,482,qs),
(41,502,ls),
(29,531,o),
(59,546,qs),
(99,566,o),
(148,566,qs),
(207,566,o),
(271,519,o),
(271,477,qs),
(271,428,o),
(220,401,q),
(281,382,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
41 1 14 12 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
13 1 3 11 12 11 3 12 128 16 5 2 0 1 1 0 113 8 1 6 0 9 10 6 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
13 1 3 11 12 11 3 12 128 16 5 2 0 1 0 134 8 1 6 0 9 10 6 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 6 8 9 8 6 9 128 13 1 3 11 12 11 3 12 128 16 5 2 0 1 0 134 0 8 0 9 10 8 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
40 40 29 27 0 0 83 81 78 76 74 72 69 66 63 60 58 56 49 47 40 42 40 42 36 33 27 39 29 39 0 26 0 25 50 35 34 50 18 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 768;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,298,o),
(146,324,qs),
(146,350,o),
(180,384,o),
(206,384,qs),
(231,384,o),
(266,350,o),
(266,324,qs),
(266,298,o),
(231,264,o),
(206,264,qs),
(180,264,o)
);
},
{
closed = 1;
nodes = (
(44,58,qs),
(71,94,o),
(147,152,qs),
(166,166,o),
(166,189,qs),
(166,210,ls),
(166,221,o),
(177,221,qs),
(195,221,ls),
(217,221,o),
(247,192,o),
(247,170,qs),
(247,146,o),
(232,124,qs),
(220,105,o),
(185,77,qs),
(139,39,o),
(110,-1,o),
(110,-29,qs),
(110,-64,o),
(156,-103,o),
(197,-103,qs),
(258,-103,o),
(328,-66,q),
(335,-61,o),
(341,-61,qs),
(347,-61,o),
(349,-69,qs),
(368,-126,l),
(371,-139,o),
(359,-145,qs),
(279,-192,o),
(196,-192,qs),
(118,-192,o),
(69,-159,qs),
(10,-119,o),
(10,-44,qs),
(10,11,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 1 0 42 39 28 26 24 22 17 15 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(152,696,o),
(157,696,qs),
(237,696,ls),
(251,696,o),
(263,686,qs),
(347,610,l),
(350,606,o),
(346,598,o),
(341,598,qs),
(275,598,ls),
(257,598,o),
(242,609,qs),
(153,683,ls),
(149,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 35 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(164,607,o),
(167,610,qs),
(251,686,ls),
(263,696,o),
(278,696,qs),
(357,696,ls),
(363,696,o),
(366,687,o),
(361,683,qs),
(272,609,ls),
(257,598,o),
(239,598,qs),
(172,598,ls),
(168,598,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
1 1 0 3 1 76 0 6 5 6 133 8 1 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 26 24 0 0 33 30 24 37 26 37 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(206,598,o),
(186,598,qs),
(127,598,ls),
(123,598,o),
(119,607,o),
(122,610,qs),
(197,686,ls),
(208,696,o),
(225,696,qs),
(300,696,ls),
(318,696,o),
(327,686,qs),
(402,610,l),
(405,606,o),
(401,598,o),
(396,598,qs),
(337,598,ls),
(317,598,o),
(306,611,qs),
(263,661,l),
(218,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
1 1 0 3 1 76 0 6 5 6 133 7 1 5 3 5 133 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 43 40 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(118,608,qs),
(124,696,o),
(188,696,qs),
(213,696,o),
(255,678,qs),
(289,664,o),
(303,664,qs),
(320,664,o),
(325,686,q),
(326,696,o),
(336,696,qs),
(377,696,ls),
(388,696,o),
(387,686,qs),
(382,640,o),
(346,600,o),
(310,600,qs),
(288,600,o),
(247,616,qs),
(214,629,o),
(202,629,qs),
(184,629,o),
(181,607,qs),
(179,597,o),
(168,597,qs),
(128,597,ls),
(118,597,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 9 5 5 6 114 10 1 8 9 5 8 90 0 9 7 12 2 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 9 5 9 6 5 128 10 1 8 9 5 8 90 0 9 7 12 2 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
26 24 0 0 48 46 44 42 40 37 34 32 30 28 24 50 26 50 22 19 16 13 9 6 4 3 0 2 0 2 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(155,697,o),
(178,697,qs),
(201,697,o),
(232,665,o),
(232,642,qs),
(232,619,o),
(201,587,o),
(178,587,qs),
(156,587,o),
(124,619,o),
(124,642,qs),
(124,665,o)
);
},
{
closed = 1;
nodes = (
(312,697,o),
(336,697,qs),
(358,697,o),
(389,665,o),
(389,642,qs),
(389,619,o),
(358,587,o),
(336,587,qs),
(313,587,o),
(281,619,o),
(281,642,qs),
(281,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 46 44 40 38 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,438,l),
(186,223,l),
(335,223,l)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(96,0,qs),
(19,0,ls),
(7,0,o),
(11,11,qs),
(205,546,ls),
(208,556,o),
(217,556,qs),
(250,556,ls),
(287,556,o),
(326,525,o),
(342,482,qs),
(513,11,l),
(518,0,o),
(506,0,qs),
(427,0,ls),
(412,0,o),
(408,13,qs),
(363,140,l),
(156,140,l),
(111,13,ls)
);
},
{
closed = 1;
nodes = (
(225,737,o),
(256,737,qs),
(288,737,o),
(333,693,o),
(333,662,qs),
(333,630,o),
(288,586,o),
(256,586,qs),
(225,586,o),
(180,631,o),
(180,662,qs),
(180,693,o)
);
},
{
closed = 1;
nodes = (
(289,647,o),
(289,662,qs),
(289,676,o),
(271,696,o),
(256,696,qs),
(242,696,o),
(223,676,o),
(223,662,qs),
(223,647,o),
(242,628,o),
(256,628,qs),
(271,628,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
1 1 0 3 1 76 0 6 0 8 7 6 8 105 10 1 7 0 5 3 7 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 37 36 0 0 43 41 36 47 37 47 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,0,o),
(95,0,qs),
(15,0,ls),
(3,0,o),
(8,11,qs),
(296,544,l),
(301,556,o),
(316,556,qs),
(620,556,ls),
(677,556,o),
(677,499,qs),
(677,478,ls),
(677,464,o),
(664,464,qs),
(451,464,l),
(451,323,l),
(601,323,ls),
(658,323,o),
(658,269,qs),
(658,247,ls),
(658,233,o),
(645,233,qs),
(451,233,l),
(451,91,l),
(629,91,ls),
(686,91,o),
(686,35,qs),
(686,14,ls),
(686,0,o),
(672,0,qs),
(362,0,ls),
(352,0,o),
(352,11,qs),
(352,140,l),
(181,140,l),
(115,13,ls)
);
},
{
closed = 1;
nodes = (
(352,466,l),
(224,224,l),
(352,224,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
37 1 5 6 1 76 0 4 0 3 8 4 3 103 9 1 8 0 0 2 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 95 7 1 1 1 40 1 78 36 36 36 38 36 38 51 51 33 35 33 35 50 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,-112,o),
(275,-112,qs),
(213,-112,ls),
(200,-112,o),
(208,-100,qs),
(266,-9,l),
(171,2,o),
(112,68,qs),
(44,146,o),
(44,276,qs),
(44,400,o),
(109,478,qs),
(182,566,o),
(308,566,qs),
(379,566,o),
(437,541,q),
(464,527,o),
(482,494,o),
(476,467,qs),
(470,442,ls),
(467,431,o),
(460,431,qs),
(456,431,o),
(445,436,qs),
(378,472,o),
(310,472,qs),
(238,472,o),
(196,430,qs),
(144,378,o),
(144,276,qs),
(144,188,o),
(185,138,qs),
(230,83,o),
(313,83,qs),
(403,83,o),
(461,147,q),
(467,156,o),
(477,156,qs),
(492,156,o),
(492,132,qs),
(492,96,o),
(464,60,qs),
(423,6,o),
(346,-8,q),
(302,-97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 2 3 4 2 105 0 1 5 5 1 89 0 1 1 5 95 0 5 1 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 38 34 38 34 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,91,o),
(391,35,qs),
(391,14,ls),
(391,0,o),
(378,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(325,556,ls),
(383,556,o),
(383,500,qs),
(383,479,ls),
(383,465,o),
(369,465,qs),
(154,465,l),
(154,323,l),
(305,323,ls),
(363,323,o),
(363,268,qs),
(363,246,ls),
(363,232,o),
(350,232,qs),
(154,232,l),
(154,91,l),
(333,91,ls)
);
},
{
closed = 1;
nodes = (
(96,696,o),
(101,696,qs),
(181,696,ls),
(196,696,o),
(208,686,qs),
(291,610,ls),
(295,606,o),
(290,598,o),
(285,598,qs),
(219,598,ls),
(201,598,o),
(187,609,qs),
(97,683,ls),
(93,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 39 37 32 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,91,o),
(391,35,qs),
(391,14,ls),
(391,0,o),
(378,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(325,556,ls),
(383,556,o),
(383,500,qs),
(383,479,ls),
(383,465,o),
(369,465,qs),
(154,465,l),
(154,323,l),
(305,323,ls),
(363,323,o),
(363,268,qs),
(363,246,ls),
(363,232,o),
(350,232,qs),
(154,232,l),
(154,91,l),
(333,91,ls)
);
},
{
closed = 1;
nodes = (
(129,607,o),
(132,610,qs),
(216,686,ls),
(228,696,o),
(243,696,qs),
(322,696,ls),
(328,696,o),
(330,687,o),
(326,683,qs),
(237,609,ls),
(222,598,o),
(204,598,qs),
(137,598,ls),
(133,598,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 7 6 7 133 9 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 30 28 0 0 37 34 28 41 30 41 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,91,o),
(391,35,qs),
(391,14,ls),
(391,0,o),
(378,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(325,556,ls),
(383,556,o),
(383,500,qs),
(383,479,ls),
(383,465,o),
(369,465,qs),
(154,465,l),
(154,323,l),
(305,323,ls),
(363,323,o),
(363,268,qs),
(363,246,ls),
(363,232,o),
(350,232,qs),
(154,232,l),
(154,91,l),
(333,91,ls)
);
},
{
closed = 1;
nodes = (
(157,598,o),
(137,598,qs),
(78,598,ls),
(74,598,o),
(70,607,o),
(73,610,qs),
(148,686,ls),
(159,696,o),
(176,696,qs),
(250,696,ls),
(269,696,o),
(278,686,qs),
(353,610,l),
(356,606,o),
(352,598,o),
(347,598,qs),
(288,598,ls),
(268,598,o),
(257,611,qs),
(214,661,l),
(169,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 7 6 7 133 8 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 47 44 40 37 32 30 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,91,o),
(391,35,qs),
(391,14,ls),
(391,0,o),
(378,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(325,556,ls),
(383,556,o),
(383,500,qs),
(383,479,ls),
(383,465,o),
(369,465,qs),
(154,465,l),
(154,323,l),
(305,323,ls),
(363,323,o),
(363,268,qs),
(363,246,ls),
(363,232,o),
(350,232,qs),
(154,232,l),
(154,91,l),
(333,91,ls)
);
},
{
closed = 1;
nodes = (
(117,697,o),
(140,697,qs),
(163,697,o),
(194,665,o),
(194,642,qs),
(194,619,o),
(162,587,o),
(140,587,qs),
(117,587,o),
(85,619,o),
(85,642,qs),
(85,665,o)
);
},
{
closed = 1;
nodes = (
(274,697,o),
(297,697,qs),
(320,697,o),
(350,665,o),
(350,642,qs),
(350,619,o),
(320,587,o),
(297,587,qs),
(274,587,o),
(243,619,o),
(243,642,qs),
(243,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 50 48 44 42 38 36 32 30 0 27 0 26 51 51 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,11,qs),
(59,544,ls),
(59,556,o),
(70,556,qs),
(79,556,ls),
(157,556,o),
(157,469,qs),
(157,11,ls),
(157,0,o),
(146,0,qs),
(70,0,ls),
(59,0,o)
);
},
{
closed = 1;
nodes = (
(7,696,o),
(12,696,qs),
(92,696,ls),
(107,696,o),
(119,686,qs),
(202,610,ls),
(206,606,o),
(202,598,o),
(196,598,qs),
(131,598,ls),
(112,598,o),
(98,609,qs),
(9,683,ls),
(4,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,11,qs),
(60,544,ls),
(60,556,o),
(71,556,qs),
(80,556,ls),
(158,556,o),
(158,469,qs),
(158,11,ls),
(158,0,o),
(147,0,qs),
(71,0,ls),
(60,0,o)
);
},
{
closed = 1;
nodes = (
(4,607,o),
(7,610,qs),
(91,686,ls),
(103,696,o),
(117,696,qs),
(197,696,ls),
(202,696,o),
(205,687,o),
(201,683,qs),
(111,609,ls),
(97,598,o),
(79,598,qs),
(12,598,ls),
(7,598,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
23 1 2 3 1 76 0 3 2 3 133 5 1 2 1 2 133 0 1 1 39 77 4 1 0 0 40 0 78 14 12 2 0 21 18 12 25 14 25 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(76,556,ls),
(154,556,o),
(154,469,qs),
(154,11,ls),
(154,0,o),
(143,0,qs),
(67,0,ls),
(56,0,o)
);
},
{
closed = 1;
nodes = (
(49,598,o),
(29,598,qs),
(-30,598,ls),
(-35,598,o),
(-38,607,o),
(-35,610,qs),
(40,686,ls),
(50,696,o),
(68,696,qs),
(142,696,ls),
(160,696,o),
(170,686,qs),
(244,610,ls),
(248,606,o),
(244,598,o),
(238,598,qs),
(180,598,ls),
(160,598,o),
(149,611,qs),
(105,661,l),
(60,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
26 1 2 3 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 39 77 5 1 0 0 40 0 78 2 0 31 28 24 21 16 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,469,qs),
(155,11,ls),
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o)
);
},
{
closed = 1;
nodes = (
(4,697,o),
(27,697,qs),
(50,697,o),
(81,665,o),
(81,642,qs),
(81,619,o),
(50,587,o),
(27,587,qs),
(5,587,o),
(-27,619,o),
(-27,642,qs),
(-27,665,o)
);
},
{
closed = 1;
nodes = (
(161,697,o),
(185,697,qs),
(207,697,o),
(238,665,o),
(238,642,qs),
(238,619,o),
(207,587,o),
(185,587,qs),
(162,587,o),
(130,619,o),
(130,642,qs),
(130,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 6 1 0 0 40 0 78 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,235,o),
(10,246,qs),
(10,314,ls),
(10,324,o),
(21,324,qs),
(70,324,l),
(70,544,ls),
(70,556,o),
(80,556,qs),
(243,556,ls),
(359,556,o),
(431,504,qs),
(527,436,o),
(527,286,qs),
(527,150,o),
(458,78,qs),
(383,0,o),
(235,0,qs),
(80,0,ls),
(70,0,o),
(70,11,qs),
(70,235,l),
(21,235,ls)
);
},
{
closed = 1;
nodes = (
(326,91,o),
(372,132,qs),
(426,181,o),
(426,283,qs),
(426,374,o),
(384,418,qs),
(339,464,o),
(241,464,qs),
(168,464,l),
(168,324,l),
(263,324,ls),
(319,324,o),
(319,269,qs),
(319,249,ls),
(319,235,o),
(307,235,qs),
(168,235,l),
(168,91,l),
(246,91,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 2 4 8 2 3 7 2 3 105 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 23 23 0 0 23 41 23 40 34 32 31 29 26 24 0 22 0 21 34 54 50 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,556,o),
(389,556,qs),
(397,556,ls),
(476,556,o),
(476,469,qs),
(476,11,ls),
(476,0,o),
(465,0,qs),
(394,0,ls),
(379,0,o),
(372,13,qs),
(154,368,l),
(154,11,ls),
(154,0,o),
(143,0,qs),
(67,0,ls),
(56,0,o),
(56,11,qs),
(56,544,ls),
(56,556,o),
(67,556,qs),
(97,556,ls),
(126,556,o),
(161,535,o),
(178,507,qs),
(378,180,l),
(378,544,ls)
);
},
{
closed = 1;
nodes = (
(130,608,qs),
(137,696,o),
(201,696,qs),
(225,696,o),
(267,678,qs),
(302,664,o),
(315,664,qs),
(333,664,o),
(337,686,qs),
(339,696,o),
(349,696,qs),
(390,696,ls),
(401,696,o),
(400,686,qs),
(395,640,o),
(359,600,o),
(322,600,qs),
(301,600,o),
(260,616,qs),
(227,629,o),
(215,629,qs),
(196,629,o),
(193,607,qs),
(192,597,o),
(181,597,qs),
(140,597,ls),
(130,597,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
52 1 4 5 14 0 2 1 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 8 4 4 5 114 9 1 7 8 4 7 90 0 8 6 10 2 4 0 8 4 106 3 1 0 0 39 77 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 10 2 4 0 8 4 106 3 1 0 0 39 77 2 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
29 27 51 49 47 45 43 40 37 35 33 31 27 53 29 53 51 52 51 51 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,277,qs),
(462,374,o),
(420,424,qs),
(379,473,o),
(303,473,qs),
(237,473,o),
(197,436,qs),
(143,387,o),
(143,277,qs),
(143,83,o),
(303,83,qs),
(462,83,o)
);
},
{
closed = 1;
nodes = (
(120,58,qs),
(43,134,o),
(43,277,qs),
(43,401,o),
(103,477,qs),
(173,566,o),
(303,566,qs),
(416,566,o),
(485,497,qs),
(562,419,o),
(562,277,qs),
(562,153,o),
(503,78,qs),
(434,-10,o),
(303,-10,qs),
(189,-10,o)
);
},
{
closed = 1;
nodes = (
(197,696,o),
(202,696,qs),
(282,696,ls),
(297,696,o),
(309,686,qs),
(392,610,ls),
(396,606,o),
(392,598,o),
(386,598,qs),
(321,598,ls),
(302,598,o),
(288,609,qs),
(199,683,ls),
(194,687,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
13 12 1 0 39 37 32 30 21 19 12 27 13 27 7 5 0 11 1 11 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,277,qs),
(462,374,o),
(420,424,qs),
(379,473,o),
(303,473,qs),
(237,473,o),
(197,436,qs),
(143,387,o),
(143,277,qs),
(143,83,o),
(303,83,qs),
(462,83,o)
);
},
{
closed = 1;
nodes = (
(120,58,qs),
(43,134,o),
(43,277,qs),
(43,401,o),
(103,477,qs),
(173,566,o),
(303,566,qs),
(416,566,o),
(485,497,qs),
(562,419,o),
(562,277,qs),
(562,153,o),
(503,78,qs),
(434,-10,o),
(303,-10,qs),
(189,-10,o)
);
},
{
closed = 1;
nodes = (
(209,607,o),
(212,610,qs),
(296,686,ls),
(308,696,o),
(322,696,qs),
(402,696,ls),
(407,696,o),
(410,687,o),
(406,683,qs),
(316,609,ls),
(302,598,o),
(284,598,qs),
(217,598,ls),
(212,598,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 8 1 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 8 1 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
30 28 13 12 1 0 37 34 28 41 30 41 21 19 12 27 13 27 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,277,qs),
(462,374,o),
(420,424,qs),
(379,473,o),
(303,473,qs),
(237,473,o),
(197,436,qs),
(143,387,o),
(143,277,qs),
(143,83,o),
(303,83,qs),
(462,83,o)
);
},
{
closed = 1;
nodes = (
(120,58,qs),
(43,134,o),
(43,277,qs),
(43,401,o),
(103,477,qs),
(173,566,o),
(303,566,qs),
(416,566,o),
(485,497,qs),
(562,419,o),
(562,277,qs),
(562,153,o),
(503,78,qs),
(434,-10,o),
(303,-10,qs),
(189,-10,o)
);
},
{
closed = 1;
nodes = (
(246,598,o),
(226,598,qs),
(167,598,ls),
(163,598,o),
(159,607,o),
(162,610,qs),
(237,686,ls),
(248,696,o),
(265,696,qs),
(340,696,ls),
(358,696,o),
(367,686,qs),
(442,610,l),
(445,606,o),
(441,598,o),
(436,598,qs),
(377,598,ls),
(357,598,o),
(346,611,qs),
(303,661,l),
(258,611,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 1 1 3 97 0 3 3 39 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 3 0 1 0 3 1 106 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 47 44 40 37 32 30 21 19 12 27 13 27 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,277,qs),
(462,374,o),
(420,424,qs),
(379,473,o),
(303,473,qs),
(237,473,o),
(197,436,qs),
(143,387,o),
(143,277,qs),
(143,83,o),
(303,83,qs),
(462,83,o)
);
},
{
closed = 1;
nodes = (
(120,58,qs),
(43,134,o),
(43,277,qs),
(43,401,o),
(103,477,qs),
(173,566,o),
(303,566,qs),
(416,566,o),
(485,497,qs),
(562,419,o),
(562,277,qs),
(562,153,o),
(503,78,qs),
(434,-10,o),
(303,-10,qs),
(189,-10,o)
);
},
{
closed = 1;
nodes = (
(164,608,qs),
(170,696,o),
(235,696,qs),
(259,696,o),
(301,678,qs),
(336,664,o),
(349,664,qs),
(367,664,o),
(371,686,qs),
(372,696,o),
(382,696,qs),
(424,696,ls),
(434,696,o),
(434,686,q),
(429,640,o),
(392,600,o),
(356,600,qs),
(334,600,o),
(294,616,qs),
(260,629,o),
(249,629,qs),
(230,629,o),
(227,607,qs),
(225,597,o),
(215,597,qs),
(174,597,ls),
(164,597,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 8 4 4 5 114 9 1 7 8 4 7 90 0 8 6 12 2 4 3 8 4 106 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 12 2 4 3 8 4 106 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 12 2 4 3 8 4 106 0 3 0 1 0 3 1 105 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
30 28 13 12 1 0 52 50 48 46 44 41 38 36 34 32 28 54 30 54 21 19 12 27 13 27 7 5 0 11 1 11 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,277,qs),
(462,374,o),
(420,424,qs),
(379,473,o),
(303,473,qs),
(237,473,o),
(197,436,qs),
(143,387,o),
(143,277,qs),
(143,83,o),
(303,83,qs),
(462,83,o)
);
},
{
closed = 1;
nodes = (
(120,58,qs),
(43,134,o),
(43,277,qs),
(43,401,o),
(103,477,qs),
(173,566,o),
(303,566,qs),
(416,566,o),
(485,497,qs),
(562,419,o),
(562,277,qs),
(562,153,o),
(503,78,qs),
(434,-10,o),
(303,-10,qs),
(189,-10,o)
);
},
{
closed = 1;
nodes = (
(202,697,o),
(225,697,qs),
(248,697,o),
(279,665,o),
(279,642,qs),
(279,619,o),
(248,587,o),
(225,587,qs),
(202,587,o),
(171,619,o),
(171,642,qs),
(171,665,o)
);
},
{
closed = 1;
nodes = (
(359,697,o),
(382,697,qs),
(405,697,o),
(436,665,o),
(436,642,qs),
(436,619,o),
(405,587,o),
(382,587,qs),
(359,587,o),
(328,619,o),
(328,642,qs),
(328,665,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 39 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 3 5 4 105 0 3 0 1 0 3 1 105 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 50 48 44 42 38 36 32 30 21 19 12 27 13 27 7 5 0 11 1 11 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,392,o),
(46,399,qs),
(73,427,o),
(114,425,o),
(144,394,qs),
(211,328,l),
(312,429,ls),
(320,437,o),
(328,429,qs),
(366,392,ls),
(374,384,o),
(366,376,qs),
(265,274,l),
(375,164,ls),
(382,156,o),
(375,148,qs),
(348,121,o),
(307,123,o),
(278,153,qs),
(211,221,l),
(108,118,ls),
(100,109,o),
(94,118,q),
(56,157,ls),
(49,164,o),
(56,172,qs),
(157,274,l),
(47,383,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 14 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 29 25 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,472,o),
(304,472,qs),
(238,472,o),
(198,436,qs),
(144,387,o),
(144,277,qs),
(144,195,o),
(174,149,q),
(372,459,l)
);
},
{
closed = 1;
nodes = (
(265,84,o),
(304,84,qs),
(462,84,o),
(462,277,qs),
(462,358,o),
(435,403,q),
(239,96,l)
);
},
{
closed = 1;
nodes = (
(121,57,qs),
(44,134,o),
(44,277,qs),
(44,401,o),
(104,477,qs),
(174,566,o),
(304,566,qs),
(417,566,o),
(486,497,qs),
(563,419,o),
(563,277,qs),
(563,152,o),
(504,77,qs),
(435,-10,o),
(304,-10,qs),
(189,-10,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
15 8 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
17 16 25 23 16 31 17 31 37 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,57,qs),
(53,113,o),
(53,203,qs),
(53,544,ls),
(53,556,o),
(64,556,qs),
(72,556,ls),
(151,556,o),
(151,469,qs),
(151,222,ls),
(151,82,o),
(260,82,qs),
(372,82,o),
(372,222,qs),
(372,544,ls),
(372,556,o),
(384,556,qs),
(392,556,ls),
(471,556,o),
(471,469,qs),
(471,204,ls),
(471,130,o),
(439,77,qs),
(386,-10,o),
(260,-10,qs),
(151,-10,o)
);
},
{
closed = 1;
nodes = (
(144,696,o),
(150,696,qs),
(230,696,ls),
(244,696,o),
(256,686,qs),
(340,610,l),
(343,606,o),
(339,598,o),
(334,598,qs),
(268,598,ls),
(250,598,o),
(235,609,qs),
(146,683,ls),
(142,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 37 35 30 28 20 17 14 12 9 6 0 25 1 25 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,57,qs),
(53,113,o),
(53,203,qs),
(53,544,ls),
(53,556,o),
(64,556,qs),
(72,556,ls),
(151,556,o),
(151,469,qs),
(151,222,ls),
(151,82,o),
(260,82,qs),
(372,82,o),
(372,222,qs),
(372,544,ls),
(372,556,o),
(384,556,qs),
(392,556,ls),
(471,556,o),
(471,469,qs),
(471,204,ls),
(471,130,o),
(439,77,qs),
(386,-10,o),
(260,-10,qs),
(151,-10,o)
);
},
{
closed = 1;
nodes = (
(160,607,o),
(164,610,qs),
(247,686,l),
(260,696,o),
(274,696,qs),
(354,696,ls),
(359,696,o),
(362,687,o),
(357,683,qs),
(268,609,ls),
(254,598,o),
(235,598,qs),
(169,598,ls),
(164,598,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 5 4 5 133 7 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 28 26 1 0 35 32 26 39 28 39 20 17 14 12 9 6 0 25 1 25 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,57,qs),
(53,113,o),
(53,203,qs),
(53,544,ls),
(53,556,o),
(64,556,qs),
(72,556,ls),
(151,556,o),
(151,469,qs),
(151,222,ls),
(151,82,o),
(260,82,qs),
(372,82,o),
(372,222,qs),
(372,544,ls),
(372,556,o),
(384,556,qs),
(392,556,ls),
(471,556,o),
(471,469,qs),
(471,204,ls),
(471,130,o),
(439,77,qs),
(386,-10,o),
(260,-10,qs),
(151,-10,o)
);
},
{
closed = 1;
nodes = (
(206,598,o),
(186,598,qs),
(127,598,ls),
(122,598,o),
(119,607,o),
(122,610,qs),
(197,686,ls),
(207,696,o),
(225,696,qs),
(299,696,ls),
(317,696,o),
(327,686,qs),
(401,610,ls),
(405,606,o),
(401,598,o),
(395,598,qs),
(337,598,ls),
(317,598,o),
(306,611,qs),
(262,661,l),
(217,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
40 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 45 42 38 35 30 28 20 17 14 12 9 6 0 25 1 25 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,57,qs),
(53,113,o),
(53,203,qs),
(53,544,ls),
(53,556,o),
(64,556,qs),
(72,556,ls),
(151,556,o),
(151,469,qs),
(151,222,ls),
(151,82,o),
(260,82,qs),
(372,82,o),
(372,222,qs),
(372,544,ls),
(372,556,o),
(384,556,qs),
(392,556,ls),
(471,556,o),
(471,469,qs),
(471,204,ls),
(471,130,o),
(439,77,qs),
(386,-10,o),
(260,-10,qs),
(151,-10,o)
);
},
{
closed = 1;
nodes = (
(155,697,o),
(179,697,qs),
(201,697,o),
(232,665,o),
(232,642,qs),
(232,619,o),
(201,587,o),
(179,587,qs),
(156,587,o),
(124,619,o),
(124,642,qs),
(124,665,o)
);
},
{
closed = 1;
nodes = (
(312,697,o),
(336,697,qs),
(358,697,o),
(389,665,o),
(389,642,qs),
(389,619,o),
(358,587,o),
(336,587,qs),
(313,587,o),
(281,619,o),
(281,642,qs),
(281,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 98 8 1 0 0 46 0 78 1 0 48 46 42 40 36 34 30 28 20 17 14 12 9 6 0 25 1 25 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,556,o),
(14,556,qs),
(53,556,ls),
(85,556,o),
(124,530,o),
(140,500,qs),
(241,308,l),
(363,542,ls),
(370,556,o),
(382,556,qs),
(459,556,ls),
(472,556,o),
(466,543,qs),
(285,206,l),
(285,11,ls),
(285,0,o),
(274,0,qs),
(197,0,ls),
(187,0,o),
(187,11,qs),
(187,208,l),
(8,544,ls)
);
},
{
closed = 1;
nodes = (
(150,607,o),
(153,610,qs),
(237,686,ls),
(249,696,o),
(263,696,qs),
(343,696,ls),
(348,696,o),
(351,687,o),
(347,683,qs),
(257,609,ls),
(243,598,o),
(224,598,qs),
(158,598,ls),
(153,598,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
33 1 3 4 14 7 0 3 0 1 2 76 5 1 3 4 1 4 3 1 128 2 1 1 1 39 77 0 4 4 0 95 0 0 0 40 0 78 24 22 31 28 22 35 24 35 53 52 50 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,188,o),
(365,281,qs),
(365,322,o),
(313,371,o),
(269,371,qs),
(155,371,l),
(155,188,l),
(268,188,ls)
);
},
{
closed = 1;
nodes = (
(155,0,o),
(144,0,qs),
(68,0,ls),
(57,0,o),
(57,11,qs),
(57,544,ls),
(57,556,o),
(68,556,qs),
(77,556,ls),
(155,556,o),
(155,468,qs),
(155,461,l),
(261,461,ls),
(355,461,o),
(407,418,qs),
(463,371,o),
(463,282,qs),
(463,205,o),
(418,155,qs),
(366,97,o),
(273,97,qs),
(155,97,l),
(155,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 3 0 0 1 3 0 103 6 1 1 0 2 5 1 2 103 0 4 4 39 77 0 5 5 40 5 78 0 0 29 26 23 20 18 16 10 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,67,qs),
(345,67,o),
(345,108,qs),
(345,139,o),
(298,173,qs),
(255,202,o),
(245,211,qs),
(210,244,o),
(210,286,qs),
(210,316,o),
(240,359,qs),
(266,395,o),
(278,419,o),
(278,433,qs),
(278,456,o),
(243,484,o),
(215,484,qs),
(181,484,o),
(141,440,o),
(141,402,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(56,0,ls),
(47,0,o),
(47,11,qs),
(47,403,ls),
(47,474,o),
(88,518,qs),
(134,566,o),
(213,566,qs),
(289,566,o),
(333,533,qs),
(374,501,o),
(374,454,qs),
(374,417,o),
(334,361,qs),
(301,314,o),
(301,299,qs),
(301,278,o),
(351,245,qs),
(403,212,o),
(443,155,o),
(443,114,qs),
(443,62,o),
(409,29,qs),
(371,-10,o),
(305,-10,qs),
(252,-10,o),
(175,48,o),
(175,89,qs),
(175,107,o),
(186,107,qs),
(191,107,o),
(195,103,q),
(246,67,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 4 5 4 0 5 128 0 4 4 2 97 0 2 2 39 77 0 5 5 1 97 3 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 4 5 4 0 5 128 0 4 4 2 97 0 2 2 39 77 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 5 4 0 5 128 0 2 0 4 0 2 4 105 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
46 36 53 47 35 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(117,528,o),
(122,528,qs),
(202,528,ls),
(217,528,o),
(229,518,qs),
(312,442,ls),
(316,439,o),
(311,430,o),
(306,430,qs),
(240,430,ls),
(222,430,o),
(208,441,qs),
(118,516,ls),
(114,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 6 7 133 0 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 47 45 40 38 31 29 24 35 25 35 38 34 51 50 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(138,439,o),
(141,442,qs),
(225,518,ls),
(237,528,o),
(251,528,qs),
(331,528,ls),
(336,528,o),
(339,519,o),
(335,516,qs),
(245,441,ls),
(231,430,o),
(213,430,qs),
(146,430,ls),
(141,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
47 1 6 7 12 1 5 1 0 1 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 133 9 1 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 7 133 9 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 9 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
38 36 25 24 45 42 36 49 38 49 31 29 24 35 25 35 38 34 51 50 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(176,430,o),
(156,430,qs),
(97,430,ls),
(92,430,o),
(89,439,o),
(92,442,qs),
(167,518,ls),
(178,528,o),
(195,528,qs),
(269,528,ls),
(288,528,o),
(297,518,qs),
(371,442,l),
(375,439,o),
(371,430,o),
(365,430,qs),
(307,430,ls),
(287,430,o),
(276,443,qs),
(233,493,l),
(188,443,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
50 1 6 7 12 1 5 1 0 1 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 9 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 7 133 8 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 9 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 8 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 24 55 52 48 45 40 38 31 29 24 35 25 35 38 34 51 50 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(97,440,qs),
(103,528,o),
(168,528,qs),
(192,528,o),
(234,511,qs),
(269,497,o),
(282,497,qs),
(299,497,o),
(304,518,q),
(305,528,o),
(315,528,qs),
(356,528,ls),
(367,528,o),
(366,518,qs),
(362,472,o),
(325,432,o),
(289,432,qs),
(267,432,o),
(227,448,qs),
(193,461,o),
(181,461,qs),
(163,461,o),
(160,439,qs),
(158,429,o),
(148,429,qs),
(107,429,ls),
(97,429,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 10 6 6 7 114 11 1 9 10 6 9 90 0 10 8 13 2 6 1 10 6 106 0 5 5 1 97 2 1 1 1 42 77 12 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 10 6 6 7 114 11 1 9 10 6 9 90 0 10 8 13 2 6 2 10 6 106 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 12 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 7 10 6 6 7 114 11 1 9 10 6 9 90 0 10 8 13 2 6 2 10 6 106 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 10 6 10 7 6 128 11 1 9 10 6 9 90 0 10 8 13 2 6 2 10 6 106 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
38 36 25 24 60 58 56 54 52 49 46 44 42 40 36 62 38 62 31 29 24 35 25 35 38 34 51 50 14 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(123,529,o),
(146,529,qs),
(169,529,o),
(200,497,o),
(200,474,qs),
(200,451,o),
(169,419,o),
(146,419,qs),
(123,419,o),
(92,451,o),
(92,474,qs),
(92,498,o)
);
},
{
closed = 1;
nodes = (
(280,529,o),
(304,529,qs),
(326,529,o),
(357,498,o),
(357,474,qs),
(357,451,o),
(326,419,o),
(304,419,qs),
(281,419,o),
(249,451,o),
(249,474,qs),
(249,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 1 7 8 1 6 1 7 6 105 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 7 8 1 6 2 7 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 8 1 6 2 7 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 58 56 52 50 46 44 40 38 31 29 24 35 25 35 38 34 51 50 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-9,qs),
(128,-9,o),
(82,42,qs),
(32,97,o),
(32,189,qs),
(32,269,o),
(73,322,qs),
(122,386,o),
(206,386,qs),
(285,386,o),
(329,332,q),
(343,376,o),
(400,376,qs),
(405,376,ls),
(416,376,o),
(416,364,qs),
(416,11,ls),
(416,0,o),
(405,0,qs),
(331,0,ls),
(321,0,o),
(321,11,qs),
(321,47,l),
(279,-9,o)
);
},
{
closed = 1;
nodes = (
(321,138,o),
(321,189,qs),
(321,239,o),
(272,294,o),
(226,294,qs),
(182,294,o),
(130,237,o),
(130,189,qs),
(130,140,o),
(182,81,o),
(225,81,qs),
(270,81,o)
);
},
{
closed = 1;
nodes = (
(192,569,o),
(224,569,qs),
(256,569,o),
(300,525,o),
(300,494,qs),
(300,462,o),
(256,418,o),
(224,418,qs),
(192,418,o),
(147,463,o),
(147,494,qs),
(147,525,o)
);
},
{
closed = 1;
nodes = (
(256,479,o),
(256,494,qs),
(256,509,o),
(238,528,o),
(224,528,qs),
(210,528,o),
(191,508,o),
(191,494,qs),
(191,480,o),
(210,460,o),
(224,460,qs),
(238,460,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 8 0 6 1 8 6 105 0 9 9 7 97 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 8 0 6 2 8 6 105 0 9 9 7 97 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 8 0 6 2 8 6 105 0 9 9 7 97 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 2 8 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
49 48 25 24 55 53 48 59 49 59 46 44 40 38 31 29 24 35 25 35 38 34 51 50 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,0,o),
(405,0,qs),
(335,0,ls),
(324,0,o),
(324,11,qs),
(324,47,l),
(282,-9,o),
(205,-9,qs),
(129,-9,o),
(83,43,qs),
(33,98,o),
(33,189,qs),
(33,268,o),
(75,322,qs),
(124,386,o),
(208,386,qs),
(286,386,o),
(331,329,q),
(345,376,o),
(403,376,qs),
(405,376,ls),
(415,376,o),
(415,364,qs),
(415,329,l),
(466,386,o),
(540,386,qs),
(618,386,o),
(663,339,qs),
(709,292,o),
(709,215,qs),
(709,189,o),
(706,168,qs),
(705,154,o),
(690,154,qs),
(454,154,l),
(464,73,o),
(562,73,qs),
(617,73,o),
(675,102,qs),
(687,109,o),
(690,109,qs),
(701,109,o),
(701,94,qs),
(701,60,o),
(672,32,qs),
(629,-9,o),
(551,-9,qs),
(467,-9,o),
(415,47,q),
(415,11,ls)
);
},
{
closed = 1;
nodes = (
(322,138,o),
(322,189,qs),
(322,239,o),
(273,294,o),
(228,294,qs),
(183,294,o),
(131,238,o),
(131,189,qs),
(131,140,o),
(183,81,o),
(227,81,qs),
(272,81,o)
);
},
{
closed = 1;
nodes = (
(616,260,o),
(577,303,o),
(540,303,qs),
(461,303,o),
(455,223,q),
(614,223,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 10 4 43 0 2 0 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 10 5 43 0 2 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 11 5 43 0 2 8 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 11 1 10 10 4 97 6 1 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 7 1 0 0 46 77 0 8 8 40 77 0 2 2 0 97 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
62 62 51 50 62 67 62 67 65 63 57 55 50 61 51 61 51 38 34 51 38 33 35 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,-109,o),
(181,-109,qs),
(119,-109,ls),
(107,-109,o),
(114,-97,qs),
(172,-6,l),
(112,7,o),
(76,52,qs),
(33,104,o),
(33,188,qs),
(33,272,o),
(79,325,qs),
(131,384,o),
(223,384,qs),
(268,384,o),
(301,372,qs),
(349,353,o),
(335,301,qs),
(329,279,l),
(325,271,o),
(321,271,qs),
(316,271,o),
(312,274,q),
(266,294,o),
(227,294,qs),
(183,294,o),
(131,236,o),
(131,186,qs),
(131,132,o),
(187,74,o),
(238,74,qs),
(284,74,o),
(325,104,qs),
(333,111,o),
(337,111,qs),
(348,111,o),
(348,95,qs),
(348,57,o),
(295,1,o),
(252,-7,q),
(209,-94,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
34 1 5 1 1 76 0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 48 2 78 57 37 34 36 35 20 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,72,o),
(240,72,qs),
(298,72,o),
(353,102,qs),
(364,108,o),
(369,108,qs),
(380,108,o),
(380,94,qs),
(380,59,o),
(349,30,qs),
(307,-10,o),
(228,-10,qs),
(149,-10,o),
(97,34,qs),
(33,89,o),
(33,189,qs),
(33,269,o),
(76,322,qs),
(127,384,o),
(217,384,qs),
(295,384,o),
(341,338,qs),
(387,291,o),
(387,213,qs),
(387,188,o),
(385,167,qs),
(383,154,o),
(368,154,qs),
(129,154,l),
(134,115,o)
);
},
{
closed = 1;
nodes = (
(295,258,o),
(254,303,o),
(217,303,qs),
(141,303,o),
(129,223,q),
(291,223,l)
);
},
{
closed = 1;
nodes = (
(96,528,o),
(101,528,qs),
(181,528,ls),
(195,528,o),
(207,518,qs),
(291,442,ls),
(294,439,o),
(290,430,o),
(285,430,qs),
(219,430,ls),
(201,430,o),
(186,441,q),
(97,516,ls),
(93,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 8 7 8 133 0 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 30 30 47 45 40 38 30 35 30 35 35 35 20 38 38 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,72,o),
(240,72,qs),
(298,72,o),
(353,102,qs),
(364,108,o),
(369,108,qs),
(380,108,o),
(380,94,qs),
(380,59,o),
(349,30,qs),
(307,-10,o),
(228,-10,qs),
(149,-10,o),
(97,34,qs),
(33,89,o),
(33,189,qs),
(33,269,o),
(76,322,qs),
(127,384,o),
(217,384,qs),
(295,384,o),
(341,338,qs),
(387,291,o),
(387,213,qs),
(387,188,o),
(385,167,qs),
(383,154,o),
(368,154,qs),
(129,154,l),
(134,115,o)
);
},
{
closed = 1;
nodes = (
(295,258,o),
(254,303,o),
(217,303,qs),
(141,303,o),
(129,223,q),
(291,223,l)
);
},
{
closed = 1;
nodes = (
(116,439,o),
(120,442,qs),
(204,518,ls),
(216,528,o),
(230,528,qs),
(310,528,ls),
(315,528,o),
(318,519,o),
(314,516,qs),
(224,441,ls),
(210,430,o),
(191,430,qs),
(125,430,ls),
(120,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 8 7 8 133 10 1 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 38 36 30 30 45 42 36 49 38 49 30 35 30 35 35 35 20 38 38 32 11 9 28 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,72,o),
(240,72,qs),
(298,72,o),
(353,102,qs),
(364,108,o),
(369,108,qs),
(380,108,o),
(380,94,qs),
(380,59,o),
(349,30,qs),
(307,-10,o),
(228,-10,qs),
(149,-10,o),
(97,34,qs),
(33,89,o),
(33,189,qs),
(33,269,o),
(76,322,qs),
(127,384,o),
(217,384,qs),
(295,384,o),
(341,338,qs),
(387,291,o),
(387,213,qs),
(387,188,o),
(385,167,qs),
(383,154,o),
(368,154,qs),
(129,154,l),
(134,115,o)
);
},
{
closed = 1;
nodes = (
(295,258,o),
(254,303,o),
(217,303,qs),
(141,303,o),
(129,223,q),
(291,223,l)
);
},
{
closed = 1;
nodes = (
(161,430,o),
(141,430,qs),
(82,430,ls),
(77,430,o),
(74,439,o),
(77,442,qs),
(152,518,ls),
(162,528,o),
(180,528,qs),
(254,528,ls),
(273,528,o),
(282,518,qs),
(356,442,l),
(360,439,o),
(356,430,o),
(350,430,qs),
(292,430,ls),
(272,430,o),
(261,443,qs),
(217,493,l),
(172,443,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
50 1 7 8 1 76 0 8 7 8 133 9 1 7 1 7 133 0 3 0 4 0 3 4 128 10 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 30 30 55 52 48 45 40 38 30 35 30 35 35 35 20 38 38 32 11 9 28 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,72,o),
(240,72,qs),
(298,72,o),
(353,102,qs),
(364,108,o),
(369,108,qs),
(380,108,o),
(380,94,qs),
(380,59,o),
(349,30,qs),
(307,-10,o),
(228,-10,qs),
(149,-10,o),
(97,34,qs),
(33,89,o),
(33,189,qs),
(33,269,o),
(76,322,qs),
(127,384,o),
(217,384,qs),
(295,384,o),
(341,338,qs),
(387,291,o),
(387,213,qs),
(387,188,o),
(385,167,qs),
(383,154,o),
(368,154,qs),
(129,154,l),
(134,115,o)
);
},
{
closed = 1;
nodes = (
(295,258,o),
(254,303,o),
(217,303,qs),
(141,303,o),
(129,223,q),
(291,223,l)
);
},
{
closed = 1;
nodes = (
(115,529,o),
(139,529,qs),
(161,529,o),
(192,497,o),
(192,474,qs),
(192,451,o),
(161,419,o),
(139,419,qs),
(116,419,o),
(84,451,o),
(84,474,qs),
(84,497,o)
);
},
{
closed = 1;
nodes = (
(272,529,o),
(296,529,qs),
(318,529,o),
(349,497,o),
(349,474,qs),
(349,451,o),
(318,419,o),
(296,419,qs),
(273,419,o),
(241,451,o),
(241,474,qs),
(241,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 3 0 4 0 3 4 128 10 1 8 9 1 7 1 8 7 105 11 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 30 30 58 56 52 50 46 44 40 38 30 35 30 35 35 35 20 38 38 32 12 9 28 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,11,qs),
(46,364,ls),
(46,376,o),
(57,376,qs),
(62,376,ls),
(141,376,o),
(141,291,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(57,0,ls),
(46,0,o)
);
},
{
closed = 1;
nodes = (
(-5,528,o),
(0,528,qs),
(80,528,ls),
(95,528,o),
(107,518,qs),
(190,442,ls),
(194,439,o),
(190,430,o),
(184,430,qs),
(119,430,ls),
(100,430,o),
(86,441,qs),
(-3,516,l),
(-8,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,11,qs),
(46,364,ls),
(46,376,o),
(57,376,qs),
(62,376,ls),
(141,376,o),
(141,291,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(57,0,ls),
(46,0,o)
);
},
{
closed = 1;
nodes = (
(-8,439,o),
(-5,442,qs),
(79,518,ls),
(91,528,o),
(105,528,qs),
(185,528,ls),
(190,528,o),
(193,519,o),
(189,516,qs),
(99,441,ls),
(85,430,o),
(67,430,qs),
(0,430,ls),
(-5,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
23 1 2 3 1 76 0 3 2 3 133 5 1 2 1 2 133 0 1 1 42 77 4 1 0 0 40 0 78 14 12 2 0 21 18 12 25 14 25 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,11,qs),
(45,364,ls),
(45,376,o),
(56,376,qs),
(61,376,ls),
(140,376,o),
(140,291,qs),
(140,11,ls),
(140,0,o),
(130,0,qs),
(56,0,ls),
(45,0,o)
);
},
{
closed = 1;
nodes = (
(37,430,o),
(17,430,qs),
(-42,430,ls),
(-47,430,o),
(-50,439,o),
(-47,442,qs),
(28,518,ls),
(38,528,o),
(56,528,qs),
(130,528,ls),
(149,528,o),
(158,518,qs),
(232,442,l),
(236,439,o),
(232,430,o),
(226,430,qs),
(168,430,ls),
(148,430,o),
(137,443,qs),
(93,493,l),
(48,443,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
26 1 2 3 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 42 77 5 1 0 0 40 0 78 2 0 31 28 24 21 16 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,11,qs),
(46,364,ls),
(46,376,o),
(57,376,qs),
(62,376,ls),
(141,376,o),
(141,291,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(57,0,ls),
(46,0,o)
);
},
{
closed = 1;
nodes = (
(-8,529,o),
(15,529,qs),
(38,529,o),
(69,497,o),
(69,474,qs),
(69,451,o),
(38,419,o),
(15,419,qs),
(-7,419,o),
(-39,451,o),
(-39,474,qs),
(-39,497,o)
);
},
{
closed = 1;
nodes = (
(149,529,o),
(173,529,qs),
(195,529,o),
(226,497,o),
(226,474,qs),
(226,451,o),
(195,419,o),
(173,419,qs),
(150,419,o),
(118,451,o),
(118,474,qs),
(118,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 42 77 6 1 0 0 40 0 78 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,404,ls),
(122,400,o),
(117,408,qs),
(101,433,ls),
(96,442,o),
(104,446,qs),
(161,474,l),
(113,544,l),
(111,548,o),
(115,556,o),
(119,556,qs),
(140,556,ls),
(178,556,o),
(221,538,o),
(238,514,q),
(288,541,ls),
(296,545,o),
(303,537,q),
(319,512,ls),
(325,503,o),
(317,499,qs),
(268,473,l),
(368,329,ls),
(413,267,o),
(413,195,qs),
(413,110,o),
(370,55,qs),
(318,-10,o),
(221,-10,qs),
(141,-10,o),
(91,38,qs),
(33,93,o),
(33,188,qs),
(33,264,o),
(78,314,qs),
(132,374,o),
(232,374,q),
(190,434,l)
);
},
{
closed = 1;
nodes = (
(315,132,o),
(315,182,qs),
(315,231,o),
(266,287,o),
(222,287,qs),
(179,287,o),
(130,231,o),
(130,182,qs),
(130,134,o),
(179,79,o),
(221,79,qs),
(266,79,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
37 30 22 15 4 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 98 0 1 1 46 1 78 39 38 45 43 38 49 39 49 47 38 16 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,383,qs),
(316,383,o),
(355,346,qs),
(401,303,o),
(401,216,qs),
(401,11,ls),
(401,0,o),
(390,0,qs),
(316,0,ls),
(305,0,o),
(305,11,qs),
(305,204,ls),
(305,295,o),
(224,295,qs),
(143,295,o),
(143,202,qs),
(143,11,ls),
(143,0,o),
(131,0,qs),
(58,0,ls),
(47,0,o),
(47,11,qs),
(47,364,ls),
(47,376,o),
(58,376,qs),
(63,376,ls),
(123,376,o),
(136,327,q),
(178,383,o)
);
},
{
closed = 1;
nodes = (
(89,440,qs),
(95,528,o),
(160,528,qs),
(184,528,o),
(226,511,qs),
(261,497,o),
(274,497,qs),
(292,497,o),
(296,518,qs),
(297,528,o),
(308,528,qs),
(349,528,ls),
(360,528,o),
(359,518,qs),
(354,472,o),
(317,432,o),
(281,432,qs),
(260,432,o),
(219,448,qs),
(185,461,o),
(174,461,qs),
(155,461,o),
(152,439,qs),
(150,429,o),
(140,429,qs),
(99,429,ls),
(89,429,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 6 9 5 5 6 114 10 1 8 9 5 8 90 0 9 7 11 2 5 0 9 5 106 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 9 5 5 6 114 10 1 8 9 5 8 90 0 9 7 11 2 5 4 9 5 106 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 9 5 9 6 5 128 10 1 8 9 5 8 90 0 9 7 11 2 5 4 9 5 106 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
31 29 53 51 49 47 45 42 39 37 35 33 29 55 31 55 37 51 35 51 49 12 9 27 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(119,528,o),
(125,528,qs),
(205,528,ls),
(219,528,o),
(231,518,qs),
(315,442,ls),
(318,439,o),
(314,430,o),
(309,430,qs),
(243,430,ls),
(224,430,o),
(210,441,qs),
(121,516,ls),
(117,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 46 0 78 17 16 1 0 40 38 33 31 23 21 16 28 17 28 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(131,439,o),
(134,442,qs),
(218,518,ls),
(230,528,o),
(245,528,qs),
(324,528,ls),
(330,528,o),
(332,519,o),
(328,516,qs),
(239,441,l),
(224,430,o),
(206,430,qs),
(139,430,ls),
(135,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 4 5 133 8 1 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 46 0 78 31 29 17 16 1 0 38 35 29 42 31 42 23 21 16 28 17 28 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(171,430,o),
(151,430,qs),
(92,430,ls),
(87,430,o),
(84,439,o),
(87,442,qs),
(162,518,ls),
(172,528,o),
(190,528,qs),
(264,528,ls),
(283,528,o),
(292,518,qs),
(366,442,l),
(370,439,o),
(366,430,o),
(360,430,qs),
(302,430,ls),
(282,430,o),
(271,443,qs),
(227,493,l),
(182,443,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
43 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 0 3 3 1 97 0 1 1 48 77 8 1 2 2 0 97 7 1 0 0 46 0 78 17 16 1 0 48 45 41 38 33 31 23 21 16 28 17 28 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(87,440,qs),
(93,528,o),
(157,528,qs),
(182,528,o),
(224,511,qs),
(258,497,o),
(272,497,qs),
(289,497,o),
(294,518,q),
(295,528,o),
(305,528,qs),
(346,528,ls),
(357,528,o),
(356,518,qs),
(351,472,o),
(315,432,o),
(279,432,qs),
(257,432,o),
(216,448,qs),
(183,461,o),
(171,461,qs),
(153,461,o),
(150,439,qs),
(148,429,o),
(137,429,qs),
(97,429,ls),
(87,429,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 8 4 4 5 114 9 1 7 8 4 7 90 0 8 6 12 2 4 1 8 4 106 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 12 2 4 1 8 4 106 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
31 29 17 16 1 0 53 51 49 47 45 42 39 37 35 33 29 55 31 55 23 21 16 28 17 28 9 7 0 15 1 15 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,37,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(306,384,o),
(358,338,qs),
(417,284,o),
(417,188,qs),
(417,105,o),
(372,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(287,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,137,o),
(181,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(124,529,o),
(147,529,qs),
(170,529,o),
(201,497,o),
(201,474,qs),
(201,451,o),
(170,419,o),
(147,419,qs),
(125,419,o),
(93,451,o),
(93,474,qs),
(93,497,o)
);
},
{
closed = 1;
nodes = (
(281,529,o),
(305,529,qs),
(327,529,o),
(358,497,o),
(358,474,qs),
(358,451,o),
(327,419,o),
(305,419,qs),
(282,419,o),
(250,451,o),
(250,474,qs),
(250,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
7 1 5 6 1 4 1 5 4 105 0 3 3 1 97 0 1 1 48 77 9 1 2 2 0 97 8 1 0 0 46 0 78 17 16 1 0 51 49 45 43 39 37 33 31 23 21 16 28 17 28 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,242,qs),
(33,299,ls),
(33,311,o),
(44,311,qs),
(324,311,ls),
(385,311,o),
(385,254,qs),
(385,242,ls),
(385,231,o),
(374,231,qs),
(44,231,ls),
(33,231,o)
);
},
{
closed = 1;
nodes = (
(186,467,o),
(209,467,qs),
(232,467,o),
(262,436,o),
(262,413,qs),
(262,390,o),
(232,359,o),
(209,359,qs),
(186,359,o),
(155,391,o),
(155,413,qs),
(155,436,o)
);
},
{
closed = 1;
nodes = (
(186,182,o),
(209,182,qs),
(232,182,o),
(262,150,o),
(262,127,qs),
(262,104,o),
(232,74,o),
(209,74,qs),
(186,74,o),
(155,104,o),
(155,127,qs),
(155,150,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,146,o),
(149,119,q),
(258,287,l)
);
},
{
closed = 1;
nodes = (
(210,81,o),
(225,81,qs),
(263,81,o),
(288,102,qs),
(319,129,o),
(319,186,qs),
(319,221,o),
(305,248,q),
(201,84,l)
);
},
{
closed = 1;
nodes = (
(92,38,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(307,384,o),
(358,337,qs),
(418,283,o),
(418,188,qs),
(418,105,o),
(373,52,qs),
(320,-10,o),
(226,-10,qs),
(144,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 7 2 1 0 1 76 0 0 0 3 97 0 3 3 48 77 0 1 1 2 97 4 1 2 2 46 2 78 18 17 26 24 17 32 18 32 39 36 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,36,qs),
(46,85,o),
(46,182,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(142,376,o),
(142,291,qs),
(142,170,ls),
(142,126,o),
(182,78,o),
(219,78,qs),
(299,78,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,-10,o),
(219,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(102,528,o),
(107,528,qs),
(187,528,ls),
(202,528,o),
(214,518,qs),
(297,442,ls),
(301,439,o),
(296,430,o),
(291,430,qs),
(225,430,ls),
(207,430,o),
(193,441,qs),
(103,516,ls),
(99,519,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 36 34 29 27 19 16 12 10 7 4 0 24 1 24 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,36,qs),
(46,85,o),
(46,182,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(142,376,o),
(142,291,qs),
(142,170,ls),
(142,126,o),
(182,78,o),
(219,78,qs),
(299,78,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,-10,o),
(219,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(118,439,o),
(121,442,qs),
(205,518,ls),
(217,528,o),
(232,528,qs),
(311,528,ls),
(317,528,o),
(319,519,o),
(315,516,qs),
(225,441,ls),
(211,430,o),
(193,430,qs),
(126,430,ls),
(121,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
36 1 4 5 1 76 0 5 4 5 133 7 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 27 25 1 0 34 31 25 38 27 38 19 16 12 10 7 4 0 24 1 24 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,36,qs),
(46,85,o),
(46,182,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(142,376,o),
(142,291,qs),
(142,170,ls),
(142,126,o),
(182,78,o),
(219,78,qs),
(299,78,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,-10,o),
(219,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(160,430,o),
(140,430,qs),
(81,430,ls),
(76,430,o),
(73,439,o),
(76,442,qs),
(151,518,ls),
(162,528,o),
(179,528,qs),
(253,528,ls),
(272,528,o),
(281,518,qs),
(355,442,l),
(359,439,o),
(355,430,o),
(349,430,qs),
(291,430,ls),
(271,430,o),
(260,443,qs),
(217,493,l),
(172,443,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
39 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 44 41 37 34 29 27 19 16 12 10 7 4 0 24 1 24 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,36,qs),
(46,85,o),
(46,182,qs),
(46,364,ls),
(46,376,o),
(56,376,qs),
(61,376,ls),
(142,376,o),
(142,291,qs),
(142,170,ls),
(142,126,o),
(182,78,o),
(219,78,qs),
(299,78,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,-10,o),
(219,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(118,529,o),
(142,529,qs),
(164,529,o),
(195,497,o),
(195,474,qs),
(195,451,o),
(164,419,o),
(142,419,qs),
(119,419,o),
(87,451,o),
(87,474,qs),
(87,497,o)
);
},
{
closed = 1;
nodes = (
(275,529,o),
(299,529,qs),
(321,529,o),
(352,497,o),
(352,474,qs),
(352,451,o),
(321,419,o),
(299,419,qs),
(276,419,o),
(244,451,o),
(244,474,qs),
(244,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 42 77 0 2 2 0 98 8 1 0 0 46 0 78 1 0 47 45 41 39 35 33 29 27 19 16 12 10 7 4 0 24 1 24 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,368,o),
(14,376,o),
(17,376,qs),
(38,376,ls),
(79,376,o),
(117,343,o),
(135,295,qs),
(197,109,l),
(281,363,ls),
(286,376,o),
(297,376,qs),
(371,376,ls),
(381,376,o),
(377,364,qs),
(247,-1,ls),
(214,-97,o),
(146,-171,o),
(92,-171,qs),
(51,-171,o),
(-6,-120,o),
(-6,-82,qs),
(-6,-63,o),
(6,-63,qs),
(9,-63,o),
(15,-68,qs),
(43,-88,o),
(69,-88,qs),
(96,-88,o),
(128,-54,o),
(145,-9,q),
(11,364,ls)
);
},
{
closed = 1;
nodes = (
(102,439,o),
(106,442,qs),
(190,518,ls),
(202,528,o),
(216,528,qs),
(296,528,ls),
(301,528,o),
(304,519,o),
(300,516,qs),
(210,441,ls),
(196,430,o),
(177,430,qs),
(111,430,ls),
(106,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
22 1 1 3 1 76 0 6 5 6 133 7 1 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 33 31 40 37 31 44 33 44 37 52 35 34 34 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,-160,o),
(131,-160,qs),
(56,-160,ls),
(47,-160,o),
(47,-149,qs),
(47,544,ls),
(47,556,o),
(56,556,qs),
(61,556,ls),
(141,556,o),
(141,472,qs),
(141,334,l),
(182,384,o),
(253,384,qs),
(331,384,o),
(379,335,qs),
(430,282,o),
(430,189,qs),
(430,110,o),
(392,57,qs),
(345,-9,o),
(259,-9,qs),
(181,-9,o),
(141,44,q),
(141,-149,ls)
);
},
{
closed = 1;
nodes = (
(331,141,o),
(331,190,qs),
(331,238,o),
(280,294,o),
(236,294,qs),
(192,294,o),
(141,239,o),
(141,190,qs),
(141,140,o),
(193,81,o),
(238,81,qs),
(280,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
12 1 5 1 0 1 0 4 2 76 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 46 77 0 3 3 44 3 78 26 25 32 30 25 36 26 36 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,368,o),
(14,376,o),
(17,376,qs),
(38,376,ls),
(79,376,o),
(117,343,o),
(135,295,qs),
(197,109,l),
(281,363,ls),
(286,376,o),
(297,376,qs),
(371,376,ls),
(381,376,o),
(377,364,qs),
(247,-1,ls),
(214,-97,o),
(146,-171,o),
(92,-171,qs),
(51,-171,o),
(-6,-120,o),
(-6,-82,qs),
(-6,-63,o),
(6,-63,qs),
(9,-63,o),
(15,-68,qs),
(43,-88,o),
(69,-88,qs),
(96,-88,o),
(128,-54,o),
(145,-9,q),
(11,364,ls)
);
},
{
closed = 1;
nodes = (
(90,529,o),
(113,529,qs),
(136,529,o),
(167,497,o),
(167,474,qs),
(167,451,o),
(136,419,o),
(113,419,qs),
(91,419,o),
(59,451,o),
(59,474,qs),
(59,497,o)
);
},
{
closed = 1;
nodes = (
(247,529,o),
(271,529,qs),
(293,529,o),
(324,497,o),
(324,474,qs),
(324,451,o),
(293,419,o),
(271,419,qs),
(248,419,o),
(216,451,o),
(216,474,qs),
(216,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 8 1 6 7 1 5 3 6 5 105 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 36 36 36 38 37 52 35 34 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,11,qs),
(46,364,ls),
(46,376,o),
(57,376,qs),
(62,376,ls),
(141,376,o),
(141,291,qs),
(141,11,ls),
(141,0,o),
(131,0,qs),
(57,0,ls),
(46,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 42 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 188;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,91,o),
(373,35,qs),
(373,14,ls),
(373,0,o),
(358,0,qs),
(79,0,ls),
(69,0,o),
(69,11,qs),
(69,196,l),
(29,174,ls),
(24,171,o),
(16,175,o),
(16,180,qs),
(16,241,ls),
(16,253,o),
(28,259,qs),
(69,281,l),
(69,544,ls),
(69,556,o),
(79,556,qs),
(89,556,ls),
(167,556,o),
(167,468,qs),
(167,334,l),
(285,398,ls),
(290,401,o),
(298,397,o),
(298,393,qs),
(298,332,ls),
(298,318,o),
(287,313,qs),
(167,249,l),
(167,91,l),
(314,91,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
24 20 16 9 5 1 6 2 0 1 76 0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 33 0 32 60 59 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,171,o),
(16,175,o),
(16,180,qs),
(16,237,ls),
(16,250,o),
(28,256,qs),
(64,274,l),
(64,544,ls),
(64,556,o),
(75,556,qs),
(80,556,ls),
(159,556,o),
(159,472,qs),
(159,327,l),
(207,353,l),
(219,358,o),
(219,346,qs),
(219,289,ls),
(219,277,o),
(208,271,qs),
(159,245,l),
(159,128,ls),
(159,76,o),
(198,76,qs),
(222,76,o),
(242,95,qs),
(244,97,l),
(250,100,o),
(253,100,qs),
(263,100,o),
(263,87,qs),
(263,44,o),
(210,-8,o),
(167,-8,qs),
(64,-8,o),
(64,119,qs),
(64,193,l),
(29,174,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
34 30 23 16 0 5 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 46 0 78 59 36 19 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 263;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(796,91,o),
(796,35,qs),
(796,14,ls),
(796,0,o),
(782,0,qs),
(471,0,ls),
(461,0,o),
(461,11,qs),
(461,47,l),
(399,-10,o),
(304,-10,qs),
(189,-10,o),
(121,57,qs),
(44,134,o),
(44,277,qs),
(44,401,o),
(104,477,qs),
(174,566,o),
(304,566,qs),
(401,566,o),
(461,507,q),
(461,544,ls),
(461,556,o),
(471,556,qs),
(730,556,ls),
(787,556,o),
(787,499,qs),
(787,478,ls),
(787,464,o),
(774,464,qs),
(560,464,l),
(560,323,l),
(710,323,ls),
(768,323,o),
(768,269,qs),
(768,247,ls),
(768,233,o),
(754,233,qs),
(560,233,l),
(560,91,l),
(738,91,ls)
);
},
{
closed = 1;
nodes = (
(461,277,qs),
(461,472,o),
(304,472,qs),
(238,472,o),
(198,436,qs),
(144,387,o),
(144,277,qs),
(144,84,o),
(304,84,qs),
(461,84,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 5 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 8 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 3 97 4 1 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 4 97 0 4 4 39 77 9 1 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 48 46 41 50 42 50 0 40 0 39 51 38 35 51 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,-10,qs),
(144,-10,o),
(92,38,qs),
(33,92,o),
(33,188,qs),
(33,271,o),
(78,324,qs),
(131,384,o),
(225,384,qs),
(314,384,o),
(365,323,q),
(414,384,o),
(497,384,qs),
(576,384,o),
(622,338,qs),
(667,291,o),
(667,214,qs),
(667,189,o),
(665,167,qs),
(664,154,o),
(649,154,qs),
(412,154,l),
(423,72,o),
(521,72,qs),
(578,72,o),
(635,102,q),
(636,102,o),
(637,103,q),
(646,108,o),
(650,108,qs),
(660,108,o),
(660,94,qs),
(660,59,o),
(630,30,qs),
(587,-10,o),
(507,-10,qs),
(415,-10,o),
(366,53,q),
(315,-10,o)
);
},
{
closed = 1;
nodes = (
(288,102,qs),
(319,129,o),
(319,186,qs),
(319,236,o),
(269,294,o),
(225,294,qs),
(181,294,o),
(131,237,o),
(131,187,qs),
(131,136,o),
(180,81,o),
(225,81,qs),
(263,81,o)
);
},
{
closed = 1;
nodes = (
(576,259,o),
(535,303,o),
(497,303,qs),
(461,303,o),
(416,261,o),
(413,223,q),
(572,223,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
27 1 8 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
27 1 9 4 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 0 9 9 4 97 5 1 4 4 48 77 0 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 46 77 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
52 52 40 39 52 58 52 58 56 54 46 44 39 51 40 51 38 34 38 33 37 20 33 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,79,qs),
(266,79,o),
(327,119,o),
(327,154,qs),
(327,182,o),
(297,202,qs),
(276,215,o),
(224,232,qs),
(142,259,o),
(111,278,qs),
(35,324,o),
(35,408,qs),
(35,477,o),
(85,520,qs),
(139,566,o),
(230,566,qs),
(302,566,o),
(364,543,qs),
(392,533,o),
(411,499,o),
(405,470,qs),
(400,448,ls),
(396,436,o),
(389,436,qs),
(384,436,o),
(374,441,qs),
(306,478,o),
(231,478,qs),
(186,478,o),
(135,444,o),
(135,413,qs),
(135,384,o),
(166,364,qs),
(187,350,o),
(238,333,qs),
(322,305,o),
(352,288,qs),
(427,245,o),
(427,163,qs),
(427,89,o),
(380,44,qs),
(325,-10,o),
(223,-10,qs),
(131,-10,o),
(74,33,qs),
(18,75,o),
(18,136,qs),
(18,157,o),
(32,157,qs),
(39,157,o),
(43,152,qs),
(114,79,o)
);
},
{
closed = 1;
nodes = (
(284,696,o),
(303,696,qs),
(361,696,ls),
(367,696,o),
(371,687,o),
(367,683,qs),
(293,609,ls),
(282,598,o),
(265,598,qs),
(191,598,ls),
(174,598,o),
(163,609,qs),
(88,683,l),
(85,687,o),
(88,696,o),
(93,696,qs),
(152,696,ls),
(172,696,o),
(184,683,qs),
(227,634,l),
(272,683,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 6 7 6 133 0 7 4 7 133 0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 2 2 4 97 0 4 4 39 77 0 5 5 1 98 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
8 1 6 7 6 133 0 7 4 7 133 0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 106 0 5 5 1 98 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 45 38 34 45 36 33 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,68,qs),
(209,68,o),
(209,107,qs),
(209,121,o),
(183,140,o),
(145,153,qs),
(78,178,o),
(28,227,o),
(28,268,qs),
(28,322,o),
(67,353,qs),
(107,384,o),
(174,384,qs),
(220,384,o),
(253,369,qs),
(279,358,o),
(294,326,o),
(286,299,qs),
(283,288,ls),
(281,280,o),
(275,280,qs),
(273,280,o),
(269,282,qs),
(265,283,o),
(264,284,q),
(216,307,o),
(172,307,qs),
(124,307,o),
(124,274,qs),
(124,261,o),
(151,241,o),
(188,227,qs),
(256,201,o),
(305,154,o),
(305,115,qs),
(305,63,o),
(270,29,qs),
(230,-10,o),
(159,-10,qs),
(102,-10,o),
(62,18,qs),
(18,49,o),
(18,93,qs),
(18,113,o),
(30,113,qs),
(32,113,o),
(36,111,q),
(37,110,o),
(38,109,qs),
(89,68,o)
);
},
{
closed = 1;
nodes = (
(217,528,o),
(236,528,qs),
(294,528,ls),
(300,528,o),
(304,520,o),
(300,516,qs),
(226,441,ls),
(215,430,o),
(198,430,qs),
(124,430,ls),
(107,430,o),
(96,441,qs),
(21,516,ls),
(18,519,o),
(21,528,o),
(26,528,qs),
(85,528,ls),
(105,528,o),
(116,516,qs),
(160,466,l),
(205,516,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 0 2 1 76 7 1 5 6 5 133 0 6 3 6 133 0 0 2 4 2 0 4 128 0 2 2 3 97 0 3 3 48 77 0 4 4 1 98 0 1 1 46 1 78 52 53 35 42 44 42 36 35 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,556,o),
(14,556,qs),
(53,556,ls),
(85,556,o),
(124,530,o),
(140,500,qs),
(241,308,l),
(363,542,ls),
(370,556,o),
(382,556,qs),
(459,556,ls),
(472,556,o),
(466,543,qs),
(285,206,l),
(285,11,ls),
(285,0,o),
(274,0,qs),
(197,0,ls),
(187,0,o),
(187,11,qs),
(187,208,l),
(8,544,ls)
);
},
{
closed = 1;
nodes = (
(132,697,o),
(155,697,qs),
(178,697,o),
(209,665,o),
(209,642,qs),
(209,619,o),
(178,587,o),
(155,587,qs),
(132,587,o),
(101,619,o),
(101,642,qs),
(101,665,o)
);
},
{
closed = 1;
nodes = (
(289,697,o),
(312,697,qs),
(335,697,o),
(366,665,o),
(366,642,qs),
(366,619,o),
(335,587,o),
(312,587,qs),
(289,587,o),
(258,619,o),
(258,642,qs),
(258,665,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
14 7 0 3 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 36 36 36 36 53 52 50 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,91,o),
(419,35,qs),
(419,14,ls),
(419,0,o),
(405,0,qs),
(39,0,ls),
(29,0,o),
(29,11,qs),
(29,69,ls),
(29,89,o),
(43,108,qs),
(300,465,l),
(46,465,ls),
(35,465,o),
(35,476,qs),
(35,544,ls),
(35,556,o),
(46,556,qs),
(356,556,ls),
(418,556,o),
(418,496,qs),
(418,482,ls),
(418,464,o),
(405,445,qs),
(148,91,l),
(361,91,ls)
);
},
{
closed = 1;
nodes = (
(279,696,o),
(298,696,qs),
(357,696,ls),
(363,696,o),
(367,687,o),
(363,683,qs),
(288,609,ls),
(277,598,o),
(261,598,qs),
(186,598,ls),
(170,598,o),
(158,609,qs),
(83,683,l),
(80,687,o),
(84,696,o),
(88,696,qs),
(147,696,ls),
(168,696,o),
(179,683,qs),
(223,634,l),
(267,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,86,o),
(321,74,qs),
(321,11,ls),
(321,0,o),
(311,0,qs),
(38,0,ls),
(27,0,o),
(27,11,qs),
(27,54,ls),
(27,70,o),
(40,87,qs),
(204,290,l),
(45,290,ls),
(34,290,o),
(34,301,qs),
(34,364,ls),
(34,376,o),
(45,376,qs),
(259,376,ls),
(292,376,o),
(318,347,o),
(318,311,qs),
(318,291,o),
(305,275,qs),
(149,86,l),
(311,86,ls)
);
},
{
closed = 1;
nodes = (
(229,528,o),
(248,528,qs),
(306,528,ls),
(312,528,o),
(317,520,o),
(313,516,qs),
(238,441,ls),
(227,430,o),
(210,430,qs),
(136,430,ls),
(119,430,o),
(108,441,qs),
(33,516,ls),
(30,519,o),
(34,528,o),
(38,528,qs),
(97,528,ls),
(117,528,o),
(129,516,qs),
(173,466,l),
(217,516,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,289,o),
(55,301,qs),
(66,364,l),
(67,376,o),
(79,376,qs),
(148,376,l),
(156,424,ls),
(166,487,o),
(200,523,qs),
(237,561,o),
(292,561,qs),
(331,561,o),
(378,521,o),
(378,488,qs),
(378,459,o),
(363,459,qs),
(358,459,o),
(355,462,q),
(327,478,o),
(305,478,qs),
(262,478,o),
(252,418,qs),
(244,376,l),
(337,376,ls),
(346,376,o),
(345,364,q),
(333,301,ls),
(331,289,o),
(321,289,qs),
(229,289,l),
(171,-34,ls),
(159,-100,o),
(90,-171,o),
(37,-171,qs),
(-2,-171,o),
(-51,-130,o),
(-51,-97,qs),
(-51,-69,o),
(-36,-69,qs),
(-31,-69,o),
(-28,-72,q),
(-2,-89,o),
(22,-89,qs),
(66,-89,o),
(77,-28,qs),
(133,289,l),
(64,289,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 50 2 78 0 0 0 46 0 45 36 35 19 34 35 35 35 19 34 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 413;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,430,o),
(68,430,qs),
(9,430,ls),
(4,430,o),
(1,439,o),
(4,442,qs),
(79,518,ls),
(89,528,o),
(107,528,qs),
(181,528,ls),
(200,528,o),
(209,518,qs),
(283,442,l),
(287,439,o),
(283,430,o),
(277,430,qs),
(219,430,ls),
(199,430,o),
(188,443,qs),
(144,493,l),
(99,443,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
14 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 284;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,528,o),
(219,528,qs),
(277,528,ls),
(283,528,o),
(287,520,o),
(283,516,qs),
(209,441,ls),
(198,430,o),
(181,430,qs),
(107,430,ls),
(90,430,o),
(79,441,qs),
(4,516,ls),
(1,519,o),
(4,528,o),
(9,528,qs),
(68,528,ls),
(88,528,o),
(99,516,qs),
(143,466,l),
(188,516,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 1 0 133 0 1 1 118 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 284;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,527,qs),
(62,527,ls),
(70,527,o),
(72,518,qs),
(82,477,o),
(125,477,qs),
(170,477,o),
(180,518,q),
(181,527,o),
(190,527,qs),
(242,527,ls),
(251,527,o),
(249,517,qs),
(232,419,o),
(125,419,qs),
(75,419,o),
(11,470,o),
(3,517,qs),
(1,527,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
50 34 50 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 248;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,529,o),
(55,529,qs),
(78,529,o),
(108,497,o),
(108,473,qs),
(108,451,o),
(77,419,o),
(55,419,qs),
(32,419,o),
(0,451,o),
(0,473,qs),
(0,497,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 108;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,569,o),
(77,569,qs),
(109,569,o),
(153,525,o),
(153,494,qs),
(153,462,o),
(109,418,o),
(77,418,qs),
(45,418,o),
(0,463,o),
(0,494,qs),
(0,525,o)
);
},
{
closed = 1;
nodes = (
(109,479,o),
(109,494,qs),
(109,509,o),
(91,528,o),
(77,528,qs),
(63,528,o),
(44,508,o),
(44,494,qs),
(44,479,o),
(63,460,o),
(77,460,qs),
(91,460,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 153;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,-103,qs),
(142,-135,ls),
(142,-142,o),
(132,-145,qs),
(115,-150,o),
(94,-150,qs),
(52,-150,o),
(0,-109,o),
(0,-75,qs),
(0,-26,o),
(51,0,qs),
(54,2,o),
(62,2,qs),
(124,2,ls),
(127,2,o),
(128,-2,o),
(125,-3,q),
(70,-31,o),
(70,-66,qs),
(70,-99,o),
(110,-99,qs),
(116,-99,o),
(124,-97,qs),
(130,-96,o),
(132,-96,q),
(142,-93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 0 1 112 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
37 53 35 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 142;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,440,qs),
(6,528,o),
(71,528,qs),
(95,528,o),
(137,511,qs),
(172,497,o),
(185,497,qs),
(202,497,o),
(207,518,q),
(208,528,o),
(218,528,qs),
(259,528,ls),
(270,528,o),
(269,518,qs),
(265,472,o),
(228,432,o),
(192,432,qs),
(170,432,o),
(130,448,qs),
(96,461,o),
(84,461,qs),
(66,461,o),
(63,439,qs),
(61,429,o),
(51,429,qs),
(10,429,ls),
(0,429,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 4 0 0 1 114 5 1 3 4 0 3 90 0 4 1 0 4 90 0 4 4 0 98 2 6 2 0 4 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 4 0 4 1 0 128 5 1 3 4 0 3 90 0 4 1 0 4 90 0 4 4 0 98 2 6 2 0 4 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 24 22 20 18 16 13 10 8 6 4 0 26 2 26 7 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 271;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,439,o),
(3,443,qs),
(61,516,ls),
(71,528,o),
(88,528,qs),
(153,528,ls),
(159,528,o),
(163,520,o),
(160,516,qs),
(97,443,ls),
(87,431,o),
(69,431,qs),
(9,431,ls),
(4,431,o)
);
},
{
closed = 1;
nodes = (
(229,528,o),
(247,528,qs),
(312,528,ls),
(317,528,o),
(321,520,o),
(318,516,qs),
(256,443,ls),
(246,431,o),
(227,431,qs),
(168,431,ls),
(163,431,o),
(158,439,o),
(162,443,q),
(219,516,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 2 4 2 0 1 0 79 2 0 26 23 19 16 9 6 0 13 2 13 5 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 319;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,-160,o),
(131,-160,qs),
(56,-160,ls),
(47,-160,o),
(47,-149,qs),
(47,364,ls),
(47,376,o),
(56,376,qs),
(61,376,ls),
(141,376,o),
(141,291,qs),
(141,170,ls),
(141,79,o),
(220,79,qs),
(299,79,o),
(299,169,qs),
(299,364,ls),
(299,376,o),
(310,376,qs),
(315,376,ls),
(395,376,o),
(395,291,qs),
(395,176,ls),
(395,97,o),
(361,49,qs),
(318,-10,o),
(230,-10,qs),
(175,-10,o),
(141,13,q),
(141,-149,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 2 1 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 51 51 35 53 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 442;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,73,o),
(157,49,qs),
(157,23,o),
(121,-13,o),
(96,-13,qs),
(70,-13,o),
(35,24,o),
(35,51,qs),
(35,136,o),
(126,207,q),
(128,210,o),
(132,207,qs),
(156,184,o),
(132,158,qs),
(111,135,o),
(104,111,q),
(128,107,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
42 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,242,o),
(39,268,qs),
(39,354,o),
(129,426,qs),
(132,429,o),
(135,425,q),
(160,401,o),
(135,376,q),
(114,351,o),
(109,329,q),
(131,325,o),
(160,291,o),
(160,267,qs),
(160,241,o),
(125,205,o),
(99,205,qs),
(74,205,o)
);
},
{
closed = 1;
nodes = (
(160,75,o),
(160,49,qs),
(160,24,o),
(125,-13,o),
(99,-13,qs),
(74,-13,o),
(38,24,o),
(38,49,qs),
(38,75,o),
(74,112,o),
(99,112,qs),
(125,112,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 0 1 0 133 4 1 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
3 1 0 1 0 133 4 1 1 2 2 1 89 4 1 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
18 17 1 0 24 22 17 28 18 28 0 16 1 16 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 198;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,158,o),
(180,170,qs),
(180,216,ls),
(179,248,o),
(133,282,qs),
(82,321,o),
(49,374,o),
(49,416,qs),
(48,478,o),
(89,518,qs),
(134,564,o),
(208,564,qs),
(257,564,o),
(327,510,o),
(327,473,qs),
(327,452,o),
(314,452,qs),
(309,452,o),
(296,457,qs),
(248,474,o),
(217,473,qs),
(185,473,o),
(147,439,o),
(148,410,qs),
(149,381,o),
(194,345,qs),
(247,303,o),
(278,260,o),
(278,227,qs),
(279,170,ls),
(279,158,o),
(267,158,qs),
(192,158,ls)
);
},
{
closed = 1;
nodes = (
(291,75,o),
(291,49,qs),
(291,24,o),
(256,-13,o),
(230,-13,qs),
(205,-13,o),
(169,24,o),
(169,49,qs),
(169,75,o),
(205,112,o),
(230,112,qs),
(256,112,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 3 0 1 2 3 1 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 33 1 0 40 38 33 44 34 44 21 19 16 14 12 10 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 370;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,88,o),
(416,53,o),
(416,23,qs),
(416,16,ls),
(416,0,o),
(399,0,qs),
(152,0,ls),
(103,0,o),
(72,-22,qs),
(66,-26,o),
(59,-26,qs),
(53,-26,o),
(49,-18,qs),
(42,-1,o),
(54,43,o),
(69,57,qs),
(88,75,o),
(119,82,q),
(86,125,o),
(86,179,qs),
(86,251,o),
(128,299,qs),
(176,353,o),
(254,353,qs),
(315,353,o),
(351,319,qs),
(375,295,o),
(375,267,qs),
(375,242,o),
(361,242,qs),
(355,242,o),
(345,248,qs),
(305,269,o),
(266,269,qs),
(225,269,o),
(177,220,o),
(177,177,qs),
(177,139,o),
(226,88,o),
(263,88,qs),
(340,88,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
22 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 6 1 0 0 5 95 0 5 5 24 5 78 1 0 35 32 30 28 17 15 11 9 7 5 0 40 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,640,qs),
(69,657,o),
(58,657,qs),
(45,657,o),
(33,641,qs),
(32,639,o),
(30,636,qs),
(25,628,o),
(22,628,qs),
(18,628,o),
(17,631,q),
(9,642,o),
(9,658,qs),
(9,678,o),
(35,703,o),
(55,702,qs),
(69,702,o),
(102,688,qs),
(141,672,o),
(152,672,qs),
(165,672,o),
(177,688,qs),
(178,689,o),
(180,692,qs),
(185,701,o),
(188,701,qs),
(192,701,o),
(193,697,q),
(201,686,o),
(201,671,qs),
(201,650,o),
(175,625,o),
(156,626,qs),
(140,626,o)
);
},
{
closed = 1;
nodes = (
(56,0,o),
(56,10,qs),
(56,474,ls),
(56,556,o),
(133,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,82,ls),
(153,0,o),
(75,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
7 1 1 2 24 1 0 3 2 76 0 2 0 3 0 2 3 105 0 1 6 1 0 5 1 0 105 0 5 5 23 77 7 1 4 4 24 4 78 35 34 1 0 41 38 34 45 35 44 31 29 18 16 14 12 0 33 1 33 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,678,o),
(194,645,qs),
(194,640,ls),
(194,633,o),
(186,633,qs),
(73,633,ls),
(50,633,o),
(30,624,q),
(29,623,o),
(27,622,qs),
(24,621,o),
(23,621,qs),
(21,621,o),
(19,626,qs),
(16,632,o),
(16,639,qs),
(18,667,o),
(48,675,q),
(37,694,o),
(37,716,qs),
(37,749,o),
(80,794,o),
(112,795,qs),
(138,795,o),
(173,767,o),
(173,746,qs),
(173,736,o),
(168,736,qs),
(166,736,o),
(162,738,qs),
(157,741,o),
(155,742,qs),
(137,751,o),
(122,751,qs),
(84,751,o),
(84,716,qs),
(84,699,o),
(105,678,o),
(121,678,qs),
(157,678,ls)
);
},
{
closed = 1;
nodes = (
(153,556,o),
(153,546,qs),
(153,82,ls),
(153,0,o),
(75,0,qs),
(67,0,ls),
(55,0,o),
(55,10,qs),
(55,474,ls),
(55,556,o),
(133,556,qs),
(142,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
13 11 2 0 1 23 21 2 3 0 2 76 0 2 0 1 0 2 1 105 6 1 0 0 3 4 0 3 103 7 1 4 4 23 77 0 5 5 24 5 78 41 40 1 0 47 44 40 51 41 50 35 32 17 15 6 4 0 39 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,456,qs),
(137,462,o),
(137,469,qs),
(139,497,o),
(170,505,q),
(158,524,o),
(158,546,qs),
(158,579,o),
(201,624,o),
(234,625,qs),
(260,625,o),
(295,597,o),
(295,576,qs),
(295,566,o),
(290,566,qs),
(288,566,o),
(284,568,qs),
(279,571,o),
(276,572,q),
(259,581,o),
(243,581,qs),
(205,581,o),
(205,546,qs),
(205,530,o),
(226,508,o),
(242,508,qs),
(278,508,ls),
(315,508,o),
(315,475,qs),
(315,470,ls),
(315,463,o),
(307,463,qs),
(195,463,ls),
(171,463,o),
(151,454,q),
(150,453,o),
(148,452,qs),
(145,451,o),
(145,451,q),
(142,451,o)
);
},
{
closed = 1;
nodes = (
(407,123,qs),
(407,30,o),
(390,-77,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(144,-214,o),
(101,-178,q),
(75,-153,o),
(68,-121,qs),
(65,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(271,-89,qs),
(302,-54,o),
(307,11,q),
(263,-10,o),
(220,-10,qs),
(149,-10,o),
(102,39,qs),
(48,95,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(143,384,o),
(226,384,qs),
(341,384,o),
(384,279,qs),
(406,222,o)
);
},
{
closed = 1;
nodes = (
(294,243,qs),
(273,293,o),
(226,293,qs),
(192,293,o),
(149,235,o),
(149,189,qs),
(149,140,o),
(192,84,o),
(229,84,qs),
(276,84,o),
(306,108,q),
(307,120,o),
(307,129,qs),
(308,205,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
26 24 2 1 2 36 34 2 0 1 52 1 5 9 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 0 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
85 83 79 77 36 34 36 38 43 41 35 51 53 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,0,o),
(55,10,qs),
(55,474,ls),
(55,556,o),
(133,556,qs),
(141,556,ls),
(152,556,o),
(152,546,qs),
(152,82,ls),
(152,0,o),
(75,0,qs),
(66,0,ls)
);
},
{
closed = 1;
nodes = (
(191,-190,o),
(191,-223,qs),
(191,-228,ls),
(191,-235,o),
(183,-235,qs),
(70,-235,ls),
(47,-235,o),
(27,-244,qs),
(25,-245,o),
(24,-246,q),
(21,-247,o),
(20,-247,qs),
(18,-247,o),
(16,-243,qs),
(13,-236,o),
(13,-229,qs),
(15,-201,o),
(45,-193,q),
(34,-174,o),
(34,-152,qs),
(34,-119,o),
(77,-74,o),
(109,-73,qs),
(135,-73,o),
(170,-101,o),
(170,-123,qs),
(170,-133,o),
(165,-133,qs),
(163,-133,o),
(158,-130,qs),
(154,-128,o),
(152,-127,qs),
(134,-118,o),
(119,-118,qs),
(81,-118,o),
(81,-153,qs),
(81,-169,o),
(102,-190,o),
(118,-190,qs),
(154,-190,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
35 33 2 6 2 1 76 39 1 6 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 4 1 3 2 5 3 105 8 1 2 0 6 2 6 99 0 1 1 23 77 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 8 1 2 0 6 2 6 99 0 1 1 23 77 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 47 44 29 27 24 22 18 16 12 51 13 50 7 4 0 11 1 10 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,314,qs),
(47,320,o),
(47,328,qs),
(49,355,o),
(79,363,q),
(68,383,o),
(68,404,qs),
(68,437,o),
(111,482,o),
(143,483,qs),
(169,484,o),
(204,455,o),
(204,434,qs),
(204,424,o),
(199,424,qs),
(197,424,o),
(192,427,qs),
(188,429,o),
(186,430,qs),
(168,439,o),
(153,439,qs),
(115,439,o),
(115,404,qs),
(115,388,o),
(136,367,o),
(152,367,qs),
(188,367,ls),
(225,367,o),
(225,333,qs),
(225,328,ls),
(225,322,o),
(217,322,qs),
(104,322,ls),
(81,322,o),
(61,312,q),
(59,312,o),
(58,311,qs),
(55,309,o),
(54,309,qs),
(52,309,o)
);
},
{
closed = 1;
nodes = (
(631,54,o),
(626,10,qs),
(616,-84,o),
(545,-145,qs),
(463,-214,o),
(339,-214,qs),
(214,-214,o),
(134,-145,qs),
(48,-70,o),
(48,43,qs),
(48,107,o),
(110,216,o),
(161,240,qs),
(169,244,o),
(175,244,qs),
(188,244,o),
(188,231,qs),
(188,225,o),
(183,217,qs),
(142,148,o),
(142,67,qs),
(142,-15,o),
(190,-65,qs),
(244,-122,o),
(339,-122,qs),
(406,-122,o),
(506,-61,o),
(523,-9,qs),
(529,7,o),
(498,28,o),
(453,38,qs),
(422,44,ls),
(275,80,o),
(275,203,qs),
(275,277,o),
(321,328,qs),
(373,384,o),
(456,384,qs),
(530,384,o),
(568,345,qs),
(593,320,o),
(593,291,qs),
(593,264,o),
(576,263,qs),
(571,263,o),
(562,268,qs),
(520,293,o),
(472,293,qs),
(427,293,o),
(374,244,o),
(374,204,qs),
(374,150,o),
(456,131,qs),
(553,110,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 34 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 4 3 1 2 1 4 2 105 0 0 5 1 0 87 7 1 1 0 5 6 1 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 4 3 1 2 7 4 2 105 0 1 0 0 5 1 0 103 0 7 0 5 6 7 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 4 3 1 2 1 4 2 105 0 0 5 1 0 87 7 1 1 0 5 6 1 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 4 3 1 2 7 4 2 105 0 1 0 0 5 1 0 103 0 7 0 5 6 7 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 3 2 7 2 3 7 128 0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 7 0 5 6 7 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
88 86 78 77 43 36 34 46 35 36 35 51 53 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,10,qs),
(56,474,ls),
(56,556,o),
(134,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,82,ls),
(153,0,o),
(75,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,qs),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
},
{
closed = 1;
nodes = (
(435,-96,o),
(435,-118,qs),
(435,-141,o),
(405,-172,o),
(382,-172,qs),
(361,-172,o),
(330,-141,o),
(330,-118,qs),
(330,-96,o),
(360,-65,o),
(382,-65,qs),
(405,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
6 1 0 2 0 133 0 2 1 2 133 7 1 4 0 5 4 5 101 0 1 1 3 96 0 3 3 24 3 78 34 33 1 0 40 38 33 44 34 44 26 23 15 14 7 4 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,561,o),
(77,582,qs),
(77,603,o),
(107,633,o),
(127,633,qs),
(148,633,o),
(177,603,o),
(177,582,qs),
(177,561,o),
(148,531,o),
(127,531,qs),
(106,531,o)
);
},
{
closed = 1;
nodes = (
(198,561,o),
(198,582,qs),
(198,603,o),
(227,633,o),
(248,633,qs),
(269,633,o),
(298,603,o),
(298,582,qs),
(298,561,o),
(269,531,o),
(248,531,qs),
(227,531,o)
);
},
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
58 40 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 64 54 64 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,403,o),
(273,424,qs),
(273,446,o),
(302,475,o),
(323,475,qs),
(344,475,o),
(373,446,o),
(373,424,qs),
(373,403,o),
(344,373,o),
(323,373,qs),
(302,373,o)
);
},
{
closed = 1;
nodes = (
(394,403,o),
(394,424,qs),
(394,446,o),
(423,475,o),
(444,475,qs),
(464,475,o),
(494,446,o),
(494,424,qs),
(494,403,o),
(465,373,o),
(444,373,qs),
(423,373,o)
);
},
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
10 1 4 0 6 0 4 6 128 0 6 5 0 6 5 126 3 1 1 9 2 8 3 0 4 1 0 105 0 5 5 7 96 0 7 7 24 7 78 25 24 13 12 1 0 51 48 39 38 31 28 24 57 25 56 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,509,o),
(337,528,qs),
(337,548,o),
(364,576,o),
(384,576,qs),
(403,576,o),
(430,548,o),
(430,528,qs),
(430,509,o),
(402,482,o),
(384,482,qs),
(364,482,o)
);
},
{
closed = 1;
nodes = (
(274,402,o),
(274,423,qs),
(274,445,o),
(302,474,o),
(323,474,qs),
(344,474,o),
(374,445,o),
(374,423,qs),
(374,402,o),
(344,372,o),
(323,372,qs),
(303,372,o)
);
},
{
closed = 1;
nodes = (
(394,402,o),
(394,423,qs),
(394,445,o),
(423,474,o),
(444,474,qs),
(465,474,o),
(494,445,o),
(494,423,qs),
(494,402,o),
(464,372,o),
(444,372,qs),
(423,372,o)
);
},
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
13 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 6 3 2 105 0 7 7 9 96 0 9 9 24 9 78 37 36 25 24 13 12 1 0 63 60 51 50 43 40 36 69 37 68 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(417,384,o),
(474,211,qs),
(496,137,o),
(519,112,qs),
(530,99,o),
(550,97,qs),
(562,96,o),
(562,86,qs),
(562,46,o),
(513,0,o),
(472,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(417,97,l),
(401,113,o),
(373,194,qs),
(336,293,o),
(257,293,qs),
(196,293,o)
);
},
{
closed = 1;
nodes = (
(368,-96,o),
(368,-118,qs),
(368,-141,o),
(337,-172,o),
(315,-172,qs),
(293,-172,o),
(263,-141,o),
(263,-118,qs),
(263,-96,o),
(293,-65,o),
(315,-65,qs),
(338,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 5 8 1 0 1 5 0 105 9 1 6 0 7 3 6 7 105 0 3 0 2 3 2 101 0 1 1 4 95 0 4 4 24 4 78 57 56 1 0 63 61 56 67 57 67 46 44 35 32 26 24 14 12 6 4 0 55 1 55 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(417,384,o),
(474,211,qs),
(496,137,o),
(519,112,qs),
(530,99,o),
(550,97,qs),
(562,96,o),
(562,86,qs),
(562,46,o),
(513,0,o),
(472,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(417,97,l),
(401,113,o),
(373,194,qs),
(336,293,o),
(257,293,qs),
(196,293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 5 6 1 0 1 5 0 105 0 3 0 2 3 2 101 0 1 1 4 95 0 4 4 24 4 78 1 0 46 44 35 32 26 24 14 12 6 4 0 55 1 55 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,521,o),
(326,498,qs),
(326,476,o),
(296,444,o),
(274,444,qs),
(252,444,o),
(221,476,o),
(221,498,qs),
(221,521,o),
(251,552,o),
(274,552,qs),
(296,552,o)
);
},
{
closed = 1;
nodes = (
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(417,384,o),
(474,211,qs),
(496,137,o),
(519,112,qs),
(530,99,o),
(550,97,qs),
(562,96,o),
(562,86,qs),
(562,46,o),
(513,0,o),
(472,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(417,97,l),
(401,113,o),
(373,194,qs),
(336,293,o),
(257,293,qs),
(196,293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 7 9 1 2 3 7 2 105 0 5 0 4 5 4 101 0 1 1 0 97 8 1 0 0 23 77 0 3 3 6 95 0 6 6 24 6 78 13 12 1 0 58 56 47 44 38 36 26 24 18 16 12 67 13 67 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o),
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,111,o),
(331,59,qs),
(280,0,o),
(201,0,qs),
(62,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 3 1 2 4 1 2 105 0 4 4 0 95 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 3 1 2 4 1 2 105 0 4 4 0 95 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 28 25 21 19 14 13 9 7 0 34 1 33 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,518,o),
(205,496,qs),
(205,473,o),
(175,442,o),
(153,442,qs),
(131,442,o),
(100,473,o),
(100,496,qs),
(100,518,o),
(131,549,o),
(153,549,qs),
(175,549,o)
);
},
{
closed = 1;
nodes = (
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o),
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,111,o),
(331,59,qs),
(280,0,o),
(201,0,qs),
(62,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 5 1 4 6 3 4 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 5 1 4 6 3 4 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 40 37 33 31 26 25 21 19 12 46 13 45 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 3 133 1 4 2 0 2 2 0 89 1 4 2 0 0 2 98 0 2 0 2 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 98 0 2 0 2 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 21 18 13 11 7 5 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,502,o),
(219,479,qs),
(219,457,o),
(189,426,o),
(167,426,qs),
(145,426,o),
(114,457,o),
(114,479,qs),
(114,502,o),
(145,533,o),
(167,533,qs),
(189,533,o)
);
},
{
closed = 1;
nodes = (
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 1 2 1 5 2 128 6 1 0 0 1 5 0 1 105 3 7 2 2 4 4 2 89 3 7 2 2 2 4 98 0 4 2 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 7 1 2 4 4 2 89 7 1 2 2 4 98 0 4 2 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
13 12 1 0 33 30 25 23 19 17 12 36 13 36 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1045,366,o),
(1045,356,qs),
(1045,168,ls),
(1045,91,o),
(1007,44,qs),
(962,-10,o),
(877,-10,qs),
(800,-10,o),
(755,33,q),
(711,-10,o),
(634,-10,qs),
(592,-10,o),
(558,4,q),
(542,-92,o),
(481,-149,qs),
(411,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,239,ls),
(466,322,o),
(544,322,qs),
(552,322,ls),
(563,322,o),
(563,311,qs),
(563,168,ls),
(563,82,o),
(635,82,qs),
(706,82,o),
(706,168,qs),
(706,262,ls),
(706,344,o),
(784,344,qs),
(793,344,ls),
(804,344,o),
(804,334,qs),
(804,168,ls),
(804,82,o),
(876,82,qs),
(947,82,o),
(947,168,qs),
(947,284,ls),
(947,366,o),
(1025,366,qs),
(1034,366,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 52 2 8 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 101 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 106 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 59 57 55 53 49 47 40 38 30 28 23 20 17 15 12 9 6 4 0 65 1 64 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1101;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(707,542,o),
(707,561,qs),
(707,581,o),
(734,608,o),
(753,608,qs),
(772,608,o),
(799,581,o),
(799,561,qs),
(799,542,o),
(772,514,o),
(753,514,qs),
(734,514,o)
);
},
{
closed = 1;
nodes = (
(643,435,o),
(643,456,qs),
(643,478,o),
(672,507,o),
(692,507,qs),
(714,507,o),
(743,477,o),
(743,456,qs),
(743,435,o),
(713,405,o),
(692,405,qs),
(672,405,o)
);
},
{
closed = 1;
nodes = (
(792,507,o),
(813,507,qs),
(834,507,o),
(863,478,o),
(863,456,qs),
(863,435,o),
(834,405,o),
(813,405,qs),
(792,405,o),
(763,435,o),
(763,456,qs),
(763,478,o)
);
},
{
closed = 1;
nodes = (
(1045,366,o),
(1045,356,qs),
(1045,168,ls),
(1045,91,o),
(1007,44,qs),
(962,-10,o),
(877,-10,qs),
(800,-10,o),
(755,33,q),
(711,-10,o),
(634,-10,qs),
(592,-10,o),
(558,4,q),
(542,-92,o),
(481,-149,qs),
(411,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,239,ls),
(466,322,o),
(544,322,qs),
(552,322,ls),
(563,322,o),
(563,311,qs),
(563,168,ls),
(563,82,o),
(635,82,qs),
(706,82,o),
(706,168,qs),
(706,262,ls),
(706,344,o),
(784,344,qs),
(793,344,ls),
(804,344,o),
(804,334,qs),
(804,168,ls),
(804,82,o),
(876,82,qs),
(947,82,o),
(947,168,qs),
(947,284,ls),
(947,366,o),
(1025,366,qs),
(1034,366,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
92 88 2 14 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 101 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 106 0 11 13 13 11 89 0 11 11 13 97 0 13 11 13 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
37 36 13 12 1 0 95 93 91 89 85 83 76 74 66 64 59 56 53 51 48 45 42 40 36 101 37 100 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1101;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1131,336,qs),
(1193,280,o),
(1193,186,qs),
(1193,106,o),
(1147,56,qs),
(1097,0,o),
(1017,0,qs),
(644,0,ls),
(602,0,o),
(568,14,q),
(554,-86,o),
(492,-146,qs),
(422,-214,o),
(312,-214,qs),
(208,-214,o),
(138,-152,qs),
(56,-79,o),
(56,44,qs),
(56,110,o),
(120,215,o),
(172,237,q),
(179,241,o),
(186,241,qs),
(201,241,o),
(200,228,qs),
(200,222,o),
(195,216,q),
(150,143,o),
(150,64,qs),
(149,-20,o),
(191,-69,qs),
(236,-122,o),
(312,-122,qs),
(376,-122,o),
(419,-82,qs),
(474,-31,o),
(474,64,qs),
(474,284,ls),
(474,366,o),
(552,366,qs),
(560,366,ls),
(571,366,o),
(571,356,qs),
(571,178,ls),
(571,140,o),
(609,97,o),
(642,97,q),
(680,214,o),
(759,290,qs),
(857,384,o),
(989,384,qs),
(1075,384,o)
);
},
{
closed = 1;
nodes = (
(1047,97,o),
(1094,150,o),
(1094,191,qs),
(1093,238,o),
(1064,265,qs),
(1033,293,o),
(983,293,qs),
(910,293,o),
(850,245,qs),
(785,193,o),
(749,97,q),
(1011,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 6 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 7 1 7 4 1 128 2 9 2 0 0 7 4 0 7 105 0 3 0 5 3 5 101 10 8 2 1 1 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 101 10 8 2 1 1 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
52 52 1 0 52 63 52 62 57 55 45 42 38 36 29 27 19 17 12 9 5 4 0 51 1 51 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1242;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,474,o),
(911,497,qs),
(911,519,o),
(942,550,o),
(964,550,qs),
(986,550,o),
(1016,519,o),
(1016,497,qs),
(1016,474,o),
(986,443,o),
(964,443,qs),
(942,443,o)
);
},
{
closed = 1;
nodes = (
(1131,336,qs),
(1193,280,o),
(1193,186,qs),
(1193,106,o),
(1147,56,qs),
(1097,0,o),
(1017,0,qs),
(644,0,ls),
(602,0,o),
(568,14,q),
(554,-86,o),
(492,-146,qs),
(422,-214,o),
(312,-214,qs),
(208,-214,o),
(138,-152,qs),
(56,-79,o),
(56,44,qs),
(56,110,o),
(120,215,o),
(172,237,q),
(179,241,o),
(186,241,qs),
(201,241,o),
(200,228,qs),
(200,222,o),
(195,216,q),
(150,143,o),
(150,64,qs),
(149,-20,o),
(191,-69,qs),
(236,-122,o),
(312,-122,qs),
(376,-122,o),
(419,-82,qs),
(474,-31,o),
(474,64,qs),
(474,284,ls),
(474,366,o),
(552,366,qs),
(560,366,ls),
(571,366,o),
(571,356,qs),
(571,178,ls),
(571,140,o),
(609,97,o),
(642,97,q),
(680,214,o),
(759,290,qs),
(857,384,o),
(989,384,qs),
(1075,384,o)
);
},
{
closed = 1;
nodes = (
(1047,97,o),
(1094,150,o),
(1094,191,qs),
(1093,238,o),
(1064,265,qs),
(1033,293,o),
(983,293,qs),
(910,293,o),
(850,245,qs),
(785,193,o),
(749,97,q),
(1011,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 8 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 9 3 9 6 3 128 4 12 2 2 0 9 6 2 9 105 0 5 0 7 5 7 101 11 1 0 0 1 97 0 1 1 23 77 13 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 101 11 1 0 0 1 97 0 1 1 23 77 13 10 2 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
64 64 13 12 1 0 64 75 64 74 69 67 57 54 50 48 41 39 31 29 24 21 17 16 12 63 13 63 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1242;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(646,336,qs),
(709,280,o),
(709,186,qs),
(709,106,o),
(663,56,qs),
(613,0,o),
(532,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(167,97,l),
(167,474,ls),
(167,556,o),
(245,556,qs),
(254,556,ls),
(265,556,o),
(265,546,qs),
(265,273,l),
(365,384,o),
(504,384,qs),
(591,384,o)
);
},
{
closed = 1;
nodes = (
(563,97,o),
(610,150,o),
(609,191,qs),
(609,238,o),
(549,293,o),
(499,293,qs),
(426,293,o),
(366,245,qs),
(301,193,o),
(265,97,q),
(526,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 2 4 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 26 26 1 0 26 36 26 35 31 29 19 16 11 9 7 4 0 25 1 25 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(646,336,qs),
(709,280,o),
(709,186,qs),
(709,106,o),
(663,56,qs),
(613,0,o),
(532,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(167,97,l),
(167,474,ls),
(167,556,o),
(245,556,qs),
(254,556,ls),
(265,556,o),
(265,546,qs),
(265,273,l),
(365,384,o),
(504,384,qs),
(591,384,o)
);
},
{
closed = 1;
nodes = (
(425,474,o),
(425,496,qs),
(425,519,o),
(456,549,o),
(478,549,qs),
(500,549,o),
(530,519,o),
(530,496,qs),
(530,473,o),
(500,442,o),
(478,442,qs),
(456,442,o)
);
},
{
closed = 1;
nodes = (
(563,97,o),
(610,150,o),
(609,191,qs),
(609,238,o),
(549,293,o),
(499,293,qs),
(426,293,o),
(366,245,qs),
(301,193,o),
(265,97,q),
(526,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 0 0 6 2 0 6 105 9 1 4 4 1 97 5 1 1 1 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 0 6 2 0 6 105 0 1 1 23 77 9 1 4 4 5 97 0 5 5 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
38 38 27 26 1 0 38 48 38 47 43 41 33 31 26 37 27 37 19 16 11 9 7 4 0 25 1 25 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,4,o),
(145,63,q),
(88,114,o),
(87,194,qs),
(87,272,o),
(136,325,qs),
(191,384,o),
(278,384,qs),
(337,384,o),
(415,330,o),
(416,288,qs),
(416,263,o),
(400,263,qs),
(394,263,o),
(386,268,qs),
(343,293,o),
(292,293,qs),
(244,293,o),
(187,238,o),
(187,193,qs),
(186,152,o),
(238,97,o),
(278,97,qs),
(386,97,ls),
(423,97,o),
(469,57,o),
(469,25,qs),
(469,17,ls),
(469,6,o),
(462,0,o),
(451,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
44 1 1 2 1 76 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 0 0 6 0 6 101 0 2 2 1 95 0 1 1 24 1 78 42 35 34 36 53 54 37 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,472,o),
(217,494,qs),
(217,517,o),
(247,548,o),
(270,548,qs),
(292,548,o),
(322,517,o),
(322,494,qs),
(322,472,o),
(292,441,o),
(270,441,qs),
(248,441,o)
);
},
{
closed = 1;
nodes = (
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,4,o),
(145,63,q),
(88,114,o),
(87,194,qs),
(87,272,o),
(136,325,qs),
(191,384,o),
(278,384,qs),
(337,384,o),
(415,330,o),
(416,288,qs),
(416,263,o),
(400,263,qs),
(394,263,o),
(386,268,qs),
(343,293,o),
(292,293,qs),
(244,293,o),
(187,238,o),
(187,193,qs),
(186,152,o),
(238,97,o),
(278,97,qs),
(386,97,ls),
(423,97,o),
(469,57,o),
(469,25,qs),
(469,17,ls),
(469,6,o),
(462,0,o),
(451,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
56 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 9 1 0 0 1 97 0 1 1 23 77 0 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 9 1 0 7 1 0 105 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 0 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 63 61 51 49 46 44 42 40 36 33 28 25 19 17 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,0,l),
(-2,0,l),
(-2,97,l),
(114,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,476,o),
(582,498,qs),
(582,521,o),
(612,552,o),
(635,552,qs),
(657,552,o),
(687,521,o),
(687,498,qs),
(687,476,o),
(657,444,o),
(635,444,qs),
(613,444,o)
);
},
{
closed = 1;
nodes = (
(753,338,qs),
(810,284,o),
(810,192,qs),
(810,113,o),
(766,60,qs),
(717,1,o),
(636,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(479,97,l),
(456,134,o),
(455,192,qs),
(455,272,o),
(499,325,qs),
(550,384,o),
(632,384,qs),
(704,384,o)
);
},
{
closed = 1;
nodes = (
(710,152,o),
(710,194,qs),
(710,237,o),
(666,293,o),
(633,293,qs),
(600,293,o),
(555,236,o),
(555,194,qs),
(555,153,o),
(600,97,o),
(633,97,qs),
(666,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 4 2 7 2 4 7 128 9 1 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 10 6 2 3 3 5 96 0 5 5 24 5 78 48 47 13 12 1 0 54 52 47 58 48 58 40 37 28 27 20 18 12 46 13 46 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,472,o),
(344,494,qs),
(344,515,o),
(373,544,o),
(394,544,qs),
(414,544,o),
(444,515,o),
(444,494,qs),
(444,472,o),
(415,443,o),
(394,443,qs),
(373,443,o)
);
},
{
closed = 1;
nodes = (
(464,472,o),
(464,494,qs),
(464,515,o),
(493,544,o),
(514,544,qs),
(535,544,o),
(564,515,o),
(564,494,qs),
(564,472,o),
(535,443,o),
(514,443,qs),
(493,443,o)
);
},
{
closed = 1;
nodes = (
(635,98,qs),
(632,-42,o),
(565,-123,qs),
(488,-215,o),
(341,-214,qs),
(215,-214,o),
(135,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(193,-67,qs),
(247,-122,o),
(341,-122,qs),
(408,-122,o),
(454,-93,qs),
(507,-59,o),
(525,7,q),
(487,-10,o),
(447,-10,qs),
(377,-10,o),
(329,39,qs),
(276,95,o),
(276,185,qs),
(276,272,o),
(321,326,qs),
(371,384,o),
(454,384,qs),
(568,384,o),
(611,279,qs),
(637,216,o)
);
},
{
closed = 1;
nodes = (
(419,84,o),
(456,84,qs),
(504,84,o),
(534,108,q),
(535,119,o),
(535,129,qs),
(536,206,o),
(521,243,qs),
(500,293,o),
(454,293,qs),
(420,293,o),
(376,235,o),
(376,189,qs),
(376,140,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 9 10 9 7 10 128 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 10 0 5 6 10 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 77 75 69 67 60 58 50 49 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,556,o),
(701,546,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,474,ls),
(603,556,o),
(681,556,qs),
(690,556,ls)
);
},
{
closed = 1;
nodes = (
(282,268,qs),
(279,286,o),
(299,314,o),
(320,319,q),
(304,342,o),
(304,367,qs),
(304,405,o),
(353,456,o),
(390,456,qs),
(420,457,o),
(460,428,o),
(461,406,qs),
(461,392,o),
(454,393,qs),
(448,394,o),
(439,399,qs),
(420,408,o),
(400,408,qs),
(355,408,o),
(355,367,qs),
(355,348,o),
(382,323,o),
(402,323,qs),
(442,323,ls),
(482,323,o),
(482,287,qs),
(482,283,ls),
(482,274,o),
(474,274,qs),
(348,274,ls),
(318,274,o),
(297,266,qs),
(291,263,o),
(288,263,qs),
(283,263,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
64 1 2 6 34 1 1 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
64 1 2 5 34 1 1 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 0 6 2 7 6 105 5 1 2 0 4 1 2 4 103 8 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 5 4 5 2 4 128 0 7 0 6 5 7 6 105 0 5 0 4 1 5 4 103 8 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 60 58 51 49 46 43 40 37 27 24 15 14 7 4 0 33 1 32 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 101 0 1 1 23 1 78 1 0 26 24 16 14 9 6 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(516,322,qs),
(560,262,o),
(560,172,qs),
(560,90,o),
(519,43,qs),
(474,-10,o),
(387,-10,qs),
(303,-10,o),
(216,36,q),
(201,36,ls),
(137,34,o),
(137,-46,qs),
(137,-207,ls),
(137,-288,o),
(59,-288,qs),
(50,-288,ls),
(39,-288,o),
(39,-278,qs),
(39,-44,ls),
(39,107,o),
(166,130,q),
(173,140,o),
(187,169,qs),
(193,182,o),
(196,188,qs),
(243,286,o),
(268,319,qs),
(317,384,o),
(386,384,qs),
(469,384,o)
);
},
{
closed = 1;
nodes = (
(459,173,qs),
(459,230,o),
(423,293,o),
(391,293,qs),
(369,293,o),
(328,237,o),
(293,161,qs),
(278,128,o),
(271,117,q),
(337,83,o),
(392,84,qs),
(459,87,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 2 3 4 89 7 1 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
31 30 1 0 38 36 30 41 31 41 23 21 20 18 15 12 0 29 1 29 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,405,o),
(360,382,qs),
(360,360,o),
(330,328,o),
(308,328,qs),
(286,328,o),
(255,360,o),
(255,382,qs),
(255,405,o),
(286,436,o),
(308,436,qs),
(330,436,o)
);
},
{
closed = 1;
nodes = (
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,284,ls),
(466,366,o),
(544,366,qs),
(552,366,ls),
(563,366,o),
(563,356,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 97 7 1 2 4 2 81 13 12 1 0 38 36 28 26 21 18 12 45 13 45 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 40 30 40 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,123,qs),
(407,30,o),
(390,-77,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(144,-214,o),
(101,-178,q),
(75,-153,o),
(68,-121,qs),
(65,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(271,-89,qs),
(302,-54,o),
(307,11,q),
(263,-10,o),
(220,-10,qs),
(149,-10,o),
(102,39,qs),
(48,95,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(143,384,o),
(226,384,qs),
(341,384,o),
(384,279,qs),
(406,222,o)
);
},
{
closed = 1;
nodes = (
(294,243,qs),
(273,293,o),
(226,293,qs),
(192,293,o),
(149,235,o),
(149,189,qs),
(149,140,o),
(192,84,o),
(229,84,qs),
(276,84,o),
(306,108,q),
(307,120,o),
(307,129,qs),
(308,205,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 1 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 42 36 34 36 38 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(545,-145,qs),
(463,-214,o),
(339,-214,qs),
(214,-214,o),
(134,-145,qs),
(48,-70,o),
(48,43,qs),
(48,107,o),
(110,216,o),
(161,240,qs),
(169,244,o),
(175,244,qs),
(187,244,o),
(187,231,qs),
(187,225,o),
(182,217,qs),
(142,148,o),
(142,67,qs),
(142,-15,o),
(190,-65,qs),
(244,-122,o),
(339,-122,qs),
(406,-122,o),
(506,-61,o),
(523,-9,qs),
(529,7,o),
(498,28,o),
(453,38,qs),
(422,44,ls),
(275,80,o),
(275,203,qs),
(275,277,o),
(321,328,qs),
(373,384,o),
(456,384,qs),
(530,384,o),
(568,345,qs),
(592,321,o),
(592,291,qs),
(592,264,o),
(576,263,qs),
(571,263,o),
(562,268,qs),
(520,293,o),
(472,293,qs),
(427,293,o),
(374,244,o),
(374,204,qs),
(374,150,o),
(456,131,qs),
(553,110,o),
(631,54,o),
(626,10,qs),
(616,-84,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 40 24 43 36 34 39 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(545,-145,qs),
(463,-214,o),
(339,-214,qs),
(214,-214,o),
(134,-145,qs),
(48,-70,o),
(48,43,qs),
(48,107,o),
(110,216,o),
(161,240,qs),
(169,244,o),
(175,244,qs),
(187,244,o),
(187,231,qs),
(187,225,o),
(182,217,qs),
(142,148,o),
(142,67,qs),
(142,-15,o),
(190,-65,qs),
(244,-122,o),
(339,-122,qs),
(406,-122,o),
(506,-61,o),
(523,-9,qs),
(529,7,o),
(498,28,o),
(453,38,qs),
(422,44,ls),
(275,80,o),
(275,203,qs),
(275,277,o),
(321,328,qs),
(373,384,o),
(456,384,qs),
(530,384,o),
(568,345,qs),
(592,321,o),
(592,291,qs),
(592,264,o),
(576,263,qs),
(571,263,o),
(562,268,qs),
(520,293,o),
(472,293,qs),
(427,293,o),
(374,244,o),
(374,204,qs),
(374,150,o),
(456,131,qs),
(553,110,o),
(631,54,o),
(626,10,qs),
(616,-84,o)
);
},
{
closed = 1;
nodes = (
(327,-301,o),
(327,-322,qs),
(327,-343,o),
(298,-373,o),
(277,-373,qs),
(257,-373,o),
(227,-343,o),
(227,-322,qs),
(227,-301,o),
(256,-271,o),
(277,-271,qs),
(298,-271,o)
);
},
{
closed = 1;
nodes = (
(447,-301,o),
(447,-322,qs),
(447,-343,o),
(419,-373,o),
(398,-373,qs),
(377,-373,o),
(347,-343,o),
(347,-322,qs),
(347,-301,o),
(377,-271,o),
(398,-271,qs),
(419,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 0 5 6 3 5 105 11 8 10 3 6 7 7 6 89 11 8 10 3 6 6 7 97 9 1 7 6 7 81 67 66 55 54 73 71 66 77 67 77 61 59 54 65 55 65 40 24 43 36 34 39 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,747,ls),
(183,747,o),
(183,714,qs),
(183,709,ls),
(183,702,o),
(175,702,qs),
(60,702,ls),
(40,702,o),
(22,695,qs),
(17,693,o),
(16,693,q),
(11,690,o),
(9,690,qs),
(6,690,o),
(5,694,qs),
(2,701,o),
(2,708,qs),
(5,747,o),
(57,747,qs),
(109,747,l)
);
},
{
closed = 1;
nodes = (
(183,661,o),
(183,628,qs),
(183,623,ls),
(183,616,o),
(175,616,qs),
(60,616,ls),
(40,616,o),
(22,609,qs),
(16,607,l),
(11,604,o),
(9,604,qs),
(6,604,o),
(5,608,qs),
(2,615,o),
(2,622,qs),
(5,660,o),
(57,661,qs),
(146,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 64 values pushed */
2 1 1 0 6 1 2 1 22 1 3 2 3 76 26 1 3 73 4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 21 20 1 0 33 30 20 37 21 36 14 11 0 19 1 17 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,605,o),
(242,578,qs),
(242,552,o),
(209,524,q),
(223,500,o),
(199,482,qs),
(194,479,o),
(189,483,qs),
(174,498,l),
(146,477,ls),
(130,464,o),
(113,464,qs),
(99,464,o),
(77,486,qs),
(65,500,o),
(58,500,qs),
(49,500,o),
(37,475,qs),
(33,466,o),
(26,474,qs),
(11,494,o),
(21,519,qs),
(31,545,o),
(58,545,qs),
(78,545,o),
(102,522,qs),
(103,521,o),
(104,520,qs),
(115,511,o),
(119,511,qs),
(124,511,o),
(131,515,q),
(144,526,l),
(117,553,o),
(117,579,qs),
(116,606,o),
(151,640,o),
(179,640,qs),
(208,639,o)
);
},
{
closed = 1;
nodes = (
(190,603,o),
(181,603,qs),
(157,603,o),
(158,579,qs),
(158,565,o),
(177,548,q),
(202,565,o),
(202,579,qs),
(202,589,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 67 values pushed */
41 1 2 5 34 5 2 1 2 29 1 4 3 3 76 6 1 0 0 5 2 0 5 105 0 1 3 4 1 89 0 2 0 3 4 2 3 105 0 1 1 4 97 0 4 1 4 81 1 0 46 44 27 25 23 21 15 13 9 7 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-66,ls),
(183,-66,o),
(183,-99,qs),
(183,-104,ls),
(183,-111,o),
(175,-111,qs),
(59,-111,ls),
(40,-111,o),
(22,-118,qs),
(16,-120,ls),
(10,-123,o),
(9,-123,qs),
(6,-123,o),
(4,-118,qs),
(2,-110,o),
(2,-104,qs),
(4,-66,o),
(57,-66,qs),
(109,-66,l)
);
},
{
closed = 1;
nodes = (
(183,-152,o),
(183,-185,qs),
(183,-190,ls),
(183,-197,o),
(175,-197,qs),
(59,-197,ls),
(39,-197,o),
(20,-204,qs),
(17,-205,o),
(16,-206,q),
(10,-208,o),
(9,-208,qs),
(7,-208,o),
(4,-204,q),
(2,-196,o),
(2,-191,qs),
(4,-153,o),
(57,-152,qs),
(145,-152,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 56 values pushed */
2 1 1 0 21 1 3 2 2 76 4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 20 19 1 0 33 30 19 37 20 36 13 10 0 18 1 16 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,664,o),
(183,631,qs),
(183,626,ls),
(183,619,o),
(175,619,qs),
(60,619,ls),
(40,619,o),
(22,613,qs),
(16,611,l),
(11,608,o),
(9,608,qs),
(6,608,o),
(5,612,q),
(2,618,o),
(2,626,qs),
(5,664,o),
(57,664,qs),
(146,664,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 1 0 1 76 6 1 1 73 2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 17 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,611,o),
(186,585,qs),
(185,559,o),
(153,531,q),
(167,507,o),
(143,488,q),
(138,486,o),
(133,490,qs),
(118,504,l),
(76,476,o),
(67,470,qs),
(54,463,o),
(43,463,qs),
(26,463,o),
(15,476,qs),
(13,479,ls),
(9,483,o),
(14,486,qs),
(35,497,o),
(87,533,q),
(60,560,o),
(60,586,qs),
(60,613,o),
(95,647,o),
(123,647,qs),
(152,645,o)
);
},
{
closed = 1;
nodes = (
(133,610,o),
(125,610,qs),
(101,610,o),
(102,586,qs),
(102,572,o),
(121,554,q),
(145,572,o),
(145,586,qs),
(146,596,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
28 26 21 16 5 5 1 2 1 76 0 1 2 1 134 3 1 0 2 2 0 89 3 1 0 0 2 97 0 2 0 2 81 1 0 33 31 13 11 0 25 1 25 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-66,ls),
(183,-66,o),
(183,-99,qs),
(183,-104,ls),
(183,-111,o),
(175,-111,qs),
(59,-111,ls),
(40,-111,o),
(22,-118,qs),
(16,-120,ls),
(10,-123,o),
(9,-123,qs),
(6,-123,o),
(4,-118,qs),
(2,-110,o),
(2,-104,qs),
(4,-66,o),
(57,-66,qs),
(109,-66,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 1 0 1 76 2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 18 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,499,o),
(1,527,qs),
(1,554,o),
(37,590,o),
(65,590,qs),
(93,590,o),
(129,554,o),
(129,527,qs),
(129,499,o),
(93,463,o),
(65,463,qs),
(37,463,o)
);
},
{
closed = 1;
nodes = (
(89,527,qs),
(89,554,o),
(65,554,qs),
(41,554,o),
(41,527,qs),
(41,499,o),
(65,499,qs),
(89,499,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 17 15 12 19 13 19 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,629,qs),
(72,646,o),
(61,646,qs),
(48,646,o),
(36,630,qs),
(35,628,o),
(33,625,qs),
(28,617,o),
(25,617,qs),
(21,617,o),
(20,621,q),
(12,632,o),
(12,647,qs),
(12,668,o),
(38,693,o),
(58,692,qs),
(72,692,o),
(105,678,qs),
(144,661,o),
(155,661,qs),
(168,661,o),
(180,677,qs),
(181,679,o),
(183,682,qs),
(188,690,o),
(191,690,qs),
(195,690,o),
(196,687,q),
(204,675,o),
(204,660,qs),
(204,640,o),
(178,614,o),
(159,616,qs),
(143,616,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 47 values pushed */
7 1 0 1 24 1 3 2 2 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 4 1 3 0 3 81 0 0 0 33 0 33 43 34 44 5 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,669,o),
(210,636,qs),
(210,631,ls),
(210,624,o),
(202,624,qs),
(89,624,ls),
(66,624,o),
(46,615,qs),
(44,614,o),
(43,614,q),
(40,612,o),
(39,612,qs),
(37,612,o),
(35,617,qs),
(32,623,o),
(32,631,qs),
(34,658,o),
(64,666,q),
(53,685,o),
(53,707,qs),
(53,740,o),
(96,785,o),
(128,786,qs),
(154,787,o),
(189,758,o),
(189,737,qs),
(189,727,o),
(184,727,qs),
(182,727,o),
(177,729,qs),
(173,731,o),
(171,733,q),
(153,742,o),
(138,742,qs),
(100,742,o),
(100,707,qs),
(100,691,o),
(121,669,o),
(137,669,qs),
(173,669,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
23 21 2 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 1 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 35 32 17 15 12 10 6 4 0 39 1 38 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,-183,o),
(194,-217,qs),
(194,-222,ls),
(194,-228,o),
(186,-228,qs),
(73,-228,ls),
(50,-228,o),
(30,-238,q),
(28,-238,o),
(27,-239,qs),
(24,-241,o),
(23,-241,qs),
(21,-241,o),
(19,-236,qs),
(16,-230,o),
(16,-222,qs),
(18,-195,o),
(48,-187,q),
(37,-167,o),
(37,-146,qs),
(37,-113,o),
(80,-67,o),
(112,-67,qs),
(138,-66,o),
(173,-94,o),
(173,-116,qs),
(173,-126,o),
(168,-126,qs),
(166,-126,o),
(161,-123,qs),
(157,-121,o),
(155,-120,qs),
(137,-111,o),
(122,-111,qs),
(84,-111,o),
(84,-146,qs),
(84,-162,o),
(105,-183,o),
(121,-183,qs),
(157,-183,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
23 21 2 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 3 2 1 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 35 32 17 15 12 10 6 4 0 39 1 38 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,567,qs),
(236,437,ls),
(232,426,o),
(220,426,qs),
(192,426,ls),
(180,426,o),
(176,437,qs),
(124,567,ls),
(121,576,o),
(131,576,qs),
(170,576,o),
(183,541,qs),
(206,485,l),
(229,541,ls),
(243,576,o),
(281,576,qs),
(291,576,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 76 1 3 2 0 2 0 133 0 2 2 118 1 0 13 10 7 5 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,119,qs),
(363,166,o),
(363,278,qs),
(363,379,o),
(309,474,o),
(251,474,qs),
(199,474,o),
(173,436,qs),
(140,390,o),
(140,278,qs),
(140,176,o),
(194,82,o),
(251,82,qs),
(303,82,o)
);
},
{
closed = 1;
nodes = (
(103,55,qs),
(42,128,o),
(42,278,qs),
(42,407,o),
(90,481,qs),
(144,566,o),
(251,566,qs),
(344,566,o),
(398,501,qs),
(460,426,o),
(460,278,qs),
(460,148,o),
(413,74,qs),
(360,-10,o),
(251,-10,qs),
(156,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 8 6 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,428,ls),
(32,423,o),
(32,436,qs),
(32,507,ls),
(32,520,o),
(45,526,q),
(102,546,ls),
(130,556,o),
(153,556,qs),
(173,556,ls),
(233,556,o),
(233,494,qs),
(233,89,l),
(285,89,ls),
(344,89,o),
(344,34,qs),
(344,14,ls),
(344,0,o),
(330,0,qs),
(42,0,ls),
(31,0,o),
(31,11,qs),
(31,78,ls),
(31,89,o),
(42,89,qs),
(136,89,l),
(136,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,89,o),
(413,35,qs),
(413,14,ls),
(413,0,o),
(400,0,qs),
(43,0,ls),
(32,0,o),
(32,11,qs),
(32,104,o),
(81,168,qs),
(112,210,o),
(184,257,qs),
(244,296,o),
(260,310,qs),
(309,351,o),
(309,403,qs),
(309,439,o),
(260,479,o),
(215,479,qs),
(152,479,o),
(81,441,qs),
(74,437,o),
(69,437,qs),
(62,437,o),
(60,444,qs),
(51,467,l),
(36,521,o),
(91,542,qs),
(157,566,o),
(224,566,qs),
(301,566,o),
(349,532,qs),
(408,490,o),
(408,408,qs),
(408,342,o),
(364,289,qs),
(335,253,o),
(271,210,qs),
(212,169,o),
(201,160,qs),
(154,124,o),
(150,89,q),
(355,89,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 59 35 21 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,162,qs),
(410,91,o),
(363,45,qs),
(307,-10,o),
(210,-10,qs),
(126,-10,o),
(73,32,qs),
(21,73,o),
(21,126,qs),
(21,150,o),
(37,150,qs),
(46,150,o),
(54,141,qs),
(118,77,o),
(202,77,qs),
(253,77,o),
(313,124,o),
(313,165,qs),
(313,242,o),
(215,242,qs),
(155,242,ls),
(126,242,o),
(100,264,o),
(100,289,qs),
(100,314,ls),
(100,329,o),
(114,329,qs),
(207,329,ls),
(294,329,o),
(294,407,qs),
(294,481,o),
(203,481,qs),
(136,481,o),
(71,443,qs),
(62,437,o),
(57,437,qs),
(51,437,o),
(48,446,qs),
(40,467,ls),
(22,520,o),
(80,542,qs),
(142,566,o),
(209,566,qs),
(284,566,o),
(332,534,qs),
(393,494,o),
(393,417,qs),
(393,375,o),
(348,308,o),
(309,291,q),
(410,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,118,o),
(13,129,qs),
(13,182,ls),
(13,196,o),
(23,213,qs),
(230,533,ls),
(244,556,o),
(270,556,qs),
(313,556,ls),
(372,556,o),
(372,497,qs),
(372,207,l),
(404,207,ls),
(461,207,o),
(461,151,qs),
(461,132,ls),
(461,118,o),
(448,118,qs),
(372,118,l),
(372,11,ls),
(372,0,o),
(362,0,qs),
(286,0,ls),
(276,0,o),
(276,11,qs),
(276,118,l),
(24,118,ls)
);
},
{
closed = 1;
nodes = (
(276,448,l),
(117,207,l),
(276,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,361,o),
(232,361,qs),
(313,361,o),
(363,319,qs),
(419,272,o),
(419,185,qs),
(419,103,o),
(367,49,qs),
(308,-10,o),
(215,-10,qs),
(136,-10,o),
(83,27,qs),
(26,67,o),
(26,123,qs),
(26,148,o),
(42,148,qs),
(50,148,o),
(59,138,qs),
(118,77,o),
(205,77,qs),
(260,77,o),
(322,131,o),
(322,181,qs),
(322,225,o),
(262,276,o),
(209,276,qs),
(136,276,o),
(65,252,qs),
(51,247,o),
(51,261,qs),
(51,544,ls),
(51,556,o),
(61,556,qs),
(329,556,ls),
(388,556,o),
(388,499,qs),
(388,481,ls),
(388,467,o),
(373,467,qs),
(144,467,l),
(144,349,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,374,qs),
(336,374,o),
(388,325,qs),
(444,271,o),
(444,192,qs),
(444,108,o),
(396,54,qs),
(340,-10,o),
(244,-10,qs),
(159,-10,o),
(102,37,qs),
(37,91,o),
(37,180,qs),
(37,219,o),
(66,299,o),
(105,363,qs),
(223,556,ls),
(229,566,o),
(240,566,qs),
(272,566,o),
(284,539,qs),
(299,505,o),
(274,462,qs),
(215,367,l),
(242,374,o)
);
},
{
closed = 1;
nodes = (
(160,110,qs),
(190,77,o),
(243,77,qs),
(286,77,o),
(315,103,qs),
(348,133,o),
(348,183,qs),
(348,227,o),
(322,257,qs),
(292,292,o),
(241,292,qs),
(197,292,o),
(167,265,qs),
(134,234,o),
(134,183,qs),
(134,139,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,467,o),
(23,477,qs),
(23,544,ls),
(23,556,o),
(34,556,qs),
(329,556,ls),
(387,556,o),
(387,499,qs),
(387,487,ls),
(387,465,o),
(375,437,qs),
(183,12,ls),
(178,0,o),
(165,0,qs),
(85,0,ls),
(74,0,o),
(79,11,qs),
(285,467,l),
(34,467,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,98,qs),
(184,70,o),
(239,70,qs),
(288,70,o),
(348,118,o),
(348,158,qs),
(348,200,o),
(289,250,o),
(239,250,qs),
(187,250,o),
(128,200,o),
(128,158,qs),
(128,121,o)
);
},
{
closed = 1;
nodes = (
(194,329,o),
(239,329,qs),
(282,329,o),
(335,372,o),
(335,408,qs),
(335,444,o),
(283,487,o),
(239,487,qs),
(193,487,o),
(140,444,o),
(140,408,qs),
(140,372,o)
);
},
{
closed = 1;
nodes = (
(46,419,qs),
(46,482,o),
(94,522,qs),
(147,566,o),
(239,566,qs),
(317,566,o),
(369,532,qs),
(430,491,o),
(430,419,qs),
(430,331,o),
(344,292,q),
(445,258,o),
(445,157,qs),
(445,89,o),
(398,44,qs),
(341,-10,o),
(239,-10,qs),
(148,-10,o),
(92,32,qs),
(31,78,o),
(31,157,qs),
(31,258,o),
(131,292,q),
(46,331,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,181,qs),
(137,181,o),
(86,229,qs),
(31,283,o),
(31,362,qs),
(31,446,o),
(81,502,qs),
(139,566,o),
(235,566,qs),
(319,566,o),
(374,519,qs),
(438,466,o),
(438,376,qs),
(438,335,o),
(408,255,o),
(369,193,qs),
(254,2,ls),
(246,-10,o),
(235,-10,qs),
(202,-10,o),
(190,19,qs),
(176,52,o),
(202,92,qs),
(262,191,l),
(231,181,o)
);
},
{
closed = 1;
nodes = (
(307,291,qs),
(340,322,o),
(340,373,qs),
(340,420,o),
(282,478,o),
(234,478,qs),
(189,478,o),
(160,452,qs),
(127,423,o),
(127,373,qs),
(127,323,o),
(185,264,o),
(234,264,qs),
(277,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 38 26 38 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(691,162,qs),
(691,268,o),
(620,268,qs),
(548,268,o),
(548,162,qs),
(548,59,o),
(620,59,qs),
(691,59,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,498,o),
(175,498,qs),
(105,498,o),
(105,393,qs),
(105,289,o),
(175,289,qs),
(248,289,o)
);
},
{
closed = 1;
nodes = (
(203,11,qs),
(495,544,l),
(503,556,o),
(512,556,qs),
(530,556,ls),
(559,556,o),
(576,517,o),
(561,489,qs),
(298,11,l),
(293,0,o),
(282,0,qs),
(208,0,ls),
(196,0,o)
);
},
{
closed = 1;
nodes = (
(519,33,qs),
(473,81,o),
(473,163,qs),
(473,235,o),
(508,281,qs),
(549,334,o),
(620,334,qs),
(681,334,o),
(720,293,qs),
(766,246,o),
(766,163,qs),
(766,92,o),
(731,45,qs),
(690,-9,o),
(620,-9,qs),
(559,-9,o)
);
},
{
closed = 1;
nodes = (
(75,264,qs),
(31,312,o),
(31,396,qs),
(31,467,o),
(65,513,qs),
(105,566,o),
(175,566,qs),
(237,566,o),
(276,525,qs),
(322,478,o),
(322,396,qs),
(322,323,o),
(287,276,qs),
(247,223,o),
(175,223,qs),
(114,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 3 3 5 97 9 1 5 5 23 77 10 1 0 0 4 97 13 6 12 3 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 0 3 3 9 97 0 9 9 23 77 10 1 0 0 4 97 13 6 12 3 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 0 3 3 9 97 0 9 9 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 8 7 1 106 11 1 2 14 1 8 0 2 8 105 10 1 0 13 1 6 0 6 101 0 5 5 23 77 12 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
46 45 30 29 18 16 9 8 1 0 54 52 45 60 46 60 38 36 29 44 30 44 25 22 16 28 18 28 13 11 8 15 9 15 5 3 0 7 1 7 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,75,o),
(157,48,qs),
(157,-38,o),
(66,-108,q),
(63,-111,o),
(60,-108,qs),
(35,-85,o),
(59,-59,qs),
(81,-36,o),
(87,-12,q),
(64,-8,o),
(35,26,o),
(35,50,qs),
(35,76,o),
(71,112,o),
(96,112,qs),
(121,112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 6 2 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,172,o),
(157,146,qs),
(157,60,o),
(66,-11,qs),
(63,-14,o),
(60,-11,qs),
(35,13,o),
(59,38,qs),
(81,63,o),
(87,86,q),
(64,89,o),
(35,124,o),
(35,147,qs),
(35,173,o),
(70,209,o),
(96,209,qs),
(121,209,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
10 6 2 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,394,o),
(31,406,q),
(50,461,ls),
(53,472,o),
(63,467,qs),
(152,431,l),
(145,527,l),
(143,538,o),
(156,538,qs),
(217,538,ls),
(229,538,o),
(227,527,q),
(221,431,l),
(310,467,ls),
(320,471,o),
(322,461,q),
(341,406,l),
(343,394,o),
(335,392,qs),
(242,368,l),
(302,292,ls),
(308,284,o),
(301,278,q),
(253,245,ls),
(244,238,o),
(238,247,qs),
(186,331,l),
(135,247,ls),
(128,237,o),
(120,245,q),
(73,278,ls),
(63,284,o),
(70,292,qs),
(132,368,l),
(38,392,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
28 22 21 14 7 5 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
4 1 0 2 0 133 0 2 1 2 133 0 1 1 3 96 0 3 3 24 3 78 1 0 27 24 15 14 7 4 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,462,qs),
(15,463,o),
(15,466,qs),
(15,474,o),
(15,479,qs),
(15,524,o),
(4,566,qs),
(1,575,o),
(0,584,qs),
(-2,606,o),
(17,617,qs),
(21,619,o),
(26,621,q),
(33,621,o),
(37,616,qs),
(48,599,o),
(50,563,qs),
(52,522,o),
(46,499,qs),
(37,463,o),
(21,458,qs),
(15,456,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 8 values pushed */
0 0 0 118 23 1 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,720,o),
(216,693,qs),
(216,665,o),
(173,626,o),
(143,626,qs),
(122,626,o),
(85,641,qs),
(82,642,o),
(79,643,qs),
(53,653,o),
(43,653,qs),
(27,653,o),
(15,631,q),
(10,624,o),
(6,624,qs),
(4,624,o),
(1,627,q),
(-7,641,o),
(-7,656,qs),
(-7,675,o),
(17,698,o),
(37,698,qs),
(45,698,o),
(58,695,qs),
(64,694,o),
(65,693,q),
(71,693,o),
(74,697,qs),
(101,733,o),
(130,754,o),
(155,754,qs),
(182,754,o)
);
},
{
closed = 1;
nodes = (
(172,687,o),
(172,698,qs),
(172,713,o),
(154,713,qs),
(138,713,o),
(114,679,q),
(129,672,o),
(141,672,qs),
(154,672,o)
);
},
{
closed = 1;
nodes = (
(152,556,o),
(152,546,qs),
(152,82,ls),
(152,0,o),
(74,0,qs),
(66,0,ls),
(55,0,o),
(55,10,qs),
(55,474,ls),
(55,556,o),
(132,556,qs),
(141,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
34 1 4 1 16 1 6 3 2 76 8 1 0 0 5 1 0 5 105 0 1 0 2 3 1 2 105 9 1 4 0 3 6 4 3 105 10 1 6 6 23 77 0 7 7 24 7 78 42 41 33 32 1 0 48 45 41 52 42 51 37 35 32 40 33 40 27 25 21 19 10 8 0 31 1 31 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,388,o),
(290,393,qs),
(290,399,ls),
(291,434,o),
(335,434,qs),
(337,434,l),
(337,564,ls),
(337,590,o),
(351,604,qs),
(361,614,o),
(377,614,qs),
(381,614,ls),
(386,614,o),
(386,609,qs),
(386,553,l),
(422,553,ls),
(464,553,o),
(511,509,o),
(511,471,qs),
(511,432,o),
(464,388,o),
(422,388,qs),
(296,388,ls)
);
},
{
closed = 1;
nodes = (
(386,434,l),
(425,434,ls),
(440,434,o),
(460,455,o),
(460,471,qs),
(460,486,o),
(440,507,o),
(425,507,qs),
(386,507,l)
);
},
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
8 1 1 2 1 76 0 2 1 2 133 12 1 6 0 8 0 6 8 128 0 8 7 0 8 7 126 5 1 3 10 1 0 6 3 0 104 11 1 4 4 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 33 32 24 23 1 0 59 56 47 46 39 36 32 65 33 64 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,101,o),
(662,54,qs),
(616,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,qs),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls)
);
},
{
closed = 1;
nodes = (
(369,-96,o),
(369,-117,qs),
(369,-138,o),
(339,-168,o),
(319,-168,qs),
(298,-168,o),
(269,-138,o),
(269,-117,qs),
(269,-96,o),
(298,-66,o),
(319,-66,qs),
(340,-66,o)
);
},
{
closed = 1;
nodes = (
(489,-96,o),
(489,-117,qs),
(489,-138,o),
(460,-168,o),
(439,-168,qs),
(418,-168,o),
(389,-138,o),
(389,-117,qs),
(389,-96,o),
(418,-66,o),
(439,-66,qs),
(460,-66,o)
);
},
{
closed = 1;
nodes = (
(425,-203,o),
(425,-222,qs),
(425,-242,o),
(398,-269,o),
(379,-269,qs),
(359,-269,o),
(332,-242,o),
(332,-222,qs),
(332,-203,o),
(359,-176,o),
(379,-176,qs),
(397,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
10 1 0 2 0 133 0 2 1 2 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 0 1 1 3 96 0 3 3 24 3 78 58 57 46 45 34 33 1 0 64 62 57 68 58 68 52 50 45 56 46 56 40 38 33 44 34 44 26 23 15 14 7 4 0 32 1 31 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(417,384,o),
(474,211,qs),
(496,137,o),
(519,112,qs),
(530,99,o),
(550,97,qs),
(562,96,o),
(562,86,qs),
(562,46,o),
(513,0,o),
(472,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(417,97,l),
(401,113,o),
(373,194,qs),
(336,293,o),
(257,293,qs),
(196,293,o)
);
},
{
closed = 1;
nodes = (
(248,-104,o),
(248,-91,qs),
(248,-77,o),
(267,-59,o),
(280,-59,qs),
(293,-59,o),
(311,-77,o),
(311,-91,qs),
(311,-104,o),
(293,-122,o),
(280,-122,qs),
(266,-122,o)
);
},
{
closed = 1;
nodes = (
(323,-105,o),
(323,-91,qs),
(323,-78,o),
(342,-59,o),
(355,-59,qs),
(367,-59,o),
(386,-78,o),
(386,-91,qs),
(386,-104,o),
(368,-123,o),
(355,-123,qs),
(341,-123,o)
);
},
{
closed = 1;
nodes = (
(286,-172,o),
(286,-159,qs),
(286,-146,o),
(305,-127,o),
(318,-127,qs),
(331,-127,o),
(350,-146,o),
(350,-159,qs),
(350,-172,o),
(332,-191,o),
(318,-191,qs),
(305,-191,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 5 12 1 0 1 5 0 105 9 1 7 14 8 13 3 6 11 7 6 105 0 11 15 1 10 3 11 10 105 0 3 0 2 3 2 101 0 1 1 4 95 0 4 4 24 4 78 81 80 69 68 57 56 1 0 87 85 80 91 81 91 75 73 68 79 69 79 63 61 56 67 57 67 46 44 35 32 26 24 14 12 6 4 0 55 1 55 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,465,o),
(100,471,qs),
(100,476,ls),
(101,512,o),
(145,512,qs),
(147,512,l),
(147,641,ls),
(147,667,o),
(161,681,qs),
(171,691,o),
(187,691,qs),
(191,691,ls),
(196,691,o),
(196,686,qs),
(196,631,l),
(232,631,ls),
(274,631,o),
(321,587,o),
(321,548,qs),
(321,509,o),
(274,465,o),
(232,465,qs),
(106,465,ls)
);
},
{
closed = 1;
nodes = (
(196,512,l),
(235,512,ls),
(250,512,o),
(270,532,o),
(270,548,qs),
(270,564,o),
(250,584,o),
(235,584,qs),
(196,584,l)
);
},
{
closed = 1;
nodes = (
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,111,o),
(331,59,qs),
(280,0,o),
(201,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 2 133 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 8 1 7 9 6 7 105 0 9 9 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 2 133 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 8 1 7 9 6 7 105 0 9 9 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
33 32 24 23 1 0 60 57 52 49 45 43 38 37 32 66 33 66 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,610,o),
(271,566,o),
(271,527,qs),
(271,488,o),
(224,444,o),
(183,444,qs),
(56,444,ls),
(50,444,o),
(50,450,qs),
(50,456,ls),
(51,491,o),
(95,491,qs),
(98,491,l),
(98,621,ls),
(98,646,o),
(111,661,qs),
(121,671,o),
(138,671,qs),
(141,671,ls),
(147,671,o),
(147,666,qs),
(147,610,l),
(183,610,ls)
);
},
{
closed = 1;
nodes = (
(201,491,o),
(221,511,o),
(221,527,qs),
(221,543,o),
(201,563,o),
(185,563,qs),
(147,563,l),
(147,491,l),
(185,491,ls)
);
},
{
closed = 1;
nodes = (
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 3 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 3 0 133 12 1 6 2 7 2 6 7 128 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 8 1 7 9 9 7 89 8 1 7 7 9 98 0 9 7 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 0 3 0 133 12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 0 7 9 9 7 89 0 7 7 9 98 0 9 7 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
33 32 23 23 0 0 50 48 44 42 38 36 32 56 33 55 23 31 23 30 26 24 0 22 0 21 51 36 35 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,584,qs),
(195,454,ls),
(191,443,o),
(179,443,qs),
(151,443,ls),
(139,443,o),
(135,454,qs),
(83,584,ls),
(80,593,o),
(90,593,qs),
(129,593,o),
(142,558,qs),
(165,502,l),
(188,558,ls),
(201,593,o),
(240,593,qs),
(250,593,o)
);
},
{
closed = 1;
nodes = (
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 4 3 133 5 1 4 6 6 4 89 5 1 4 4 6 98 0 6 4 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 98 0 6 4 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
18 17 1 0 35 33 29 27 23 21 17 41 18 40 13 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-61,-106,q),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o)
);
},
{
closed = 1;
nodes = (
(120,-313,o),
(120,-336,qs),
(120,-359,o),
(89,-390,o),
(67,-390,qs),
(45,-390,o),
(15,-359,o),
(15,-336,qs),
(15,-314,o),
(45,-283,o),
(67,-283,qs),
(89,-283,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 1 6 2 0 0 2 4 0 2 106 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 106 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
26 25 1 0 32 30 25 36 26 36 21 18 13 11 7 5 0 24 1 24 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-61,-106,q),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls)
);
},
{
closed = 1;
nodes = (
(138,-291,qs),
(86,-421,ls),
(82,-432,o),
(70,-432,qs),
(41,-432,ls),
(30,-432,o),
(25,-421,qs),
(-26,-291,ls),
(-29,-282,o),
(-20,-282,qs),
(19,-282,o),
(33,-317,qs),
(56,-373,l),
(79,-317,ls),
(92,-282,o),
(130,-282,qs),
(141,-282,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 0 1 0 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 2 1 1 3 3 1 89 2 1 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 2 0 133 0 2 1 2 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 38 35 32 30 25 41 26 41 18 16 12 10 6 4 0 24 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,563,o),
(116,583,qs),
(116,603,o),
(143,630,o),
(162,630,qs),
(181,630,o),
(208,602,o),
(208,583,qs),
(208,564,o),
(181,536,o),
(162,536,qs),
(143,536,o)
);
},
{
closed = 1;
nodes = (
(52,457,o),
(52,478,qs),
(52,499,o),
(81,529,o),
(101,529,qs),
(123,529,o),
(152,499,o),
(152,478,qs),
(152,457,o),
(122,427,o),
(101,427,qs),
(81,427,o)
);
},
{
closed = 1;
nodes = (
(172,456,o),
(172,478,qs),
(172,499,o),
(201,529,o),
(222,529,qs),
(243,529,o),
(272,499,o),
(272,478,qs),
(272,456,o),
(243,427,o),
(222,427,qs),
(201,427,o)
);
},
{
closed = 1;
nodes = (
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,24,ls),
(213,-83,o),
(176,-144,qs),
(133,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 9 2 6 2 9 6 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 7 13 2 6 8 8 6 89 7 13 2 6 6 8 98 0 8 6 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 8 8 6 89 13 1 6 6 8 98 0 8 6 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 57 54 49 47 43 41 36 60 37 60 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(753,338,qs),
(810,284,o),
(810,192,qs),
(810,113,o),
(766,60,qs),
(717,1,o),
(636,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(479,97,l),
(456,134,o),
(455,192,qs),
(455,272,o),
(499,325,qs),
(550,384,o),
(632,384,qs),
(704,384,o)
);
},
{
closed = 1;
nodes = (
(710,152,o),
(710,194,qs),
(710,237,o),
(666,293,o),
(633,293,qs),
(600,293,o),
(555,236,o),
(555,194,qs),
(555,153,o),
(600,97,o),
(633,97,qs),
(666,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 0 5 0 2 5 128 6 1 0 0 5 1 0 5 105 7 4 2 1 1 3 96 0 3 3 24 3 78 36 35 1 0 42 40 35 46 36 46 28 25 16 15 8 6 0 34 1 34 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(587,580,o),
(587,599,qs),
(587,619,o),
(614,647,o),
(633,647,qs),
(652,647,o),
(679,619,o),
(679,599,qs),
(679,580,o),
(652,553,o),
(633,553,qs),
(614,553,o)
);
},
{
closed = 1;
nodes = (
(523,473,o),
(523,494,qs),
(523,516,o),
(552,546,o),
(572,546,qs),
(594,546,o),
(623,516,o),
(623,494,qs),
(623,473,o),
(593,443,o),
(572,443,qs),
(552,443,o)
);
},
{
closed = 1;
nodes = (
(672,546,o),
(693,546,qs),
(714,546,o),
(743,516,o),
(743,494,qs),
(743,473,o),
(714,443,o),
(693,443,qs),
(672,443,o),
(643,473,o),
(643,494,qs),
(643,516,o)
);
},
{
closed = 1;
nodes = (
(753,338,qs),
(810,284,o),
(810,192,qs),
(810,113,o),
(766,60,qs),
(717,1,o),
(636,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(479,97,l),
(456,134,o),
(455,192,qs),
(455,272,o),
(499,325,qs),
(550,384,o),
(632,384,qs),
(704,384,o)
);
},
{
closed = 1;
nodes = (
(710,152,o),
(710,194,qs),
(710,237,o),
(666,293,o),
(633,293,qs),
(600,293,o),
(555,236,o),
(555,194,qs),
(555,153,o),
(600,97,o),
(633,97,qs),
(666,97,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 11 6 8 11 128 0 1 12 1 0 3 1 0 105 14 1 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 15 10 2 7 7 9 96 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 6 11 6 8 11 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 14 1 6 0 11 7 6 11 105 15 10 2 7 7 9 96 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
72 71 37 36 13 12 1 0 78 76 71 82 72 82 64 61 52 51 44 42 36 70 37 70 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,366,o),
(651,323,qs),
(710,271,o),
(710,179,qs),
(710,104,o),
(664,54,qs),
(613,0,o),
(536,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(567,97,o),
(610,146,o),
(610,186,qs),
(610,224,o),
(566,274,o),
(532,274,qs),
(341,274,ls),
(279,274,o),
(279,324,qs),
(279,346,ls),
(279,382,o),
(301,396,qs),
(542,553,l),
(543,553,l),
(550,557,o),
(553,555,qs),
(565,547,o),
(571,531,q),
(595,489,o),
(550,461,qs),
(404,366,l),
(536,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 1 4 74 0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 0 0 0 50 0 49 57 23 52 61 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,485,o),
(277,507,q),
(277,528,ls),
(277,544,o),
(298,557,qs),
(476,675,ls),
(483,679,o),
(487,674,q),
(500,662,o),
(500,646,qs),
(500,629,o),
(477,613,qs),
(302,500,ls)
);
},
{
closed = 1;
nodes = (
(605,366,o),
(651,326,qs),
(710,275,o),
(710,179,qs),
(710,100,o),
(664,51,qs),
(615,0,o),
(536,0,qs),
(235,0,ls),
(157,0,o),
(107,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(144,304,o),
(146,304,q),
(154,308,o),
(158,308,qs),
(172,308,o),
(172,295,qs),
(172,288,o),
(166,279,qs),
(132,234,o),
(132,189,qs),
(132,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(569,97,o),
(610,144,o),
(610,186,qs),
(610,227,o),
(568,274,o),
(532,274,qs),
(342,274,ls),
(279,274,o),
(279,324,qs),
(279,346,ls),
(279,381,o),
(302,396,qs),
(542,553,ls),
(549,558,o),
(554,555,qs),
(566,546,o),
(571,531,q),
(594,491,o),
(550,463,qs),
(404,366,l),
(536,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
10 1 4 74 0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 13 13 13 63 13 62 56 53 43 42 35 32 28 25 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(601,775,qs),
(550,645,ls),
(545,634,o),
(534,634,qs),
(505,634,ls),
(493,634,o),
(489,645,qs),
(437,775,ls),
(434,783,o),
(444,783,qs),
(483,783,o),
(496,749,qs),
(520,693,l),
(542,749,ls),
(556,783,o),
(594,783,qs),
(604,783,o)
);
},
{
closed = 1;
nodes = (
(563,556,o),
(563,546,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
3 1 2 0 1 76 1 7 2 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 101 8 1 3 3 23 3 78 18 17 1 0 44 42 35 33 25 23 17 50 18 49 13 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,692,o),
(569,669,qs),
(569,647,o),
(539,616,o),
(517,616,qs),
(495,616,o),
(464,647,o),
(464,669,qs),
(464,692,o),
(495,723,o),
(517,723,qs),
(539,723,o)
);
},
{
closed = 1;
nodes = (
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 101 0 3 3 23 3 78 13 12 1 0 38 36 28 26 21 18 12 45 13 45 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,753,o),
(466,773,qs),
(466,793,o),
(493,820,o),
(512,820,qs),
(531,820,o),
(558,792,o),
(558,773,qs),
(558,754,o),
(531,726,o),
(512,726,qs),
(493,726,o)
);
},
{
closed = 1;
nodes = (
(402,647,o),
(402,668,qs),
(402,689,o),
(431,719,o),
(451,719,qs),
(472,719,o),
(502,689,o),
(502,668,qs),
(502,647,o),
(472,617,o),
(451,617,qs),
(431,617,o)
);
},
{
closed = 1;
nodes = (
(522,646,o),
(522,668,qs),
(522,689,o),
(551,719,o),
(572,719,qs),
(593,719,o),
(622,689,o),
(622,668,qs),
(622,646,o),
(593,617,o),
(572,617,qs),
(551,617,o)
);
},
{
closed = 1;
nodes = (
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 101 0 7 7 23 7 78 37 36 25 24 13 12 1 0 62 60 52 50 45 42 36 69 37 69 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,284,ls),
(466,366,o),
(544,366,qs),
(552,366,ls),
(563,366,o),
(563,356,qs),
(563,67,ls),
(563,-54,o),
(499,-130,qs),
(428,-214,o),
(304,-214,qs),
(200,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 1 0 26 24 16 14 9 6 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 40 30 40 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,540,q),
(99,546,o),
(99,554,qs),
(100,581,o),
(131,589,q),
(119,609,o),
(119,631,qs),
(119,664,o),
(162,709,o),
(195,709,qs),
(221,710,o),
(256,682,o),
(256,660,qs),
(256,650,o),
(251,650,qs),
(249,650,o),
(244,653,qs),
(240,655,o),
(237,656,q),
(220,665,o),
(204,665,qs),
(166,665,o),
(166,630,qs),
(166,614,o),
(187,593,o),
(204,593,qs),
(239,593,ls),
(276,593,o),
(276,559,qs),
(276,554,ls),
(276,548,o),
(269,548,qs),
(156,548,ls),
(132,548,o),
(112,538,q),
(111,538,o),
(109,537,qs),
(106,536,o),
(106,536,q),
(104,536,o)
);
},
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
34 1 0 1 74 56 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
70 69 69 80 70 80 64 62 35 36 35 51 53 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 40 30 40 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,540,q),
(99,546,o),
(99,554,qs),
(100,581,o),
(131,589,q),
(119,609,o),
(119,631,qs),
(119,664,o),
(162,709,o),
(195,709,qs),
(221,710,o),
(256,682,o),
(256,660,qs),
(256,650,o),
(251,650,qs),
(249,650,o),
(244,653,qs),
(240,655,o),
(237,656,q),
(220,665,o),
(204,665,qs),
(166,665,o),
(166,630,qs),
(166,614,o),
(187,593,o),
(204,593,qs),
(239,593,ls),
(276,593,o),
(276,559,qs),
(276,554,ls),
(276,548,o),
(269,548,qs),
(156,548,ls),
(132,548,o),
(112,538,q),
(111,538,o),
(109,537,qs),
(106,536,o),
(106,536,q),
(104,536,o)
);
},
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
34 1 0 1 74 56 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
70 69 69 80 70 80 64 62 35 36 35 51 53 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,561,o),
(77,582,qs),
(77,603,o),
(107,633,o),
(127,633,qs),
(148,633,o),
(177,603,o),
(177,582,qs),
(177,561,o),
(148,531,o),
(127,531,qs),
(106,531,o)
);
},
{
closed = 1;
nodes = (
(198,561,o),
(198,582,qs),
(198,603,o),
(227,633,o),
(248,633,qs),
(269,633,o),
(298,603,o),
(298,582,qs),
(298,561,o),
(269,531,o),
(248,531,qs),
(227,531,o)
);
},
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
58 40 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 64 54 64 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,612,o),
(149,612,qs),
(188,612,o),
(201,578,qs),
(225,522,l),
(247,578,ls),
(261,612,o),
(299,612,qs),
(309,612,o),
(306,604,qs),
(255,474,ls),
(250,463,o),
(239,463,qs),
(210,463,ls),
(198,463,o),
(194,474,qs),
(142,604,ls)
);
},
{
closed = 1;
nodes = (
(407,123,qs),
(407,30,o),
(390,-77,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(144,-214,o),
(101,-178,q),
(75,-153,o),
(68,-121,qs),
(65,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(271,-89,qs),
(302,-54,o),
(307,11,q),
(263,-10,o),
(220,-10,qs),
(149,-10,o),
(102,39,qs),
(48,95,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(143,384,o),
(226,384,qs),
(341,384,o),
(384,279,qs),
(406,222,o)
);
},
{
closed = 1;
nodes = (
(294,243,qs),
(273,293,o),
(226,293,qs),
(192,293,o),
(149,235,o),
(149,189,qs),
(149,140,o),
(192,84,o),
(229,84,qs),
(276,84,o),
(306,108,q),
(307,120,o),
(307,129,qs),
(308,205,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 29 1 4 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 5 0 7 5 7 101 0 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 8 0 4 6 8 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 60 42 36 34 36 38 35 36 35 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,472,o),
(116,494,qs),
(116,515,o),
(145,544,o),
(166,544,qs),
(187,544,o),
(216,515,o),
(216,494,qs),
(216,472,o),
(187,443,o),
(166,443,qs),
(145,443,o)
);
},
{
closed = 1;
nodes = (
(236,472,o),
(236,494,qs),
(236,515,o),
(265,544,o),
(286,544,qs),
(307,544,o),
(336,515,o),
(336,494,qs),
(336,472,o),
(307,443,o),
(286,443,qs),
(265,443,o)
);
},
{
closed = 1;
nodes = (
(407,123,qs),
(407,30,o),
(390,-77,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(144,-214,o),
(101,-178,q),
(75,-153,o),
(68,-121,qs),
(65,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(271,-89,qs),
(302,-54,o),
(307,11,q),
(263,-10,o),
(220,-10,qs),
(149,-10,o),
(102,39,qs),
(48,95,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(143,384,o),
(226,384,qs),
(341,384,o),
(384,279,qs),
(406,222,o)
);
},
{
closed = 1;
nodes = (
(294,243,qs),
(273,293,o),
(226,293,qs),
(192,293,o),
(149,235,o),
(149,189,qs),
(149,140,o),
(192,84,o),
(229,84,qs),
(276,84,o),
(306,108,q),
(307,120,o),
(307,129,qs),
(308,205,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 6 5 7 6 128 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 69 67 63 61 51 49 45 43 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(545,-145,qs),
(463,-214,o),
(339,-214,qs),
(214,-214,o),
(134,-145,qs),
(48,-70,o),
(48,43,qs),
(48,107,o),
(110,216,o),
(161,240,qs),
(169,244,o),
(175,244,qs),
(187,244,o),
(187,231,qs),
(187,225,o),
(182,217,qs),
(142,148,o),
(142,67,qs),
(142,-15,o),
(190,-65,qs),
(244,-122,o),
(339,-122,qs),
(406,-122,o),
(506,-61,o),
(523,-9,qs),
(529,7,o),
(498,28,o),
(453,38,qs),
(422,44,ls),
(275,80,o),
(275,203,qs),
(275,277,o),
(321,328,qs),
(373,384,o),
(456,384,qs),
(530,384,o),
(568,345,qs),
(592,321,o),
(592,291,qs),
(592,264,o),
(576,263,qs),
(571,263,o),
(562,268,qs),
(520,293,o),
(472,293,qs),
(427,293,o),
(374,244,o),
(374,204,qs),
(374,150,o),
(456,131,qs),
(553,110,o),
(631,54,o),
(626,10,qs),
(616,-84,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 40 24 43 36 34 39 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,470,o),
(87,470,qs),
(126,470,o),
(140,436,qs),
(163,379,l),
(186,436,ls),
(199,470,o),
(237,470,qs),
(248,470,o),
(245,462,qs),
(193,332,ls),
(189,321,o),
(177,321,qs),
(149,321,ls),
(137,321,o),
(132,332,qs),
(81,462,ls)
);
},
{
closed = 1;
nodes = (
(631,54,o),
(626,10,qs),
(616,-84,o),
(545,-145,qs),
(463,-214,o),
(339,-214,qs),
(214,-214,o),
(134,-145,qs),
(48,-70,o),
(48,43,qs),
(48,107,o),
(110,216,o),
(161,240,qs),
(169,244,o),
(175,244,qs),
(187,244,o),
(187,231,qs),
(187,225,o),
(182,217,qs),
(142,148,o),
(142,67,qs),
(142,-15,o),
(190,-65,qs),
(244,-122,o),
(339,-122,qs),
(406,-122,o),
(506,-61,o),
(523,-9,qs),
(529,7,o),
(498,28,o),
(453,38,qs),
(422,44,ls),
(275,80,o),
(275,203,qs),
(275,277,o),
(321,328,qs),
(373,384,o),
(456,384,qs),
(530,384,o),
(568,345,qs),
(592,321,o),
(592,291,qs),
(592,264,o),
(576,263,qs),
(571,263,o),
(562,268,qs),
(520,293,o),
(472,293,qs),
(427,293,o),
(374,244,o),
(374,204,qs),
(374,150,o),
(456,131,qs),
(553,110,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
11 1 0 5 1 76 2 1 1 5 1 133 0 0 5 3 5 0 3 128 0 4 3 7 3 4 7 128 0 7 6 3 7 6 126 0 5 0 3 4 5 3 105 0 6 8 8 6 89 0 6 6 8 98 0 8 6 8 82 40 24 43 36 34 38 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,0,o),
(107,39,qs),
(48,89,o),
(48,179,qs),
(48,259,o),
(95,311,qs),
(145,366,o),
(219,366,qs),
(292,366,ls),
(301,366,o),
(301,373,qs),
(301,380,ls),
(301,460,o),
(343,509,qs),
(391,564,o),
(478,564,qs),
(550,564,o),
(597,525,qs),
(645,485,o),
(652,419,q),
(654,410,o),
(654,406,qs),
(654,373,o),
(613,331,o),
(582,331,qs),
(573,331,ls),
(557,331,o),
(557,349,qs),
(557,366,ls),
(557,473,o),
(479,473,qs),
(441,473,o),
(400,418,o),
(400,369,qs),
(400,341,ls),
(400,274,o),
(333,274,qs),
(231,274,ls),
(195,274,o),
(149,224,o),
(149,186,qs),
(149,97,o),
(224,97,qs),
(616,97,ls),
(654,97,o),
(700,58,o),
(700,26,qs),
(700,17,ls),
(700,6,o),
(693,0,o),
(682,0,qs),
(222,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 6 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 6 4 2 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 6 2 6 4 2 128 0 5 0 3 6 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 44 41 36 34 27 24 21 19 15 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 743;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,437,qs),
(58,444,o),
(58,451,qs),
(60,479,o),
(90,487,q),
(79,506,o),
(79,528,qs),
(79,561,o),
(122,606,o),
(154,607,qs),
(180,607,o),
(215,579,o),
(215,557,qs),
(215,547,o),
(210,547,qs),
(208,547,o),
(204,550,q),
(199,552,o),
(197,553,qs),
(179,562,o),
(164,562,qs),
(126,562,o),
(126,527,qs),
(126,511,o),
(147,490,o),
(163,490,qs),
(199,490,ls),
(236,490,o),
(236,457,qs),
(236,452,ls),
(236,445,o),
(228,445,qs),
(115,445,ls),
(92,445,o),
(72,436,q),
(71,435,o),
(69,434,qs),
(66,433,o),
(65,433,qs),
(63,433,o)
);
},
{
closed = 1;
nodes = (
(654,97,o),
(700,58,o),
(700,26,qs),
(700,17,ls),
(700,6,o),
(693,0,o),
(682,0,qs),
(222,0,ls),
(154,0,o),
(107,39,qs),
(48,89,o),
(48,179,qs),
(48,259,o),
(95,311,qs),
(145,366,o),
(219,366,qs),
(292,366,ls),
(301,366,o),
(301,373,qs),
(301,380,ls),
(301,460,o),
(343,509,qs),
(391,564,o),
(478,564,qs),
(550,564,o),
(597,525,qs),
(645,485,o),
(652,419,q),
(654,410,o),
(654,406,qs),
(654,373,o),
(613,331,o),
(582,331,qs),
(573,331,ls),
(557,331,o),
(557,349,qs),
(557,366,ls),
(557,473,o),
(479,473,qs),
(441,473,o),
(400,418,o),
(400,369,qs),
(400,341,ls),
(400,274,o),
(333,274,qs),
(231,274,ls),
(195,274,o),
(149,224,o),
(149,186,qs),
(149,97,o),
(224,97,qs),
(616,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
34 1 7 1 36 1 0 7 61 0 2 10 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 10 6 10 8 6 128 0 4 3 1 2 1 4 2 105 0 1 0 0 10 1 0 103 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 8 10 6 10 8 6 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 2 1 2 3 1 128 0 8 10 6 10 8 6 128 0 4 0 2 3 4 2 105 0 9 0 7 0 9 7 105 0 1 0 0 10 1 0 103 0 10 0 6 5 10 6 103 12 1 5 5 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
41 40 85 82 76 73 68 66 59 56 53 51 47 44 40 91 41 90 35 36 35 51 53 13 7 27 
CALL[ ]	/* CallFunction */";
};
width = 743;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,183,qs),
(409,102,o),
(365,50,qs),
(316,-10,o),
(229,-10,qs),
(159,-10,o),
(111,31,qs),
(48,84,o),
(48,183,qs),
(48,243,o),
(111,342,o),
(169,372,q),
(159,384,o),
(154,401,q),
(147,442,o),
(196,468,qs),
(199,470,o),
(205,472,q),
(213,473,o),
(218,461,qs),
(234,428,o),
(278,393,qs),
(295,379,o),
(297,377,qs),
(303,373,o),
(314,364,qs),
(321,358,o),
(323,356,qs),
(409,283,o)
);
},
{
closed = 1;
nodes = (
(309,140,o),
(309,182,qs),
(308,225,o),
(278,258,qs),
(261,278,o),
(229,304,q),
(150,259,o),
(149,181,qs),
(148,139,o),
(194,83,o),
(229,83,qs),
(264,83,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 40 30 40 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,567,o),
(102,586,qs),
(102,606,o),
(129,633,o),
(148,633,qs),
(167,633,o),
(194,606,o),
(194,586,qs),
(194,567,o),
(167,539,o),
(148,539,qs),
(129,539,o)
);
},
{
closed = 1;
nodes = (
(38,460,o),
(38,481,qs),
(38,503,o),
(67,532,o),
(87,532,qs),
(109,532,o),
(138,502,o),
(138,481,qs),
(138,460,o),
(108,430,o),
(87,430,qs),
(67,430,o)
);
},
{
closed = 1;
nodes = (
(158,460,o),
(158,481,qs),
(158,503,o),
(187,532,o),
(208,532,qs),
(229,532,o),
(258,503,o),
(258,481,qs),
(258,460,o),
(229,430,o),
(208,430,qs),
(187,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,119,qs),
(363,166,o),
(363,278,qs),
(363,379,o),
(309,474,o),
(251,474,qs),
(199,474,o),
(173,436,qs),
(140,390,o),
(140,278,qs),
(140,176,o),
(194,82,o),
(251,82,qs),
(303,82,o)
);
},
{
closed = 1;
nodes = (
(103,55,qs),
(42,128,o),
(42,278,qs),
(42,407,o),
(90,481,qs),
(144,566,o),
(251,566,qs),
(344,566,o),
(398,501,qs),
(460,426,o),
(460,278,qs),
(460,148,o),
(413,74,qs),
(360,-10,o),
(251,-10,qs),
(156,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 8 6 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,428,ls),
(32,423,o),
(32,436,qs),
(32,507,ls),
(32,520,o),
(45,526,q),
(102,546,ls),
(130,556,o),
(153,556,qs),
(173,556,ls),
(233,556,o),
(233,494,qs),
(233,89,l),
(285,89,ls),
(344,89,o),
(344,34,qs),
(344,14,ls),
(344,0,o),
(330,0,qs),
(42,0,ls),
(31,0,o),
(31,11,qs),
(31,78,ls),
(31,89,o),
(42,89,qs),
(136,89,l),
(136,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,89,o),
(413,35,qs),
(413,14,ls),
(413,0,o),
(400,0,qs),
(43,0,ls),
(32,0,o),
(32,11,qs),
(32,104,o),
(81,168,qs),
(112,210,o),
(184,257,qs),
(244,296,o),
(260,310,qs),
(309,351,o),
(309,403,qs),
(309,439,o),
(260,479,o),
(215,479,qs),
(152,479,o),
(81,441,qs),
(74,437,o),
(69,437,qs),
(62,437,o),
(60,444,qs),
(51,467,l),
(36,521,o),
(91,542,qs),
(157,566,o),
(224,566,qs),
(301,566,o),
(349,532,qs),
(408,490,o),
(408,408,qs),
(408,342,o),
(364,289,qs),
(335,253,o),
(271,210,qs),
(212,169,o),
(201,160,qs),
(154,124,o),
(150,89,q),
(355,89,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 59 35 21 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,162,qs),
(410,91,o),
(363,45,qs),
(307,-10,o),
(210,-10,qs),
(126,-10,o),
(73,32,qs),
(21,73,o),
(21,126,qs),
(21,150,o),
(37,150,qs),
(46,150,o),
(54,141,qs),
(118,77,o),
(202,77,qs),
(253,77,o),
(313,124,o),
(313,165,qs),
(313,242,o),
(215,242,qs),
(155,242,ls),
(126,242,o),
(100,264,o),
(100,289,qs),
(100,314,ls),
(100,329,o),
(114,329,qs),
(207,329,ls),
(294,329,o),
(294,407,qs),
(294,481,o),
(203,481,qs),
(136,481,o),
(71,443,qs),
(62,437,o),
(57,437,qs),
(51,437,o),
(48,446,qs),
(40,467,ls),
(22,520,o),
(80,542,qs),
(142,566,o),
(209,566,qs),
(284,566,o),
(332,534,qs),
(393,494,o),
(393,417,qs),
(393,375,o),
(348,308,o),
(309,291,q),
(410,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 50 34 37 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,118,o),
(13,129,qs),
(13,182,ls),
(13,196,o),
(23,213,qs),
(230,533,ls),
(244,556,o),
(270,556,qs),
(313,556,ls),
(372,556,o),
(372,497,qs),
(372,207,l),
(404,207,ls),
(461,207,o),
(461,151,qs),
(461,132,ls),
(461,118,o),
(448,118,qs),
(372,118,l),
(372,11,ls),
(372,0,o),
(362,0,qs),
(286,0,ls),
(276,0,o),
(276,11,qs),
(276,118,l),
(24,118,ls)
);
},
{
closed = 1;
nodes = (
(276,448,l),
(117,207,l),
(276,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,361,o),
(232,361,qs),
(313,361,o),
(363,319,qs),
(419,272,o),
(419,185,qs),
(419,103,o),
(367,49,qs),
(308,-10,o),
(215,-10,qs),
(136,-10,o),
(83,27,qs),
(26,67,o),
(26,123,qs),
(26,148,o),
(42,148,qs),
(50,148,o),
(59,138,qs),
(118,77,o),
(205,77,qs),
(260,77,o),
(322,131,o),
(322,181,qs),
(322,225,o),
(262,276,o),
(209,276,qs),
(136,276,o),
(65,252,qs),
(51,247,o),
(51,261,qs),
(51,544,ls),
(51,556,o),
(61,556,qs),
(329,556,ls),
(388,556,o),
(388,499,qs),
(388,481,ls),
(388,467,o),
(373,467,qs),
(144,467,l),
(144,349,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,374,qs),
(336,374,o),
(388,325,qs),
(444,271,o),
(444,192,qs),
(444,108,o),
(396,54,qs),
(340,-10,o),
(244,-10,qs),
(159,-10,o),
(102,37,qs),
(37,91,o),
(37,180,qs),
(37,219,o),
(66,299,o),
(105,363,qs),
(223,556,ls),
(229,566,o),
(240,566,qs),
(272,566,o),
(284,539,qs),
(299,505,o),
(274,462,qs),
(215,367,l),
(242,374,o)
);
},
{
closed = 1;
nodes = (
(160,110,qs),
(190,77,o),
(243,77,qs),
(286,77,o),
(315,103,qs),
(348,133,o),
(348,183,qs),
(348,227,o),
(322,257,qs),
(292,292,o),
(241,292,qs),
(197,292,o),
(167,265,qs),
(134,234,o),
(134,183,qs),
(134,139,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,467,o),
(23,477,qs),
(23,544,ls),
(23,556,o),
(34,556,qs),
(329,556,ls),
(387,556,o),
(387,499,qs),
(387,487,ls),
(387,465,o),
(375,437,qs),
(183,12,ls),
(178,0,o),
(165,0,qs),
(85,0,ls),
(74,0,o),
(79,11,qs),
(285,467,l),
(34,467,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,98,qs),
(184,70,o),
(239,70,qs),
(288,70,o),
(348,118,o),
(348,158,qs),
(348,200,o),
(289,250,o),
(239,250,qs),
(187,250,o),
(128,200,o),
(128,158,qs),
(128,121,o)
);
},
{
closed = 1;
nodes = (
(194,329,o),
(239,329,qs),
(282,329,o),
(335,372,o),
(335,408,qs),
(335,444,o),
(283,487,o),
(239,487,qs),
(193,487,o),
(140,444,o),
(140,408,qs),
(140,372,o)
);
},
{
closed = 1;
nodes = (
(46,419,qs),
(46,482,o),
(94,522,qs),
(147,566,o),
(239,566,qs),
(317,566,o),
(369,532,qs),
(430,491,o),
(430,419,qs),
(430,331,o),
(344,292,q),
(445,258,o),
(445,157,qs),
(445,89,o),
(398,44,qs),
(341,-10,o),
(239,-10,qs),
(148,-10,o),
(92,32,qs),
(31,78,o),
(31,157,qs),
(31,258,o),
(131,292,q),
(46,331,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,181,qs),
(137,181,o),
(86,229,qs),
(31,283,o),
(31,362,qs),
(31,446,o),
(81,502,qs),
(139,566,o),
(235,566,qs),
(319,566,o),
(374,519,qs),
(438,466,o),
(438,376,qs),
(438,335,o),
(408,255,o),
(369,193,qs),
(254,2,ls),
(246,-10,o),
(235,-10,qs),
(202,-10,o),
(190,19,qs),
(176,52,o),
(202,92,qs),
(262,191,l),
(231,181,o)
);
},
{
closed = 1;
nodes = (
(307,291,qs),
(340,322,o),
(340,373,qs),
(340,420,o),
(282,478,o),
(234,478,qs),
(189,478,o),
(160,452,qs),
(127,423,o),
(127,373,qs),
(127,323,o),
(185,264,o),
(234,264,qs),
(277,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 38 26 38 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,172,qs),
(0,235,ls),
(0,245,o),
(11,245,qs),
(336,245,ls),
(346,245,o),
(346,235,qs),
(346,172,ls),
(346,161,o),
(336,161,qs),
(11,161,ls),
(0,161,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,172,qs),
(0,235,ls),
(0,245,o),
(11,245,qs),
(670,245,ls),
(680,245,o),
(680,235,qs),
(680,172,ls),
(680,161,o),
(670,161,qs),
(11,161,ls),
(0,161,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,428,o),
(157,404,qs),
(157,378,o),
(121,342,o),
(96,342,qs),
(70,342,o),
(35,379,o),
(35,406,qs),
(35,491,o),
(126,562,q),
(128,565,o),
(132,562,qs),
(156,539,o),
(132,513,qs),
(111,490,o),
(104,466,q),
(128,462,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,527,o),
(157,501,qs),
(157,415,o),
(66,344,qs),
(63,342,o),
(60,344,q),
(35,368,o),
(59,393,qs),
(81,417,o),
(87,441,q),
(64,444,o),
(35,479,o),
(35,502,qs),
(35,528,o),
(70,564,o),
(96,564,qs),
(121,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
10 6 2 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
1 1 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 5 values pushed */
1 1 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
1 0 0 16 1 16 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 192;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,-93,qs),
(16,-71,o),
(37,-51,qs),
(60,-27,o),
(65,-6,q),
(43,-2,o),
(16,31,o),
(16,53,qs),
(16,78,o),
(49,112,o),
(74,112,qs),
(100,112,o),
(133,79,o),
(133,52,qs),
(133,-25,o),
(50,-93,q),
(44,-99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 73 0 0 0 118 36 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 154;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,428,o),
(157,404,qs),
(157,378,o),
(121,342,o),
(96,342,qs),
(70,342,o),
(35,379,o),
(35,406,qs),
(35,491,o),
(126,562,q),
(128,565,o),
(132,562,qs),
(156,539,o),
(132,513,qs),
(111,490,o),
(104,466,q),
(128,462,o)
);
},
{
closed = 1;
nodes = (
(327,428,o),
(327,404,qs),
(327,378,o),
(291,342,o),
(266,342,qs),
(241,342,o),
(206,379,o),
(206,406,qs),
(206,492,o),
(296,562,qs),
(299,565,o),
(302,562,qs),
(327,539,o),
(302,513,qs),
(281,489,o),
(275,466,q),
(298,462,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
21 1 0 74 1 1 0 0 118 47 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,527,o),
(157,501,qs),
(157,415,o),
(66,344,qs),
(63,342,o),
(60,344,q),
(35,368,o),
(59,393,qs),
(81,417,o),
(87,441,q),
(64,444,o),
(35,479,o),
(35,502,qs),
(35,528,o),
(70,564,o),
(96,564,qs),
(121,564,o)
);
},
{
closed = 1;
nodes = (
(327,527,o),
(327,501,qs),
(327,415,o),
(236,344,qs),
(234,342,o),
(231,344,q),
(206,368,o),
(230,393,qs),
(252,418,o),
(257,441,q),
(235,444,o),
(206,479,o),
(206,502,qs),
(206,528,o),
(241,564,o),
(267,564,qs),
(292,564,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 23 10 6 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 9 values pushed */
3 1 2 3 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
3 1 2 3 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
18 17 1 0 17 33 18 33 0 16 1 16 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,-51,qs),
(218,-27,o),
(223,-6,q),
(201,-2,o),
(173,31,o),
(173,53,qs),
(173,78,o),
(206,112,o),
(232,112,qs),
(258,112,o),
(289,79,o),
(289,52,qs),
(289,-28,o),
(208,-93,qs),
(200,-99,o),
(195,-93,q),
(173,-72,o)
);
},
{
closed = 1;
nodes = (
(38,-93,qs),
(16,-71,o),
(37,-51,qs),
(60,-27,o),
(65,-6,q),
(43,-2,o),
(16,31,o),
(16,53,qs),
(16,78,o),
(49,112,o),
(74,112,qs),
(100,112,o),
(133,79,o),
(133,52,qs),
(133,-25,o),
(50,-93,q),
(44,-99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
28 13 2 0 73 1 1 0 0 118 45 38 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,284,o),
(31,294,qs),
(31,353,ls),
(31,364,o),
(42,364,qs),
(129,364,l),
(129,544,ls),
(129,556,o),
(139,556,qs),
(214,556,o),
(214,471,qs),
(214,364,l),
(300,364,ls),
(312,364,o),
(312,353,qs),
(312,294,ls),
(312,284,o),
(300,284,qs),
(214,284,l),
(214,-149,ls),
(214,-160,o),
(203,-160,qs),
(139,-160,ls),
(129,-160,o),
(129,-149,qs),
(129,284,l),
(42,284,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 6 5 2 1 0 2 1 103 0 3 3 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 26 0 25 34 34 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,95,o),
(31,106,qs),
(31,165,ls),
(31,176,o),
(42,176,qs),
(129,176,l),
(129,284,l),
(42,284,ls),
(31,284,o),
(31,294,qs),
(31,353,ls),
(31,364,o),
(42,364,qs),
(129,364,l),
(129,544,ls),
(129,556,o),
(139,556,qs),
(214,556,o),
(214,471,qs),
(214,364,l),
(300,364,ls),
(312,364,o),
(312,353,qs),
(312,294,ls),
(312,284,o),
(300,284,qs),
(214,284,l),
(214,176,l),
(300,176,ls),
(312,176,o),
(312,165,qs),
(312,106,ls),
(312,95,o),
(300,95,qs),
(214,95,l),
(214,-149,ls),
(214,-160,o),
(203,-160,qs),
(139,-160,ls),
(129,-160,o),
(129,-149,qs),
(129,95,l),
(42,95,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 7 1 3 2 4 3 103 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 42 0 41 33 35 34 34 35 33 35 34 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,197,qs),
(42,227,o),
(42,279,qs),
(42,328,o),
(99,387,o),
(146,387,qs),
(196,387,o),
(254,328,o),
(254,279,qs),
(254,230,o),
(196,171,o),
(149,171,qs),
(104,171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 7 5 0 12 1 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 296;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,24,o),
(35,49,qs),
(35,75,o),
(71,112,o),
(96,112,qs),
(121,112,o),
(157,75,o),
(157,49,qs),
(157,24,o),
(121,-13,o),
(96,-13,qs),
(71,-13,o)
);
},
{
closed = 1;
nodes = (
(241,24,o),
(241,49,qs),
(241,75,o),
(277,112,o),
(302,112,qs),
(327,112,o),
(363,75,o),
(363,49,qs),
(363,24,o),
(327,-13,o),
(302,-13,qs),
(277,-13,o)
);
},
{
closed = 1;
nodes = (
(447,24,o),
(447,49,qs),
(447,75,o),
(483,112,o),
(508,112,qs),
(533,112,o),
(569,75,o),
(569,49,qs),
(569,24,o),
(533,-13,o),
(508,-13,qs),
(483,-13,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(691,162,qs),
(691,268,o),
(620,268,qs),
(549,268,o),
(549,162,qs),
(549,59,o),
(620,59,qs),
(691,59,o)
);
},
{
closed = 1;
nodes = (
(1033,162,qs),
(1033,268,o),
(961,268,qs),
(890,268,o),
(890,162,qs),
(890,59,o),
(961,59,qs),
(1033,59,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,498,o),
(175,498,qs),
(105,498,o),
(105,393,qs),
(105,288,o),
(175,289,qs),
(248,291,o)
);
},
{
closed = 1;
nodes = (
(203,11,qs),
(495,544,l),
(503,556,o),
(512,556,qs),
(530,556,ls),
(559,556,o),
(576,517,o),
(561,489,qs),
(298,11,l),
(293,0,o),
(282,0,qs),
(208,0,ls),
(196,0,o)
);
},
{
closed = 1;
nodes = (
(519,33,qs),
(474,81,o),
(474,163,qs),
(474,235,o),
(509,281,qs),
(549,334,o),
(620,334,qs),
(681,334,o),
(720,293,qs),
(766,246,o),
(766,163,qs),
(766,92,o),
(731,45,qs),
(690,-9,o),
(620,-9,qs),
(559,-9,o)
);
},
{
closed = 1;
nodes = (
(860,33,qs),
(816,80,o),
(816,163,qs),
(816,235,o),
(850,281,qs),
(890,334,o),
(961,334,qs),
(1022,334,o),
(1062,293,qs),
(1108,246,o),
(1108,163,qs),
(1108,92,o),
(1072,45,qs),
(1031,-9,o),
(961,-9,qs),
(899,-9,o)
);
},
{
closed = 1;
nodes = (
(75,264,qs),
(31,312,o),
(31,396,qs),
(31,467,o),
(65,513,qs),
(105,566,o),
(175,566,qs),
(237,566,o),
(276,525,qs),
(322,478,o),
(322,396,qs),
(322,323,o),
(287,276,qs),
(247,223,o),
(175,223,qs),
(114,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 3 1 1 12 9 1 106 16 1 4 20 1 12 0 4 12 105 0 5 5 7 97 13 1 7 7 39 77 15 2 14 3 0 0 6 97 19 10 18 8 17 5 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 9 3 1 1 12 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 0 5 5 13 97 0 13 13 39 77 15 2 14 3 0 0 6 97 19 10 18 8 17 5 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 9 3 1 1 12 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 0 5 5 13 97 0 13 13 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 46 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 13 0 5 9 13 5 105 11 1 9 3 1 1 12 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 46 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
70 69 54 53 38 37 26 24 17 16 9 8 1 0 78 76 69 84 70 84 62 60 53 68 54 68 46 44 37 52 38 52 33 30 24 36 26 36 21 19 16 23 17 23 13 11 8 15 9 15 5 3 0 7 1 7 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1139;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,45,o),
(224,38,o),
(219,38,qs),
(154,38,ls),
(139,38,o),
(130,49,qs),
(30,178,ls),
(23,187,o),
(23,192,qs),
(23,196,o),
(30,206,qs),
(130,336,ls),
(139,347,o),
(154,347,qs),
(219,347,ls),
(224,347,o),
(227,339,o),
(224,336,q),
(114,192,l),
(224,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
1 1 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,339,o),
(25,347,o),
(30,347,qs),
(94,347,ls),
(109,347,o),
(118,336,qs),
(218,206,ls),
(225,196,o),
(225,192,qs),
(225,187,o),
(218,178,qs),
(118,49,ls),
(109,38,o),
(94,38,qs),
(30,38,ls),
(25,38,o),
(22,45,o),
(25,49,qs),
(133,192,l),
(25,336,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,7,o),
(3,11,qs),
(296,544,ls),
(302,556,o),
(313,556,qs),
(325,556,ls),
(353,556,o),
(370,517,o),
(354,488,qs),
(94,11,ls),
(89,0,o),
(78,0,qs),
(9,0,ls),
(4,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 13 2 13 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,176,o),
(7,187,qs),
(28,237,ls),
(32,248,o),
(43,248,qs),
(92,248,l),
(92,303,l),
(27,303,ls),
(17,303,o),
(22,314,qs),
(43,363,ls),
(47,374,o),
(57,374,qs),
(103,374,l),
(124,458,o),
(184,509,qs),
(251,566,o),
(342,566,qs),
(406,566,o),
(465,542,qs),
(522,518,o),
(505,467,qs),
(499,449,ls),
(495,438,o),
(487,438,qs),
(482,438,o),
(472,443,qs),
(411,479,o),
(350,479,qs),
(242,479,o),
(206,374,q),
(441,374,ls),
(452,374,o),
(448,363,qs),
(427,314,ls),
(423,303,o),
(411,303,qs),
(191,303,l),
(189,270,o),
(191,248,q),
(392,248,ls),
(404,248,o),
(400,237,qs),
(378,187,ls),
(374,176,o),
(362,176,qs),
(207,176,l),
(245,76,o),
(356,76,qs),
(440,76,o),
(491,140,q),
(499,148,o),
(505,148,qs),
(523,148,o),
(523,125,qs),
(523,83,o),
(488,45,qs),
(437,-10,o),
(341,-10,qs),
(257,-10,o),
(197,33,qs),
(127,82,o),
(103,176,q),
(13,176,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 12 1 4 14 13 2 3 1 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 12 1 4 14 13 2 3 1 4 3 103 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 63 0 62 59 57 56 54 51 49 46 44 34 33 35 34 35 33 35 20 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,499,o),
(28,504,qs),
(28,551,ls),
(28,556,o),
(33,556,qs),
(231,556,ls),
(263,556,o),
(263,527,qs),
(263,507,ls),
(263,499,o),
(256,499,qs),
(177,499,l),
(177,277,ls),
(177,273,o),
(172,273,qs),
(117,273,ls),
(112,273,o),
(112,277,qs),
(112,499,l),
(33,499,ls)
);
},
{
closed = 1;
nodes = (
(504,556,o),
(510,556,qs),
(554,556,ls),
(589,556,o),
(591,523,qs),
(606,277,ls),
(606,273,o),
(601,273,qs),
(549,273,ls),
(542,273,o),
(542,277,qs),
(532,459,l),
(474,277,l),
(472,273,o),
(466,273,qs),
(426,273,ls),
(419,273,o),
(418,277,qs),
(362,459,l),
(352,277,ls),
(352,273,o),
(346,273,qs),
(294,273,ls),
(288,273,o),
(288,277,qs),
(306,551,ls),
(306,556,o),
(311,556,qs),
(353,556,ls),
(390,556,o),
(398,531,qs),
(447,371,l),
(502,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
26 17 16 3 1 2 46 41 40 33 32 27 6 1 8 0 1 2 76 7 6 5 3 0 1 0 134 8 4 2 2 1 1 2 89 8 4 2 2 2 1 95 9 3 2 1 2 1 79 0 0 50 48 44 43 37 36 30 29 24 22 0 19 0 19 35 35 19 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,242,qs),
(33,299,ls),
(33,311,o),
(44,311,qs),
(324,311,ls),
(385,311,o),
(385,254,qs),
(385,242,ls),
(385,231,o),
(374,231,qs),
(44,231,ls),
(33,231,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,140,o),
(33,151,qs),
(33,210,ls),
(33,221,o),
(44,221,qs),
(139,221,l),
(194,319,l),
(44,319,ls),
(33,319,o),
(33,329,qs),
(33,389,ls),
(33,399,o),
(44,399,qs),
(239,399,l),
(288,489,ls),
(297,506,o),
(310,506,qs),
(312,506,ls),
(339,506,o),
(359,471,o),
(346,448,qs),
(319,399,l),
(324,399,ls),
(385,399,o),
(385,343,qs),
(385,329,ls),
(385,319,o),
(374,319,qs),
(275,319,l),
(220,221,l),
(324,221,ls),
(385,221,o),
(385,163,qs),
(385,151,ls),
(385,140,o),
(374,140,qs),
(174,140,l),
(136,72,ls),
(127,55,o),
(115,55,qs),
(62,55,ls),
(48,55,o),
(55,68,qs),
(94,140,l),
(44,140,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 5 133 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 43 33 35 34 52 19 33 35 34 50 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,82,o),
(44,82,qs),
(403,82,ls),
(413,82,o),
(413,71,qs),
(413,11,ls),
(413,0,o),
(403,0,qs),
(44,0,ls),
(33,0,o),
(33,11,qs),
(33,71,ls)
);
},
{
closed = 1;
nodes = (
(383,229,o),
(413,183,o),
(413,141,qs),
(413,138,ls),
(413,126,o),
(402,131,qs),
(44,284,l),
(33,291,o),
(33,303,qs),
(33,349,ls),
(33,360,o),
(44,364,qs),
(400,517,ls),
(413,523,o),
(413,512,qs),
(413,449,ls),
(413,435,o),
(398,428,qs),
(150,326,l),
(345,245,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,82,o),
(50,82,qs),
(408,82,ls),
(418,82,o),
(418,71,qs),
(418,11,ls),
(418,0,o),
(408,0,qs),
(50,0,ls),
(39,0,o),
(39,11,qs),
(39,71,ls)
);
},
{
closed = 1;
nodes = (
(39,435,o),
(39,449,qs),
(39,512,ls),
(39,523,o),
(51,517,qs),
(408,364,ls),
(418,360,o),
(418,349,qs),
(418,303,ls),
(418,290,o),
(408,284,q),
(49,131,ls),
(39,126,o),
(39,138,qs),
(39,141,ls),
(39,183,o),
(69,229,o),
(106,245,qs),
(301,326,l),
(54,428,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,513,qs),
(238,499,o),
(258,479,o),
(272,479,qs),
(286,479,o),
(307,499,o),
(306,513,qs),
(306,545,o),
(272,547,q),
(238,544,o)
);
},
{
closed = 1;
nodes = (
(324,488,qs),
(324,474,o),
(344,453,o),
(358,453,qs),
(373,453,o),
(393,474,o),
(393,488,qs),
(393,502,o),
(374,522,o),
(358,523,q),
(325,520,o)
);
},
{
closed = 1;
nodes = (
(43,317,qs),
(43,303,o),
(64,283,o),
(78,283,qs),
(92,283,o),
(112,303,o),
(112,317,qs),
(112,331,o),
(93,351,o),
(78,352,q),
(43,349,o)
);
},
{
closed = 1;
nodes = (
(432,317,qs),
(432,303,o),
(452,283,o),
(466,283,qs),
(481,283,o),
(501,303,o),
(501,317,qs),
(501,331,o),
(482,351,o),
(466,352,q),
(433,349,o)
);
},
{
closed = 1;
nodes = (
(306,121,qs),
(307,135,o),
(286,155,o),
(272,155,qs),
(258,155,o),
(238,135,o),
(238,121,qs),
(238,89,o),
(272,87,q),
(306,90,o)
);
},
{
closed = 1;
nodes = (
(398,421,qs),
(398,407,o),
(418,387,o),
(432,387,qs),
(446,387,o),
(467,407,o),
(466,421,qs),
(466,435,o),
(447,455,o),
(432,456,q),
(398,453,o)
);
},
{
closed = 1;
nodes = (
(145,503,o),
(144,489,qs),
(144,475,o),
(165,454,o),
(179,454,qs),
(193,454,o),
(213,474,o),
(213,489,qs),
(213,520,o),
(179,523,q),
(164,522,o)
);
},
{
closed = 1;
nodes = (
(71,427,o),
(70,413,qs),
(70,399,o),
(91,378,o),
(105,378,qs),
(119,378,o),
(139,398,o),
(139,413,qs),
(139,444,o),
(105,447,q),
(90,446,o)
);
},
{
closed = 1;
nodes = (
(406,141,o),
(406,155,qs),
(407,169,o),
(386,189,o),
(372,189,qs),
(358,189,o),
(338,169,o),
(338,155,qs),
(338,123,o),
(372,120,q),
(387,121,o)
);
},
{
closed = 1;
nodes = (
(473,207,o),
(473,221,qs),
(473,235,o),
(453,256,o),
(438,256,qs),
(424,256,o),
(404,236,o),
(404,221,qs),
(405,190,o),
(438,187,q),
(454,188,o)
);
},
{
closed = 1;
nodes = (
(212,155,qs),
(213,169,o),
(192,189,o),
(178,189,qs),
(164,189,o),
(144,169,o),
(144,155,qs),
(144,141,o),
(163,121,o),
(178,120,q),
(212,123,o)
);
},
{
closed = 1;
nodes = (
(133,221,qs),
(133,236,o),
(113,256,o),
(99,256,qs),
(85,256,o),
(64,235,o),
(64,221,qs),
(65,207,o),
(84,188,o),
(99,187,q),
(133,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 168 values pushed */
72 2 2 1 2 83 56 2 11 15 122 1 16 18 51 1 17 9 4 76 117 94 2 9 1 75 0 0 0 1 10 0 1 105 24 13 2 2 12 1 3 15 2 3 105 0 10 0 11 14 10 11 105 25 1 15 0 14 4 15 14 105 6 1 4 7 1 5 18 4 5 105 23 1 18 22 27 2 19 9 18 19 105 0 9 17 8 9 89 21 1 16 20 26 2 17 8 16 17 105 0 9 9 8 97 0 8 9 8 81 97 97 86 86 75 75 64 64 126 124 120 119 115 113 109 108 97 107 97 107 103 101 86 96 86 96 92 90 75 85 75 85 81 79 64 74 64 74 70 68 60 58 54 53 49 47 20 36 20 36 20 36 20 35 16 28 6 31 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,119,qs),
(364,166,o),
(364,278,qs),
(364,379,o),
(310,474,o),
(253,474,qs),
(201,474,o),
(174,436,qs),
(141,390,o),
(141,278,qs),
(141,176,o),
(195,82,o),
(253,82,qs),
(305,82,o)
);
},
{
closed = 1;
nodes = (
(104,55,qs),
(43,129,o),
(43,278,qs),
(43,407,o),
(91,481,qs),
(145,566,o),
(253,566,qs),
(345,566,o),
(399,501,qs),
(462,426,o),
(462,278,qs),
(462,148,o),
(415,74,qs),
(361,-10,o),
(253,-10,qs),
(158,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 8 6 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,421,ls),
(92,417,o),
(92,428,qs),
(92,501,ls),
(92,513,o),
(104,517,qs),
(183,546,ls),
(212,556,o),
(234,556,qs),
(255,556,ls),
(314,556,o),
(314,494,qs),
(314,89,l),
(408,89,ls),
(466,89,o),
(466,34,qs),
(466,14,ls),
(466,0,o),
(452,0,qs),
(84,0,ls),
(74,0,o),
(74,11,qs),
(74,78,ls),
(74,89,o),
(84,89,qs),
(218,89,l),
(218,461,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(448,89,o),
(448,35,qs),
(448,14,ls),
(448,0,o),
(435,0,qs),
(65,0,ls),
(54,0,o),
(54,11,qs),
(54,104,o),
(104,169,qs),
(138,211,o),
(212,258,qs),
(275,298,o),
(291,311,qs),
(342,352,o),
(342,403,qs),
(342,439,o),
(288,479,o),
(241,479,qs),
(173,479,o),
(103,441,qs),
(96,437,o),
(91,437,qs),
(85,437,o),
(82,444,qs),
(74,467,ls),
(56,520,o),
(113,542,qs),
(180,566,o),
(249,566,qs),
(328,566,o),
(379,532,qs),
(442,490,o),
(442,408,qs),
(442,343,o),
(397,290,qs),
(366,254,o),
(299,210,qs),
(236,169,o),
(225,161,qs),
(176,124,o),
(172,89,q),
(390,89,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 59 34 37 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,162,qs),
(449,91,o),
(402,45,qs),
(346,-10,o),
(249,-10,qs),
(164,-10,o),
(109,32,qs),
(55,73,o),
(55,126,qs),
(55,150,o),
(71,150,qs),
(80,150,o),
(88,141,qs),
(150,77,o),
(241,77,qs),
(292,77,o),
(352,124,o),
(352,165,qs),
(352,242,o),
(254,242,qs),
(190,242,ls),
(160,242,o),
(134,264,o),
(134,289,qs),
(134,314,ls),
(134,329,o),
(148,329,qs),
(246,329,ls),
(334,329,o),
(334,407,qs),
(334,442,o),
(286,481,o),
(242,481,qs),
(170,481,o),
(104,443,qs),
(95,437,o),
(91,437,qs),
(85,437,o),
(82,446,qs),
(74,467,ls),
(56,520,o),
(113,542,qs),
(176,566,o),
(248,566,qs),
(323,566,o),
(371,534,qs),
(432,494,o),
(432,417,qs),
(432,375,o),
(387,308,o),
(348,291,q),
(449,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 51 34 37 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,118,o),
(37,129,qs),
(37,182,ls),
(37,197,o),
(47,213,qs),
(254,533,ls),
(268,556,o),
(293,556,qs),
(336,556,ls),
(395,556,o),
(395,497,qs),
(395,207,l),
(428,207,ls),
(484,207,o),
(484,151,qs),
(484,132,ls),
(484,118,o),
(470,118,qs),
(395,118,l),
(395,11,ls),
(395,0,o),
(385,0,qs),
(309,0,ls),
(299,0,o),
(299,11,qs),
(299,118,l),
(48,118,ls)
);
},
{
closed = 1;
nodes = (
(299,448,l),
(141,207,l),
(299,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,361,o),
(265,361,qs),
(347,361,o),
(397,319,qs),
(454,272,o),
(454,185,qs),
(454,103,o),
(400,49,qs),
(341,-10,o),
(248,-10,qs),
(170,-10,o),
(116,27,qs),
(58,67,o),
(58,123,qs),
(58,148,o),
(74,148,qs),
(80,148,o),
(91,138,q),
(147,77,o),
(238,77,qs),
(294,77,o),
(356,131,o),
(356,181,qs),
(356,223,o),
(328,248,qs),
(298,276,o),
(243,276,qs),
(168,276,o),
(96,252,qs),
(83,247,o),
(83,261,qs),
(83,544,ls),
(83,556,o),
(92,556,qs),
(363,556,ls),
(422,556,o),
(422,499,qs),
(422,481,ls),
(422,467,o),
(408,467,qs),
(176,467,l),
(176,349,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 37 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,374,qs),
(353,374,o),
(405,325,qs),
(461,271,o),
(461,192,qs),
(461,108,o),
(413,54,qs),
(357,-10,o),
(261,-10,qs),
(177,-10,o),
(120,37,qs),
(54,91,o),
(54,180,qs),
(54,220,o),
(84,300,o),
(122,363,qs),
(240,556,ls),
(247,566,o),
(258,566,qs),
(289,566,o),
(302,539,qs),
(317,505,o),
(291,462,qs),
(233,367,l),
(259,374,o)
);
},
{
closed = 1;
nodes = (
(177,110,qs),
(207,77,o),
(260,77,qs),
(303,77,o),
(332,103,qs),
(365,133,o),
(365,183,qs),
(365,227,o),
(339,257,qs),
(310,292,o),
(259,292,qs),
(215,292,o),
(185,265,qs),
(151,233,o),
(151,183,qs),
(151,139,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,467,o),
(63,477,qs),
(63,544,ls),
(63,556,o),
(74,556,qs),
(396,556,ls),
(454,556,o),
(454,499,qs),
(454,487,ls),
(454,461,o),
(442,437,qs),
(239,12,ls),
(234,0,o),
(221,0,qs),
(140,0,ls),
(128,0,o),
(133,11,qs),
(352,467,l),
(74,467,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,98,qs),
(199,70,o),
(254,70,qs),
(303,70,o),
(363,118,o),
(363,158,qs),
(363,200,o),
(304,250,o),
(254,250,qs),
(202,250,o),
(143,200,o),
(143,158,qs),
(143,121,o)
);
},
{
closed = 1;
nodes = (
(209,329,o),
(254,329,qs),
(297,329,o),
(350,372,o),
(350,408,qs),
(350,444,o),
(298,487,o),
(254,487,qs),
(208,487,o),
(155,444,o),
(155,408,qs),
(155,372,o)
);
},
{
closed = 1;
nodes = (
(61,419,qs),
(61,482,o),
(109,522,qs),
(162,566,o),
(254,566,qs),
(332,566,o),
(384,532,qs),
(445,491,o),
(445,419,qs),
(445,331,o),
(359,292,q),
(459,258,o),
(459,157,qs),
(459,89,o),
(412,44,qs),
(356,-10,o),
(254,-10,qs),
(163,-10,o),
(107,32,qs),
(46,78,o),
(46,157,qs),
(46,258,o),
(146,292,q),
(61,330,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,181,qs),
(155,181,o),
(104,229,qs),
(48,282,o),
(48,362,qs),
(48,446,o),
(98,502,qs),
(156,566,o),
(252,566,qs),
(336,566,o),
(392,519,qs),
(456,466,o),
(456,376,qs),
(456,336,o),
(426,256,o),
(387,193,qs),
(271,2,ls),
(263,-10,o),
(252,-10,qs),
(219,-10,o),
(207,19,qs),
(193,52,o),
(219,92,qs),
(278,191,l),
(249,181,o)
);
},
{
closed = 1;
nodes = (
(324,291,qs),
(358,322,o),
(358,373,qs),
(358,417,o),
(332,445,qs),
(302,478,o),
(251,478,qs),
(206,478,o),
(177,452,qs),
(144,423,o),
(144,373,qs),
(144,322,o),
(202,264,o),
(251,264,qs),
(295,264,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 33 31 25 39 26 39 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,424,o),
(161,427,qs),
(161,433,o),
(167,433,qs),
(229,433,l),
(254,535,o),
(311,606,qs),
(369,677,o),
(438,697,qs),
(447,699,o),
(448,691,qs),
(448,689,o),
(448,686,qs),
(448,674,o),
(448,669,qs),
(447,627,o),
(423,605,qs),
(416,599,o),
(414,597,qs),
(343,526,o),
(318,433,q),
(367,433,ls),
(373,433,o),
(373,427,qs),
(373,424,o),
(371,422,qs),
(309,357,l),
(289,369,o),
(268,369,qs),
(243,369,o),
(224,357,q),
(163,422,ls)
);
},
{
closed = 1;
nodes = (
(185,234,q),
(119,173,l),
(116,171,o),
(114,171,qs),
(108,171,o),
(108,178,qs),
(108,232,l),
(54,254,ls),
(46,258,o),
(46,266,qs),
(46,288,ls),
(46,295,o),
(54,299,qs),
(108,321,l),
(108,376,ls),
(108,382,o),
(114,382,qs),
(116,382,o),
(119,380,q),
(185,320,l),
(173,304,o),
(173,278,qs),
(173,255,o)
);
},
{
closed = 1;
nodes = (
(489,296,o),
(489,287,qs),
(489,264,ls),
(489,257,o),
(482,254,qs),
(427,231,l),
(426,176,ls),
(426,169,o),
(420,169,qs),
(418,169,o),
(415,172,qs),
(350,233,l),
(362,255,o),
(362,277,qs),
(362,300,o),
(350,318,q),
(415,379,l),
(419,381,o),
(420,381,qs),
(427,381,o),
(427,374,qs),
(427,321,l),
(482,298,l)
);
},
{
closed = 1;
nodes = (
(318,297,o),
(318,276,qs),
(318,255,o),
(288,225,o),
(267,225,qs),
(245,225,o),
(216,254,o),
(216,276,qs),
(216,297,o),
(245,327,o),
(267,327,qs),
(288,327,o)
);
},
{
closed = 1;
nodes = (
(420,-50,qs),
(436,-65,o),
(447,-91,o),
(448,-117,qs),
(448,-122,o),
(448,-132,qs),
(448,-136,o),
(448,-138,qs),
(447,-147,o),
(438,-144,qs),
(379,-127,o),
(326,-71,qs),
(258,4,o),
(229,119,q),
(167,119,ls),
(161,119,o),
(161,125,qs),
(161,128,o),
(163,130,qs),
(224,196,l),
(243,183,o),
(268,183,qs),
(289,183,o),
(309,196,q),
(371,130,ls),
(373,128,o),
(373,125,qs),
(373,119,o),
(367,119,qs),
(318,119,l),
(343,26,o),
(414,-44,qs),
(416,-46,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 129 values pushed */
37 29 7 3 4 1 39 1 0 4 4 1 5 0 71 65 61 55 53 47 40 34 8 6 5 102 98 2 8 6 70 1 3 8 105 95 68 3 7 3 7 76 18 1 1 74 114 1 7 73 2 1 1 4 1 133 0 4 0 4 133 0 0 5 0 133 0 8 6 3 6 8 3 128 0 3 7 6 3 7 126 9 1 7 7 132 10 1 5 6 6 5 89 10 1 5 5 6 97 0 6 5 6 81 79 78 108 107 101 99 93 92 85 83 78 89 79 89 58 57 51 49 27 26 22 33 11 6 24 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,603,qs),
(98,617,o),
(87,644,o),
(86,669,qs),
(86,674,o),
(86,684,qs),
(86,689,o),
(86,691,qs),
(87,699,o),
(96,697,qs),
(155,680,o),
(207,623,qs),
(276,548,o),
(304,433,q),
(367,433,ls),
(373,433,o),
(373,427,qs),
(373,424,o),
(371,422,qs),
(309,357,l),
(291,369,o),
(266,369,qs),
(245,369,o),
(224,357,q),
(163,422,ls),
(161,424,o),
(161,427,qs),
(161,433,o),
(167,433,qs),
(216,433,l),
(190,526,o),
(120,597,qs),
(118,599,o)
);
},
{
closed = 1;
nodes = (
(488,295,o),
(488,288,qs),
(488,266,ls),
(488,258,o),
(480,254,qs),
(426,232,l),
(426,178,ls),
(426,171,o),
(419,171,qs),
(418,171,o),
(414,173,q),
(348,234,l),
(361,255,o),
(361,278,qs),
(361,304,o),
(348,320,q),
(415,380,l),
(418,382,o),
(420,382,qs),
(426,382,o),
(426,376,qs),
(426,321,l),
(480,299,ls)
);
},
{
closed = 1;
nodes = (
(52,254,ls),
(45,257,o),
(45,264,qs),
(45,287,ls),
(45,296,o),
(52,298,q),
(107,321,l),
(107,374,ls),
(107,381,o),
(113,381,qs),
(115,381,o),
(118,379,q),
(184,318,l),
(172,300,o),
(172,277,qs),
(172,255,o),
(184,233,q),
(118,172,l),
(116,169,o),
(113,169,qs),
(108,169,o),
(108,176,qs),
(107,231,l)
);
},
{
closed = 1;
nodes = (
(318,297,o),
(318,276,qs),
(318,255,o),
(288,225,o),
(267,225,qs),
(246,225,o),
(216,255,o),
(216,276,qs),
(216,297,o),
(246,327,o),
(267,327,qs),
(288,327,o)
);
},
{
closed = 1;
nodes = (
(373,128,o),
(373,125,qs),
(373,119,o),
(367,119,qs),
(305,119,l),
(279,17,o),
(222,-53,qs),
(165,-125,o),
(96,-144,qs),
(87,-147,o),
(86,-138,qs),
(86,-136,o),
(86,-133,qs),
(86,-122,o),
(86,-117,qs),
(87,-75,o),
(111,-53,qs),
(118,-46,o),
(120,-44,qs),
(190,26,o),
(216,119,q),
(167,119,ls),
(161,119,o),
(161,125,qs),
(161,128,o),
(163,130,qs),
(224,196,l),
(244,183,o),
(266,183,qs),
(291,183,o),
(309,196,q),
(371,130,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
70 68 36 34 15 5 6 1 0 12 8 2 5 1 78 71 65 61 49 43 39 33 8 6 5 95 1 7 6 120 98 2 8 3 5 76 24 1 0 74 109 1 8 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
70 68 36 34 15 5 6 1 0 12 8 2 5 1 78 71 65 61 49 43 39 33 8 6 5 95 1 7 6 120 98 2 8 4 5 76 24 1 0 74 109 1 8 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
70 68 36 34 15 5 6 1 0 12 8 2 5 1 78 71 65 61 49 43 39 33 8 6 5 95 1 7 6 120 98 2 8 3 5 76 24 1 0 74 109 1 8 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 1 0 133 0 1 5 1 133 0 7 6 3 6 7 3 128 4 1 3 8 6 3 8 126 9 1 8 8 132 10 1 5 6 6 5 89 10 1 5 5 6 97 0 6 5 6 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
2 1 0 1 0 133 0 1 5 1 133 0 7 6 3 6 7 3 128 0 3 4 6 3 4 126 0 4 8 6 4 8 126 9 1 8 8 132 10 1 5 6 6 5 89 10 1 5 5 6 97 0 6 5 6 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
2 1 0 1 0 133 0 1 5 1 133 0 7 6 3 6 7 3 128 4 1 3 8 6 3 8 126 9 1 8 8 132 10 1 5 6 6 5 89 10 1 5 5 6 97 0 6 5 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
80 79 118 117 101 100 94 92 86 84 79 90 80 90 59 57 47 46 22 38 18 11 6 25 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,391,ls),
(100,463,o),
(138,509,qs),
(184,564,o),
(270,564,qs),
(345,564,o),
(390,522,qs),
(440,474,o),
(440,391,qs),
(440,82,ls),
(440,0,o),
(362,0,qs),
(354,0,ls),
(342,0,o),
(342,10,qs),
(342,397,ls),
(342,433,o),
(304,475,o),
(270,475,qs),
(237,475,o),
(198,433,o),
(198,397,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 30 28 23 21 16 13 9 7 0 31 1 31 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,158,o),
(55,174,qs),
(48,474,ls),
(47,532,o),
(88,548,q),
(104,556,o),
(126,556,qs),
(134,556,ls),
(145,556,o),
(145,546,qs),
(139,174,ls),
(138,158,o),
(123,158,qs),
(71,158,ls)
);
},
{
closed = 1;
nodes = (
(159,75,o),
(159,49,qs),
(159,24,o),
(124,-13,o),
(98,-13,qs),
(73,-13,o),
(37,24,o),
(37,49,qs),
(37,75,o),
(73,112,o),
(98,112,qs),
(124,112,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 0 3 2 3 101 4 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 21 19 14 25 15 25 7 4 0 13 1 12 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 197;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,0,o),
(141,17,qs),
(141,473,ls),
(141,541,o),
(189,552,qs),
(205,556,o),
(230,556,qs),
(316,556,o),
(365,499,q),
(368,497,o),
(371,500,q),
(411,556,o),
(494,556,qs),
(547,556,ls),
(557,556,o),
(557,546,qs),
(557,538,ls),
(557,479,o),
(507,469,qs),
(504,468,o),
(491,467,qs),
(484,466,o),
(482,466,qs),
(449,460,o),
(406,418,o),
(384,369,qs),
(377,356,o),
(369,356,qs),
(362,356,o),
(355,369,qs),
(331,420,o),
(293,458,o),
(262,462,qs),
(257,463,o),
(248,464,qs),
(243,464,o),
(242,464,qs),
(238,464,o),
(238,460,qs),
(238,17,ls),
(238,0,o),
(221,0,qs),
(158,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
33 1 1 3 3 1 2 1 2 76 0 2 1 0 1 2 0 128 0 1 1 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 36 34 30 27 15 13 8 5 0 42 1 41 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,556,o),
(454,556,qs),
(461,556,o),
(463,546,qs),
(471,511,o),
(455,444,o),
(435,430,qs),
(245,285,l),
(180,229,o),
(180,176,qs),
(180,139,o),
(230,92,o),
(269,92,qs),
(532,92,ls),
(568,92,o),
(612,54,o),
(612,24,qs),
(612,17,ls),
(612,6,o),
(605,0,o),
(594,0,qs),
(262,0,ls),
(190,0,o),
(141,37,qs),
(81,83,o),
(81,170,qs),
(81,232,o),
(116,284,qs),
(147,329,o),
(219,383,qs),
(442,550,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 25 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,529,o),
(91,541,qs),
(39,671,ls),
(36,679,o),
(46,679,qs),
(85,679,o),
(98,644,qs),
(121,588,l),
(144,644,ls),
(158,679,o),
(196,679,qs),
(206,679,o),
(203,671,qs),
(151,541,ls),
(147,529,o),
(135,529,qs),
(107,529,ls)
);
},
{
closed = 1;
nodes = (
(458,556,o),
(458,546,qs),
(458,178,ls),
(458,101,o),
(419,54,qs),
(374,0,o),
(287,0,qs),
(63,0,ls),
(44,0,o),
(44,17,qs),
(44,26,ls),
(44,57,o),
(88,97,o),
(123,97,qs),
(181,97,l),
(100,346,ls),
(80,406,o),
(119,432,qs),
(133,441,o),
(154,448,q),
(160,451,l),
(168,453,o),
(172,443,qs),
(286,97,l),
(296,97,ls),
(326,97,o),
(360,142,o),
(360,180,qs),
(360,474,ls),
(360,533,o),
(400,548,qs),
(417,556,o),
(438,556,qs),
(447,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 3 1 1 76 2 1 1 3 1 133 7 1 0 3 4 3 0 4 128 8 1 3 3 23 77 5 1 4 4 6 96 0 6 6 24 6 78 18 17 1 0 44 41 37 35 26 24 17 50 18 49 12 10 6 4 0 16 1 15 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,529,o),
(91,541,qs),
(39,671,ls),
(36,679,o),
(46,679,qs),
(85,679,o),
(98,644,qs),
(121,588,l),
(144,644,ls),
(158,679,o),
(196,679,qs),
(206,679,o),
(203,671,qs),
(151,541,ls),
(147,529,o),
(135,529,qs),
(107,529,ls)
);
},
{
closed = 1;
nodes = (
(564,0,l),
(531,0,ls),
(454,0,o),
(409,44,q),
(365,0,o),
(287,0,qs),
(63,0,ls),
(44,0,o),
(44,17,qs),
(44,26,ls),
(44,57,o),
(88,97,o),
(123,97,qs),
(181,97,l),
(100,346,ls),
(80,406,o),
(119,432,qs),
(133,441,o),
(154,448,q),
(160,451,l),
(168,453,o),
(172,443,qs),
(286,97,l),
(296,97,ls),
(326,97,o),
(360,142,o),
(360,180,qs),
(360,474,ls),
(360,533,o),
(400,548,qs),
(417,556,o),
(438,556,qs),
(447,556,ls),
(458,556,o),
(458,546,qs),
(458,178,ls),
(458,140,o),
(496,97,o),
(529,97,qs),
(564,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
8 1 4 1 52 1 7 3 2 76 2 1 1 4 1 133 9 1 0 4 3 4 0 3 128 0 4 4 23 77 6 5 10 3 3 3 7 98 8 1 7 7 24 7 78 18 17 1 0 55 53 51 48 44 42 33 31 25 22 17 56 18 56 12 10 6 4 0 16 1 15 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,647,o),
(464,669,qs),
(464,692,o),
(495,723,o),
(517,723,qs),
(539,723,o),
(569,692,o),
(569,669,qs),
(569,647,o),
(539,616,o),
(517,616,qs),
(495,616,o)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(669,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
49 1 7 2 1 76 0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 52 50 46 44 37 35 27 25 20 17 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,692,o),
(204,669,qs),
(204,647,o),
(174,616,o),
(152,616,qs),
(130,616,o),
(99,647,o),
(99,669,qs),
(99,692,o),
(130,723,o),
(152,723,qs),
(174,723,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,647,o),
(99,669,qs),
(99,692,o),
(130,723,o),
(152,723,qs),
(174,723,o),
(204,692,o),
(204,669,qs),
(204,647,o),
(174,616,o),
(152,616,qs),
(130,616,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
29 1 5 2 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 17 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,753,o),
(466,773,qs),
(466,793,o),
(493,820,o),
(512,820,qs),
(531,820,o),
(558,792,o),
(558,773,qs),
(558,754,o),
(531,726,o),
(512,726,qs),
(493,726,o)
);
},
{
closed = 1;
nodes = (
(402,647,o),
(402,668,qs),
(402,689,o),
(431,719,o),
(451,719,qs),
(472,719,o),
(502,689,o),
(502,668,qs),
(502,647,o),
(472,617,o),
(451,617,qs),
(431,617,o)
);
},
{
closed = 1;
nodes = (
(551,719,o),
(572,719,qs),
(593,719,o),
(622,689,o),
(622,668,qs),
(622,646,o),
(593,617,o),
(572,617,qs),
(551,617,o),
(522,646,o),
(522,668,qs),
(522,689,o)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(669,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
73 1 11 6 1 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 76 74 70 68 61 59 51 49 44 41 36 77 37 77 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,753,o),
(101,773,qs),
(101,793,o),
(128,820,o),
(147,820,qs),
(166,820,o),
(193,792,o),
(193,773,qs),
(193,754,o),
(166,726,o),
(147,726,qs),
(128,726,o)
);
},
{
closed = 1;
nodes = (
(37,647,o),
(37,668,qs),
(37,689,o),
(66,719,o),
(86,719,qs),
(107,719,o),
(137,689,o),
(137,668,qs),
(137,647,o),
(107,617,o),
(86,617,qs),
(66,617,o)
);
},
{
closed = 1;
nodes = (
(157,647,o),
(157,668,qs),
(157,689,o),
(186,719,o),
(207,719,qs),
(228,719,o),
(257,689,o),
(257,668,qs),
(257,646,o),
(228,617,o),
(207,617,qs),
(186,617,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 98 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 50 48 45 42 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,753,o),
(101,773,qs),
(101,793,o),
(128,820,o),
(147,820,qs),
(166,820,o),
(193,792,o),
(193,773,qs),
(193,754,o),
(166,726,o),
(147,726,qs),
(128,726,o)
);
},
{
closed = 1;
nodes = (
(37,647,o),
(37,668,qs),
(37,689,o),
(66,719,o),
(86,719,qs),
(107,719,o),
(137,689,o),
(137,668,qs),
(137,647,o),
(107,617,o),
(86,617,qs),
(66,617,o)
);
},
{
closed = 1;
nodes = (
(186,719,o),
(207,719,qs),
(228,719,o),
(257,689,o),
(257,668,qs),
(257,646,o),
(228,617,o),
(207,617,qs),
(186,617,o),
(157,647,o),
(157,668,qs),
(157,689,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
53 1 9 6 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 98 10 1 9 9 24 9 78 37 36 13 12 1 0 56 54 52 50 49 47 44 41 36 57 37 57 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(434,783,o),
(444,783,qs),
(483,783,o),
(496,749,qs),
(520,693,l),
(542,749,ls),
(556,783,o),
(594,783,qs),
(604,783,o),
(601,775,qs),
(550,645,ls),
(545,634,o),
(534,634,qs),
(505,634,ls),
(493,634,o),
(489,645,qs),
(437,775,ls)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(669,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
11 1 0 1 54 1 8 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 101 0 4 4 23 77 9 1 3 3 8 98 0 8 8 24 8 78 18 17 57 55 51 49 42 40 32 30 25 22 17 58 18 58 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,775,qs),
(187,645,ls),
(183,634,o),
(171,634,qs),
(143,634,ls),
(131,634,o),
(127,645,qs),
(75,775,ls),
(72,783,o),
(82,783,qs),
(121,783,o),
(134,749,qs),
(157,693,l),
(180,749,ls),
(194,783,o),
(232,783,qs),
(242,783,o)
);
},
{
closed = 1;
nodes = (
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
3 1 2 0 1 76 1 6 2 0 2 0 133 0 2 3 2 133 7 1 3 3 23 77 0 4 4 5 98 0 5 5 24 5 78 18 17 1 0 26 24 23 21 17 32 18 31 13 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,783,o),
(82,783,qs),
(121,783,o),
(134,749,qs),
(157,693,l),
(180,749,ls),
(194,783,o),
(232,783,qs),
(242,783,o),
(239,775,qs),
(187,645,ls),
(183,634,o),
(171,634,qs),
(143,634,ls),
(131,634,o),
(127,645,qs),
(75,775,ls)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
11 1 0 1 34 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 98 7 1 6 6 24 6 78 18 17 37 35 33 31 30 28 25 22 17 38 18 38 36 35 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,0,o),
(47,11,qs),
(323,514,ls),
(345,555,o),
(377,556,qs),
(426,556,ls),
(441,556,o),
(433,541,qs),
(140,7,ls),
(136,0,o),
(129,0,qs),
(55,0,ls)
);
},
{
closed = 1;
nodes = (
(96,443,o),
(96,467,qs),
(96,490,o),
(128,523,o),
(152,523,qs),
(176,523,o),
(207,491,o),
(207,467,qs),
(207,443,o),
(175,410,o),
(152,410,qs),
(128,410,o)
);
},
{
closed = 1;
nodes = (
(252,25,o),
(252,49,qs),
(252,73,o),
(285,105,o),
(309,105,qs),
(332,105,o),
(364,73,o),
(364,49,qs),
(364,25,o),
(332,-8,o),
(309,-8,qs),
(285,-8,o)
);
},
{
closed = 1;
nodes = (
(427,25,o),
(427,49,qs),
(427,73,o),
(460,105,o),
(483,105,qs),
(507,105,o),
(539,73,o),
(539,49,qs),
(539,25,o),
(506,-8,o),
(483,-8,qs),
(460,-8,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 3 1 133 8 1 0 5 4 5 0 4 128 0 3 9 1 2 5 3 2 105 7 1 5 0 4 5 89 7 1 5 5 4 97 11 6 10 3 4 5 4 81 37 36 25 24 13 12 1 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 4 0 11 1 10 12 6 22 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-61,-106,q),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
},
{
closed = 1;
nodes = (
(120,-313,o),
(120,-336,qs),
(120,-359,o),
(89,-390,o),
(67,-390,qs),
(45,-390,o),
(15,-359,o),
(15,-336,qs),
(15,-314,o),
(45,-283,o),
(67,-283,qs),
(89,-283,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 133 3 1 2 0 4 6 2 4 106 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 106 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
34 33 1 0 40 38 33 44 34 44 31 29 25 23 19 17 13 11 8 5 0 32 1 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,593,o),
(90,593,qs),
(129,593,o),
(142,558,qs),
(165,502,l),
(188,558,ls),
(201,593,o),
(240,593,qs),
(250,593,o),
(247,584,qs),
(195,454,ls),
(191,443,o),
(179,443,qs),
(151,443,ls),
(139,443,o),
(135,454,qs),
(83,584,ls)
);
},
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 45 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 6 1 5 0 7 5 7 102 9 1 3 3 8 98 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 102 9 1 3 3 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 17 48 46 42 40 36 34 30 28 25 22 17 49 18 49 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-61,-106,q),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
},
{
closed = 1;
nodes = (
(138,-291,qs),
(86,-421,ls),
(82,-432,o),
(70,-432,qs),
(41,-432,ls),
(30,-432,o),
(25,-421,qs),
(-26,-291,ls),
(-29,-282,o),
(-20,-282,qs),
(19,-282,o),
(33,-317,qs),
(56,-373,l),
(79,-317,ls),
(92,-282,o),
(130,-282,qs),
(141,-282,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 5 0 36 1 8 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 133 7 10 2 6 4 8 4 6 8 128 0 8 8 132 3 1 2 0 4 6 2 4 106 9 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 7 10 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 106 9 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
34 33 1 0 46 43 40 38 33 49 34 49 31 29 25 23 19 17 13 11 8 5 0 32 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,589,o),
(248,545,o),
(248,506,qs),
(248,467,o),
(201,423,o),
(159,423,qs),
(33,423,ls),
(27,423,o),
(27,429,qs),
(27,434,ls),
(28,470,o),
(72,470,qs),
(75,470,l),
(75,599,ls),
(75,625,o),
(88,639,qs),
(98,649,o),
(114,649,qs),
(118,649,ls),
(124,649,o),
(124,644,qs),
(124,589,l),
(159,589,ls)
);
},
{
closed = 1;
nodes = (
(178,470,o),
(198,490,o),
(198,506,qs),
(198,522,o),
(178,542,o),
(162,542,qs),
(124,542,l),
(124,470,l),
(162,470,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
1 1 3 0 1 76 0 0 3 0 133 6 1 3 0 4 1 3 4 105 7 5 2 1 2 2 1 89 7 5 2 1 1 2 95 0 2 1 2 79 23 23 0 0 23 31 23 30 26 24 0 22 0 21 51 36 35 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,-96,o),
(133,-117,qs),
(133,-138,o),
(104,-168,o),
(83,-168,qs),
(62,-168,o),
(33,-138,o),
(33,-117,qs),
(33,-96,o),
(62,-66,o),
(83,-66,qs),
(104,-66,o)
);
},
{
closed = 1;
nodes = (
(253,-96,o),
(253,-117,qs),
(253,-138,o),
(224,-168,o),
(204,-168,qs),
(182,-168,o),
(153,-138,o),
(153,-117,qs),
(153,-96,o),
(182,-66,o),
(204,-66,qs),
(224,-66,o)
);
},
{
closed = 1;
nodes = (
(189,-203,o),
(189,-222,qs),
(189,-242,o),
(162,-269,o),
(143,-269,qs),
(124,-269,o),
(97,-242,o),
(97,-222,qs),
(97,-203,o),
(124,-176,o),
(143,-176,qs),
(162,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,460,o),
(38,481,qs),
(38,502,o),
(67,532,o),
(88,532,qs),
(109,532,o),
(138,502,o),
(138,481,qs),
(138,460,o),
(109,430,o),
(88,430,qs),
(67,430,o)
);
},
{
closed = 1;
nodes = (
(159,460,o),
(159,481,qs),
(159,502,o),
(188,532,o),
(209,532,qs),
(229,532,o),
(259,502,o),
(259,481,qs),
(259,460,o),
(230,430,o),
(209,430,qs),
(188,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,-96,o),
(133,-117,qs),
(133,-138,o),
(104,-168,o),
(83,-168,qs),
(62,-168,o),
(33,-138,o),
(33,-117,qs),
(33,-96,o),
(62,-66,o),
(83,-66,qs),
(104,-66,o)
);
},
{
closed = 1;
nodes = (
(253,-96,o),
(253,-117,qs),
(253,-138,o),
(224,-168,o),
(204,-168,qs),
(182,-168,o),
(153,-138,o),
(153,-117,qs),
(153,-96,o),
(182,-66,o),
(204,-66,qs),
(224,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,541,qs),
(63,552,o),
(53,552,qs),
(37,552,o),
(25,529,q),
(20,522,o),
(16,522,qs),
(14,522,o),
(11,526,qs),
(3,539,o),
(3,554,qs),
(3,573,o),
(27,597,o),
(47,597,qs),
(55,597,o),
(68,593,qs),
(74,592,o),
(75,592,qs),
(81,591,o),
(84,595,qs),
(111,631,o),
(140,653,o),
(165,653,qs),
(192,653,o),
(226,619,o),
(226,591,qs),
(226,564,o),
(183,524,o),
(153,524,qs),
(132,524,o),
(95,539,qs),
(92,540,o)
);
},
{
closed = 1;
nodes = (
(124,578,q),
(139,571,o),
(151,571,qs),
(164,571,o),
(182,585,o),
(182,596,qs),
(182,611,o),
(164,611,qs),
(148,611,o)
);
},
{
closed = 1;
nodes = (
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,101,o),
(417,54,qs),
(372,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,q),
(415,556,o),
(436,556,qs),
(445,556,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 5 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 0 0 5 97 11 6 2 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 11 1 6 6 23 77 0 0 0 5 97 0 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 0 0 7 5 0 105 11 1 6 6 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
42 41 33 32 68 65 61 59 50 48 41 74 42 73 38 36 32 40 33 40 41 39 36 33 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,541,qs),
(63,552,o),
(53,552,qs),
(37,552,o),
(25,529,q),
(20,522,o),
(16,522,qs),
(14,522,o),
(11,526,qs),
(3,539,o),
(3,554,qs),
(3,573,o),
(27,597,o),
(47,597,qs),
(55,597,o),
(68,593,qs),
(74,592,o),
(75,592,qs),
(81,591,o),
(84,595,qs),
(111,631,o),
(140,653,o),
(165,653,qs),
(192,653,o),
(226,619,o),
(226,591,qs),
(226,564,o),
(183,524,o),
(153,524,qs),
(132,524,o),
(95,539,qs),
(92,540,o)
);
},
{
closed = 1;
nodes = (
(124,578,q),
(139,571,o),
(151,571,qs),
(164,571,o),
(182,585,o),
(182,596,qs),
(182,611,o),
(164,611,qs),
(148,611,o)
);
},
{
closed = 1;
nodes = (
(562,0,l),
(530,0,ls),
(452,0,o),
(407,44,q),
(363,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,q),
(415,556,o),
(436,556,qs),
(445,556,ls),
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,140,o),
(494,97,o),
(527,97,qs),
(562,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
39 1 5 2 76 1 10 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 0 0 5 97 7 1 5 5 23 77 9 8 13 3 6 6 10 98 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 7 7 23 77 0 0 0 5 97 0 5 5 23 77 9 8 13 3 6 6 10 98 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 0 0 6 5 0 105 0 7 7 23 77 9 8 13 3 6 6 10 98 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
42 41 33 32 79 77 75 72 68 66 57 55 49 46 41 80 42 80 38 36 32 40 33 40 41 39 36 33 14 7 26 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,764,qs),
(39,770,o),
(39,778,qs),
(41,816,o),
(94,816,qs),
(146,817,l),
(183,817,ls),
(220,817,o),
(220,783,qs),
(220,778,ls),
(220,772,o),
(212,772,qs),
(96,772,ls),
(77,772,o),
(58,764,q),
(54,763,o),
(53,762,qs),
(48,759,o),
(46,759,qs),
(43,759,o)
);
},
{
closed = 1;
nodes = (
(41,678,qs),
(39,684,o),
(39,692,qs),
(41,730,o),
(94,731,qs),
(183,731,ls),
(220,731,o),
(220,697,qs),
(220,692,ls),
(220,686,o),
(212,686,qs),
(96,686,ls),
(77,686,o),
(58,679,qs),
(53,677,ls),
(48,674,o),
(46,674,qs),
(43,674,o)
);
},
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
20 1 4 2 80 61 48 3 5 4 74 1 9 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 6 11 3 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
8 6 11 3 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
39 38 77 75 73 71 65 63 59 57 52 50 46 44 38 82 39 82 51 57 67 53 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,708,o),
(77,736,qs),
(77,764,o),
(113,801,o),
(141,801,qs),
(170,801,o),
(206,764,o),
(206,736,qs),
(206,708,o),
(170,673,o),
(141,673,qs),
(113,673,o)
);
},
{
closed = 1;
nodes = (
(116,736,qs),
(116,708,o),
(141,708,qs),
(166,708,o),
(166,736,qs),
(166,764,o),
(141,764,qs),
(116,764,o)
);
},
{
closed = 1;
nodes = (
(260,611,o),
(260,607,qs),
(260,542,ls),
(260,505,o),
(222,462,o),
(190,462,qs),
(160,462,o),
(141,481,q),
(123,462,o),
(94,462,qs),
(61,462,o),
(22,505,o),
(22,542,qs),
(22,563,ls),
(22,583,o),
(30,596,qs),
(40,611,o),
(60,611,qs),
(65,611,ls),
(69,611,o),
(69,607,qs),
(69,537,ls),
(69,506,o),
(93,506,qs),
(118,506,o),
(118,537,qs),
(118,563,ls),
(118,584,o),
(128,598,qs),
(138,611,o),
(156,611,qs),
(161,611,ls),
(165,611,o),
(165,607,qs),
(165,537,ls),
(165,506,o),
(189,506,qs),
(214,506,o),
(214,537,qs),
(214,563,ls),
(214,585,o),
(223,598,qs),
(233,611,o),
(251,611,qs),
(256,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
62 43 30 3 5 4 56 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 6 13 3 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
8 6 13 3 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
21 20 13 12 1 0 59 57 55 53 47 45 41 39 34 32 28 26 20 64 21 64 17 15 12 19 13 19 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,249,o),
(431,243,qs),
(431,237,o),
(426,232,qs),
(347,152,ls),
(343,147,o),
(337,147,qs),
(330,147,o),
(325,152,qs),
(246,232,ls),
(241,237,o),
(241,243,qs),
(241,249,o),
(246,254,qs),
(325,332,ls),
(330,337,o),
(337,337,qs),
(343,337,o),
(347,332,q),
(426,254,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 24 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,0,o),
(287,12,qs),
(287,474,ls),
(287,556,o),
(365,556,qs),
(373,556,ls),
(384,556,o),
(384,546,qs),
(384,12,ls),
(384,0,o),
(373,0,qs),
(298,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,0,o),
(204,12,qs),
(204,368,ls),
(204,454,o),
(242,502,qs),
(286,556,o),
(373,556,qs),
(472,556,ls),
(481,556,o),
(481,546,qs),
(481,538,ls),
(481,465,o),
(406,465,qs),
(378,465,ls),
(337,465,o),
(301,422,o),
(301,373,qs),
(301,12,ls),
(301,0,o),
(290,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,556,o),
(621,546,qs),
(621,437,ls),
(621,356,o),
(582,306,qs),
(537,250,o),
(455,250,qs),
(381,250,o),
(338,300,q),
(295,250,o),
(222,250,qs),
(183,250,o),
(152,263,q),
(152,12,ls),
(152,0,o),
(141,0,qs),
(66,0,ls),
(54,0,o),
(54,12,qs),
(54,474,ls),
(54,556,o),
(131,556,qs),
(140,556,ls),
(151,556,o),
(151,546,qs),
(151,441,ls),
(151,346,o),
(223,346,qs),
(296,346,o),
(296,441,qs),
(296,478,ls),
(296,514,o),
(331,556,o),
(361,556,qs),
(370,556,ls),
(380,556,o),
(380,546,qs),
(380,441,ls),
(380,346,o),
(452,346,qs),
(525,346,o),
(525,439,qs),
(525,474,ls),
(525,556,o),
(602,556,qs),
(611,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,237,o),
(281,196,o),
(281,166,qs),
(281,130,o),
(330,92,o),
(375,92,qs),
(425,92,ls),
(461,92,o),
(505,54,o),
(505,24,qs),
(505,16,ls),
(505,6,o),
(499,0,o),
(488,0,qs),
(367,0,ls),
(299,0,o),
(252,29,qs),
(181,72,o),
(181,171,qs),
(181,244,o),
(238,287,q),
(188,327,o),
(188,396,qs),
(188,466,o),
(229,512,qs),
(277,564,o),
(357,564,qs),
(408,564,o),
(478,514,o),
(480,477,qs),
(481,453,o),
(467,453,qs),
(461,453,o),
(450,457,q),
(448,457,o),
(446,458,qs),
(400,474,o),
(371,474,qs),
(334,474,o),
(288,434,o),
(288,402,qs),
(288,367,o),
(334,328,o),
(375,328,qs),
(425,328,ls),
(461,328,o),
(505,291,o),
(505,260,qs),
(505,252,ls),
(505,236,o),
(488,236,qs),
(360,237,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 38 35 25 23 20 18 14 12 8 5 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,523,qs),
(501,475,o),
(507,381,qs),
(517,194,o),
(517,179,qs),
(517,98,o),
(474,48,qs),
(424,-10,o),
(336,-10,qs),
(258,-10,o),
(210,34,qs),
(154,86,o),
(154,179,qs),
(154,194,o),
(165,381,qs),
(170,463,o),
(208,510,qs),
(253,564,o),
(336,564,qs),
(408,564,o)
);
},
{
closed = 1;
nodes = (
(265,372,qs),
(255,184,ls),
(253,82,o),
(336,82,qs),
(418,82,o),
(417,184,q),
(407,373,ls),
(401,473,o),
(336,473,qs),
(270,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
21 20 1 0 26 24 20 29 21 29 11 9 0 19 1 19 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,0,o),
(369,12,qs),
(369,373,ls),
(369,422,o),
(333,465,o),
(292,465,qs),
(264,465,ls),
(189,465,o),
(189,538,qs),
(189,546,ls),
(189,556,o),
(198,556,qs),
(297,556,ls),
(373,556,o),
(416,514,qs),
(466,466,o),
(466,368,qs),
(466,12,ls),
(466,0,o),
(455,0,qs),
(380,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 9 6 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,126,qs),
(449,539,ls),
(452,556,o),
(464,556,qs),
(470,556,ls),
(505,556,o),
(542,504,o),
(535,466,qs),
(481,141,ls),
(455,-10,o),
(341,-10,qs),
(226,-10,o),
(200,141,qs),
(146,466,ls),
(139,504,o),
(177,556,o),
(211,556,qs),
(217,556,ls),
(229,556,o),
(232,539,qs),
(300,126,ls),
(308,85,o),
(341,85,qs),
(373,85,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,0,o),
(131,21,qs),
(197,414,ls),
(222,564,o),
(337,564,qs),
(452,564,o),
(477,414,qs),
(543,21,ls),
(546,0,o),
(528,0,qs),
(464,0,ls),
(448,0,o),
(445,19,qs),
(378,428,l),
(369,469,o),
(337,469,qs),
(305,469,o),
(296,428,q),
(228,19,l),
(226,0,o),
(210,0,qs),
(146,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,520,qs),
(509,467,o),
(509,375,qs),
(509,12,ls),
(509,0,o),
(498,0,qs),
(423,0,ls),
(412,0,o),
(412,12,qs),
(412,187,l),
(334,187,ls),
(263,187,o),
(214,231,qs),
(156,283,o),
(156,375,qs),
(156,455,o),
(202,507,qs),
(252,564,o),
(334,564,qs),
(404,564,o)
);
},
{
closed = 1;
nodes = (
(256,419,o),
(256,375,qs),
(256,333,o),
(300,278,o),
(334,278,qs),
(412,278,l),
(412,375,ls),
(412,419,o),
(369,473,o),
(334,473,qs),
(299,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
35 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 98 5 1 4 4 24 4 78 1 0 38 36 34 31 22 21 14 11 8 5 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(914,0,l),
(716,0,ls),
(659,0,o),
(634,21,q),
(608,0,o),
(551,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(494,97,l),
(455,141,o),
(455,204,qs),
(454,272,o),
(497,322,qs),
(548,384,o),
(634,384,qs),
(708,384,o),
(758,336,qs),
(813,283,o),
(812,204,qs),
(812,141,o),
(773,97,q),
(914,97,l)
);
},
{
closed = 1;
nodes = (
(712,173,o),
(712,206,qs),
(711,244,o),
(667,293,o),
(634,293,qs),
(600,293,o),
(556,244,o),
(555,206,qs),
(555,173,o),
(600,114,o),
(634,103,q),
(667,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
35 1 3 1 1 76 0 2 0 6 0 2 6 128 0 0 0 6 1 0 6 105 7 5 2 1 1 3 96 4 1 3 3 24 3 78 0 0 47 45 0 39 0 39 34 57 23 37 37 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,338,qs),
(444,284,o),
(444,192,qs),
(444,113,o),
(400,60,qs),
(350,1,o),
(269,0,qs),
(-2,0,l),
(-2,97,l),
(112,97,l),
(89,134,o),
(88,192,qs),
(88,272,o),
(133,325,qs),
(183,384,o),
(266,384,qs),
(337,384,o)
);
},
{
closed = 1;
nodes = (
(344,152,o),
(344,194,qs),
(344,237,o),
(300,293,o),
(266,293,qs),
(233,293,o),
(188,236,o),
(188,194,qs),
(188,153,o),
(233,97,o),
(266,97,qs),
(300,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 24 22 17 28 18 28 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,0,l),
(347,0,ls),
(290,0,o),
(265,21,q),
(240,0,o),
(183,0,qs),
(-2,0,l),
(-2,97,l),
(126,97,l),
(86,141,o),
(86,204,qs),
(86,272,o),
(128,322,qs),
(180,384,o),
(265,384,qs),
(339,384,o),
(390,336,qs),
(445,283,o),
(444,204,qs),
(444,141,o),
(405,97,q),
(546,97,l)
);
},
{
closed = 1;
nodes = (
(344,173,o),
(344,206,qs),
(343,244,o),
(299,293,o),
(265,293,qs),
(231,293,o),
(187,244,o),
(187,206,qs),
(187,173,o),
(232,114,o),
(265,103,q),
(299,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
17 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 29 27 0 21 0 21 34 33 21 37 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,507,o),
(127,528,qs),
(127,550,o),
(157,579,o),
(177,579,qs),
(198,579,o),
(227,549,o),
(227,528,qs),
(227,507,o),
(198,477,o),
(177,477,qs),
(156,477,o)
);
},
{
closed = 1;
nodes = (
(248,507,o),
(248,528,qs),
(248,550,o),
(277,579,o),
(298,579,qs),
(319,579,o),
(348,550,o),
(348,528,qs),
(348,507,o),
(319,477,o),
(298,477,qs),
(277,477,o)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 7 98 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 57 55 50 60 51 60 48 46 44 42 36 33 31 28 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,250,o),
(430,243,qs),
(430,236,o),
(425,232,q),
(347,152,ls),
(343,147,o),
(337,147,qs),
(330,147,o),
(325,152,qs),
(245,232,ls),
(241,236,o),
(241,243,qs),
(241,249,o),
(245,254,q),
(325,332,ls),
(330,337,o),
(337,337,qs),
(342,337,o),
(347,332,qs),
(425,254,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 24 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,0,o),
(231,12,qs),
(231,474,ls),
(231,556,o),
(309,556,qs),
(317,556,ls),
(328,556,o),
(328,546,qs),
(328,12,ls),
(328,0,o),
(317,0,qs),
(242,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,0,o),
(204,12,qs),
(204,368,ls),
(204,454,o),
(242,502,qs),
(286,556,o),
(373,556,qs),
(472,556,ls),
(481,556,o),
(481,546,qs),
(481,538,ls),
(481,465,o),
(406,465,qs),
(378,465,ls),
(337,465,o),
(301,422,o),
(301,373,qs),
(301,12,ls),
(301,0,o),
(290,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,556,o),
(621,546,qs),
(621,437,ls),
(621,356,o),
(582,306,qs),
(537,250,o),
(455,250,qs),
(381,250,o),
(338,300,q),
(295,250,o),
(222,250,qs),
(183,250,o),
(152,263,q),
(152,12,ls),
(152,0,o),
(141,0,qs),
(66,0,ls),
(54,0,o),
(54,12,qs),
(54,474,ls),
(54,556,o),
(131,556,qs),
(140,556,ls),
(151,556,o),
(151,546,qs),
(151,441,ls),
(151,346,o),
(223,346,qs),
(296,346,o),
(296,441,qs),
(296,478,ls),
(296,514,o),
(331,556,o),
(361,556,qs),
(370,556,ls),
(380,556,o),
(380,546,qs),
(380,441,ls),
(380,346,o),
(452,346,qs),
(525,346,o),
(525,439,qs),
(525,474,ls),
(525,556,o),
(602,556,qs),
(611,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510,327,qs),
(504,285,o),
(474,257,qs),
(438,223,o),
(381,223,qs),
(323,224,o),
(277,252,q),
(277,17,ls),
(277,0,o),
(260,0,qs),
(197,0,ls),
(180,0,o),
(180,17,qs),
(180,474,ls),
(180,556,o),
(258,556,qs),
(266,556,ls),
(277,556,o),
(277,546,qs),
(277,520,l),
(321,567,o),
(387,564,qs),
(432,563,o),
(486,511,o),
(486,469,qs),
(486,449,o),
(472,449,qs),
(468,449,o),
(461,452,qs),
(457,453,o),
(456,453,q),
(454,454,o),
(451,455,qs),
(404,471,o),
(377,471,qs),
(339,470,o),
(280,421,o),
(277,387,qs),
(277,384,ls),
(278,357,o),
(304,337,qs),
(335,313,o),
(386,313,qs),
(426,312,o),
(473,333,qs),
(492,341,o),
(499,342,q),
(513,342,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
27 1 1 3 8 1 7 2 40 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
27 1 1 4 8 1 7 2 40 1 6 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 47 0 47 35 51 51 35 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,154,qs),
(154,164,o),
(169,378,qs),
(176,461,o),
(215,509,qs),
(260,564,o),
(341,564,qs),
(411,564,o),
(455,522,qs),
(505,474,o),
(512,378,qs),
(528,165,o),
(528,154,qs),
(535,-10,o),
(413,-10,qs),
(371,-10,o),
(343,20,qs),
(341,22,o),
(339,20,qs),
(312,-10,o),
(268,-10,qs),
(148,-10,o)
);
},
{
closed = 1;
nodes = (
(330,126,qs),
(333,140,o),
(341,140,qs),
(350,140,o),
(352,126,qs),
(357,86,o),
(389,86,qs),
(430,86,o),
(429,155,qs),
(429,156,o),
(429,157,qs),
(427,205,o),
(414,371,qs),
(406,473,o),
(341,474,qs),
(275,473,o),
(268,371,qs),
(253,186,o),
(253,155,qs),
(252,86,o),
(292,86,qs),
(325,86,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 18 2 6 4 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 41 39 37 35 29 27 22 43 23 43 15 13 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(534,266,o),
(504,249,q),
(417,211,o),
(309,103,o),
(264,10,qs),
(260,0,o),
(250,0,qs),
(173,0,ls),
(161,0,o),
(164,12,qs),
(193,135,o),
(291,227,q),
(243,245,o),
(187,334,o),
(187,392,qs),
(187,466,o),
(229,512,qs),
(275,564,o),
(353,564,qs),
(401,564,o),
(469,511,o),
(469,473,qs),
(469,453,o),
(456,453,qs),
(450,453,o),
(440,457,qs),
(399,473,o),
(368,473,qs),
(331,473,o),
(285,424,o),
(285,385,qs),
(285,350,o),
(330,297,o),
(368,287,q),
(443,337,o),
(526,360,qs),
(540,365,o),
(546,349,qs),
(558,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 35 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,126,qs),
(449,539,ls),
(452,556,o),
(464,556,qs),
(470,556,ls),
(505,556,o),
(542,504,o),
(535,466,qs),
(481,141,ls),
(455,-10,o),
(341,-10,qs),
(226,-10,o),
(200,141,qs),
(146,466,ls),
(139,504,o),
(177,556,o),
(211,556,qs),
(217,556,ls),
(229,556,o),
(232,539,qs),
(300,126,ls),
(308,85,o),
(341,85,qs),
(373,85,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,0,o),
(131,21,qs),
(197,414,ls),
(222,564,o),
(337,564,qs),
(452,564,o),
(477,414,qs),
(543,21,ls),
(546,0,o),
(528,0,qs),
(464,0,ls),
(448,0,o),
(445,19,qs),
(378,428,l),
(369,469,o),
(337,469,qs),
(305,469,o),
(296,428,q),
(228,19,l),
(226,0,o),
(210,0,qs),
(146,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,520,qs),
(509,467,o),
(509,375,qs),
(509,12,ls),
(509,0,o),
(498,0,qs),
(423,0,ls),
(412,0,o),
(412,12,qs),
(412,187,l),
(334,187,ls),
(263,187,o),
(214,231,qs),
(156,283,o),
(156,375,qs),
(156,455,o),
(202,507,qs),
(252,564,o),
(334,564,qs),
(404,564,o)
);
},
{
closed = 1;
nodes = (
(256,419,o),
(256,375,qs),
(256,333,o),
(300,278,o),
(334,278,qs),
(412,278,l),
(412,375,ls),
(412,419,o),
(369,473,o),
(334,473,qs),
(299,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 34 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 10 0 7 0 10 7 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 105 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 96 8 18 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 3 2 1 2 3 1 128 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 105 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 96 8 18 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
115 114 103 102 41 40 121 119 114 125 115 125 109 107 102 113 103 113 100 98 94 92 86 84 76 75 67 65 62 60 55 52 49 46 40 89 41 89 35 36 35 51 53 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 1 5 1 133 0 5 2 5 133 14 9 2 7 10 1 8 11 7 8 105 0 4 0 6 12 4 6 105 15 1 11 0 12 11 12 101 0 2 2 0 96 3 13 2 0 0 24 0 78 75 74 63 62 1 0 81 79 74 85 75 85 69 67 62 73 63 73 60 58 54 52 46 44 36 35 27 25 22 20 15 12 9 6 0 49 1 49 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
0 1 5 1 133 0 5 2 5 133 18 9 2 7 10 1 8 11 7 8 105 0 4 0 6 12 4 6 105 19 1 11 0 12 13 11 12 105 21 15 20 3 13 16 1 14 13 14 101 0 2 2 0 96 3 17 2 0 0 24 0 78 99 98 87 86 75 74 63 62 1 0 105 103 98 109 99 109 93 91 86 97 87 97 81 79 74 85 75 85 69 67 62 73 63 73 60 58 54 52 46 44 36 35 27 25 22 20 15 12 9 6 0 49 1 49 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 96 8 7 2 3 3 24 3 78 81 80 69 68 1 0 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 21 1 13 0 14 15 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 96 8 7 2 3 3 24 3 78 105 104 93 92 81 80 69 68 1 0 111 109 104 115 105 115 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(884,366,o),
(884,356,qs),
(884,178,ls),
(884,65,o),
(805,22,q),
(800,16,o),
(786,3,qs),
(767,-17,ls),
(739,-46,o),
(735,-65,q),
(753,-69,o),
(777,-98,o),
(777,-116,qs),
(777,-139,o),
(746,-171,o),
(724,-171,qs),
(702,-171,o),
(672,-139,o),
(671,-115,qs),
(669,-58,o),
(723,0,q),
(712,0,l),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(715,97,ls),
(786,97,o),
(786,180,qs),
(786,284,ls),
(786,342,o),
(826,358,qs),
(843,366,o),
(864,366,qs),
(872,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
36 34 2 0 1 96 1 8 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 3 1 2 1 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 0 2 3 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
41 40 91 89 85 83 80 78 70 69 61 59 56 54 49 46 40 106 41 105 35 36 35 51 53 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(884,366,o),
(884,356,qs),
(884,178,ls),
(884,65,o),
(805,22,q),
(800,16,o),
(786,3,qs),
(767,-17,ls),
(739,-46,o),
(735,-65,q),
(753,-69,o),
(777,-98,o),
(777,-116,qs),
(777,-139,o),
(746,-171,o),
(724,-171,qs),
(702,-171,o),
(672,-139,o),
(671,-115,qs),
(669,-58,o),
(723,0,q),
(712,0,l),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(715,97,ls),
(786,97,o),
(786,180,qs),
(786,284,ls),
(786,342,o),
(826,358,qs),
(843,366,o),
(864,366,qs),
(872,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
56 1 3 2 1 76 8 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 1 0 51 49 45 43 40 38 30 29 21 19 16 14 9 6 0 66 1 65 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(884,366,o),
(884,356,qs),
(884,178,ls),
(884,65,o),
(805,22,q),
(800,16,o),
(786,3,qs),
(767,-17,ls),
(739,-46,o),
(735,-65,q),
(753,-69,o),
(777,-98,o),
(777,-116,qs),
(777,-139,o),
(746,-171,o),
(724,-171,qs),
(702,-171,o),
(672,-139,o),
(671,-115,qs),
(669,-58,o),
(723,0,q),
(712,0,l),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(715,97,ls),
(786,97,o),
(786,180,qs),
(786,284,ls),
(786,342,o),
(826,358,qs),
(843,366,o),
(864,366,qs),
(872,366,ls)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
56 1 3 2 1 76 12 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 80 79 68 67 1 0 86 84 79 90 80 90 74 72 67 78 68 78 51 49 45 43 40 38 30 29 21 19 16 14 9 6 0 66 1 65 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 5 1 133 0 5 2 5 133 12 9 2 7 10 1 8 6 7 8 105 0 4 0 6 4 6 101 0 2 2 0 96 3 11 2 0 0 24 0 78 63 62 1 0 69 67 62 73 63 73 60 58 54 52 46 44 36 35 27 25 22 20 15 12 9 6 0 49 1 49 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 69 68 1 0 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(872,366,o),
(872,356,qs),
(872,178,ls),
(872,101,o),
(833,54,qs),
(788,0,o),
(702,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(704,97,ls),
(775,97,o),
(775,180,qs),
(775,284,ls),
(775,342,o),
(815,358,qs),
(831,366,o),
(853,366,qs),
(861,366,ls)
);
},
{
closed = 1;
nodes = (
(766,-94,o),
(766,-117,qs),
(766,-139,o),
(735,-171,o),
(713,-171,qs),
(691,-171,o),
(661,-139,o),
(661,-117,qs),
(661,-94,o),
(691,-63,o),
(713,-63,qs),
(735,-63,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 34 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
93 92 41 40 99 97 92 103 93 103 85 83 80 78 70 69 61 59 56 54 49 46 40 91 41 90 35 36 35 51 53 16 7 27 
CALL[ ]	/* CallFunction */";
};
width = 927;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 34 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 10 0 7 0 10 7 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 11 12 13 105 0 9 0 11 9 11 101 0 7 7 5 96 8 16 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 11 12 13 105 0 9 0 11 9 11 101 0 7 7 5 96 8 16 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
103 102 91 90 41 40 109 107 102 113 103 113 97 95 90 101 91 101 86 84 76 75 67 65 62 60 55 52 49 46 40 89 41 89 35 36 35 51 53 19 7 27 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
36 34 2 0 1 91 1 8 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 10 0 5 0 10 5 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 1 2 3 1 128 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
109 108 97 96 41 40 115 113 108 119 109 119 103 101 96 107 97 107 94 92 90 88 85 83 75 74 66 64 61 59 54 51 48 45 40 95 41 95 35 36 35 51 53 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,712,o),
(242,684,qs),
(242,656,o),
(199,617,o),
(169,617,qs),
(148,617,o),
(111,632,qs),
(108,633,o),
(105,634,qs),
(79,644,o),
(69,644,qs),
(53,644,o),
(41,622,q),
(36,615,o),
(32,615,qs),
(30,615,o),
(27,618,q),
(19,632,o),
(19,647,qs),
(19,666,o),
(43,689,o),
(63,689,qs),
(71,689,o),
(84,686,qs),
(90,685,o),
(91,684,q),
(97,684,o),
(100,688,qs),
(127,724,o),
(156,746,o),
(181,746,qs),
(208,746,o)
);
},
{
closed = 1;
nodes = (
(198,678,o),
(198,689,qs),
(198,704,o),
(180,704,qs),
(164,704,o),
(140,671,q),
(156,663,o),
(167,663,qs),
(180,663,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
34 1 4 1 1 76 16 1 3 73 6 1 0 0 5 1 0 5 105 7 1 4 2 3 4 89 0 1 0 2 3 1 2 105 7 1 4 4 3 97 0 3 4 3 81 33 32 1 0 37 35 32 40 33 40 27 25 21 19 10 8 0 31 1 31 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,472,o),
(116,494,qs),
(116,515,o),
(145,544,o),
(166,544,qs),
(187,544,o),
(216,515,o),
(216,494,qs),
(216,472,o),
(187,443,o),
(166,443,qs),
(145,443,o)
);
},
{
closed = 1;
nodes = (
(236,472,o),
(236,494,qs),
(236,515,o),
(265,544,o),
(286,544,qs),
(307,544,o),
(336,515,o),
(336,494,qs),
(336,472,o),
(307,443,o),
(286,443,qs),
(265,443,o)
);
},
{
closed = 1;
nodes = (
(511,0,l),
(402,0,l),
(394,-70,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(150,-214,o),
(111,-183,qs),
(77,-158,o),
(69,-121,qs),
(64,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(300,-57,o),
(306,0,q),
(226,0,ls),
(155,0,o),
(105,46,qs),
(48,100,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(142,384,o),
(225,384,qs),
(342,384,o),
(384,279,qs),
(404,230,o),
(407,142,qs),
(408,118,o),
(407,97,q),
(511,97,l)
);
},
{
closed = 1;
nodes = (
(311,200,o),
(292,244,qs),
(272,293,o),
(225,293,qs),
(190,293,o),
(149,237,o),
(149,191,qs),
(149,151,o),
(193,97,o),
(226,97,qs),
(306,97,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 5 6 5 7 6 128 0 4 0 12 10 4 12 105 0 6 0 8 6 8 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 16 11 15 3 10 10 5 95 9 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 7 5 6 5 7 6 128 3 1 1 14 2 13 3 0 4 1 0 105 0 4 0 12 10 4 12 105 0 6 0 8 6 8 101 16 11 15 3 10 10 5 95 9 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
61 60 24 24 13 12 1 0 67 65 60 70 61 70 24 59 24 59 58 57 53 51 47 45 43 41 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,612,o),
(149,612,qs),
(188,612,o),
(201,578,qs),
(225,522,l),
(247,578,ls),
(261,612,o),
(299,612,qs),
(309,612,o),
(306,604,qs),
(255,474,ls),
(250,463,o),
(239,463,qs),
(210,463,ls),
(198,463,o),
(194,474,qs),
(142,604,ls)
);
},
{
closed = 1;
nodes = (
(511,0,l),
(402,0,l),
(394,-70,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(150,-214,o),
(111,-183,qs),
(77,-158,o),
(69,-121,qs),
(64,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(300,-57,o),
(306,0,q),
(226,0,ls),
(155,0,o),
(105,46,qs),
(48,100,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(142,384,o),
(225,384,qs),
(342,384,o),
(384,279,qs),
(404,230,o),
(407,142,qs),
(408,118,o),
(407,97,q),
(511,97,l)
);
},
{
closed = 1;
nodes = (
(311,200,o),
(292,244,qs),
(272,293,o),
(225,293,qs),
(190,293,o),
(149,237,o),
(149,191,qs),
(149,151,o),
(193,97,o),
(226,97,qs),
(306,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
11 1 0 1 1 76 2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 11 9 3 11 106 0 5 0 7 5 7 101 13 10 12 3 9 9 4 95 8 1 4 4 24 4 78 54 53 17 17 60 58 53 63 54 63 17 52 17 52 20 36 34 34 38 39 36 35 49 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,584,qs),
(867,454,ls),
(863,443,o),
(851,443,qs),
(823,443,ls),
(811,443,o),
(807,454,qs),
(755,584,ls),
(752,593,o),
(762,593,qs),
(801,593,o),
(814,558,qs),
(837,502,l),
(860,558,ls),
(874,593,o),
(912,593,qs),
(922,593,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
3 1 2 0 1 76 1 14 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 15 2 3 10 5 3 103 0 7 11 9 7 89 17 12 16 3 10 13 1 11 9 10 11 105 0 7 7 9 97 0 9 7 9 81 80 79 68 67 18 17 1 0 86 84 79 90 80 90 74 72 67 78 68 78 63 61 53 52 44 42 39 37 32 29 26 23 17 66 18 66 13 10 7 5 0 16 1 16 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 936;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,593,o),
(752,593,qs),
(791,593,o),
(804,558,qs),
(827,502,l),
(850,558,ls),
(864,593,o),
(902,593,qs),
(912,593,o),
(909,584,qs),
(857,454,ls),
(853,443,o),
(841,443,qs),
(813,443,ls),
(801,443,o),
(797,454,qs),
(745,584,ls)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(777,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(773,97,o),
(773,180,qs),
(773,284,ls),
(773,366,o),
(851,366,qs),
(859,366,ls),
(870,366,o),
(870,356,qs),
(870,178,l),
(870,177,l),
(871,178,l),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
11 1 0 1 70 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 9 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 96 11 10 2 6 6 24 6 78 88 87 76 75 18 17 94 92 87 98 88 98 82 80 75 86 76 86 73 71 69 67 64 62 54 53 45 43 40 38 33 30 27 24 17 74 18 74 36 35 49 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,584,qs),
(867,454,ls),
(863,443,o),
(851,443,qs),
(823,443,ls),
(811,443,o),
(807,454,qs),
(755,584,ls),
(752,593,o),
(762,593,qs),
(801,593,o),
(814,558,qs),
(837,502,l),
(860,558,ls),
(874,593,o),
(912,593,qs),
(922,593,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(301,-373,o),
(280,-373,qs),
(259,-373,o),
(230,-343,o),
(230,-322,qs),
(230,-301,o),
(259,-271,o),
(280,-271,qs),
(301,-271,o),
(330,-301,o),
(330,-322,qs),
(330,-343,o)
);
},
{
closed = 1;
nodes = (
(450,-301,o),
(450,-322,qs),
(450,-343,o),
(421,-373,o),
(400,-373,qs),
(379,-373,o),
(350,-343,o),
(350,-322,qs),
(350,-301,o),
(379,-271,o),
(400,-271,qs),
(421,-271,o)
);
},
{
closed = 1;
nodes = (
(386,-408,o),
(386,-427,qs),
(386,-447,o),
(359,-474,o),
(340,-474,qs),
(320,-474,o),
(294,-447,o),
(294,-427,qs),
(294,-408,o),
(321,-381,o),
(340,-381,qs),
(359,-381,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 147 values pushed */
3 1 2 0 1 76 1 20 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 23 12 22 3 10 13 1 11 9 10 11 105 0 7 0 9 14 7 9 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 0 5 5 3 96 6 21 2 3 3 24 3 78 116 115 104 103 80 79 68 67 18 17 1 0 122 120 115 126 116 126 110 108 103 114 104 114 101 99 95 93 86 84 79 90 80 90 74 72 67 78 68 78 63 61 53 52 44 42 39 37 32 29 26 23 17 66 18 66 13 10 7 5 0 16 1 16 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 936;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,593,o),
(752,593,qs),
(791,593,o),
(804,558,qs),
(827,502,l),
(850,558,ls),
(864,593,o),
(902,593,qs),
(912,593,o),
(909,584,qs),
(857,454,ls),
(853,443,o),
(841,443,qs),
(813,443,ls),
(801,443,o),
(797,454,qs),
(745,584,ls)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(301,-373,o),
(280,-373,qs),
(259,-373,o),
(230,-343,o),
(230,-322,qs),
(230,-301,o),
(259,-271,o),
(280,-271,qs),
(301,-271,o),
(330,-301,o),
(330,-322,qs),
(330,-343,o)
);
},
{
closed = 1;
nodes = (
(450,-301,o),
(450,-322,qs),
(450,-343,o),
(421,-373,o),
(400,-373,qs),
(379,-373,o),
(350,-343,o),
(350,-322,qs),
(350,-301,o),
(379,-271,o),
(400,-271,qs),
(421,-271,o)
);
},
{
closed = 1;
nodes = (
(386,-408,o),
(386,-427,qs),
(386,-447,o),
(359,-474,o),
(340,-474,qs),
(320,-474,o),
(294,-447,o),
(294,-427,qs),
(294,-408,o),
(321,-381,o),
(340,-381,qs),
(359,-381,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 149 values pushed */
11 1 0 1 68 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 96 11 10 2 6 6 24 6 78 122 121 110 109 86 85 74 73 18 17 128 126 121 132 122 132 116 114 109 120 110 120 107 105 101 99 92 90 85 96 86 96 80 78 73 84 74 84 71 69 67 65 62 60 52 51 43 41 38 36 31 28 25 22 17 72 18 72 36 35 49 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,584,qs),
(867,454,ls),
(863,443,o),
(851,443,qs),
(823,443,ls),
(811,443,o),
(807,454,qs),
(755,584,ls),
(752,593,o),
(762,593,qs),
(801,593,o),
(814,558,qs),
(837,502,l),
(860,558,ls),
(874,593,o),
(912,593,qs),
(922,593,o)
);
},
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 154 values pushed */
3 1 7 0 53 51 2 3 4 2 76 1 19 2 0 7 0 133 0 2 7 5 7 2 5 128 0 6 5 4 5 6 4 128 0 13 3 10 3 13 10 128 0 7 0 5 6 7 5 105 9 1 4 0 3 13 4 3 103 0 10 11 20 2 8 15 10 8 103 0 12 16 14 12 89 22 17 21 3 15 18 1 16 14 15 16 105 0 12 12 14 97 0 14 12 14 81 120 119 108 107 58 57 1 0 126 124 119 130 120 130 114 112 107 118 108 118 103 101 93 92 84 82 79 77 72 69 66 63 57 106 58 106 47 45 42 40 36 34 31 28 25 22 13 10 7 5 0 16 1 16 23 6 22 
CALL[ ]	/* CallFunction */";
};
width = 936;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,593,o),
(752,593,qs),
(791,593,o),
(804,558,qs),
(827,502,l),
(850,558,ls),
(864,593,o),
(902,593,qs),
(912,593,o),
(909,584,qs),
(857,454,ls),
(853,443,o),
(841,443,qs),
(813,443,ls),
(801,443,o),
(797,454,qs),
(745,584,ls)
);
},
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(777,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(773,97,o),
(773,180,qs),
(773,284,ls),
(773,366,o),
(851,366,qs),
(859,366,ls),
(870,366,o),
(870,356,qs),
(870,178,l),
(870,177,l),
(871,178,l),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
11 1 7 1 53 51 2 3 4 110 1 11 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
2 1 1 7 1 133 0 6 0 4 0 6 4 128 0 13 3 8 3 13 8 128 0 7 5 1 0 6 7 0 105 9 1 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 6 5 4 5 6 4 128 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 9 1 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
128 127 116 115 58 57 134 132 127 138 128 138 122 120 115 126 116 126 113 111 109 107 104 102 94 93 85 83 80 78 73 70 67 64 57 114 58 114 35 36 35 51 55 36 35 49 24 7 30 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,584,qs),
(867,454,ls),
(863,443,o),
(851,443,qs),
(823,443,ls),
(811,443,o),
(807,454,qs),
(755,584,ls),
(752,593,o),
(762,593,qs),
(801,593,o),
(814,558,qs),
(837,502,l),
(860,558,ls),
(874,593,o),
(912,593,qs),
(922,593,o)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 144 values pushed */
3 1 2 0 1 76 1 18 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 19 2 3 10 5 3 103 21 12 20 3 10 13 1 11 9 10 11 105 0 7 0 9 14 7 9 105 23 16 22 3 14 15 15 14 89 23 16 22 3 14 14 15 97 17 1 15 14 15 81 104 103 92 91 80 79 68 67 18 17 1 0 110 108 103 114 104 114 98 96 91 102 92 102 86 84 79 90 80 90 74 72 67 78 68 78 63 61 53 52 44 42 39 37 32 29 26 23 17 66 18 66 13 10 7 5 0 16 1 16 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 936;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,593,o),
(752,593,qs),
(791,593,o),
(804,558,qs),
(827,502,l),
(850,558,ls),
(864,593,o),
(902,593,qs),
(912,593,o),
(909,584,qs),
(857,454,ls),
(853,443,o),
(841,443,qs),
(813,443,ls),
(801,443,o),
(797,454,qs),
(745,584,ls)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(777,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(773,97,o),
(773,180,qs),
(773,284,ls),
(773,366,o),
(851,366,qs),
(859,366,ls),
(870,366,o),
(870,356,qs),
(870,178,l),
(870,177,l),
(871,178,l),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 137 values pushed */
11 1 0 1 70 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 96 11 10 2 6 6 24 6 78 112 111 100 99 88 87 76 75 18 17 118 116 111 122 112 122 106 104 99 110 100 110 94 92 87 98 88 98 82 80 75 86 76 86 73 71 69 67 64 62 54 53 45 43 40 38 33 30 27 24 17 74 18 74 36 35 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,584,qs),
(867,454,ls),
(863,443,o),
(851,443,qs),
(823,443,ls),
(811,443,o),
(807,454,qs),
(755,584,ls),
(752,593,o),
(762,593,qs),
(801,593,o),
(814,558,qs),
(837,502,l),
(860,558,ls),
(874,593,o),
(912,593,qs),
(922,593,o)
);
},
{
closed = 1;
nodes = (
(251,469,o),
(260,469,qs),
(299,469,o),
(312,435,qs),
(336,379,l),
(359,435,ls),
(372,469,o),
(410,469,qs),
(420,469,o),
(417,461,qs),
(366,331,ls),
(361,320,o),
(350,320,qs),
(321,320,ls),
(310,320,o),
(305,331,qs),
(254,461,ls)
);
},
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 134 values pushed */
3 1 4 0 28 1 7 2 2 76 1 17 2 0 4 0 133 5 1 4 2 4 133 0 2 7 2 133 0 7 3 7 133 0 3 11 3 133 0 11 8 11 133 0 8 9 18 2 6 13 8 6 103 0 10 14 12 10 89 20 15 19 3 13 16 1 14 12 13 14 105 0 10 10 12 97 0 12 10 12 81 97 96 85 84 35 34 1 0 103 101 96 107 97 107 91 89 84 95 85 95 80 78 70 69 61 59 56 54 49 46 43 40 34 83 35 83 32 30 26 24 21 18 13 10 7 5 0 16 1 16 21 6 22 
CALL[ ]	/* CallFunction */";
};
width = 936;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(742,593,o),
(752,593,qs),
(791,593,o),
(804,558,qs),
(827,502,l),
(850,558,ls),
(864,593,o),
(902,593,qs),
(912,593,o),
(909,584,qs),
(857,454,ls),
(853,443,o),
(841,443,qs),
(813,443,ls),
(801,443,o),
(797,454,qs),
(745,584,ls)
);
},
{
closed = 1;
nodes = (
(251,469,o),
(260,469,qs),
(299,469,o),
(312,435,qs),
(336,379,l),
(359,435,ls),
(372,469,o),
(410,469,qs),
(420,469,o),
(417,461,qs),
(366,331,ls),
(361,320,o),
(350,320,qs),
(321,320,ls),
(310,320,o),
(305,331,qs),
(254,461,ls)
);
},
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(777,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(773,97,o),
(773,180,qs),
(773,284,ls),
(773,366,o),
(851,366,qs),
(859,366,ls),
(870,366,o),
(870,356,qs),
(870,178,l),
(870,177,l),
(871,178,l),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 127 values pushed */
11 1 4 1 28 1 7 0 87 1 9 6 3 76 2 1 1 4 1 133 5 1 4 0 4 133 0 0 7 0 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 12 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 96 14 13 2 9 9 24 9 78 105 104 93 92 35 34 111 109 104 115 105 115 99 97 92 103 93 103 90 88 86 84 81 79 71 70 62 60 57 55 50 47 44 41 34 91 35 91 36 35 51 36 35 49 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,469,o),
(260,469,qs),
(299,469,o),
(312,435,qs),
(336,379,l),
(359,435,ls),
(372,469,o),
(410,469,qs),
(420,469,o),
(417,461,qs),
(366,331,ls),
(361,320,o),
(350,320,qs),
(321,320,ls),
(310,320,o),
(305,331,qs),
(254,461,ls)
);
},
{
closed = 1;
nodes = (
(652,6,l),
(627,2,l),
(613,-83,o),
(549,-141,qs),
(468,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(653,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
11 1 0 1 53 1 4 3 2 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 8 1 3 3 4 96 0 4 4 24 4 78 18 17 49 47 39 38 30 28 25 23 17 54 18 54 36 35 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,584,qs),
(185,454,ls),
(180,443,o),
(168,443,qs),
(140,443,ls),
(128,443,o),
(124,454,qs),
(72,584,ls),
(69,593,o),
(79,593,qs),
(118,593,o),
(131,558,qs),
(155,502,l),
(177,558,ls),
(191,593,o),
(229,593,qs),
(239,593,o)
);
},
{
closed = 1;
nodes = (
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls)
);
},
{
closed = 1;
nodes = (
(84,-96,o),
(84,-117,qs),
(84,-138,o),
(55,-168,o),
(34,-168,qs),
(13,-168,o),
(-16,-138,o),
(-16,-117,qs),
(-16,-96,o),
(13,-66,o),
(34,-66,qs),
(55,-66,o)
);
},
{
closed = 1;
nodes = (
(204,-96,o),
(204,-117,qs),
(204,-138,o),
(175,-168,o),
(155,-168,qs),
(133,-168,o),
(104,-138,o),
(104,-117,qs),
(104,-96,o),
(133,-66,o),
(155,-66,qs),
(175,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
3 1 2 0 1 76 1 10 2 0 2 0 133 0 2 3 2 133 0 3 4 3 133 12 8 11 3 6 9 1 7 6 7 101 0 4 4 5 98 0 5 5 24 5 78 46 45 34 33 1 0 52 50 45 56 46 56 40 38 33 44 34 44 29 27 26 24 21 18 13 10 7 5 0 16 1 16 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,593,o),
(79,593,qs),
(117,593,o),
(131,558,qs),
(154,502,l),
(177,558,ls),
(190,593,o),
(229,593,qs),
(239,593,o),
(236,584,qs),
(184,454,ls),
(180,443,o),
(168,443,qs),
(140,443,ls),
(128,443,o),
(124,454,qs),
(72,584,ls)
);
},
{
closed = 1;
nodes = (
(303,0,l),
(271,0,ls),
(193,0,o),
(149,44,q),
(104,0,o),
(26,0,qs),
(-3,0,l),
(-3,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(177,366,qs),
(186,366,ls),
(197,366,o),
(197,356,qs),
(197,178,ls),
(197,140,o),
(235,97,o),
(268,97,qs),
(303,97,l)
);
},
{
closed = 1;
nodes = (
(93,-96,o),
(93,-117,qs),
(93,-138,o),
(64,-168,o),
(43,-168,qs),
(22,-168,o),
(-7,-138,o),
(-7,-117,qs),
(-7,-96,o),
(22,-66,o),
(43,-66,qs),
(64,-66,o)
);
},
{
closed = 1;
nodes = (
(213,-96,o),
(213,-117,qs),
(213,-138,o),
(184,-168,o),
(164,-168,qs),
(142,-168,o),
(113,-138,o),
(113,-117,qs),
(113,-96,o),
(142,-66,o),
(164,-66,qs),
(184,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
11 1 0 1 34 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 98 7 1 6 6 24 6 78 52 51 40 39 18 17 58 56 51 62 52 62 46 44 39 50 40 50 37 35 33 31 30 28 25 22 17 38 18 38 36 35 49 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(625,766,qs),
(623,787,o),
(642,798,qs),
(646,801,o),
(651,802,qs),
(658,803,o),
(662,798,qs),
(672,782,o),
(674,756,qs),
(676,723,o),
(671,706,qs),
(663,674,o),
(646,667,qs),
(640,664,o),
(640,670,qs),
(640,679,o),
(640,688,qs),
(638,714,o),
(629,747,qs),
(626,757,o)
);
},
{
closed = 1;
nodes = (
(530,537,o),
(530,574,qs),
(530,583,ls),
(530,604,o),
(538,616,qs),
(548,631,o),
(569,631,qs),
(574,631,ls),
(577,631,o),
(577,627,qs),
(577,569,ls),
(577,538,o),
(601,538,qs),
(626,538,o),
(626,569,qs),
(626,583,ls),
(626,605,o),
(636,618,qs),
(646,631,o),
(664,631,qs),
(669,631,ls),
(673,631,o),
(673,627,qs),
(673,569,ls),
(673,538,o),
(697,538,qs),
(722,538,o),
(722,569,qs),
(722,583,ls),
(722,606,o),
(731,618,qs),
(742,631,o),
(760,631,qs),
(765,631,ls),
(769,631,o),
(769,627,qs),
(769,574,ls),
(769,537,o),
(731,494,o),
(698,494,qs),
(668,494,o),
(650,513,q),
(631,494,o),
(602,494,qs),
(569,494,o)
);
},
{
closed = 1;
nodes = (
(997,438,o),
(997,428,qs),
(997,178,ls),
(997,101,o),
(958,54,qs),
(913,0,o),
(827,0,qs),
(773,0,ls),
(696,0,o),
(651,44,q),
(606,0,o),
(529,0,qs),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(531,97,ls),
(602,97,o),
(602,180,qs),
(602,357,ls),
(602,438,o),
(680,438,qs),
(689,438,ls),
(700,438,o),
(700,428,qs),
(700,178,ls),
(700,140,o),
(737,97,o),
(770,97,qs),
(829,97,ls),
(863,97,o),
(900,140,o),
(900,180,qs),
(900,356,ls),
(900,438,o),
(978,438,qs),
(986,438,ls)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
54 41 28 3 3 2 22 1 0 3 111 106 2 13 8 3 76 10 6 4 2 4 2 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
54 41 28 3 3 2 22 1 0 3 111 106 2 13 16 3 76 10 6 4 2 4 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
54 41 28 3 3 2 22 1 0 3 111 106 2 14 16 3 76 10 6 4 2 4 2 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
6 4 2 2 3 3 2 112 11 9 19 3 7 0 12 0 7 12 128 0 12 0 17 8 12 17 103 1 18 2 0 0 3 97 5 1 3 3 23 77 20 16 10 3 8 8 13 98 15 14 2 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
6 4 2 2 3 2 133 11 9 19 3 7 0 12 0 7 12 128 0 12 0 17 8 12 17 103 1 18 2 0 0 3 97 5 1 3 3 23 77 20 16 10 3 8 8 13 98 15 14 2 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
6 4 2 2 3 2 133 11 9 19 3 7 0 12 0 7 12 128 0 12 0 17 8 12 17 103 1 18 2 0 0 3 97 5 1 3 3 23 77 10 1 8 8 13 98 15 14 2 13 13 24 77 20 1 16 16 13 97 15 14 2 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
6 4 2 2 3 2 133 11 9 19 3 7 0 12 0 7 12 128 0 12 0 17 8 12 17 103 1 18 2 0 0 3 97 5 1 3 3 23 77 10 1 8 8 14 98 15 1 14 14 24 77 20 1 16 16 13 97 0 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
6 4 2 2 3 2 133 11 9 19 3 7 0 12 0 7 12 128 5 1 3 1 18 2 0 7 3 0 106 0 12 0 17 8 12 17 103 10 1 8 8 14 98 15 1 14 14 24 77 20 1 16 16 13 97 0 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
6 4 2 2 3 2 133 11 9 19 3 7 0 12 0 7 12 128 5 1 3 1 18 2 0 7 3 0 106 0 12 0 17 8 12 17 103 20 1 16 0 13 16 13 101 10 1 8 8 14 98 15 1 14 14 24 14 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
123 122 66 65 21 20 129 127 122 132 123 132 115 112 110 107 105 103 97 94 92 89 86 83 80 77 73 70 65 121 66 120 58 56 52 50 45 43 39 37 32 30 25 23 20 64 21 64 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1053;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o),
(766,-96,o),
(766,-117,qs),
(766,-138,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(822,-203,o),
(822,-222,qs),
(822,-242,o),
(796,-269,o),
(776,-269,qs),
(757,-269,o),
(730,-242,o),
(730,-222,qs),
(730,-203,o),
(757,-176,o),
(776,-176,qs),
(795,-176,o)
);
},
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
128 126 2 15 1 51 1 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 5 15 0 15 5 0 128 0 19 18 1 17 1 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 18 17 1 17 18 1 128 0 5 15 0 15 5 0 128 0 19 0 17 18 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
81 80 69 68 1 0 122 120 117 115 111 109 106 103 100 97 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 23 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 33 31 26 36 27 36 24 22 20 18 12 9 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,580,o),
(223,599,qs),
(223,619,o),
(250,647,o),
(269,647,qs),
(288,647,o),
(315,619,o),
(315,599,qs),
(315,580,o),
(288,553,o),
(269,553,qs),
(250,553,o)
);
},
{
closed = 1;
nodes = (
(159,473,o),
(159,494,qs),
(159,516,o),
(188,546,o),
(209,546,qs),
(230,546,o),
(259,516,o),
(259,494,qs),
(259,473,o),
(229,443,o),
(209,443,qs),
(188,443,o)
);
},
{
closed = 1;
nodes = (
(308,546,o),
(329,546,qs),
(350,546,o),
(379,516,o),
(379,494,qs),
(379,473,o),
(350,443,o),
(329,443,qs),
(308,443,o),
(279,473,o),
(279,494,qs),
(279,516,o)
);
},
{
closed = 1;
nodes = (
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,4,o),
(145,63,q),
(88,114,o),
(87,194,qs),
(87,272,o),
(136,325,qs),
(191,384,o),
(278,384,qs),
(337,384,o),
(415,330,o),
(416,288,qs),
(416,263,o),
(400,263,qs),
(394,263,o),
(386,268,qs),
(343,293,o),
(292,293,qs),
(244,293,o),
(187,238,o),
(187,193,qs),
(186,152,o),
(238,97,o),
(278,97,qs),
(386,97,ls),
(423,97,o),
(469,57,o),
(469,25,qs),
(469,17,ls),
(469,6,o),
(462,0,o),
(451,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
80 1 7 8 1 76 0 10 9 8 9 10 8 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 11 3 2 105 0 11 0 9 10 11 9 105 0 8 0 7 6 8 7 103 0 6 12 12 6 89 0 6 6 12 97 0 12 6 12 81 13 12 1 0 87 85 75 73 70 68 66 64 60 57 52 49 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(262,580,o),
(262,599,qs),
(262,619,o),
(289,647,o),
(308,647,qs),
(327,647,o),
(354,619,o),
(354,599,qs),
(354,580,o),
(327,553,o),
(308,553,qs),
(289,553,o)
);
},
{
closed = 1;
nodes = (
(198,473,o),
(198,494,qs),
(198,516,o),
(227,546,o),
(247,546,qs),
(269,546,o),
(298,516,o),
(298,494,qs),
(298,473,o),
(268,443,o),
(247,443,qs),
(227,443,o)
);
},
{
closed = 1;
nodes = (
(347,546,o),
(368,546,qs),
(389,546,o),
(418,516,o),
(418,494,qs),
(418,473,o),
(389,443,o),
(368,443,qs),
(347,443,o),
(318,473,o),
(318,494,qs),
(318,516,o)
);
},
{
closed = 1;
nodes = (
(185,-36,qs),
(152,-70,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-48,o),
(83,4,qs),
(124,67,o),
(202,87,q),
(121,193,ls),
(102,217,o),
(101,253,qs),
(100,305,o),
(158,343,qs),
(222,384,o),
(308,384,qs),
(382,385,o),
(442,353,qs),
(516,313,o),
(515,253,qs),
(514,218,o),
(495,193,qs),
(421,97,l),
(612,97,l),
(612,0,l),
(381,0,ls),
(335,0,o),
(309,18,q),
(291,3,o),
(263,-1,qs),
(215,-5,o)
);
},
{
closed = 1;
nodes = (
(216,261,o),
(216,238,qs),
(216,226,o),
(230,208,qs),
(303,112,ls),
(308,105,o),
(313,112,qs),
(386,208,ls),
(400,226,o),
(400,238,qs),
(400,261,o),
(347,293,o),
(308,293,qs),
(269,293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
57 38 2 6 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 8 3 2 105 0 8 14 1 11 7 8 11 105 0 7 0 6 10 7 6 103 0 10 9 9 10 89 0 10 10 9 97 0 9 10 9 81 86 85 13 12 1 0 85 98 86 98 78 76 66 64 51 49 43 42 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,579,o),
(221,598,qs),
(221,618,o),
(248,646,o),
(267,646,qs),
(287,646,o),
(314,618,o),
(314,598,qs),
(314,579,o),
(286,552,o),
(267,552,qs),
(248,552,o)
);
},
{
closed = 1;
nodes = (
(157,472,o),
(157,493,qs),
(157,515,o),
(186,544,o),
(207,544,qs),
(228,544,o),
(257,515,o),
(257,493,qs),
(257,472,o),
(228,442,o),
(207,442,qs),
(186,442,o)
);
},
{
closed = 1;
nodes = (
(306,544,o),
(327,544,qs),
(348,544,o),
(377,515,o),
(377,493,qs),
(377,472,o),
(348,442,o),
(327,442,qs),
(307,442,o),
(277,472,o),
(277,493,qs),
(277,515,o)
);
},
{
closed = 1;
nodes = (
(426,97,o),
(472,57,o),
(472,25,qs),
(472,17,ls),
(472,6,o),
(465,0,o),
(454,0,qs),
(-2,0,l),
(-2,97,l),
(120,97,l),
(91,141,o),
(90,194,qs),
(90,272,o),
(139,325,qs),
(194,384,o),
(280,384,qs),
(340,384,o),
(418,330,o),
(419,288,qs),
(419,263,o),
(403,263,qs),
(397,263,o),
(388,268,qs),
(345,293,o),
(295,293,qs),
(247,293,o),
(190,238,o),
(189,193,qs),
(189,151,o),
(241,97,o),
(281,97,qs),
(388,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 61 59 58 57 52 50 47 45 43 41 36 67 37 66 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 515;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,579,o),
(249,598,qs),
(249,618,o),
(276,646,o),
(295,646,qs),
(314,646,o),
(341,618,o),
(341,598,qs),
(341,579,o),
(314,552,o),
(295,552,qs),
(276,552,o)
);
},
{
closed = 1;
nodes = (
(185,472,o),
(185,493,qs),
(185,515,o),
(214,544,o),
(235,544,qs),
(256,544,o),
(285,515,o),
(285,493,qs),
(285,472,o),
(256,442,o),
(235,442,qs),
(214,442,o)
);
},
{
closed = 1;
nodes = (
(305,472,o),
(305,493,qs),
(305,515,o),
(334,544,o),
(355,544,qs),
(376,544,o),
(405,515,o),
(405,493,qs),
(405,472,o),
(376,442,o),
(355,442,qs),
(334,442,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(182,97,l),
(109,193,ls),
(89,218,o),
(89,253,qs),
(87,305,o),
(146,343,qs),
(209,384,o),
(295,384,qs),
(369,385,o),
(429,353,qs),
(503,313,o),
(502,253,qs),
(501,218,o),
(481,193,qs),
(408,97,l),
(599,97,l),
(599,0,l),
(369,0,ls),
(322,0,o),
(295,18,q),
(268,0,o),
(221,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(295,105,o),
(300,112,qs),
(374,208,ls),
(387,225,o),
(387,238,qs),
(387,261,o),
(334,293,o),
(295,293,qs),
(256,293,o),
(203,261,o),
(203,238,qs),
(203,225,o),
(216,208,qs),
(290,112,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
38 1 6 8 1 76 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 9 3 2 105 0 9 0 11 8 9 11 105 10 1 8 6 6 8 87 10 1 8 8 6 95 7 15 2 6 8 6 79 37 36 25 24 13 12 1 0 66 64 58 57 51 49 43 42 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,17,qs),
(56,473,ls),
(56,541,o),
(104,552,qs),
(120,556,o),
(145,556,qs),
(231,556,o),
(280,499,q),
(283,497,o),
(286,500,q),
(326,556,o),
(409,556,qs),
(462,556,ls),
(472,556,o),
(472,546,qs),
(472,538,ls),
(472,479,o),
(422,469,qs),
(419,468,o),
(406,467,qs),
(399,466,o),
(397,466,qs),
(364,460,o),
(321,418,o),
(299,369,qs),
(292,356,o),
(284,356,qs),
(277,356,o),
(270,369,qs),
(246,420,o),
(208,458,o),
(177,462,qs),
(172,463,o),
(163,464,qs),
(158,464,o),
(157,464,qs),
(153,464,o),
(153,460,qs),
(153,17,ls),
(153,0,o),
(136,0,qs),
(73,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
33 1 1 3 3 1 2 1 2 76 0 2 1 0 1 2 0 128 0 1 1 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 36 34 30 27 15 13 8 5 0 42 1 41 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,556,o),
(421,556,qs),
(428,556,o),
(430,546,qs),
(438,511,o),
(422,444,o),
(402,430,qs),
(212,285,l),
(147,229,o),
(147,176,qs),
(147,139,o),
(197,92,o),
(236,92,qs),
(499,92,ls),
(535,92,o),
(579,54,o),
(579,24,qs),
(579,17,ls),
(579,6,o),
(572,0,o),
(561,0,qs),
(229,0,ls),
(157,0,o),
(108,37,qs),
(48,83,o),
(48,170,qs),
(48,232,o),
(83,284,qs),
(114,329,o),
(186,383,qs),
(409,550,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 25 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,290,o),
(12,301,qs),
(12,364,ls),
(12,376,o),
(22,376,qs),
(79,376,l),
(79,424,ls),
(79,488,o),
(106,523,qs),
(135,561,o),
(190,561,qs),
(233,561,o),
(290,512,o),
(290,476,qs),
(290,459,o),
(280,459,qs),
(274,459,o),
(270,461,qs),
(239,479,o),
(219,479,qs),
(174,479,o),
(174,418,qs),
(174,376,l),
(266,376,ls),
(278,376,o),
(278,364,qs),
(278,301,ls),
(278,290,o),
(266,290,qs),
(174,290,l),
(174,11,ls),
(174,0,o),
(163,0,qs),
(90,0,ls),
(79,0,o),
(79,11,qs),
(79,290,l),
(22,290,ls)
);
},
{
closed = 1;
nodes = (
(354,11,qs),
(354,364,ls),
(354,376,o),
(364,376,qs),
(369,376,ls),
(449,376,o),
(449,291,qs),
(449,11,ls),
(449,0,o),
(438,0,qs),
(364,0,ls),
(354,0,o)
);
},
{
closed = 1;
nodes = (
(378,529,o),
(401,529,qs),
(424,529,o),
(455,497,o),
(455,474,qs),
(455,451,o),
(424,419,o),
(401,419,qs),
(378,419,o),
(347,451,o),
(347,474,qs),
(347,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 4 3 10 3 4 10 128 0 11 0 10 2 11 10 105 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 9 6 2 2 2 42 77 13 8 2 0 0 40 0 78 40 38 0 0 60 58 54 52 46 43 38 49 40 49 0 37 0 36 36 35 19 34 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,290,o),
(12,301,qs),
(12,364,ls),
(12,376,o),
(22,376,qs),
(79,376,l),
(79,424,ls),
(79,488,o),
(106,523,qs),
(135,561,o),
(190,561,qs),
(233,561,o),
(290,512,o),
(290,476,qs),
(290,459,o),
(280,459,qs),
(274,459,o),
(270,461,qs),
(239,479,o),
(219,479,qs),
(174,479,o),
(174,418,qs),
(174,376,l),
(266,376,ls),
(278,376,o),
(278,364,qs),
(278,301,ls),
(278,290,o),
(266,290,qs),
(174,290,l),
(174,11,ls),
(174,0,o),
(163,0,qs),
(90,0,ls),
(79,0,o),
(79,11,qs),
(79,290,l),
(22,290,ls)
);
},
{
closed = 1;
nodes = (
(535,98,qs),
(539,101,o),
(541,101,qs),
(553,101,o),
(553,87,qs),
(553,44,o),
(500,-8,o),
(456,-8,qs),
(354,-8,o),
(354,119,qs),
(354,544,ls),
(354,556,o),
(364,556,qs),
(369,556,ls),
(449,556,o),
(449,472,qs),
(449,128,ls),
(449,76,o),
(487,76,qs),
(511,76,o),
(531,96,q),
(533,96,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 2 3 4 2 128 0 11 1 8 1 11 8 128 0 3 3 5 97 9 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 8 8 0 98 10 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 3 2 3 4 2 128 0 11 1 8 1 11 8 128 0 3 3 5 97 9 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 8 8 10 98 0 10 10 46 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 4 3 2 3 4 2 128 0 11 1 8 1 11 8 128 0 9 9 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 8 8 10 98 0 10 10 46 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 56 55 52 50 47 44 41 39 0 37 0 36 36 35 19 34 35 34 50 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 552;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,641,qs),
(82,642,o),
(79,643,qs),
(53,653,o),
(43,653,qs),
(27,653,o),
(15,631,q),
(10,624,o),
(6,624,qs),
(4,624,o),
(1,627,q),
(-7,641,o),
(-7,656,qs),
(-7,675,o),
(17,698,o),
(37,698,qs),
(45,698,o),
(58,695,qs),
(64,694,o),
(65,693,q),
(71,693,o),
(74,697,qs),
(101,733,o),
(130,754,o),
(155,754,qs),
(182,754,o),
(216,720,o),
(216,693,qs),
(216,665,o),
(173,626,o),
(143,626,qs),
(122,626,o)
);
},
{
closed = 1;
nodes = (
(114,679,q),
(129,672,o),
(141,672,qs),
(154,672,o),
(172,687,o),
(172,698,qs),
(172,713,o),
(154,713,qs),
(138,713,o)
);
},
{
closed = 1;
nodes = (
(258,0,l),
(225,0,ls),
(150,0,o),
(105,42,qs),
(55,89,o),
(55,178,qs),
(55,474,ls),
(55,556,o),
(132,556,qs),
(141,556,ls),
(152,556,o),
(152,546,qs),
(152,180,ls),
(152,97,o),
(223,97,qs),
(258,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
39 1 5 2 22 1 7 0 2 76 0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 5 9 1 0 7 5 0 105 0 7 7 23 77 11 1 6 6 8 97 0 8 8 24 8 78 42 41 33 32 1 0 55 53 48 45 41 56 42 56 38 36 32 40 33 40 27 25 16 14 7 5 0 31 1 31 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,qs),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
},
{
closed = 1;
nodes = (
(339,-168,o),
(319,-168,qs),
(298,-168,o),
(269,-138,o),
(269,-117,qs),
(269,-96,o),
(298,-66,o),
(319,-66,qs),
(340,-66,o),
(369,-96,o),
(369,-117,qs),
(369,-138,o)
);
},
{
closed = 1;
nodes = (
(489,-96,o),
(489,-117,qs),
(489,-138,o),
(460,-168,o),
(439,-168,qs),
(418,-168,o),
(389,-138,o),
(389,-117,qs),
(389,-96,o),
(418,-66,o),
(439,-66,qs),
(460,-66,o)
);
},
{
closed = 1;
nodes = (
(425,-203,o),
(425,-222,qs),
(425,-242,o),
(398,-269,o),
(379,-269,qs),
(359,-269,o),
(332,-242,o),
(332,-222,qs),
(332,-203,o),
(359,-176,o),
(379,-176,qs),
(397,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
34 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 98 5 1 4 4 24 4 78 64 63 52 51 1 0 70 68 63 74 64 74 58 56 51 62 52 62 49 47 43 41 37 35 33 30 22 21 14 11 8 5 0 38 1 38 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(84,-96,o),
(84,-117,qs),
(84,-138,o),
(55,-168,o),
(34,-168,qs),
(13,-168,o),
(-16,-138,o),
(-16,-117,qs),
(-16,-96,o),
(13,-66,o),
(34,-66,qs),
(55,-66,o)
);
},
{
closed = 1;
nodes = (
(204,-96,o),
(204,-117,qs),
(204,-138,o),
(175,-168,o),
(155,-168,qs),
(133,-168,o),
(104,-138,o),
(104,-117,qs),
(104,-96,o),
(133,-66,o),
(155,-66,qs),
(175,-66,o)
);
},
{
closed = 1;
nodes = (
(140,-203,o),
(140,-222,qs),
(140,-242,o),
(113,-269,o),
(94,-269,qs),
(75,-269,o),
(48,-242,o),
(48,-222,qs),
(48,-203,o),
(75,-176,o),
(94,-176,qs),
(113,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 105 12 1 7 0 8 7 8 101 0 2 2 0 98 9 1 0 0 24 0 78 41 40 29 28 17 16 1 0 47 45 40 51 41 51 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(235,97,o),
(268,97,qs),
(303,97,l)
);
},
{
closed = 1;
nodes = (
(65,-168,o),
(44,-168,qs),
(23,-168,o),
(-6,-138,o),
(-6,-117,qs),
(-6,-96,o),
(23,-66,o),
(44,-66,qs),
(65,-66,o),
(94,-96,o),
(94,-117,qs),
(94,-138,o)
);
},
{
closed = 1;
nodes = (
(214,-96,o),
(214,-117,qs),
(214,-138,o),
(185,-168,o),
(165,-168,qs),
(143,-168,o),
(114,-138,o),
(114,-117,qs),
(114,-96,o),
(143,-66,o),
(165,-66,qs),
(185,-66,o)
);
},
{
closed = 1;
nodes = (
(150,-203,o),
(150,-222,qs),
(150,-242,o),
(123,-269,o),
(104,-269,qs),
(85,-269,o),
(58,-242,o),
(58,-222,qs),
(58,-203,o),
(85,-176,o),
(104,-176,qs),
(123,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
17 1 3 0 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 98 4 1 3 3 24 3 78 47 46 35 34 1 0 53 51 46 57 47 57 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 5 0 21 1 21 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,388,o),
(290,393,qs),
(290,399,ls),
(291,434,o),
(335,434,qs),
(337,434,l),
(337,564,ls),
(337,590,o),
(351,604,qs),
(361,614,o),
(377,614,qs),
(381,614,ls),
(386,614,o),
(386,609,qs),
(386,553,l),
(422,553,ls),
(464,553,o),
(511,509,o),
(511,471,qs),
(511,432,o),
(464,388,o),
(422,388,qs),
(296,388,ls)
);
},
{
closed = 1;
nodes = (
(386,434,l),
(425,434,ls),
(440,434,o),
(460,455,o),
(460,471,qs),
(460,486,o),
(440,507,o),
(425,507,qs),
(386,507,l)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
8 1 1 2 67 1 10 6 2 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 5 1 3 12 1 0 7 3 0 104 13 1 4 4 1 97 0 1 1 23 77 8 14 2 6 6 10 98 11 1 10 10 24 10 78 33 32 24 23 1 0 70 68 66 63 54 53 46 43 40 37 32 71 33 71 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,610,o),
(256,566,o),
(256,527,qs),
(256,488,o),
(209,444,o),
(167,444,qs),
(41,444,ls),
(35,444,o),
(35,450,qs),
(35,456,ls),
(36,491,o),
(80,491,qs),
(83,491,l),
(83,621,ls),
(83,646,o),
(96,661,qs),
(106,671,o),
(122,671,qs),
(126,671,ls),
(132,671,o),
(132,666,qs),
(132,610,l),
(167,610,ls)
);
},
{
closed = 1;
nodes = (
(186,491,o),
(206,511,o),
(206,527,qs),
(206,543,o),
(186,563,o),
(170,563,qs),
(132,563,l),
(132,491,l),
(170,491,ls)
);
},
{
closed = 1;
nodes = (
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
1 1 3 0 1 76 0 0 3 0 133 11 1 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 98 0 8 8 24 8 78 33 32 23 23 0 0 41 39 38 36 32 47 33 46 23 31 23 30 26 24 0 22 0 21 51 36 35 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,444,o),
(35,450,qs),
(35,456,ls),
(36,491,o),
(80,491,qs),
(83,491,l),
(83,621,ls),
(83,646,o),
(96,661,qs),
(106,671,o),
(122,671,qs),
(126,671,ls),
(132,671,o),
(132,666,qs),
(132,610,l),
(167,610,ls),
(209,610,o),
(256,566,o),
(256,527,qs),
(256,488,o),
(209,444,o),
(167,444,qs),
(41,444,ls)
);
},
{
closed = 1;
nodes = (
(132,491,l),
(170,491,ls),
(186,491,o),
(206,511,o),
(206,527,qs),
(206,543,o),
(186,563,o),
(170,563,qs),
(132,563,l)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
8 1 1 2 49 1 9 6 2 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 98 10 1 9 9 24 9 78 33 32 24 23 1 0 52 50 48 46 45 43 40 37 32 53 33 53 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,580,o),
(589,599,qs),
(589,619,o),
(616,647,o),
(635,647,qs),
(654,647,o),
(681,619,o),
(681,599,qs),
(681,580,o),
(654,553,o),
(635,553,qs),
(616,553,o)
);
},
{
closed = 1;
nodes = (
(525,473,o),
(525,494,qs),
(525,516,o),
(554,546,o),
(575,546,qs),
(596,546,o),
(625,516,o),
(625,494,qs),
(625,473,o),
(596,443,o),
(575,443,qs),
(554,443,o)
);
},
{
closed = 1;
nodes = (
(674,546,o),
(695,546,qs),
(716,546,o),
(745,516,o),
(745,494,qs),
(745,473,o),
(716,443,o),
(695,443,qs),
(674,443,o),
(645,473,o),
(645,494,qs),
(645,516,o)
);
},
{
closed = 1;
nodes = (
(914,0,l),
(716,0,ls),
(659,0,o),
(634,21,q),
(608,0,o),
(551,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(494,97,l),
(455,141,o),
(455,204,qs),
(454,272,o),
(497,322,qs),
(548,384,o),
(634,384,qs),
(708,384,o),
(758,336,qs),
(813,283,o),
(812,204,qs),
(812,141,o),
(773,97,q),
(914,97,l)
);
},
{
closed = 1;
nodes = (
(712,173,o),
(712,206,qs),
(711,244,o),
(667,293,o),
(634,293,qs),
(600,293,o),
(556,244,o),
(555,206,qs),
(555,173,o),
(600,114,o),
(634,103,q),
(667,114,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
71 1 9 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 12 6 8 12 128 0 1 13 1 0 3 1 0 105 0 6 0 12 7 6 12 105 4 14 2 2 2 3 97 5 1 3 3 23 77 15 11 2 7 7 9 96 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 6 12 6 8 12 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 7 6 12 105 15 11 2 7 7 9 96 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
36 36 13 12 1 0 83 81 36 75 36 75 74 72 70 67 58 57 50 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,580,o),
(220,599,qs),
(220,619,o),
(247,647,o),
(266,647,qs),
(286,647,o),
(312,619,o),
(312,599,qs),
(312,580,o),
(285,553,o),
(266,553,qs),
(247,553,o)
);
},
{
closed = 1;
nodes = (
(156,473,o),
(156,494,qs),
(156,516,o),
(185,546,o),
(206,546,qs),
(227,546,o),
(256,516,o),
(256,494,qs),
(256,473,o),
(227,443,o),
(206,443,qs),
(185,443,o)
);
},
{
closed = 1;
nodes = (
(305,546,o),
(326,546,qs),
(347,546,o),
(376,516,o),
(376,494,qs),
(376,473,o),
(347,443,o),
(326,443,qs),
(306,443,o),
(276,473,o),
(276,494,qs),
(276,516,o)
);
},
{
closed = 1;
nodes = (
(386,338,qs),
(444,284,o),
(444,192,qs),
(444,113,o),
(400,60,qs),
(350,1,o),
(269,0,qs),
(-2,0,l),
(-2,97,l),
(112,97,l),
(89,134,o),
(88,192,qs),
(88,272,o),
(133,325,qs),
(183,384,o),
(266,384,qs),
(337,384,o)
);
},
{
closed = 1;
nodes = (
(344,152,o),
(344,194,qs),
(344,237,o),
(300,293,o),
(266,293,qs),
(233,293,o),
(188,236,o),
(188,194,qs),
(188,153,o),
(233,97,o),
(266,97,qs),
(300,97,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 11 1 0 3 1 0 105 13 1 6 0 10 7 6 10 105 4 12 2 2 2 3 97 5 1 3 3 23 77 14 9 2 7 7 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 13 1 6 0 10 7 6 10 105 14 9 2 7 7 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
54 53 37 36 13 12 1 0 60 58 53 64 54 64 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,581,o),
(221,600,qs),
(221,620,o),
(248,647,o),
(267,647,qs),
(286,647,o),
(313,620,o),
(313,600,qs),
(313,581,o),
(286,553,o),
(267,553,qs),
(248,553,o)
);
},
{
closed = 1;
nodes = (
(157,474,o),
(157,495,qs),
(157,516,o),
(186,546,o),
(206,546,qs),
(227,546,o),
(257,516,o),
(257,495,qs),
(257,474,o),
(227,444,o),
(206,444,qs),
(186,444,o)
);
},
{
closed = 1;
nodes = (
(306,546,o),
(327,546,qs),
(348,546,o),
(377,517,o),
(377,495,qs),
(377,474,o),
(348,444,o),
(327,444,qs),
(306,444,o),
(277,474,o),
(277,495,qs),
(277,516,o)
);
},
{
closed = 1;
nodes = (
(546,0,l),
(347,0,ls),
(290,0,o),
(265,21,q),
(240,0,o),
(183,0,qs),
(-2,0,l),
(-2,97,l),
(126,97,l),
(86,141,o),
(86,204,qs),
(86,272,o),
(128,322,qs),
(180,384,o),
(265,384,qs),
(339,384,o),
(390,336,qs),
(445,283,o),
(444,204,qs),
(444,141,o),
(405,97,q),
(546,97,l)
);
},
{
closed = 1;
nodes = (
(344,173,o),
(344,206,qs),
(343,244,o),
(299,293,o),
(265,293,qs),
(231,293,o),
(187,244,o),
(187,206,qs),
(187,173,o),
(232,114,o),
(265,103,q),
(299,114,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 12 1 0 3 1 0 105 0 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 14 10 2 7 7 8 95 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
36 36 13 12 1 0 65 63 36 57 36 57 56 54 52 50 49 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,0,l),
(566,0,ls),
(497,0,o),
(455,34,q),
(405,0,o),
(320,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(457,-196,o),
(462,-200,q),
(472,-203,o),
(468,-218,qs),
(456,-277,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(330,97,ls),
(375,97,o),
(403,116,q),
(391,139,o),
(370,201,qs),
(336,293,o),
(257,293,qs),
(196,293,o),
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(414,384,o),
(472,215,qs),
(492,155,o),
(510,118,o),
(525,108,qs),
(541,97,o),
(567,97,qs),
(589,97,l)
);
},
{
closed = 1;
nodes = (
(293,-122,o),
(280,-122,qs),
(266,-122,o),
(248,-104,o),
(248,-91,qs),
(248,-77,o),
(267,-59,o),
(280,-59,qs),
(293,-59,o),
(311,-77,o),
(311,-91,qs),
(311,-104,o)
);
},
{
closed = 1;
nodes = (
(368,-123,o),
(355,-123,qs),
(341,-123,o),
(323,-105,o),
(323,-91,qs),
(323,-78,o),
(342,-59,o),
(355,-59,qs),
(367,-59,o),
(386,-78,o),
(386,-91,qs),
(386,-104,o)
);
},
{
closed = 1;
nodes = (
(286,-172,o),
(286,-159,qs),
(286,-146,o),
(305,-127,o),
(318,-127,qs),
(331,-127,o),
(350,-146,o),
(350,-159,qs),
(350,-172,o),
(332,-191,o),
(318,-191,qs),
(305,-191,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
22 1 0 2 56 1 6 0 2 76 0 1 0 2 0 1 2 105 10 1 8 11 1 9 13 8 9 105 0 13 15 1 12 5 13 12 105 0 5 0 4 5 4 101 3 14 2 0 0 6 97 7 1 6 6 24 6 78 86 85 1 0 92 90 85 96 86 96 83 81 77 75 71 69 65 63 59 57 55 52 46 44 34 32 26 23 19 17 8 6 0 60 1 60 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(385,97,l),
(369,113,o),
(341,194,qs),
(304,293,o),
(225,293,qs),
(164,293,o),
(106,242,qs),
(97,233,o),
(87,234,qs),
(75,235,o),
(75,247,qs),
(75,271,o),
(108,332,o),
(133,350,qs),
(179,384,o),
(240,384,qs),
(385,384,o),
(442,211,qs),
(464,137,o),
(486,112,qs),
(498,99,o),
(518,97,qs),
(530,96,o),
(530,86,qs),
(530,46,o),
(481,0,o),
(440,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(225,-96,o),
(225,-117,qs),
(225,-138,o),
(196,-168,o),
(175,-168,qs),
(154,-168,o),
(125,-138,o),
(125,-117,qs),
(125,-96,o),
(154,-66,o),
(175,-66,qs),
(196,-66,o)
);
},
{
closed = 1;
nodes = (
(345,-96,o),
(345,-117,qs),
(345,-138,o),
(316,-168,o),
(295,-168,qs),
(274,-168,o),
(245,-138,o),
(245,-117,qs),
(245,-96,o),
(274,-66,o),
(295,-66,qs),
(316,-66,o)
);
},
{
closed = 1;
nodes = (
(281,-203,o),
(281,-222,qs),
(281,-242,o),
(254,-269,o),
(235,-269,qs),
(215,-269,o),
(189,-242,o),
(189,-222,qs),
(189,-203,o),
(216,-176,o),
(235,-176,qs),
(254,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 0 2 3 1 2 105 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 0 3 3 0 95 10 1 0 0 24 0 78 54 53 42 41 30 29 1 0 60 58 53 64 54 64 48 46 41 52 42 52 36 34 29 40 30 40 27 26 23 21 12 10 0 28 1 28 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(535,0,ls),
(466,0,o),
(424,34,q),
(374,0,o),
(289,0,qs),
(-1,0,l),
(-2,97,l),
(299,97,ls),
(344,97,o),
(372,116,q),
(360,139,o),
(339,201,qs),
(305,293,o),
(226,293,qs),
(165,293,o),
(107,242,qs),
(98,233,o),
(89,234,qs),
(76,235,o),
(76,247,qs),
(76,271,o),
(110,332,o),
(134,350,qs),
(180,384,o),
(241,384,qs),
(383,384,o),
(441,215,qs),
(461,155,o),
(479,118,o),
(494,108,qs),
(510,97,o),
(536,97,qs),
(557,97,l)
);
},
{
closed = 1;
nodes = (
(196,-168,o),
(175,-168,qs),
(154,-168,o),
(125,-138,o),
(125,-117,qs),
(125,-96,o),
(154,-66,o),
(175,-66,qs),
(196,-66,o),
(225,-96,o),
(225,-117,qs),
(225,-138,o)
);
},
{
closed = 1;
nodes = (
(345,-96,o),
(345,-117,qs),
(345,-138,o),
(316,-168,o),
(295,-168,qs),
(274,-168,o),
(245,-138,o),
(245,-117,qs),
(245,-96,o),
(274,-66,o),
(295,-66,qs),
(316,-66,o)
);
},
{
closed = 1;
nodes = (
(281,-203,o),
(281,-222,qs),
(281,-242,o),
(254,-269,o),
(235,-269,qs),
(215,-269,o),
(189,-242,o),
(189,-222,qs),
(189,-203,o),
(216,-176,o),
(235,-176,qs),
(254,-176,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
22 1 0 2 29 1 4 0 2 76 0 1 0 2 0 1 2 105 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 3 12 2 0 0 4 97 5 1 4 4 24 4 78 59 58 47 46 1 0 65 63 58 69 59 69 53 51 46 57 47 57 44 42 38 36 32 30 28 26 25 23 19 17 8 6 0 33 1 33 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,465,o),
(100,471,qs),
(100,476,ls),
(101,512,o),
(145,512,qs),
(147,512,l),
(147,641,ls),
(147,667,o),
(161,681,qs),
(171,691,o),
(187,691,qs),
(191,691,ls),
(196,691,o),
(196,686,qs),
(196,631,l),
(232,631,ls),
(274,631,o),
(321,587,o),
(321,548,qs),
(321,509,o),
(274,465,o),
(232,465,qs),
(106,465,ls)
);
},
{
closed = 1;
nodes = (
(196,512,l),
(235,512,ls),
(250,512,o),
(270,532,o),
(270,548,qs),
(270,564,o),
(250,584,o),
(235,584,qs),
(196,584,l)
);
},
{
closed = 1;
nodes = (
(482,0,l),
(450,0,ls),
(366,0,o),
(322,49,q),
(272,0,o),
(201,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o),
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,176,ls),
(378,97,o),
(447,97,qs),
(482,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 68 1 11 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 2 133 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 9 1 8 6 7 8 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 2 133 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 9 1 8 6 7 8 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
33 32 24 23 1 0 71 69 67 64 59 56 52 50 45 44 40 38 32 72 33 72 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,563,o),
(116,583,qs),
(116,603,o),
(143,630,o),
(162,630,qs),
(181,630,o),
(208,602,o),
(208,583,qs),
(208,564,o),
(181,536,o),
(162,536,qs),
(143,536,o)
);
},
{
closed = 1;
nodes = (
(52,457,o),
(52,478,qs),
(52,499,o),
(81,529,o),
(101,529,qs),
(123,529,o),
(152,499,o),
(152,478,qs),
(152,457,o),
(122,427,o),
(101,427,qs),
(81,427,o)
);
},
{
closed = 1;
nodes = (
(201,529,o),
(222,529,qs),
(243,529,o),
(272,499,o),
(272,478,qs),
(272,456,o),
(243,427,o),
(222,427,qs),
(201,427,o),
(172,456,o),
(172,478,qs),
(172,499,o)
);
},
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
64 1 11 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 2 6 2 7 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 9 1 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 13 12 1 0 67 65 61 59 55 53 49 47 44 41 36 68 37 68 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,444,o),
(50,450,qs),
(50,456,ls),
(51,491,o),
(95,491,qs),
(98,491,l),
(98,621,ls),
(98,646,o),
(111,661,qs),
(121,671,o),
(138,671,qs),
(141,671,ls),
(147,671,o),
(147,666,qs),
(147,610,l),
(183,610,ls),
(224,610,o),
(271,566,o),
(271,527,qs),
(271,488,o),
(224,444,o),
(183,444,qs),
(56,444,ls)
);
},
{
closed = 1;
nodes = (
(147,491,l),
(185,491,ls),
(201,491,o),
(221,511,o),
(221,527,qs),
(221,543,o),
(201,563,o),
(185,563,qs),
(147,563,l)
);
},
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 60 1 11 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 9 1 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 0 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
33 32 24 23 1 0 63 61 57 55 51 49 45 43 40 37 32 64 33 64 30 28 23 31 24 31 18 16 12 10 7 5 0 22 1 21 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(816,0,l),
(784,0,ls),
(702,0,o),
(657,48,q),
(607,0,o),
(536,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(567,97,o),
(610,146,o),
(610,186,qs),
(610,224,o),
(566,274,o),
(532,274,qs),
(341,274,ls),
(279,274,o),
(279,324,qs),
(279,346,ls),
(279,382,o),
(301,396,qs),
(542,553,l),
(543,553,l),
(550,557,o),
(553,555,qs),
(565,547,o),
(571,531,q),
(595,489,o),
(550,461,qs),
(404,366,l),
(536,366,ls),
(603,366,o),
(650,324,qs),
(709,273,o),
(710,182,qs),
(710,176,ls),
(712,97,o),
(781,97,qs),
(816,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
52 1 5 0 1 76 13 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 1 0 55 53 51 48 39 38 31 28 24 21 8 6 0 56 1 56 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 807;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,366,o),
(453,323,qs),
(512,271,o),
(512,179,qs),
(512,104,o),
(466,54,qs),
(415,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(369,97,o),
(412,146,o),
(412,186,qs),
(412,224,o),
(368,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(397,489,o),
(352,461,qs),
(206,366,l),
(338,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 3 74 4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 31 0 30 33 36 60 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(619,0,l),
(586,0,ls),
(504,0,o),
(460,48,q),
(409,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(369,97,o),
(412,146,o),
(412,186,qs),
(412,224,o),
(368,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(397,489,o),
(352,461,qs),
(206,366,l),
(338,366,ls),
(405,366,o),
(453,324,qs),
(512,273,o),
(512,182,qs),
(512,176,ls),
(514,97,o),
(583,97,qs),
(619,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
33 1 4 0 1 76 13 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 36 34 32 30 29 27 23 20 8 6 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,485,o),
(277,507,q),
(277,528,ls),
(277,544,o),
(298,557,qs),
(476,675,ls),
(483,679,o),
(487,674,q),
(500,662,o),
(500,646,qs),
(500,629,o),
(477,613,qs),
(302,500,ls)
);
},
{
closed = 1;
nodes = (
(816,0,l),
(772,0,ls),
(701,0,o),
(661,48,q),
(612,0,o),
(536,0,qs),
(235,0,ls),
(157,0,o),
(107,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(144,304,o),
(146,304,q),
(154,308,o),
(158,308,qs),
(172,308,o),
(172,295,qs),
(172,288,o),
(166,279,qs),
(132,234,o),
(132,189,qs),
(132,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(569,97,o),
(610,144,o),
(610,186,qs),
(610,227,o),
(568,274,o),
(532,274,qs),
(342,274,ls),
(279,274,o),
(279,324,qs),
(279,346,ls),
(279,381,o),
(302,396,qs),
(542,553,ls),
(549,558,o),
(554,555,qs),
(566,546,o),
(571,531,q),
(594,491,o),
(550,463,qs),
(404,366,l),
(536,366,ls),
(605,366,o),
(651,326,qs),
(710,275,o),
(710,179,qs),
(710,176,l),
(710,175,ls),
(714,97,o),
(780,97,qs),
(816,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
66 1 5 0 1 76 10 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 14 13 69 67 65 62 52 51 44 41 37 34 22 20 13 70 14 70 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 807;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,485,o),
(80,507,qs),
(80,528,ls),
(80,544,o),
(100,557,qs),
(279,675,ls),
(285,679,o),
(289,674,q),
(302,662,o),
(302,646,qs),
(302,629,o),
(279,613,qs),
(105,500,ls)
);
},
{
closed = 1;
nodes = (
(407,366,o),
(453,326,qs),
(512,275,o),
(512,179,qs),
(512,100,o),
(466,51,qs),
(417,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(371,97,o),
(412,144,o),
(412,186,qs),
(412,226,o),
(370,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(396,490,o),
(352,463,qs),
(206,366,l),
(338,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
18 10 2 3 74 4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 13 13 13 44 13 43 37 35 34 32 28 25 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,485,o),
(80,507,qs),
(80,528,ls),
(80,544,o),
(100,557,qs),
(279,675,ls),
(285,679,o),
(289,674,q),
(302,662,o),
(302,646,qs),
(302,629,o),
(279,613,qs),
(105,500,ls)
);
},
{
closed = 1;
nodes = (
(618,0,l),
(575,0,ls),
(504,0,o),
(463,48,q),
(414,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(371,97,o),
(412,144,o),
(412,186,qs),
(412,226,o),
(370,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(396,490,o),
(352,463,qs),
(206,366,l),
(338,366,ls),
(407,366,o),
(453,326,qs),
(512,275,o),
(512,179,qs),
(512,176,l),
(512,175,ls),
(516,97,o),
(582,97,qs),
(618,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
47 1 4 0 1 76 27 10 2 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 14 13 50 48 46 44 43 41 37 34 22 20 13 51 14 51 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(665,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,284,ls),
(466,366,o),
(544,366,qs),
(552,366,ls),
(563,366,o),
(563,356,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(665,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
37 1 5 0 1 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 40 38 34 32 25 23 15 13 8 5 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 656;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,470,qs),
(127,476,o),
(127,484,qs),
(129,511,o),
(159,519,q),
(147,539,o),
(147,561,qs),
(147,594,o),
(191,639,o),
(223,639,qs),
(249,640,o),
(284,612,o),
(284,590,qs),
(284,580,o),
(279,580,qs),
(277,580,o),
(272,583,qs),
(268,585,o),
(266,586,qs),
(248,595,o),
(232,595,qs),
(195,595,o),
(195,560,qs),
(195,544,o),
(216,523,o),
(232,523,qs),
(267,523,ls),
(305,523,o),
(305,489,qs),
(305,484,ls),
(305,478,o),
(297,478,qs),
(184,478,ls),
(161,478,o),
(141,468,q),
(139,468,o),
(138,467,q),
(135,466,o),
(134,466,qs),
(132,466,o)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
36 34 2 0 1 0 1 6 0 61 1 8 5 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
36 34 2 0 1 0 1 6 0 61 1 8 10 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
36 34 2 0 1 0 1 6 0 61 1 9 10 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 7 0 6 7 128 0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 13 10 12 3 5 5 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 12 1 5 5 8 98 9 1 8 8 24 77 13 1 10 10 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 12 1 5 5 9 98 0 9 9 24 77 13 1 10 10 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 13 1 10 0 8 10 8 101 12 1 5 5 9 98 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
67 66 41 40 73 71 66 76 67 76 64 62 60 58 52 49 47 44 40 65 41 65 35 36 35 51 53 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 33 31 26 36 27 36 24 22 20 18 12 9 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,366,o),
(200,356,qs),
(200,178,ls),
(200,67,o),
(122,22,q),
(116,16,o),
(98,-3,qs),
(84,-17,ls),
(56,-46,o),
(52,-65,q),
(70,-69,o),
(94,-98,o),
(94,-116,qs),
(94,-139,o),
(63,-171,o),
(41,-171,qs),
(19,-171,o),
(-11,-139,o),
(-12,-115,qs),
(-15,-58,o),
(40,0,q),
(29,0,l),
(0,0,l),
(0,97,l),
(32,97,ls),
(103,97,o),
(103,180,qs),
(103,284,ls),
(103,366,o),
(180,366,qs),
(189,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
20 1 3 2 1 76 4 1 0 1 0 133 0 3 2 3 134 0 1 1 2 95 0 2 2 24 2 78 1 0 15 13 9 7 6 4 0 30 1 29 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,-2,o),
(556,-7,q),
(549,-13,o),
(546,-17,qs),
(518,-46,o),
(514,-65,q),
(532,-69,o),
(556,-98,o),
(556,-116,qs),
(556,-139,o),
(525,-171,o),
(503,-171,qs),
(481,-171,o),
(451,-139,o),
(450,-115,qs),
(447,-59,o),
(501,0,q),
(396,0,ls),
(381,0,o),
(381,-24,qs),
(381,-28,o),
(381,-29,qs),
(377,-95,o),
(350,-134,q),
(306,-214,o),
(205,-214,qs),
(131,-214,o),
(84,-168,qs),
(30,-119,o),
(30,-26,qs),
(30,-15,o),
(32,0,q),
(-2,0,l),
(-2,97,l),
(48,97,ls),
(91,97,o),
(123,116,q),
(124,116,l),
(132,121,o),
(138,121,qs),
(148,121,o),
(145,107,qs),
(133,56,o),
(132,34,qs),
(128,-8,o),
(135,-43,qs),
(140,-80,o),
(177,-123,o),
(204,-123,qs),
(284,-123,o),
(284,-13,qs),
(284,47,o),
(316,97,o),
(356,97,qs),
(647,97,l),
(647,0,l),
(562,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
12 1 4 0 50 1 1 4 2 76 0 2 0 2 133 0 7 1 5 1 7 5 128 0 1 0 5 1 5 102 3 1 0 0 4 95 9 8 6 3 4 4 24 4 78 0 0 0 56 0 55 36 38 37 17 36 23 35 33 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,0,l),
(750,0,ls),
(670,0,o),
(624,47,q),
(575,0,o),
(501,0,qs),
(366,0,ls),
(314,0,o),
(290,17,q),
(267,0,o),
(214,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(174,97,l),
(131,140,o),
(131,202,qs),
(131,267,o),
(168,312,q),
(99,328,o),
(96,398,qs),
(96,403,ls),
(96,416,o),
(110,412,qs),
(145,401,o),
(183,396,q),
(215,389,o),
(288,388,qs),
(360,384,o),
(457,384,qs),
(554,383,o),
(611,337,qs),
(676,285,o),
(676,188,qs),
(676,187,l),
(676,176,ls),
(678,97,o),
(747,97,qs),
(782,97,l)
);
},
{
closed = 1;
nodes = (
(536,97,o),
(577,147,o),
(577,190,qs),
(577,290,o),
(451,295,qs),
(447,295,o),
(439,295,qs),
(429,296,o),
(424,296,q),
(449,255,o),
(449,202,qs),
(449,140,o),
(407,97,q),
(500,97,ls)
);
},
{
closed = 1;
nodes = (
(219,244,o),
(219,207,qs),
(219,170,o),
(258,116,o),
(290,107,q),
(323,116,o),
(362,170,o),
(362,207,qs),
(362,245,o),
(321,294,o),
(290,294,qs),
(259,294,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
19 1 6 1 64 1 0 6 39 34 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 59 58 44 44 1 0 58 69 59 69 44 57 44 56 53 48 42 40 38 35 33 30 25 23 11 7 0 43 1 43 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 772;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,337,qs),
(640,285,o),
(640,188,qs),
(640,109,o),
(596,58,qs),
(547,0,o),
(464,0,qs),
(330,0,ls),
(277,0,o),
(254,17,q),
(230,0,o),
(177,0,qs),
(-2,0,l),
(-2,97,l),
(137,97,l),
(94,140,o),
(94,202,qs),
(94,267,o),
(131,312,q),
(62,328,o),
(59,398,qs),
(59,403,ls),
(59,416,o),
(73,412,qs),
(109,401,o),
(146,396,qs),
(179,389,o),
(257,388,qs),
(269,388,o),
(305,387,qs),
(389,384,o),
(420,384,qs),
(517,383,o)
);
},
{
closed = 1;
nodes = (
(499,97,o),
(541,147,o),
(541,190,qs),
(541,290,o),
(415,295,qs),
(411,295,o),
(402,295,qs),
(392,296,o),
(387,296,q),
(412,255,o),
(412,202,qs),
(412,140,o),
(370,97,q),
(464,97,ls)
);
},
{
closed = 1;
nodes = (
(182,244,o),
(182,207,qs),
(182,170,o),
(221,116,o),
(254,107,q),
(286,116,o),
(325,170,o),
(325,207,qs),
(325,245,o),
(285,294,o),
(254,294,qs),
(223,294,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
13 1 4 0 53 1 1 4 22 1 2 1 3 76 7 1 0 9 6 2 4 1 0 4 105 8 5 2 1 1 2 95 3 1 2 2 24 2 78 48 47 33 33 5 0 47 58 48 58 33 46 33 45 42 37 26 23 21 19 18 17 0 32 5 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,0,l),
(713,0,ls),
(633,0,o),
(587,47,q),
(539,0,o),
(464,0,qs),
(330,0,ls),
(277,0,o),
(254,17,q),
(230,0,o),
(177,0,qs),
(-2,0,l),
(-2,97,l),
(137,97,l),
(94,140,o),
(94,202,qs),
(94,267,o),
(131,312,q),
(62,328,o),
(59,398,qs),
(59,403,ls),
(59,416,o),
(73,412,qs),
(109,401,o),
(146,396,qs),
(179,389,o),
(257,388,qs),
(269,388,o),
(305,387,qs),
(389,384,o),
(420,384,qs),
(517,383,o),
(574,337,qs),
(640,285,o),
(640,188,qs),
(640,187,l),
(640,176,ls),
(641,97,o),
(710,97,qs),
(745,97,l)
);
},
{
closed = 1;
nodes = (
(499,97,o),
(541,147,o),
(541,190,qs),
(541,290,o),
(415,295,qs),
(411,295,o),
(402,295,qs),
(392,296,o),
(387,296,q),
(412,255,o),
(412,202,qs),
(412,140,o),
(370,97,q),
(464,97,ls)
);
},
{
closed = 1;
nodes = (
(182,244,o),
(182,207,qs),
(182,170,o),
(221,116,o),
(254,107,q),
(286,116,o),
(325,170,o),
(325,207,qs),
(325,245,o),
(285,294,o),
(254,294,qs),
(223,294,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
21 1 6 1 60 1 0 6 35 30 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 55 54 40 40 1 0 54 65 55 65 40 53 40 52 49 44 38 36 34 31 29 27 26 25 13 7 0 39 1 39 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(548,97,l),
(548,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 2 1 101 0 0 0 3 95 0 3 3 24 3 78 38 42 38 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,166,qs),
(171,173,o),
(171,180,qs),
(173,207,o),
(204,216,q),
(192,235,o),
(192,257,qs),
(192,290,o),
(235,335,o),
(267,336,qs),
(294,336,o),
(329,308,o),
(329,286,qs),
(329,276,o),
(324,276,qs),
(322,276,o),
(317,279,qs),
(313,281,o),
(310,282,qs),
(292,291,o),
(277,291,qs),
(239,291,o),
(239,256,qs),
(239,240,o),
(260,219,o),
(276,219,qs),
(312,219,ls),
(349,219,o),
(349,186,qs),
(349,181,ls),
(349,174,o),
(341,174,qs),
(229,174,ls),
(205,174,o),
(185,164,q),
(184,164,o),
(182,163,qs),
(179,162,o),
(179,162,q),
(176,162,o)
);
},
{
closed = 1;
nodes = (
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(548,97,l),
(548,0,l),
(278,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
36 34 2 0 1 0 1 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 7 0 6 7 6 101 0 5 5 8 95 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 7 0 6 7 6 101 0 5 5 8 95 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
40 40 40 70 40 69 42 38 43 35 36 35 51 53 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,503,o),
(204,481,qs),
(204,458,o),
(174,427,o),
(152,427,qs),
(130,427,o),
(99,458,o),
(99,481,qs),
(99,503,o),
(130,534,o),
(152,534,qs),
(174,534,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,-94,o),
(137,-117,qs),
(137,-139,o),
(106,-171,o),
(84,-171,qs),
(62,-171,o),
(32,-139,o),
(32,-117,qs),
(32,-94,o),
(62,-63,o),
(84,-63,qs),
(107,-63,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,6,l),
(627,2,l),
(613,-83,o),
(549,-141,qs),
(468,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(653,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 32 30 22 21 13 11 8 6 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(84,-96,o),
(84,-117,qs),
(84,-138,o),
(55,-168,o),
(34,-168,qs),
(13,-168,o),
(-16,-138,o),
(-16,-117,qs),
(-16,-96,o),
(13,-66,o),
(34,-66,qs),
(55,-66,o)
);
},
{
closed = 1;
nodes = (
(204,-96,o),
(204,-117,qs),
(204,-138,o),
(175,-168,o),
(155,-168,qs),
(133,-168,o),
(104,-138,o),
(104,-117,qs),
(104,-96,o),
(133,-66,o),
(155,-66,qs),
(175,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(235,97,o),
(268,97,qs),
(303,97,l)
);
},
{
closed = 1;
nodes = (
(65,-168,o),
(44,-168,qs),
(23,-168,o),
(-6,-138,o),
(-6,-117,qs),
(-6,-96,o),
(23,-66,o),
(44,-66,qs),
(65,-66,o),
(94,-96,o),
(94,-117,qs),
(94,-138,o)
);
},
{
closed = 1;
nodes = (
(214,-96,o),
(214,-117,qs),
(214,-138,o),
(185,-168,o),
(165,-168,qs),
(143,-168,o),
(114,-138,o),
(114,-117,qs),
(114,-96,o),
(143,-66,o),
(165,-66,qs),
(185,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
17 1 3 0 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 1 0 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 5 0 21 1 21 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(872,366,o),
(872,356,qs),
(872,178,ls),
(872,101,o),
(833,54,qs),
(788,0,o),
(702,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(704,97,ls),
(775,97,o),
(775,180,qs),
(775,284,ls),
(775,342,o),
(815,358,qs),
(831,366,o),
(853,366,qs),
(861,366,ls)
);
},
{
closed = 1;
nodes = (
(766,-94,o),
(766,-117,qs),
(766,-139,o),
(735,-171,o),
(713,-171,qs),
(691,-171,o),
(661,-139,o),
(661,-117,qs),
(661,-94,o),
(691,-63,o),
(713,-63,qs),
(735,-63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
9 1 0 4 0 133 0 4 1 4 133 10 1 7 0 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 53 52 1 0 59 57 52 63 53 63 45 43 40 38 30 29 21 19 16 14 9 6 0 51 1 50 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 927;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(872,366,o),
(872,356,qs),
(872,178,ls),
(872,101,o),
(833,54,qs),
(788,0,o),
(702,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(704,97,ls),
(775,97,o),
(775,180,qs),
(775,284,ls),
(775,342,o),
(815,358,qs),
(831,366,o),
(853,366,qs),
(861,366,ls)
);
},
{
closed = 1;
nodes = (
(766,-94,o),
(766,-117,qs),
(766,-139,o),
(735,-171,o),
(713,-171,qs),
(691,-171,o),
(661,-139,o),
(661,-117,qs),
(661,-94,o),
(691,-63,o),
(713,-63,qs),
(735,-63,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 1 7 0 8 5 7 8 105 0 3 0 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 77 76 65 64 53 52 1 0 83 81 76 87 77 87 71 69 64 75 65 75 59 57 52 63 53 63 45 43 40 38 30 29 21 19 16 14 9 6 0 51 1 50 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 934;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(763,470,o),
(763,493,qs),
(763,516,o),
(794,548,o),
(817,548,qs),
(839,548,o),
(870,516,o),
(870,493,qs),
(870,470,o),
(839,439,o),
(817,439,qs),
(794,439,o)
);
},
{
closed = 1;
nodes = (
(935,338,qs),
(992,284,o),
(992,192,qs),
(992,113,o),
(949,60,qs),
(899,1,o),
(818,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(661,97,l),
(638,133,o),
(637,192,qs),
(637,272,o),
(682,325,qs),
(732,384,o),
(815,384,qs),
(886,384,o)
);
},
{
closed = 1;
nodes = (
(892,152,o),
(892,194,qs),
(892,237,o),
(849,293,o),
(815,293,qs),
(782,293,o),
(737,236,o),
(737,194,qs),
(737,153,o),
(782,97,o),
(815,97,qs),
(848,97,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 10 3 10 6 3 128 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 15 1 0 0 1 97 0 1 1 23 77 17 9 2 3 3 4 95 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 17 9 2 3 3 4 95 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
88 87 76 75 64 63 13 12 1 0 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 56 54 51 49 41 40 32 30 27 25 20 18 12 62 13 62 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1039;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 5 1 133 0 5 2 5 133 13 9 12 3 7 10 1 8 6 7 8 105 0 4 0 6 4 6 101 0 2 2 0 96 3 11 2 0 0 24 0 78 63 62 51 50 1 0 69 67 62 73 63 73 57 55 50 61 51 61 46 44 36 35 27 25 22 20 15 12 9 6 0 49 1 49 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(712,97,ls),
(783,97,o),
(783,180,qs),
(783,284,ls),
(783,366,o),
(861,366,qs),
(870,366,ls),
(881,366,o),
(881,356,qs),
(881,178,ls),
(881,101,o),
(842,54,qs),
(796,0,o),
(710,0,qs),
(627,0,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
0 1 5 1 133 0 5 2 5 133 17 9 16 3 7 10 1 8 6 7 8 105 0 4 0 6 11 4 6 105 19 13 18 3 11 14 1 12 11 12 101 0 2 2 0 96 3 15 2 0 0 24 0 78 87 86 75 74 63 62 51 50 1 0 93 91 86 97 87 97 81 79 74 85 75 85 69 67 62 73 63 73 57 55 50 61 51 61 46 44 36 35 27 25 22 20 15 12 9 6 0 49 1 49 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 935;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,684,qs),
(13,705,o),
(23,730,qs),
(33,756,o),
(60,756,qs),
(80,756,o),
(104,732,qs),
(105,731,o),
(106,730,qs),
(117,721,o),
(121,721,qs),
(126,721,o),
(133,726,qs),
(146,736,l),
(119,764,o),
(119,790,qs),
(118,817,o),
(153,851,o),
(181,851,qs),
(210,849,o),
(245,815,o),
(244,789,qs),
(244,763,o),
(211,734,q),
(225,711,o),
(201,692,q),
(196,690,o),
(191,694,qs),
(176,708,l),
(148,687,ls),
(132,675,o),
(115,675,qs),
(101,675,o),
(79,697,qs),
(67,711,o),
(60,711,qs),
(51,711,o),
(39,686,qs),
(35,676,o)
);
},
{
closed = 1;
nodes = (
(160,790,qs),
(160,776,o),
(179,758,q),
(204,776,o),
(204,790,qs),
(204,799,o),
(192,814,o),
(183,814,qs),
(159,814,o)
);
},
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
44 1 4 5 24 14 2 3 4 9 1 1 0 90 71 58 3 7 6 84 1 11 7 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 8 14 3 6 1 7 7 6 114 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
10 8 14 3 6 1 7 1 6 7 128 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
49 48 40 39 87 85 83 81 75 73 69 67 62 60 56 54 48 92 49 92 39 47 40 47 36 38 43 34 33 15 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,823,o),
(250,819,qs),
(250,754,ls),
(250,717,o),
(212,674,o),
(180,674,qs),
(150,674,o),
(131,693,q),
(113,674,o),
(84,674,qs),
(51,674,o),
(12,717,o),
(12,754,qs),
(12,775,ls),
(12,795,o),
(20,808,qs),
(30,823,o),
(50,823,qs),
(55,823,ls),
(59,823,o),
(59,819,qs),
(59,749,ls),
(59,718,o),
(83,718,qs),
(108,718,o),
(108,749,qs),
(108,775,ls),
(108,797,o),
(118,810,qs),
(128,823,o),
(146,823,qs),
(151,823,ls),
(155,823,o),
(155,819,qs),
(155,749,ls),
(155,718,o),
(179,718,qs),
(204,718,o),
(204,749,qs),
(204,775,ls),
(204,797,o),
(213,810,qs),
(223,823,o),
(241,823,qs),
(246,823,ls)
);
},
{
closed = 1;
nodes = (
(219,602,o),
(219,569,qs),
(219,564,ls),
(219,557,o),
(211,557,qs),
(95,557,ls),
(76,557,o),
(58,550,qs),
(52,548,ls),
(46,545,o),
(45,545,qs),
(43,545,o),
(40,549,q),
(38,557,o),
(38,563,qs),
(40,602,o),
(93,602,qs),
(145,602,l),
(181,602,ls)
);
},
{
closed = 1;
nodes = (
(219,483,qs),
(219,478,ls),
(219,471,o),
(211,471,qs),
(95,471,ls),
(75,471,o),
(56,464,qs),
(53,463,o),
(52,462,q),
(46,459,o),
(45,459,qs),
(43,459,o),
(40,463,q),
(38,471,o),
(38,477,qs),
(40,515,o),
(93,516,qs),
(181,516,ls),
(219,516,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
42 23 10 3 1 0 36 1 5 1 48 1 8 7 67 1 10 9 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 2 11 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
4 2 11 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
66 64 47 45 1 0 79 76 64 82 66 82 59 56 45 63 47 62 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,678,qs),
(40,685,o),
(40,692,qs),
(42,730,o),
(95,731,qs),
(184,731,ls),
(221,731,o),
(221,698,qs),
(221,693,ls),
(221,686,o),
(213,686,qs),
(98,686,ls),
(78,686,o),
(60,679,qs),
(54,677,l),
(49,674,o),
(47,674,qs),
(44,674,o)
);
},
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 2 0 60 41 28 3 3 2 54 1 7 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 4 9 3 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 4 9 3 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
19 18 57 55 53 51 45 43 39 37 32 30 26 24 18 62 19 62 51 52 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,694,o),
(45,696,qs),
(67,708,o),
(119,744,q),
(93,770,o),
(93,797,qs),
(93,824,o),
(129,859,o),
(157,859,qs),
(186,858,o),
(222,823,o),
(222,796,qs),
(221,769,o),
(189,741,q),
(202,717,o),
(178,698,qs),
(172,694,o),
(166,699,qs),
(152,713,l),
(145,708,ls),
(113,687,o),
(108,684,qs),
(107,683,o),
(105,682,qs),
(89,672,o),
(78,672,qs),
(60,672,o),
(49,687,q),
(44,692,ls)
);
},
{
closed = 1;
nodes = (
(137,797,qs),
(137,784,o),
(155,767,q),
(178,782,o),
(179,797,qs),
(179,806,o),
(167,819,o),
(159,819,qs),
(136,819,o)
);
},
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
34 26 24 14 9 5 0 2 80 61 48 3 4 3 74 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
39 38 30 29 77 75 73 71 65 63 59 57 52 50 46 44 38 82 39 82 29 37 30 37 47 33 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,737,o),
(250,733,qs),
(250,668,ls),
(250,631,o),
(212,588,o),
(180,588,qs),
(150,588,o),
(131,607,q),
(113,588,o),
(84,588,qs),
(51,588,o),
(12,631,o),
(12,668,qs),
(12,689,ls),
(12,709,o),
(20,722,qs),
(30,737,o),
(50,737,qs),
(55,737,ls),
(59,737,o),
(59,733,qs),
(59,663,ls),
(59,632,o),
(83,632,qs),
(108,632,o),
(108,663,qs),
(108,689,ls),
(108,711,o),
(118,724,qs),
(128,737,o),
(146,737,qs),
(151,737,ls),
(155,737,o),
(155,733,qs),
(155,663,ls),
(155,632,o),
(179,632,qs),
(204,632,o),
(204,663,qs),
(204,689,ls),
(204,711,o),
(213,724,qs),
(223,737,o),
(241,737,qs),
(246,737,ls)
);
},
{
closed = 1;
nodes = (
(226,518,o),
(226,483,qs),
(226,478,ls),
(226,470,o),
(216,470,qs),
(101,470,ls),
(71,470,o),
(50,461,q),
(49,460,o),
(48,460,q),
(45,458,o),
(43,458,qs),
(41,458,o),
(39,462,q),
(39,463,l),
(36,468,o),
(36,477,qs),
(37,496,o),
(51,506,qs),
(66,517,o),
(94,518,qs),
(186,518,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
4 2 9 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 2 9 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
46 45 1 0 62 59 45 66 46 65 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,801,qs),
(103,822,o),
(122,833,qs),
(127,836,o),
(131,837,qs),
(138,838,o),
(143,833,q),
(153,816,o),
(155,780,qs),
(157,739,o),
(151,716,qs),
(142,680,o),
(126,675,q),
(120,672,o),
(120,678,qs),
(120,680,o),
(120,683,qs),
(120,691,o),
(120,696,qs),
(120,741,o),
(109,782,qs),
(106,792,o)
);
},
{
closed = 1;
nodes = (
(250,611,o),
(250,607,qs),
(250,542,ls),
(250,505,o),
(212,462,o),
(180,462,qs),
(150,462,o),
(131,481,q),
(113,462,o),
(84,462,qs),
(51,462,o),
(12,505,o),
(12,542,qs),
(12,563,ls),
(12,583,o),
(20,596,qs),
(30,611,o),
(50,611,qs),
(55,611,ls),
(59,611,o),
(59,607,qs),
(59,537,ls),
(59,506,o),
(83,506,qs),
(108,506,o),
(108,537,qs),
(108,563,ls),
(108,584,o),
(118,598,qs),
(128,611,o),
(146,611,qs),
(151,611,ls),
(155,611,o),
(155,607,qs),
(155,537,ls),
(155,506,o),
(179,506,qs),
(204,506,o),
(204,537,qs),
(204,563,ls),
(204,585,o),
(213,598,qs),
(223,611,o),
(241,611,qs),
(246,611,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
64 45 32 3 1 0 58 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
23 22 61 59 57 55 49 47 43 41 36 34 30 28 22 66 23 66 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 69 68 57 56 1 0 75 73 68 79 69 79 63 61 56 67 57 67 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(977,0,l),
(945,0,ls),
(867,0,o),
(822,44,q),
(778,0,o),
(700,0,qs),
(627,0,l),
(612,-85,o),
(548,-142,qs),
(467,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(702,97,ls),
(774,97,o),
(774,180,qs),
(774,284,ls),
(774,366,o),
(851,366,qs),
(860,366,ls),
(871,366,o),
(871,356,qs),
(871,178,ls),
(871,140,o),
(909,97,o),
(942,97,qs),
(977,97,l)
);
},
{
closed = 1;
nodes = (
(766,-96,o),
(766,-117,qs),
(766,-138,o),
(737,-168,o),
(716,-168,qs),
(695,-168,o),
(666,-138,o),
(666,-117,qs),
(666,-96,o),
(695,-66,o),
(716,-66,qs),
(737,-66,o)
);
},
{
closed = 1;
nodes = (
(886,-96,o),
(886,-117,qs),
(886,-138,o),
(858,-168,o),
(837,-168,qs),
(816,-168,o),
(786,-138,o),
(786,-117,qs),
(786,-96,o),
(816,-66,o),
(837,-66,qs),
(858,-66,o)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 6 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 96 8 7 2 3 3 24 3 78 93 92 81 80 69 68 57 56 1 0 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 63 61 56 67 57 67 54 52 50 48 45 43 35 34 26 24 21 19 14 11 8 5 0 55 1 55 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1109,0,o),
(1109,10,qs),
(1109,474,ls),
(1109,556,o),
(1186,556,qs),
(1195,556,ls),
(1206,556,o),
(1206,546,qs),
(1206,82,ls),
(1206,0,o),
(1128,0,qs),
(1120,0,ls)
);
},
{
closed = 1;
nodes = (
(625,766,qs),
(623,787,o),
(642,798,qs),
(646,801,o),
(651,802,qs),
(658,803,o),
(662,798,qs),
(672,782,o),
(674,756,qs),
(676,723,o),
(671,706,qs),
(663,674,o),
(646,667,qs),
(640,664,o),
(640,670,qs),
(640,679,o),
(640,688,qs),
(638,714,o),
(629,747,qs),
(626,757,o)
);
},
{
closed = 1;
nodes = (
(530,537,o),
(530,574,qs),
(530,583,ls),
(530,604,o),
(538,616,qs),
(548,631,o),
(569,631,qs),
(574,631,ls),
(577,631,o),
(577,627,qs),
(577,569,ls),
(577,538,o),
(601,538,qs),
(626,538,o),
(626,569,qs),
(626,583,ls),
(626,605,o),
(636,618,qs),
(646,631,o),
(664,631,qs),
(669,631,ls),
(673,631,o),
(673,627,qs),
(673,569,ls),
(673,538,o),
(697,538,qs),
(722,538,o),
(722,569,qs),
(722,583,ls),
(722,606,o),
(731,618,qs),
(742,631,o),
(760,631,qs),
(765,631,ls),
(769,631,o),
(769,627,qs),
(769,574,ls),
(769,537,o),
(731,494,o),
(698,494,qs),
(668,494,o),
(650,513,q),
(631,494,o),
(602,494,qs),
(569,494,o)
);
},
{
closed = 1;
nodes = (
(997,438,o),
(997,428,qs),
(997,178,ls),
(997,101,o),
(958,54,qs),
(913,0,o),
(827,0,qs),
(773,0,ls),
(696,0,o),
(651,44,q),
(606,0,o),
(529,0,qs),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(531,97,ls),
(602,97,o),
(602,180,qs),
(602,357,ls),
(602,438,o),
(680,438,qs),
(689,438,ls),
(700,438,o),
(700,428,qs),
(700,178,ls),
(700,140,o),
(737,97,o),
(770,97,qs),
(829,97,ls),
(863,97,o),
(900,140,o),
(900,180,qs),
(900,356,ls),
(900,438,o),
(978,438,qs),
(986,438,ls)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
66 53 40 3 1 4 34 1 2 1 123 118 2 0 10 3 76 22 18 16 14 4 4 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
66 53 40 3 1 4 34 1 2 5 123 118 2 0 10 3 76 22 18 16 14 4 4 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
66 53 40 3 1 4 34 1 2 5 123 118 2 0 18 3 76 22 18 16 14 4 4 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
8 6 2 4 1 1 4 112 13 11 22 3 9 2 14 2 9 14 128 0 14 0 19 10 14 19 103 3 21 2 2 2 1 97 7 5 2 1 1 23 77 23 18 12 3 10 10 0 98 17 16 15 20 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
8 6 2 4 1 5 4 112 13 11 22 3 9 2 14 2 9 14 128 0 14 0 19 10 14 19 103 0 1 1 23 77 3 21 2 2 2 5 97 7 1 5 5 23 77 23 18 12 3 10 10 0 98 17 16 15 20 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
8 6 2 4 1 4 133 13 11 22 3 9 2 14 2 9 14 128 0 14 0 19 10 14 19 103 0 1 1 23 77 3 21 2 2 2 5 97 7 1 5 5 23 77 23 18 12 3 10 10 0 98 17 16 15 20 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
8 6 2 4 1 4 133 13 11 22 3 9 2 14 2 9 14 128 0 14 0 19 10 14 19 103 0 1 1 23 77 3 21 2 2 2 5 97 7 1 5 5 23 77 12 1 10 10 0 98 17 16 15 20 4 0 0 24 77 23 1 18 18 0 97 17 16 15 20 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
8 6 2 4 1 4 133 13 11 22 3 9 2 14 2 9 14 128 0 14 0 19 10 14 19 103 0 1 1 23 77 3 21 2 2 2 5 97 7 1 5 5 23 77 12 1 10 10 0 98 17 16 20 3 0 0 24 77 23 1 18 18 15 97 0 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
8 6 2 4 1 4 133 13 11 22 3 9 2 14 2 9 14 128 7 1 5 3 21 2 2 9 5 2 106 0 14 0 19 10 14 19 103 0 1 1 23 77 12 1 10 10 0 98 17 16 20 3 0 0 24 77 23 1 18 18 15 97 0 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
8 6 2 4 1 4 133 13 11 22 3 9 2 14 2 9 14 128 7 1 5 3 21 2 2 9 5 2 106 0 14 0 19 10 14 19 103 23 1 18 0 15 18 15 101 0 1 1 23 77 12 1 10 10 0 98 17 16 20 3 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
135 134 78 77 33 32 1 0 141 139 134 144 135 144 127 124 122 119 117 115 109 106 104 101 98 95 92 89 85 82 77 133 78 132 70 68 64 62 57 55 51 49 44 42 37 35 32 76 33 76 7 4 0 11 1 10 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1262;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,-16,o),
(330,10,qs),
(365,61,ls),
(377,80,o),
(377,97,qs),
(377,170,l),
(428,181,l),
(428,28,l),
(687,83,l),
(714,143,o),
(715,190,q),
(526,150,l),
(526,201,l),
(688,236,l),
(714,291,o),
(715,343,q),
(526,302,l),
(526,583,l),
(465,552,o),
(428,501,q),
(428,281,l),
(377,271,l),
(377,621,l),
(317,593,o),
(279,540,q),
(279,250,l),
(115,215,l),
(93,169,o),
(88,108,q),
(279,149,l),
(279,77,l),
(79,35,l),
(60,-7,o),
(53,-72,q),
(281,-23,ls)
);
},
{
closed = 1;
nodes = (
(426,-125,q),
(688,-69,l),
(714,-13,o),
(715,37,q),
(453,-19,l),
(430,-62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,640,qs),
(69,657,o),
(58,657,qs),
(45,657,o),
(33,641,qs),
(32,639,o),
(30,636,qs),
(25,628,o),
(22,628,qs),
(18,628,o),
(17,631,q),
(9,642,o),
(9,658,qs),
(9,678,o),
(35,703,o),
(55,702,qs),
(69,702,o),
(102,688,qs),
(141,672,o),
(152,672,qs),
(165,672,o),
(177,688,qs),
(178,689,o),
(180,692,qs),
(185,701,o),
(188,701,qs),
(192,701,o),
(193,697,q),
(201,686,o),
(201,671,qs),
(201,650,o),
(175,625,o),
(156,626,qs),
(140,626,o)
);
},
{
closed = 1;
nodes = (
(151,0,o),
(106,42,qs),
(56,89,o),
(56,178,qs),
(56,474,ls),
(56,556,o),
(133,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,180,ls),
(153,97,o),
(224,97,qs),
(259,97,l),
(259,0,l),
(226,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
7 1 1 2 24 1 0 3 2 76 0 2 0 3 0 2 3 105 0 1 7 1 0 5 1 0 105 0 5 5 23 77 0 4 4 6 97 8 1 6 6 24 6 78 34 34 1 0 34 49 34 48 43 40 37 35 31 29 18 16 14 12 0 33 1 33 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,633,o),
(30,624,q),
(29,623,o),
(27,622,qs),
(24,621,o),
(23,621,qs),
(21,621,o),
(19,626,qs),
(16,632,o),
(16,639,qs),
(18,667,o),
(48,675,q),
(37,694,o),
(37,716,qs),
(37,749,o),
(80,794,o),
(112,795,qs),
(138,795,o),
(173,767,o),
(173,746,qs),
(173,736,o),
(168,736,qs),
(166,736,o),
(162,738,qs),
(157,741,o),
(155,742,qs),
(137,751,o),
(122,751,qs),
(84,751,o),
(84,716,qs),
(84,699,o),
(105,678,o),
(121,678,qs),
(157,678,ls),
(194,678,o),
(194,645,qs),
(194,640,ls),
(194,633,o),
(186,633,qs),
(73,633,ls)
);
},
{
closed = 1;
nodes = (
(259,0,l),
(226,0,ls),
(151,0,o),
(106,42,qs),
(55,89,o),
(55,178,qs),
(55,474,ls),
(55,556,o),
(133,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,180,ls),
(153,97,o),
(224,97,qs),
(259,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
19 17 2 1 2 29 27 2 0 1 2 76 0 3 0 2 1 3 2 105 0 1 7 1 0 5 1 0 103 0 5 5 23 77 8 1 4 4 6 97 0 6 6 24 6 78 41 40 1 0 54 52 47 44 40 55 41 55 23 21 12 10 7 4 0 39 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,456,qs),
(137,462,o),
(137,469,qs),
(139,497,o),
(170,505,q),
(158,524,o),
(158,546,qs),
(158,579,o),
(201,624,o),
(234,625,qs),
(260,625,o),
(295,597,o),
(295,576,qs),
(295,566,o),
(290,566,qs),
(288,566,o),
(284,568,qs),
(279,571,o),
(276,572,q),
(259,581,o),
(243,581,qs),
(205,581,o),
(205,546,qs),
(205,530,o),
(226,508,o),
(242,508,qs),
(278,508,ls),
(315,508,o),
(315,475,qs),
(315,470,ls),
(315,463,o),
(307,463,qs),
(195,463,ls),
(171,463,o),
(151,454,q),
(150,453,o),
(148,452,qs),
(145,451,o),
(145,451,q),
(142,451,o)
);
},
{
closed = 1;
nodes = (
(511,0,l),
(402,0,l),
(394,-70,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(150,-214,o),
(111,-183,qs),
(77,-158,o),
(69,-121,qs),
(64,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(300,-57,o),
(306,0,q),
(226,0,ls),
(155,0,o),
(105,46,qs),
(48,100,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(142,384,o),
(225,384,qs),
(342,384,o),
(384,279,qs),
(404,230,o),
(407,142,qs),
(408,118,o),
(407,97,q),
(511,97,l)
);
},
{
closed = 1;
nodes = (
(311,200,o),
(292,244,qs),
(272,293,o),
(225,293,qs),
(190,293,o),
(149,237,o),
(149,191,qs),
(149,151,o),
(193,97,o),
(226,97,qs),
(306,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
26 24 2 1 2 36 34 2 0 1 2 76 0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 12 10 4 12 105 0 6 0 8 6 8 101 14 11 13 3 10 10 5 95 9 1 5 5 24 5 78 77 76 40 40 83 81 76 86 77 86 40 75 40 75 74 73 36 34 34 38 47 41 35 51 53 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,0,l),
(226,0,ls),
(151,0,o),
(106,42,qs),
(55,89,o),
(55,178,qs),
(55,474,ls),
(55,556,o),
(133,556,qs),
(141,556,ls),
(152,556,o),
(152,546,qs),
(152,180,ls),
(152,97,o),
(224,97,qs),
(259,97,l)
);
},
{
closed = 1;
nodes = (
(191,-184,o),
(191,-218,qs),
(191,-223,ls),
(191,-229,o),
(183,-229,qs),
(70,-229,ls),
(47,-229,o),
(27,-239,q),
(25,-239,o),
(24,-240,qs),
(21,-242,o),
(20,-242,qs),
(18,-242,o),
(16,-237,qs),
(13,-231,o),
(13,-223,qs),
(15,-196,o),
(45,-188,q),
(34,-168,o),
(34,-147,qs),
(34,-114,o),
(77,-69,o),
(109,-68,qs),
(135,-67,o),
(170,-96,o),
(170,-117,qs),
(170,-127,o),
(165,-127,qs),
(163,-127,o),
(158,-124,qs),
(154,-122,o),
(152,-121,qs),
(134,-112,o),
(119,-112,qs),
(81,-112,o),
(81,-147,qs),
(81,-163,o),
(102,-184,o),
(118,-184,qs),
(154,-184,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 37 2 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 5 1 4 3 6 4 106 9 1 3 0 7 3 7 99 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 106 9 1 3 0 7 3 7 99 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
17 16 1 0 51 48 33 31 28 26 22 20 16 55 17 54 14 12 7 4 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,314,qs),
(252,320,o),
(252,328,qs),
(254,355,o),
(284,363,q),
(272,382,o),
(272,404,qs),
(272,437,o),
(316,482,o),
(348,483,qs),
(374,484,o),
(409,455,o),
(409,434,qs),
(409,424,o),
(404,424,qs),
(402,424,o),
(397,427,qs),
(393,429,o),
(391,430,qs),
(373,439,o),
(357,439,qs),
(320,439,o),
(320,404,qs),
(320,388,o),
(341,367,o),
(357,367,qs),
(392,367,ls),
(430,367,o),
(430,333,qs),
(430,328,ls),
(430,322,o),
(422,322,qs),
(309,322,ls),
(286,322,o),
(266,312,q),
(264,312,o),
(263,311,qs),
(260,309,o),
(259,309,qs),
(257,309,o)
);
},
{
closed = 1;
nodes = (
(652,6,l),
(627,2,l),
(613,-83,o),
(549,-141,qs),
(468,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(653,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
36 34 2 0 1 76 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 0 5 0 8 5 128 0 4 3 1 2 1 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 2 1 2 3 1 128 0 8 0 5 0 8 5 128 0 4 0 2 3 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 40 72 70 62 61 53 51 48 46 40 77 41 77 35 36 35 51 53 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,488,o),
(238,455,qs),
(238,450,ls),
(238,443,o),
(230,443,qs),
(117,443,ls),
(94,443,o),
(74,434,q),
(73,433,o),
(71,432,qs),
(68,431,o),
(67,431,qs),
(65,431,o),
(63,436,qs),
(60,442,o),
(60,449,qs),
(62,477,o),
(92,485,q),
(81,504,o),
(81,526,qs),
(81,559,o),
(124,604,o),
(156,605,qs),
(183,605,o),
(217,577,o),
(217,556,qs),
(217,546,o),
(212,546,qs),
(211,546,o),
(205,548,q),
(202,550,o),
(199,552,qs),
(181,561,o),
(166,561,qs),
(128,561,o),
(128,526,qs),
(128,509,o),
(149,488,o),
(165,488,qs),
(201,488,ls)
);
},
{
closed = 1;
nodes = (
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
13 1 0 1 23 21 2 3 0 2 76 8 1 4 3 5 3 4 5 128 0 2 0 1 0 2 1 105 7 1 0 0 3 4 0 3 103 0 5 5 6 98 0 6 6 24 6 78 41 40 1 0 49 47 46 44 40 55 41 54 35 32 17 15 6 4 0 39 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,436,qs),
(59,442,o),
(59,449,qs),
(61,477,o),
(91,485,q),
(80,504,o),
(80,526,qs),
(80,559,o),
(123,604,o),
(155,605,qs),
(181,605,o),
(216,577,o),
(216,556,qs),
(216,546,o),
(211,546,qs),
(210,546,o),
(205,548,qs),
(200,551,o),
(198,552,qs),
(180,561,o),
(165,561,qs),
(127,561,o),
(127,526,qs),
(127,510,o),
(148,488,o),
(164,488,qs),
(200,488,ls),
(237,488,o),
(237,455,qs),
(237,450,ls),
(237,443,o),
(229,443,qs),
(116,443,ls),
(93,443,o),
(73,434,q),
(72,433,o),
(70,432,qs),
(67,431,o),
(66,431,qs),
(64,431,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
26 1 1 2 36 34 2 0 1 57 1 7 4 3 76 0 5 0 4 0 5 4 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 9 2 4 4 7 98 8 1 7 7 24 7 78 41 40 60 58 56 54 53 51 48 45 40 61 41 61 41 35 51 53 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,0,o),
(107,42,qs),
(56,89,o),
(56,178,qs),
(56,474,ls),
(56,556,o),
(134,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,180,ls),
(153,97,o),
(224,97,qs),
(259,97,l),
(259,0,l),
(227,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 97 3 1 2 2 24 2 78 0 0 0 15 0 14 51 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,qs),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
},
{
closed = 1;
nodes = (
(435,-96,o),
(435,-118,qs),
(435,-141,o),
(405,-172,o),
(382,-172,qs),
(361,-172,o),
(330,-141,o),
(330,-118,qs),
(330,-96,o),
(360,-65,o),
(382,-65,qs),
(405,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
34 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 98 5 1 4 4 24 4 78 40 39 1 0 46 44 39 50 40 50 37 35 33 30 22 21 14 11 8 5 0 38 1 38 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(158,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(91,-94,o),
(91,-117,qs),
(91,-139,o),
(60,-171,o),
(38,-171,qs),
(16,-171,o),
(-14,-139,o),
(-14,-117,qs),
(-14,-94,o),
(16,-63,o),
(38,-63,qs),
(61,-63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 98 5 1 0 0 24 0 78 17 16 1 0 23 21 16 27 17 27 14 12 9 6 0 15 1 15 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
},
{
closed = 1;
nodes = (
(205,-94,o),
(205,-117,qs),
(205,-139,o),
(174,-171,o),
(152,-171,qs),
(130,-171,o),
(100,-139,o),
(100,-117,qs),
(100,-94,o),
(130,-63,o),
(152,-63,qs),
(174,-63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
17 1 3 0 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 98 4 1 3 3 24 3 78 23 22 1 0 29 27 22 33 23 33 20 18 16 14 13 11 8 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,507,o),
(127,528,qs),
(127,550,o),
(157,579,o),
(177,579,qs),
(198,579,o),
(227,549,o),
(227,528,qs),
(227,507,o),
(198,477,o),
(177,477,qs),
(156,477,o)
);
},
{
closed = 1;
nodes = (
(248,507,o),
(248,528,qs),
(248,550,o),
(277,579,o),
(298,579,qs),
(319,579,o),
(348,550,o),
(348,528,qs),
(348,507,o),
(319,477,o),
(298,477,qs),
(277,477,o)
);
},
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 7 98 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 57 55 50 60 51 60 48 46 44 42 36 33 31 28 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,403,o),
(273,424,qs),
(273,446,o),
(302,475,o),
(323,475,qs),
(344,475,o),
(373,446,o),
(373,424,qs),
(373,403,o),
(344,373,o),
(323,373,qs),
(302,373,o)
);
},
{
closed = 1;
nodes = (
(394,403,o),
(394,424,qs),
(394,446,o),
(423,475,o),
(444,475,qs),
(464,475,o),
(494,446,o),
(494,424,qs),
(494,403,o),
(465,373,o),
(444,373,qs),
(423,373,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
59 1 8 4 1 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 98 9 1 8 8 24 8 78 25 24 13 12 1 0 62 60 58 55 46 45 38 35 32 29 24 63 25 63 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,457,o),
(36,478,qs),
(36,500,o),
(65,529,o),
(86,529,qs),
(107,529,o),
(136,500,o),
(136,478,qs),
(136,457,o),
(107,427,o),
(86,427,qs),
(65,427,o)
);
},
{
closed = 1;
nodes = (
(157,457,o),
(157,478,qs),
(157,499,o),
(186,529,o),
(207,529,qs),
(228,529,o),
(257,500,o),
(257,478,qs),
(257,457,o),
(228,427,o),
(207,427,qs),
(186,427,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 98 9 1 4 4 24 4 78 25 24 13 12 1 0 38 36 33 30 24 39 25 39 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,457,o),
(37,478,qs),
(37,499,o),
(66,529,o),
(87,529,qs),
(108,529,o),
(137,500,o),
(137,478,qs),
(137,457,o),
(108,427,o),
(87,427,qs),
(66,427,o)
);
},
{
closed = 1;
nodes = (
(157,457,o),
(157,478,qs),
(157,500,o),
(187,529,o),
(207,529,qs),
(228,529,o),
(257,499,o),
(257,478,qs),
(257,457,o),
(228,427,o),
(207,427,qs),
(186,427,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
41 1 7 4 1 76 0 5 0 4 0 5 4 128 3 1 1 10 2 9 3 0 5 1 0 105 6 11 2 4 4 7 98 8 1 7 7 24 7 78 25 24 13 12 1 0 44 42 40 38 37 35 32 29 24 45 25 45 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,509,o),
(337,528,qs),
(337,548,o),
(364,576,o),
(384,576,qs),
(403,576,o),
(430,548,o),
(430,528,qs),
(430,509,o),
(402,482,o),
(384,482,qs),
(364,482,o)
);
},
{
closed = 1;
nodes = (
(274,402,o),
(274,423,qs),
(274,445,o),
(302,474,o),
(323,474,qs),
(344,474,o),
(374,445,o),
(374,423,qs),
(374,402,o),
(344,372,o),
(323,372,qs),
(303,372,o)
);
},
{
closed = 1;
nodes = (
(423,474,o),
(444,474,qs),
(465,474,o),
(494,445,o),
(494,423,qs),
(494,402,o),
(464,372,o),
(444,372,qs),
(423,372,o),
(394,402,o),
(394,423,qs),
(394,445,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,284,ls),
(603,366,o),
(681,366,qs),
(690,366,ls),
(701,366,o),
(701,356,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
71 1 10 6 1 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 8 14 2 6 6 10 98 11 1 10 10 24 10 78 37 36 13 12 1 0 74 72 70 67 58 57 50 47 44 41 36 75 37 75 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,563,o),
(101,583,qs),
(101,603,o),
(128,630,o),
(147,630,qs),
(166,630,o),
(193,602,o),
(193,583,qs),
(193,564,o),
(166,536,o),
(147,536,qs),
(128,536,o)
);
},
{
closed = 1;
nodes = (
(37,457,o),
(37,478,qs),
(37,499,o),
(66,529,o),
(86,529,qs),
(107,529,o),
(137,499,o),
(137,478,qs),
(137,457,o),
(107,427,o),
(86,427,qs),
(66,427,o)
);
},
{
closed = 1;
nodes = (
(157,457,o),
(157,478,qs),
(157,499,o),
(186,529,o),
(207,529,qs),
(228,529,o),
(257,499,o),
(257,478,qs),
(257,456,o),
(228,427,o),
(207,427,qs),
(186,427,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 8 8 6 98 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 50 48 45 42 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,563,o),
(101,583,qs),
(101,603,o),
(128,630,o),
(147,630,qs),
(166,630,o),
(193,602,o),
(193,583,qs),
(193,564,o),
(166,536,o),
(147,536,qs),
(128,536,o)
);
},
{
closed = 1;
nodes = (
(37,457,o),
(37,478,qs),
(37,499,o),
(66,529,o),
(86,529,qs),
(107,529,o),
(137,499,o),
(137,478,qs),
(137,457,o),
(107,427,o),
(86,427,qs),
(66,427,o)
);
},
{
closed = 1;
nodes = (
(186,529,o),
(207,529,qs),
(228,529,o),
(257,499,o),
(257,478,qs),
(257,456,o),
(228,427,o),
(207,427,qs),
(186,427,o),
(157,457,o),
(157,478,qs),
(157,499,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
53 1 9 6 1 76 0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 8 13 2 6 6 9 98 10 1 9 9 24 9 78 37 36 13 12 1 0 56 54 52 50 49 47 44 41 36 57 37 57 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,0,l),
(566,0,ls),
(497,0,o),
(455,34,q),
(405,0,o),
(320,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(457,-196,o),
(462,-200,q),
(472,-203,o),
(468,-218,qs),
(456,-277,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(330,97,ls),
(375,97,o),
(403,116,q),
(391,139,o),
(370,201,qs),
(336,293,o),
(257,293,qs),
(196,293,o),
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(414,384,o),
(472,215,qs),
(492,155,o),
(510,118,o),
(525,108,qs),
(541,97,o),
(567,97,qs),
(589,97,l)
);
},
{
closed = 1;
nodes = (
(293,-65,o),
(315,-65,qs),
(338,-65,o),
(368,-96,o),
(368,-118,qs),
(368,-141,o),
(337,-172,o),
(315,-172,qs),
(293,-172,o),
(263,-141,o),
(263,-118,qs),
(263,-96,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
22 1 0 2 56 1 6 0 2 76 0 1 0 2 0 1 2 105 0 9 0 8 5 9 8 105 0 5 0 4 5 4 101 3 10 2 0 0 6 97 7 1 6 6 24 6 78 1 0 71 69 65 63 59 57 55 52 46 44 34 32 26 23 19 17 8 6 0 60 1 60 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(385,97,l),
(369,113,o),
(341,194,qs),
(304,293,o),
(225,293,qs),
(164,293,o),
(106,242,qs),
(96,233,o),
(87,234,qs),
(75,235,o),
(75,247,qs),
(75,271,o),
(108,332,o),
(133,350,qs),
(179,384,o),
(240,384,qs),
(385,384,o),
(442,211,qs),
(464,137,o),
(486,112,qs),
(498,99,o),
(518,97,qs),
(530,96,o),
(530,86,qs),
(530,46,o),
(481,0,o),
(440,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(285,-96,o),
(285,-118,qs),
(285,-141,o),
(254,-172,o),
(232,-172,qs),
(210,-172,o),
(180,-141,o),
(180,-118,qs),
(180,-96,o),
(210,-65,o),
(232,-65,qs),
(254,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 0 2 3 1 2 105 7 1 4 0 5 4 5 101 0 3 3 0 95 6 1 0 0 24 0 78 30 29 1 0 36 34 29 40 30 40 27 26 23 21 12 10 0 28 1 28 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(535,0,ls),
(465,0,o),
(424,34,q),
(374,0,o),
(289,0,qs),
(-1,0,l),
(-2,97,l),
(299,97,ls),
(344,97,o),
(372,116,q),
(359,139,o),
(339,201,qs),
(305,293,o),
(226,293,qs),
(165,293,o),
(107,242,qs),
(98,233,o),
(89,234,qs),
(76,235,o),
(76,247,qs),
(76,271,o),
(110,332,o),
(134,350,qs),
(180,384,o),
(241,384,qs),
(383,384,o),
(441,215,qs),
(461,155,o),
(479,118,o),
(494,108,qs),
(510,97,o),
(536,97,qs),
(557,97,l)
);
},
{
closed = 1;
nodes = (
(285,-96,o),
(285,-118,qs),
(285,-141,o),
(254,-172,o),
(232,-172,qs),
(210,-172,o),
(180,-141,o),
(180,-118,qs),
(180,-96,o),
(210,-65,o),
(232,-65,qs),
(254,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
22 1 0 2 29 1 4 0 2 76 0 1 0 2 0 1 2 105 9 1 6 0 7 6 7 101 3 8 2 0 0 4 97 5 1 4 4 24 4 78 35 34 1 0 41 39 34 45 35 45 32 30 28 26 25 23 19 17 8 6 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,0,l),
(566,0,ls),
(497,0,o),
(455,34,q),
(405,0,o),
(320,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(457,-196,o),
(462,-200,q),
(472,-203,o),
(468,-218,qs),
(456,-277,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(330,97,ls),
(375,97,o),
(403,116,q),
(391,139,o),
(370,201,qs),
(336,293,o),
(257,293,qs),
(196,293,o),
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(414,384,o),
(472,215,qs),
(492,155,o),
(510,118,o),
(525,108,qs),
(541,97,o),
(567,97,qs),
(589,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
22 1 0 2 56 1 6 0 2 76 0 1 0 2 0 1 2 105 0 5 0 4 5 4 101 3 8 2 0 0 6 97 7 1 6 6 24 6 78 1 0 59 57 55 52 46 44 34 32 26 23 19 17 8 6 0 60 1 60 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(385,97,l),
(369,113,o),
(341,194,qs),
(304,293,o),
(225,293,qs),
(164,293,o),
(106,242,qs),
(96,233,o),
(87,234,qs),
(75,235,o),
(75,247,qs),
(75,271,o),
(108,332,o),
(133,350,qs),
(179,384,o),
(240,384,qs),
(385,384,o),
(442,211,qs),
(464,137,o),
(486,112,qs),
(498,99,o),
(518,97,qs),
(530,96,o),
(530,86,qs),
(530,46,o),
(481,0,o),
(440,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 24 0 78 1 0 27 26 23 21 12 10 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(535,0,ls),
(465,0,o),
(424,34,q),
(374,0,o),
(289,0,qs),
(-1,0,l),
(-2,97,l),
(299,97,ls),
(344,97,o),
(372,116,q),
(360,139,o),
(339,201,qs),
(305,293,o),
(226,293,qs),
(165,293,o),
(107,242,qs),
(98,233,o),
(89,234,qs),
(76,235,o),
(76,247,qs),
(76,271,o),
(110,332,o),
(134,350,qs),
(180,384,o),
(241,384,qs),
(383,384,o),
(441,215,qs),
(461,155,o),
(479,118,o),
(494,108,qs),
(510,97,o),
(536,97,qs),
(557,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
22 1 0 2 29 1 4 0 2 76 0 1 0 2 0 1 2 105 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 32 30 28 26 25 23 19 17 8 6 0 33 1 33 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,476,o),
(221,498,qs),
(221,521,o),
(251,552,o),
(274,552,qs),
(296,552,o),
(326,521,o),
(326,498,qs),
(326,476,o),
(296,444,o),
(274,444,qs),
(252,444,o)
);
},
{
closed = 1;
nodes = (
(589,0,l),
(566,0,ls),
(497,0,o),
(455,34,q),
(405,0,o),
(320,0,qs),
(278,0,ls),
(225,0,o),
(190,-32,qs),
(153,-67,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(457,-196,o),
(462,-200,q),
(472,-203,o),
(468,-218,qs),
(456,-277,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-29,o),
(102,28,qs),
(166,97,o),
(277,97,qs),
(330,97,ls),
(375,97,o),
(403,116,q),
(391,139,o),
(370,201,qs),
(336,293,o),
(257,293,qs),
(196,293,o),
(139,242,qs),
(129,233,o),
(120,234,qs),
(107,235,o),
(107,247,qs),
(107,271,o),
(141,332,o),
(165,350,qs),
(211,384,o),
(272,384,qs),
(414,384,o),
(472,215,qs),
(492,155,o),
(510,118,o),
(525,108,qs),
(541,97,o),
(567,97,qs),
(589,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
34 1 2 4 68 1 8 2 2 76 0 3 0 4 2 3 4 105 0 7 0 6 7 6 101 10 1 0 0 1 97 0 1 1 23 77 5 11 2 2 2 8 97 9 1 8 8 24 8 78 13 12 1 0 71 69 67 64 58 56 46 44 38 35 31 29 20 18 12 72 13 72 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 579;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,521,o),
(293,498,qs),
(293,476,o),
(263,444,o),
(241,444,qs),
(219,444,o),
(188,476,o),
(188,498,qs),
(188,521,o),
(219,552,o),
(241,552,qs),
(263,552,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(385,97,l),
(369,113,o),
(341,194,qs),
(304,293,o),
(225,293,qs),
(164,293,o),
(106,242,qs),
(96,233,o),
(87,234,qs),
(75,235,o),
(75,247,qs),
(75,271,o),
(108,332,o),
(133,350,qs),
(179,384,o),
(240,384,qs),
(385,384,o),
(442,211,qs),
(464,137,o),
(486,112,qs),
(498,99,o),
(518,97,qs),
(530,96,o),
(530,86,qs),
(530,46,o),
(481,0,o),
(440,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 3 0 4 5 3 4 105 0 1 1 0 97 6 1 0 0 23 77 0 5 5 2 95 7 1 2 2 24 2 78 13 12 1 0 39 38 35 33 24 22 12 40 13 40 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,476,o),
(188,498,qs),
(188,521,o),
(219,552,o),
(241,552,qs),
(263,552,o),
(293,521,o),
(293,498,qs),
(293,476,o),
(263,444,o),
(241,444,qs),
(219,444,o)
);
},
{
closed = 1;
nodes = (
(557,0,l),
(535,0,ls),
(465,0,o),
(424,34,q),
(374,0,o),
(289,0,qs),
(-1,0,l),
(-2,97,l),
(299,97,ls),
(344,97,o),
(372,116,q),
(360,139,o),
(339,201,qs),
(305,293,o),
(226,293,qs),
(165,293,o),
(107,242,qs),
(98,233,o),
(89,234,qs),
(76,235,o),
(76,247,qs),
(76,271,o),
(110,332,o),
(134,350,qs),
(180,384,o),
(241,384,qs),
(383,384,o),
(441,215,qs),
(461,155,o),
(479,118,o),
(494,108,qs),
(510,97,o),
(536,97,qs),
(557,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
34 1 2 4 41 1 6 2 2 76 0 3 0 4 2 3 4 105 8 1 0 0 1 97 0 1 1 23 77 5 9 2 2 2 6 97 7 1 6 6 24 6 78 13 12 1 0 44 42 40 38 37 35 31 29 20 18 12 45 13 45 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,0,l),
(450,0,ls),
(366,0,o),
(322,49,q),
(272,0,o),
(201,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o),
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,176,ls),
(378,97,o),
(447,97,qs),
(482,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 3 1 2 0 1 2 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 3 1 2 0 1 2 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 39 37 35 32 27 24 20 18 13 12 8 6 0 40 1 40 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,473,o),
(100,496,qs),
(100,518,o),
(131,549,o),
(153,549,qs),
(175,549,o),
(205,518,o),
(205,496,qs),
(205,473,o),
(175,442,o),
(153,442,qs),
(131,442,o)
);
},
{
closed = 1;
nodes = (
(482,0,l),
(450,0,ls),
(366,0,o),
(322,49,q),
(272,0,o),
(201,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(199,97,ls),
(230,97,o),
(276,152,o),
(276,191,qs),
(276,238,o),
(231,292,o),
(192,293,qs),
(162,293,o),
(130,280,q),
(129,279,o),
(127,279,q),
(118,275,o),
(113,275,qs),
(98,276,o),
(100,303,qs),
(103,334,o),
(133,358,qs),
(167,385,o),
(215,384,qs),
(284,383,o),
(327,335,qs),
(376,281,o),
(376,187,qs),
(376,176,ls),
(378,97,o),
(447,97,qs),
(482,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 5 1 4 2 3 4 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 5 1 4 2 3 4 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 51 49 47 44 39 36 32 30 25 24 20 18 12 52 13 52 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
28 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 1 133 3 1 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 31 29 25 23 19 17 13 11 8 5 0 32 1 32 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,457,o),
(114,479,qs),
(114,502,o),
(145,533,o),
(167,533,qs),
(189,533,o),
(219,502,o),
(219,479,qs),
(219,457,o),
(189,426,o),
(167,426,qs),
(145,426,o)
);
},
{
closed = 1;
nodes = (
(319,0,l),
(286,0,ls),
(245,0,o),
(213,13,q),
(211,-90,o),
(174,-147,qs),
(131,-216,o),
(43,-214,qs),
(-8,-214,o),
(-49,-183,qs),
(-81,-156,o),
(-86,-120,qs),
(-89,-103,o),
(-72,-103,qs),
(-68,-103,o),
(-62,-105,qs),
(-58,-106,o),
(-57,-107,q),
(-12,-123,o),
(24,-122,qs),
(115,-119,o),
(115,3,qs),
(115,284,ls),
(115,366,o),
(193,366,qs),
(202,366,ls),
(213,366,o),
(213,356,qs),
(213,178,ls),
(213,140,o),
(251,97,o),
(284,97,qs),
(319,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 2 0 3 2 128 0 1 8 1 0 3 1 0 105 5 1 4 0 6 4 6 102 9 1 2 2 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 102 9 1 2 2 7 97 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 43 41 37 35 31 29 25 23 20 17 12 44 13 44 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1151,0,l),
(1119,0,ls),
(1047,0,o),
(1002,39,q),
(958,-10,o),
(877,-10,qs),
(800,-10,o),
(755,33,q),
(711,-10,o),
(634,-10,qs),
(592,-10,o),
(558,4,q),
(542,-92,o),
(481,-149,qs),
(411,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,239,ls),
(466,322,o),
(544,322,qs),
(552,322,ls),
(563,322,o),
(563,311,qs),
(563,168,ls),
(563,82,o),
(635,82,qs),
(706,82,o),
(706,168,qs),
(706,262,ls),
(706,344,o),
(784,344,qs),
(793,344,ls),
(804,344,o),
(804,334,qs),
(804,168,ls),
(804,82,o),
(876,82,qs),
(947,82,o),
(947,168,qs),
(947,284,ls),
(947,366,o),
(1025,366,qs),
(1034,366,ls),
(1045,366,o),
(1045,356,qs),
(1045,178,ls),
(1045,140,o),
(1083,97,o),
(1116,97,qs),
(1151,97,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 9 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 9 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 11 2 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 9 97 11 10 2 9 9 24 77 4 1 2 2 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 106 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 70 68 66 64 62 60 56 54 47 45 37 35 30 27 24 22 19 16 13 11 8 5 0 71 1 71 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1142;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(680,366,o),
(680,356,qs),
(680,168,ls),
(680,91,o),
(641,44,qs),
(597,-10,o),
(511,-10,qs),
(434,-10,o),
(390,33,q),
(345,-10,o),
(268,-10,qs),
(188,-10,o),
(143,38,q),
(100,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,240,ls),
(100,322,o),
(178,322,qs),
(187,322,ls),
(198,322,o),
(198,312,qs),
(198,178,ls),
(198,168,o),
(197,162,q),
(200,82,o),
(269,82,qs),
(341,82,o),
(341,168,qs),
(341,262,ls),
(341,344,o),
(419,344,qs),
(427,344,ls),
(439,344,o),
(439,334,qs),
(439,168,ls),
(439,82,o),
(510,82,qs),
(582,82,o),
(582,168,qs),
(582,284,ls),
(582,366,o),
(660,366,qs),
(669,366,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
18 1 1 4 38 34 2 6 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
18 1 5 4 38 34 2 6 1 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 8 7 2 6 6 24 77 3 1 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 102 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 41 39 37 35 33 31 30 28 25 22 17 15 12 9 6 4 0 47 1 46 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(785,0,l),
(753,0,ls),
(682,0,o),
(636,39,q),
(593,-10,o),
(511,-10,qs),
(434,-10,o),
(390,33,q),
(345,-10,o),
(268,-10,qs),
(188,-10,o),
(143,38,q),
(100,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,240,ls),
(100,322,o),
(178,322,qs),
(187,322,ls),
(198,322,o),
(198,312,qs),
(198,178,ls),
(198,168,o),
(197,162,q),
(200,82,o),
(269,82,qs),
(341,82,o),
(341,168,qs),
(341,262,ls),
(341,344,o),
(419,344,qs),
(427,344,ls),
(439,344,o),
(439,334,qs),
(439,168,ls),
(439,82,o),
(510,82,qs),
(582,82,o),
(582,168,qs),
(582,284,ls),
(582,366,o),
(660,366,qs),
(669,366,ls),
(680,366,o),
(680,356,qs),
(680,178,ls),
(680,140,o),
(717,97,o),
(750,97,qs),
(785,97,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
25 1 0 5 49 45 41 3 7 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
25 1 0 5 49 45 41 3 7 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 9 8 3 7 7 24 77 4 1 2 2 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 1 7 7 24 77 4 1 2 2 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 102 6 11 2 0 0 7 97 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 52 50 48 46 44 42 40 38 37 35 32 29 24 22 19 16 13 11 8 5 0 53 1 53 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(707,542,o),
(707,561,qs),
(707,581,o),
(734,608,o),
(753,608,qs),
(772,608,o),
(799,581,o),
(799,561,qs),
(799,542,o),
(772,514,o),
(753,514,qs),
(734,514,o)
);
},
{
closed = 1;
nodes = (
(643,435,o),
(643,456,qs),
(643,478,o),
(672,507,o),
(692,507,qs),
(714,507,o),
(743,477,o),
(743,456,qs),
(743,435,o),
(713,405,o),
(692,405,qs),
(672,405,o)
);
},
{
closed = 1;
nodes = (
(792,507,o),
(813,507,qs),
(834,507,o),
(863,478,o),
(863,456,qs),
(863,435,o),
(834,405,o),
(813,405,qs),
(792,405,o),
(763,435,o),
(763,456,qs),
(763,478,o)
);
},
{
closed = 1;
nodes = (
(1151,0,l),
(1119,0,ls),
(1047,0,o),
(1002,39,q),
(958,-10,o),
(877,-10,qs),
(800,-10,o),
(755,33,q),
(711,-10,o),
(634,-10,qs),
(592,-10,o),
(558,4,q),
(542,-92,o),
(481,-149,qs),
(411,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,239,ls),
(466,322,o),
(544,322,qs),
(552,322,ls),
(563,322,o),
(563,311,qs),
(563,168,ls),
(563,82,o),
(635,82,qs),
(706,82,o),
(706,168,qs),
(706,262,ls),
(706,344,o),
(784,344,qs),
(793,344,ls),
(804,344,o),
(804,334,qs),
(804,168,ls),
(804,82,o),
(876,82,qs),
(947,82,o),
(947,168,qs),
(947,284,ls),
(947,366,o),
(1025,366,qs),
(1034,366,ls),
(1045,366,o),
(1045,356,qs),
(1045,178,ls),
(1045,140,o),
(1083,97,o),
(1116,97,qs),
(1151,97,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 15 6 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 15 8 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 17 8 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 20 1 6 6 15 97 17 16 2 15 15 24 77 10 1 8 8 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 106 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 106 104 102 100 98 96 92 90 83 81 73 71 66 63 60 58 55 52 49 47 44 41 36 107 37 107 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1142;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,542,o),
(341,561,qs),
(341,581,o),
(368,608,o),
(387,608,qs),
(407,608,o),
(434,581,o),
(434,561,qs),
(434,542,o),
(406,514,o),
(387,514,qs),
(368,514,o)
);
},
{
closed = 1;
nodes = (
(277,435,o),
(277,456,qs),
(277,478,o),
(306,507,o),
(327,507,qs),
(348,507,o),
(377,477,o),
(377,456,qs),
(377,435,o),
(348,405,o),
(327,405,qs),
(306,405,o)
);
},
{
closed = 1;
nodes = (
(426,507,o),
(447,507,qs),
(468,507,o),
(497,478,o),
(497,456,qs),
(497,435,o),
(468,405,o),
(447,405,qs),
(427,405,o),
(397,435,o),
(397,456,qs),
(397,478,o)
);
},
{
closed = 1;
nodes = (
(680,366,o),
(680,356,qs),
(680,168,ls),
(680,91,o),
(641,44,qs),
(597,-10,o),
(511,-10,qs),
(434,-10,o),
(390,33,q),
(345,-10,o),
(268,-10,qs),
(188,-10,o),
(143,38,q),
(100,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,240,ls),
(100,322,o),
(178,322,qs),
(187,322,ls),
(198,322,o),
(198,312,qs),
(198,178,ls),
(198,168,o),
(197,162,q),
(200,82,o),
(269,82,qs),
(341,82,o),
(341,168,qs),
(341,262,ls),
(341,344,o),
(419,344,qs),
(427,344,ls),
(439,344,o),
(439,334,qs),
(439,168,ls),
(439,82,o),
(510,82,qs),
(582,82,o),
(582,168,qs),
(582,284,ls),
(582,366,o),
(660,366,qs),
(669,366,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
54 1 7 10 74 70 2 12 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
54 1 11 10 74 70 2 12 7 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 14 13 2 12 12 24 77 9 1 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 102 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 13 12 1 0 77 75 73 71 69 67 66 64 61 58 53 51 48 45 42 40 36 83 37 82 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,542,o),
(341,561,qs),
(341,581,o),
(368,608,o),
(387,608,qs),
(407,608,o),
(434,581,o),
(434,561,qs),
(434,542,o),
(406,514,o),
(387,514,qs),
(368,514,o)
);
},
{
closed = 1;
nodes = (
(277,435,o),
(277,456,qs),
(277,478,o),
(306,507,o),
(327,507,qs),
(348,507,o),
(377,477,o),
(377,456,qs),
(377,435,o),
(348,405,o),
(327,405,qs),
(306,405,o)
);
},
{
closed = 1;
nodes = (
(426,507,o),
(447,507,qs),
(468,507,o),
(497,478,o),
(497,456,qs),
(497,435,o),
(468,405,o),
(447,405,qs),
(427,405,o),
(397,435,o),
(397,456,qs),
(397,478,o)
);
},
{
closed = 1;
nodes = (
(785,0,l),
(753,0,ls),
(682,0,o),
(636,39,q),
(593,-10,o),
(511,-10,qs),
(434,-10,o),
(390,33,q),
(345,-10,o),
(268,-10,qs),
(188,-10,o),
(143,38,q),
(100,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,240,ls),
(100,322,o),
(178,322,qs),
(187,322,ls),
(198,322,o),
(198,312,qs),
(198,178,ls),
(198,168,o),
(197,162,q),
(200,82,o),
(269,82,qs),
(341,82,o),
(341,168,qs),
(341,262,ls),
(341,344,o),
(419,344,qs),
(427,344,ls),
(439,344,o),
(439,334,qs),
(439,168,ls),
(439,82,o),
(510,82,qs),
(582,82,o),
(582,168,qs),
(582,284,ls),
(582,366,o),
(660,366,qs),
(669,366,ls),
(680,366,o),
(680,356,qs),
(680,178,ls),
(680,140,o),
(717,97,o),
(750,97,qs),
(785,97,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
61 1 6 11 85 81 77 3 13 6 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
61 1 6 11 85 81 77 3 13 8 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 15 14 3 13 13 24 77 10 1 8 8 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 1 13 13 24 77 10 1 8 8 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 102 12 19 2 6 6 13 97 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 88 86 84 82 80 78 76 74 73 71 68 65 60 58 55 52 49 47 44 41 36 89 37 89 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1299,0,l),
(1267,0,ls),
(1186,0,o),
(1140,48,q),
(1091,0,o),
(1017,0,qs),
(644,0,ls),
(602,0,o),
(568,14,q),
(554,-86,o),
(492,-146,qs),
(422,-214,o),
(312,-214,qs),
(208,-214,o),
(138,-152,qs),
(56,-79,o),
(56,44,qs),
(56,110,o),
(120,215,o),
(172,237,q),
(179,241,o),
(186,241,qs),
(201,241,o),
(200,228,qs),
(200,222,o),
(195,216,q),
(150,143,o),
(150,64,qs),
(149,-20,o),
(191,-69,qs),
(236,-122,o),
(312,-122,qs),
(376,-122,o),
(419,-82,qs),
(474,-31,o),
(474,64,qs),
(474,284,ls),
(474,366,o),
(552,366,qs),
(560,366,ls),
(571,366,o),
(571,356,qs),
(571,178,ls),
(571,140,o),
(609,97,o),
(642,97,q),
(680,214,o),
(759,290,qs),
(857,384,o),
(989,384,qs),
(1075,384,o),
(1130,336,qs),
(1193,281,o),
(1193,187,qs),
(1193,176,ls),
(1195,97,o),
(1264,97,qs),
(1299,97,l)
);
},
{
closed = 1;
nodes = (
(1047,97,o),
(1094,150,o),
(1094,191,qs),
(1093,238,o),
(1064,265,qs),
(1033,293,o),
(983,293,qs),
(910,293,o),
(850,245,qs),
(785,193,o),
(749,97,q),
(1011,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
53 48 2 7 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 9 0 9 5 0 128 3 1 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
58 58 1 0 58 69 58 68 63 61 56 54 52 49 45 43 36 34 26 24 19 16 12 11 8 6 0 57 1 57 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1289;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(758,336,qs),
(820,280,o),
(820,186,qs),
(820,106,o),
(774,56,qs),
(724,0,o),
(644,0,qs),
(271,0,ls),
(195,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,227,ls),
(100,308,o),
(178,308,qs),
(187,308,ls),
(198,308,o),
(198,298,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,q),
(307,214,o),
(386,290,qs),
(484,384,o),
(616,384,qs),
(702,384,o)
);
},
{
closed = 1;
nodes = (
(674,97,o),
(721,150,o),
(721,191,qs),
(720,238,o),
(691,265,qs),
(660,293,o),
(610,293,qs),
(537,293,o),
(477,245,qs),
(412,193,o),
(376,97,q),
(638,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
21 1 4 1 1 76 0 2 0 6 0 2 6 128 8 1 0 0 6 1 0 6 105 9 7 3 3 1 1 4 98 5 1 4 4 24 4 78 32 32 1 0 32 43 32 42 37 35 25 22 20 18 17 15 12 9 5 4 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(926,0,l),
(894,0,ls),
(813,0,o),
(767,48,q),
(718,0,o),
(644,0,qs),
(271,0,ls),
(195,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,227,ls),
(100,308,o),
(178,308,qs),
(187,308,ls),
(198,308,o),
(198,298,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,q),
(307,214,o),
(386,290,qs),
(484,384,o),
(616,384,qs),
(702,384,o),
(757,336,qs),
(820,281,o),
(820,187,qs),
(820,176,ls),
(822,97,o),
(891,97,qs),
(926,97,l)
);
},
{
closed = 1;
nodes = (
(674,97,o),
(721,150,o),
(721,191,qs),
(720,238,o),
(691,265,qs),
(660,293,o),
(610,293,qs),
(537,293,o),
(477,245,qs),
(412,193,o),
(376,97,q),
(638,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
33 28 2 5 0 1 76 0 3 1 8 1 3 8 128 0 1 0 8 0 1 8 105 11 9 4 2 10 5 0 0 5 98 7 6 2 5 5 24 5 78 38 38 1 0 38 49 38 48 43 41 36 34 32 29 27 25 24 22 19 16 12 11 8 6 0 37 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 917;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,474,o),
(911,497,qs),
(911,519,o),
(942,550,o),
(964,550,qs),
(986,550,o),
(1016,519,o),
(1016,497,qs),
(1016,474,o),
(986,443,o),
(964,443,qs),
(942,443,o)
);
},
{
closed = 1;
nodes = (
(1299,0,l),
(1267,0,ls),
(1186,0,o),
(1140,48,q),
(1091,0,o),
(1017,0,qs),
(644,0,ls),
(602,0,o),
(568,14,q),
(554,-86,o),
(492,-146,qs),
(422,-214,o),
(312,-214,qs),
(208,-214,o),
(138,-152,qs),
(56,-79,o),
(56,44,qs),
(56,110,o),
(120,215,o),
(172,237,q),
(179,241,o),
(186,241,qs),
(201,241,o),
(200,228,qs),
(200,222,o),
(195,216,q),
(150,143,o),
(150,64,qs),
(149,-20,o),
(191,-69,qs),
(236,-122,o),
(312,-122,qs),
(376,-122,o),
(419,-82,qs),
(474,-31,o),
(474,64,qs),
(474,284,ls),
(474,366,o),
(552,366,qs),
(560,366,ls),
(571,366,o),
(571,356,qs),
(571,178,ls),
(571,140,o),
(609,97,o),
(642,97,q),
(680,214,o),
(759,290,qs),
(857,384,o),
(989,384,qs),
(1075,384,o),
(1130,336,qs),
(1193,281,o),
(1193,187,qs),
(1193,176,ls),
(1195,97,o),
(1264,97,qs),
(1299,97,l)
);
},
{
closed = 1;
nodes = (
(1047,97,o),
(1094,150,o),
(1094,191,qs),
(1093,238,o),
(1064,265,qs),
(1033,293,o),
(983,293,qs),
(910,293,o),
(850,245,qs),
(785,193,o),
(749,97,q),
(1011,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
65 60 2 9 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 11 2 11 7 2 128 5 1 3 0 11 7 3 11 105 0 6 0 8 6 8 101 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
70 70 13 12 1 0 70 81 70 80 75 73 68 66 64 61 57 55 48 46 38 36 31 28 24 23 20 18 12 69 13 69 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1289;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,474,o),
(537,496,qs),
(537,519,o),
(567,549,o),
(590,549,qs),
(612,549,o),
(642,519,o),
(642,496,qs),
(642,473,o),
(612,442,o),
(590,442,qs),
(568,442,o)
);
},
{
closed = 1;
nodes = (
(758,336,qs),
(820,280,o),
(820,186,qs),
(820,106,o),
(774,56,qs),
(724,0,o),
(644,0,qs),
(271,0,ls),
(195,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,227,ls),
(100,308,o),
(178,308,qs),
(187,308,ls),
(198,308,o),
(198,298,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,q),
(307,214,o),
(386,290,qs),
(484,384,o),
(616,384,qs),
(702,384,o)
);
},
{
closed = 1;
nodes = (
(674,97,o),
(721,150,o),
(721,191,qs),
(720,238,o),
(691,265,qs),
(660,293,o),
(610,293,qs),
(537,293,o),
(477,245,qs),
(412,193,o),
(376,97,q),
(638,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
33 1 6 3 1 76 0 4 2 8 2 4 8 128 11 1 2 0 8 3 2 8 105 10 1 0 0 1 97 0 1 1 23 77 12 9 5 3 3 3 6 98 7 1 6 6 24 6 78 44 44 13 12 1 0 44 55 44 54 49 47 37 34 32 30 29 27 24 21 17 16 12 43 13 43 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 869;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,474,o),
(537,496,qs),
(537,519,o),
(567,549,o),
(590,549,qs),
(612,549,o),
(642,519,o),
(642,496,qs),
(642,473,o),
(612,442,o),
(590,442,qs),
(568,442,o)
);
},
{
closed = 1;
nodes = (
(926,0,l),
(894,0,ls),
(813,0,o),
(767,48,q),
(718,0,o),
(644,0,qs),
(271,0,ls),
(195,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,227,ls),
(100,308,o),
(178,308,qs),
(187,308,ls),
(198,308,o),
(198,298,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,q),
(307,214,o),
(386,290,qs),
(484,384,o),
(616,384,qs),
(702,384,o),
(757,336,qs),
(820,281,o),
(820,187,qs),
(820,176,ls),
(822,97,o),
(891,97,qs),
(926,97,l)
);
},
{
closed = 1;
nodes = (
(674,97,o),
(721,150,o),
(721,191,qs),
(720,238,o),
(691,265,qs),
(660,293,o),
(610,293,qs),
(537,293,o),
(477,245,qs),
(412,193,o),
(376,97,q),
(638,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
45 40 2 7 2 1 76 0 5 3 10 3 5 10 128 0 3 0 10 2 3 10 105 12 1 0 0 1 97 0 1 1 23 77 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 50 50 13 12 1 0 50 61 50 60 55 53 48 46 44 41 39 37 36 34 31 28 24 23 20 18 12 49 13 49 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 917;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(814,0,l),
(782,0,ls),
(701,0,o),
(655,48,q),
(607,0,o),
(532,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(167,97,l),
(167,474,ls),
(167,556,o),
(245,556,qs),
(254,556,ls),
(265,556,o),
(265,546,qs),
(265,273,l),
(365,384,o),
(504,384,qs),
(590,384,o),
(645,336,qs),
(708,281,o),
(709,187,qs),
(709,176,ls),
(710,97,o),
(779,97,qs),
(814,97,l)
);
},
{
closed = 1;
nodes = (
(563,97,o),
(610,150,o),
(609,191,qs),
(609,238,o),
(549,293,o),
(499,293,qs),
(426,293,o),
(366,245,qs),
(301,193,o),
(265,97,q),
(526,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
9 1 0 6 27 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 32 32 1 0 32 42 32 41 37 35 30 28 26 23 18 16 14 11 8 6 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 804;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,336,qs),
(641,280,o),
(641,186,qs),
(641,106,o),
(596,56,qs),
(545,0,o),
(465,0,qs),
(-2,0,l),
(-2,97,l),
(100,97,l),
(100,474,ls),
(100,556,o),
(178,556,qs),
(186,556,ls),
(197,556,o),
(197,546,qs),
(197,273,l),
(297,384,o),
(437,384,qs),
(523,384,o)
);
},
{
closed = 1;
nodes = (
(495,97,o),
(542,150,o),
(542,191,qs),
(542,238,o),
(512,265,qs),
(482,293,o),
(431,293,qs),
(358,293,o),
(298,245,qs),
(233,193,o),
(197,97,q),
(459,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 2 4 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 20 20 1 0 20 31 20 30 25 23 13 11 10 9 7 4 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 690;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(747,0,l),
(715,0,ls),
(634,0,o),
(588,48,q),
(539,0,o),
(465,0,qs),
(-2,0,l),
(-2,97,l),
(100,97,l),
(100,474,ls),
(100,556,o),
(178,556,qs),
(186,556,ls),
(197,556,o),
(197,546,qs),
(197,273,l),
(297,384,o),
(437,384,qs),
(523,384,o),
(578,336,qs),
(641,281,o),
(641,187,qs),
(641,176,ls),
(643,97,o),
(712,97,qs),
(747,97,l)
);
},
{
closed = 1;
nodes = (
(495,97,o),
(542,150,o),
(542,191,qs),
(542,238,o),
(512,265,qs),
(482,293,o),
(431,293,qs),
(358,293,o),
(298,245,qs),
(233,193,o),
(197,97,q),
(459,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
9 1 0 6 21 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 26 26 1 0 26 37 26 36 31 29 24 22 20 18 17 16 14 11 8 6 0 25 1 25 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 738;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(814,0,l),
(782,0,ls),
(701,0,o),
(655,48,q),
(607,0,o),
(532,0,qs),
(62,0,ls),
(50,0,o),
(43,6,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(89,97,o),
(127,97,qs),
(167,97,l),
(167,474,ls),
(167,556,o),
(245,556,qs),
(254,556,ls),
(265,556,o),
(265,546,qs),
(265,273,l),
(365,384,o),
(504,384,qs),
(590,384,o),
(645,336,qs),
(708,281,o),
(709,187,qs),
(709,176,ls),
(710,97,o),
(779,97,qs),
(814,97,l)
);
},
{
closed = 1;
nodes = (
(425,474,o),
(425,496,qs),
(425,519,o),
(456,549,o),
(478,549,qs),
(500,549,o),
(530,519,o),
(530,496,qs),
(530,473,o),
(500,442,o),
(478,442,qs),
(456,442,o)
);
},
{
closed = 1;
nodes = (
(563,97,o),
(610,150,o),
(609,191,qs),
(609,238,o),
(549,293,o),
(499,293,qs),
(426,293,o),
(366,245,qs),
(301,193,o),
(265,97,q),
(526,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 8 27 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 8 0 1 8 105 11 1 6 6 2 97 7 1 2 2 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
44 44 33 32 1 0 44 54 44 53 49 47 39 37 32 43 33 43 30 28 26 23 18 16 14 11 8 6 0 31 1 31 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 804;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,336,qs),
(641,280,o),
(641,186,qs),
(641,106,o),
(596,56,qs),
(545,0,o),
(465,0,qs),
(-2,0,l),
(-2,97,l),
(100,97,l),
(100,474,ls),
(100,556,o),
(178,556,qs),
(186,556,ls),
(197,556,o),
(197,546,qs),
(197,273,l),
(297,384,o),
(437,384,qs),
(523,384,o)
);
},
{
closed = 1;
nodes = (
(358,474,o),
(358,496,qs),
(358,519,o),
(389,549,o),
(411,549,qs),
(433,549,o),
(463,519,o),
(463,496,qs),
(463,473,o),
(433,442,o),
(411,442,qs),
(389,442,o)
);
},
{
closed = 1;
nodes = (
(495,97,o),
(542,150,o),
(542,191,qs),
(542,238,o),
(512,265,qs),
(482,293,o),
(431,293,qs),
(358,293,o),
(298,245,qs),
(233,193,o),
(197,97,q),
(459,97,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 0 0 6 2 0 6 105 9 1 4 4 1 97 5 1 1 1 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 0 6 2 0 6 105 0 1 1 23 77 9 1 4 4 5 97 0 5 5 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
32 32 21 20 1 0 32 43 32 42 37 35 27 25 20 31 21 31 13 11 10 9 7 4 0 19 1 19 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 690;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(747,0,l),
(715,0,ls),
(634,0,o),
(588,48,q),
(539,0,o),
(465,0,qs),
(-2,0,l),
(-2,97,l),
(100,97,l),
(100,474,ls),
(100,556,o),
(178,556,qs),
(186,556,ls),
(197,556,o),
(197,546,qs),
(197,273,l),
(297,384,o),
(437,384,qs),
(523,384,o),
(578,336,qs),
(641,281,o),
(641,187,qs),
(641,176,ls),
(643,97,o),
(712,97,qs),
(747,97,l)
);
},
{
closed = 1;
nodes = (
(358,474,o),
(358,496,qs),
(358,519,o),
(389,549,o),
(411,549,qs),
(433,549,o),
(463,519,o),
(463,496,qs),
(463,473,o),
(433,442,o),
(411,442,qs),
(389,442,o)
);
},
{
closed = 1;
nodes = (
(495,97,o),
(542,150,o),
(542,191,qs),
(542,238,o),
(512,265,qs),
(482,293,o),
(431,293,qs),
(358,293,o),
(298,245,qs),
(233,193,o),
(197,97,q),
(459,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 8 21 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 8 0 1 8 105 11 1 6 6 2 97 7 1 2 2 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
38 38 27 26 1 0 38 49 38 48 43 41 33 31 26 37 27 37 24 22 20 18 17 16 14 11 8 6 0 25 1 25 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 738;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,-36,qs),
(152,-70,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-48,o),
(83,4,qs),
(124,67,o),
(202,87,q),
(121,193,ls),
(102,217,o),
(101,253,qs),
(100,305,o),
(158,343,qs),
(222,384,o),
(308,384,qs),
(382,385,o),
(442,353,qs),
(516,313,o),
(515,253,qs),
(514,218,o),
(495,193,qs),
(421,97,l),
(612,97,l),
(612,0,l),
(381,0,ls),
(335,0,o),
(309,18,q),
(291,3,o),
(263,-1,qs),
(215,-5,o)
);
},
{
closed = 1;
nodes = (
(216,261,o),
(216,238,qs),
(216,226,o),
(230,208,qs),
(303,112,ls),
(308,105,o),
(313,112,qs),
(386,208,ls),
(400,226,o),
(400,238,qs),
(400,261,o),
(347,293,o),
(308,293,qs),
(269,293,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
21 2 2 0 1 1 76 0 2 6 1 5 1 2 5 105 0 4 0 3 4 3 101 0 1 1 0 95 0 0 0 24 0 78 50 49 49 62 50 62 42 45 38 17 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,97,o),
(472,57,o),
(472,25,qs),
(472,17,ls),
(472,6,o),
(465,0,o),
(454,0,qs),
(-2,0,l),
(-2,97,l),
(120,97,l),
(91,141,o),
(90,194,qs),
(90,272,o),
(139,325,qs),
(194,384,o),
(280,384,qs),
(340,384,o),
(418,330,o),
(419,288,qs),
(419,263,o),
(403,263,qs),
(397,263,o),
(388,268,qs),
(345,293,o),
(295,293,qs),
(247,293,o),
(190,238,o),
(189,193,qs),
(189,151,o),
(241,97,o),
(281,97,qs),
(388,97,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 25 23 22 21 16 14 11 9 7 5 0 31 1 30 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 515;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(182,97,l),
(109,193,ls),
(89,218,o),
(89,253,qs),
(87,305,o),
(146,343,qs),
(209,384,o),
(295,384,qs),
(369,385,o),
(429,353,qs),
(503,313,o),
(502,253,qs),
(501,218,o),
(481,193,qs),
(408,97,l),
(599,97,l),
(599,0,l),
(369,0,ls),
(322,0,o),
(295,18,q),
(268,0,o),
(221,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(295,105,o),
(300,112,qs),
(374,208,ls),
(387,225,o),
(387,238,qs),
(387,261,o),
(334,293,o),
(295,293,qs),
(256,293,o),
(203,261,o),
(203,238,qs),
(203,225,o),
(216,208,qs),
(290,112,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
2 1 0 2 1 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 30 28 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,472,o),
(255,494,qs),
(255,517,o),
(286,548,o),
(308,548,qs),
(330,548,o),
(360,517,o),
(360,494,qs),
(360,472,o),
(330,441,o),
(308,441,qs),
(286,441,o)
);
},
{
closed = 1;
nodes = (
(185,-36,qs),
(152,-70,o),
(153,-119,qs),
(153,-167,o),
(183,-199,qs),
(220,-238,o),
(289,-239,qs),
(341,-241,o),
(381,-229,qs),
(408,-222,o),
(443,-203,qs),
(455,-197,o),
(462,-200,qs),
(473,-204,o),
(470,-218,qs),
(458,-276,o),
(395,-307,qs),
(343,-332,o),
(275,-331,qs),
(179,-330,o),
(117,-276,qs),
(48,-215,o),
(48,-116,qs),
(48,-48,o),
(83,4,qs),
(124,67,o),
(202,87,q),
(121,193,ls),
(102,217,o),
(101,253,qs),
(100,305,o),
(158,343,qs),
(222,384,o),
(308,384,qs),
(382,385,o),
(442,353,qs),
(516,313,o),
(515,253,qs),
(514,218,o),
(495,193,qs),
(421,97,l),
(612,97,l),
(612,0,l),
(381,0,ls),
(335,0,o),
(309,18,q),
(291,3,o),
(263,-1,qs),
(215,-5,o)
);
},
{
closed = 1;
nodes = (
(216,261,o),
(216,238,qs),
(216,226,o),
(230,208,qs),
(303,112,ls),
(308,105,o),
(313,112,qs),
(386,208,ls),
(400,226,o),
(400,238,qs),
(400,261,o),
(347,293,o),
(308,293,qs),
(269,293,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 14 2 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 9 1 7 3 4 7 105 0 6 0 5 6 5 101 8 1 0 0 1 97 0 1 1 23 77 0 3 3 2 95 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 4 1 0 105 0 4 9 1 7 3 4 7 105 0 6 0 5 6 5 101 0 3 3 2 95 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
62 61 1 0 61 74 62 74 54 52 42 40 27 25 19 18 17 15 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,473,o),
(219,495,qs),
(219,517,o),
(250,548,o),
(272,548,qs),
(294,548,o),
(324,518,o),
(324,495,qs),
(324,472,o),
(294,441,o),
(272,441,qs),
(250,441,o)
);
},
{
closed = 1;
nodes = (
(426,97,o),
(472,57,o),
(472,25,qs),
(472,17,ls),
(472,6,o),
(465,0,o),
(454,0,qs),
(-2,0,l),
(-2,97,l),
(120,97,l),
(91,141,o),
(90,194,qs),
(90,272,o),
(139,325,qs),
(194,384,o),
(280,384,qs),
(340,384,o),
(418,330,o),
(419,288,qs),
(419,263,o),
(403,263,qs),
(397,263,o),
(388,268,qs),
(345,293,o),
(295,293,qs),
(247,293,o),
(190,238,o),
(189,193,qs),
(189,151,o),
(241,97,o),
(281,97,qs),
(388,97,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 8 1 0 0 1 97 0 1 1 23 77 6 9 2 2 2 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 37 35 34 33 28 26 23 21 19 17 12 43 13 42 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 515;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,517,o),
(348,494,qs),
(348,472,o),
(318,441,o),
(296,441,qs),
(274,441,o),
(243,472,o),
(243,494,qs),
(243,517,o),
(274,548,o),
(296,548,qs),
(318,548,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(182,97,l),
(109,193,ls),
(89,218,o),
(89,253,qs),
(87,305,o),
(146,343,qs),
(209,384,o),
(295,384,qs),
(369,385,o),
(429,353,qs),
(503,313,o),
(502,253,qs),
(501,218,o),
(481,193,qs),
(408,97,l),
(599,97,l),
(599,0,l),
(369,0,ls),
(322,0,o),
(295,18,q),
(268,0,o),
(221,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(295,105,o),
(300,112,qs),
(374,208,ls),
(387,225,o),
(387,238,qs),
(387,261,o),
(334,293,o),
(295,293,qs),
(256,293,o),
(203,261,o),
(203,238,qs),
(203,225,o),
(216,208,qs),
(290,112,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 2 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 7 4 5 7 105 0 1 1 0 97 8 1 0 0 23 77 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 42 40 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,476,o),
(582,498,qs),
(582,521,o),
(613,552,o),
(635,552,qs),
(657,552,o),
(687,521,o),
(687,498,qs),
(687,476,o),
(657,444,o),
(635,444,qs),
(613,444,o)
);
},
{
closed = 1;
nodes = (
(914,0,l),
(716,0,ls),
(659,0,o),
(634,21,q),
(608,0,o),
(551,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(494,97,l),
(455,141,o),
(455,204,qs),
(454,272,o),
(497,322,qs),
(548,384,o),
(634,384,qs),
(708,384,o),
(758,336,qs),
(813,283,o),
(812,204,qs),
(812,141,o),
(773,97,q),
(914,97,l)
);
},
{
closed = 1;
nodes = (
(712,173,o),
(712,206,qs),
(711,244,o),
(667,293,o),
(634,293,qs),
(600,293,o),
(556,244,o),
(555,206,qs),
(555,173,o),
(600,114,o),
(634,103,q),
(667,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
47 1 5 3 1 76 0 4 2 8 2 4 8 128 0 2 0 8 3 2 8 105 9 1 0 0 1 97 0 1 1 23 77 10 7 2 3 3 5 96 6 1 5 5 24 5 78 12 12 1 0 59 57 12 51 12 51 50 48 46 43 34 33 26 24 19 17 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 905;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,476,o),
(215,498,qs),
(215,521,o),
(246,552,o),
(268,552,qs),
(290,552,o),
(320,521,o),
(320,498,qs),
(320,476,o),
(290,444,o),
(268,444,qs),
(246,444,o)
);
},
{
closed = 1;
nodes = (
(386,338,qs),
(444,284,o),
(444,192,qs),
(444,113,o),
(400,60,qs),
(350,1,o),
(269,0,qs),
(-2,0,l),
(-2,97,l),
(112,97,l),
(89,134,o),
(88,192,qs),
(88,272,o),
(133,325,qs),
(183,384,o),
(266,384,qs),
(337,384,o)
);
},
{
closed = 1;
nodes = (
(344,152,o),
(344,194,qs),
(344,237,o),
(300,293,o),
(266,293,qs),
(233,293,o),
(188,236,o),
(188,194,qs),
(188,153,o),
(233,97,o),
(266,97,qs),
(300,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
8 1 2 0 6 3 2 6 105 7 1 0 0 1 97 0 1 1 23 77 9 5 2 3 3 4 95 0 4 4 24 4 78 30 29 13 12 1 0 36 34 29 40 30 40 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,476,o),
(214,498,qs),
(214,521,o),
(245,552,o),
(267,552,qs),
(289,552,o),
(319,521,o),
(319,498,qs),
(319,476,o),
(289,444,o),
(267,444,qs),
(245,444,o)
);
},
{
closed = 1;
nodes = (
(546,0,l),
(347,0,ls),
(290,0,o),
(265,21,q),
(240,0,o),
(183,0,qs),
(-2,0,l),
(-2,97,l),
(126,97,l),
(86,141,o),
(86,204,qs),
(86,272,o),
(128,322,qs),
(180,384,o),
(265,384,qs),
(339,384,o),
(390,336,qs),
(445,283,o),
(444,204,qs),
(444,141,o),
(405,97,q),
(546,97,l)
);
},
{
closed = 1;
nodes = (
(344,173,o),
(344,206,qs),
(343,244,o),
(299,293,o),
(265,293,qs),
(231,293,o),
(187,244,o),
(187,206,qs),
(187,173,o),
(232,114,o),
(265,103,q),
(299,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
29 1 4 3 1 76 0 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 41 39 12 33 12 33 32 30 28 26 25 24 19 17 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,472,o),
(344,494,qs),
(344,515,o),
(373,544,o),
(394,544,qs),
(414,544,o),
(444,515,o),
(444,494,qs),
(444,472,o),
(415,443,o),
(394,443,qs),
(373,443,o)
);
},
{
closed = 1;
nodes = (
(464,472,o),
(464,494,qs),
(464,515,o),
(493,544,o),
(514,544,qs),
(535,544,o),
(564,515,o),
(564,494,qs),
(564,472,o),
(535,443,o),
(514,443,qs),
(493,443,o)
);
},
{
closed = 1;
nodes = (
(135,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(193,-67,qs),
(247,-122,o),
(341,-122,qs),
(411,-122,o),
(505,-59,o),
(523,0,q),
(453,0,ls),
(382,0,o),
(332,46,qs),
(275,100,o),
(275,185,qs),
(275,272,o),
(321,326,qs),
(370,384,o),
(453,384,qs),
(568,384,o),
(610,279,qs),
(638,214,o),
(634,97,q),
(737,97,l),
(737,0,l),
(624,0,l),
(601,-97,o),
(536,-152,qs),
(461,-215,o),
(341,-214,qs),
(215,-214,o)
);
},
{
closed = 1;
nodes = (
(533,99,o),
(533,105,qs),
(533,111,o),
(534,114,q),
(537,202,o),
(520,243,qs),
(500,293,o),
(454,293,qs),
(419,293,o),
(375,235,o),
(375,189,qs),
(375,150,o),
(420,97,o),
(454,97,qs),
(532,97,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
76 1 6 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 12 6 12 10 6 128 0 7 0 12 10 7 12 105 0 9 15 1 4 9 4 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 16 11 2 6 6 5 95 8 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 10 12 6 12 10 6 128 3 1 1 14 2 13 3 0 7 1 0 105 0 7 0 12 10 7 12 105 0 9 15 1 4 9 4 101 16 11 2 6 6 5 95 8 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
67 66 25 24 13 12 1 0 73 71 66 80 67 80 57 56 48 46 44 42 36 34 31 30 29 28 24 65 25 65 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 727;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,472,o),
(156,494,qs),
(156,515,o),
(185,544,o),
(206,544,qs),
(227,544,o),
(256,515,o),
(256,494,qs),
(256,472,o),
(227,443,o),
(206,443,qs),
(185,443,o)
);
},
{
closed = 1;
nodes = (
(276,472,o),
(276,494,qs),
(276,515,o),
(305,544,o),
(326,544,qs),
(347,544,o),
(376,515,o),
(376,494,qs),
(376,472,o),
(347,443,o),
(326,443,qs),
(305,443,o)
);
},
{
closed = 1;
nodes = (
(386,338,qs),
(444,284,o),
(444,192,qs),
(444,113,o),
(400,60,qs),
(350,1,o),
(269,0,qs),
(-2,0,l),
(-2,97,l),
(112,97,l),
(89,134,o),
(88,192,qs),
(88,272,o),
(133,325,qs),
(183,384,o),
(266,384,qs),
(337,384,o)
);
},
{
closed = 1;
nodes = (
(344,152,o),
(344,194,qs),
(344,237,o),
(300,293,o),
(266,293,qs),
(233,293,o),
(188,236,o),
(188,194,qs),
(188,153,o),
(233,97,o),
(266,97,qs),
(300,97,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
11 1 4 0 8 5 4 8 105 10 2 9 3 0 0 1 97 3 1 1 1 23 77 12 7 2 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 11 1 4 0 8 5 4 8 105 12 7 2 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
42 41 25 24 13 12 1 0 48 46 41 52 42 52 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 492;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,472,o),
(157,494,qs),
(157,515,o),
(186,544,o),
(207,544,qs),
(228,544,o),
(257,515,o),
(257,494,qs),
(257,472,o),
(228,443,o),
(207,443,qs),
(186,443,o)
);
},
{
closed = 1;
nodes = (
(277,472,o),
(277,494,qs),
(277,515,o),
(307,544,o),
(327,544,qs),
(348,544,o),
(377,515,o),
(377,494,qs),
(377,472,o),
(348,443,o),
(327,443,qs),
(306,443,o)
);
},
{
closed = 1;
nodes = (
(546,0,l),
(347,0,ls),
(290,0,o),
(265,21,q),
(240,0,o),
(183,0,qs),
(-2,0,l),
(-2,97,l),
(126,97,l),
(86,141,o),
(86,204,qs),
(86,272,o),
(128,322,qs),
(180,384,o),
(265,384,qs),
(339,384,o),
(390,336,qs),
(445,283,o),
(444,204,qs),
(444,141,o),
(405,97,q),
(546,97,l)
);
},
{
closed = 1;
nodes = (
(344,173,o),
(344,206,qs),
(343,244,o),
(299,293,o),
(265,293,qs),
(231,293,o),
(187,244,o),
(187,206,qs),
(187,173,o),
(232,114,o),
(265,103,q),
(299,114,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 6 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 0 9 5 4 9 105 11 2 10 3 0 0 1 97 3 1 1 1 23 77 12 8 2 5 5 6 95 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
24 24 13 12 1 0 53 51 24 45 24 45 44 42 40 38 37 36 31 29 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(774,0,ls),
(697,0,o),
(652,44,q),
(607,0,o),
(530,0,qs),
(235,0,ls),
(157,0,o),
(108,36,qs),
(48,78,o),
(48,157,qs),
(48,204,o),
(101,285,o),
(144,303,q),
(145,304,l),
(155,308,o),
(159,308,qs),
(172,308,o),
(172,296,qs),
(172,289,o),
(166,279,qs),
(133,233,o),
(133,189,qs),
(133,145,o),
(188,97,o),
(239,97,qs),
(532,97,ls),
(603,97,o),
(603,180,qs),
(603,474,ls),
(603,556,o),
(681,556,qs),
(690,556,ls),
(701,556,o),
(701,546,qs),
(701,178,ls),
(701,140,o),
(738,97,o),
(771,97,qs),
(806,97,l)
);
},
{
closed = 1;
nodes = (
(282,268,qs),
(279,286,o),
(299,314,o),
(320,319,q),
(304,342,o),
(304,367,qs),
(304,405,o),
(353,456,o),
(390,456,qs),
(420,457,o),
(460,428,o),
(461,406,qs),
(461,392,o),
(454,393,qs),
(448,394,o),
(439,399,qs),
(420,408,o),
(400,408,qs),
(355,408,o),
(355,367,qs),
(355,348,o),
(382,323,o),
(402,323,qs),
(442,323,ls),
(482,323,o),
(482,287,qs),
(482,283,ls),
(482,274,o),
(474,274,qs),
(348,274,ls),
(318,274,o),
(297,266,qs),
(291,263,o),
(288,263,qs),
(283,263,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
70 1 3 8 40 1 0 6 35 1 4 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
70 1 3 7 40 1 0 6 35 1 4 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 9 0 8 3 9 8 105 7 1 3 0 6 0 3 6 103 0 1 1 23 77 2 10 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 7 6 7 3 6 128 0 9 0 8 7 9 8 105 0 7 0 6 0 7 6 103 0 1 1 23 77 2 10 2 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 66 64 57 55 52 49 46 43 38 36 34 31 22 21 14 11 8 5 0 39 1 39 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,366,o),
(453,323,qs),
(512,271,o),
(512,179,qs),
(512,104,o),
(466,54,qs),
(415,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(369,97,o),
(412,146,o),
(412,186,qs),
(412,224,o),
(368,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(397,489,o),
(352,461,qs),
(206,366,l),
(338,366,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 3 74 4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 31 0 30 33 36 60 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 561;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(619,0,l),
(586,0,ls),
(504,0,o),
(460,48,q),
(409,0,o),
(338,0,qs),
(-2,0,l),
(-2,97,l),
(335,97,ls),
(369,97,o),
(412,146,o),
(412,186,qs),
(412,224,o),
(368,274,o),
(335,274,qs),
(144,274,ls),
(81,274,o),
(81,324,qs),
(81,346,ls),
(81,381,o),
(104,396,qs),
(345,553,ls),
(352,557,o),
(355,555,qs),
(367,547,o),
(373,531,q),
(397,489,o),
(352,461,qs),
(206,366,l),
(338,366,ls),
(405,366,o),
(453,324,qs),
(512,273,o),
(512,182,qs),
(512,176,ls),
(514,97,o),
(583,97,qs),
(619,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
33 1 4 0 1 76 13 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 36 34 32 30 29 27 23 20 8 6 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,474,ls),
(466,556,o),
(544,556,qs),
(552,556,ls),
(563,556,o),
(563,546,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(669,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
37 1 5 0 1 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 40 38 34 32 25 23 15 13 8 5 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,474,ls),
(100,556,o),
(178,556,qs),
(187,556,ls),
(198,556,o),
(198,546,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 1 23 77 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(665,0,l),
(633,0,ls),
(561,0,o),
(516,39,q),
(471,-10,o),
(387,-10,qs),
(303,-10,o),
(216,36,q),
(201,36,ls),
(137,34,o),
(137,-46,qs),
(137,-207,ls),
(137,-288,o),
(59,-288,qs),
(50,-288,ls),
(39,-288,o),
(39,-278,qs),
(39,-44,ls),
(39,107,o),
(166,130,q),
(173,140,o),
(187,169,qs),
(193,182,o),
(196,188,qs),
(243,286,o),
(268,319,qs),
(317,384,o),
(386,384,qs),
(468,384,o),
(515,323,qs),
(559,265,o),
(560,175,qs),
(560,173,ls),
(561,137,o),
(599,97,o),
(630,97,qs),
(665,97,l)
);
},
{
closed = 1;
nodes = (
(459,173,qs),
(459,230,o),
(423,293,o),
(391,293,qs),
(369,293,o),
(328,237,o),
(293,161,qs),
(278,128,o),
(271,117,q),
(337,83,o),
(392,84,qs),
(459,87,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
39 1 0 7 32 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
39 1 0 7 32 1 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 4 0 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 6 8 3 0 0 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 4 6 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 4 97 5 1 4 4 24 77 9 1 6 6 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 5 97 0 5 5 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 1 6 0 4 2 6 4 105 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
38 37 1 0 45 43 37 48 38 48 35 33 31 29 28 26 23 20 9 7 0 36 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 656;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,322,qs),
(471,262,o),
(471,172,qs),
(471,90,o),
(430,43,qs),
(385,-10,o),
(299,-10,qs),
(212,-10,o),
(128,35,q),
(88,-1,o),
(12,-1,qs),
(-2,-1,l),
(-2,97,l),
(9,97,ls),
(46,97,o),
(80,128,o),
(107,188,qs),
(154,285,o),
(179,319,qs),
(228,384,o),
(297,384,qs),
(380,384,o)
);
},
{
closed = 1;
nodes = (
(370,173,qs),
(370,230,o),
(334,293,o),
(301,293,qs),
(279,293,o),
(237,235,o),
(205,161,qs),
(189,128,o),
(182,117,q),
(248,83,o),
(303,84,qs),
(370,87,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
24 1 1 5 12 1 2 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
24 1 1 5 12 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 1 0 0 5 1 0 5 105 7 4 2 1 1 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 3 1 2 2 24 77 7 1 4 4 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 5 1 0 5 105 7 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
23 22 1 0 30 28 22 33 23 33 15 13 11 9 8 6 0 21 1 21 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,0,l),
(544,0,ls),
(472,0,o),
(427,39,q),
(382,-10,o),
(299,-10,qs),
(212,-10,o),
(128,35,q),
(88,-1,o),
(12,-1,qs),
(-2,-1,l),
(-2,97,l),
(9,97,ls),
(46,97,o),
(80,128,o),
(107,188,qs),
(154,285,o),
(179,319,qs),
(228,384,o),
(297,384,qs),
(379,384,o),
(426,323,qs),
(470,265,o),
(471,175,qs),
(471,173,ls),
(472,137,o),
(510,97,o),
(541,97,qs),
(576,97,l)
);
},
{
closed = 1;
nodes = (
(370,173,qs),
(370,230,o),
(334,293,o),
(301,293,qs),
(279,293,o),
(237,235,o),
(205,161,qs),
(189,128,o),
(182,117,q),
(248,83,o),
(303,84,qs),
(370,87,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
31 1 0 7 24 20 2 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
31 1 0 7 24 20 2 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 7 0 1 7 105 9 6 2 8 4 0 0 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 4 2 3 3 24 77 9 1 6 6 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
30 29 1 0 37 35 29 40 30 40 27 25 23 21 19 17 16 14 9 7 0 28 1 28 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,360,o),
(255,382,qs),
(255,405,o),
(286,436,o),
(308,436,qs),
(330,436,o),
(360,405,o),
(360,382,qs),
(360,360,o),
(330,328,o),
(308,328,qs),
(286,328,o)
);
},
{
closed = 1;
nodes = (
(665,0,l),
(636,0,ls),
(592,0,o),
(560,14,q),
(546,-85,o),
(484,-146,qs),
(414,-214,o),
(304,-214,qs),
(200,-214,o),
(130,-152,qs),
(48,-79,o),
(48,44,qs),
(48,110,o),
(112,215,o),
(164,237,q),
(171,241,o),
(178,241,qs),
(193,241,o),
(192,228,qs),
(192,222,o),
(187,216,q),
(142,143,o),
(142,64,qs),
(141,-20,o),
(183,-69,qs),
(228,-122,o),
(304,-122,qs),
(368,-122,o),
(411,-82,qs),
(466,-31,o),
(466,64,qs),
(466,284,ls),
(466,366,o),
(544,366,qs),
(552,366,ls),
(563,366,o),
(563,356,qs),
(563,178,ls),
(563,140,o),
(601,97,o),
(634,97,qs),
(665,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
49 1 7 2 1 76 0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 52 50 46 44 37 35 27 25 20 17 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 656;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,502,o),
(204,479,qs),
(204,457,o),
(174,426,o),
(152,426,qs),
(130,426,o),
(99,457,o),
(99,479,qs),
(99,502,o),
(130,533,o),
(152,533,qs),
(174,533,o)
);
},
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,457,o),
(99,479,qs),
(99,502,o),
(130,533,o),
(152,533,qs),
(174,533,o),
(204,502,o),
(204,479,qs),
(204,457,o),
(174,426,o),
(152,426,qs),
(130,426,o)
);
},
{
closed = 1;
nodes = (
(304,0,l),
(271,0,ls),
(194,0,o),
(149,44,q),
(104,0,o),
(27,0,qs),
(-2,0,l),
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,140,o),
(236,97,o),
(269,97,qs),
(304,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
29 1 5 2 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 17 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,0,l),
(476,0,ls),
(399,0,o),
(354,42,q),
(305,-10,o),
(226,-10,qs),
(155,-10,o),
(106,33,qs),
(48,85,o),
(48,178,qs),
(48,259,o),
(94,310,qs),
(143,366,o),
(226,366,qs),
(305,366,l),
(305,371,ls),
(305,402,o),
(347,438,o),
(382,438,qs),
(391,438,ls),
(402,438,o),
(402,428,qs),
(402,180,ls),
(402,97,o),
(473,97,qs),
(508,97,l)
);
},
{
closed = 1;
nodes = (
(304,133,o),
(305,178,qs),
(305,274,l),
(227,274,ls),
(191,274,o),
(148,222,o),
(148,178,qs),
(148,134,o),
(191,82,o),
(226,82,qs),
(262,82,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 98 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 33 31 26 36 27 36 24 22 20 18 12 9 7 4 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,337,qs),
(640,285,o),
(640,188,qs),
(640,109,o),
(596,58,qs),
(547,0,o),
(464,0,qs),
(330,0,ls),
(277,0,o),
(254,17,q),
(230,0,o),
(177,0,qs),
(-2,0,l),
(-2,97,l),
(137,97,l),
(94,140,o),
(94,202,qs),
(94,267,o),
(131,312,q),
(62,328,o),
(59,398,qs),
(59,403,ls),
(59,416,o),
(73,412,qs),
(109,401,o),
(146,396,qs),
(179,389,o),
(257,388,qs),
(269,388,o),
(305,387,qs),
(389,384,o),
(420,384,qs),
(517,383,o)
);
},
{
closed = 1;
nodes = (
(499,97,o),
(541,147,o),
(541,190,qs),
(541,290,o),
(415,295,qs),
(411,295,o),
(402,295,qs),
(392,296,o),
(387,296,q),
(412,255,o),
(412,202,qs),
(412,140,o),
(370,97,q),
(464,97,ls)
);
},
{
closed = 1;
nodes = (
(182,244,o),
(182,207,qs),
(182,170,o),
(221,116,o),
(254,107,q),
(286,116,o),
(325,170,o),
(325,207,qs),
(325,245,o),
(285,294,o),
(254,294,qs),
(223,294,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
13 1 4 0 53 1 1 4 22 1 2 1 3 76 7 1 0 9 6 2 4 1 0 4 105 8 5 2 1 1 2 95 3 1 2 2 24 2 78 48 47 33 33 5 0 47 58 48 58 33 46 33 45 42 37 26 23 21 19 18 17 0 32 5 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(745,0,l),
(713,0,ls),
(633,0,o),
(587,47,q),
(539,0,o),
(464,0,qs),
(330,0,ls),
(277,0,o),
(254,17,q),
(230,0,o),
(177,0,qs),
(-2,0,l),
(-2,97,l),
(137,97,l),
(94,140,o),
(94,202,qs),
(94,267,o),
(131,312,q),
(62,328,o),
(59,398,qs),
(59,403,ls),
(59,416,o),
(73,412,qs),
(109,401,o),
(146,396,qs),
(179,389,o),
(257,388,qs),
(269,388,o),
(305,387,qs),
(389,384,o),
(420,384,qs),
(517,383,o),
(574,337,qs),
(640,285,o),
(640,188,qs),
(640,187,l),
(640,176,ls),
(641,97,o),
(710,97,qs),
(745,97,l)
);
},
{
closed = 1;
nodes = (
(499,97,o),
(541,147,o),
(541,190,qs),
(541,290,o),
(415,295,qs),
(411,295,o),
(402,295,qs),
(392,296,o),
(387,296,q),
(412,255,o),
(412,202,qs),
(412,140,o),
(370,97,q),
(464,97,ls)
);
},
{
closed = 1;
nodes = (
(182,244,o),
(182,207,qs),
(182,170,o),
(221,116,o),
(254,107,q),
(286,116,o),
(325,170,o),
(325,207,qs),
(325,245,o),
(285,294,o),
(254,294,qs),
(223,294,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
21 1 6 1 60 1 0 6 35 30 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 55 54 40 40 1 0 54 65 55 65 40 53 40 52 49 44 38 36 34 31 29 27 26 25 13 7 0 39 1 39 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,0,l),
(402,0,l),
(394,-70,o),
(369,-118,qs),
(346,-164,o),
(264,-215,o),
(212,-214,qs),
(150,-214,o),
(111,-183,qs),
(77,-158,o),
(69,-121,qs),
(64,-103,o),
(82,-103,qs),
(87,-103,o),
(97,-107,qs),
(148,-123,o),
(195,-122,qs),
(242,-121,o),
(300,-57,o),
(306,0,q),
(226,0,ls),
(155,0,o),
(105,46,qs),
(48,100,o),
(48,185,qs),
(48,272,o),
(93,326,qs),
(142,384,o),
(225,384,qs),
(342,384,o),
(384,279,qs),
(404,230,o),
(407,142,qs),
(408,118,o),
(407,97,q),
(511,97,l)
);
},
{
closed = 1;
nodes = (
(311,200,o),
(292,244,qs),
(272,293,o),
(225,293,qs),
(190,293,o),
(149,237,o),
(149,191,qs),
(149,151,o),
(193,97,o),
(226,97,qs),
(306,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 3 1 2 1 3 2 128 0 0 0 8 6 0 8 105 0 2 0 4 2 4 101 10 7 9 3 6 6 1 95 5 1 1 1 24 1 78 37 36 0 0 43 41 36 46 37 46 0 35 0 35 20 36 34 34 38 37 11 7 28 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,6,l),
(627,2,l),
(613,-83,o),
(549,-141,qs),
(468,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(653,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 32 30 22 21 13 11 8 6 0 37 1 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,6,l),
(627,2,l),
(613,-83,o),
(549,-141,qs),
(468,-214,o),
(340,-214,qs),
(215,-214,o),
(134,-144,qs),
(48,-68,o),
(50,46,qs),
(51,109,o),
(113,216,o),
(162,240,qs),
(170,244,o),
(176,244,qs),
(190,244,o),
(189,231,qs),
(189,225,o),
(184,217,qs),
(143,146,o),
(144,64,qs),
(145,-17,o),
(192,-67,qs),
(246,-122,o),
(340,-122,qs),
(405,-122,o),
(452,-94,qs),
(507,-62,o),
(527,0,q),
(415,0,ls),
(404,0,o),
(397,6,o),
(397,17,qs),
(397,25,ls),
(397,57,o),
(443,97,o),
(480,97,qs),
(653,97,l)
);
},
{
closed = 1;
nodes = (
(329,-301,o),
(329,-322,qs),
(329,-343,o),
(300,-373,o),
(279,-373,qs),
(258,-373,o),
(229,-343,o),
(229,-322,qs),
(229,-301,o),
(258,-271,o),
(279,-271,qs),
(300,-271,o)
);
},
{
closed = 1;
nodes = (
(449,-301,o),
(449,-322,qs),
(449,-343,o),
(420,-373,o),
(400,-373,qs),
(379,-373,o),
(349,-343,o),
(349,-322,qs),
(349,-301,o),
(379,-271,o),
(400,-271,qs),
(420,-271,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
36 1 1 0 1 76 0 3 0 3 133 0 2 0 4 5 2 4 105 11 7 10 3 5 8 1 6 5 6 101 9 1 0 0 1 95 0 1 1 24 1 78 51 50 39 38 1 0 57 55 50 61 51 61 45 43 38 49 39 49 32 30 22 21 13 11 8 6 0 37 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(178,366,qs),
(187,366,ls),
(198,366,o),
(198,356,qs),
(198,178,ls),
(198,101,o),
(159,54,qs),
(113,0,o),
(27,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(84,-96,o),
(84,-117,qs),
(84,-138,o),
(55,-168,o),
(34,-168,qs),
(13,-168,o),
(-16,-138,o),
(-16,-117,qs),
(-16,-96,o),
(13,-66,o),
(34,-66,qs),
(55,-66,o)
);
},
{
closed = 1;
nodes = (
(204,-96,o),
(204,-117,qs),
(204,-138,o),
(175,-168,o),
(155,-168,qs),
(133,-168,o),
(104,-138,o),
(104,-117,qs),
(104,-96,o),
(133,-66,o),
(155,-66,qs),
(175,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(271,0,ls),
(193,0,o),
(149,44,q),
(104,0,o),
(26,0,qs),
(-3,0,l),
(-3,97,l),
(29,97,ls),
(100,97,o),
(100,180,qs),
(100,284,ls),
(100,366,o),
(177,366,qs),
(186,366,ls),
(197,366,o),
(197,356,qs),
(197,178,ls),
(197,140,o),
(235,97,o),
(268,97,qs),
(303,97,l)
);
},
{
closed = 1;
nodes = (
(93,-96,o),
(93,-117,qs),
(93,-138,o),
(64,-168,o),
(43,-168,qs),
(22,-168,o),
(-7,-138,o),
(-7,-117,qs),
(-7,-96,o),
(22,-66,o),
(43,-66,qs),
(64,-66,o)
);
},
{
closed = 1;
nodes = (
(213,-96,o),
(213,-117,qs),
(213,-138,o),
(184,-168,o),
(164,-168,qs),
(142,-168,o),
(113,-138,o),
(113,-117,qs),
(113,-96,o),
(142,-66,o),
(164,-66,qs),
(184,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 3 0 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 23 22 1 0 41 39 34 45 35 45 29 27 22 33 23 33 20 18 16 14 13 11 8 5 0 21 1 21 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,538,qs),
(46,537,o),
(44,534,qs),
(39,526,o),
(36,526,qs),
(32,526,o),
(31,529,q),
(23,540,o),
(23,556,qs),
(23,576,o),
(49,601,o),
(69,600,qs),
(83,600,o),
(116,586,qs),
(155,569,o),
(166,569,qs),
(179,569,o),
(191,586,qs),
(192,587,o),
(194,590,qs),
(199,598,o),
(202,598,qs),
(206,598,o),
(207,595,q),
(215,584,o),
(215,568,qs),
(215,548,o),
(189,523,o),
(170,524,qs),
(154,524,o),
(122,538,qs),
(83,554,o),
(72,554,qs),
(59,554,o)
);
},
{
closed = 1;
nodes = (
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,101,o),
(417,54,qs),
(372,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,q),
(415,556,o),
(436,556,qs),
(445,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 2 3 28 1 1 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 8 1 0 1 3 0 105 0 1 1 2 97 9 4 2 2 2 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 8 1 0 1 3 0 105 9 1 4 4 23 77 0 1 1 2 97 0 2 2 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 8 1 0 1 3 0 105 0 2 0 1 5 2 1 105 9 1 4 4 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
35 34 1 0 61 58 54 52 43 41 34 67 35 66 22 20 18 16 5 3 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,538,qs),
(46,537,o),
(44,534,qs),
(39,526,o),
(36,526,qs),
(32,526,o),
(31,529,q),
(23,540,o),
(23,556,qs),
(23,576,o),
(49,601,o),
(69,600,qs),
(83,600,o),
(116,586,qs),
(155,569,o),
(166,569,qs),
(179,569,o),
(191,586,qs),
(192,587,o),
(194,590,qs),
(199,598,o),
(202,598,qs),
(206,598,o),
(207,595,q),
(215,584,o),
(215,568,qs),
(215,548,o),
(189,523,o),
(170,524,qs),
(154,524,o),
(122,538,qs),
(83,554,o),
(72,554,qs),
(59,554,o)
);
},
{
closed = 1;
nodes = (
(562,0,l),
(530,0,ls),
(452,0,o),
(407,44,q),
(363,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,q),
(415,556,o),
(436,556,qs),
(445,556,ls),
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,140,o),
(494,97,o),
(527,97,qs),
(562,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 2 3 28 1 1 0 69 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 10 1 0 1 3 0 105 0 1 1 2 97 5 1 2 2 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 10 1 0 1 3 0 105 0 5 5 23 77 0 1 1 2 97 0 2 2 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 10 1 0 1 3 0 105 0 2 0 1 4 2 1 105 0 5 5 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
35 34 1 0 72 70 68 65 61 59 50 48 42 39 34 73 35 73 22 20 18 16 5 3 0 33 1 33 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,531,o),
(43,521,q),
(41,521,o),
(40,520,qs),
(37,518,o),
(36,518,qs),
(34,518,o),
(32,523,qs),
(29,529,o),
(29,537,qs),
(31,564,o),
(61,572,q),
(50,592,o),
(50,613,qs),
(50,646,o),
(93,691,o),
(125,692,qs),
(151,693,o),
(186,664,o),
(186,643,qs),
(186,633,o),
(181,633,qs),
(179,633,o),
(174,636,qs),
(170,638,o),
(168,639,qs),
(150,648,o),
(135,648,qs),
(97,648,o),
(97,613,qs),
(97,597,o),
(118,576,o),
(134,576,qs),
(170,576,ls),
(207,576,o),
(207,542,qs),
(207,537,ls),
(207,531,o),
(199,531,qs),
(86,531,ls)
);
},
{
closed = 1;
nodes = (
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,101,o),
(417,54,qs),
(372,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,q),
(158,451,l),
(166,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(358,142,o),
(358,180,qs),
(358,474,ls),
(358,533,o),
(398,548,qs),
(415,556,o),
(436,556,qs),
(445,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 5 1 29 1 0 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 1 2 1 4 2 105 0 1 9 1 0 6 1 0 103 10 1 5 5 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 9 1 0 6 1 0 103 10 1 5 5 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
41 40 1 0 67 64 60 58 49 47 40 73 41 72 23 21 18 16 12 10 7 4 0 39 1 38 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 526;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(63,531,o),
(43,521,q),
(41,521,o),
(40,520,qs),
(37,518,o),
(36,518,qs),
(34,518,o),
(32,523,qs),
(29,529,o),
(29,537,qs),
(31,564,o),
(61,572,q),
(50,592,o),
(50,613,qs),
(50,646,o),
(93,691,o),
(125,692,qs),
(151,693,o),
(186,664,o),
(186,643,qs),
(186,633,o),
(181,633,qs),
(179,633,o),
(174,636,qs),
(170,638,o),
(168,639,qs),
(150,648,o),
(135,648,qs),
(97,648,o),
(97,613,qs),
(97,597,o),
(118,576,o),
(134,576,qs),
(170,576,ls),
(207,576,o),
(207,542,qs),
(207,537,ls),
(207,531,o),
(199,531,qs),
(86,531,ls)
);
},
{
closed = 1;
nodes = (
(562,0,l),
(530,0,ls),
(452,0,o),
(407,44,q),
(363,0,o),
(285,0,qs),
(61,0,ls),
(42,0,o),
(42,17,qs),
(42,26,ls),
(42,57,o),
(86,97,o),
(121,97,qs),
(180,97,l),
(98,346,ls),
(78,406,o),
(117,432,qs),
(131,441,o),
(152,448,q),
(158,451,l),
(166,453,o),
(170,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(358,142,o),
(358,180,qs),
(358,474,ls),
(358,533,o),
(398,548,qs),
(415,556,o),
(436,556,qs),
(445,556,ls),
(456,556,o),
(456,546,qs),
(456,178,ls),
(456,140,o),
(494,97,o),
(527,97,qs),
(562,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
27 1 6 1 29 1 0 6 75 1 9 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 1 2 1 4 2 105 0 1 11 1 0 5 1 0 103 0 6 6 23 77 8 7 12 3 5 5 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 11 1 0 5 1 0 103 0 6 6 23 77 8 7 12 3 5 5 9 98 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 78 76 74 71 67 65 56 54 48 45 40 79 41 79 23 21 18 16 12 10 7 4 0 39 1 38 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,556,o),
(457,546,qs),
(457,178,ls),
(457,101,o),
(418,54,qs),
(372,0,o),
(286,0,qs),
(62,0,ls),
(43,0,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(87,97,o),
(121,97,qs),
(180,97,l),
(99,346,ls),
(79,406,o),
(117,432,qs),
(132,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(171,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,qs),
(416,556,o),
(437,556,qs),
(446,556,ls)
);
},
{
closed = 1;
nodes = (
(336,-190,o),
(336,-223,qs),
(336,-228,ls),
(336,-235,o),
(328,-235,qs),
(215,-235,ls),
(192,-235,o),
(172,-244,qs),
(170,-245,o),
(169,-246,q),
(166,-247,o),
(165,-247,qs),
(163,-247,o),
(161,-243,qs),
(158,-236,o),
(158,-229,qs),
(160,-201,o),
(190,-193,q),
(179,-174,o),
(179,-152,qs),
(179,-119,o),
(222,-74,o),
(254,-73,qs),
(280,-73,o),
(315,-101,o),
(315,-123,qs),
(315,-133,o),
(310,-133,qs),
(308,-133,o),
(303,-130,qs),
(299,-128,o),
(297,-127,qs),
(279,-118,o),
(264,-118,qs),
(226,-118,o),
(226,-153,qs),
(226,-169,o),
(247,-190,o),
(263,-190,qs),
(299,-190,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
57 55 2 8 4 1 76 61 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 1 5 4 7 5 105 10 1 4 0 8 4 8 99 9 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 10 1 4 0 8 4 8 99 9 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
35 34 1 0 69 66 51 49 46 44 40 38 34 73 35 72 27 24 20 18 9 7 0 33 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,0,l),
(530,0,ls),
(453,0,o),
(408,44,q),
(363,0,o),
(286,0,qs),
(62,0,ls),
(43,0,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(87,97,o),
(121,97,qs),
(180,97,l),
(99,346,ls),
(79,406,o),
(117,432,qs),
(132,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(171,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,qs),
(416,556,o),
(437,556,qs),
(446,556,ls),
(457,556,o),
(457,546,qs),
(457,178,ls),
(457,140,o),
(494,97,o),
(527,97,qs),
(562,97,l)
);
},
{
closed = 1;
nodes = (
(336,-190,o),
(336,-223,qs),
(336,-228,ls),
(336,-235,o),
(328,-235,qs),
(215,-235,ls),
(192,-235,o),
(172,-244,qs),
(170,-245,o),
(169,-246,q),
(166,-247,o),
(165,-247,qs),
(163,-247,o),
(161,-243,qs),
(158,-236,o),
(158,-229,qs),
(160,-201,o),
(190,-193,q),
(179,-174,o),
(179,-152,qs),
(179,-119,o),
(222,-74,o),
(254,-73,qs),
(280,-73,o),
(315,-101,o),
(315,-123,qs),
(315,-133,o),
(310,-133,qs),
(308,-133,o),
(303,-130,qs),
(299,-128,o),
(297,-127,qs),
(279,-118,o),
(264,-118,qs),
(226,-118,o),
(226,-153,qs),
(226,-169,o),
(247,-190,o),
(263,-190,qs),
(299,-190,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
35 1 4 0 63 61 2 10 6 2 76 67 1 10 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 8 1 7 6 9 7 105 12 1 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 7 6 7 8 6 128 0 9 0 7 8 9 7 105 12 1 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 75 72 57 55 52 50 46 44 40 79 41 78 38 36 34 31 27 25 16 14 8 5 0 39 1 39 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(457,556,o),
(457,546,qs),
(457,178,ls),
(457,101,o),
(418,54,qs),
(372,0,o),
(286,0,qs),
(62,0,ls),
(43,0,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(87,97,o),
(121,97,qs),
(180,97,l),
(99,346,ls),
(79,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(171,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,qs),
(416,556,o),
(437,556,qs),
(446,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
4 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 1 0 27 24 20 18 9 7 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,0,l),
(530,0,ls),
(453,0,o),
(408,44,q),
(363,0,o),
(286,0,qs),
(62,0,ls),
(43,0,o),
(43,17,qs),
(43,26,ls),
(43,57,o),
(87,97,o),
(121,97,qs),
(180,97,l),
(99,346,ls),
(79,406,o),
(117,432,qs),
(131,441,o),
(152,448,qs),
(159,451,ls),
(167,453,o),
(171,443,qs),
(285,97,l),
(295,97,ls),
(324,97,o),
(359,142,o),
(359,180,qs),
(359,474,ls),
(359,533,o),
(399,548,qs),
(416,556,o),
(437,556,qs),
(446,556,ls),
(457,556,o),
(457,546,qs),
(457,178,ls),
(457,140,o),
(494,97,o),
(527,97,qs),
(562,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
35 1 4 0 1 76 0 1 1 23 77 3 2 6 3 0 0 4 98 5 1 4 4 24 4 78 1 0 38 36 34 31 27 25 16 14 8 5 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,12,qs),
(56,368,ls),
(56,454,o),
(94,502,qs),
(138,556,o),
(225,556,qs),
(324,556,ls),
(333,556,o),
(333,546,qs),
(333,538,ls),
(333,465,o),
(258,465,qs),
(230,465,ls),
(189,465,o),
(153,422,o),
(153,373,qs),
(153,12,ls),
(153,0,o),
(142,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,12,qs),
(56,474,ls),
(56,556,o),
(134,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,12,ls),
(153,0,o),
(142,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,250,o),
(230,242,qs),
(230,235,o),
(225,231,q),
(147,152,ls),
(143,147,o),
(137,147,qs),
(130,147,o),
(125,152,qs),
(45,231,l),
(41,236,o),
(41,243,qs),
(41,249,o),
(45,253,qs),
(125,332,ls),
(130,337,o),
(137,337,qs),
(142,337,o),
(147,332,qs),
(225,253,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 24 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,249,o),
(231,243,qs),
(231,237,o),
(226,232,qs),
(147,152,ls),
(143,147,o),
(137,147,qs),
(130,147,o),
(125,152,qs),
(46,232,ls),
(41,237,o),
(41,243,qs),
(41,249,o),
(46,254,qs),
(125,332,ls),
(130,337,o),
(137,337,qs),
(143,337,o),
(147,332,q),
(226,254,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 24 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,12,qs),
(56,474,ls),
(56,556,o),
(134,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,12,ls),
(153,0,o),
(142,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,0,o),
(56,12,qs),
(56,368,ls),
(56,454,o),
(94,502,qs),
(138,556,o),
(225,556,qs),
(324,556,ls),
(333,556,o),
(333,546,qs),
(333,538,ls),
(333,465,o),
(258,465,qs),
(230,465,ls),
(189,465,o),
(153,422,o),
(153,373,qs),
(153,12,ls),
(153,0,o),
(142,0,qs),
(67,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,0,o),
(24,21,qs),
(90,414,ls),
(115,564,o),
(230,564,qs),
(345,564,o),
(370,414,qs),
(436,21,ls),
(439,0,o),
(421,0,qs),
(357,0,ls),
(341,0,o),
(338,19,qs),
(271,428,l),
(262,469,o),
(230,469,qs),
(198,469,o),
(189,428,q),
(121,19,l),
(119,0,o),
(103,0,qs),
(39,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,327,qs),
(380,285,o),
(350,257,qs),
(314,223,o),
(257,223,qs),
(199,224,o),
(153,252,q),
(153,17,ls),
(153,0,o),
(136,0,qs),
(73,0,ls),
(56,0,o),
(56,17,qs),
(56,474,ls),
(56,556,o),
(134,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,520,l),
(197,567,o),
(263,564,qs),
(308,563,o),
(362,511,o),
(362,469,qs),
(362,449,o),
(348,449,qs),
(344,449,o),
(337,452,qs),
(333,453,o),
(332,453,q),
(330,454,o),
(327,455,qs),
(280,471,o),
(253,471,qs),
(215,470,o),
(156,421,o),
(153,387,qs),
(153,384,ls),
(154,357,o),
(180,337,qs),
(211,313,o),
(262,313,qs),
(302,312,o),
(349,333,qs),
(368,341,o),
(375,342,q),
(389,342,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
27 1 1 3 8 1 7 2 40 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
27 1 1 4 8 1 7 2 40 1 6 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 47 0 47 35 51 51 35 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,154,qs),
(54,164,o),
(69,378,qs),
(76,461,o),
(115,509,qs),
(160,564,o),
(241,564,qs),
(311,564,o),
(355,522,qs),
(405,474,o),
(412,378,qs),
(428,165,o),
(428,154,qs),
(435,-10,o),
(313,-10,qs),
(271,-10,o),
(243,20,qs),
(241,22,o),
(239,20,qs),
(212,-10,o),
(168,-10,qs),
(48,-10,o)
);
},
{
closed = 1;
nodes = (
(230,126,qs),
(233,140,o),
(241,140,qs),
(250,140,o),
(252,126,qs),
(257,86,o),
(289,86,qs),
(330,86,o),
(329,155,qs),
(329,156,o),
(329,157,qs),
(327,205,o),
(314,371,qs),
(306,473,o),
(241,474,qs),
(175,473,o),
(168,371,qs),
(153,186,o),
(153,155,qs),
(152,86,o),
(192,86,qs),
(225,86,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 18 2 6 4 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 41 39 37 35 29 27 22 43 23 43 15 13 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,266,o),
(373,249,q),
(286,211,o),
(178,103,o),
(133,10,qs),
(129,0,o),
(119,0,qs),
(42,0,ls),
(30,0,o),
(33,12,qs),
(62,135,o),
(160,227,q),
(112,245,o),
(56,334,o),
(56,392,qs),
(56,466,o),
(98,512,qs),
(144,564,o),
(222,564,qs),
(270,564,o),
(338,511,o),
(338,473,qs),
(338,453,o),
(325,453,qs),
(319,453,o),
(309,457,qs),
(268,473,o),
(237,473,qs),
(200,473,o),
(154,424,o),
(154,385,qs),
(154,350,o),
(199,297,o),
(237,287,q),
(312,337,o),
(395,360,qs),
(409,365,o),
(415,349,qs),
(427,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 35 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,126,qs),
(331,539,ls),
(334,556,o),
(346,556,qs),
(352,556,ls),
(387,556,o),
(424,504,o),
(417,466,qs),
(363,141,ls),
(337,-10,o),
(223,-10,qs),
(108,-10,o),
(82,141,qs),
(28,466,ls),
(21,504,o),
(59,556,o),
(93,556,qs),
(99,556,ls),
(111,556,o),
(114,539,qs),
(182,126,ls),
(190,85,o),
(223,85,qs),
(255,85,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(21,0,o),
(24,21,qs),
(90,414,ls),
(115,564,o),
(230,564,qs),
(345,564,o),
(370,414,qs),
(436,21,ls),
(439,0,o),
(421,0,qs),
(357,0,ls),
(341,0,o),
(338,19,qs),
(271,428,l),
(262,469,o),
(230,469,qs),
(198,469,o),
(189,428,q),
(121,19,l),
(119,0,o),
(103,0,qs),
(39,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,520,qs),
(401,467,o),
(401,375,qs),
(401,12,ls),
(401,0,o),
(390,0,qs),
(315,0,ls),
(304,0,o),
(304,12,qs),
(304,187,l),
(226,187,ls),
(155,187,o),
(106,231,qs),
(48,283,o),
(48,375,qs),
(48,455,o),
(94,507,qs),
(144,564,o),
(226,564,qs),
(296,564,o)
);
},
{
closed = 1;
nodes = (
(148,419,o),
(148,375,qs),
(148,333,o),
(192,278,o),
(226,278,qs),
(304,278,l),
(304,375,ls),
(304,419,o),
(261,473,o),
(226,473,qs),
(191,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,556,o),
(623,546,qs),
(623,437,ls),
(623,356,o),
(584,306,qs),
(539,250,o),
(457,250,qs),
(383,250,o),
(340,300,q),
(297,250,o),
(224,250,qs),
(185,250,o),
(154,263,q),
(154,12,ls),
(154,0,o),
(143,0,qs),
(68,0,ls),
(56,0,o),
(56,12,qs),
(56,474,ls),
(56,556,o),
(133,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,441,ls),
(153,346,o),
(225,346,qs),
(298,346,o),
(298,441,qs),
(298,478,ls),
(298,514,o),
(333,556,o),
(363,556,qs),
(372,556,ls),
(382,556,o),
(382,546,qs),
(382,441,ls),
(382,346,o),
(454,346,qs),
(527,346,o),
(527,439,qs),
(527,474,ls),
(527,556,o),
(604,556,qs),
(613,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,520,qs),
(401,467,o),
(401,375,qs),
(401,12,ls),
(401,0,o),
(390,0,qs),
(315,0,ls),
(304,0,o),
(304,12,qs),
(304,187,l),
(226,187,ls),
(155,187,o),
(106,231,qs),
(48,283,o),
(48,375,qs),
(48,455,o),
(94,507,qs),
(144,564,o),
(226,564,qs),
(296,564,o)
);
},
{
closed = 1;
nodes = (
(148,419,o),
(148,375,qs),
(148,333,o),
(192,278,o),
(226,278,qs),
(304,278,l),
(304,375,ls),
(304,419,o),
(261,473,o),
(226,473,qs),
(191,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,126,qs),
(331,539,ls),
(334,556,o),
(346,556,qs),
(352,556,ls),
(387,556,o),
(424,504,o),
(417,466,qs),
(363,141,ls),
(337,-10,o),
(223,-10,qs),
(108,-10,o),
(82,141,qs),
(28,466,ls),
(21,504,o),
(59,556,o),
(93,556,qs),
(99,556,ls),
(111,556,o),
(114,539,qs),
(182,126,ls),
(190,85,o),
(223,85,qs),
(255,85,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,0,o),
(223,12,qs),
(223,373,ls),
(223,422,o),
(187,465,o),
(146,465,qs),
(118,465,ls),
(43,465,o),
(43,538,qs),
(43,546,ls),
(43,556,o),
(52,556,qs),
(151,556,ls),
(227,556,o),
(270,514,qs),
(320,466,o),
(320,368,qs),
(320,12,ls),
(320,0,o),
(309,0,qs),
(234,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 9 6 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,523,qs),
(395,475,o),
(401,381,qs),
(411,194,o),
(411,179,qs),
(411,98,o),
(368,48,qs),
(318,-10,o),
(230,-10,qs),
(152,-10,o),
(104,34,qs),
(48,86,o),
(48,179,qs),
(48,194,o),
(59,381,qs),
(64,463,o),
(102,510,qs),
(147,564,o),
(230,564,qs),
(302,564,o)
);
},
{
closed = 1;
nodes = (
(159,372,qs),
(149,184,ls),
(147,82,o),
(230,82,qs),
(312,82,o),
(311,184,q),
(301,373,ls),
(295,473,o),
(230,473,qs),
(164,473,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
21 20 1 0 26 24 20 29 21 29 11 9 0 19 1 19 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,237,o),
(148,196,o),
(148,166,qs),
(148,130,o),
(197,92,o),
(242,92,qs),
(292,92,ls),
(328,92,o),
(372,54,o),
(372,24,qs),
(372,16,ls),
(372,6,o),
(366,0,o),
(355,0,qs),
(234,0,ls),
(166,0,o),
(119,29,qs),
(48,72,o),
(48,171,qs),
(48,244,o),
(105,287,q),
(55,327,o),
(55,396,qs),
(55,466,o),
(96,512,qs),
(144,564,o),
(224,564,qs),
(275,564,o),
(345,514,o),
(347,477,qs),
(348,453,o),
(334,453,qs),
(328,453,o),
(317,457,q),
(315,457,o),
(313,458,qs),
(267,474,o),
(238,474,qs),
(201,474,o),
(155,434,o),
(155,402,qs),
(155,367,o),
(201,328,o),
(242,328,qs),
(292,328,ls),
(328,328,o),
(372,291,o),
(372,260,qs),
(372,252,ls),
(372,236,o),
(355,236,qs),
(227,237,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 38 35 25 23 20 18 14 12 8 5 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(623,556,o),
(623,546,qs),
(623,437,ls),
(623,356,o),
(584,306,qs),
(539,250,o),
(457,250,qs),
(383,250,o),
(340,300,q),
(297,250,o),
(224,250,qs),
(185,250,o),
(154,263,q),
(154,12,ls),
(154,0,o),
(143,0,qs),
(68,0,ls),
(56,0,o),
(56,12,qs),
(56,474,ls),
(56,556,o),
(133,556,qs),
(142,556,ls),
(153,556,o),
(153,546,qs),
(153,441,ls),
(153,346,o),
(225,346,qs),
(298,346,o),
(298,441,qs),
(298,478,ls),
(298,514,o),
(333,556,o),
(363,556,qs),
(372,556,ls),
(382,556,o),
(382,546,qs),
(382,441,ls),
(382,346,o),
(454,346,qs),
(527,346,o),
(527,439,qs),
(527,474,ls),
(527,556,o),
(604,556,qs),
(613,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
isBold = 1;
name = Bold;
properties = (
{
key = postscriptFullName;
value = "Zain Bold";
},
{
key = postscriptFontName;
value = "Zain-Bold";
}
);
weightClass = 700;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -18;
"@MMK_R_O" = -18;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
"@MMK_R_quoteright" = 8;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -18;
"@MMK_R_S" = -3;
"@MMK_R_Y" = -19;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -6;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -23;
"@MMK_R_C" = -18;
"@MMK_R_O" = -17;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_a" = {
"@MMK_R_y" = -3;
};
"@MMK_L_c" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 6;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -15;
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -14;
"@MMK_R_u" = -6;
"@MMK_R_y" = -13;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -22;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -8;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 12;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -5;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 9;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -8;
"@MMK_R_e" = -7;
"@MMK_R_o" = -7;
};
A = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -18;
J = 11;
Q = -18;
T = -35;
V = -26;
W = -18;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -8;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
y = -6;
yacute = -6;
ydieresis = -6;
};
C = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -17;
AE = -31;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
J = -18;
M = -4;
T = -23;
V = -14;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = -7;
uni0622 = 7;
uni0623 = 7;
uni0625 = 7;
uni0627 = 7;
uni0631 = -7;
uni0632 = -7;
uni0671 = 7;
uni0691 = -7;
uni0694 = -7;
uni0695 = -7;
uni0698 = -7;
};
E = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -21;
AE = -40;
Aacute = -21;
Acircumflex = -21;
Adieresis = -21;
Agrave = -21;
Aring = -21;
Atilde = -21;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 6;
V = 4;
W = 4;
X = -6;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -29;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -29;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -13;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -13;
Scaron = -13;
T = -6;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -43;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -33;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
colon = 4;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -11;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -25;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -4;
Scaron = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -31;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -16;
comma = -14;
d = -3;
g = -3;
period = -14;
q = -3;
question = -12;
x = -11;
};
P = {
A = -31;
AE = -53;
Aacute = -31;
Acircumflex = -31;
Adieresis = -31;
Agrave = -31;
Aring = -31;
Atilde = -31;
J = -32;
M = -3;
X = -16;
Y = -6;
Yacute = -6;
Ydieresis = -6;
Z = -9;
Zcaron = -9;
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -8;
ccedilla = -8;
comma = -29;
d = -8;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -8;
hyphen = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = -29;
q = -8;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
z = -2;
zcaron = -2;
};
Q = {
A = -17;
AE = -12;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -19;
Yacute = -19;
Ydieresis = -19;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
s = -1;
scaron = -1;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -28;
AE = -54;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 8;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -22;
AE = -37;
Aacute = -22;
Acircumflex = -22;
Adieresis = -22;
Agrave = -22;
Aring = -22;
Atilde = -22;
C = -11;
Ccedilla = -11;
G = -11;
J = -23;
O = -11;
OE = -11;
Oacute = -11;
Ocircumflex = -11;
Odieresis = -11;
Ograve = -11;
Oslash = -11;
Otilde = -11;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -27;
aacute = -27;
acircumflex = -27;
adieresis = -27;
ae = -27;
agrave = -27;
aring = -27;
atilde = -27;
c = -28;
ccedilla = -28;
colon = -7;
comma = -24;
d = -27;
dotlessi = -11;
e = -27;
eacute = -27;
ecircumflex = -27;
edieresis = -27;
egrave = -27;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -27;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -28;
oacute = -28;
ocircumflex = -28;
odieresis = -28;
oe = -28;
ograve = -28;
oslash = -28;
otilde = -28;
p = -11;
period = -24;
q = -27;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -17;
AE = -33;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -17;
OE = -17;
Oacute = -17;
Ocircumflex = -17;
Odieresis = -17;
Ograve = -17;
Oslash = -17;
Otilde = -17;
Q = -17;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -52;
G = -18;
J = -29;
Q = -17;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -52;
G = -18;
J = -29;
Q = -17;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -52;
G = -18;
J = -29;
Q = -17;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
v = -3;
};
aacute = {
question = -11;
v = -3;
};
acircumflex = {
question = -11;
v = -3;
};
adieresis = {
question = -11;
v = -3;
};
ae = {
question = -22;
t = -4;
v = -4;
x = -8;
};
agrave = {
question = -11;
v = -3;
};
aring = {
question = -11;
v = -3;
};
atilde = {
question = -11;
v = -3;
};
b = {
comma = -7;
f = -4;
fi = -4;
fl = -4;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 56;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
rehvabovear = -18;
uni0622 = 18;
uni0623 = 9;
uni0625 = 7;
uni0627 = 0;
uni0631 = -33;
uni0632 = -33;
uni0671 = 11;
uni0691 = -15;
uni0694 = -33;
uni0695 = -33;
uni0698 = -33;
};
bracketleft = {
j = 51;
uni0632 = 11;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
rehvabovear = -18;
uni0622 = 18;
uni0623 = 9;
uni0625 = 7;
uni0627 = 0;
uni0631 = -33;
uni0632 = -33;
uni0671 = 11;
uni0691 = -15;
uni0694 = -33;
uni0695 = -33;
uni0698 = -33;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
comma = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
dollar = {
eight = 5;
eight.ar = 5;
eight.farsi = 5;
four = 14;
four.ar = 14;
four.farsi = 14;
nine = -10;
nine.ar = -10;
nine.farsi = -10;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -4;
x = -8;
};
eacute = {
question = -22;
t = -4;
v = -4;
x = -8;
};
ecircumflex = {
question = -22;
t = -4;
v = -4;
x = -8;
};
edieresis = {
question = -22;
t = -4;
v = -4;
x = -8;
};
egrave = {
question = -22;
t = -4;
v = -4;
x = -8;
};
eight = {
comma = -7;
eight = 5;
four = 7;
period = -7;
seven = -7;
two = -10;
};
eight.ar = {
comma = -7;
eight.ar = 5;
four.ar = 7;
period = -7;
seven.ar = -7;
two.ar = -10;
};
eight.farsi = {
comma = -7;
eight.farsi = 5;
four.farsi = 7;
period = -7;
seven.farsi = -7;
two.farsi = -10;
};
exclamdown = {
j = 44;
y = 2;
yacute = 2;
ydieresis = 2;
};
f = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -12;
ccedilla = -12;
comma = -21;
d = -12;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
exclam = 6;
g = -12;
hyphen = -6;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = -21;
q = -12;
question = 12;
quotedblright = 13;
quoteright = 13;
};
fi = {
v = -5;
w = -3;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -10;
zero = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -20;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
four = {
four = 6;
nine = -16;
one = -6;
seven = -10;
six = -4;
two = -5;
zero = -10;
};
four.ar = {
four.ar = 6;
nine.ar = -16;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -10;
};
four.farsi = {
four.farsi = 6;
nine.farsi = -16;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -10;
};
g = {
j = 33;
question = -12;
quotedblright = -5;
quoteright = -5;
v = -4;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
hyphen = -8;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 4;
q = -12;
question = -6;
s = -4;
scaron = -4;
};
l = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -20;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
lam_alefvabovear = {
aleflaminitial = 4;
lamdotabovear = 4;
lamdotabovear.init = 7;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 37;
lamvabovear = 4;
lamvabovear.init = 7;
uni0621 = 11;
uni0622 = 18;
uni0623 = 18;
uni0624 = 13;
uni0625 = 11;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 7;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 18;
uni0686 = 6;
uni0691 = 26;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 11;
uniFB7C = 6;
uniFDF2 = 7;
uniFE8B = 9;
uniFE97 = 11;
uniFE9B = 11;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 0;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
lam_alefvabovear.fina = {
aleflaminitial = 4;
lamdotabovear = 4;
lamdotabovear.init = 7;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 37;
lamvabovear = 4;
lamvabovear.init = 7;
uni0621 = 11;
uni0622 = 18;
uni0623 = 18;
uni0624 = 13;
uni0625 = 11;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 7;
uni0644 = 7;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 18;
uni0686 = 6;
uni0691 = 26;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 11;
uniFB7C = 6;
uniFDF2 = 7;
uniFE8B = 9;
uniFE9B = 11;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 7;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine = {
comma = -27;
five = -3;
four = -8;
period = -27;
seven = -7;
six = -7;
three = -9;
two = -16;
};
nine.ar = {
comma = -27;
five.ar = -3;
four.ar = -8;
period = -27;
seven.ar = -7;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
comma = -27;
five.farsi = -3;
four.farsi = -8;
period = -27;
seven.farsi = -7;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oacute = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
ocircumflex = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
odieresis = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oe = {
question = -22;
t = -4;
v = -4;
x = -8;
};
ograve = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
one = {
eight = -11;
five = -10;
four = -16;
nine = -28;
seven = -21;
six = -16;
three = -8;
zero = -24;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -16;
nine.ar = -28;
seven.ar = -21;
six.ar = -16;
three.ar = -8;
zero.ar = -24;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -16;
nine.farsi = -28;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -8;
zero.farsi = -24;
};
oslash = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
otilde = {
comma = -6;
period = -6;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
p = {
comma = -5;
f = -7;
fi = -7;
fl = -7;
period = -5;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -5;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -6;
zcaron = -6;
};
parenleft = {
comma = 16;
j = 61;
p = 13;
uni0631 = 11;
uni0632 = 11;
y = 38;
yacute = 38;
ydieresis = 38;
};
parenright = {
rehvabovear = -11;
uni0622 = 18;
uni0623 = 9;
uni0625 = 7;
uni0627 = 0;
uni0631 = -33;
uni0632 = -33;
uni0671 = 11;
uni0691 = -4;
uni0694 = -33;
uni0695 = -33;
uni0698 = -22;
};
period = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -3;
quoteright = -3;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
q = {
j = 34;
};
questiondown = {
j = 82;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 7;
W = 7;
d = -12;
g = -13;
q = -13;
t = 14;
uni0691 = 24;
uni0698 = 9;
uniFB68 = 13;
uniFE8B = 24;
uniFE97 = 24;
uniFE9B = 24;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
colon = -7;
period = -7;
uni0691 = 43;
uni0698 = 39;
uniFB68 = 50;
uniFE8B = 24;
uniFE97 = 39;
uniFE9B = 39;
};
quoteleft = {
J = -12;
T = 7;
V = 7;
W = 7;
d = -12;
g = -13;
q = -13;
t = 14;
uni0698 = 24;
uniFE8B = 24;
uniFE97 = 15;
uniFE9B = 15;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
colon = -7;
comma = -23;
d = -30;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -12;
n = -12;
ntilde = -12;
o = -30;
oacute = -30;
ocircumflex = -30;
odieresis = -30;
oe = -30;
ograve = -30;
oslash = -30;
otilde = -30;
period = -7;
r = -12;
s = -21;
scaron = -21;
uni0691 = 50;
uni0698 = 39;
uniFB68 = 13;
uniFE8B = 24;
uniFE97 = 39;
uniFE9B = 39;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
r = {
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -8;
ccedilla = -8;
comma = -15;
d = -8;
e = -10;
eacute = -10;
ecircumflex = -10;
edieresis = -10;
egrave = -10;
f = 4;
fi = 4;
fl = 4;
g = -8;
hyphen = -4;
o = -8;
oacute = -8;
ocircumflex = -8;
odieresis = -8;
oe = -8;
ograve = -8;
oslash = -8;
otilde = -8;
period = -15;
q = -8;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
space = 98;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -11;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
rehvabovear = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 75;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -11;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 8;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
rehvabovear.fina = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -11;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
rehvbelowar.fina = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -11;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
s = {
comma = 5;
period = 5;
question = -18;
};
scaron = {
comma = 5;
period = 5;
question = -18;
};
seven = {
comma = -35;
eight = -6;
four = -19;
one = 5;
period = -35;
six = -22;
two = -12;
zero = -11;
};
seven.ar = {
comma = -35;
eight.ar = -6;
four.ar = -19;
one.ar = 5;
period = -35;
six.ar = -22;
two.ar = -12;
zero.ar = -11;
};
seven.farsi = {
comma = -35;
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
period = -35;
six.farsi = -22;
two.farsi = -12;
zero.farsi = -11;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -23;
two = -11;
zero = -4;
};
six.ar = {
comma = -9;
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -23;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
comma = -9;
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -23;
two.farsi = -11;
zero.farsi = -4;
};
space = {
uni0642 = 4;
uni0646 = 4;
uni064A = 4;
yehvabovear = 7;
};
sterling = {
eight = -5;
four = -12;
seven = 6;
six = -18;
};
t = {
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -9;
ccedilla = -9;
comma = -18;
d = -8;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
f = 4;
fi = 4;
fl = 4;
g = -8;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = -18;
q = -8;
question = -6;
t = 3;
x = -6;
};
three = {
comma = -7;
four = 9;
one = -7;
period = -7;
seven = -9;
two = -10;
zero = -6;
};
three.ar = {
comma = -7;
four.ar = 9;
one.ar = -7;
period = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
comma = -7;
four.farsi = 9;
one.farsi = -7;
period = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two = {
comma = -7;
eight = -4;
five = -5;
four = -16;
nine = -4;
period = -7;
seven = -5;
six = -16;
three = -5;
zero = -11;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -5;
four.ar = -16;
nine.ar = -4;
period = -7;
seven.ar = -5;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -5;
four.farsi = -16;
nine.farsi = -4;
period = -7;
seven.farsi = -5;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -11;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -11;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -11;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -11;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -11;
};
uni0622 = {
Decoratedbracketleft = 7;
braceleft = 18;
bracketleft = 18;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 24;
lamthreedotsabovear.init = 24;
lamvabovear = 15;
lamvabovear.init = 11;
parenleft = 18;
uni0622 = 29;
uni0623 = 26;
uni062C = 4;
uni062D = 4;
uni062E = 4;
uni0632 = 23;
uni0639 = 4;
uni063A = 4;
uni0671 = 28;
uni0686 = 4;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFB7C = 4;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFE9F = 4;
uniFEA3 = 4;
uniFEA7 = 4;
uniFECB = 4;
uniFECF = 4;
uniFEE7 = 23;
};
uni0623 = {
Decoratedbracketleft = 7;
braceleft = 18;
bracketleft = 18;
lamdotabovear = 11;
lamdotabovear.init = 11;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 7;
lamvabovear.init = 7;
parenleft = 18;
uni0622 = 26;
uni0623 = 26;
uni062C = 4;
uni062D = 4;
uni062E = 4;
uni0632 = 23;
uni0639 = 4;
uni063A = 4;
uni0671 = 26;
uni0686 = 4;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFB7C = 4;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFE9F = 4;
uniFEA3 = 4;
uniFEA7 = 4;
uniFECB = 4;
uniFECF = 4;
uniFEE7 = 23;
};
uni0625 = {
Decoratedbracketleft = 7;
braceleft = 13;
bracketleft = 13;
parenleft = 13;
uni0625 = 28;
uni062C = 4;
uni062D = 4;
uni062E = 4;
uni0632 = 23;
uni0639 = 4;
uni063A = 4;
uni0686 = 4;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFB7C = 4;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFE9F = 4;
uniFEA3 = 4;
uniFEA7 = 4;
uniFECB = 4;
uniFECF = 4;
uniFEE7 = 23;
};
uni0627 = {
Decoratedbracketleft = 7;
braceleft = 0;
parenleft = 0;
uni062C = 4;
uni062D = 4;
uni062E = 4;
uni0632 = 23;
uni0639 = 4;
uni063A = 4;
uni0686 = 4;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFB7C = 4;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFE9F = 4;
uniFEA3 = 4;
uniFEA7 = 4;
uniFECB = 4;
uniFECF = 4;
uniFEE7 = 23;
};
uni062F = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uni0630 = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uni0631 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 75;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0661 = 35;
uni0662 = -44;
uni0663 = -26;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 55;
uniFECB = 43;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni0632 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -41;
uni0663 = -22;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F3 = -11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 55;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni0637 = {
uni0621 = 11;
};
uni0638 = {
uni0621 = 11;
};
uni06440671 = {
aleflaminitial = 4;
lamdotabovear = 22;
lamdotabovear.init = 37;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 37;
lamvabovear = 22;
lamvabovear.init = 37;
rehvabovear = 67;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 22;
uni0626 = 11;
uni0627 = 22;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 37;
uni0644 = 22;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 85;
uni0694 = 4;
uni0695 = 4;
uni0698 = 63;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 33;
uniFB7C = 6;
uniFDF2 = 37;
uniFE8B = 50;
uniFE97 = 226;
uniFE9B = 59;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 37;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 22;
yehvabovear = 11;
yehvabovear.init = 22;
};
uni06440671.fina = {
aleflaminitial = 4;
lamdotabovear = 22;
lamdotabovear.init = 37;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 37;
lamvabovear = 22;
lamvabovear.init = 37;
rehvabovear = 67;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 22;
uni0626 = 11;
uni0627 = 22;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 37;
uni0644 = 22;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 85;
uni0694 = 4;
uni0695 = 4;
uni0698 = 63;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 33;
uniFB7C = 6;
uniFDF2 = 37;
uniFE8B = 50;
uniFE97 = 59;
uniFE9B = 59;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 37;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 22;
yehvabove_pehar = 22;
yehvabove_yehar = 22;
yehvabove_yehvar = 41;
yehvabovear = 11;
yehvabovear.init = 22;
};
uni0660 = {
uni0666 = -82;
};
uni0661 = {
uni0667 = 17;
uni0668 = 11;
uni0691 = 15;
uni0698 = 15;
uni06F7 = 3;
};
uni0662 = {
uni0660 = -85;
uni0666 = 17;
uni0667 = 24;
uni0668 = -33;
uni0669 = -18;
uni06F9 = -4;
uniF806 = -68;
};
uni0663 = {
uni0660 = -52;
uni0665 = -4;
uni0666 = -6;
uni0667 = 18;
uni0668 = -26;
uniF806 = -48;
};
uni0664 = {
uni0666 = -11;
uni0668 = 15;
};
uni0665 = {
uni0663 = 6;
uni0666 = -12;
uni0667 = 11;
uni0668 = 7;
uniF806 = 4;
};
uni0666 = {
uni0666 = -7;
uni0667 = 18;
uni0668 = 11;
uni0691 = 41;
uni0695 = -15;
uni0698 = 22;
uniFB8B = 0;
uniFB8D = 11;
};
uni0667 = {
uni0632 = 11;
uni0661 = 17;
uni0662 = 18;
uni0663 = 24;
uni0664 = 11;
uni0665 = 11;
uni0666 = 28;
uni0667 = 52;
uni0668 = 4;
uni0669 = 15;
uni0691 = 48;
uni0694 = 11;
uni0695 = 11;
uni0698 = 29;
uni06F3 = 3;
};
uni0668 = {
uni0631 = 11;
uni0632 = 11;
uni0661 = 11;
uni0662 = 21;
uni0663 = 17;
uni0664 = 11;
uni0665 = 7;
uni0666 = -27;
uni0667 = 4;
uni0668 = 48;
uni0669 = -21;
uni0691 = 11;
uni0694 = 11;
uni0695 = 11;
uni0698 = 11;
uni06F7 = -6;
uniF806 = 4;
};
uni0669 = {
uni0666 = -7;
uni0667 = 11;
uni0668 = 17;
};
uni0671 = {
Decoratedbracketleft = 7;
braceleft = 22;
bracketleft = 22;
lamdotabovear = 18;
lamdotabovear.init = 18;
lamthreedotsabovear = 39;
lamthreedotsabovear.init = 26;
lamvabovear = 15;
lamvabovear.init = 15;
parenleft = 22;
uni0622 = 28;
uni0623 = 17;
uni062C = 4;
uni062D = 4;
uni062E = 4;
uni0632 = 23;
uni0639 = 4;
uni063A = 4;
uni0671 = 28;
uni0686 = 4;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFB7C = 4;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFE9F = 4;
uniFEA3 = 4;
uniFEA7 = 4;
uniFECB = 4;
uniFECF = 4;
uniFEE7 = 23;
};
uni0688 = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uni0691 = {
Decoratedbracketleft = 83;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0667 = 22;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F7 = 15;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB68 = 13;
uniFB7C = 0;
uniFB8D = 55;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE8B = 15;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE97 = 12;
uniFE9B = 12;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni0694 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -44;
uni0663 = -26;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni0695 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -44;
uni0663 = -26;
uni0666 = 0;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni0698 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0661 = 15;
uni0662 = -7;
uni0667 = 11;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F7 = 11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB68 = 7;
uniFB7C = 0;
uniFB8B = 55;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE8B = 9;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uni06F1 = {
uni0691 = 15;
uni0698 = 11;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -19;
uni0666 = 12;
uni0667 = 3;
uni06F0 = -48;
uni06F7 = 22;
uni06F8 = -33;
uni06F9 = -33;
uniF806 = -72;
};
uni06F3 = {
uni0632 = 11;
uni0664 = -3;
uni0698 = 18;
uni06F0 = -29;
uni06F5 = -4;
uni06F7 = 11;
uniF806 = -43;
};
uni06F4 = {
uni0632 = 11;
uni0691 = 18;
uni0698 = 18;
uni06F6 = -6;
uniF806 = -20;
};
uni06F5 = {
uni06F5 = 7;
uni06F7 = 11;
uni06F8 = 15;
};
uni06F6 = {
uni0668 = -4;
uni06F8 = -2;
};
uni06F7 = {
uni0631 = 11;
uni0632 = 11;
uni0661 = 4;
uni0691 = 18;
uni0694 = 11;
uni0695 = 11;
uni0698 = 29;
uni06F1 = 17;
uni06F2 = 18;
uni06F3 = 24;
uni06F4 = 22;
uni06F5 = 11;
uni06F6 = 11;
uni06F7 = 52;
uni06F8 = 4;
uni06F9 = 15;
uniF805 = 9;
};
uni06F8 = {
uni0631 = 11;
uni0632 = 11;
uni0667 = -4;
uni0691 = 11;
uni0694 = 11;
uni0695 = 11;
uni0698 = 11;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 15;
uni06F6 = 39;
uni06F7 = 4;
uni06F8 = 48;
uni06F9 = -21;
uniF806 = 12;
};
uni06F9 = {
uni06F6 = 4;
uni06F7 = 11;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni06F0 = -19;
uni06F4 = 2;
uni06F5 = -28;
uni06F6 = -11;
uni06F7 = 4;
uni06F8 = -22;
uni06F9 = -33;
uniF806 = -211;
};
uniF806 = {
uni0660 = -76;
uni0661 = 16;
uni0662 = 16;
uni0666 = -37;
uni0667 = -46;
uni0668 = 31;
uni0669 = -108;
uni06F0 = -76;
uni06F1 = 20;
uni06F3 = 20;
uni06F4 = 20;
uni06F6 = 44;
uni06F7 = -44;
uni06F8 = 41;
uni06F9 = -124;
uniF805 = 20;
};
uniFB51 = {
Decoratedbracketleft = 7;
braceleft = 22;
bracketleft = 22;
lamdotabovear = 18;
lamdotabovear.init = 18;
lamthreedotsabovear = 26;
lamthreedotsabovear.init = 26;
lamvabovear = 15;
lamvabovear.init = 15;
parenleft = 22;
uni0622 = 28;
uni0623 = 29;
uni0632 = 23;
uni0671 = 28;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFEE7 = 23;
};
uniFB89 = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uniFB8B = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
space = 46;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -7;
uni0663 = -7;
uni0666 = -7;
uni0667 = 11;
uni0686 = 29;
uni0691 = 81;
uni0694 = 78;
uni0695 = 78;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F7 = 11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB68 = 7;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE8B = 9;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uniFB8D = {
Decoratedbracketleft = 84;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0667 = 22;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F7 = 15;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB68 = 13;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE8B = 15;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE97 = 12;
uniFE9B = 12;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uniFE82 = {
Decoratedbracketleft = 7;
braceleft = 18;
bracketleft = 18;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 24;
lamthreedotsabovear.init = 24;
lamvabovear = 15;
lamvabovear.init = 11;
parenleft = 18;
uni0622 = 29;
uni0623 = 13;
uni0632 = 23;
uni0671 = 28;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFEE7 = 23;
};
uniFE84 = {
Decoratedbracketleft = 7;
braceleft = 18;
bracketleft = 18;
lamdotabovear = 11;
lamdotabovear.init = 11;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 22;
lamvabovear = 7;
lamvabovear.init = 7;
parenleft = 18;
uni0622 = 26;
uni0623 = 26;
uni0632 = 23;
uni0671 = 26;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFEE7 = 23;
};
uniFE88 = {
Decoratedbracketleft = 7;
braceleft = 7;
bracketleft = 7;
parenleft = 7;
uni0625 = 18;
uni0632 = 23;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFEE7 = 23;
};
uniFE8E = {
Decoratedbracketleft = 7;
braceleft = 0;
parenleft = 0;
uni0632 = 23;
uni0691 = 12;
uni0698 = 23;
uniFB68 = 12;
uniFE8B = 12;
uniFE97 = 23;
uniFE9B = 23;
uniFEE7 = 23;
};
uniFE91 = {
uniFEAE = 3;
uniFEB0 = 3;
};
uniFEAA = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uniFEAC = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 11;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uniFEAE = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -44;
uni0663 = -26;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uniFEB0 = {
Decoratedbracketleft = 83;
Decoratedbracketright = -37;
braceleft = 118;
braceright = 26;
bracketleft = 118;
bracketright = 67;
lamdotabovear = 57;
lamthreedotsabovear = 57;
lamvabovear = 57;
parenleft = 124;
rehvabovear = 81;
uni0624 = 81;
uni0625 = 117;
uni0626 = 75;
uni062C = 29;
uni062D = 7;
uni062E = 7;
uni0631 = 81;
uni0632 = 81;
uni0639 = 74;
uni063A = 74;
uni0642 = 58;
uni0644 = 59;
uni0646 = 59;
uni0648 = 81;
uni0649 = 75;
uni064A = 75;
uni0660 = -11;
uni0662 = -41;
uni0663 = -22;
uni0686 = 29;
uni0691 = 81;
uni0694 = 81;
uni0695 = 81;
uni0698 = 81;
uni06CC = 73;
uni06F0 = -11;
uni06F2 = -29;
uni06F3 = -11;
uniEECD = 74;
uniEECF = 25;
uniFB58 = 93;
uniFB58FE8A = 93;
uniFB58FEF0 = 93;
uniFB58FEF2 = 93;
uniFB7C = 0;
uniFBA8 = -18;
uniFBA8FE8A = -13;
uniFBA8FEF0 = -13;
uniFBA8FEF2 = -13;
uniFBFE = 93;
uniFBFEFBFD = 93;
uniFC09 = -17;
uniFC0A = -17;
uniFC59 = 93;
uniFC5A = 93;
uniFE91 = -17;
uniFE91FE8A = -17;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 25;
uniFECF = 25;
uniFEF3 = 93;
uniFEF3FE8A = 93;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 93;
yehvabove_pehar = 93;
yehvabove_yehar = 93;
yehvabove_yehvar = 93;
yehvabovear = 75;
yehvabovear.init = 93;
};
uniFEC2 = {
uni0621 = 11;
};
uniFEC6 = {
uni0621 = 11;
};
uniFEF5 = {
aleflaminitial = 4;
lamdotabovear = 15;
lamdotabovear.init = 26;
lamthreedotsabovear = 15;
lamthreedotsabovear.init = 26;
lamvabovear = 15;
lamvabovear.init = 26;
rehvabovear = 67;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 22;
uni0626 = 11;
uni0627 = 22;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 26;
uni0644 = 15;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 67;
uni0694 = 4;
uni0695 = 4;
uni0698 = 56;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 32;
uniFB7C = 6;
uniFDF2 = 29;
uniFE8B = 46;
uniFE97 = 52;
uniFE9B = 52;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 26;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 15;
yehvabove_pehar = 15;
yehvabove_yehar = 15;
yehvabove_yehvar = 15;
yehvabovear = 11;
yehvabovear.init = 15;
};
uniFEF6 = {
aleflaminitial = 4;
lamdotabovear = 15;
lamdotabovear.init = 26;
lamthreedotsabovear = 15;
lamthreedotsabovear.init = 26;
lamvabovear = 15;
lamvabovear.init = 26;
rehvabovear = 67;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 22;
uni0626 = 11;
uni0627 = 22;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 26;
uni0644 = 15;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 67;
uni0694 = 4;
uni0695 = 4;
uni0698 = 56;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 32;
uniFB7C = 6;
uniFDF2 = 29;
uniFE8B = 46;
uniFE97 = 52;
uniFE9B = 52;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 26;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 15;
yehvabove_pehar = 15;
yehvabove_yehar = 15;
yehvabove_yehvar = 15;
yehvabovear = 11;
yehvabovear.init = 15;
};
uniFEF7 = {
aleflaminitial = 4;
lamdotabovear = 7;
lamdotabovear.init = 15;
lamthreedotsabovear = 15;
lamthreedotsabovear.init = 29;
lamvabovear = 7;
lamvabovear.init = 15;
rehvabovear = 15;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 15;
uni0626 = 11;
uni0627 = 15;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0644 = 7;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 71;
uni0694 = 4;
uni0695 = 4;
uni0698 = 44;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 33;
uniFB7C = 6;
uniFDF2 = 15;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 15;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 7;
yehvabove_pehar = 7;
yehvabove_yehar = 7;
yehvabove_yehvar = 22;
yehvabovear = 11;
yehvabovear.init = 7;
};
uniFEF8 = {
aleflaminitial = 4;
lamdotabovear = 7;
lamdotabovear.init = 15;
lamthreedotsabovear = 15;
lamthreedotsabovear.init = 15;
lamvabovear = 7;
lamvabovear.init = 15;
rehvabovear = 15;
uni0621 = 11;
uni0622 = 22;
uni0623 = 22;
uni0624 = 13;
uni0625 = 15;
uni0626 = 11;
uni0627 = 15;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 15;
uni0644 = 7;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 22;
uni0686 = 6;
uni0691 = 71;
uni0694 = 4;
uni0695 = 4;
uni0698 = 44;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 33;
uniFB7C = 6;
uniFDF2 = 15;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 15;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabove_alefMaksuraar = 7;
yehvabove_pehar = 7;
yehvabove_yehar = 7;
yehvabove_yehvar = 22;
yehvabovear = 11;
yehvabovear.init = 7;
};
uniFEF9 = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 9;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uniFEFA = {
aleflaminitial = 4;
lamdotabovear = 4;
lamthreedotsabovear = 4;
lamvabovear = 4;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0644 = 4;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 9;
uniFB7C = 6;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
uniFEFB = {
aleflaminitial = 4;
lamdotabovear = 7;
lamthreedotsabovear = 7;
lamvabovear = 7;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0625 = 4;
uni0626 = 7;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni0642 = 7;
uni0644 = 7;
uni0646 = 4;
uni0649 = 7;
uni064A = 7;
uni0671 = 4;
uni0686 = 6;
uni0691 = 9;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 7;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 9;
uniFB7C = 6;
uniFE8B = 0;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
yehvabovear = 7;
};
uniFEFC = {
aleflaminitial = 4;
lamdotabovear = 7;
lamdotabovear.init = 0;
lamthreedotsabovear = 7;
lamthreedotsabovear.init = 0;
lamvabovear = 7;
lamvabovear.init = 0;
rehvabovear = 4;
uni0621 = 11;
uni0622 = 4;
uni0623 = 4;
uni0624 = 13;
uni0625 = 4;
uni0626 = 11;
uni0627 = 4;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0631 = 4;
uni0632 = 4;
uni0639 = 11;
uni063A = 11;
uni0642 = 7;
uni0643 = 0;
uni0644 = 7;
uni0646 = 4;
uni0648 = 13;
uni0649 = 11;
uni064A = 11;
uni0671 = 4;
uni0686 = 6;
uni0691 = 9;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06CC = 11;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB68 = 9;
uniFB7C = 6;
uniFE8B = 0;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 11;
uniFECF = 11;
uniFEDF = 0;
wawtwodotsabovear = 13;
wawvabovear = 13;
yehvabovear = 11;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -3;
hyphen = -6;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -12;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
g = -12;
hyphen = -12;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 7;
q = -15;
question = -12;
t = -6;
u = -8;
uacute = -8;
ucircumflex = -8;
udieresis = -8;
ugrave = -8;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yen = {
five = 7;
seven = 12;
six = -6;
two = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -4;
one = -8;
period = -23;
seven = -19;
six = -5;
three = -7;
two = -17;
};
zero.ar = {
comma = -23;
five.ar = -4;
one.ar = -8;
period = -23;
seven.ar = -19;
six.ar = -5;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
comma = -23;
five.farsi = -4;
one.farsi = -8;
period = -23;
seven.farsi = -19;
six.farsi = -5;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
