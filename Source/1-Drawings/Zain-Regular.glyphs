{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:49:11 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
language URD;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
language URD;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    75,\012    75,\012    71,\012    71,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    77,\012    77,\012    71,\012    71,\012    556,\012    0,\012    556,\012    368,\012    0,\012    \"-160\",\012    556,\012    \"-10\",\012    556,\012    377,\012    \"-9\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    563,\012    233,\012    563,\012    233\012)";
}
);
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,-72,qs),
(270,-72,o),
(293,-48,o),
(293,-29,qs),
(293,-10,o),
(270,14,o),
(252,14,qs),
(211,14,o),
(209,-29,q),
(212,-72,o)
);
},
{
closed = 1;
nodes = (
(275,75,ls),
(275,97,o),
(295,112,qs),
(359,160,o),
(402,221,o),
(402,262,qs),
(401,308,o),
(368,335,qs),
(332,365,o),
(261,365,qs),
(213,365,o),
(169,347,qs),
(136,334,o),
(138,312,qs),
(139,304,o),
(142,294,qs),
(147,277,l),
(212,308,o),
(259,307,qs),
(293,307,o),
(331,274,o),
(331,247,qs),
(330,209,o),
(277,165,qs),
(225,123,o),
(225,88,qs),
(225,67,l),
(275,67,l)
);
},
{
closed = 1;
nodes = (
(496,-254,l),
(496,545,l),
(35,545,l),
(35,-254,l)
);
},
{
closed = 1;
nodes = (
(448,-206,l),
(83,-206,l),
(83,497,l),
(448,497,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
20 1 4 2 1 76 9 1 4 2 0 2 4 0 128 0 5 10 1 8 3 5 8 103 0 3 0 2 4 3 2 105 0 0 0 1 7 0 1 105 0 7 6 6 7 87 0 7 7 6 95 0 6 7 6 79 42 42 10 10 42 45 42 45 44 43 41 40 39 38 10 37 10 37 39 40 36 33 11 6 26 
CALL[ ]	/* CallFunction */";
};
width = 531;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 182;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,556,o),
(49,556,qs),
(55,556,ls),
(119,556,o),
(117,485,qs),
(111,162,ls),
(111,154,o),
(103,154,qs),
(55,154,ls),
(48,154,o),
(48,162,qs),
(40,547,ls)
);
},
{
closed = 1;
nodes = (
(134,67,o),
(134,44,qs),
(134,21,o),
(102,-11,o),
(80,-11,qs),
(58,-11,o),
(26,21,o),
(26,44,qs),
(26,66,o),
(58,99,o),
(80,99,qs),
(102,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 0 0 1 97 0 1 1 39 77 4 1 2 2 3 97 0 3 3 46 3 78 13 12 19 17 12 23 13 23 51 49 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 160;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,556,o),
(37,556,qs),
(49,556,ls),
(82,556,o),
(106,525,o),
(104,488,qs),
(95,379,l),
(93,371,o),
(87,371,qs),
(52,371,ls),
(46,371,o),
(44,379,q),
(29,547,l)
);
},
{
closed = 1;
nodes = (
(150,556,o),
(159,556,qs),
(172,556,ls),
(205,556,o),
(229,525,o),
(226,488,qs),
(217,379,ls),
(217,371,o),
(209,371,qs),
(174,371,ls),
(168,371,o),
(166,379,q),
(151,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
18 6 2 0 1 1 76 2 1 0 0 1 97 3 1 1 1 39 0 78 52 51 53 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,151,o),
(26,159,q),
(36,198,ls),
(39,207,o),
(47,207,qs),
(116,207,l),
(151,347,l),
(83,347,ls),
(73,347,o),
(76,356,qs),
(86,394,ls),
(89,403,o),
(96,403,qs),
(165,403,l),
(200,547,ls),
(202,556,o),
(209,556,qs),
(226,556,ls),
(274,556,o),
(261,502,qs),
(236,403,l),
(380,403,l),
(416,547,l),
(417,556,o),
(425,556,qs),
(442,556,ls),
(490,556,o),
(476,502,qs),
(452,403,l),
(519,403,ls),
(528,403,o),
(526,394,qs),
(516,356,ls),
(513,347,o),
(506,347,qs),
(438,347,l),
(403,207,l),
(471,207,ls),
(481,207,o),
(477,198,q),
(467,159,ls),
(465,151,o),
(457,151,qs),
(389,151,l),
(353,9,l),
(352,0,o),
(345,0,qs),
(287,0,ls),
(280,0,o),
(282,9,qs),
(316,151,l),
(173,151,l),
(137,9,l),
(137,0,o),
(130,0,qs),
(72,0,ls),
(64,0,o),
(66,9,qs),
(101,151,l),
(33,151,ls)
);
},
{
closed = 1;
nodes = (
(366,347,l),
(223,347,l),
(187,207,l),
(330,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
6 1 0 1 1 76 10 8 2 6 14 11 2 5 4 6 5 104 17 15 12 3 4 16 13 3 3 1 0 4 1 103 9 1 7 7 39 77 2 1 0 0 40 0 78 60 60 0 0 60 63 60 63 62 61 0 59 0 58 55 53 52 50 47 45 43 40 18 50 35 33 35 34 50 18 50 18 9 31 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,287,o),
(44,356,o),
(44,414,qs),
(44,473,o),
(85,514,qs),
(131,559,o),
(210,566,q),
(210,612,ls),
(210,621,o),
(218,621,qs),
(250,621,ls),
(258,621,o),
(258,612,qs),
(258,566,l),
(314,562,o),
(367,539,qs),
(416,520,o),
(405,479,qs),
(400,461,ls),
(397,451,o),
(391,451,qs),
(388,451,o),
(381,454,qs),
(378,456,o),
(377,456,q),
(322,491,o),
(258,497,q),
(258,311,l),
(351,281,o),
(422,215,o),
(422,159,qs),
(422,95,o),
(384,52,qs),
(340,2,o),
(258,-8,q),
(258,-56,ls),
(258,-64,o),
(250,-64,qs),
(218,-64,ls),
(210,-64,o),
(210,-56,qs),
(210,-11,l),
(128,-9,o),
(77,31,qs),
(27,70,o),
(27,120,qs),
(27,141,o),
(40,141,qs),
(47,141,o),
(53,133,qs),
(115,60,o),
(210,57,q),
(210,254,l)
);
},
{
closed = 1;
nodes = (
(301,68,o),
(349,115,o),
(349,149,qs),
(349,178,o),
(308,218,o),
(258,238,q),
(258,61,l)
);
},
{
closed = 1;
nodes = (
(167,495,o),
(116,452,o),
(116,418,qs),
(116,389,o),
(159,347,o),
(210,328,q),
(210,498,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
45 38 25 3 6 5 60 53 52 24 4 1 4 59 1 0 1 17 1 2 0 4 76 0 6 5 4 5 6 4 128 0 4 1 5 4 1 126 0 1 0 5 1 0 126 0 5 0 3 5 3 101 0 0 0 2 97 0 2 2 46 2 78 66 65 56 47 50 20 34 16 7 9 28 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,162,qs),
(667,281,o),
(590,281,qs),
(513,281,o),
(513,162,qs),
(513,45,o),
(590,45,qs),
(667,45,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,513,o),
(171,513,qs),
(95,513,o),
(95,393,qs),
(95,276,o),
(171,276,qs),
(248,278,o)
);
},
{
closed = 1;
nodes = (
(195,9,q),
(490,547,ls),
(495,556,o),
(502,556,qs),
(515,556,ls),
(539,556,o),
(552,522,o),
(538,496,qs),
(270,9,ls),
(265,0,o),
(257,0,qs),
(198,0,ls),
(189,0,o)
);
},
{
closed = 1;
nodes = (
(494,32,qs),
(452,79,o),
(452,163,qs),
(452,235,o),
(485,281,qs),
(522,335,o),
(590,335,qs),
(648,335,o),
(685,294,qs),
(728,246,o),
(728,163,qs),
(728,90,o),
(695,44,qs),
(658,-9,o),
(590,-9,qs),
(531,-9,o)
);
},
{
closed = 1;
nodes = (
(76,264,qs),
(34,310,o),
(34,394,qs),
(34,467,o),
(66,513,qs),
(104,567,o),
(171,567,qs),
(230,567,o),
(267,525,qs),
(309,478,o),
(309,394,qs),
(309,321,o),
(277,276,qs),
(240,223,o),
(171,223,qs),
(112,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 3 3 5 97 9 1 5 5 39 77 10 1 0 0 4 97 13 6 12 3 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 0 3 3 9 97 0 9 9 39 77 10 1 0 0 4 97 13 6 12 3 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 0 3 3 9 97 0 9 9 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 49 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
46 45 30 29 18 16 9 8 1 0 54 52 45 60 46 60 38 36 29 44 30 44 25 22 16 28 18 28 13 11 8 15 9 15 5 3 0 7 1 7 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,290,o),
(445,290,qs),
(496,290,ls),
(505,290,o),
(501,281,q),
(403,133,l),
(507,10,ls),
(509,7,o),
(507,0,o),
(503,0,qs),
(455,0,ls),
(422,0,o),
(405,22,qs),
(361,73,l),
(296,-7,o),
(205,-7,qs),
(136,-7,o),
(91,31,qs),
(39,75,o),
(39,148,qs),
(39,198,o),
(96,272,o),
(161,307,q),
(123,349,o),
(93,406,o),
(93,438,qs),
(93,493,o),
(130,527,qs),
(172,567,o),
(246,567,qs),
(308,567,o),
(347,538,qs),
(393,505,o),
(393,444,qs),
(393,360,o),
(266,291,q),
(363,180,l),
(426,279,ls)
);
},
{
closed = 1;
nodes = (
(321,442,qs),
(321,470,o),
(279,506,o),
(247,506,qs),
(212,506,o),
(170,470,o),
(170,439,qs),
(170,397,o),
(228,337,q),
(321,385,o)
);
},
{
closed = 1;
nodes = (
(154,233,o),
(115,184,o),
(115,152,qs),
(115,109,o),
(167,57,o),
(211,57,qs),
(243,57,o),
(292,84,o),
(322,120,q),
(202,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
14 1 2 3 4 57 31 23 3 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 49 77 0 5 5 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 54 35 44 38 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,556,o),
(37,556,qs),
(50,556,ls),
(83,556,o),
(106,525,o),
(104,488,qs),
(95,379,ls),
(95,371,o),
(87,371,qs),
(52,371,ls),
(46,371,o),
(44,379,q),
(29,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
6 5 2 0 1 1 76 0 0 0 1 97 0 1 1 39 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 134;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,545,qs),
(176,659,o),
(269,697,qs),
(278,700,o),
(278,691,qs),
(278,690,o),
(278,689,qs),
(278,677,o),
(277,671,q),
(276,639,o),
(257,621,qs),
(250,615,o),
(249,614,qs),
(127,494,o),
(128,277,qs),
(127,59,o),
(249,-61,qs),
(251,-63,o),
(254,-66,qs),
(276,-86,o),
(277,-118,q),
(278,-124,o),
(278,-135,qs),
(278,-138,ls),
(278,-148,o),
(269,-144,qs),
(189,-112,o),
(132,-21,qs),
(56,101,o),
(57,277,qs),
(56,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
26 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,7,qs),
(158,-106,o),
(65,-144,qs),
(56,-148,o),
(56,-138,qs),
(56,-136,ls),
(55,-124,o),
(57,-118,q),
(58,-86,o),
(77,-69,qs),
(84,-63,o),
(85,-61,q),
(207,59,o),
(206,277,qs),
(207,494,o),
(85,614,qs),
(83,616,o),
(80,619,qs),
(58,639,o),
(57,671,q),
(55,677,o),
(55,688,q),
(56,690,o),
(56,691,qs),
(56,700,o),
(65,697,qs),
(145,664,o),
(201,574,qs),
(278,452,o),
(277,277,qs),
(277,122,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
26 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 338;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,403,o),
(34,413,qs),
(51,463,ls),
(53,471,o),
(61,468,qs),
(150,431,l),
(143,531,ls),
(143,539,o),
(151,539,qs),
(209,539,ls),
(216,539,o),
(216,531,qs),
(210,431,l),
(299,468,ls),
(307,471,o),
(310,463,qs),
(326,413,ls),
(329,404,o),
(321,402,qs),
(228,377,l),
(288,300,l),
(294,294,o),
(286,289,qs),
(244,262,ls),
(236,256,o),
(233,262,qs),
(179,348,l),
(129,262,l),
(126,255,o),
(118,262,q),
(74,289,ls),
(67,293,o),
(71,300,q),
(133,377,l),
(39,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,238,o),
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(168,304,l),
(168,441,ls),
(168,450,o),
(176,450,qs),
(208,450,o),
(235,422,o),
(235,389,qs),
(235,304,l),
(358,304,ls),
(366,304,o),
(366,295,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(235,238,l),
(235,101,ls),
(235,92,o),
(227,92,qs),
(176,92,ls),
(168,92,o),
(168,101,qs),
(168,238,l),
(45,238,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 97 0 0 3 0 81 0 0 0 27 0 26 34 35 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,65,o),
(135,42,qs),
(135,-39,o),
(51,-106,q),
(50,-108,o),
(46,-105,qs),
(24,-84,o),
(47,-59,qs),
(69,-32,o),
(74,-11,q),
(53,-7,o),
(28,23,o),
(28,44,qs),
(28,67,o),
(59,99,o),
(81,99,qs),
(104,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 155;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,177,qs),
(37,229,ls),
(37,238,o),
(45,238,qs),
(257,238,ls),
(265,238,o),
(265,229,qs),
(265,177,ls),
(265,168,o),
(257,168,qs),
(45,168,ls),
(37,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,67,o),
(132,44,qs),
(132,21,o),
(100,-11,o),
(78,-11,qs),
(56,-11,o),
(24,21,o),
(24,44,qs),
(24,66,o),
(56,99,o),
(78,99,qs),
(100,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 156;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(5,9,qs),
(231,547,l),
(236,556,o),
(245,556,qs),
(254,556,ls),
(278,556,o),
(293,520,o),
(281,493,qs),
(77,9,ls),
(73,0,o),
(65,0,qs),
(9,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 286;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,101,qs),
(378,154,o),
(378,278,qs),
(378,496,o),
(252,496,qs),
(194,496,o),
(163,455,qs),
(125,403,o),
(125,278,qs),
(125,168,o),
(154,115,qs),
(185,61,o),
(252,61,qs),
(309,61,o)
);
},
{
closed = 1;
nodes = (
(107,54,qs),
(48,128,o),
(48,278,qs),
(48,409,o),
(95,483,qs),
(147,567,o),
(252,567,qs),
(342,567,o),
(394,502,qs),
(455,428,o),
(455,278,qs),
(455,147,o),
(409,73,qs),
(357,-10,o),
(252,-10,qs),
(159,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,447,ls),
(37,443,o),
(37,453,qs),
(37,511,ls),
(37,522,o),
(47,525,qs),
(108,547,ls),
(133,556,o),
(157,556,qs),
(170,556,ls),
(219,556,o),
(219,501,qs),
(219,69,l),
(285,69,ls),
(330,69,o),
(330,26,qs),
(330,11,ls),
(330,0,o),
(319,0,qs),
(44,0,ls),
(36,0,o),
(36,9,qs),
(36,61,ls),
(36,69,o),
(44,69,qs),
(144,69,l),
(144,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 39 77 2 1 0 0 1 96 0 1 1 40 1 78 50 35 51 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 353;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,69,o),
(399,27,qs),
(399,11,ls),
(399,0,o),
(388,0,qs),
(45,0,ls),
(37,0,o),
(37,9,qs),
(37,98,o),
(86,160,qs),
(118,200,o),
(192,249,qs),
(270,301,o),
(318,361,o),
(318,406,qs),
(318,449,o),
(263,498,o),
(213,498,qs),
(146,498,o),
(79,455,qs),
(70,450,o),
(66,450,qs),
(61,450,o),
(58,458,qs),
(52,478,ls),
(40,517,o),
(88,538,qs),
(155,567,o),
(218,567,qs),
(295,567,o),
(341,531,qs),
(395,490,o),
(395,407,qs),
(395,341,o),
(349,288,qs),
(320,254,o),
(251,207,qs),
(177,156,o),
(129,104,o),
(125,69,q),
(354,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 58 34 37 42 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,208,o),
(401,157,qs),
(401,88,o),
(354,43,qs),
(300,-10,o),
(208,-10,qs),
(127,-10,o),
(75,30,qs),
(25,69,o),
(25,117,qs),
(25,139,o),
(39,139,qs),
(45,139,o),
(54,129,qs),
(110,58,o),
(202,58,qs),
(258,58,o),
(324,113,o),
(324,159,qs),
(324,205,o),
(292,230,qs),
(260,254,o),
(205,254,qs),
(148,254,ls),
(106,254,o),
(106,294,qs),
(106,311,ls),
(106,324,o),
(116,324,qs),
(207,324,ls),
(308,324,o),
(308,412,qs),
(308,499,o),
(201,499,qs),
(134,499,o),
(68,456,qs),
(67,455,o),
(65,454,qs),
(58,450,o),
(56,450,qs),
(50,450,o),
(47,458,qs),
(41,478,ls),
(29,515,o),
(77,538,qs),
(143,567,o),
(204,567,qs),
(279,567,o),
(326,534,qs),
(383,494,o),
(383,419,qs),
(383,327,o),
(294,291,q),
(343,280,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 37 51 50 36 37 37 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,128,o),
(16,136,qs),
(16,177,ls),
(16,194,o),
(26,208,qs),
(243,537,l),
(254,556,o),
(277,556,qs),
(307,556,ls),
(354,556,o),
(354,508,qs),
(354,197,l),
(390,197,ls),
(435,197,o),
(435,154,qs),
(435,138,ls),
(435,128,o),
(424,128,qs),
(354,128,l),
(354,9,ls),
(354,0,o),
(347,0,qs),
(287,0,ls),
(279,0,o),
(279,9,qs),
(279,128,l),
(24,128,ls)
);
},
{
closed = 1;
nodes = (
(279,476,l),
(95,197,l),
(279,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,353,o),
(224,353,qs),
(303,353,o),
(352,312,qs),
(407,265,o),
(407,179,qs),
(407,100,o),
(357,48,qs),
(302,-10,o),
(210,-10,qs),
(135,-10,o),
(83,27,qs),
(29,65,o),
(29,116,qs),
(29,137,o),
(44,137,qs),
(51,137,o),
(59,128,qs),
(115,58,o),
(203,58,qs),
(259,58,o),
(293,86,qs),
(331,118,o),
(331,175,qs),
(331,225,o),
(303,254,qs),
(272,286,o),
(211,286,qs),
(142,286,o),
(68,259,qs),
(56,255,o),
(56,268,qs),
(56,547,ls),
(56,556,o),
(63,556,qs),
(329,556,ls),
(375,556,o),
(375,513,qs),
(375,497,ls),
(375,486,o),
(364,486,qs),
(130,486,l),
(130,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 38 37 51 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,362,qs),
(324,362,o),
(373,315,qs),
(428,263,o),
(428,184,qs),
(428,101,o),
(381,49,qs),
(328,-10,o),
(236,-10,qs),
(158,-10,o),
(104,35,qs),
(42,87,o),
(42,174,qs),
(42,213,o),
(71,291,o),
(108,353,qs),
(232,557,ls),
(238,567,o),
(247,567,qs),
(272,567,o),
(281,544,qs),
(292,516,o),
(270,479,qs),
(191,349,l),
(222,362,o)
);
},
{
closed = 1;
nodes = (
(145,96,qs),
(178,59,o),
(237,59,qs),
(286,59,o),
(318,88,qs),
(353,121,o),
(353,177,qs),
(353,225,o),
(326,257,qs),
(293,296,o),
(236,296,qs),
(187,296,o),
(154,267,qs),
(116,233,o),
(116,177,qs),
(116,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 39 77 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 2 0 133 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,486,o),
(27,495,qs),
(27,547,ls),
(27,556,o),
(35,556,qs),
(339,556,ls),
(385,556,o),
(385,513,qs),
(385,502,ls),
(385,480,o),
(374,456,qs),
(170,12,ls),
(165,0,o),
(154,0,qs),
(93,0,ls),
(83,0,o),
(87,9,qs),
(306,486,l),
(35,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 17 54 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,86,qs),
(172,54,o),
(231,54,qs),
(286,54,o),
(352,109,o),
(352,156,qs),
(352,201,o),
(321,230,qs),
(287,261,o),
(231,261,qs),
(178,261,o),
(111,203,o),
(111,156,qs),
(111,113,o)
);
},
{
closed = 1;
nodes = (
(150,353,qs),
(180,324,o),
(231,324,qs),
(278,324,o),
(337,373,o),
(337,412,qs),
(337,453,o),
(279,503,o),
(231,503,qs),
(183,503,o),
(125,453,o),
(125,412,qs),
(125,377,o)
);
},
{
closed = 1;
nodes = (
(52,422,qs),
(52,483,o),
(98,523,qs),
(148,567,o),
(231,567,qs),
(303,567,o),
(352,533,qs),
(410,492,o),
(410,422,qs),
(410,332,o),
(322,294,q),
(427,258,o),
(427,155,qs),
(427,87,o),
(381,42,qs),
(327,-11,o),
(231,-11,qs),
(148,-11,o),
(95,30,qs),
(36,76,o),
(36,155,qs),
(36,258,o),
(140,294,q),
(52,332,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 39 77 0 1 1 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 1 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 40 36 37 37 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,194,qs),
(141,194,o),
(92,239,qs),
(36,291,o),
(36,372,qs),
(36,455,o),
(85,508,qs),
(140,567,o),
(231,567,qs),
(310,567,o),
(362,522,qs),
(422,470,o),
(422,382,qs),
(422,342,o),
(394,265,o),
(356,204,qs),
(233,1,ls),
(227,-10,o),
(217,-10,qs),
(192,-10,o),
(183,14,qs),
(173,42,o),
(194,77,qs),
(275,209,l),
(246,194,o)
);
},
{
closed = 1;
nodes = (
(310,290,qs),
(347,323,o),
(347,379,qs),
(347,429,o),
(320,461,qs),
(287,498,o),
(229,498,qs),
(180,498,o),
(147,469,qs),
(111,435,o),
(111,379,qs),
(111,329,o),
(138,297,qs),
(170,261,o),
(228,261,qs),
(277,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 40 36 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,292,o),
(142,269,qs),
(142,246,o),
(110,214,o),
(88,214,qs),
(66,214,o),
(34,246,o),
(34,269,qs),
(34,291,o),
(66,324,o),
(88,324,qs),
(110,324,o)
);
},
{
closed = 1;
nodes = (
(142,67,o),
(142,44,qs),
(142,21,o),
(110,-11,o),
(88,-11,qs),
(66,-11,o),
(34,21,o),
(34,44,qs),
(34,66,o),
(66,99,o),
(88,99,qs),
(110,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 176;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,246,o),
(38,269,qs),
(38,291,o),
(70,324,o),
(92,324,qs),
(114,324,o),
(146,292,o),
(146,269,qs),
(146,246,o),
(114,214,o),
(92,214,qs),
(70,214,o)
);
},
{
closed = 1;
nodes = (
(145,65,o),
(145,42,qs),
(145,-39,o),
(61,-106,q),
(60,-108,o),
(56,-105,qs),
(34,-84,o),
(57,-59,qs),
(79,-32,o),
(84,-11,q),
(63,-7,o),
(38,23,o),
(38,44,qs),
(38,67,o),
(69,99,o),
(91,99,qs),
(114,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
18 1 2 73 4 1 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 3 1 0 1 0 81 13 12 1 0 12 28 13 28 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 176;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,158,o),
(407,99,qs),
(407,94,ls),
(407,86,o),
(399,88,q),
(45,238,l),
(37,240,o),
(37,251,qs),
(37,290,ls),
(37,299,o),
(45,303,qs),
(397,451,ls),
(407,455,o),
(407,445,qs),
(407,396,ls),
(407,382,o),
(393,377,qs),
(133,271,l),
(354,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(45,325,ls),
(37,325,o)
);
},
{
closed = 1;
nodes = (
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(45,148,ls),
(37,148,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 1 4 1 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 5 1 2 3 2 79 14 12 2 0 20 17 12 23 14 23 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,383,o),
(43,396,qs),
(43,445,ls),
(43,456,o),
(53,451,qs),
(406,303,ls),
(414,299,o),
(414,290,qs),
(414,251,ls),
(414,240,o),
(406,238,q),
(52,88,ls),
(43,85,o),
(43,94,qs),
(43,99,ls),
(43,159,o),
(96,180,qs),
(318,271,l),
(57,377,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,219,o),
(163,242,qs),
(177,263,o),
(213,292,qs),
(262,331,o),
(292,375,o),
(292,407,qs),
(292,449,o),
(236,497,o),
(188,497,qs),
(121,497,o),
(57,456,q),
(47,451,o),
(44,451,qs),
(38,451,o),
(36,459,qs),
(30,479,ls),
(17,518,o),
(65,539,qs),
(126,567,o),
(188,567,qs),
(265,567,o),
(312,532,qs),
(368,492,o),
(368,413,qs),
(368,362,o),
(332,317,qs),
(307,285,o),
(232,226,qs),
(213,211,o),
(213,183,qs),
(213,160,ls),
(213,152,o),
(205,152,qs),
(156,152,ls),
(148,152,o),
(148,160,qs),
(148,192,ls)
);
},
{
closed = 1;
nodes = (
(235,67,o),
(235,44,qs),
(235,21,o),
(204,-11,o),
(182,-11,qs),
(159,-11,o),
(127,21,o),
(127,44,qs),
(127,66,o),
(159,99,o),
(182,99,qs),
(203,99,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 4 3 0 4 126 0 3 3 1 97 0 1 1 39 77 6 1 4 4 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 4 3 0 4 126 0 1 0 3 2 1 3 105 6 1 4 4 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
39 38 45 43 38 49 39 49 34 37 43 49 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 393;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,135,qs),
(480,173,o),
(480,242,qs),
(480,289,o),
(429,344,o),
(384,344,qs),
(336,344,o),
(305,310,qs),
(269,271,o),
(269,208,qs),
(269,159,o),
(319,101,o),
(361,101,qs),
(413,101,o)
);
},
{
closed = 1;
nodes = (
(347,34,qs),
(287,34,o),
(245,77,qs),
(195,128,o),
(195,214,qs),
(195,290,o),
(242,345,qs),
(296,409,o),
(379,409,qs),
(458,409,o),
(492,352,q),
(503,403,o),
(551,403,qs),
(557,403,ls),
(564,403,o),
(564,393,q),
(542,163,ls),
(541,158,o),
(541,149,qs),
(539,133,o),
(539,126,qs),
(539,96,o),
(567,96,qs),
(603,96,o),
(626,131,qs),
(656,176,o),
(656,267,qs),
(656,373,o),
(592,437,qs),
(522,507,o),
(397,507,qs),
(280,507,o),
(202,435,qs),
(114,353,o),
(114,221,qs),
(114,95,o),
(185,17,qs),
(264,-69,o),
(403,-69,qs),
(528,-69,o),
(614,-7,qs),
(615,-6,ls),
(624,1,o),
(630,1,qs),
(639,1,o),
(639,-11,qs),
(639,-43,o),
(583,-80,qs),
(506,-131,o),
(396,-131,qs),
(249,-131,o),
(154,-47,qs),
(43,51,o),
(43,222,qs),
(43,357,o),
(133,455,qs),
(237,568,o),
(396,568,qs),
(525,568,o),
(615,500,qs),
(724,416,o),
(724,271,qs),
(724,174,o),
(682,110,qs),
(633,35,o),
(551,35,qs),
(519,35,o),
(476,73,o),
(474,103,q),
(433,34,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
72 67 2 1 9 64 14 2 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 2 5 6 128 10 1 9 0 1 0 9 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 12 1 0 8 2 0 89 0 8 11 1 2 5 8 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 83 81 75 73 71 68 61 59 53 51 45 43 39 38 34 32 26 24 18 16 8 6 0 13 1 13 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 766;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 22 19 16 13 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,68,o),
(376,114,o),
(376,164,qs),
(376,209,o),
(319,258,o),
(268,258,qs),
(140,258,l),
(140,68,l),
(267,68,ls)
);
},
{
closed = 1;
nodes = (
(311,325,o),
(356,369,o),
(356,409,qs),
(356,488,o),
(264,488,qs),
(140,488,l),
(140,325,l),
(271,325,ls)
);
},
{
closed = 1;
nodes = (
(455,207,o),
(455,157,qs),
(455,88,o),
(414,47,qs),
(368,0,o),
(277,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(260,556,ls),
(336,556,o),
(380,524,qs),
(431,487,o),
(431,414,qs),
(431,326,o),
(346,292,q),
(394,281,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
7 1 3 0 0 1 3 0 103 0 2 2 4 95 0 4 4 39 77 6 1 1 1 5 95 0 5 5 40 5 78 9 9 0 0 31 28 25 22 9 16 9 15 12 10 0 8 0 7 33 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,56,qs),
(50,134,o),
(50,277,qs),
(50,401,o),
(114,479,qs),
(186,567,o),
(309,567,qs),
(371,567,o),
(439,538,qs),
(487,516,o),
(477,477,qs),
(472,456,ls),
(470,446,o),
(462,446,qs),
(458,446,o),
(448,452,qs),
(382,495,o),
(309,495,qs),
(231,495,o),
(183,445,qs),
(128,388,o),
(128,276,qs),
(128,180,o),
(171,124,qs),
(219,61,o),
(311,61,qs),
(405,61,o),
(462,132,qs),
(470,142,o),
(477,142,qs),
(491,142,o),
(491,122,qs),
(491,84,o),
(454,46,qs),
(399,-11,o),
(301,-11,qs),
(195,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 5 0 3 4 5 3 105 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 30 28 23 21 19 17 11 9 7 5 0 36 1 36 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,71,o),
(427,283,qs),
(427,384,o),
(382,433,qs),
(333,485,o),
(224,485,qs),
(140,485,l),
(140,71,l),
(228,71,ls)
);
},
{
closed = 1;
nodes = (
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(228,556,ls),
(347,556,o),
(418,500,qs),
(506,431,o),
(506,286,qs),
(506,151,o),
(437,78,qs),
(364,0,o),
(220,0,qs),
(72,0,ls),
(64,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 5 1 2 2 40 2 78 11 9 0 0 20 17 9 23 11 23 0 8 0 7 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,71,o),
(382,27,qs),
(382,11,ls),
(382,0,o),
(371,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,312,l),
(310,312,ls),
(354,312,o),
(354,268,qs),
(354,252,ls),
(354,242,o),
(343,242,qs),
(140,242,l),
(140,71,l),
(337,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 51 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,310,l),
(308,310,ls),
(353,310,o),
(353,266,qs),
(353,251,ls),
(353,239,o),
(341,239,qs),
(140,239,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 51 51 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 397;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,224,ls),
(293,224,o),
(293,268,qs),
(293,284,ls),
(293,295,o),
(303,295,qs),
(505,295,ls),
(515,295,o),
(515,285,qs),
(515,101,ls),
(515,77,o),
(496,59,q),
(412,-11,o),
(308,-11,qs),
(202,-11,o),
(133,53,qs),
(49,132,o),
(49,279,qs),
(49,401,o),
(112,478,qs),
(184,567,o),
(313,567,qs),
(388,567,o),
(452,539,qs),
(500,520,o),
(491,479,qs),
(486,458,ls),
(483,448,o),
(476,448,qs),
(470,448,o),
(462,454,q),
(393,495,o),
(317,495,qs),
(233,495,o),
(184,447,qs),
(127,390,o),
(127,274,qs),
(127,180,o),
(169,124,qs),
(217,61,o),
(308,61,qs),
(387,61,o),
(442,107,q),
(442,224,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 103 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 103 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 53 38 37 34 38 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,310,l),
(386,310,l),
(386,547,ls),
(386,556,o),
(394,556,qs),
(401,556,ls),
(462,556,o),
(462,485,qs),
(462,9,ls),
(462,0,o),
(454,0,qs),
(394,0,ls),
(386,0,o),
(386,9,qs),
(386,239,l),
(140,239,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 3 0 0 1 3 0 103 4 1 2 2 39 77 5 1 1 1 40 1 78 51 50 18 51 50 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,9,ls),
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 205;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,97,qs),
(20,97,o),
(25,92,qs),
(59,54,o),
(94,54,qs),
(123,54,o),
(156,88,o),
(156,117,qs),
(156,547,ls),
(156,556,o),
(164,556,qs),
(171,556,ls),
(232,556,o),
(232,485,qs),
(232,114,ls),
(232,61,o),
(205,29,qs),
(173,-10,o),
(111,-10,qs),
(67,-10,o),
(6,42,o),
(6,81,qs),
(6,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 34 36 53 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,276,l),
(365,544,ls),
(376,556,o),
(385,556,qs),
(447,556,ls),
(451,556,o),
(454,549,o),
(451,547,q),
(274,336,l),
(473,10,ls),
(480,0,o),
(468,0,qs),
(404,0,ls),
(392,0,o),
(385,11,qs),
(222,276,l),
(140,178,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
16 9 8 1 0 5 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 52 53 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,71,o),
(351,27,qs),
(351,11,ls),
(351,0,o),
(341,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,71,l),
(307,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 15 0 14 51 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 370;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(456,556,o),
(464,556,qs),
(497,556,ls),
(521,556,o),
(552,525,o),
(553,500,qs),
(580,9,ls),
(580,0,o),
(573,0,qs),
(512,0,ls),
(504,0,o),
(504,9,qs),
(483,416,l),
(350,9,ls),
(347,0,o),
(338,0,qs),
(283,0,ls),
(276,0,o),
(272,9,q),
(144,412,l),
(122,9,ls),
(122,0,o),
(115,0,qs),
(53,0,ls),
(46,0,o),
(46,9,qs),
(76,547,ls),
(76,556,o),
(84,556,qs),
(116,556,ls),
(145,556,o),
(174,536,o),
(182,511,qs),
(313,108,l),
(454,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 14 2 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 52 52 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,556,o),
(396,556,qs),
(403,556,ls),
(463,556,o),
(463,485,qs),
(463,9,ls),
(463,0,o),
(456,0,qs),
(402,0,ls),
(388,0,o),
(380,13,qs),
(140,403,l),
(140,9,ls),
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(90,556,ls),
(115,556,o),
(143,538,o),
(160,511,qs),
(388,138,l),
(388,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
14 0 2 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 51 52 51 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,273,o),
(379,382,qs),
(379,427,o),
(352,454,qs),
(322,485,o),
(269,485,qs),
(140,485,l),
(140,273,l),
(266,273,ls)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(263,556,ls),
(349,556,o),
(399,514,qs),
(456,468,o),
(456,382,qs),
(456,306,o),
(412,258,qs),
(362,203,o),
(270,203,qs),
(140,203,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 1 0 2 4 1 2 103 0 0 0 3 95 0 3 3 39 77 0 4 4 40 4 78 0 0 26 23 20 17 11 9 0 8 0 7 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,70,qs),
(49,146,o),
(49,277,qs),
(49,401,o),
(107,478,qs),
(175,567,o),
(301,567,qs),
(410,567,o),
(477,498,qs),
(552,420,o),
(552,277,qs),
(552,167,o),
(508,96,qs),
(455,13,o),
(353,-3,q),
(378,-45,o),
(430,-45,qs),
(477,-45,o),
(515,-7,qs),
(520,-2,o),
(525,-2,qs),
(536,-2,o),
(536,-17,qs),
(536,-47,o),
(507,-75,qs),
(469,-111,o),
(410,-111,qs),
(305,-111,o),
(264,-8,q),
(169,3,o)
);
},
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 4 5 1 2 4 114 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
31 30 39 37 30 45 31 45 40 35 20 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,273,o),
(380,382,qs),
(380,430,o),
(322,485,o),
(270,485,qs),
(140,485,l),
(140,273,l),
(266,273,ls)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(262,556,ls),
(351,556,o),
(401,514,qs),
(457,468,o),
(457,379,qs),
(457,320,o),
(396,234,o),
(341,214,q),
(461,9,ls),
(467,0,o),
(456,0,qs),
(393,0,ls),
(380,0,o),
(373,11,qs),
(264,203,l),
(140,203,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
16 1 2 1 1 76 6 1 1 0 2 3 1 2 103 0 0 0 4 95 0 4 4 39 77 5 1 3 3 40 3 78 0 0 31 28 25 22 14 11 9 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,143,qs),
(41,143,o),
(47,136,qs),
(112,59,o),
(209,59,qs),
(270,59,o),
(339,108,o),
(339,150,qs),
(339,183,o),
(307,206,qs),
(285,222,o),
(232,240,qs),
(142,272,o),
(115,288,qs),
(37,333,o),
(37,414,qs),
(37,478,o),
(83,519,qs),
(136,566,o),
(224,566,qs),
(298,566,o),
(360,539,qs),
(409,520,o),
(398,479,qs),
(393,459,ls),
(391,449,o),
(385,449,qs),
(380,449,o),
(370,455,qs),
(302,498,o),
(223,498,qs),
(174,498,o),
(114,454,o),
(114,418,qs),
(114,384,o),
(146,361,qs),
(168,344,o),
(221,326,qs),
(313,294,o),
(338,280,qs),
(416,237,o),
(416,159,qs),
(416,87,o),
(370,42,qs),
(316,-11,o),
(217,-11,qs),
(129,-11,o),
(74,30,qs),
(21,70,o),
(21,123,qs),
(21,143,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 45 37 34 45 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,485,o),
(14,494,qs),
(14,547,ls),
(14,556,o),
(22,556,qs),
(365,556,ls),
(411,556,o),
(411,513,qs),
(411,496,ls),
(411,485,o),
(400,485,qs),
(248,485,l),
(248,9,ls),
(248,0,o),
(241,0,qs),
(182,0,ls),
(173,0,o),
(173,9,qs),
(173,485,l),
(22,485,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 18 51 34 50 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,50,qs),
(63,104,o),
(63,199,qs),
(63,547,ls),
(63,556,o),
(71,556,qs),
(78,556,ls),
(139,556,o),
(139,485,qs),
(139,212,ls),
(139,61,o),
(261,61,qs),
(387,61,o),
(387,213,qs),
(387,547,ls),
(387,556,o),
(395,556,qs),
(402,556,ls),
(462,556,o),
(462,485,qs),
(462,201,ls),
(462,126,o),
(430,73,qs),
(379,-10,o),
(262,-10,qs),
(160,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 39 77 0 2 2 0 97 4 1 0 0 46 0 78 1 0 20 17 14 12 9 6 0 25 1 25 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 525;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,556,o),
(408,556,qs),
(465,556,ls),
(474,556,o),
(471,547,qs),
(289,9,l),
(287,0,o),
(278,0,qs),
(211,0,ls),
(202,0,o),
(198,9,q),
(16,546,ls),
(12,556,o),
(22,556,qs),
(48,556,ls),
(75,556,o),
(103,533,o),
(113,503,qs),
(246,89,l),
(391,544,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 481;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(334,556,o),
(346,556,qs),
(366,556,ls),
(393,556,o),
(419,533,o),
(427,503,qs),
(540,99,l),
(648,544,ls),
(651,556,o),
(664,556,qs),
(721,556,ls),
(730,556,o),
(727,547,qs),
(586,9,l),
(582,0,o),
(574,0,qs),
(510,0,ls),
(501,0,o),
(499,9,qs),
(373,454,l),
(252,9,l),
(248,0,o),
(241,0,qs),
(176,0,ls),
(166,0,o),
(164,9,qs),
(26,546,ls),
(24,556,o),
(33,556,qs),
(50,556,ls),
(79,556,o),
(108,532,o),
(116,503,qs),
(214,99,l),
(331,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,0,o),
(81,0,qs),
(21,0,ls),
(11,0,o),
(16,9,qs),
(191,289,l),
(34,546,l),
(31,549,o),
(35,556,o),
(39,556,qs),
(67,556,ls),
(95,556,o),
(122,538,o),
(139,510,qs),
(244,341,l),
(369,544,ls),
(376,556,o),
(387,556,qs),
(446,556,ls),
(456,556,o),
(451,547,qs),
(295,292,l),
(472,9,l),
(480,0,o),
(467,0,qs),
(406,0,ls),
(394,0,o),
(387,12,qs),
(244,241,l),
(100,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
23 14 7 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 54 37 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 480;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,556,o),
(13,556,qs),
(41,556,ls),
(66,556,o),
(99,533,o),
(114,506,qs),
(228,292,l),
(362,543,l),
(367,556,o),
(379,556,qs),
(437,556,ls),
(449,556,o),
(443,544,qs),
(263,212,l),
(263,9,ls),
(263,0,o),
(255,0,qs),
(196,0,ls),
(188,0,o),
(188,9,qs),
(188,213,l),
(7,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 7 0 3 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 53 52 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 445;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,71,o),
(414,27,qs),
(414,11,ls),
(414,0,o),
(402,0,qs),
(41,0,ls),
(33,0,o),
(33,9,qs),
(33,51,ls),
(33,69,o),
(46,88,qs),
(328,485,l),
(48,485,ls),
(40,485,o),
(40,494,qs),
(40,547,ls),
(40,556,o),
(48,556,qs),
(356,556,ls),
(412,556,o),
(412,505,qs),
(412,492,ls),
(412,476,o),
(399,455,q),
(124,71,l),
(369,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,-144,o),
(67,-110,o),
(67,-82,qs),
(67,633,ls),
(67,662,o),
(102,696,o),
(131,696,qs),
(238,696,ls),
(250,696,o),
(250,683,qs),
(250,678,ls),
(250,632,o),
(199,632,qs),
(153,632,ls),
(136,632,o),
(136,614,qs),
(136,-62,ls),
(136,-80,o),
(153,-80,qs),
(199,-80,ls),
(250,-80,o),
(250,-126,qs),
(250,-131,ls),
(250,-144,o),
(238,-144,qs),
(131,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 16 13 10 7 4 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,556,o),
(11,556,qs),
(22,556,ls),
(51,556,o),
(83,532,o),
(96,502,qs),
(305,9,ls),
(309,0,o),
(300,0,qs),
(245,0,ls),
(236,0,o),
(232,9,qs),
(5,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-144,o),
(56,-131,qs),
(56,-126,ls),
(56,-80,o),
(107,-80,qs),
(153,-80,ls),
(170,-80,o),
(170,-62,qs),
(170,614,ls),
(170,632,o),
(153,632,qs),
(107,632,ls),
(56,632,o),
(56,678,qs),
(56,683,ls),
(56,696,o),
(69,696,qs),
(175,696,ls),
(205,696,o),
(239,662,o),
(239,633,qs),
(239,-82,ls),
(239,-110,o),
(205,-144,o),
(175,-144,qs),
(69,-144,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 21 18 15 12 9 6 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 306;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,271,o),
(86,271,qs),
(36,271,ls),
(26,271,o),
(30,279,qs),
(171,544,l),
(176,556,o),
(190,556,qs),
(235,556,o),
(259,512,qs),
(384,279,l),
(385,276,o),
(381,271,o),
(377,271,qs),
(327,271,ls),
(316,271,o),
(309,282,q),
(207,477,l),
(104,282,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 51 37 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 407;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,-180,qs),
(-6,-131,ls),
(-6,-122,o),
(2,-122,qs),
(432,-122,ls),
(441,-122,o),
(441,-131,qs),
(441,-180,ls),
(441,-188,o),
(432,-188,qs),
(2,-188,ls),
(-6,-188,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 434;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171,430,o),
(167,430,qs),
(114,430,ls),
(98,430,o),
(86,441,qs),
(4,507,ls),
(1,509,o),
(3,516,o),
(8,516,qs),
(72,516,ls),
(87,516,o),
(97,506,qs),
(171,439,l),
(174,437,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 37 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 173;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 37 25 37 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o),
(53,9,qs),
(53,547,ls),
(53,556,o),
(61,556,qs),
(66,556,ls),
(127,556,o),
(127,487,qs),
(127,316,l),
(168,377,o),
(251,377,qs),
(323,377,o),
(369,330,qs),
(422,277,o),
(422,184,qs),
(422,107,o),
(383,54,qs),
(336,-9,o),
(252,-9,qs),
(167,-9,o),
(127,49,q),
(127,9,ls)
);
},
{
closed = 1;
nodes = (
(306,85,qs),
(345,118,o),
(345,184,qs),
(345,239,o),
(316,272,qs),
(286,306,o),
(236,306,qs),
(185,306,o),
(127,241,o),
(127,184,qs),
(127,127,o),
(187,61,o),
(237,61,qs),
(277,61,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 3 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 3 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 6 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 32 30 25 38 26 38 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,306,qs),
(178,306,o),
(149,278,qs),
(115,245,o),
(115,182,qs),
(115,127,o),
(141,95,qs),
(172,57,o),
(231,57,qs),
(286,57,o),
(322,94,qs),
(329,101,o),
(334,101,qs),
(344,101,o),
(344,86,qs),
(344,54,o),
(316,26,qs),
(278,-10,o),
(215,-10,qs),
(140,-10,o),
(93,35,qs),
(38,87,o),
(38,183,qs),
(38,264,o),
(82,317,qs),
(133,377,o),
(220,377,qs),
(266,377,o),
(304,362,qs),
(343,347,o),
(332,307,qs),
(327,287,ls),
(326,279,o),
(320,279,qs),
(316,279,o),
(312,282,q),
(268,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 128 0 3 4 5 3 4 126 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 46 2 78 38 35 20 38 37 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,556,o),
(340,556,qs),
(345,556,ls),
(407,556,o),
(407,487,qs),
(407,9,ls),
(407,0,o),
(399,0,qs),
(340,0,ls),
(332,0,o),
(332,9,qs),
(332,52,l),
(291,-9,o),
(210,-9,qs),
(136,-9,o),
(89,41,qs),
(38,96,o),
(38,184,qs),
(38,262,o),
(80,315,qs),
(130,377,o),
(215,377,qs),
(294,377,o),
(332,320,q),
(332,547,ls)
);
},
{
closed = 1;
nodes = (
(332,126,o),
(332,184,qs),
(332,246,o),
(300,278,qs),
(271,306,o),
(224,306,qs),
(181,306,o),
(152,280,qs),
(115,246,o),
(115,184,qs),
(115,129,o),
(173,61,o),
(221,61,qs),
(274,61,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 1 5 0 12 1 1 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
0 1 5 0 12 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 6 1 4 4 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 0 2 2 40 77 6 1 4 4 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 33 31 25 38 26 38 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,56,qs),
(294,56,o),
(346,93,qs),
(348,94,o),
(351,97,q),
(357,101,o),
(360,101,qs),
(370,101,o),
(370,87,qs),
(370,54,o),
(338,27,qs),
(296,-9,o),
(224,-9,qs),
(151,-9,o),
(101,31,qs),
(37,83,o),
(37,184,qs),
(37,263,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(289,377,o),
(332,331,qs),
(376,285,o),
(376,208,qs),
(376,188,o),
(374,169,qs),
(372,157,o),
(359,157,qs),
(111,157,l),
(122,56,o)
);
},
{
closed = 1;
nodes = (
(304,259,o),
(256,311,o),
(211,311,qs),
(169,311,o),
(117,260,o),
(113,214,q),
(302,214,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 7 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 31 37 31 37 35 37 20 38 38 32 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,302,o),
(14,310,qs),
(14,359,ls),
(14,368,o),
(22,368,qs),
(82,368,l),
(82,442,ls),
(82,499,o),
(134,562,o),
(181,562,qs),
(217,562,o),
(270,516,o),
(270,485,qs),
(270,471,o),
(261,471,qs),
(258,471,o),
(254,473,q),
(253,474,o),
(252,474,q),
(225,496,o),
(199,496,qs),
(156,496,o),
(156,438,qs),
(156,368,l),
(247,368,ls),
(255,368,o),
(255,359,qs),
(255,310,ls),
(255,302,o),
(247,302,qs),
(156,302,l),
(156,9,ls),
(156,0,o),
(148,0,qs),
(90,0,ls),
(82,0,o),
(82,9,qs),
(82,302,l),
(22,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 0 78 0 0 0 38 0 37 35 35 36 34 35 34 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,-6,qs),
(136,-6,o),
(89,43,qs),
(38,96,o),
(38,184,qs),
(38,262,o),
(80,315,qs),
(130,377,o),
(213,377,qs),
(297,377,o),
(337,319,q),
(344,368,o),
(394,368,qs),
(399,368,ls),
(407,368,o),
(407,360,qs),
(407,12,ls),
(407,-67,o),
(366,-114,qs),
(318,-171,o),
(220,-171,qs),
(154,-171,o),
(108,-141,qs),
(58,-109,o),
(58,-68,qs),
(58,-51,o),
(69,-51,qs),
(72,-51,o),
(77,-55,qs),
(80,-57,o),
(81,-58,qs),
(129,-101,o),
(207,-101,qs),
(332,-101,o),
(332,12,qs),
(332,54,l),
(290,-6,o)
);
},
{
closed = 1;
nodes = (
(332,126,o),
(332,184,qs),
(332,246,o),
(300,278,qs),
(271,306,o),
(224,306,qs),
(181,306,o),
(152,280,qs),
(115,246,o),
(115,184,qs),
(115,129,o),
(173,61,o),
(221,61,qs),
(274,61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
25 1 7 3 0 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 46 77 0 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 0 5 1 0 128 0 3 3 42 77 0 7 7 4 97 0 4 4 48 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
38 37 45 43 37 50 38 50 38 34 53 36 36 34 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(241,377,qs),
(305,377,o),
(345,339,qs),
(391,296,o),
(391,217,qs),
(391,9,ls),
(391,0,o),
(383,0,qs),
(324,0,ls),
(316,0,o),
(316,9,qs),
(316,204,ls),
(316,254,o),
(268,308,o),
(224,308,qs),
(127,308,o),
(127,199,qs),
(127,9,ls),
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o),
(53,9,qs),
(53,547,ls),
(53,556,o),
(61,556,qs),
(66,556,ls),
(127,556,o),
(127,487,qs),
(127,323,l),
(163,377,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 1 76 0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 37 52 35 51 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,9,qs),
(53,359,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(128,368,o),
(128,299,qs),
(128,9,ls),
(128,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o)
);
},
{
closed = 1;
nodes = (
(72,513,o),
(91,513,qs),
(110,513,o),
(135,486,o),
(135,467,qs),
(135,449,o),
(109,422,o),
(91,422,qs),
(72,422,o),
(46,448,o),
(46,467,qs),
(46,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 1 42 77 4 1 0 0 40 0 78 2 0 22 20 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,-106,qs),
(53,-106,o),
(53,-42,qs),
(53,360,ls),
(53,368,o),
(60,368,qs),
(65,368,ls),
(127,368,o),
(127,299,qs),
(127,-48,ls),
(127,-171,o),
(33,-171,qs),
(-4,-171,o),
(-59,-124,o),
(-59,-92,qs),
(-59,-78,o),
(-50,-78,qs),
(-46,-78,o),
(-42,-81,qs),
(-12,-106,o)
);
},
{
closed = 1;
nodes = (
(72,513,o),
(90,513,qs),
(109,513,o),
(135,486,o),
(135,467,qs),
(135,448,o),
(109,422,o),
(90,422,qs),
(72,422,o),
(45,448,o),
(45,467,qs),
(45,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 2 3 2 0 3 128 0 5 0 4 2 5 4 105 0 2 2 42 77 0 3 3 1 98 0 1 1 50 1 78 36 35 35 51 35 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o),
(53,9,qs),
(53,547,ls),
(53,556,o),
(61,556,qs),
(66,556,ls),
(127,556,o),
(127,487,qs),
(127,224,l),
(257,358,ls),
(268,368,o),
(280,368,qs),
(342,368,ls),
(346,368,o),
(349,363,o),
(346,360,qs),
(224,234,l),
(363,9,ls),
(368,0,o),
(358,0,qs),
(295,0,ls),
(282,0,o),
(276,11,qs),
(173,181,l),
(127,135,l),
(127,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
16 9 8 1 0 5 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 51 52 53 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,106,qs),
(52,547,ls),
(52,556,o),
(60,556,qs),
(65,556,ls),
(126,556,o),
(126,487,qs),
(126,111,ls),
(126,59,o),
(165,59,qs),
(191,59,o),
(213,83,q),
(217,89,o),
(223,89,qs),
(232,89,o),
(232,76,qs),
(232,40,o),
(182,-9,o),
(145,-9,qs),
(52,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 4 1 0 0 49 0 78 1 0 16 13 10 8 5 4 0 19 1 19 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,376,qs),
(325,376,o),
(364,308,q),
(411,376,o),
(492,376,qs),
(559,376,o),
(598,338,qs),
(642,296,o),
(642,216,qs),
(642,9,ls),
(642,0,o),
(634,0,qs),
(576,0,ls),
(568,0,o),
(568,9,qs),
(568,203,ls),
(568,307,o),
(479,307,qs),
(385,307,o),
(385,199,qs),
(385,9,ls),
(385,0,o),
(377,0,qs),
(318,0,ls),
(310,0,o),
(310,9,qs),
(310,203,ls),
(310,307,o),
(222,307,qs),
(127,307,o),
(127,199,qs),
(127,9,ls),
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o),
(53,9,qs),
(53,360,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(115,368,o),
(125,319,q),
(162,376,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 37 51 35 51 35 51 49 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,376,qs),
(305,376,o),
(344,338,qs),
(390,295,o),
(390,216,qs),
(390,9,ls),
(390,0,o),
(382,0,qs),
(323,0,ls),
(315,0,o),
(315,9,qs),
(315,202,ls),
(315,252,o),
(267,307,o),
(223,307,qs),
(126,307,o),
(126,198,qs),
(126,9,ls),
(126,0,o),
(119,0,qs),
(60,0,ls),
(52,0,o),
(52,9,qs),
(52,359,ls),
(52,368,o),
(60,368,qs),
(65,368,ls),
(116,368,o),
(124,318,q),
(162,376,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
37 52 35 51 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 48 77 5 1 2 2 0 97 4 1 0 0 49 0 78 17 16 1 0 24 22 16 30 17 30 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,-160,o),
(120,-160,qs),
(61,-160,ls),
(53,-160,o),
(53,-151,qs),
(53,360,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(113,368,o),
(125,316,q),
(165,377,o),
(247,377,qs),
(322,377,o),
(369,329,qs),
(422,276,o),
(422,184,qs),
(422,107,o),
(383,54,qs),
(336,-9,o),
(252,-9,qs),
(166,-9,o),
(127,49,q),
(127,-151,ls)
);
},
{
closed = 1;
nodes = (
(305,85,qs),
(345,118,o),
(345,184,qs),
(345,239,o),
(316,272,qs),
(286,306,o),
(236,306,qs),
(185,306,o),
(127,241,o),
(127,184,qs),
(127,122,o),
(161,90,qs),
(191,61,o),
(238,61,qs),
(277,61,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
12 1 5 2 0 1 0 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 38 25 38 51 50 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,-9,qs),
(136,-9,o),
(89,41,qs),
(38,96,o),
(38,184,qs),
(38,262,o),
(80,315,qs),
(130,377,o),
(213,377,qs),
(295,377,o),
(337,319,q),
(344,368,o),
(394,368,qs),
(399,368,ls),
(407,368,o),
(407,360,qs),
(407,-151,ls),
(407,-160,o),
(399,-160,qs),
(340,-160,ls),
(332,-160,o),
(332,-151,qs),
(332,52,l),
(291,-9,o)
);
},
{
closed = 1;
nodes = (
(332,126,o),
(332,184,qs),
(332,246,o),
(300,278,qs),
(271,306,o),
(224,306,qs),
(181,306,o),
(152,280,qs),
(115,246,o),
(115,184,qs),
(115,129,o),
(174,61,o),
(221,61,qs),
(274,61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 37 25 37 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,368,o),
(233,368,qs),
(244,368,ls),
(252,368,o),
(252,360,qs),
(252,305,ls),
(252,296,o),
(244,296,qs),
(220,296,ls),
(170,296,o),
(127,245,o),
(127,184,qs),
(127,9,ls),
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o),
(53,9,qs),
(53,360,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(119,368,o),
(125,315,q),
(142,344,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 2 2 0 97 3 1 0 0 42 77 0 1 1 40 1 78 51 52 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,313,qs),
(106,313,o),
(106,273,qs),
(106,258,o),
(134,235,o),
(173,220,qs),
(246,192,o),
(295,147,o),
(295,108,qs),
(295,58,o),
(263,26,qs),
(224,-11,o),
(155,-11,qs),
(101,-11,o),
(22,45,o),
(22,84,qs),
(22,101,o),
(33,101,qs),
(38,101,o),
(42,96,q),
(90,53,o),
(148,53,qs),
(220,53,o),
(220,101,qs),
(220,117,o),
(191,140,o),
(153,154,qs),
(80,182,o),
(30,227,o),
(30,267,qs),
(30,314,o),
(65,344,qs),
(103,377,o),
(166,377,qs),
(214,377,o),
(251,359,qs),
(286,344,o),
(278,305,qs),
(275,292,ls),
(273,285,o),
(268,285,qs),
(266,285,o),
(262,287,qs),
(259,288,o),
(259,288,q),
(212,313,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 5 3 5 0 3 128 0 3 2 5 3 2 126 0 5 5 1 97 0 1 1 48 77 0 2 2 4 97 0 4 4 46 4 78 42 35 34 42 37 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,302,o),
(16,310,qs),
(16,360,ls),
(16,368,o),
(24,368,qs),
(92,368,l),
(92,492,ls),
(92,501,o),
(99,501,qs),
(104,501,ls),
(166,501,o),
(166,431,qs),
(166,368,l),
(243,368,ls),
(250,368,o),
(250,360,qs),
(250,310,ls),
(250,302,o),
(243,302,qs),
(166,302,l),
(166,9,ls),
(166,0,o),
(158,0,qs),
(99,0,ls),
(92,0,o),
(92,9,qs),
(92,302,l),
(24,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 5 2 1 1 2 95 4 1 2 2 42 77 0 3 3 0 95 0 0 0 40 0 78 0 0 0 27 0 26 34 50 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 276;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,32,qs),
(49,79,o),
(49,172,qs),
(49,359,ls),
(49,368,o),
(57,368,qs),
(62,368,ls),
(123,368,o),
(123,299,qs),
(123,164,ls),
(123,113,o),
(170,59,o),
(213,59,qs),
(303,59,o),
(303,161,qs),
(303,359,ls),
(303,368,o),
(311,368,qs),
(316,368,ls),
(378,368,o),
(378,299,qs),
(378,167,ls),
(378,89,o),
(342,43,qs),
(299,-10,o),
(213,-10,qs),
(137,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 42 77 0 2 2 0 97 4 1 0 0 46 0 78 1 0 21 18 14 12 9 6 0 26 1 26 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 426;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,368,o),
(286,368,qs),
(341,368,ls),
(348,368,o),
(346,360,qs),
(224,8,ls),
(221,0,o),
(214,0,qs),
(150,0,ls),
(142,0,o),
(138,8,q),
(16,360,ls),
(13,368,o),
(21,368,qs),
(37,368,ls),
(68,368,o),
(100,341,o),
(111,306,qs),
(182,82,l),
(270,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,368,o),
(263,368,qs),
(273,368,ls),
(304,368,o),
(334,342,o),
(345,306,qs),
(410,96,l),
(485,357,ls),
(489,368,o),
(501,368,qs),
(551,368,ls),
(560,368,o),
(557,360,qs),
(448,8,ls),
(445,0,o),
(437,0,qs),
(382,0,ls),
(374,0,o),
(371,8,qs),
(288,269,l),
(207,8,ls),
(204,0,o),
(197,0,qs),
(140,0,ls),
(132,0,o),
(128,8,q),
(20,360,ls),
(18,368,o),
(26,368,qs),
(39,368,ls),
(71,368,o),
(103,340,o),
(112,306,qs),
(171,96,l),
(251,359,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,0,o),
(74,0,qs),
(17,0,ls),
(13,0,o),
(11,6,o),
(13,9,qs),
(132,194,l),
(28,360,l),
(22,368,o),
(32,368,qs),
(58,368,ls),
(85,368,o),
(116,347,o),
(137,313,qs),
(180,247,l),
(248,357,ls),
(255,368,o),
(269,368,qs),
(323,368,ls),
(331,368,o),
(327,360,q),
(227,199,l),
(348,9,ls),
(350,6,o),
(348,0,o),
(344,0,qs),
(285,0,ls),
(273,0,o),
(266,11,qs),
(178,149,l),
(92,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
24 23 15 8 4 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 53 53 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,368,o),
(20,368,qs),
(37,368,ls),
(67,368,o),
(98,342,o),
(111,306,qs),
(183,88,l),
(271,357,ls),
(275,368,o),
(287,368,qs),
(342,368,ls),
(348,368,o),
(347,359,q),
(216,-9,ls),
(184,-102,o),
(125,-171,o),
(76,-171,qs),
(42,-171,o),
(-8,-125,o),
(-8,-93,qs),
(-8,-78,o),
(2,-78,qs),
(6,-78,o),
(11,-82,qs),
(38,-106,o),
(63,-106,qs),
(90,-106,o),
(122,-66,o),
(143,-7,q),
(15,359,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 37 52 35 34 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,66,o),
(304,57,qs),
(304,9,ls),
(304,0,o),
(297,0,qs),
(39,0,ls),
(31,0,o),
(31,9,qs),
(31,46,ls),
(31,59,o),
(44,76,qs),
(224,302,l),
(44,302,ls),
(36,302,o),
(36,310,qs),
(36,359,ls),
(36,368,o),
(44,368,qs),
(251,368,ls),
(281,368,o),
(304,343,o),
(304,313,qs),
(304,292,o),
(290,275,qs),
(124,66,l),
(297,66,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,-144,o),
(107,-110,o),
(107,-82,qs),
(107,196,ls),
(107,240,o),
(68,245,qs),
(56,247,o),
(56,258,qs),
(56,294,ls),
(56,306,o),
(68,307,qs),
(107,313,o),
(107,357,qs),
(107,633,ls),
(107,662,o),
(142,696,o),
(172,696,qs),
(278,696,ls),
(291,696,o),
(291,683,qs),
(291,678,ls),
(291,657,o),
(263,632,o),
(240,632,qs),
(194,632,ls),
(177,632,o),
(177,614,qs),
(177,352,ls),
(177,302,o),
(147,276,q),
(177,251,o),
(177,199,qs),
(177,-62,ls),
(177,-80,o),
(194,-80,qs),
(240,-80,ls),
(263,-80,o),
(291,-105,o),
(291,-126,qs),
(291,-131,ls),
(291,-144,o),
(278,-144,qs),
(172,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 2 1 3 2 105 0 1 1 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 26 23 19 16 8 5 0 42 1 41 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-140,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 39 77 2 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
2 0 7 5 0 10 2 10 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-144,o),
(56,-131,qs),
(56,-126,ls),
(56,-105,o),
(84,-80,o),
(107,-80,qs),
(153,-80,ls),
(170,-80,o),
(170,-62,qs),
(170,199,ls),
(170,251,o),
(200,276,q),
(170,302,o),
(170,352,qs),
(170,614,ls),
(170,632,o),
(153,632,qs),
(107,632,ls),
(84,632,o),
(56,657,o),
(56,678,qs),
(56,683,ls),
(56,696,o),
(69,696,qs),
(175,696,ls),
(205,696,o),
(240,662,o),
(240,633,qs),
(240,357,ls),
(240,313,o),
(279,307,qs),
(291,306,o),
(291,294,qs),
(291,258,ls),
(291,247,o),
(279,245,qs),
(240,240,o),
(240,196,qs),
(240,-82,ls),
(240,-110,o),
(205,-144,o),
(175,-144,qs),
(69,-144,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 95 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 37 34 26 23 19 16 0 42 1 41 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,312,qs),
(355,271,ls),
(355,251,o),
(346,243,qs),
(315,216,o),
(271,216,qs),
(242,216,o),
(201,230,qs),
(151,248,o),
(129,248,qs),
(85,248,o),
(52,217,qs),
(49,214,o),
(43,216,o),
(43,219,qs),
(43,262,ls),
(43,280,o),
(52,288,qs),
(87,316,o),
(129,316,qs),
(156,316,o),
(197,301,qs),
(247,283,o),
(271,283,qs),
(313,283,o),
(347,315,q),
(355,320,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
11 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 398;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,299,o),
(26,322,qs),
(26,344,o),
(57,377,o),
(79,377,qs),
(102,377,o),
(134,344,o),
(134,322,qs),
(134,299,o),
(101,266,o),
(79,266,qs),
(57,266,o)
);
},
{
closed = 1;
nodes = (
(42,-189,o),
(42,-180,qs),
(49,204,ls),
(49,212,o),
(57,212,qs),
(112,212,o),
(113,142,qs),
(119,-180,ls),
(119,-189,o),
(111,-189,qs),
(49,-189,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 3 5 1 2 3 2 99 4 1 0 0 1 97 0 1 1 48 0 78 13 12 1 0 18 16 12 22 13 21 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 165;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,-68,o),
(235,-68,qs),
(200,-68,ls),
(191,-68,o),
(191,-59,qs),
(191,-9,l),
(125,-2,o),
(84,43,qs),
(36,95,o),
(36,183,qs),
(36,257,o),
(74,308,qs),
(116,366,o),
(191,374,q),
(191,429,ls),
(191,438,o),
(200,438,qs),
(235,438,ls),
(243,438,o),
(243,429,qs),
(243,376,l),
(277,373,o),
(302,362,qs),
(339,347,o),
(329,307,qs),
(325,289,ls),
(324,282,o),
(318,282,qs),
(316,282,o),
(312,284,qs),
(277,303,o),
(243,307,q),
(243,57,l),
(288,60,o),
(320,92,qs),
(321,93,o),
(322,94,qs),
(329,99,o),
(333,99,qs),
(342,99,o),
(342,84,qs),
(342,53,o),
(285,0,o),
(243,-7,q),
(243,-59,ls)
);
},
{
closed = 1;
nodes = (
(154,295,o),
(112,230,o),
(112,182,qs),
(112,80,o),
(191,61,q),
(191,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
50 30 23 16 12 5 0 2 45 1 1 0 38 0 2 3 1 3 76 0 0 2 1 2 0 1 128 0 1 3 2 1 3 126 0 2 0 3 2 89 0 2 2 3 97 0 3 2 3 81 60 62 21 20 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(431,69,o),
(431,26,qs),
(431,11,ls),
(431,0,o),
(421,0,qs),
(54,0,ls),
(46,0,o),
(46,9,qs),
(46,61,ls),
(46,69,o),
(54,69,qs),
(138,69,l),
(168,137,o),
(168,193,qs),
(168,220,o),
(152,249,q),
(54,249,ls),
(46,249,o),
(46,258,qs),
(46,310,ls),
(46,319,o),
(54,319,qs),
(120,319,l),
(94,366,o),
(94,412,qs),
(94,480,o),
(137,521,qs),
(185,567,o),
(270,567,qs),
(330,567,o),
(389,539,qs),
(440,518,o),
(426,480,qs),
(419,461,ls),
(416,452,o),
(411,452,qs),
(407,452,o),
(397,458,qs),
(336,498,o),
(273,498,qs),
(225,498,o),
(169,451,o),
(169,411,qs),
(169,376,o),
(198,319,q),
(337,319,ls),
(381,319,o),
(381,276,qs),
(381,261,ls),
(381,249,o),
(370,249,qs),
(228,249,l),
(240,214,o),
(240,193,qs),
(240,142,o),
(209,69,q),
(386,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 39 77 10 9 2 7 7 8 95 0 8 8 40 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 40 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 56 0 55 51 36 35 37 37 34 36 35 36 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 471;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,128,o),
(47,137,qs),
(47,178,ls),
(47,187,o),
(55,187,qs),
(201,187,l),
(201,213,l),
(180,251,l),
(55,251,ls),
(47,251,o),
(47,259,qs),
(47,301,ls),
(47,309,o),
(55,309,qs),
(148,309,l),
(20,547,ls),
(16,556,o),
(26,556,qs),
(54,556,ls),
(101,556,o),
(127,506,qs),
(241,292,l),
(375,544,l),
(380,556,o),
(394,556,qs),
(450,556,ls),
(464,556,o),
(457,544,qs),
(329,309,l),
(419,309,ls),
(426,309,o),
(426,301,qs),
(426,259,ls),
(426,251,o),
(419,251,qs),
(298,251,l),
(276,214,l),
(276,187,l),
(419,187,ls),
(426,187,o),
(426,178,qs),
(426,137,ls),
(426,128,o),
(419,128,qs),
(276,128,l),
(276,9,ls),
(276,0,o),
(269,0,qs),
(210,0,ls),
(201,0,o),
(201,9,qs),
(201,128,l),
(55,128,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
30 1 3 4 45 15 2 2 3 2 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 52 0 51 48 46 35 34 52 50 35 34 35 34 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,272,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,272,ls),
(129,263,o),
(120,263,qs),
(70,263,ls),
(62,263,o)
);
},
{
closed = 1;
nodes = (
(62,-140,qs),
(62,145,ls),
(62,154,o),
(70,154,qs),
(120,154,ls),
(129,154,o),
(129,145,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 39 77 0 3 3 2 97 5 1 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 4 1 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 11 2 0 19 16 11 22 13 22 7 5 0 10 2 10 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,243,qs),
(300,264,o),
(265,299,o),
(219,322,qs),
(191,336,o),
(188,338,q),
(130,300,o),
(130,257,qs),
(130,227,o),
(161,202,qs),
(179,188,o),
(245,154,q),
(300,196,o)
);
},
{
closed = 1;
nodes = (
(199,-38,qs),
(235,-38,o),
(279,-5,o),
(279,21,qs),
(279,58,o),
(201,102,qs),
(133,140,o),
(115,153,qs),
(58,196,o),
(58,248,qs),
(58,317,o),
(142,368,q),
(88,410,o),
(88,457,qs),
(88,504,o),
(122,534,qs),
(160,568,o),
(224,568,qs),
(273,568,o),
(314,549,qs),
(351,530,o),
(339,494,qs),
(335,482,l),
(335,481,l),
(332,475,o),
(329,475,qs),
(327,475,o),
(320,479,qs),
(276,507,o),
(231,507,qs),
(164,507,o),
(164,460,qs),
(164,427,o),
(238,389,qs),
(300,357,o),
(319,343,qs),
(373,304,o),
(373,252,qs),
(373,177,o),
(295,123,q),
(355,81,o),
(355,29,qs),
(355,-22,o),
(321,-56,qs),
(279,-98,o),
(206,-98,qs),
(137,-98,o),
(90,-62,qs),
(53,-32,o),
(66,-1,qs),
(71,11,ls),
(75,21,o),
(83,15,q),
(138,-38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
54 26 6 3 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 0 3 0 101 0 1 1 2 97 0 2 2 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
66 64 49 47 37 35 21 19 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,513,o),
(44,513,qs),
(63,513,o),
(89,486,o),
(89,467,qs),
(89,448,o),
(63,422,o),
(44,422,qs),
(26,422,o),
(0,449,o),
(0,467,qs),
(0,486,o)
);
},
{
closed = 1;
nodes = (
(162,513,o),
(181,513,qs),
(200,513,o),
(226,486,o),
(226,467,qs),
(226,449,o),
(200,422,o),
(181,422,qs),
(162,422,o),
(136,448,o),
(136,467,qs),
(136,486,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 226;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o),
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(262,423,qs),
(229,423,o),
(191,378,o),
(191,339,qs),
(191,301,o),
(229,257,o),
(262,257,qs),
(301,257,o),
(327,289,qs),
(330,293,o),
(334,293,qs),
(340,293,o),
(340,285,qs),
(339,259,o),
(288,219,o),
(256,219,qs),
(210,219,o),
(180,247,qs),
(146,281,o),
(146,340,qs),
(146,392,o),
(176,426,qs),
(209,463,o),
(262,463,qs),
(289,463,o),
(316,451,qs),
(334,443,o),
(333,431,qs),
(331,412,ls),
(329,400,o),
(320,406,qs),
(295,423,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 73 values pushed */
0 6 8 7 8 6 7 128 0 1 0 3 4 1 3 105 0 4 0 8 6 4 8 105 0 7 0 5 2 7 5 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 17 16 63 61 57 55 53 51 48 46 40 38 25 23 16 31 17 31 38 35 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 505;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,253,qs),
(98,253,o),
(60,293,qs),
(18,336,o),
(18,406,qs),
(18,467,o),
(53,509,qs),
(94,558,o),
(160,558,qs),
(225,558,o),
(262,513,q),
(267,551,o),
(309,551,qs),
(314,551,ls),
(320,551,o),
(320,544,qs),
(320,266,ls),
(320,261,o),
(314,261,qs),
(262,261,ls),
(257,261,o),
(257,266,qs),
(257,300,l),
(224,253,o)
);
},
{
closed = 1;
nodes = (
(256,360,o),
(256,404,qs),
(256,450,o),
(211,500,o),
(170,500,qs),
(131,500,o),
(84,448,o),
(84,404,qs),
(84,363,o),
(130,310,o),
(167,310,qs),
(209,310,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
12 1 5 1 6 1 0 3 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 35 25 35 38 34 52 19 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 344;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(371,39,o),
(359,39,qs),
(304,39,ls),
(291,39,o),
(284,49,qs),
(187,175,ls),
(180,184,o),
(180,189,qs),
(180,194,o),
(187,203,qs),
(284,328,ls),
(292,338,o),
(304,338,qs),
(359,338,ls),
(371,338,o),
(364,329,qs),
(257,189,l),
(364,48,ls)
);
},
{
closed = 1;
nodes = (
(212,44,o),
(210,39,o),
(205,39,qs),
(151,39,ls),
(137,39,o),
(130,49,qs),
(33,175,ls),
(26,184,o),
(26,189,qs),
(26,194,o),
(33,203,qs),
(130,328,ls),
(138,338,o),
(151,338,qs),
(205,338,ls),
(210,338,o),
(212,332,o),
(209,329,q),
(103,189,l),
(209,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 40 53 56 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,177,qs),
(37,229,ls),
(37,238,o),
(45,238,qs),
(257,238,ls),
(265,238,o),
(265,229,qs),
(265,177,ls),
(265,168,o),
(257,168,qs),
(45,168,ls),
(37,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o),
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(307,343,o),
(307,384,qs),
(307,422,o),
(256,422,qs),
(209,422,l),
(209,343,l),
(253,343,ls)
);
},
{
closed = 1;
nodes = (
(209,224,o),
(206,224,qs),
(171,224,ls),
(168,224,o),
(168,228,qs),
(168,453,ls),
(168,458,o),
(171,458,qs),
(258,458,ls),
(349,458,o),
(349,384,qs),
(349,330,o),
(298,310,q),
(352,228,ls),
(353,227,o),
(351,224,o),
(349,224,qs),
(315,224,ls),
(308,224,o),
(304,229,q),
(257,306,l),
(209,306,l),
(209,228,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 96 values pushed */
55 1 4 8 48 1 6 5 61 56 2 7 6 3 76 9 1 7 6 2 6 7 2 128 0 1 0 3 8 1 3 105 0 8 0 4 5 8 4 105 11 1 5 0 6 7 5 6 103 10 1 2 0 0 2 89 10 1 2 2 0 97 0 0 2 0 81 32 32 17 16 59 58 53 51 44 42 40 39 32 38 32 37 35 33 25 23 16 31 17 31 38 35 12 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 505;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,439,qs),
(0,478,ls),
(0,486,o),
(8,486,qs),
(222,486,ls),
(231,486,o),
(231,478,qs),
(231,439,ls),
(231,431,o),
(222,431,qs),
(8,431,ls),
(0,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 231;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,396,qs),
(23,426,o),
(23,475,qs),
(23,518,o),
(49,547,qs),
(78,581,o),
(129,581,qs),
(172,581,o),
(201,555,qs),
(234,525,o),
(234,475,qs),
(234,432,o),
(208,403,qs),
(178,369,o),
(129,369,qs),
(85,369,o)
);
},
{
closed = 1;
nodes = (
(183,449,o),
(183,475,qs),
(183,501,o),
(152,534,o),
(129,534,qs),
(105,534,o),
(74,501,o),
(74,475,qs),
(74,449,o),
(105,414,o),
(129,414,qs),
(152,414,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 257;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,267,o),
(37,276,qs),
(37,324,ls),
(37,333,o),
(45,333,qs),
(168,333,l),
(168,470,ls),
(168,479,o),
(176,479,qs),
(208,479,o),
(235,451,o),
(235,418,qs),
(235,333,l),
(358,333,ls),
(366,333,o),
(366,324,qs),
(366,276,ls),
(366,267,o),
(358,267,qs),
(235,267,l),
(235,130,ls),
(235,122,o),
(227,122,qs),
(176,122,ls),
(168,122,o),
(168,130,qs),
(168,267,l),
(45,267,ls)
);
},
{
closed = 1;
nodes = (
(37,9,qs),
(37,57,ls),
(37,66,o),
(45,66,qs),
(315,66,ls),
(366,66,o),
(366,18,qs),
(366,9,ls),
(366,0,o),
(358,0,qs),
(45,0,ls),
(37,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 105 0 7 7 6 95 9 1 6 6 40 6 78 30 28 0 0 36 33 28 39 30 39 0 27 0 26 34 35 35 34 50 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,286,o),
(269,254,qs),
(269,238,ls),
(269,233,o),
(261,233,qs),
(39,233,ls),
(34,233,o),
(34,238,qs),
(34,292,o),
(63,330,qs),
(83,354,o),
(127,381,qs),
(176,412,o),
(203,441,o),
(203,464,qs),
(203,510,o),
(141,510,qs),
(99,510,o),
(59,484,qs),
(50,478,o),
(47,487,qs),
(40,503,ls),
(31,526,o),
(59,543,qs),
(94,563,o),
(144,563,qs),
(199,563,o),
(266,512,o),
(266,471,qs),
(266,438,o),
(230,386,o),
(186,357,qs),
(135,324,o),
(113,303,o),
(107,286,q),
(231,286,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
27 1 2 3 1 76 0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 35 0 34 42 39 40 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 296;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,324,qs),
(277,284,o),
(248,258,qs),
(215,227,o),
(154,227,qs),
(107,227,o),
(35,278,o),
(35,312,qs),
(35,325,o),
(44,325,qs),
(48,325,o),
(53,319,qs),
(88,278,o),
(148,278,qs),
(217,278,o),
(217,326,qs),
(217,374,o),
(146,374,qs),
(118,374,ls),
(87,374,o),
(87,398,qs),
(87,419,ls),
(87,426,o),
(93,426,qs),
(146,426,ls),
(207,426,o),
(207,472,qs),
(207,512,o),
(143,512,qs),
(101,512,o),
(63,486,qs),
(54,481,o),
(49,491,qs),
(42,507,ls),
(32,530,o),
(63,544,qs),
(103,563,o),
(147,563,qs),
(203,563,o),
(266,519,o),
(266,479,qs),
(266,423,o),
(213,403,q),
(277,383,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
21 1 3 2 1 76 0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 56 6 78 35 34 34 52 34 39 36 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,516,o),
(101,516,qs),
(167,516,ls),
(171,516,o),
(174,509,o),
(171,507,qs),
(89,441,ls),
(77,430,o),
(61,430,qs),
(8,430,ls),
(4,430,o),
(1,437,o),
(4,439,q),
(77,506,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
7 0 2 0 1 1 76 0 1 0 1 133 0 0 0 118 52 50 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 173;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,221,o),
(89,261,qs),
(36,309,o),
(36,391,qs),
(36,462,o),
(75,504,qs),
(124,556,o),
(227,556,qs),
(298,556,ls),
(372,556,o),
(372,478,qs),
(372,8,ls),
(372,0,o),
(364,0,qs),
(330,0,ls),
(323,0,o),
(323,8,qs),
(323,504,l),
(260,504,l),
(260,8,ls),
(260,0,o),
(252,0,qs),
(218,0,ls),
(211,0,o),
(211,8,qs),
(211,221,l),
(207,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 39 77 2 1 0 0 40 0 78 22 51 50 18 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,302,o),
(132,279,qs),
(132,256,o),
(100,224,o),
(78,224,qs),
(56,224,o),
(24,256,o),
(24,279,qs),
(24,301,o),
(56,334,o),
(78,334,qs),
(100,334,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 156;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,5,o),
(85,5,qs),
(120,5,ls),
(128,5,o),
(125,-3,q),
(83,-87,ls),
(77,-98,o),
(59,-98,qs),
(9,-98,ls),
(0,-98,o),
(5,-89,qs),
(59,-6,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 51 49 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 121;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,474,o),
(31,481,qs),
(31,527,ls),
(31,536,o),
(39,539,qs),
(74,551,ls),
(92,556,o),
(104,556,qs),
(129,556,ls),
(159,556,o),
(159,523,qs),
(159,241,ls),
(159,233,o),
(152,233,qs),
(104,233,ls),
(96,233,o),
(96,241,qs),
(96,497,l),
(37,476,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 1 0 1 1 76 0 1 1 55 77 0 0 0 56 0 78 51 50 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,290,qs),
(18,333,o),
(18,407,qs),
(18,471,o),
(54,512,qs),
(95,558,o),
(167,558,qs),
(232,558,o),
(272,522,qs),
(319,481,o),
(319,407,qs),
(319,343,o),
(283,302,qs),
(242,253,o),
(168,253,qs),
(106,253,o)
);
},
{
closed = 1;
nodes = (
(254,363,o),
(254,407,qs),
(254,449,o),
(207,500,o),
(168,500,qs),
(128,500,o),
(84,450,o),
(84,407,qs),
(84,363,o),
(129,312,o),
(167,312,qs),
(207,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
5 1 2 4 1 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,332,o),
(26,338,o),
(30,338,qs),
(86,338,ls),
(98,338,o),
(106,328,qs),
(203,203,ls),
(210,194,o),
(210,189,qs),
(210,184,o),
(203,175,qs),
(106,49,ls),
(99,39,o),
(86,39,qs),
(30,39,ls),
(26,39,o),
(24,44,o),
(26,48,q),
(134,189,l),
(26,329,ls)
);
},
{
closed = 1;
nodes = (
(173,338,o),
(184,338,qs),
(239,338,ls),
(252,338,o),
(260,328,qs),
(357,203,ls),
(364,193,o),
(364,189,qs),
(364,184,o),
(357,175,qs),
(260,49,ls),
(252,39,o),
(239,39,qs),
(184,39,ls),
(173,39,o),
(180,48,qs),
(286,189,l),
(180,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
1 1 0 1 1 76 3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 56 54 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,73,o),
(348,79,qs),
(348,106,ls),
(348,116,o),
(354,123,q),
(487,312,ls),
(494,323,o),
(507,323,qs),
(543,323,ls),
(573,323,o),
(573,295,qs),
(573,124,l),
(595,124,ls),
(623,124,o),
(623,98,qs),
(623,79,ls),
(623,73,o),
(615,73,qs),
(573,73,l),
(573,6,ls),
(573,0,o),
(567,0,qs),
(518,0,ls),
(512,0,o),
(512,6,qs),
(512,73,l),
(354,73,ls)
);
},
{
closed = 1;
nodes = (
(124,9,q),
(419,547,ls),
(424,556,o),
(432,556,qs),
(441,556,ls),
(465,556,o),
(477,522,o),
(463,496,qs),
(196,9,l),
(192,0,o),
(184,0,qs),
(128,0,ls),
(118,0,o)
);
},
{
closed = 1;
nodes = (
(31,474,o),
(31,481,qs),
(31,527,ls),
(31,536,o),
(39,539,qs),
(74,551,ls),
(92,556,o),
(104,556,qs),
(129,556,ls),
(159,556,o),
(159,523,qs),
(159,241,ls),
(159,233,o),
(152,233,qs),
(104,233,ls),
(96,233,o),
(96,241,qs),
(96,497,l),
(37,476,ls)
);
},
{
closed = 1;
nodes = (
(512,267,l),
(412,124,l),
(512,124,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
40 1 3 6 60 1 7 3 24 1 1 2 6 1 2 0 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 6 7 6 3 7 128 11 5 2 0 1 1 0 113 8 1 6 0 7 2 6 7 105 12 9 2 2 1 1 2 89 12 9 2 2 2 1 98 10 4 2 1 2 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 7 6 3 7 128 11 5 2 0 1 0 134 8 1 6 0 7 2 6 7 105 12 9 2 2 1 1 2 89 12 9 2 2 2 1 98 10 4 2 1 2 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
59 59 29 27 0 0 59 61 59 61 51 48 45 42 36 33 27 39 29 39 0 26 0 26 50 35 35 19 13 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 656;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,474,o),
(31,481,qs),
(31,527,ls),
(31,536,o),
(39,539,qs),
(74,551,ls),
(92,556,o),
(104,556,qs),
(129,556,ls),
(159,556,o),
(159,523,qs),
(159,241,ls),
(159,233,o),
(152,233,qs),
(104,233,ls),
(96,233,o),
(96,241,qs),
(96,497,l),
(37,476,ls)
);
},
{
closed = 1;
nodes = (
(654,54,o),
(654,22,qs),
(654,6,ls),
(654,0,o),
(648,0,qs),
(425,0,ls),
(420,0,o),
(420,6,qs),
(420,60,o),
(449,97,qs),
(469,122,o),
(513,149,qs),
(562,179,o),
(589,208,o),
(589,232,qs),
(589,277,o),
(527,277,qs),
(485,277,o),
(445,252,q),
(437,245,o),
(433,254,qs),
(426,271,ls),
(416,293,o),
(445,310,qs),
(481,331,o),
(530,331,qs),
(585,331,o),
(653,280,o),
(653,238,qs),
(653,205,o),
(616,153,o),
(573,125,qs),
(522,92,o),
(498,71,o),
(493,54,q),
(617,54,ls)
);
},
{
closed = 1;
nodes = (
(124,9,q),
(419,547,ls),
(424,556,o),
(432,556,qs),
(441,556,ls),
(465,556,o),
(477,522,o),
(463,496,qs),
(196,9,l),
(192,0,o),
(184,0,qs),
(128,0,ls),
(118,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 73 values pushed */
0 1 2 1 51 46 2 4 5 2 76 0 2 0 3 0 2 3 105 7 1 1 0 0 5 1 0 105 8 1 5 4 4 5 87 8 1 5 5 4 98 9 6 2 4 5 4 82 57 55 19 19 64 61 55 67 57 67 19 54 19 53 49 48 38 36 29 27 51 50 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 713;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,73,o),
(425,79,qs),
(425,106,ls),
(425,116,o),
(431,123,q),
(563,312,ls),
(571,323,o),
(584,323,qs),
(619,323,ls),
(649,323,o),
(649,295,qs),
(649,124,l),
(671,124,ls),
(699,124,o),
(699,98,qs),
(699,79,ls),
(699,73,o),
(692,73,qs),
(649,73,l),
(649,6,ls),
(649,0,o),
(643,0,qs),
(594,0,ls),
(589,0,o),
(589,6,qs),
(589,73,l),
(431,73,ls)
);
},
{
closed = 1;
nodes = (
(200,9,qs),
(496,547,l),
(500,556,o),
(508,556,qs),
(517,556,ls),
(541,556,o),
(553,522,o),
(539,496,qs),
(273,9,ls),
(268,0,o),
(261,0,qs),
(204,0,ls),
(195,0,o)
);
},
{
closed = 1;
nodes = (
(589,267,l),
(488,124,l),
(589,124,l)
);
},
{
closed = 1;
nodes = (
(277,324,qs),
(277,284,o),
(248,258,qs),
(215,227,o),
(154,227,qs),
(107,227,o),
(35,278,o),
(35,312,qs),
(35,325,o),
(44,325,qs),
(48,325,o),
(53,319,qs),
(88,278,o),
(148,278,qs),
(217,278,o),
(217,326,qs),
(217,374,o),
(146,374,qs),
(118,374,ls),
(87,374,o),
(87,398,qs),
(87,419,ls),
(87,426,o),
(93,426,qs),
(146,426,ls),
(207,426,o),
(207,472,qs),
(207,512,o),
(143,512,qs),
(101,512,o),
(63,486,qs),
(54,481,o),
(49,491,qs),
(42,507,ls),
(32,530,o),
(63,544,qs),
(103,563,o),
(147,563,qs),
(203,563,o),
(266,519,o),
(266,479,qs),
(266,423,o),
(213,403,q),
(277,383,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 19 values pushed */
64 1 11 10 41 1 14 12 24 1 1 2 6 1 2 0 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
13 1 3 11 12 11 3 12 128 16 5 2 0 1 1 0 113 8 1 6 0 9 10 6 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
13 1 3 11 12 11 3 12 128 16 5 2 0 1 0 134 8 1 6 0 9 10 6 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 6 8 9 8 6 9 128 13 1 3 11 12 11 3 12 128 16 5 2 0 1 0 134 0 8 0 9 10 8 9 105 0 10 0 11 3 10 11 105 0 12 0 14 2 12 14 105 17 7 2 2 1 1 2 89 17 7 2 2 2 1 98 15 4 2 1 2 1 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
40 40 29 27 0 0 82 80 77 75 73 71 69 66 62 60 58 56 49 47 40 42 40 42 36 33 27 39 29 39 0 26 0 26 50 35 35 19 18 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 729;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,300,o),
(144,322,qs),
(144,345,o),
(177,377,o),
(199,377,qs),
(221,377,o),
(252,345,o),
(252,322,qs),
(252,299,o),
(221,267,o),
(199,267,qs),
(177,267,o)
);
},
{
closed = 1;
nodes = (
(47,50,qs),
(71,82,o),
(147,141,qs),
(166,157,o),
(166,180,qs),
(166,207,ls),
(166,215,o),
(174,215,qs),
(187,215,ls),
(205,215,o),
(230,191,o),
(230,173,qs),
(230,147,o),
(216,124,qs),
(203,104,o),
(166,75,qs),
(119,37,o),
(88,-8,o),
(88,-40,qs),
(88,-82,o),
(143,-130,o),
(190,-130,qs),
(261,-130,o),
(322,-91,qs),
(330,-86,o),
(335,-86,qs),
(341,-86,o),
(343,-93,qs),
(357,-137,ls),
(360,-146,o),
(352,-151,qs),
(274,-200,o),
(190,-200,qs),
(113,-200,o),
(66,-166,qs),
(11,-125,o),
(11,-47,qs),
(11,5,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 1 0 42 39 28 26 24 22 17 15 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(331,608,o),
(326,608,qs),
(274,608,ls),
(258,608,o),
(245,619,qs),
(163,684,ls),
(160,687,o),
(163,693,o),
(167,693,qs),
(232,693,ls),
(246,693,o),
(257,683,qs),
(330,617,l),
(333,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 5 6 5 133 0 6 3 6 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 35 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(261,693,o),
(273,693,qs),
(339,693,ls),
(343,693,o),
(346,687,o),
(343,684,qs),
(262,619,ls),
(249,608,o),
(233,608,qs),
(180,608,ls),
(176,608,o),
(173,614,o),
(176,617,qs),
(249,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
31 24 2 5 6 1 1 0 3 2 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 36 33 29 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(205,608,o),
(187,608,qs),
(140,608,ls),
(136,608,o),
(133,614,o),
(136,617,qs),
(204,683,ls),
(214,693,o),
(229,693,qs),
(283,693,ls),
(297,693,o),
(307,683,qs),
(377,617,l),
(379,614,o),
(376,608,o),
(373,608,qs),
(326,608,ls),
(309,608,o),
(297,620,qs),
(256,663,l),
(215,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
38 1 5 6 1 1 0 3 2 76 0 6 5 6 133 7 1 5 3 5 133 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 43 40 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(302,608,qs),
(283,608,o),
(247,623,qs),
(217,636,o),
(206,636,qs),
(190,636,o),
(186,617,qs),
(184,607,o),
(177,607,qs),
(142,607,ls),
(134,607,o),
(134,616,qs),
(139,691,o),
(196,691,qs),
(217,691,o),
(255,675,qs),
(285,662,o),
(297,662,qs),
(313,662,o),
(317,679,qs),
(320,689,o),
(328,689,qs),
(363,689,ls),
(371,689,o),
(371,681,q),
(363,608,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
24 1 6 5 1 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 9 5 6 114 0 9 8 8 9 112 7 1 5 10 1 8 3 5 8 105 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 9 5 6 114 0 9 8 5 9 8 126 7 1 5 10 1 8 3 5 8 105 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 7 1 5 10 1 8 3 5 8 105 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
0 0 49 47 45 43 41 38 36 34 32 30 28 25 22 19 16 13 9 6 4 3 0 2 0 2 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(166,691,o),
(185,691,qs),
(204,691,o),
(230,664,o),
(230,645,qs),
(230,626,o),
(204,600,o),
(185,600,qs),
(166,600,o),
(140,626,o),
(140,645,qs),
(140,664,o)
);
},
{
closed = 1;
nodes = (
(303,691,o),
(322,691,qs),
(340,691,o),
(366,664,o),
(366,645,qs),
(366,626,o),
(340,600,o),
(322,600,qs),
(303,600,o),
(277,626,o),
(277,645,qs),
(277,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 46 44 40 38 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,463,l),
(167,221,l),
(344,221,l)
);
},
{
closed = 1;
nodes = (
(89,0,o),
(78,0,qs),
(19,0,ls),
(9,0,o),
(13,9,qs),
(215,547,ls),
(218,556,o),
(226,556,qs),
(245,556,ls),
(275,556,o),
(306,532,o),
(318,500,qs),
(503,9,ls),
(506,0,o),
(496,0,qs),
(437,0,ls),
(424,0,o),
(419,12,qs),
(368,153,l),
(143,153,l),
(93,12,ls)
);
},
{
closed = 1;
nodes = (
(225,737,o),
(255,737,qs),
(284,737,o),
(325,696,o),
(325,667,qs),
(325,638,o),
(284,597,o),
(255,597,qs),
(225,597,o),
(184,638,o),
(184,667,qs),
(184,696,o)
);
},
{
closed = 1;
nodes = (
(288,652,o),
(288,667,qs),
(288,682,o),
(269,702,o),
(255,702,qs),
(241,702,o),
(222,682,o),
(222,667,qs),
(222,652,o),
(241,633,o),
(255,633,qs),
(269,633,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
1 1 0 3 1 76 0 6 0 8 7 6 8 105 10 1 7 0 5 3 7 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 37 36 0 0 43 41 36 47 37 47 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,0,o),
(73,0,qs),
(12,0,ls),
(2,0,o),
(7,9,qs),
(298,547,ls),
(303,556,o),
(314,556,qs),
(607,556,ls),
(652,556,o),
(652,513,qs),
(652,496,ls),
(652,485,o),
(641,485,qs),
(420,485,l),
(420,312,l),
(588,312,ls),
(634,312,o),
(634,268,qs),
(634,252,ls),
(634,242,o),
(622,242,qs),
(420,242,l),
(420,71,l),
(616,71,ls),
(662,71,o),
(662,27,qs),
(662,11,ls),
(662,0,o),
(650,0,qs),
(351,0,ls),
(343,0,o),
(343,9,qs),
(343,153,l),
(166,153,l),
(92,12,ls)
);
},
{
closed = 1;
nodes = (
(343,486,l),
(202,221,l),
(343,221,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
37 1 5 6 1 76 0 4 0 3 8 4 3 103 9 1 8 0 0 2 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 95 7 1 1 1 40 1 78 36 36 36 38 36 38 51 51 33 35 33 35 50 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,-104,o),
(268,-104,qs),
(218,-104,ls),
(209,-104,o),
(214,-96,qs),
(269,-9,l),
(176,1,o),
(118,67,qs),
(50,145,o),
(50,277,qs),
(50,401,o),
(114,479,qs),
(186,567,o),
(309,567,qs),
(371,567,o),
(439,538,qs),
(487,516,o),
(477,477,qs),
(472,456,ls),
(470,446,o),
(462,446,qs),
(458,446,o),
(448,452,qs),
(382,495,o),
(309,495,qs),
(231,495,o),
(183,445,qs),
(128,388,o),
(128,276,qs),
(128,180,o),
(171,124,qs),
(219,61,o),
(311,61,qs),
(405,61,o),
(462,132,qs),
(470,142,o),
(477,142,qs),
(491,142,o),
(491,122,qs),
(491,88,o),
(460,53,qs),
(415,0,o),
(333,-9,q),
(292,-92,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 101 0 2 2 4 97 0 4 4 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 2 3 4 2 105 0 1 5 5 1 89 0 1 1 5 97 0 5 1 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 37 34 38 34 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,71,o),
(382,27,qs),
(382,11,ls),
(382,0,o),
(371,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,312,l),
(310,312,ls),
(354,312,o),
(354,268,qs),
(354,252,ls),
(354,242,o),
(343,242,qs),
(140,242,l),
(140,71,l),
(337,71,ls)
);
},
{
closed = 1;
nodes = (
(281,608,o),
(276,608,qs),
(224,608,ls),
(208,608,o),
(195,619,qs),
(113,684,ls),
(110,687,o),
(113,693,o),
(117,693,qs),
(182,693,ls),
(196,693,o),
(207,683,qs),
(280,617,l),
(284,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 6 7 6 133 0 7 3 7 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 39 37 32 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,71,o),
(382,27,qs),
(382,11,ls),
(382,0,o),
(371,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,312,l),
(310,312,ls),
(354,312,o),
(354,268,qs),
(354,252,ls),
(354,242,o),
(343,242,qs),
(140,242,l),
(140,71,l),
(337,71,ls)
);
},
{
closed = 1;
nodes = (
(231,693,o),
(243,693,qs),
(309,693,ls),
(314,693,o),
(316,687,o),
(313,684,qs),
(232,619,ls),
(219,608,o),
(203,608,qs),
(150,608,ls),
(146,608,o),
(143,614,o),
(146,617,qs),
(220,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
28 1 6 7 1 76 0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 40 37 33 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,71,o),
(382,27,qs),
(382,11,ls),
(382,0,o),
(371,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,312,l),
(310,312,ls),
(354,312,o),
(354,268,qs),
(354,252,ls),
(354,242,o),
(343,242,qs),
(140,242,l),
(140,71,l),
(337,71,ls)
);
},
{
closed = 1;
nodes = (
(163,608,o),
(145,608,qs),
(98,608,ls),
(94,608,o),
(91,614,o),
(95,617,q),
(163,683,ls),
(173,693,o),
(188,693,qs),
(242,693,ls),
(256,693,o),
(266,683,qs),
(335,617,ls),
(338,614,o),
(335,608,o),
(331,608,qs),
(285,608,ls),
(268,608,o),
(256,620,qs),
(215,663,l),
(174,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 7 6 7 133 8 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 47 44 40 37 32 30 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,71,o),
(382,27,qs),
(382,11,ls),
(382,0,o),
(371,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(328,556,ls),
(373,556,o),
(373,513,qs),
(373,496,ls),
(373,485,o),
(362,485,qs),
(140,485,l),
(140,312,l),
(310,312,ls),
(354,312,o),
(354,268,qs),
(354,252,ls),
(354,242,o),
(343,242,qs),
(140,242,l),
(140,71,l),
(337,71,ls)
);
},
{
closed = 1;
nodes = (
(129,691,o),
(148,691,qs),
(167,691,o),
(193,664,o),
(193,645,qs),
(193,626,o),
(167,600,o),
(148,600,qs),
(129,600,o),
(103,626,o),
(103,645,qs),
(103,664,o)
);
},
{
closed = 1;
nodes = (
(266,691,o),
(285,691,qs),
(303,691,o),
(329,664,o),
(329,645,qs),
(329,626,o),
(303,600,o),
(285,600,qs),
(266,600,o),
(240,626,o),
(240,645,qs),
(240,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 50 48 44 42 38 36 32 30 0 27 0 26 51 51 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,9,qs),
(70,547,ls),
(70,556,o),
(78,556,qs),
(85,556,ls),
(145,556,o),
(145,485,qs),
(145,9,ls),
(145,0,o),
(137,0,qs),
(78,0,ls),
(70,0,o)
);
},
{
closed = 1;
nodes = (
(185,608,o),
(181,608,qs),
(128,608,ls),
(112,608,o),
(100,619,q),
(18,684,ls),
(15,687,o),
(17,693,o),
(22,693,qs),
(86,693,ls),
(100,693,o),
(111,683,qs),
(185,617,l),
(188,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 3 2 133 0 3 1 3 133 0 1 1 39 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 205;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,9,qs),
(71,547,ls),
(71,556,o),
(79,556,qs),
(86,556,ls),
(146,556,o),
(146,485,qs),
(146,9,ls),
(146,0,o),
(138,0,qs),
(79,0,ls),
(71,0,o)
);
},
{
closed = 1;
nodes = (
(103,693,o),
(115,693,qs),
(181,693,ls),
(185,693,o),
(188,687,o),
(185,684,qs),
(103,619,l),
(91,608,o),
(75,608,qs),
(22,608,ls),
(18,608,o),
(15,614,o),
(18,617,qs),
(91,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
19 12 2 2 3 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 4 1 0 0 40 0 78 2 0 24 21 17 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 205;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,9,qs),
(65,547,ls),
(65,556,o),
(73,556,qs),
(80,556,ls),
(140,556,o),
(140,485,qs),
(140,9,ls),
(140,0,o),
(132,0,qs),
(73,0,ls),
(65,0,o)
);
},
{
closed = 1;
nodes = (
(51,608,o),
(32,608,qs),
(-14,608,ls),
(-18,608,o),
(-21,614,o),
(-18,617,qs),
(50,683,ls),
(60,693,o),
(75,693,qs),
(129,693,ls),
(143,693,o),
(153,683,qs),
(222,617,ls),
(225,614,o),
(222,608,o),
(219,608,qs),
(172,608,ls),
(155,608,o),
(143,620,qs),
(102,663,l),
(61,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
26 1 2 3 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 39 77 5 1 0 0 40 0 78 2 0 31 28 24 21 16 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 205;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,9,qs),
(64,547,ls),
(64,556,o),
(73,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,9,ls),
(140,0,o),
(132,0,qs),
(73,0,ls),
(64,0,o)
);
},
{
closed = 1;
nodes = (
(16,691,o),
(34,691,qs),
(53,691,o),
(79,664,o),
(79,645,qs),
(79,626,o),
(53,600,o),
(34,600,qs),
(16,600,o),
(-10,626,o),
(-10,645,qs),
(-10,664,o)
);
},
{
closed = 1;
nodes = (
(152,691,o),
(171,691,qs),
(190,691,o),
(216,664,o),
(216,645,qs),
(216,626,o),
(190,600,o),
(171,600,qs),
(152,600,o),
(126,626,o),
(126,645,qs),
(126,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 6 1 0 0 40 0 78 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 205;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,244,o),
(19,253,qs),
(19,307,ls),
(19,315,o),
(27,315,qs),
(80,315,l),
(80,547,ls),
(80,556,o),
(87,556,qs),
(243,556,ls),
(363,556,o),
(433,500,qs),
(521,431,o),
(521,286,qs),
(521,151,o),
(453,78,qs),
(380,0,o),
(236,0,qs),
(87,0,ls),
(80,0,o),
(80,9,qs),
(80,244,l),
(27,244,ls)
);
},
{
closed = 1;
nodes = (
(442,71,o),
(442,283,qs),
(442,384,o),
(397,433,qs),
(349,485,o),
(240,485,qs),
(155,485,l),
(155,315,l),
(283,315,ls),
(328,315,o),
(328,272,qs),
(328,256,ls),
(328,244,o),
(317,244,qs),
(155,244,l),
(155,71,l),
(245,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 2 4 8 2 3 7 2 3 105 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 23 23 0 0 23 39 23 38 34 32 31 29 26 24 0 22 0 21 34 54 50 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,556,o),
(396,556,qs),
(403,556,ls),
(463,556,o),
(463,485,qs),
(463,9,ls),
(463,0,o),
(456,0,qs),
(402,0,ls),
(388,0,o),
(380,13,qs),
(140,403,l),
(140,9,ls),
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(90,556,ls),
(115,556,o),
(143,538,o),
(160,511,qs),
(388,138,l),
(388,547,ls)
);
},
{
closed = 1;
nodes = (
(310,608,qs),
(291,608,o),
(255,623,qs),
(225,636,o),
(214,636,qs),
(198,636,o),
(194,617,qs),
(192,607,o),
(185,607,qs),
(150,607,ls),
(142,607,o),
(142,616,qs),
(147,691,o),
(204,691,qs),
(225,691,o),
(263,675,qs),
(293,662,o),
(305,662,qs),
(321,662,o),
(325,679,qs),
(328,689,o),
(336,689,qs),
(371,689,ls),
(379,689,o),
(379,681,q),
(371,608,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
27 1 5 4 14 0 2 1 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 4 8 4 5 114 0 8 7 7 8 112 6 1 4 9 1 7 0 4 7 105 3 1 0 0 39 77 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 4 8 4 5 114 0 8 7 4 8 7 126 6 1 4 9 1 7 0 4 7 105 3 1 0 0 39 77 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 6 1 4 9 1 7 0 4 7 105 3 1 0 0 39 77 2 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
52 50 34 50 34 34 51 51 52 51 51 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
},
{
closed = 1;
nodes = (
(381,608,o),
(376,608,qs),
(324,608,ls),
(308,608,o),
(295,619,qs),
(213,684,ls),
(210,687,o),
(213,693,o),
(217,693,qs),
(282,693,ls),
(296,693,o),
(307,683,qs),
(380,617,l),
(384,615,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 4 133 0 5 3 5 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 5 4 133 0 5 3 5 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 43 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
},
{
closed = 1;
nodes = (
(305,693,o),
(317,693,qs),
(383,693,ls),
(387,693,o),
(390,687,o),
(387,684,qs),
(306,619,ls),
(293,608,o),
(277,608,qs),
(224,608,ls),
(220,608,o),
(217,614,o),
(220,617,qs),
(293,683,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 32 2 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 44 41 37 34 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
},
{
closed = 1;
nodes = (
(249,608,o),
(231,608,qs),
(184,608,ls),
(180,608,o),
(177,614,o),
(180,617,qs),
(248,683,ls),
(258,693,o),
(273,693,qs),
(327,693,ls),
(341,693,o),
(351,683,qs),
(421,617,l),
(423,614,o),
(420,608,o),
(417,608,qs),
(370,608,ls),
(353,608,o),
(341,620,qs),
(300,663,l),
(260,620,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
46 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 1 1 3 97 0 3 3 39 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 3 0 1 0 3 1 106 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
17 16 1 0 51 48 44 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
},
{
closed = 1;
nodes = (
(348,608,qs),
(330,608,o),
(293,623,qs),
(263,636,o),
(252,636,qs),
(236,636,o),
(232,617,qs),
(231,607,o),
(223,607,qs),
(188,607,ls),
(181,607,o),
(181,616,qs),
(185,691,o),
(242,691,qs),
(264,691,o),
(301,675,qs),
(331,662,o),
(343,662,qs),
(359,662,o),
(363,679,q),
(367,689,o),
(375,689,qs),
(409,689,ls),
(417,689,o),
(417,681,qs),
(410,608,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 5 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 8 4 5 114 0 8 7 7 8 112 6 1 4 9 1 7 3 4 7 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 4 8 4 5 114 0 8 7 4 8 7 126 6 1 4 9 1 7 3 4 7 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 6 1 4 9 1 7 3 4 7 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 6 1 4 9 1 7 3 4 7 105 0 3 0 1 0 3 1 105 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
17 16 1 0 57 55 53 51 49 46 44 42 40 38 36 33 25 23 16 31 17 31 9 7 0 15 1 15 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,386,o),
(427,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,168,o),
(174,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,477,qs),
(175,566,o),
(301,566,qs),
(410,566,o),
(477,497,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
},
{
closed = 1;
nodes = (
(214,691,o),
(233,691,qs),
(252,691,o),
(278,664,o),
(278,645,qs),
(278,626,o),
(252,600,o),
(233,600,qs),
(214,600,o),
(188,626,o),
(188,645,qs),
(188,664,o)
);
},
{
closed = 1;
nodes = (
(351,691,o),
(370,691,qs),
(388,691,o),
(414,664,o),
(414,645,qs),
(414,626,o),
(388,600,o),
(370,600,qs),
(351,600,o),
(325,626,o),
(325,645,qs),
(325,664,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 39 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 3 5 4 105 0 3 0 1 0 3 1 105 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
17 16 1 0 54 52 48 46 42 40 36 34 25 23 16 31 17 31 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,392,o),
(48,398,q),
(69,418,o),
(104,416,o),
(127,393,qs),
(204,317,l),
(310,422,ls),
(315,427,o),
(320,422,qs),
(351,392,ls),
(357,386,o),
(351,379,qs),
(247,274,l),
(358,162,ls),
(364,156,o),
(358,150,qs),
(337,129,o),
(303,131,o),
(278,155,qs),
(203,232,l),
(98,126,ls),
(92,120,o),
(86,126,qs),
(55,156,l),
(48,161,o),
(55,168,qs),
(161,274,l),
(49,386,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 14 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 29 25 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,495,o),
(301,495,qs),
(231,495,o),
(187,455,qs),
(127,400,o),
(127,277,qs),
(127,178,o),
(166,125,q),
(387,472,l)
);
},
{
closed = 1;
nodes = (
(253,62,o),
(301,62,qs),
(371,62,o),
(414,100,qs),
(475,154,o),
(475,277,qs),
(475,375,o),
(436,428,q),
(216,82,l)
);
},
{
closed = 1;
nodes = (
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,478,qs),
(175,567,o),
(301,567,qs),
(410,567,o),
(477,498,qs),
(552,420,o),
(552,277,qs),
(552,153,o),
(495,78,qs),
(428,-10,o),
(301,-10,qs),
(190,-10,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 8 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
19 18 27 25 18 33 19 33 39 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,50,qs),
(63,104,o),
(63,199,qs),
(63,547,ls),
(63,556,o),
(71,556,qs),
(78,556,ls),
(139,556,o),
(139,485,qs),
(139,212,ls),
(139,61,o),
(261,61,qs),
(387,61,o),
(387,213,qs),
(387,547,ls),
(387,556,o),
(395,556,qs),
(402,556,ls),
(462,556,o),
(462,485,qs),
(462,201,ls),
(462,126,o),
(430,73,qs),
(379,-10,o),
(262,-10,qs),
(160,-10,o)
);
},
{
closed = 1;
nodes = (
(324,608,o),
(320,608,qs),
(267,608,ls),
(251,608,o),
(239,619,q),
(157,684,ls),
(154,687,o),
(156,693,o),
(161,693,qs),
(225,693,ls),
(239,693,o),
(250,683,qs),
(324,617,l),
(327,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 4 5 4 133 0 5 1 5 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 37 35 30 28 20 17 14 12 9 6 0 25 1 25 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,50,qs),
(63,104,o),
(63,199,qs),
(63,547,ls),
(63,556,o),
(71,556,qs),
(78,556,ls),
(139,556,o),
(139,485,qs),
(139,212,ls),
(139,61,o),
(261,61,qs),
(387,61,o),
(387,213,qs),
(387,547,ls),
(387,556,o),
(395,556,qs),
(402,556,ls),
(462,556,o),
(462,485,qs),
(462,201,ls),
(462,126,o),
(430,73,qs),
(379,-10,o),
(262,-10,qs),
(160,-10,o)
);
},
{
closed = 1;
nodes = (
(261,693,o),
(273,693,qs),
(339,693,ls),
(343,693,o),
(346,687,o),
(342,684,qs),
(261,619,ls),
(249,608,o),
(232,608,qs),
(180,608,ls),
(175,608,o),
(173,614,o),
(176,617,qs),
(249,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 38 35 31 28 20 17 14 12 9 6 0 25 1 25 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,50,qs),
(63,104,o),
(63,199,qs),
(63,547,ls),
(63,556,o),
(71,556,qs),
(78,556,ls),
(139,556,o),
(139,485,qs),
(139,212,ls),
(139,61,o),
(261,61,qs),
(387,61,o),
(387,213,qs),
(387,547,ls),
(387,556,o),
(395,556,qs),
(402,556,ls),
(462,556,o),
(462,485,qs),
(462,201,ls),
(462,126,o),
(430,73,qs),
(379,-10,o),
(262,-10,qs),
(160,-10,o)
);
},
{
closed = 1;
nodes = (
(209,608,o),
(191,608,qs),
(144,608,ls),
(140,608,o),
(137,614,o),
(140,617,qs),
(209,683,ls),
(219,693,o),
(234,693,qs),
(287,693,ls),
(301,693,o),
(311,683,qs),
(381,617,l),
(383,614,o),
(381,608,o),
(377,608,qs),
(330,608,ls),
(314,608,o),
(301,620,qs),
(260,663,l),
(220,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
40 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 45 42 38 35 30 28 20 17 14 12 9 6 0 25 1 25 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,50,qs),
(63,104,o),
(63,199,qs),
(63,547,ls),
(63,556,o),
(71,556,qs),
(78,556,ls),
(139,556,o),
(139,485,qs),
(139,212,ls),
(139,61,o),
(261,61,qs),
(387,61,o),
(387,213,qs),
(387,547,ls),
(387,556,o),
(395,556,qs),
(402,556,ls),
(462,556,o),
(462,485,qs),
(462,201,ls),
(462,126,o),
(430,73,qs),
(379,-10,o),
(262,-10,qs),
(160,-10,o)
);
},
{
closed = 1;
nodes = (
(170,691,o),
(189,691,qs),
(207,691,o),
(234,664,o),
(234,645,qs),
(234,626,o),
(207,600,o),
(189,600,qs),
(170,600,o),
(144,626,o),
(144,645,qs),
(144,664,o)
);
},
{
closed = 1;
nodes = (
(306,691,o),
(325,691,qs),
(344,691,o),
(370,664,o),
(370,645,qs),
(370,626,o),
(344,600,o),
(325,600,qs),
(306,600,o),
(280,626,o),
(280,645,qs),
(280,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 97 8 1 0 0 46 0 78 1 0 48 46 42 40 36 34 30 28 20 17 14 12 9 6 0 25 1 25 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,556,o),
(13,556,qs),
(41,556,ls),
(66,556,o),
(99,533,o),
(114,506,qs),
(228,292,l),
(362,543,l),
(367,556,o),
(379,556,qs),
(437,556,ls),
(449,556,o),
(443,544,qs),
(263,212,l),
(263,9,ls),
(263,0,o),
(255,0,qs),
(196,0,ls),
(188,0,o),
(188,9,qs),
(188,213,l),
(7,547,ls)
);
},
{
closed = 1;
nodes = (
(238,693,o),
(251,693,qs),
(316,693,ls),
(321,693,o),
(323,687,o),
(320,684,qs),
(239,619,ls),
(226,608,o),
(210,608,qs),
(157,608,ls),
(153,608,o),
(150,614,o),
(153,617,qs),
(227,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
22 1 3 4 14 7 0 3 0 1 2 76 0 3 4 1 4 3 1 128 2 1 1 1 39 77 0 4 4 0 95 0 0 0 40 0 78 52 52 53 52 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 445;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,173,o),
(379,282,qs),
(379,327,o),
(352,355,qs),
(322,386,o),
(269,386,qs),
(140,386,l),
(140,173,l),
(266,173,ls)
);
},
{
closed = 1;
nodes = (
(140,0,o),
(132,0,qs),
(72,0,ls),
(64,0,o),
(64,9,qs),
(64,547,ls),
(64,556,o),
(72,556,qs),
(79,556,ls),
(140,556,o),
(140,485,qs),
(140,456,l),
(263,456,ls),
(349,456,o),
(399,415,qs),
(456,368,o),
(456,281,qs),
(456,206,o),
(412,158,qs),
(362,102,o),
(270,102,qs),
(140,102,l),
(140,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 3 0 0 1 3 0 103 6 1 1 0 2 5 1 2 103 0 4 4 39 77 0 5 5 40 5 78 0 0 30 27 24 21 19 17 11 9 0 8 0 7 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,9,qs),
(53,407,ls),
(53,477,o),
(93,520,qs),
(137,567,o),
(211,567,qs),
(278,567,o),
(319,536,qs),
(361,505,o),
(361,457,qs),
(361,417,o),
(317,360,qs),
(281,313,o),
(281,297,qs),
(281,271,o),
(332,236,qs),
(388,198,o),
(426,147,o),
(426,108,qs),
(426,59,o),
(395,27,qs),
(359,-10,o),
(297,-10,qs),
(246,-10,o),
(170,45,o),
(170,82,qs),
(170,99,o),
(181,99,qs),
(185,99,o),
(190,94,qs),
(235,53,o),
(285,53,qs),
(350,53,o),
(350,103,qs),
(350,124,o),
(336,142,qs),
(323,157,o),
(287,182,qs),
(242,213,o),
(209,257,o),
(209,287,qs),
(209,319,o),
(244,363,qs),
(273,399,o),
(287,425,o),
(287,441,qs),
(287,468,o),
(244,501,o),
(209,501,qs),
(171,501,o),
(127,450,o),
(127,404,qs),
(127,9,ls),
(127,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 0 2 2 0 97 4 6 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 1 2 1 3 2 128 0 5 0 1 3 5 1 105 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 51 49 34 32 29 27 25 23 8 6 0 56 2 56 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(294,430,o),
(290,430,qs),
(238,430,ls),
(221,430,o),
(209,441,qs),
(127,507,ls),
(124,509,o),
(127,516,o),
(131,516,qs),
(195,516,ls),
(210,516,o),
(220,506,qs),
(294,439,l),
(297,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 6 7 6 133 0 7 1 7 133 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 7 6 133 0 7 2 7 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 49 47 42 40 32 30 24 37 25 37 38 34 51 50 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(230,516,o),
(242,516,qs),
(308,516,ls),
(312,516,o),
(315,509,o),
(311,507,q),
(230,441,ls),
(218,430,o),
(201,430,qs),
(149,430,ls),
(144,430,o),
(142,437,o),
(145,439,q),
(218,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 6 7 133 0 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 8 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 50 47 43 40 32 30 24 37 25 37 38 34 51 50 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(177,430,o),
(159,430,qs),
(112,430,ls),
(108,430,o),
(105,437,o),
(108,439,q),
(176,506,ls),
(186,516,o),
(201,516,qs),
(255,516,ls),
(269,516,o),
(279,506,qs),
(349,439,ls),
(351,437,o),
(348,430,o),
(345,430,qs),
(298,430,ls),
(281,430,o),
(269,442,qs),
(228,485,l),
(188,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
52 1 6 7 12 1 5 1 0 1 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 9 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 8 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 24 57 54 50 47 42 40 32 30 24 37 25 37 38 34 51 50 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(276,430,qs),
(257,430,o),
(221,445,qs),
(191,458,o),
(180,458,qs),
(164,458,o),
(160,439,qs),
(158,429,o),
(151,429,qs),
(116,429,ls),
(108,429,o),
(108,438,qs),
(112,513,o),
(170,513,qs),
(191,513,o),
(228,497,qs),
(259,484,o),
(271,484,qs),
(287,484,o),
(291,502,qs),
(294,512,o),
(302,512,qs),
(336,512,ls),
(345,512,o),
(345,503,q),
(337,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
38 1 7 6 12 1 5 1 0 1 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 6 10 6 7 114 0 10 9 9 10 112 8 1 6 11 1 9 1 6 9 105 0 5 5 1 97 2 1 1 1 42 77 12 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 7 6 10 6 7 114 0 10 9 9 10 112 8 1 6 11 1 9 2 6 9 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 6 10 6 7 10 128 0 10 9 6 10 9 126 8 1 6 11 1 9 2 6 9 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
25 24 63 61 59 57 55 52 50 48 46 44 42 39 32 30 24 37 25 37 38 34 51 50 13 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(133,513,o),
(151,513,qs),
(170,513,o),
(196,486,o),
(196,467,qs),
(196,449,o),
(170,422,o),
(151,422,qs),
(133,422,o),
(107,449,o),
(107,467,qs),
(107,486,o)
);
},
{
closed = 1;
nodes = (
(269,513,o),
(288,513,qs),
(307,513,o),
(333,486,o),
(333,467,qs),
(333,449,o),
(307,422,o),
(288,422,qs),
(269,422,o),
(243,449,o),
(243,467,qs),
(243,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 1 7 8 1 6 1 7 6 105 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 8 1 6 2 7 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 60 58 54 52 48 46 42 40 32 30 24 37 25 37 38 34 51 50 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,-9,qs),
(134,-9,o),
(88,41,qs),
(37,95,o),
(37,184,qs),
(37,262,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(294,377,o),
(335,319,q),
(343,368,o),
(393,368,qs),
(398,368,ls),
(405,368,o),
(405,359,qs),
(405,9,ls),
(405,0,o),
(398,0,qs),
(339,0,ls),
(331,0,o),
(331,9,qs),
(331,52,l),
(289,-9,o)
);
},
{
closed = 1;
nodes = (
(331,126,o),
(331,184,qs),
(331,246,o),
(298,278,qs),
(269,306,o),
(223,306,qs),
(180,306,o),
(151,280,qs),
(114,246,o),
(114,184,qs),
(114,129,o),
(172,61,o),
(220,61,qs),
(272,61,o)
);
},
{
closed = 1;
nodes = (
(190,559,o),
(220,559,qs),
(249,559,o),
(290,518,o),
(290,489,qs),
(290,460,o),
(249,419,o),
(220,419,qs),
(190,419,o),
(149,460,o),
(149,489,qs),
(149,518,o)
);
},
{
closed = 1;
nodes = (
(253,475,o),
(253,489,qs),
(253,504,o),
(234,524,o),
(220,524,qs),
(206,524,o),
(186,504,o),
(186,489,qs),
(186,475,o),
(206,455,o),
(220,455,qs),
(234,455,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
11 1 8 0 6 1 8 6 105 0 9 9 7 97 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 10 1 4 4 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
11 1 8 0 6 2 8 6 105 0 9 9 7 97 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
51 50 25 24 57 55 50 61 51 61 48 46 42 40 32 30 24 37 25 37 38 34 51 50 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(406,0,o),
(398,0,qs),
(341,0,ls),
(333,0,o),
(333,9,qs),
(333,52,l),
(293,-9,o),
(210,-9,qs),
(136,-9,o),
(89,41,qs),
(38,96,o),
(38,184,qs),
(38,262,o),
(80,315,qs),
(130,377,o),
(213,377,qs),
(295,377,o),
(337,319,q),
(344,368,o),
(395,368,qs),
(398,368,ls),
(406,368,o),
(406,360,qs),
(406,319,l),
(455,377,o),
(534,377,qs),
(611,377,o),
(654,331,qs),
(696,286,o),
(696,209,qs),
(696,185,o),
(694,169,qs),
(693,157,o),
(679,157,qs),
(434,157,l),
(439,108,o),
(501,56,o),
(555,56,qs),
(614,56,o),
(666,93,qs),
(668,94,o),
(670,96,qs),
(677,101,o),
(680,101,qs),
(689,101,o),
(689,87,qs),
(689,55,o),
(658,27,qs),
(617,-9,o),
(546,-9,qs),
(456,-9,o),
(406,49,q),
(406,9,ls)
);
},
{
closed = 1;
nodes = (
(332,126,o),
(332,184,qs),
(332,246,o),
(300,278,qs),
(271,306,o),
(224,306,qs),
(181,306,o),
(152,280,qs),
(115,246,o),
(115,184,qs),
(115,129,o),
(173,61,o),
(221,61,qs),
(274,61,o)
);
},
{
closed = 1;
nodes = (
(624,261,o),
(578,312,o),
(534,312,qs),
(492,312,o),
(439,261,o),
(434,214,q),
(621,214,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
34 28 2 10 4 46 0 2 0 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
34 28 2 10 5 46 0 2 8 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
34 28 2 11 5 46 0 2 8 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 11 1 10 10 4 97 6 1 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 7 1 0 0 49 77 0 8 8 40 77 0 2 2 0 97 7 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
67 67 54 53 67 73 67 73 71 69 61 59 53 66 54 66 51 38 34 51 38 34 37 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,-98,o),
(181,-98,qs),
(131,-98,ls),
(122,-98,o),
(127,-89,qs),
(180,-7,l),
(119,3,o),
(82,47,qs),
(38,99,o),
(38,183,qs),
(38,264,o),
(82,317,qs),
(133,377,o),
(220,377,qs),
(266,377,o),
(304,362,qs),
(343,347,o),
(332,307,qs),
(327,288,l),
(326,280,o),
(320,280,qs),
(317,280,o),
(312,283,qs),
(266,307,o),
(223,307,qs),
(178,307,o),
(149,279,qs),
(115,245,o),
(115,182,qs),
(115,127,o),
(141,95,qs),
(172,57,o),
(231,57,qs),
(286,57,o),
(322,94,qs),
(329,101,o),
(334,101,qs),
(344,101,o),
(344,86,qs),
(344,52,o),
(287,-1,o),
(245,-8,q),
(205,-87,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
36 1 5 1 1 76 0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 101 0 2 2 4 97 0 4 4 48 2 78 57 37 34 38 35 20 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,56,qs),
(294,56,o),
(346,93,qs),
(348,94,o),
(351,97,q),
(357,101,o),
(360,101,qs),
(370,101,o),
(370,87,qs),
(370,54,o),
(338,27,qs),
(296,-9,o),
(224,-9,qs),
(151,-9,o),
(101,31,qs),
(37,83,o),
(37,184,qs),
(37,263,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(289,377,o),
(332,331,qs),
(376,285,o),
(376,208,qs),
(376,188,o),
(374,169,qs),
(372,157,o),
(359,157,qs),
(111,157,l),
(122,56,o)
);
},
{
closed = 1;
nodes = (
(304,259,o),
(256,311,o),
(211,311,qs),
(169,311,o),
(117,260,o),
(113,214,q),
(302,214,l)
);
},
{
closed = 1;
nodes = (
(280,430,o),
(276,430,qs),
(224,430,ls),
(207,430,o),
(195,441,qs),
(113,507,ls),
(110,509,o),
(113,516,o),
(117,516,qs),
(181,516,ls),
(196,516,o),
(206,506,qs),
(280,439,l),
(283,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 7 8 7 133 0 8 1 8 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 49 47 42 40 31 37 31 37 35 37 20 38 38 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,56,qs),
(294,56,o),
(346,93,qs),
(348,94,o),
(351,97,q),
(357,101,o),
(360,101,qs),
(370,101,o),
(370,87,qs),
(370,54,o),
(338,27,qs),
(296,-9,o),
(224,-9,qs),
(151,-9,o),
(101,31,qs),
(37,83,o),
(37,184,qs),
(37,263,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(289,377,o),
(332,331,qs),
(376,285,o),
(376,208,qs),
(376,188,o),
(374,169,qs),
(372,157,o),
(359,157,qs),
(111,157,l),
(122,56,o)
);
},
{
closed = 1;
nodes = (
(304,259,o),
(256,311,o),
(211,311,qs),
(169,311,o),
(117,260,o),
(113,214,q),
(302,214,l)
);
},
{
closed = 1;
nodes = (
(215,516,o),
(227,516,qs),
(293,516,ls),
(297,516,o),
(300,509,o),
(296,507,q),
(215,441,ls),
(203,430,o),
(186,430,qs),
(134,430,ls),
(129,430,o),
(127,437,o),
(130,439,q),
(203,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 8 7 8 133 0 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 50 47 43 40 31 37 31 37 35 37 20 38 38 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,56,qs),
(294,56,o),
(346,93,qs),
(348,94,o),
(351,97,q),
(357,101,o),
(360,101,qs),
(370,101,o),
(370,87,qs),
(370,54,o),
(338,27,qs),
(296,-9,o),
(224,-9,qs),
(151,-9,o),
(101,31,qs),
(37,83,o),
(37,184,qs),
(37,263,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(289,377,o),
(332,331,qs),
(376,285,o),
(376,208,qs),
(376,188,o),
(374,169,qs),
(372,157,o),
(359,157,qs),
(111,157,l),
(122,56,o)
);
},
{
closed = 1;
nodes = (
(304,259,o),
(256,311,o),
(211,311,qs),
(169,311,o),
(117,260,o),
(113,214,q),
(302,214,l)
);
},
{
closed = 1;
nodes = (
(163,430,o),
(145,430,qs),
(98,430,ls),
(94,430,o),
(91,437,o),
(94,439,q),
(163,506,ls),
(173,516,o),
(188,516,qs),
(241,516,ls),
(255,516,o),
(265,506,qs),
(335,439,l),
(337,436,o),
(335,430,o),
(331,430,qs),
(284,430,ls),
(268,430,o),
(255,442,qs),
(214,485,l),
(174,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
52 1 7 8 1 76 0 8 7 8 133 9 1 7 1 7 133 0 3 0 4 0 3 4 128 10 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 57 54 50 47 42 40 31 37 31 37 35 37 20 38 38 32 11 9 28 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,56,qs),
(294,56,o),
(346,93,qs),
(348,94,o),
(351,97,q),
(357,101,o),
(360,101,qs),
(370,101,o),
(370,87,qs),
(370,54,o),
(338,27,qs),
(296,-9,o),
(224,-9,qs),
(151,-9,o),
(101,31,qs),
(37,83,o),
(37,184,qs),
(37,263,o),
(79,315,qs),
(129,377,o),
(212,377,qs),
(289,377,o),
(332,331,qs),
(376,285,o),
(376,208,qs),
(376,188,o),
(374,169,qs),
(372,157,o),
(359,157,qs),
(111,157,l),
(122,56,o)
);
},
{
closed = 1;
nodes = (
(304,259,o),
(256,311,o),
(211,311,qs),
(169,311,o),
(117,260,o),
(113,214,q),
(302,214,l)
);
},
{
closed = 1;
nodes = (
(126,513,o),
(145,513,qs),
(164,513,o),
(190,486,o),
(190,467,qs),
(190,449,o),
(164,422,o),
(145,422,qs),
(126,422,o),
(100,449,o),
(100,467,qs),
(100,486,o)
);
},
{
closed = 1;
nodes = (
(263,513,o),
(281,513,qs),
(300,513,o),
(326,486,o),
(326,467,qs),
(326,449,o),
(300,422,o),
(281,422,qs),
(263,422,o),
(236,449,o),
(236,467,qs),
(236,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 3 0 4 0 3 4 128 10 1 8 9 1 7 1 8 7 105 11 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 31 31 60 58 54 52 48 46 42 40 31 37 31 37 35 37 20 38 38 32 12 9 28 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,9,qs),
(53,359,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(128,368,o),
(128,299,qs),
(128,9,ls),
(128,0,o),
(120,0,qs),
(61,0,ls),
(53,0,o)
);
},
{
closed = 1;
nodes = (
(173,430,o),
(169,430,qs),
(116,430,ls),
(100,430,o),
(88,441,qs),
(6,507,ls),
(3,509,o),
(5,516,o),
(10,516,qs),
(74,516,ls),
(89,516,o),
(99,506,qs),
(173,439,l),
(176,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 2 3 2 133 0 3 1 3 133 0 1 1 42 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,9,qs),
(54,359,ls),
(54,368,o),
(61,368,qs),
(66,368,ls),
(128,368,o),
(128,299,qs),
(128,9,ls),
(128,0,o),
(120,0,qs),
(61,0,ls),
(54,0,o)
);
},
{
closed = 1;
nodes = (
(91,516,o),
(103,516,qs),
(169,516,ls),
(173,516,o),
(176,509,o),
(173,507,qs),
(91,441,ls),
(79,430,o),
(63,430,qs),
(10,430,ls),
(6,430,o),
(3,437,o),
(6,439,q),
(79,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
19 12 2 2 3 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 4 1 0 0 40 0 78 2 0 24 21 17 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,9,qs),
(53,359,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(127,368,o),
(127,299,qs),
(127,9,ls),
(127,0,o),
(119,0,qs),
(61,0,ls),
(53,0,o)
);
},
{
closed = 1;
nodes = (
(38,430,o),
(19,430,qs),
(-27,430,ls),
(-31,430,o),
(-34,437,o),
(-31,439,q),
(37,506,ls),
(47,516,o),
(62,516,qs),
(116,516,ls),
(130,516,o),
(140,506,qs),
(209,439,ls),
(212,436,o),
(209,430,o),
(206,430,qs),
(159,430,ls),
(142,430,o),
(130,442,qs),
(89,485,l),
(48,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
26 1 2 3 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 42 77 5 1 0 0 40 0 78 2 0 31 28 24 21 16 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,9,qs),
(53,359,ls),
(53,368,o),
(60,368,qs),
(65,368,ls),
(127,368,o),
(127,299,qs),
(127,9,ls),
(127,0,o),
(119,0,qs),
(60,0,ls),
(53,0,o)
);
},
{
closed = 1;
nodes = (
(3,513,o),
(21,513,qs),
(40,513,o),
(66,486,o),
(66,467,qs),
(66,448,o),
(40,422,o),
(21,422,qs),
(3,422,o),
(-23,449,o),
(-23,467,qs),
(-23,486,o)
);
},
{
closed = 1;
nodes = (
(139,513,o),
(158,513,qs),
(177,513,o),
(203,486,o),
(203,467,qs),
(203,449,o),
(177,422,o),
(158,422,qs),
(139,422,o),
(113,448,o),
(113,467,qs),
(113,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 42 77 6 1 0 0 40 0 78 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,407,l),
(124,405,o),
(120,412,q),
(102,436,l),
(98,443,o),
(106,447,qs),
(166,479,l),
(119,547,ls),
(112,556,o),
(124,556,qs),
(144,556,ls),
(173,556,o),
(206,541,o),
(220,522,qs),
(228,511,l),
(280,538,ls),
(287,542,o),
(291,534,q),
(309,510,l),
(313,502,o),
(306,499,qs),
(256,472,l),
(361,322,ls),
(407,259,o),
(407,195,qs),
(407,109,o),
(368,57,qs),
(320,-9,o),
(223,-9,qs),
(146,-9,o),
(96,34,qs),
(38,84,o),
(38,173,qs),
(38,252,o),
(77,305,qs),
(125,369,o),
(214,369,qs),
(226,369,o),
(246,367,q),
(193,441,l)
);
},
{
closed = 1;
nodes = (
(296,85,qs),
(331,117,o),
(331,179,qs),
(331,232,o),
(304,264,qs),
(273,300,o),
(222,300,qs),
(176,300,o),
(148,273,qs),
(114,240,o),
(114,179,qs),
(114,123,o),
(171,59,o),
(221,59,qs),
(267,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
39 32 24 17 4 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 98 0 1 1 49 1 78 41 40 48 46 40 54 41 54 30 27 38 33 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,376,qs),
(305,376,o),
(344,338,qs),
(390,295,o),
(390,216,qs),
(390,9,ls),
(390,0,o),
(382,0,qs),
(323,0,ls),
(315,0,o),
(315,9,qs),
(315,202,ls),
(315,252,o),
(267,307,o),
(223,307,qs),
(126,307,o),
(126,198,qs),
(126,9,ls),
(126,0,o),
(119,0,qs),
(60,0,ls),
(52,0,o),
(52,9,qs),
(52,359,ls),
(52,368,o),
(60,368,qs),
(65,368,ls),
(116,368,o),
(124,318,q),
(162,376,o)
);
},
{
closed = 1;
nodes = (
(270,430,qs),
(251,430,o),
(214,445,qs),
(184,458,o),
(174,458,qs),
(157,458,o),
(154,439,qs),
(152,429,o),
(145,429,qs),
(110,429,ls),
(102,429,o),
(102,438,qs),
(106,513,o),
(164,513,qs),
(185,513,o),
(222,497,qs),
(253,484,o),
(265,484,qs),
(281,484,o),
(285,502,qs),
(288,512,o),
(296,512,qs),
(330,512,ls),
(339,512,o),
(339,503,q),
(331,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 6 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 9 5 6 114 0 9 8 8 9 112 7 1 5 10 1 8 0 5 8 105 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 9 5 6 114 0 9 8 8 9 112 7 1 5 10 1 8 4 5 8 105 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 7 1 5 10 1 8 4 5 8 105 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
55 53 51 49 50 34 34 50 37 52 35 51 49 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
},
{
closed = 1;
nodes = (
(302,430,o),
(298,430,qs),
(245,430,ls),
(229,430,o),
(216,441,qs),
(135,507,ls),
(132,509,o),
(134,516,o),
(139,516,qs),
(203,516,ls),
(217,516,o),
(228,506,qs),
(301,439,l),
(305,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 5 4 133 0 5 1 5 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 42 40 35 33 24 22 16 30 17 30 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
},
{
closed = 1;
nodes = (
(227,516,o),
(239,516,qs),
(305,516,ls),
(309,516,o),
(312,509,o),
(309,507,qs),
(228,441,ls),
(215,430,o),
(199,430,qs),
(146,430,ls),
(142,430,o),
(139,437,o),
(142,439,q),
(215,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
38 31 2 4 5 1 76 0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 43 40 36 33 24 22 16 30 17 30 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
},
{
closed = 1;
nodes = (
(172,430,o),
(154,430,qs),
(107,430,ls),
(103,430,o),
(100,437,o),
(103,439,q),
(171,506,ls),
(181,516,o),
(196,516,qs),
(250,516,ls),
(264,516,o),
(274,506,qs),
(344,439,ls),
(346,437,o),
(343,430,o),
(340,430,qs),
(293,430,ls),
(276,430,o),
(264,442,qs),
(223,485,l),
(183,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
45 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 0 3 3 1 97 0 1 1 48 77 8 1 2 2 0 97 7 1 0 0 49 0 78 17 16 1 0 50 47 43 40 35 33 24 22 16 30 17 30 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
},
{
closed = 1;
nodes = (
(270,430,qs),
(251,430,o),
(214,445,qs),
(184,458,o),
(174,458,qs),
(157,458,o),
(154,439,qs),
(152,429,o),
(145,429,qs),
(110,429,ls),
(102,429,o),
(102,438,qs),
(106,513,o),
(164,513,qs),
(185,513,o),
(222,497,qs),
(253,484,o),
(265,484,qs),
(281,484,o),
(285,502,qs),
(288,512,o),
(296,512,qs),
(330,512,ls),
(339,512,o),
(339,503,q),
(331,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 5 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 8 4 5 114 0 8 7 7 8 112 6 1 4 9 1 7 1 4 7 105 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 6 1 4 9 1 7 1 4 7 105 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
17 16 1 0 56 54 52 50 48 45 43 41 39 37 35 32 24 22 16 30 17 30 9 7 0 15 1 15 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,37,qs),
(37,90,o),
(37,183,qs),
(37,264,o),
(81,316,qs),
(133,377,o),
(222,377,qs),
(301,377,o),
(351,330,qs),
(409,277,o),
(409,184,qs),
(409,103,o),
(364,51,qs),
(313,-9,o),
(223,-9,qs),
(144,-9,o)
);
},
{
closed = 1;
nodes = (
(296,88,qs),
(332,121,o),
(332,183,qs),
(332,236,o),
(304,270,qs),
(273,306,o),
(222,306,qs),
(177,306,o),
(148,278,qs),
(114,244,o),
(114,183,qs),
(114,127,o),
(172,62,o),
(222,62,qs),
(267,62,o)
);
},
{
closed = 1;
nodes = (
(136,513,o),
(155,513,qs),
(174,513,o),
(200,486,o),
(200,467,qs),
(200,449,o),
(174,422,o),
(155,422,qs),
(136,422,o),
(110,449,o),
(110,467,qs),
(110,486,o)
);
},
{
closed = 1;
nodes = (
(273,513,o),
(291,513,qs),
(310,513,o),
(336,486,o),
(336,467,qs),
(336,449,o),
(310,422,o),
(291,422,qs),
(273,422,o),
(246,449,o),
(246,467,qs),
(246,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
7 1 5 6 1 4 1 5 4 105 0 3 3 1 97 0 1 1 48 77 9 1 2 2 0 97 8 1 0 0 49 0 78 17 16 1 0 53 51 47 45 41 39 35 33 24 22 16 30 17 30 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
},
{
closed = 1;
nodes = (
(183,448,o),
(201,448,qs),
(219,448,o),
(244,423,o),
(244,404,qs),
(244,387,o),
(219,362,o),
(201,362,qs),
(183,362,o),
(158,387,o),
(158,404,qs),
(158,423,o)
);
},
{
closed = 1;
nodes = (
(184,181,o),
(201,181,qs),
(219,181,o),
(244,155,o),
(244,137,qs),
(244,119,o),
(219,94,o),
(201,94,qs),
(183,94,o),
(158,120,o),
(158,137,qs),
(158,155,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,306,o),
(223,306,qs),
(178,306,o),
(149,278,qs),
(115,245,o),
(115,183,qs),
(115,127,o),
(144,96,q),
(271,294,l)
);
},
{
closed = 1;
nodes = (
(203,61,o),
(223,61,qs),
(268,61,o),
(297,88,qs),
(333,120,o),
(333,183,qs),
(333,227,o),
(312,257,q),
(190,66,l)
);
},
{
closed = 1;
nodes = (
(95,37,qs),
(38,90,o),
(38,183,qs),
(38,264,o),
(82,316,qs),
(134,377,o),
(223,377,qs),
(302,377,o),
(352,330,qs),
(410,277,o),
(410,184,qs),
(410,103,o),
(365,51,qs),
(314,-9,o),
(224,-9,qs),
(145,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 8 2 1 0 1 76 0 0 0 3 97 0 3 3 48 77 0 1 1 2 97 4 1 2 2 49 2 78 19 18 27 25 18 33 19 33 39 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,32,qs),
(49,79,o),
(49,172,qs),
(49,359,ls),
(49,368,o),
(57,368,qs),
(62,368,ls),
(123,368,o),
(123,299,qs),
(123,164,ls),
(123,113,o),
(170,59,o),
(213,59,qs),
(303,59,o),
(303,161,qs),
(303,359,ls),
(303,368,o),
(311,368,qs),
(316,368,ls),
(378,368,o),
(378,299,qs),
(378,167,ls),
(378,89,o),
(342,43,qs),
(299,-10,o),
(213,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(282,430,o),
(278,430,qs),
(226,430,ls),
(209,430,o),
(197,441,qs),
(115,507,ls),
(112,509,o),
(115,516,o),
(119,516,qs),
(183,516,ls),
(198,516,o),
(208,506,qs),
(282,439,l),
(285,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 4 5 4 133 0 5 1 5 133 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 38 36 31 29 21 18 14 12 9 6 0 26 1 26 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,32,qs),
(49,79,o),
(49,172,qs),
(49,359,ls),
(49,368,o),
(57,368,qs),
(62,368,ls),
(123,368,o),
(123,299,qs),
(123,164,ls),
(123,113,o),
(170,59,o),
(213,59,qs),
(303,59,o),
(303,161,qs),
(303,359,ls),
(303,368,o),
(311,368,qs),
(316,368,ls),
(378,368,o),
(378,299,qs),
(378,167,ls),
(378,89,o),
(342,43,qs),
(299,-10,o),
(213,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(215,516,o),
(228,516,qs),
(293,516,ls),
(298,516,o),
(301,509,o),
(297,507,q),
(216,441,ls),
(204,430,o),
(187,430,qs),
(135,430,ls),
(130,430,o),
(128,437,o),
(131,439,q),
(204,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 39 36 32 29 21 18 14 12 9 6 0 26 1 26 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,32,qs),
(49,79,o),
(49,172,qs),
(49,359,ls),
(49,368,o),
(57,368,qs),
(62,368,ls),
(123,368,o),
(123,299,qs),
(123,164,ls),
(123,113,o),
(170,59,o),
(213,59,qs),
(303,59,o),
(303,161,qs),
(303,359,ls),
(303,368,o),
(311,368,qs),
(316,368,ls),
(378,368,o),
(378,299,qs),
(378,167,ls),
(378,89,o),
(342,43,qs),
(299,-10,o),
(213,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(159,430,o),
(141,430,qs),
(94,430,ls),
(90,430,o),
(87,437,o),
(90,439,q),
(158,506,ls),
(168,516,o),
(183,516,qs),
(237,516,ls),
(251,516,o),
(261,506,qs),
(331,439,ls),
(333,437,o),
(330,430,o),
(327,430,qs),
(280,430,ls),
(263,430,o),
(251,442,qs),
(210,485,l),
(170,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
41 1 4 5 1 76 0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 46 43 39 36 31 29 21 18 14 12 9 6 0 26 1 26 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,32,qs),
(49,79,o),
(49,172,qs),
(49,359,ls),
(49,368,o),
(57,368,qs),
(62,368,ls),
(123,368,o),
(123,299,qs),
(123,164,ls),
(123,113,o),
(170,59,o),
(213,59,qs),
(303,59,o),
(303,161,qs),
(303,359,ls),
(303,368,o),
(311,368,qs),
(316,368,ls),
(378,368,o),
(378,299,qs),
(378,167,ls),
(378,89,o),
(342,43,qs),
(299,-10,o),
(213,-10,qs),
(137,-10,o)
);
},
{
closed = 1;
nodes = (
(127,513,o),
(146,513,qs),
(165,513,o),
(191,486,o),
(191,467,qs),
(191,448,o),
(164,422,o),
(146,422,qs),
(127,422,o),
(101,449,o),
(101,467,qs),
(101,486,o)
);
},
{
closed = 1;
nodes = (
(263,513,o),
(282,513,qs),
(301,513,o),
(327,486,o),
(327,467,qs),
(327,449,o),
(301,422,o),
(282,422,qs),
(264,422,o),
(237,448,o),
(237,467,qs),
(237,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 42 77 0 2 2 0 97 8 1 0 0 46 0 78 1 0 49 47 43 41 37 35 31 29 21 18 14 12 9 6 0 26 1 26 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,368,o),
(20,368,qs),
(37,368,ls),
(67,368,o),
(98,342,o),
(111,306,qs),
(183,88,l),
(271,357,ls),
(275,368,o),
(287,368,qs),
(342,368,ls),
(348,368,o),
(347,359,q),
(216,-9,ls),
(184,-102,o),
(125,-171,o),
(76,-171,qs),
(42,-171,o),
(-8,-125,o),
(-8,-93,qs),
(-8,-78,o),
(2,-78,qs),
(6,-78,o),
(11,-82,qs),
(38,-106,o),
(63,-106,qs),
(90,-106,o),
(122,-66,o),
(143,-7,q),
(15,359,l)
);
},
{
closed = 1;
nodes = (
(194,516,o),
(206,516,qs),
(272,516,ls),
(277,516,o),
(279,509,o),
(276,507,qs),
(195,441,ls),
(182,430,o),
(166,430,qs),
(113,430,ls),
(109,430,o),
(106,437,o),
(109,439,q),
(183,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
30 1 5 6 22 1 1 3 2 76 0 6 5 6 133 0 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 52 53 37 52 35 34 34 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,-160,o),
(120,-160,qs),
(61,-160,ls),
(53,-160,o),
(53,-151,qs),
(53,547,ls),
(53,556,o),
(61,556,qs),
(66,556,ls),
(127,556,o),
(127,487,qs),
(127,320,l),
(169,377,o),
(247,377,qs),
(322,377,o),
(369,329,qs),
(422,276,o),
(422,184,qs),
(422,107,o),
(383,54,qs),
(336,-9,o),
(252,-9,qs),
(166,-9,o),
(127,49,q),
(127,-151,ls)
);
},
{
closed = 1;
nodes = (
(309,88,qs),
(345,123,o),
(345,184,qs),
(345,235,o),
(320,268,qs),
(290,306,o),
(236,306,qs),
(193,306,o),
(165,283,qs),
(127,251,o),
(127,184,qs),
(127,127,o),
(158,94,qs),
(189,61,o),
(238,61,qs),
(280,61,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
12 1 5 1 0 1 0 4 2 76 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 26 25 34 32 25 40 26 40 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,368,o),
(20,368,qs),
(37,368,ls),
(67,368,o),
(98,342,o),
(111,306,qs),
(183,88,l),
(271,357,ls),
(275,368,o),
(287,368,qs),
(342,368,ls),
(348,368,o),
(347,359,q),
(216,-9,ls),
(184,-102,o),
(125,-171,o),
(76,-171,qs),
(42,-171,o),
(-8,-125,o),
(-8,-93,qs),
(-8,-78,o),
(2,-78,qs),
(6,-78,o),
(11,-82,qs),
(38,-106,o),
(63,-106,qs),
(90,-106,o),
(122,-66,o),
(143,-7,q),
(15,359,l)
);
},
{
closed = 1;
nodes = (
(95,513,o),
(114,513,qs),
(133,513,o),
(159,486,o),
(159,467,qs),
(159,448,o),
(132,422,o),
(114,422,qs),
(95,422,o),
(69,449,o),
(69,467,qs),
(69,486,o)
);
},
{
closed = 1;
nodes = (
(231,513,o),
(250,513,qs),
(269,513,o),
(295,486,o),
(295,467,qs),
(295,449,o),
(269,422,o),
(250,422,qs),
(232,422,o),
(205,448,o),
(205,467,qs),
(205,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 8 1 6 7 1 5 3 6 5 105 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 36 36 36 37 37 52 35 34 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,9,qs),
(52,359,ls),
(52,368,o),
(60,368,qs),
(65,368,ls),
(126,368,o),
(126,299,qs),
(126,9,ls),
(126,0,o),
(119,0,qs),
(60,0,ls),
(52,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 42 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 180;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,71,o),
(360,27,qs),
(360,11,ls),
(360,0,o),
(349,0,qs),
(81,0,ls),
(73,0,o),
(73,9,qs),
(73,204,l),
(28,180,ls),
(18,175,o),
(18,185,qs),
(18,234,ls),
(18,244,o),
(27,248,qs),
(73,273,l),
(73,547,ls),
(73,556,o),
(81,556,qs),
(87,556,ls),
(149,556,o),
(149,485,qs),
(149,315,l),
(284,388,ls),
(292,393,o),
(292,383,qs),
(292,333,ls),
(292,322,o),
(285,318,qs),
(149,246,l),
(149,71,l),
(315,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
22 15 8 1 4 2 0 1 76 0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 31 0 30 59 58 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 378;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,175,o),
(18,185,qs),
(18,233,ls),
(18,242,o),
(27,247,qs),
(68,268,l),
(68,547,ls),
(68,556,o),
(76,556,qs),
(81,556,ls),
(142,556,o),
(142,487,qs),
(142,310,l),
(198,340,ls),
(208,346,o),
(208,335,qs),
(208,286,ls),
(208,277,o),
(199,272,qs),
(142,242,l),
(142,111,ls),
(142,59,o),
(181,59,qs),
(207,59,o),
(229,83,qs),
(234,89,o),
(239,89,qs),
(247,89,o),
(247,76,qs),
(247,39,o),
(198,-9,o),
(161,-9,qs),
(68,-9,o),
(68,106,qs),
(68,202,l),
(28,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
29 22 15 0 4 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 49 0 78 59 35 19 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(792,71,o),
(792,27,qs),
(792,11,ls),
(792,0,o),
(781,0,qs),
(482,0,ls),
(473,0,o),
(473,9,qs),
(473,67,l),
(412,-10,o),
(301,-10,qs),
(190,-10,o),
(124,58,qs),
(49,135,o),
(49,277,qs),
(49,401,o),
(107,478,qs),
(175,567,o),
(301,567,qs),
(411,567,o),
(473,489,q),
(473,547,ls),
(473,556,o),
(482,556,qs),
(738,556,ls),
(783,556,o),
(783,513,qs),
(783,496,ls),
(783,485,o),
(772,485,qs),
(549,485,l),
(549,312,l),
(719,312,ls),
(764,312,o),
(764,268,qs),
(764,252,ls),
(764,242,o),
(753,242,qs),
(549,242,l),
(549,71,l),
(747,71,ls)
);
},
{
closed = 1;
nodes = (
(414,100,qs),
(473,154,o),
(473,277,qs),
(473,386,o),
(426,442,qs),
(382,495,o),
(301,495,qs),
(231,495,o),
(188,455,qs),
(128,400,o),
(128,277,qs),
(128,168,o),
(175,113,qs),
(219,62,o),
(301,62,qs),
(371,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 5 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 9 31 1 6 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 9 31 1 8 7 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 3 97 4 1 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 50 48 41 56 42 56 0 40 0 39 51 38 35 51 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 821;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,-9,qs),
(145,-9,o),
(95,37,qs),
(38,90,o),
(38,183,qs),
(38,264,o),
(82,316,qs),
(134,377,o),
(223,377,qs),
(322,377,o),
(370,303,q),
(417,377,o),
(505,377,qs),
(582,377,o),
(626,331,qs),
(669,285,o),
(669,208,qs),
(669,179,o),
(668,169,qs),
(667,157,o),
(652,157,qs),
(407,157,l),
(416,56,o),
(526,56,qs),
(587,56,o),
(639,93,qs),
(640,94,o),
(642,95,qs),
(650,101,o),
(653,101,qs),
(663,101,o),
(663,87,qs),
(663,54,o),
(631,27,qs),
(589,-9,o),
(517,-9,qs),
(417,-9,o),
(370,64,q),
(322,-9,o)
);
},
{
closed = 1;
nodes = (
(297,88,qs),
(333,120,o),
(333,183,qs),
(333,236,o),
(305,270,qs),
(274,306,o),
(223,306,qs),
(178,306,o),
(149,278,qs),
(115,245,o),
(115,183,qs),
(115,129,o),
(141,97,qs),
(171,61,o),
(223,61,qs),
(268,61,o)
);
},
{
closed = 1;
nodes = (
(596,260,o),
(549,311,o),
(505,311,qs),
(417,311,o),
(407,214,q),
(595,214,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 10 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 0 9 9 4 97 5 1 4 4 48 77 0 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 49 77 0 2 2 0 97 6 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
55 55 40 39 55 60 55 60 58 56 48 46 39 54 40 54 38 34 38 33 37 20 33 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 704;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,143,qs),
(41,143,o),
(47,136,qs),
(112,59,o),
(209,59,qs),
(270,59,o),
(339,108,o),
(339,150,qs),
(339,183,o),
(307,206,qs),
(285,222,o),
(232,240,qs),
(142,272,o),
(115,288,qs),
(37,333,o),
(37,414,qs),
(37,478,o),
(83,519,qs),
(136,566,o),
(224,566,qs),
(298,566,o),
(360,539,qs),
(409,520,o),
(398,479,qs),
(393,459,ls),
(391,449,o),
(385,449,qs),
(380,449,o),
(370,455,qs),
(302,498,o),
(223,498,qs),
(174,498,o),
(114,454,o),
(114,418,qs),
(114,384,o),
(146,361,qs),
(168,344,o),
(221,326,qs),
(313,294,o),
(338,280,qs),
(416,237,o),
(416,159,qs),
(416,87,o),
(370,42,qs),
(316,-11,o),
(217,-11,qs),
(129,-11,o),
(74,30,qs),
(21,70,o),
(21,123,qs),
(21,143,o)
);
},
{
closed = 1;
nodes = (
(275,693,o),
(294,693,qs),
(340,693,ls),
(345,693,o),
(347,687,o),
(344,684,qs),
(275,618,ls),
(264,608,o),
(251,608,qs),
(197,608,ls),
(183,608,o),
(172,618,qs),
(104,684,ls),
(101,687,o),
(104,693,o),
(108,693,qs),
(154,693,ls),
(173,693,o),
(183,683,qs),
(224,640,l),
(265,683,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 6 7 6 133 0 7 3 7 133 0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 98 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
8 1 6 7 6 133 0 7 3 7 133 0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 106 0 4 4 0 98 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 34 45 37 34 45 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,313,qs),
(106,313,o),
(106,273,qs),
(106,258,o),
(134,235,o),
(173,220,qs),
(246,192,o),
(295,147,o),
(295,108,qs),
(295,58,o),
(263,26,qs),
(224,-11,o),
(155,-11,qs),
(101,-11,o),
(22,45,o),
(22,84,qs),
(22,101,o),
(33,101,qs),
(38,101,o),
(42,96,q),
(90,53,o),
(148,53,qs),
(220,53,o),
(220,101,qs),
(220,117,o),
(191,140,o),
(153,154,qs),
(80,182,o),
(30,227,o),
(30,267,qs),
(30,314,o),
(65,344,qs),
(103,377,o),
(166,377,qs),
(214,377,o),
(251,359,qs),
(286,344,o),
(278,305,qs),
(275,292,ls),
(273,285,o),
(268,285,qs),
(266,285,o),
(262,287,qs),
(259,288,o),
(259,288,q),
(212,313,o)
);
},
{
closed = 1;
nodes = (
(211,516,o),
(229,516,qs),
(276,516,ls),
(280,516,o),
(283,509,o),
(280,507,q),
(210,440,ls),
(200,430,o),
(186,430,qs),
(133,430,ls),
(118,430,o),
(108,440,qs),
(39,507,l),
(37,510,o),
(39,516,o),
(43,516,qs),
(90,516,ls),
(108,516,o),
(119,505,qs),
(159,462,l),
(200,505,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
60 1 7 6 1 76 0 7 6 1 6 7 1 128 0 3 0 2 0 3 2 128 8 1 6 0 0 3 6 0 105 0 5 5 1 97 0 1 1 48 77 0 2 2 4 98 0 4 4 46 4 78 52 53 35 42 35 34 42 37 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,556,o),
(13,556,qs),
(41,556,ls),
(66,556,o),
(99,533,o),
(114,506,qs),
(228,292,l),
(362,543,l),
(367,556,o),
(379,556,qs),
(437,556,ls),
(449,556,o),
(443,544,qs),
(263,212,l),
(263,9,ls),
(263,0,o),
(255,0,qs),
(196,0,ls),
(188,0,o),
(188,9,qs),
(188,213,l),
(7,547,ls)
);
},
{
closed = 1;
nodes = (
(136,691,o),
(155,691,qs),
(174,691,o),
(200,664,o),
(200,645,qs),
(200,626,o),
(174,600,o),
(155,600,qs),
(137,600,o),
(111,626,o),
(111,645,qs),
(111,664,o)
);
},
{
closed = 1;
nodes = (
(273,691,o),
(292,691,qs),
(310,691,o),
(336,664,o),
(336,645,qs),
(336,626,o),
(310,600,o),
(292,600,qs),
(273,600,o),
(247,626,o),
(247,645,qs),
(247,664,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
14 7 0 3 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 36 36 36 36 53 52 50 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 445;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,71,o),
(414,27,qs),
(414,11,ls),
(414,0,o),
(402,0,qs),
(41,0,ls),
(33,0,o),
(33,9,qs),
(33,51,ls),
(33,69,o),
(46,88,qs),
(328,485,l),
(48,485,ls),
(40,485,o),
(40,494,qs),
(40,547,ls),
(40,556,o),
(48,556,qs),
(356,556,ls),
(412,556,o),
(412,505,qs),
(412,492,ls),
(412,476,o),
(399,455,q),
(124,71,l),
(369,71,ls)
);
},
{
closed = 1;
nodes = (
(272,693,o),
(291,693,qs),
(337,693,ls),
(342,693,o),
(344,687,o),
(341,684,qs),
(272,618,ls),
(261,608,o),
(248,608,qs),
(194,608,ls),
(180,608,o),
(169,618,qs),
(101,684,l),
(98,688,o),
(101,693,o),
(105,693,qs),
(151,693,ls),
(170,693,o),
(180,683,qs),
(221,640,l),
(262,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,66,o),
(304,57,qs),
(304,9,ls),
(304,0,o),
(297,0,qs),
(39,0,ls),
(31,0,o),
(31,9,qs),
(31,46,ls),
(31,59,o),
(44,76,qs),
(224,302,l),
(44,302,ls),
(36,302,o),
(36,310,qs),
(36,359,ls),
(36,368,o),
(44,368,qs),
(251,368,ls),
(281,368,o),
(304,343,o),
(304,313,qs),
(304,292,o),
(290,275,qs),
(124,66,l),
(297,66,ls)
);
},
{
closed = 1;
nodes = (
(216,516,o),
(234,516,qs),
(281,516,ls),
(285,516,o),
(288,509,o),
(285,507,q),
(215,440,ls),
(205,430,o),
(192,430,qs),
(138,430,ls),
(123,430,o),
(113,440,qs),
(44,507,l),
(42,510,o),
(44,516,o),
(48,516,qs),
(95,516,ls),
(113,516,o),
(124,505,qs),
(164,462,l),
(205,505,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
40 1 5 4 1 76 6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,302,o),
(54,310,qs),
(63,359,ls),
(65,368,o),
(73,368,qs),
(140,368,l),
(153,442,ls),
(163,499,o),
(226,562,o),
(273,562,qs),
(307,562,o),
(350,524,o),
(350,495,qs),
(350,471,o),
(336,471,qs),
(334,471,o),
(330,473,q),
(329,474,ls),
(301,496,o),
(280,496,qs),
(237,496,o),
(227,437,qs),
(214,368,l),
(305,368,ls),
(314,368,o),
(312,359,qs),
(303,310,ls),
(302,302,o),
(293,302,qs),
(204,302,l),
(140,-52,ls),
(129,-109,o),
(67,-171,o),
(21,-171,qs),
(-14,-171,o),
(-57,-133,o),
(-57,-103,qs),
(-57,-81,o),
(-44,-81,qs),
(-41,-81,o),
(-37,-83,q),
(-36,-83,l),
(-8,-106,o),
(12,-106,qs),
(56,-106,o),
(66,-47,qs),
(128,302,l),
(61,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 50 2 78 0 0 0 47 0 46 35 35 35 34 35 35 35 35 34 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 382;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,430,o),
(54,430,qs),
(8,430,ls),
(4,430,o),
(1,437,o),
(4,439,q),
(72,506,ls),
(82,516,o),
(97,516,qs),
(151,516,ls),
(165,516,o),
(175,506,qs),
(244,439,ls),
(247,436,o),
(244,430,o),
(241,430,qs),
(194,430,ls),
(177,430,o),
(165,442,qs),
(124,485,l),
(83,442,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 22 values pushed */
14 1 0 1 1 76 0 1 0 1 133 2 1 0 0 118 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 246;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,516,o),
(194,516,qs),
(240,516,ls),
(245,516,o),
(247,509,o),
(244,507,q),
(175,440,ls),
(164,430,o),
(151,430,qs),
(97,430,ls),
(83,430,o),
(72,440,qs),
(4,507,ls),
(1,510,o),
(4,516,o),
(8,516,qs),
(54,516,ls),
(73,516,o),
(83,505,qs),
(124,462,l),
(165,505,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 1 0 133 0 1 1 118 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 246;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,516,qs),
(50,516,ls),
(56,516,o),
(59,508,qs),
(69,470,o),
(111,470,qs),
(154,470,o),
(164,508,qs),
(166,516,o),
(173,516,qs),
(215,516,ls),
(222,516,o),
(221,507,qs),
(205,422,o),
(111,422,qs),
(18,422,o),
(3,507,qs),
(1,516,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
50 34 50 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 219;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,513,o),
(45,513,qs),
(63,513,o),
(88,486,o),
(88,467,qs),
(88,448,o),
(63,422,o),
(45,422,qs),
(26,422,o),
(0,448,o),
(0,467,qs),
(0,486,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 88;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,559,o),
(70,559,qs),
(99,559,o),
(140,518,o),
(140,489,qs),
(140,460,o),
(99,419,o),
(70,419,qs),
(40,419,o),
(-1,460,o),
(-1,489,qs),
(-1,518,o)
);
},
{
closed = 1;
nodes = (
(102,475,o),
(102,489,qs),
(102,504,o),
(83,524,o),
(70,524,qs),
(55,524,o),
(36,504,o),
(36,489,qs),
(36,475,o),
(55,455,o),
(70,455,qs),
(83,455,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 141;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,-142,qs),
(45,-142,o),
(0,-104,o),
(0,-73,qs),
(0,-25,o),
(49,0,qs),
(52,2,o),
(59,2,qs),
(111,2,ls),
(114,2,o),
(114,-2,o),
(111,-3,q),
(56,-33,o),
(56,-66,qs),
(56,-99,o),
(94,-99,qs),
(106,-99,o),
(121,-96,q),
(129,-93,o),
(129,-101,qs),
(129,-127,ls),
(129,-134,o),
(121,-137,q),
(98,-142,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 0 1 112 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
37 53 38 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 129;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,430,qs),
(149,430,o),
(112,445,qs),
(82,458,o),
(72,458,qs),
(55,458,o),
(52,439,qs),
(50,429,o),
(43,429,qs),
(8,429,ls),
(0,429,o),
(0,438,qs),
(4,513,o),
(62,513,qs),
(83,513,o),
(120,497,qs),
(151,484,o),
(163,484,qs),
(179,484,o),
(183,502,qs),
(186,512,o),
(194,512,qs),
(228,512,ls),
(237,512,o),
(237,503,q),
(229,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
0 1 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 4 0 1 114 0 4 3 3 4 112 2 1 0 1 3 0 90 2 1 0 0 3 97 5 1 3 0 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 2 1 0 1 3 0 90 2 1 0 0 3 97 5 1 3 0 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 34 50 34 34 49 6 9 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 237;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,516,o),
(78,516,qs),
(131,516,ls),
(143,516,o),
(136,507,qs),
(81,442,ls),
(72,431,o),
(53,431,qs),
(7,431,ls),
(4,431,o),
(1,437,o),
(3,439,qs),
(54,506,ls)
);
},
{
closed = 1;
nodes = (
(140,436,o),
(142,439,qs),
(193,506,ls),
(200,516,o),
(217,516,qs),
(271,516,ls),
(275,516,o),
(278,510,o),
(276,507,qs),
(219,442,ls),
(208,431,o),
(192,431,qs),
(146,431,ls),
(143,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 4 2 2 0 1 0 81 15 13 22 19 13 26 15 26 51 50 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 276;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,-160,o),
(120,-160,qs),
(61,-160,ls),
(53,-160,o),
(53,-151,qs),
(53,360,ls),
(53,368,o),
(61,368,qs),
(66,368,ls),
(127,368,o),
(127,299,qs),
(127,164,ls),
(127,113,o),
(174,59,o),
(217,59,qs),
(307,59,o),
(307,161,qs),
(307,360,ls),
(307,368,o),
(315,368,qs),
(320,368,ls),
(382,368,o),
(382,299,qs),
(382,167,ls),
(382,89,o),
(346,43,qs),
(304,-10,o),
(219,-10,qs),
(163,-10,o),
(127,22,q),
(127,-151,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 2 1 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 51 52 35 53 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,65,o),
(154,44,qs),
(154,21,o),
(123,-11,o),
(101,-11,qs),
(78,-11,o),
(47,22,o),
(47,46,qs),
(47,127,o),
(131,193,q),
(133,196,o),
(136,193,qs),
(158,172,o),
(135,147,qs),
(113,119,o),
(109,98,q),
(129,95,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
42 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,242,o),
(51,266,qs),
(51,346,o),
(134,413,qs),
(136,415,o),
(140,412,qs),
(162,392,o),
(139,366,qs),
(117,339,o),
(112,318,q),
(132,315,o),
(158,284,o),
(158,263,qs),
(158,240,o),
(127,208,o),
(104,208,qs),
(82,208,o)
);
},
{
closed = 1;
nodes = (
(158,67,o),
(158,44,qs),
(158,21,o),
(126,-11,o),
(104,-11,qs),
(82,-11,o),
(50,21,o),
(50,44,qs),
(50,66,o),
(82,99,o),
(104,99,qs),
(126,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 0 1 0 133 4 1 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
3 1 0 1 0 133 4 1 1 2 2 1 89 4 1 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
18 17 1 0 24 22 17 28 18 28 0 16 1 16 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 208;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,154,o),
(195,164,qs),
(195,210,ls),
(194,243,o),
(146,278,qs),
(92,318,o),
(57,370,o),
(57,413,qs),
(56,476,o),
(96,515,qs),
(139,559,o),
(211,559,qs),
(255,559,o),
(323,514,o),
(324,483,qs),
(326,466,o),
(312,466,qs),
(307,466,o),
(297,470,qs),
(253,488,o),
(217,488,qs),
(179,488,o),
(133,445,o),
(134,409,qs),
(134,387,o),
(149,368,qs),
(161,352,o),
(196,325,qs),
(241,293,o),
(272,249,o),
(272,218,qs),
(272,164,ls),
(272,154,o),
(262,154,qs),
(205,154,ls)
);
},
{
closed = 1;
nodes = (
(289,67,o),
(289,44,qs),
(289,21,o),
(257,-11,o),
(235,-11,qs),
(213,-11,o),
(181,21,o),
(181,44,qs),
(181,66,o),
(213,99,o),
(235,99,qs),
(257,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
36 35 1 0 42 40 35 46 36 46 23 21 18 16 14 12 0 34 1 33 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,69,o),
(406,40,o),
(406,17,qs),
(406,12,ls),
(406,0,o),
(394,0,qs),
(157,0,ls),
(106,0,o),
(75,-22,qs),
(68,-26,o),
(63,-26,qs),
(57,-26,o),
(54,-18,qs),
(49,-2,o),
(63,34,o),
(79,44,qs),
(100,60,o),
(131,64,q),
(87,110,o),
(87,176,qs),
(87,249,o),
(130,296,qs),
(177,348,o),
(254,348,qs),
(309,348,o),
(341,319,qs),
(365,299,o),
(365,276,qs),
(365,256,o),
(354,256,qs),
(349,256,o),
(340,261,qs),
(301,282,o),
(261,282,qs),
(215,282,o),
(159,223,o),
(159,174,qs),
(159,136,o),
(182,106,qs),
(210,69,o),
(260,69,qs),
(345,69,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
23 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 6 1 0 0 5 95 0 5 5 24 5 78 1 0 36 33 31 29 18 16 12 10 8 6 0 41 1 40 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,649,q),
(30,647,o),
(28,644,qs),
(23,636,o),
(21,635,qs),
(18,634,o),
(17,634,qs),
(13,634,o),
(10,638,qs),
(3,650,o),
(3,662,qs),
(3,680,o),
(28,706,o),
(45,706,qs),
(68,706,o),
(111,690,qs),
(113,689,o),
(115,689,q),
(151,677,o),
(160,677,qs),
(172,677,o),
(181,689,qs),
(182,691,o),
(185,695,qs),
(190,702,o),
(192,703,qs),
(194,704,o),
(196,704,qs),
(200,704,o),
(202,700,q),
(210,689,o),
(210,676,qs),
(210,658,o),
(185,632,o),
(167,632,qs),
(144,632,o),
(101,648,q),
(100,649,o),
(97,650,qs),
(62,662,o),
(52,662,qs),
(41,662,o)
);
},
{
closed = 1;
nodes = (
(67,0,o),
(67,8,qs),
(67,488,ls),
(67,556,o),
(127,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,68,ls),
(143,0,o),
(82,0,qs),
(75,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
13 1 2 3 1 76 0 3 6 1 0 1 3 0 105 0 2 0 1 5 2 1 105 0 5 5 23 77 7 1 4 4 24 4 78 43 42 1 0 49 46 42 53 43 52 28 26 22 20 7 5 0 41 1 41 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,684,o),
(201,652,qs),
(201,648,ls),
(201,639,o),
(192,639,qs),
(85,639,ls),
(50,639,o),
(31,632,qs),
(29,631,o),
(26,630,qs),
(21,628,o),
(19,628,qs),
(15,628,o),
(13,634,qs),
(11,639,o),
(11,647,qs),
(11,676,o),
(50,682,q),
(40,701,o),
(40,721,qs),
(40,753,o),
(83,797,o),
(115,798,qs),
(141,798,o),
(178,771,o),
(180,750,qs),
(180,739,o),
(172,739,q),
(170,740,o),
(164,743,qs),
(161,744,o),
(159,745,qs),
(142,754,o),
(124,754,qs),
(87,754,o),
(87,720,qs),
(87,704,o),
(107,684,o),
(122,684,qs),
(166,684,ls)
);
},
{
closed = 1;
nodes = (
(143,556,o),
(143,548,qs),
(143,68,ls),
(143,0,o),
(82,0,qs),
(75,0,ls),
(67,0,o),
(67,8,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 6 1 0 0 3 4 0 3 103 7 1 4 4 23 77 0 5 5 24 5 78 41 40 1 0 47 44 40 51 41 50 35 32 17 15 6 4 0 39 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,455,qs),
(123,496,o),
(170,502,qs),
(171,502,l),
(160,521,o),
(160,541,qs),
(160,574,o),
(203,618,o),
(235,618,qs),
(262,619,o),
(299,592,o),
(300,571,qs),
(300,559,o),
(293,560,qs),
(290,561,o),
(285,563,qs),
(281,565,o),
(280,566,q),
(262,574,o),
(245,574,qs),
(208,574,o),
(208,541,qs),
(208,525,o),
(227,504,o),
(243,504,qs),
(287,504,ls),
(322,504,o),
(322,472,qs),
(322,468,ls),
(322,460,o),
(312,460,qs),
(205,460,ls),
(170,460,o),
(152,453,qs),
(150,452,o),
(146,451,q),
(141,448,o),
(139,448,qs),
(134,448,o)
);
},
{
closed = 1;
nodes = (
(402,118,qs),
(402,19,o),
(386,-84,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(256,-142,o),
(288,-102,qs),
(321,-61,o),
(325,16,q),
(272,-11,o),
(223,-9,qs),
(153,-9,o),
(107,39,qs),
(56,93,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(337,377,o),
(378,276,qs),
(401,221,o)
);
},
{
closed = 1;
nodes = (
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,129,o),
(186,63,o),
(229,63,qs),
(286,63,o),
(323,92,q),
(324,106,o),
(324,117,qs),
(325,206,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
34 1 0 2 51 1 6 10 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
34 1 1 2 51 1 6 10 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 6 7 6 8 7 128 0 4 0 3 2 4 3 105 0 2 1 12 2 0 5 2 0 105 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 0 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
12 1 0 1 5 1 0 5 128 0 8 6 7 6 8 7 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 0 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
12 1 0 1 5 1 0 5 128 0 8 6 7 6 8 7 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 5 0 11 10 5 11 105 0 10 0 6 8 10 6 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 83 81 76 74 65 63 60 58 56 54 50 48 42 40 30 28 19 17 14 11 8 5 0 38 1 38 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,0,o),
(69,8,qs),
(69,488,ls),
(69,533,o),
(98,548,qs),
(113,556,o),
(130,556,qs),
(137,556,ls),
(145,556,o),
(145,548,qs),
(145,68,ls),
(145,22,o),
(116,8,qs),
(102,0,o),
(84,0,qs),
(78,0,ls)
);
},
{
closed = 1;
nodes = (
(201,-183,o),
(201,-216,qs),
(201,-219,ls),
(201,-228,o),
(192,-228,qs),
(84,-228,ls),
(50,-228,o),
(32,-234,qs),
(29,-235,o),
(25,-237,qs),
(21,-239,o),
(19,-239,qs),
(14,-239,o),
(12,-233,qs),
(8,-214,o),
(28,-188,o),
(50,-186,q),
(40,-167,o),
(40,-147,qs),
(40,-114,o),
(83,-70,o),
(115,-69,qs),
(141,-69,o),
(178,-96,o),
(180,-117,qs),
(180,-128,o),
(172,-128,q),
(170,-127,o),
(164,-124,qs),
(161,-123,o),
(159,-122,qs),
(141,-113,o),
(124,-113,qs),
(87,-113,o),
(87,-147,qs),
(87,-163,o),
(107,-183,o),
(122,-183,qs),
(166,-183,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
29 1 2 3 37 1 5 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
29 1 2 3 37 1 6 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 3 2 4 3 106 8 1 2 6 1 5 2 5 101 0 1 1 23 77 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 6 5 134 0 4 0 3 2 4 3 106 8 1 2 0 6 5 2 6 103 0 1 1 23 77 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
17 16 1 0 50 47 43 41 33 31 22 20 16 54 17 53 9 6 0 15 1 14 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,321,o),
(66,314,qs),
(63,313,o),
(59,311,qs),
(55,309,o),
(53,309,qs),
(48,309,o),
(46,316,qs),
(42,334,o),
(62,360,o),
(84,363,q),
(74,381,o),
(74,402,qs),
(74,434,o),
(117,478,o),
(149,479,qs),
(175,479,o),
(212,452,o),
(214,431,qs),
(214,420,o),
(206,421,qs),
(204,421,o),
(198,424,qs),
(195,425,o),
(193,426,qs),
(175,435,o),
(158,435,qs),
(121,435,o),
(121,401,qs),
(121,385,o),
(141,365,o),
(156,365,qs),
(200,365,ls),
(235,365,o),
(235,333,qs),
(235,329,ls),
(235,321,o),
(226,321,qs),
(118,321,ls)
);
},
{
closed = 1;
nodes = (
(628,45,o),
(623,1,qs),
(612,-90,o),
(544,-148,qs),
(467,-214,o),
(345,-214,qs),
(224,-214,o),
(145,-147,qs),
(58,-74,o),
(58,39,qs),
(58,101,o),
(108,205,o),
(151,233,qs),
(160,238,o),
(168,238,qs),
(179,238,o),
(179,227,qs),
(179,221,o),
(174,214,q),
(132,141,o),
(132,59,qs),
(132,-28,o),
(186,-82,qs),
(245,-143,o),
(346,-143,qs),
(413,-143,o),
(466,-112,qs),
(529,-75,o),
(542,-12,q),
(542,-9,o),
(542,-6,qs),
(542,12,o),
(508,30,o),
(458,40,qs),
(433,44,o),
(422,47,qs),
(364,60,o),
(329,93,qs),
(286,135,o),
(286,202,qs),
(286,276,o),
(332,324,qs),
(382,377,o),
(462,377,qs),
(515,377,o),
(589,330,o),
(589,296,qs),
(589,277,o),
(577,277,qs),
(573,277,o),
(564,282,qs),
(515,306,o),
(471,306,qs),
(423,306,o),
(363,249,o),
(363,203,qs),
(363,133,o),
(454,114,qs),
(556,93,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
19 1 1 2 27 1 0 1 66 1 8 9 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
19 1 7 2 27 1 0 1 66 1 8 9 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 6 5 9 5 6 9 128 0 9 8 5 9 8 126 0 3 0 2 1 3 2 105 4 11 2 0 5 1 0 89 7 1 1 0 5 6 1 5 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 6 4 9 4 6 9 128 0 9 8 4 9 8 126 0 3 0 2 7 3 2 105 0 1 11 1 0 4 1 0 103 0 7 5 1 4 6 7 4 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 92 90 83 81 73 71 54 52 49 47 45 43 33 31 23 21 12 10 7 4 0 38 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 676;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,8,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,68,ls),
(143,0,o),
(82,0,qs),
(75,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls)
);
},
{
closed = 1;
nodes = (
(429,-98,o),
(429,-119,qs),
(429,-140,o),
(400,-169,o),
(380,-169,qs),
(359,-169,o),
(330,-140,o),
(330,-119,qs),
(330,-98,o),
(359,-69,o),
(380,-69,qs),
(401,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 1 3 133 0 1 0 1 133 7 1 4 0 5 4 5 101 6 1 0 0 2 96 0 2 2 24 2 78 34 33 1 0 40 38 33 44 34 44 27 24 19 16 9 7 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,551,o),
(82,571,qs),
(82,590,o),
(107,615,o),
(125,615,qs),
(144,615,o),
(170,590,o),
(170,571,qs),
(170,551,o),
(144,525,o),
(125,525,qs),
(107,525,o)
);
},
{
closed = 1;
nodes = (
(208,551,o),
(208,571,qs),
(208,589,o),
(233,615,o),
(252,615,qs),
(271,615,o),
(295,590,o),
(295,571,qs),
(295,551,o),
(271,525,o),
(252,525,qs),
(233,525,o)
);
},
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
58 40 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 65 54 65 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,403,o),
(277,422,qs),
(277,441,o),
(301,467,o),
(320,467,qs),
(339,467,o),
(364,441,o),
(364,422,qs),
(364,403,o),
(339,377,o),
(320,377,qs),
(301,377,o)
);
},
{
closed = 1;
nodes = (
(402,403,o),
(402,422,qs),
(402,441,o),
(428,467,o),
(447,467,qs),
(465,467,o),
(490,441,o),
(490,422,qs),
(490,403,o),
(465,377,o),
(447,377,qs),
(428,377,o)
);
},
{
closed = 1;
nodes = (
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 7 0 5 0 7 5 128 0 5 4 0 5 4 126 3 1 1 9 2 8 3 0 7 1 0 105 10 1 4 4 6 96 0 6 6 24 6 78 25 24 13 12 1 0 51 48 43 40 33 31 24 56 25 55 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,497,o),
(340,516,qs),
(340,536,o),
(366,562,o),
(385,562,qs),
(403,562,o),
(428,536,o),
(428,516,qs),
(428,497,o),
(403,472,o),
(385,472,qs),
(366,472,o)
);
},
{
closed = 1;
nodes = (
(276,402,o),
(276,421,qs),
(276,440,o),
(301,466,o),
(319,466,qs),
(338,466,o),
(364,440,o),
(364,421,qs),
(364,402,o),
(338,376,o),
(319,376,qs),
(301,376,o)
);
},
{
closed = 1;
nodes = (
(427,466,o),
(446,466,qs),
(465,466,o),
(489,440,o),
(489,421,qs),
(489,402,o),
(465,376,o),
(446,376,qs),
(427,376,o),
(402,402,o),
(402,421,qs),
(402,440,o)
);
},
{
closed = 1;
nodes = (
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 5 1 3 4 11 2 2 6 3 2 105 10 1 0 0 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 37 36 13 12 1 0 62 59 52 50 44 41 36 68 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(442,74,l),
(429,86,o),
(411,129,o),
(390,194,qs),
(353,306,o),
(265,306,qs),
(207,306,o),
(153,258,q),
(152,258,o),
(151,257,qs),
(138,245,o),
(129,245,qs),
(110,245,o),
(120,276,qs),
(133,316,o),
(169,343,qs),
(215,378,o),
(276,377,qs),
(418,376,o),
(469,207,qs),
(493,120,o),
(520,90,qs),
(533,76,o),
(555,75,qs),
(564,74,o),
(564,66,qs),
(564,35,o),
(526,0,o),
(494,0,qs),
(275,0,ls)
);
},
{
closed = 1;
nodes = (
(369,-107,o),
(369,-128,qs),
(369,-149,o),
(340,-178,o),
(320,-178,qs),
(299,-178,o),
(270,-149,o),
(270,-128,qs),
(270,-107,o),
(299,-78,o),
(320,-78,qs),
(341,-78,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 11 1 8 0 9 7 8 9 105 0 7 0 6 7 6 101 5 1 1 1 0 95 10 1 0 0 24 0 78 58 57 1 0 64 62 57 68 58 68 49 47 38 36 30 28 24 22 18 16 12 10 6 5 0 56 1 55 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(442,74,l),
(429,86,o),
(411,129,o),
(390,194,qs),
(353,306,o),
(265,306,qs),
(207,306,o),
(153,258,q),
(152,258,o),
(151,257,qs),
(138,245,o),
(129,245,qs),
(110,245,o),
(120,276,qs),
(133,316,o),
(169,343,qs),
(215,378,o),
(276,377,qs),
(418,376,o),
(469,207,qs),
(493,120,o),
(520,90,qs),
(533,76,o),
(555,75,qs),
(564,74,o),
(564,66,qs),
(564,35,o),
(526,0,o),
(494,0,qs),
(275,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 0 7 0 6 7 6 101 5 1 1 1 0 95 8 1 0 0 24 0 78 1 0 49 47 38 36 30 28 24 22 18 16 12 10 6 5 0 56 1 55 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(325,511,o),
(325,489,qs),
(325,469,o),
(296,439,o),
(276,439,qs),
(255,439,o),
(227,468,o),
(227,489,qs),
(227,511,o),
(255,539,o),
(276,539,qs),
(297,539,o)
);
},
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(442,74,l),
(429,86,o),
(411,129,o),
(390,194,qs),
(353,306,o),
(265,306,qs),
(207,306,o),
(153,258,q),
(152,258,o),
(151,257,qs),
(138,245,o),
(129,245,qs),
(110,245,o),
(120,276,qs),
(133,316,o),
(169,343,qs),
(215,378,o),
(276,377,qs),
(418,376,o),
(469,207,qs),
(493,120,o),
(520,90,qs),
(533,76,o),
(555,75,qs),
(564,74,o),
(564,66,qs),
(564,35,o),
(526,0,o),
(494,0,qs),
(275,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 3 6 5 3 128 0 4 0 6 5 4 6 105 0 9 0 8 9 8 101 0 1 1 0 97 10 1 0 0 23 77 7 1 3 3 2 95 11 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 3 6 5 3 128 10 1 0 0 1 4 0 1 105 0 4 0 6 5 4 6 105 0 9 0 8 9 8 101 7 1 3 3 2 95 11 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
13 12 1 0 61 59 50 48 42 40 36 34 30 28 24 22 18 17 12 68 13 67 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o),
(321,328,qs),
(367,274,o),
(367,179,qs),
(367,103,o),
(326,55,qs),
(280,0,o),
(200,0,qs),
(64,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 26 23 19 17 15 13 9 7 0 31 1 30 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,504,o),
(206,483,qs),
(206,462,o),
(178,433,o),
(157,433,qs),
(136,433,o),
(108,462,o),
(108,483,qs),
(108,505,o),
(136,533,o),
(157,533,qs),
(178,533,o)
);
},
{
closed = 1;
nodes = (
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o),
(321,328,qs),
(367,274,o),
(367,179,qs),
(367,103,o),
(326,55,qs),
(280,0,o),
(200,0,qs),
(64,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 38 35 31 29 27 25 21 19 12 43 13 42 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 97 0 2 0 2 81 1 0 21 18 13 11 7 5 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,499,o),
(206,478,qs),
(206,457,o),
(178,428,o),
(157,428,qs),
(137,428,o),
(108,457,o),
(108,478,qs),
(108,500,o),
(136,528,o),
(157,528,qs),
(178,528,o)
);
},
{
closed = 1;
nodes = (
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 7 1 2 4 4 2 89 7 1 2 2 4 97 0 4 2 4 81 13 12 1 0 33 30 25 23 19 17 12 36 13 36 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1030,358,o),
(1030,350,qs),
(1030,158,ls),
(1030,84,o),
(993,40,qs),
(951,-10,o),
(872,-9,qs),
(797,-9,o),
(755,40,q),
(715,-9,o),
(633,-9,qs),
(588,-9,o),
(552,12,q),
(540,-88,o),
(478,-148,qs),
(410,-214,o),
(304,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-84,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(170,236,qs),
(183,236,o),
(183,224,qs),
(183,220,o),
(178,213,qs),
(131,136,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(304,-143,qs),
(369,-143,o),
(416,-101,qs),
(478,-47,o),
(478,55,qs),
(478,252,ls),
(478,297,o),
(507,312,qs),
(522,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(554,312,qs),
(554,159,ls),
(554,65,o),
(635,65,qs),
(674,65,o),
(716,114,o),
(716,159,qs),
(716,271,ls),
(716,338,o),
(777,338,qs),
(784,338,ls),
(792,338,o),
(792,331,qs),
(792,159,ls),
(792,65,o),
(873,65,qs),
(911,65,o),
(954,114,o),
(954,159,qs),
(954,291,ls),
(954,358,o),
(1014,358,qs),
(1021,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
60 56 2 8 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 101 3 1 1 1 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 63 61 59 57 53 51 43 42 34 32 25 22 19 17 13 10 7 5 0 69 1 68 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1096;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(710,535,o),
(710,554,qs),
(710,574,o),
(735,600,o),
(754,600,qs),
(773,600,o),
(798,574,o),
(798,554,qs),
(798,535,o),
(773,510,o),
(754,510,qs),
(735,510,o)
);
},
{
closed = 1;
nodes = (
(645,440,o),
(645,459,qs),
(645,478,o),
(670,504,o),
(689,504,qs),
(708,504,o),
(733,478,o),
(733,459,qs),
(733,440,o),
(708,414,o),
(689,414,qs),
(670,414,o)
);
},
{
closed = 1;
nodes = (
(797,504,o),
(815,504,qs),
(834,504,o),
(859,478,o),
(859,459,qs),
(859,440,o),
(834,414,o),
(815,414,qs),
(797,414,o),
(771,440,o),
(771,459,qs),
(771,478,o)
);
},
{
closed = 1;
nodes = (
(1030,358,o),
(1030,350,qs),
(1030,158,ls),
(1030,84,o),
(993,40,qs),
(951,-10,o),
(872,-9,qs),
(797,-9,o),
(755,40,q),
(715,-9,o),
(633,-9,qs),
(588,-9,o),
(552,12,q),
(540,-88,o),
(478,-148,qs),
(410,-214,o),
(304,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-84,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(170,236,qs),
(183,236,o),
(183,224,qs),
(183,220,o),
(178,213,qs),
(131,136,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(304,-143,qs),
(369,-143,o),
(416,-101,qs),
(478,-47,o),
(478,55,qs),
(478,252,ls),
(478,297,o),
(507,312,qs),
(522,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(554,312,qs),
(554,159,ls),
(554,65,o),
(635,65,qs),
(674,65,o),
(716,114,o),
(716,159,qs),
(716,271,ls),
(716,338,o),
(777,338,qs),
(784,338,ls),
(792,338,o),
(792,331,qs),
(792,159,ls),
(792,65,o),
(873,65,qs),
(911,65,o),
(954,114,o),
(954,159,qs),
(954,291,ls),
(954,358,o),
(1014,358,qs),
(1021,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
96 92 2 14 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 101 9 1 7 7 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 105 0 11 13 13 11 89 0 11 11 13 97 0 13 11 13 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
37 36 13 12 1 0 99 97 95 93 89 87 79 78 70 68 61 58 55 53 49 46 43 41 36 105 37 104 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1096;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1120,331,qs),
(1184,277,o),
(1184,182,qs),
(1184,104,o),
(1140,54,qs),
(1092,0,o),
(1014,0,qs),
(633,0,ls),
(589,0,o),
(555,21,q),
(545,-86,o),
(483,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(639,74,l),
(673,196,o),
(751,276,qs),
(848,377,o),
(983,377,qs),
(1065,377,o)
);
},
{
closed = 1;
nodes = (
(1050,74,o),
(1077,104,qs),
(1106,136,o),
(1106,186,qs),
(1105,241,o),
(1071,273,qs),
(1036,306,o),
(979,306,qs),
(895,306,o),
(827,247,qs),
(755,184,o),
(722,74,q),
(1009,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
42 1 6 1 1 76 0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 101 10 8 2 1 1 6 95 0 6 6 24 6 78 53 53 1 0 53 65 53 64 58 56 46 43 39 37 29 28 20 18 13 10 6 4 0 52 1 52 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1238;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,468,o),
(903,489,qs),
(903,511,o),
(932,539,o),
(953,539,qs),
(973,539,o),
(1002,510,o),
(1002,489,qs),
(1002,469,o),
(973,439,o),
(953,439,qs),
(932,439,o)
);
},
{
closed = 1;
nodes = (
(1120,331,qs),
(1184,277,o),
(1184,182,qs),
(1184,104,o),
(1140,54,qs),
(1092,0,o),
(1014,0,qs),
(633,0,ls),
(589,0,o),
(555,21,q),
(545,-86,o),
(483,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(639,74,l),
(673,196,o),
(751,276,qs),
(848,377,o),
(983,377,qs),
(1065,377,o)
);
},
{
closed = 1;
nodes = (
(1050,74,o),
(1077,104,qs),
(1106,136,o),
(1106,186,qs),
(1105,241,o),
(1071,273,qs),
(1036,306,o),
(979,306,qs),
(895,306,o),
(827,247,qs),
(755,184,o),
(722,74,q),
(1009,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
54 1 8 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 101 11 1 0 0 1 97 0 1 1 23 77 13 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 101 13 10 2 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
65 65 13 12 1 0 65 77 65 76 70 68 58 55 51 49 41 40 32 30 25 22 18 16 12 64 13 64 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1238;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,331,qs),
(714,277,o),
(714,182,qs),
(714,104,o),
(670,54,qs),
(622,0,o),
(544,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(176,74,l),
(176,488,ls),
(176,556,o),
(237,556,qs),
(244,556,ls),
(253,556,o),
(253,548,qs),
(253,235,l),
(355,377,o),
(513,377,qs),
(595,377,o)
);
},
{
closed = 1;
nodes = (
(580,74,o),
(607,104,qs),
(637,136,o),
(636,186,qs),
(635,241,o),
(601,273,qs),
(566,306,o),
(509,306,qs),
(425,306,o),
(357,247,qs),
(285,184,o),
(253,74,q),
(539,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 2 4 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 25 25 1 0 25 37 25 36 30 28 18 15 11 9 7 4 0 24 1 24 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 769;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,331,qs),
(714,277,o),
(714,182,qs),
(714,104,o),
(670,54,qs),
(622,0,o),
(544,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(176,74,l),
(176,488,ls),
(176,556,o),
(237,556,qs),
(244,556,ls),
(253,556,o),
(253,548,qs),
(253,235,l),
(355,377,o),
(513,377,qs),
(595,377,o)
);
},
{
closed = 1;
nodes = (
(434,468,o),
(434,489,qs),
(434,511,o),
(462,539,o),
(483,539,qs),
(504,539,o),
(532,511,o),
(532,489,qs),
(532,469,o),
(504,439,o),
(483,439,qs),
(463,439,o)
);
},
{
closed = 1;
nodes = (
(580,74,o),
(607,104,qs),
(637,136,o),
(636,186,qs),
(635,241,o),
(601,273,qs),
(566,306,o),
(509,306,qs),
(425,306,o),
(357,247,qs),
(285,184,o),
(253,74,q),
(539,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 0 6 2 0 6 105 0 1 1 23 77 9 1 4 4 5 97 0 5 5 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
37 37 26 25 1 0 37 49 37 48 42 40 32 30 25 36 26 36 18 15 11 9 7 4 0 24 1 24 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 769;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-69,o),
(111,24,o),
(161,49,q),
(131,72,o),
(95,148,o),
(95,188,qs),
(95,268,o),
(144,320,qs),
(197,377,o),
(283,377,qs),
(336,377,o),
(410,332,o),
(413,298,qs),
(414,277,o),
(400,277,qs),
(396,277,o),
(387,282,qs),
(339,306,o),
(292,306,qs),
(244,306,o),
(212,279,qs),
(173,247,o),
(172,188,qs),
(172,148,o),
(195,117,qs),
(225,74,o),
(280,74,qs),
(400,74,ls),
(430,74,o),
(467,43,o),
(467,18,qs),
(467,12,ls),
(467,0,o),
(453,0,qs),
(275,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
21 1 3 2 31 1 0 1 2 76 0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 6 0 5 6 5 101 0 1 1 0 95 7 1 0 0 24 0 78 1 0 50 48 39 37 25 23 20 18 16 14 8 5 0 57 1 56 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,468,o),
(211,489,qs),
(211,511,o),
(239,539,o),
(260,539,qs),
(281,539,o),
(309,511,o),
(309,489,qs),
(309,469,o),
(281,439,o),
(260,439,qs),
(240,439,o)
);
},
{
closed = 1;
nodes = (
(202,0,o),
(164,-35,qs),
(124,-73,o),
(124,-130,qs),
(124,-180,o),
(155,-215,qs),
(195,-258,o),
(270,-260,qs),
(322,-261,o),
(366,-248,qs),
(392,-241,o),
(429,-221,qs),
(442,-214,o),
(455,-226,o),
(450,-240,qs),
(432,-283,o),
(380,-307,qs),
(328,-332,o),
(260,-331,qs),
(166,-330,o),
(107,-277,qs),
(42,-220,o),
(42,-127,qs),
(42,-69,o),
(97,24,o),
(147,49,q),
(117,72,o),
(81,148,o),
(81,188,qs),
(81,268,o),
(130,320,qs),
(183,377,o),
(269,377,qs),
(322,377,o),
(396,332,o),
(399,298,qs),
(400,277,o),
(386,277,qs),
(382,277,o),
(373,282,qs),
(325,306,o),
(278,306,qs),
(230,306,o),
(198,279,qs),
(159,247,o),
(158,188,qs),
(158,148,o),
(181,117,qs),
(211,74,o),
(266,74,qs),
(386,74,ls),
(416,74,o),
(453,43,o),
(453,18,qs),
(453,12,ls),
(453,0,o),
(439,0,qs),
(261,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 5 4 43 1 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 0 8 0 7 8 7 101 9 1 0 0 1 97 0 1 1 23 77 0 3 3 2 95 10 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 5 4 3 4 5 3 128 0 1 9 1 0 6 1 0 105 0 6 0 4 5 6 4 105 0 8 0 7 8 7 101 0 3 3 2 95 10 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 62 60 51 49 37 35 32 30 28 26 20 17 12 69 13 68 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,0,l),
(-3,0,l),
(-3,74,l),
(113,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,468,o),
(574,489,qs),
(574,511,o),
(603,539,o),
(624,539,qs),
(644,539,o),
(673,511,o),
(673,489,qs),
(673,469,o),
(644,439,o),
(624,439,qs),
(603,439,o)
);
},
{
closed = 1;
nodes = (
(737,331,qs),
(792,277,o),
(792,188,qs),
(792,112,o),
(751,60,qs),
(704,2,o),
(625,0,qs),
(228,0,ls),
(149,0,o),
(101,33,qs),
(42,73,o),
(42,154,qs),
(42,199,o),
(88,278,o),
(126,298,qs),
(136,303,o),
(143,303,qs),
(154,303,o),
(154,292,qs),
(154,286,o),
(149,278,q),
(109,226,o),
(109,177,qs),
(109,74,o),
(231,74,qs),
(486,74,l),
(451,115,o),
(450,188,qs),
(450,265,o),
(492,318,qs),
(541,377,o),
(621,377,qs),
(690,377,o)
);
},
{
closed = 1;
nodes = (
(688,107,qs),
(715,141,o),
(715,190,qs),
(715,232,o),
(694,264,qs),
(668,306,o),
(621,306,qs),
(580,306,o),
(554,273,qs),
(528,239,o),
(528,190,qs),
(528,148,o),
(548,116,qs),
(575,74,o),
(621,74,qs),
(662,74,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 7 3 7 4 3 128 9 1 2 0 7 4 2 7 105 8 1 0 0 1 97 0 1 1 23 77 10 6 2 3 3 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 7 3 7 4 3 128 0 1 8 1 0 2 1 0 105 9 1 2 0 7 4 2 7 105 10 6 2 3 3 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
46 45 13 12 1 0 54 52 45 60 46 60 38 35 28 26 20 18 12 44 13 44 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 864;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,470,o),
(348,489,qs),
(348,508,o),
(372,534,o),
(391,534,qs),
(410,534,o),
(435,508,o),
(435,489,qs),
(435,470,o),
(410,444,o),
(391,444,qs),
(372,444,o)
);
},
{
closed = 1;
nodes = (
(473,470,o),
(473,489,qs),
(473,508,o),
(499,534,o),
(518,534,qs),
(536,534,o),
(561,508,o),
(561,489,qs),
(561,470,o),
(536,444,o),
(518,444,qs),
(499,444,o)
);
},
{
closed = 1;
nodes = (
(630,82,qs),
(626,-52,o),
(560,-128,qs),
(485,-215,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,102,o),
(107,205,o),
(149,233,q),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(419,-143,o),
(470,-107,qs),
(529,-67,o),
(546,13,q),
(497,-11,o),
(451,-9,qs),
(381,-9,o),
(336,39,qs),
(284,93,o),
(284,182,qs),
(284,266,o),
(328,319,qs),
(376,377,o),
(455,377,qs),
(567,377,o),
(608,276,qs),
(634,215,o)
);
},
{
closed = 1;
nodes = (
(414,63,o),
(458,63,qs),
(514,63,o),
(552,92,q),
(553,106,o),
(553,117,qs),
(554,210,o),
(537,249,qs),
(512,306,o),
(456,306,qs),
(416,306,o),
(391,275,qs),
(363,241,o),
(363,184,qs),
(363,129,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 10 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 9 10 9 7 10 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 9 7 4 9 105 0 10 0 5 6 10 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 78 76 70 68 60 58 51 49 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,556,o),
(694,547,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,488,ls),
(618,556,o),
(679,556,qs),
(686,556,ls)
);
},
{
closed = 1;
nodes = (
(286,268,qs),
(286,302,o),
(322,313,q),
(307,335,o),
(307,362,qs),
(307,399,o),
(357,449,o),
(395,449,qs),
(423,449,o),
(462,421,o),
(464,401,qs),
(464,387,o),
(455,387,qs),
(451,387,o),
(445,391,q),
(438,394,ls),
(423,402,o),
(403,402,qs),
(357,402,o),
(357,361,qs),
(357,342,o),
(383,317,o),
(403,317,qs),
(448,317,ls),
(485,317,o),
(485,283,qs),
(485,279,ls),
(485,270,o),
(475,270,qs),
(360,270,ls),
(327,270,o),
(307,262,q),
(305,262,o),
(304,261,q),
(303,261,o),
(302,260,q),
(298,259,o),
(295,259,qs),
(286,259,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
60 1 7 6 68 1 2 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 6 5 6 7 5 128 0 2 5 4 5 2 4 128 0 8 0 6 7 8 6 105 0 5 11 9 2 4 1 5 4 105 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 7 6 5 6 7 5 128 0 2 5 4 5 2 4 128 11 1 9 4 1 4 9 1 128 0 8 0 6 7 8 6 105 0 5 0 4 9 5 4 103 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
33 33 1 0 33 71 33 71 64 62 59 57 54 52 49 46 43 40 26 23 16 14 8 5 0 32 1 31 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,64,ls),
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 101 0 1 1 23 1 78 1 0 25 24 16 14 9 6 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,318,qs),
(553,259,o),
(553,163,qs),
(553,82,o),
(514,38,qs),
(472,-9,o),
(392,-9,qs),
(298,-9,o),
(205,42,q),
(195,42,ls),
(122,37,o),
(122,-54,qs),
(122,-221,ls),
(122,-288,o),
(62,-288,qs),
(54,-288,ls),
(46,-288,o),
(46,-280,qs),
(46,-53,ls),
(46,96,o),
(169,114,q),
(177,127,o),
(191,159,qs),
(198,173,ls),
(246,275,o),
(268,306,qs),
(318,377,o),
(386,377,qs),
(463,377,o)
);
},
{
closed = 1;
nodes = (
(474,164,qs),
(474,232,o),
(429,306,o),
(389,306,qs),
(363,306,o),
(313,240,o),
(275,153,qs),
(262,123,o),
(250,104,q),
(327,62,o),
(395,63,qs),
(474,66,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 2 3 4 89 7 1 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
30 29 1 0 37 35 29 40 30 40 22 20 19 17 14 11 0 28 1 28 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,401,o),
(358,380,qs),
(358,359,o),
(329,330,o),
(309,330,qs),
(288,330,o),
(259,359,o),
(259,380,qs),
(259,401,o),
(288,430,o),
(309,430,qs),
(329,430,o)
);
},
{
closed = 1;
nodes = (
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,64,ls),
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 97 7 1 2 4 2 81 13 12 1 0 37 36 28 26 21 18 12 45 13 45 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 41 30 41 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(402,118,qs),
(402,19,o),
(386,-84,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(256,-142,o),
(288,-102,qs),
(321,-61,o),
(325,16,q),
(272,-11,o),
(223,-9,qs),
(153,-9,o),
(107,39,qs),
(56,93,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(337,377,o),
(378,276,qs),
(401,221,o)
);
},
{
closed = 1;
nodes = (
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,129,o),
(186,63,o),
(229,63,qs),
(286,63,o),
(323,92,q),
(324,106,o),
(324,117,qs),
(325,206,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 1 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 41 35 34 36 38 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(542,-148,qs),
(464,-214,o),
(343,-214,qs),
(221,-214,o),
(142,-147,qs),
(56,-74,o),
(56,39,qs),
(56,101,o),
(106,205,o),
(149,233,qs),
(158,238,o),
(165,238,qs),
(177,238,o),
(177,227,qs),
(177,221,o),
(172,214,q),
(130,141,o),
(130,59,qs),
(130,-28,o),
(183,-82,qs),
(243,-143,o),
(343,-143,qs),
(411,-143,o),
(464,-112,qs),
(527,-75,o),
(539,-12,qs),
(540,-9,o),
(540,-6,qs),
(540,12,o),
(505,30,o),
(455,40,qs),
(431,44,o),
(420,47,qs),
(362,60,o),
(327,93,qs),
(283,135,o),
(283,202,qs),
(283,276,o),
(329,324,qs),
(380,377,o),
(460,377,qs),
(513,377,o),
(587,330,o),
(587,296,qs),
(587,277,o),
(574,277,qs),
(570,277,o),
(562,282,q),
(513,306,o),
(469,306,qs),
(421,306,o),
(360,249,o),
(360,203,qs),
(360,133,o),
(452,114,qs),
(553,93,o),
(626,45,o),
(620,1,qs),
(610,-90,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
30 1 3 4 1 76 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 56 54 47 45 37 35 35 34 39 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 676;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,-148,qs),
(450,-214,o),
(329,-214,qs),
(207,-214,o),
(128,-147,qs),
(42,-74,o),
(42,39,qs),
(42,101,o),
(92,205,o),
(135,233,qs),
(144,238,o),
(151,238,qs),
(163,238,o),
(163,227,qs),
(163,221,o),
(158,214,q),
(116,141,o),
(116,59,qs),
(116,-28,o),
(169,-82,qs),
(229,-143,o),
(329,-143,qs),
(397,-143,o),
(450,-112,qs),
(513,-75,o),
(525,-12,qs),
(526,-9,o),
(526,-6,qs),
(526,12,o),
(491,30,o),
(441,40,qs),
(417,44,o),
(406,47,qs),
(348,60,o),
(313,93,qs),
(269,135,o),
(269,202,qs),
(269,276,o),
(315,324,qs),
(366,377,o),
(446,377,qs),
(499,377,o),
(573,330,o),
(573,296,qs),
(573,277,o),
(560,277,qs),
(557,277,o),
(548,282,qs),
(499,306,o),
(455,306,qs),
(407,306,o),
(346,249,o),
(346,203,qs),
(346,133,o),
(438,114,qs),
(539,93,o),
(612,45,o),
(606,1,qs),
(596,-90,o)
);
},
{
closed = 1;
nodes = (
(220,-338,o),
(220,-318,qs),
(220,-299,o),
(245,-274,o),
(264,-274,qs),
(283,-274,o),
(308,-299,o),
(308,-318,qs),
(308,-338,o),
(283,-364,o),
(264,-364,qs),
(245,-364,o)
);
},
{
closed = 1;
nodes = (
(346,-338,o),
(346,-318,qs),
(346,-299,o),
(371,-274,o),
(390,-274,qs),
(409,-274,o),
(434,-299,o),
(434,-318,qs),
(434,-338,o),
(409,-364,o),
(390,-364,qs),
(371,-364,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
30 1 3 4 1 76 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 0 5 7 3 5 105 9 1 7 6 6 7 89 9 1 7 7 6 97 11 8 10 3 6 7 6 81 72 71 60 59 78 76 71 82 72 82 66 64 59 70 60 70 56 54 47 45 37 35 35 34 39 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,758,o),
(182,726,qs),
(182,722,ls),
(182,714,o),
(173,714,qs),
(66,714,ls),
(31,714,o),
(12,707,qs),
(10,706,o),
(7,705,q),
(2,702,o),
(0,702,qs),
(-4,702,o),
(-6,709,qs),
(-8,714,o),
(-8,722,qs),
(-8,758,o),
(53,758,qs),
(147,758,ls)
);
},
{
closed = 1;
nodes = (
(182,665,o),
(182,633,qs),
(182,629,ls),
(182,621,o),
(173,621,qs),
(66,621,ls),
(31,621,o),
(12,613,q),
(10,613,o),
(7,611,qs),
(2,609,o),
(0,609,qs),
(-4,609,o),
(-6,616,qs),
(-8,621,o),
(-8,628,qs),
(-8,665,o),
(53,665,qs),
(147,665,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 20 19 1 0 33 30 19 37 20 36 14 11 0 18 1 17 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,614,o),
(234,588,qs),
(234,556,o),
(195,523,q),
(200,516,o),
(200,508,qs),
(200,496,o),
(188,487,qs),
(184,484,o),
(182,484,qs),
(179,484,o),
(175,488,qs),
(164,499,l),
(136,479,ls),
(121,468,o),
(106,468,qs),
(92,468,o),
(65,489,q),
(64,491,o),
(60,494,qs),
(51,502,o),
(46,502,qs),
(40,502,o),
(30,487,q),
(30,486,l),
(23,474,o),
(19,474,qs),
(14,474,o),
(11,481,qs),
(7,489,o),
(7,500,qs),
(7,519,o),
(30,544,o),
(46,544,qs),
(63,544,o),
(92,521,qs),
(104,511,o),
(109,511,qs),
(114,511,o),
(120,516,qs),
(133,527,l),
(103,553,o),
(103,584,qs),
(103,612,o),
(139,647,o),
(168,647,qs),
(198,647,o)
);
},
{
closed = 1;
nodes = (
(194,584,qs),
(194,595,o),
(179,611,o),
(169,611,qs),
(143,611,o),
(143,584,qs),
(143,568,o),
(166,549,q),
(194,568,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 11 values pushed */
42 5 2 1 2 33 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
7 1 0 0 6 2 0 6 105 0 1 4 3 1 89 0 2 0 4 3 2 4 105 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 4 5 4 3 5 128 7 1 0 0 6 2 0 6 105 0 1 4 5 1 89 0 2 0 4 3 2 4 105 0 1 1 5 97 0 5 1 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 52 50 31 29 25 23 20 18 13 11 9 7 0 46 1 46 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,-71,o),
(182,-103,qs),
(182,-107,ls),
(182,-116,o),
(173,-116,qs),
(66,-116,ls),
(31,-116,o),
(12,-123,qs),
(10,-124,o),
(7,-125,qs),
(2,-127,o),
(0,-127,qs),
(-4,-127,o),
(-6,-121,qs),
(-8,-116,o),
(-8,-108,qs),
(-8,-71,o),
(53,-71,qs),
(147,-71,ls)
);
},
{
closed = 1;
nodes = (
(182,-164,o),
(182,-197,qs),
(182,-201,ls),
(182,-209,o),
(173,-209,qs),
(66,-209,ls),
(31,-209,o),
(12,-216,qs),
(10,-217,o),
(7,-218,q),
(2,-221,o),
(0,-221,qs),
(-4,-221,o),
(-6,-214,qs),
(-8,-209,o),
(-8,-201,qs),
(-8,-164,o),
(53,-164,qs),
(147,-164,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 20 19 1 0 33 30 19 37 20 36 14 11 0 18 1 17 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,665,o),
(182,633,qs),
(182,629,ls),
(182,621,o),
(173,621,qs),
(66,621,ls),
(31,621,o),
(12,613,q),
(10,613,o),
(7,611,qs),
(2,609,o),
(0,609,qs),
(-4,609,o),
(-6,616,qs),
(-8,621,o),
(-8,628,qs),
(-8,665,o),
(53,665,qs),
(147,665,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 14 11 0 18 1 17 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,589,qs),
(45,618,o),
(82,654,o),
(112,654,qs),
(142,654,o),
(178,620,o),
(177,592,qs),
(176,562,o),
(138,531,q),
(153,511,o),
(132,494,qs),
(125,489,o),
(119,495,qs),
(107,507,l),
(68,479,o),
(59,474,q),
(58,474,o),
(55,472,qs),
(41,464,o),
(32,464,qs),
(15,464,o),
(6,476,qs),
(3,481,ls),
(0,485,o),
(4,488,q),
(36,506,o),
(77,534,q),
(47,559,o)
);
},
{
closed = 1;
nodes = (
(137,591,qs),
(137,602,o),
(123,618,o),
(113,618,qs),
(86,618,o),
(87,591,qs),
(87,575,o),
(110,557,q),
(136,575,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
18 13 2 0 2 1 76 0 0 2 0 134 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 39 46 38 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,-71,o),
(182,-103,qs),
(182,-107,ls),
(182,-116,o),
(173,-116,qs),
(66,-116,ls),
(31,-116,o),
(12,-123,qs),
(10,-124,o),
(7,-125,qs),
(2,-127,o),
(0,-127,qs),
(-4,-127,o),
(-6,-121,qs),
(-8,-116,o),
(-8,-108,qs),
(-8,-71,o),
(53,-71,qs),
(147,-71,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 14 11 0 18 1 17 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
35 19 8 3 1 0 29 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 32 30 28 26 23 21 17 15 12 10 6 4 0 37 1 37 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,596,o),
(61,596,qs),
(90,596,o),
(125,559,o),
(125,531,qs),
(125,502,o),
(90,465,o),
(61,465,qs),
(33,465,o),
(-3,501,o),
(-3,531,qs),
(-3,560,o)
);
},
{
closed = 1;
nodes = (
(61,561,qs),
(35,561,o),
(35,531,qs),
(35,501,o),
(61,501,qs),
(88,501,o),
(88,531,qs),
(88,561,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 3 2 1 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 34 35 36 34 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,638,q),
(35,636,o),
(33,633,qs),
(28,625,o),
(26,624,qs),
(24,623,o),
(22,623,qs),
(18,623,o),
(15,627,qs),
(8,638,o),
(8,651,qs),
(8,669,o),
(33,695,o),
(50,695,qs),
(74,695,o),
(116,679,qs),
(118,678,o),
(120,678,q),
(156,666,o),
(165,666,qs),
(177,666,o),
(186,678,qs),
(187,680,o),
(190,683,q),
(195,691,o),
(197,692,qs),
(199,693,o),
(201,693,qs),
(205,693,o),
(207,689,q),
(215,678,o),
(215,665,qs),
(215,647,o),
(190,621,o),
(172,621,qs),
(149,621,o),
(106,637,q),
(105,638,o),
(102,639,qs),
(67,651,o),
(57,651,qs),
(46,651,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
13 1 2 3 1 76 0 2 0 1 2 89 0 3 4 1 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 1 0 28 26 22 20 7 5 0 41 1 41 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,661,o),
(216,629,qs),
(216,625,ls),
(216,617,o),
(207,617,qs),
(100,617,ls),
(65,617,o),
(46,609,q),
(44,609,o),
(41,607,qs),
(36,605,o),
(34,605,qs),
(30,605,o),
(28,612,qs),
(26,617,o),
(26,624,qs),
(26,653,o),
(65,659,q),
(55,679,o),
(55,698,qs),
(55,730,o),
(98,775,o),
(130,775,qs),
(156,775,o),
(193,748,o),
(195,727,qs),
(195,716,o),
(187,717,qs),
(185,717,o),
(179,720,qs),
(176,722,o),
(174,722,q),
(156,731,o),
(139,731,qs),
(102,731,o),
(102,697,qs),
(102,682,o),
(122,661,o),
(137,661,qs),
(181,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 35 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,-185,o),
(194,-217,qs),
(194,-221,ls),
(194,-229,o),
(185,-229,qs),
(78,-229,ls),
(43,-229,o),
(24,-237,q),
(22,-237,o),
(19,-239,qs),
(14,-241,o),
(12,-241,qs),
(8,-241,o),
(6,-234,qs),
(4,-229,o),
(4,-222,qs),
(4,-193,o),
(43,-187,q),
(33,-167,o),
(33,-148,qs),
(33,-116,o),
(76,-72,o),
(108,-71,qs),
(134,-71,o),
(171,-98,o),
(173,-119,qs),
(173,-130,o),
(165,-129,qs),
(163,-129,o),
(157,-126,qs),
(154,-125,o),
(152,-124,qs),
(134,-115,o),
(117,-115,qs),
(80,-115,o),
(80,-149,qs),
(80,-165,o),
(100,-185,o),
(115,-185,qs),
(159,-185,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 35 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,472,qs),
(228,355,ls),
(223,344,o),
(211,344,qs),
(184,344,ls),
(173,344,o),
(168,355,qs),
(120,472,ls),
(116,483,o),
(130,483,qs),
(165,483,o),
(178,451,qs),
(198,404,l),
(218,451,ls),
(231,483,o),
(266,483,qs),
(280,483,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 76 1 3 2 0 2 0 133 0 2 2 118 1 0 13 10 7 5 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,101,qs),
(378,154,o),
(378,278,qs),
(378,496,o),
(252,496,qs),
(194,496,o),
(163,455,qs),
(125,403,o),
(125,278,qs),
(125,168,o),
(154,115,qs),
(185,61,o),
(252,61,qs),
(309,61,o)
);
},
{
closed = 1;
nodes = (
(107,54,qs),
(48,128,o),
(48,278,qs),
(48,409,o),
(95,483,qs),
(147,567,o),
(252,567,qs),
(342,567,o),
(394,502,qs),
(455,428,o),
(455,278,qs),
(455,147,o),
(409,73,qs),
(357,-10,o),
(252,-10,qs),
(159,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,447,ls),
(37,443,o),
(37,453,qs),
(37,511,ls),
(37,522,o),
(47,525,qs),
(108,547,ls),
(133,556,o),
(157,556,qs),
(170,556,ls),
(219,556,o),
(219,501,qs),
(219,69,l),
(285,69,ls),
(330,69,o),
(330,26,qs),
(330,11,ls),
(330,0,o),
(319,0,qs),
(44,0,ls),
(36,0,o),
(36,9,qs),
(36,61,ls),
(36,69,o),
(44,69,qs),
(144,69,l),
(144,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 353;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,69,o),
(399,27,qs),
(399,11,ls),
(399,0,o),
(388,0,qs),
(45,0,ls),
(37,0,o),
(37,9,qs),
(37,98,o),
(86,160,qs),
(118,200,o),
(192,249,qs),
(270,301,o),
(318,361,o),
(318,406,qs),
(318,449,o),
(263,498,o),
(213,498,qs),
(146,498,o),
(79,455,qs),
(70,450,o),
(66,450,qs),
(61,450,o),
(58,458,qs),
(52,478,ls),
(40,517,o),
(88,538,qs),
(155,567,o),
(218,567,qs),
(295,567,o),
(341,531,qs),
(395,490,o),
(395,407,qs),
(395,341,o),
(349,288,qs),
(320,254,o),
(251,207,qs),
(177,156,o),
(129,104,o),
(125,69,q),
(354,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 58 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,208,o),
(401,157,qs),
(401,88,o),
(354,43,qs),
(300,-10,o),
(208,-10,qs),
(127,-10,o),
(75,30,qs),
(25,69,o),
(25,117,qs),
(25,139,o),
(39,139,qs),
(45,139,o),
(54,129,qs),
(110,58,o),
(202,58,qs),
(258,58,o),
(324,113,o),
(324,159,qs),
(324,205,o),
(292,230,qs),
(260,254,o),
(205,254,qs),
(148,254,ls),
(106,254,o),
(106,294,qs),
(106,311,ls),
(106,324,o),
(116,324,qs),
(207,324,ls),
(308,324,o),
(308,412,qs),
(308,499,o),
(201,499,qs),
(134,499,o),
(68,456,qs),
(67,455,o),
(65,454,qs),
(58,450,o),
(56,450,qs),
(50,450,o),
(47,458,qs),
(41,478,ls),
(29,515,o),
(77,538,qs),
(143,567,o),
(204,567,qs),
(279,567,o),
(326,534,qs),
(383,494,o),
(383,419,qs),
(383,327,o),
(294,291,q),
(343,280,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 37 51 50 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,128,o),
(16,136,qs),
(16,177,ls),
(16,194,o),
(26,208,qs),
(243,537,l),
(254,556,o),
(277,556,qs),
(307,556,ls),
(354,556,o),
(354,508,qs),
(354,197,l),
(390,197,ls),
(435,197,o),
(435,154,qs),
(435,138,ls),
(435,128,o),
(424,128,qs),
(354,128,l),
(354,9,ls),
(354,0,o),
(347,0,qs),
(287,0,ls),
(279,0,o),
(279,9,qs),
(279,128,l),
(24,128,ls)
);
},
{
closed = 1;
nodes = (
(279,476,l),
(95,197,l),
(279,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,353,o),
(224,353,qs),
(303,353,o),
(352,312,qs),
(407,265,o),
(407,179,qs),
(407,100,o),
(357,48,qs),
(302,-10,o),
(210,-10,qs),
(135,-10,o),
(83,27,qs),
(29,65,o),
(29,116,qs),
(29,137,o),
(44,137,qs),
(51,137,o),
(59,128,qs),
(115,58,o),
(203,58,qs),
(259,58,o),
(293,86,qs),
(331,118,o),
(331,175,qs),
(331,225,o),
(303,254,qs),
(272,286,o),
(211,286,qs),
(142,286,o),
(68,259,qs),
(56,255,o),
(56,268,qs),
(56,547,ls),
(56,556,o),
(63,556,qs),
(329,556,ls),
(375,556,o),
(375,513,qs),
(375,497,ls),
(375,486,o),
(364,486,qs),
(130,486,l),
(130,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 38 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,362,qs),
(324,362,o),
(373,315,qs),
(428,263,o),
(428,184,qs),
(428,101,o),
(381,49,qs),
(328,-10,o),
(236,-10,qs),
(158,-10,o),
(104,35,qs),
(42,87,o),
(42,174,qs),
(42,213,o),
(71,291,o),
(108,353,qs),
(232,557,ls),
(238,567,o),
(247,567,qs),
(272,567,o),
(281,544,qs),
(292,516,o),
(270,479,qs),
(191,349,l),
(222,362,o)
);
},
{
closed = 1;
nodes = (
(145,96,qs),
(178,59,o),
(237,59,qs),
(286,59,o),
(318,88,qs),
(353,121,o),
(353,177,qs),
(353,225,o),
(326,257,qs),
(293,296,o),
(236,296,qs),
(187,296,o),
(154,267,qs),
(116,233,o),
(116,177,qs),
(116,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,486,o),
(27,495,qs),
(27,547,ls),
(27,556,o),
(35,556,qs),
(339,556,ls),
(385,556,o),
(385,513,qs),
(385,502,ls),
(385,480,o),
(374,456,qs),
(170,12,ls),
(165,0,o),
(154,0,qs),
(93,0,ls),
(83,0,o),
(87,9,qs),
(306,486,l),
(35,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,86,qs),
(172,54,o),
(231,54,qs),
(286,54,o),
(352,109,o),
(352,156,qs),
(352,201,o),
(321,230,qs),
(287,261,o),
(231,261,qs),
(178,261,o),
(111,203,o),
(111,156,qs),
(111,113,o)
);
},
{
closed = 1;
nodes = (
(150,353,qs),
(180,324,o),
(231,324,qs),
(278,324,o),
(337,373,o),
(337,412,qs),
(337,453,o),
(279,503,o),
(231,503,qs),
(183,503,o),
(125,453,o),
(125,412,qs),
(125,377,o)
);
},
{
closed = 1;
nodes = (
(52,422,qs),
(52,483,o),
(98,523,qs),
(148,567,o),
(231,567,qs),
(303,567,o),
(352,533,qs),
(410,492,o),
(410,422,qs),
(410,332,o),
(322,294,q),
(427,258,o),
(427,155,qs),
(427,87,o),
(381,42,qs),
(327,-11,o),
(231,-11,qs),
(148,-11,o),
(95,30,qs),
(36,76,o),
(36,155,qs),
(36,258,o),
(140,294,q),
(52,332,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 40 36 37 37 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,194,qs),
(141,194,o),
(92,239,qs),
(36,291,o),
(36,372,qs),
(36,455,o),
(85,508,qs),
(140,567,o),
(231,567,qs),
(310,567,o),
(362,522,qs),
(422,470,o),
(422,382,qs),
(422,342,o),
(394,265,o),
(356,204,qs),
(233,1,ls),
(227,-10,o),
(217,-10,qs),
(192,-10,o),
(183,14,qs),
(173,42,o),
(194,77,qs),
(275,209,l),
(246,194,o)
);
},
{
closed = 1;
nodes = (
(310,290,qs),
(347,323,o),
(347,379,qs),
(347,429,o),
(320,461,qs),
(287,498,o),
(229,498,qs),
(180,498,o),
(147,469,qs),
(111,435,o),
(111,379,qs),
(111,329,o),
(138,297,qs),
(170,261,o),
(228,261,qs),
(277,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,162,qs),
(667,281,o),
(590,281,qs),
(513,281,o),
(513,162,qs),
(513,45,o),
(590,45,qs),
(667,45,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,513,o),
(171,513,qs),
(95,513,o),
(95,393,qs),
(95,276,o),
(171,276,qs),
(248,278,o)
);
},
{
closed = 1;
nodes = (
(195,9,q),
(490,547,ls),
(495,556,o),
(502,556,qs),
(515,556,ls),
(539,556,o),
(552,522,o),
(538,496,qs),
(270,9,ls),
(265,0,o),
(257,0,qs),
(198,0,ls),
(189,0,o)
);
},
{
closed = 1;
nodes = (
(494,32,qs),
(452,79,o),
(452,163,qs),
(452,235,o),
(485,281,qs),
(522,335,o),
(590,335,qs),
(648,335,o),
(685,294,qs),
(728,246,o),
(728,163,qs),
(728,90,o),
(695,44,qs),
(658,-9,o),
(590,-9,qs),
(531,-9,o)
);
},
{
closed = 1;
nodes = (
(76,264,qs),
(34,310,o),
(34,394,qs),
(34,467,o),
(66,513,qs),
(104,567,o),
(171,567,qs),
(230,567,o),
(267,525,qs),
(309,478,o),
(309,394,qs),
(309,321,o),
(277,276,qs),
(240,223,o),
(171,223,qs),
(112,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 3 3 5 97 9 1 5 5 23 77 10 1 0 0 4 97 13 6 12 3 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 0 3 3 9 97 0 9 9 23 77 10 1 0 0 4 97 13 6 12 3 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 0 3 3 9 97 0 9 9 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 10 1 0 13 1 6 0 6 101 0 5 5 23 77 12 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
46 45 30 29 18 16 9 8 1 0 54 52 45 60 46 60 38 36 29 44 30 44 25 22 16 28 18 28 13 11 8 15 9 15 5 3 0 7 1 7 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,66,o),
(158,42,qs),
(158,-39,o),
(74,-105,q),
(72,-108,o),
(69,-104,q),
(47,-85,o),
(70,-58,qs),
(91,-30,o),
(96,-9,q),
(76,-7,o),
(50,23,o),
(50,44,qs),
(50,67,o),
(82,99,o),
(104,99,qs),
(127,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,162,o),
(158,138,qs),
(158,57,o),
(74,-9,q),
(72,-12,o),
(69,-8,q),
(47,11,o),
(70,38,qs),
(91,66,o),
(96,87,q),
(76,89,o),
(50,119,o),
(50,141,qs),
(50,163,o),
(82,196,o),
(104,196,qs),
(127,196,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,403,o),
(34,413,qs),
(51,463,ls),
(53,471,o),
(61,468,qs),
(150,431,l),
(143,531,ls),
(143,539,o),
(151,539,qs),
(209,539,ls),
(216,539,o),
(216,531,qs),
(210,431,l),
(299,468,ls),
(307,471,o),
(310,463,qs),
(326,413,ls),
(329,404,o),
(321,402,qs),
(228,377,l),
(288,300,l),
(294,294,o),
(286,289,qs),
(244,262,ls),
(236,256,o),
(233,262,qs),
(179,348,l),
(129,262,l),
(126,255,o),
(118,262,q),
(74,289,ls),
(67,293,o),
(71,300,q),
(133,377,l),
(39,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 0 2 96 0 2 2 24 2 78 1 0 27 24 19 16 9 7 0 32 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,474,qs),
(13,491,o),
(10,511,qs),
(6,538,o),
(1,556,qs),
(0,561,o),
(-1,564,qs),
(-4,573,o),
(-4,582,qs),
(-4,601,o),
(12,611,qs),
(17,614,o),
(20,615,qs),
(28,618,o),
(33,612,qs),
(43,598,o),
(46,569,qs),
(48,551,o),
(48,535,qs),
(48,521,o),
(46,507,qs),
(42,481,o),
(31,466,qs),
(25,458,o),
(19,458,qs),
(13,458,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
1 1 0 0 118 1 0 0 25 1 25 2 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,726,o),
(218,699,qs),
(218,671,o),
(174,632,o),
(142,632,qs),
(119,632,o),
(82,647,qs),
(52,658,o),
(40,658,qs),
(29,658,o),
(20,646,qs),
(18,644,o),
(16,640,qs),
(11,633,o),
(9,632,qs),
(6,631,o),
(5,631,qs),
(1,631,o),
(-2,635,qs),
(-9,646,o),
(-9,659,qs),
(-9,677,o),
(16,703,o),
(33,703,qs),
(45,703,o),
(59,699,qs),
(63,698,o),
(64,698,qs),
(67,698,o),
(69,701,qs),
(103,758,o),
(153,758,qs),
(182,758,o)
);
},
{
closed = 1;
nodes = (
(175,701,qs),
(175,718,o),
(152,718,qs),
(129,718,o),
(107,683,q),
(125,674,o),
(143,674,qs),
(175,674,o)
);
},
{
closed = 1;
nodes = (
(66,0,o),
(66,8,qs),
(66,488,ls),
(66,556,o),
(127,556,qs),
(134,556,ls),
(142,556,o),
(142,548,qs),
(142,68,ls),
(142,0,o),
(81,0,qs),
(74,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
35 4 2 4 1 1 76 8 1 0 0 5 1 0 5 105 0 1 0 2 3 1 2 105 9 1 4 0 3 7 4 3 105 0 7 7 23 77 10 1 6 6 24 6 78 42 41 34 33 1 0 48 45 41 52 42 51 38 36 33 40 34 40 28 26 24 22 9 7 0 32 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,383,o),
(293,391,qs),
(293,396,ls),
(293,429,o),
(337,429,qs),
(340,429,l),
(340,561,ls),
(340,609,o),
(377,609,qs),
(380,609,ls),
(388,609,o),
(388,602,qs),
(388,551,l),
(425,551,ls),
(465,551,o),
(512,506,o),
(512,467,qs),
(512,428,o),
(466,383,o),
(425,383,qs),
(302,383,ls)
);
},
{
closed = 1;
nodes = (
(388,429,l),
(428,429,ls),
(443,429,o),
(463,450,o),
(463,467,qs),
(463,483,o),
(444,504,o),
(428,504,qs),
(388,504,l)
);
},
{
closed = 1;
nodes = (
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
0 2 1 2 133 12 1 6 0 8 0 6 8 128 0 8 7 0 8 7 126 5 1 3 10 1 0 6 3 0 104 11 1 4 4 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 31 30 22 21 1 0 56 53 46 44 38 35 30 62 31 61 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,358,o),
(694,350,qs),
(694,168,ls),
(694,94,o),
(657,50,qs),
(615,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls)
);
},
{
closed = 1;
nodes = (
(334,-165,o),
(315,-165,qs),
(297,-165,o),
(272,-139,o),
(272,-119,qs),
(272,-100,o),
(297,-75,o),
(315,-75,qs),
(334,-75,o),
(360,-100,o),
(360,-119,qs),
(360,-139,o)
);
},
{
closed = 1;
nodes = (
(485,-100,o),
(485,-119,qs),
(485,-139,o),
(461,-165,o),
(442,-165,qs),
(423,-165,o),
(398,-139,o),
(398,-119,qs),
(398,-100,o),
(423,-75,o),
(442,-75,qs),
(461,-75,o)
);
},
{
closed = 1;
nodes = (
(424,-196,o),
(424,-215,qs),
(424,-234,o),
(399,-261,o),
(381,-261,qs),
(362,-261,o),
(337,-234,o),
(337,-215,qs),
(337,-196,o),
(362,-171,o),
(381,-171,qs),
(400,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
10 1 0 2 0 133 0 2 1 2 133 11 6 2 4 7 1 5 8 4 5 105 12 1 8 0 9 8 9 101 0 1 1 3 96 0 3 3 24 3 78 58 57 46 45 1 0 64 62 57 68 58 68 52 50 45 56 46 56 43 41 37 35 26 23 16 14 8 5 0 32 1 31 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(442,74,l),
(429,86,o),
(411,129,o),
(390,194,qs),
(353,306,o),
(265,306,qs),
(207,306,o),
(153,258,q),
(152,258,o),
(151,257,qs),
(138,245,o),
(129,245,qs),
(110,245,o),
(120,276,qs),
(133,316,o),
(169,343,qs),
(215,378,o),
(276,377,qs),
(418,376,o),
(469,207,qs),
(493,120,o),
(520,90,qs),
(533,76,o),
(555,75,qs),
(564,74,o),
(564,66,qs),
(564,35,o),
(526,0,o),
(494,0,qs),
(275,0,ls)
);
},
{
closed = 1;
nodes = (
(267,-113,o),
(267,-101,qs),
(267,-89,o),
(283,-72,o),
(295,-72,qs),
(307,-72,o),
(323,-89,o),
(323,-101,qs),
(323,-113,o),
(307,-129,o),
(295,-129,qs),
(283,-129,o)
);
},
{
closed = 1;
nodes = (
(349,-114,o),
(349,-101,qs),
(349,-89,o),
(365,-72,o),
(377,-72,qs),
(389,-72,o),
(405,-89,o),
(405,-101,qs),
(405,-113,o),
(389,-130,o),
(377,-130,qs),
(365,-130,o)
);
},
{
closed = 1;
nodes = (
(308,-178,o),
(308,-166,qs),
(308,-154,o),
(325,-137,o),
(337,-137,qs),
(349,-137,o),
(365,-154,o),
(365,-166,qs),
(365,-178,o),
(349,-194,o),
(337,-194,qs),
(325,-194,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 11 1 9 16 10 15 3 8 13 9 8 105 0 13 17 1 12 7 13 12 105 0 7 0 6 7 6 101 5 1 1 1 0 95 14 1 0 0 24 0 78 82 81 70 69 58 57 1 0 88 86 81 92 82 92 76 74 69 80 70 80 64 62 57 68 58 68 49 47 38 36 30 28 24 22 18 16 12 10 6 5 0 56 1 55 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,458,o),
(106,466,qs),
(106,470,ls),
(106,504,o),
(149,504,qs),
(153,504,l),
(153,635,ls),
(153,684,o),
(190,684,qs),
(193,684,ls),
(201,684,o),
(201,676,qs),
(201,625,l),
(238,625,ls),
(278,625,o),
(325,580,o),
(325,541,qs),
(325,502,o),
(279,458,o),
(238,458,qs),
(115,458,ls)
);
},
{
closed = 1;
nodes = (
(201,504,l),
(241,504,ls),
(256,504,o),
(276,525,o),
(276,541,qs),
(276,558,o),
(256,579,o),
(241,579,qs),
(201,579,l)
);
},
{
closed = 1;
nodes = (
(321,328,qs),
(367,274,o),
(367,179,qs),
(367,103,o),
(326,55,qs),
(280,0,o),
(200,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 31 30 22 21 1 0 55 52 48 45 41 39 37 35 30 61 31 61 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,611,o),
(258,566,o),
(258,527,qs),
(258,488,o),
(211,443,o),
(171,443,qs),
(48,443,ls),
(39,443,o),
(39,451,qs),
(39,456,ls),
(39,489,o),
(82,489,qs),
(86,489,l),
(86,621,ls),
(86,669,o),
(123,669,qs),
(126,669,ls),
(133,669,o),
(133,662,qs),
(133,611,l),
(171,611,ls)
);
},
{
closed = 1;
nodes = (
(189,489,o),
(208,510,o),
(208,527,qs),
(208,543,o),
(189,564,o),
(174,564,qs),
(133,564,l),
(133,489,l),
(174,489,ls)
);
},
{
closed = 1;
nodes = (
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
0 0 3 0 133 12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 31 30 21 21 0 0 48 46 42 40 36 34 30 54 31 53 21 29 21 28 24 22 0 20 0 19 51 34 50 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,572,qs),
(182,454,ls),
(178,443,o),
(166,443,qs),
(139,443,ls),
(128,443,o),
(123,454,qs),
(75,572,ls),
(71,583,o),
(85,583,qs),
(120,583,o),
(133,551,qs),
(153,503,l),
(172,551,ls),
(186,583,o),
(221,583,qs),
(235,583,o)
);
},
{
closed = 1;
nodes = (
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
3 1 2 0 1 76 1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 18 17 1 0 35 33 29 27 23 21 17 41 18 40 13 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-216,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-66,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o)
);
},
{
closed = 1;
nodes = (
(98,-306,o),
(98,-327,qs),
(98,-348,o),
(69,-377,o),
(49,-377,qs),
(28,-377,o),
(0,-348,o),
(0,-327,qs),
(0,-305,o),
(28,-277,o),
(49,-277,qs),
(70,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 106 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 24 23 1 0 30 28 23 34 24 34 19 16 13 11 7 5 0 22 1 22 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-216,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-66,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls)
);
},
{
closed = 1;
nodes = (
(120,-288,qs),
(72,-405,ls),
(68,-416,o),
(56,-416,qs),
(29,-416,ls),
(18,-416,o),
(13,-405,qs),
(-35,-288,ls),
(-39,-277,o),
(-25,-277,qs),
(10,-277,o),
(23,-309,qs),
(43,-356,l),
(62,-309,ls),
(76,-277,o),
(111,-277,qs),
(125,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
26 1 6 4 1 76 7 1 0 2 0 133 0 2 1 2 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 24 23 1 0 36 33 30 28 23 39 24 39 18 16 12 10 6 4 0 22 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 273;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(196,593,o),
(196,574,qs),
(196,555,o),
(171,529,o),
(153,529,qs),
(134,529,o),
(108,555,o),
(108,574,qs),
(108,593,o),
(134,619,o),
(153,619,qs),
(171,619,o)
);
},
{
closed = 1;
nodes = (
(132,498,o),
(132,478,qs),
(132,459,o),
(106,434,o),
(87,434,qs),
(69,434,o),
(44,459,o),
(44,478,qs),
(44,498,o),
(69,524,o),
(87,524,qs),
(106,524,o)
);
},
{
closed = 1;
nodes = (
(257,498,o),
(257,478,qs),
(257,459,o),
(233,434,o),
(214,434,qs),
(195,434,o),
(170,459,o),
(170,478,qs),
(170,498,o),
(195,524,o),
(214,524,qs),
(233,524,o)
);
},
{
closed = 1;
nodes = (
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
0 9 3 7 3 9 7 128 0 7 6 3 7 6 126 10 1 0 0 1 2 0 1 105 12 4 11 3 2 5 1 3 9 2 3 105 13 1 6 8 8 6 89 13 1 6 6 8 97 0 8 6 8 81 37 36 25 24 13 12 1 0 57 54 49 47 43 41 36 60 37 60 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(751,331,qs),
(806,277,o),
(806,188,qs),
(806,112,o),
(765,60,qs),
(718,2,o),
(639,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(500,74,l),
(465,115,o),
(464,188,qs),
(464,265,o),
(506,318,qs),
(555,377,o),
(635,377,qs),
(704,377,o)
);
},
{
closed = 1;
nodes = (
(702,107,qs),
(729,141,o),
(729,190,qs),
(729,232,o),
(708,264,qs),
(682,306,o),
(635,306,qs),
(594,306,o),
(568,273,qs),
(542,239,o),
(542,190,qs),
(542,148,o),
(562,116,qs),
(589,74,o),
(635,74,qs),
(676,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 5 1 5 2 1 128 6 1 0 0 5 2 0 5 105 7 4 2 1 1 3 96 0 3 3 24 3 78 34 33 1 0 42 40 33 48 34 48 26 23 16 14 8 6 0 32 1 32 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(593,565,o),
(593,584,qs),
(593,604,o),
(618,630,o),
(637,630,qs),
(656,630,o),
(680,604,o),
(680,584,qs),
(680,565,o),
(656,540,o),
(637,540,qs),
(618,540,o)
);
},
{
closed = 1;
nodes = (
(528,470,o),
(528,489,qs),
(528,508,o),
(553,534,o),
(572,534,qs),
(590,534,o),
(616,508,o),
(616,489,qs),
(616,470,o),
(591,444,o),
(572,444,qs),
(553,444,o)
);
},
{
closed = 1;
nodes = (
(679,534,o),
(698,534,qs),
(717,534,o),
(742,508,o),
(742,489,qs),
(742,470,o),
(717,444,o),
(698,444,qs),
(679,444,o),
(654,470,o),
(654,489,qs),
(654,508,o)
);
},
{
closed = 1;
nodes = (
(751,331,qs),
(806,277,o),
(806,188,qs),
(806,112,o),
(765,60,qs),
(718,2,o),
(639,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(500,74,l),
(465,115,o),
(464,188,qs),
(464,265,o),
(506,318,qs),
(555,377,o),
(635,377,qs),
(704,377,o)
);
},
{
closed = 1;
nodes = (
(702,107,qs),
(729,141,o),
(729,190,qs),
(729,232,o),
(708,264,qs),
(682,306,o),
(635,306,qs),
(594,306,o),
(568,273,qs),
(542,239,o),
(542,190,qs),
(542,148,o),
(562,116,qs),
(589,74,o),
(635,74,qs),
(676,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
0 8 11 7 11 8 7 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 14 1 6 0 11 8 6 11 105 15 10 2 7 7 9 96 0 9 9 24 9 78 70 69 37 36 13 12 1 0 78 76 69 84 70 84 62 59 52 50 44 42 36 68 37 68 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(545,74,ls),
(588,74,o),
(636,131,o),
(636,181,qs),
(636,231,o),
(588,287,o),
(545,287,qs),
(349,287,ls),
(297,287,o),
(297,329,qs),
(297,347,ls),
(297,376,o),
(315,388,qs),
(556,553,ls),
(561,557,o),
(565,555,q),
(585,541,o),
(583,493,o),
(561,478,qs),
(391,362,l),
(387,358,o),
(392,358,qs),
(548,358,ls),
(613,358,o),
(657,321,qs),
(714,273,o),
(714,177,qs),
(714,96,o),
(669,48,qs),
(624,0,o),
(548,0,qs),
(242,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
15 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 3 1 2 103 0 3 3 0 96 5 1 0 0 24 0 78 1 0 40 38 32 29 25 22 9 7 0 48 1 47 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 769;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,487,o),
(294,490,o),
(294,498,qs),
(294,501,o),
(294,511,qs),
(294,515,o),
(294,516,qs),
(294,530,o),
(310,541,qs),
(497,669,ls),
(502,673,o),
(505,669,qs),
(516,658,o),
(516,646,qs),
(516,631,o),
(495,616,qs),
(315,493,ls)
);
},
{
closed = 1;
nodes = (
(612,358,o),
(655,321,qs),
(712,273,o),
(712,177,qs),
(712,96,o),
(668,48,qs),
(622,0,o),
(547,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,198,o),
(103,277,o),
(142,298,q),
(149,303,o),
(155,303,qs),
(167,303,o),
(167,292,qs),
(167,286,o),
(162,278,q),
(122,229,o),
(122,177,qs),
(122,74,o),
(245,74,qs),
(544,74,ls),
(586,74,o),
(634,131,o),
(634,181,qs),
(634,231,o),
(586,287,o),
(544,287,qs),
(348,287,ls),
(295,287,o),
(295,329,qs),
(295,347,ls),
(295,375,o),
(314,388,qs),
(554,553,ls),
(560,557,o),
(564,555,q),
(575,546,o),
(578,533,q),
(594,503,o),
(558,480,qs),
(385,358,l),
(547,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
22 1 4 74 0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 17 17 17 64 17 63 57 54 46 45 39 36 32 29 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 767;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,768,qs),
(550,651,ls),
(546,640,o),
(534,640,qs),
(507,640,ls),
(496,640,o),
(491,651,qs),
(443,768,ls),
(439,779,o),
(453,779,qs),
(488,779,o),
(501,747,qs),
(521,700,l),
(540,747,ls),
(554,779,o),
(589,779,qs),
(603,779,o)
);
},
{
closed = 1;
nodes = (
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,64,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
3 1 2 0 1 76 1 7 2 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 101 0 3 3 23 3 78 1 0 47 45 37 36 28 26 21 18 13 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(572,697,o),
(572,676,qs),
(572,655,o),
(543,626,o),
(523,626,qs),
(502,626,o),
(473,655,o),
(473,676,qs),
(473,697,o),
(502,726,o),
(523,726,qs),
(543,726,o)
);
},
{
closed = 1;
nodes = (
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,64,ls),
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 101 0 3 3 23 3 78 13 12 1 0 37 36 28 26 21 18 12 45 13 45 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(475,753,o),
(475,772,qs),
(475,792,o),
(501,818,o),
(520,818,qs),
(538,818,o),
(563,792,o),
(563,772,qs),
(563,753,o),
(538,728,o),
(520,728,qs),
(501,728,o)
);
},
{
closed = 1;
nodes = (
(411,658,o),
(411,677,qs),
(411,696,o),
(436,722,o),
(454,722,qs),
(473,722,o),
(499,696,o),
(499,677,qs),
(499,658,o),
(473,632,o),
(454,632,qs),
(436,632,o)
);
},
{
closed = 1;
nodes = (
(624,696,o),
(624,677,qs),
(624,658,o),
(600,632,o),
(581,632,qs),
(562,632,o),
(537,658,o),
(537,677,qs),
(537,696,o),
(562,722,o),
(581,722,qs),
(599,722,o)
);
},
{
closed = 1;
nodes = (
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,64,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
0 8 6 7 6 8 7 128 0 1 10 1 0 3 1 0 105 12 4 2 3 5 11 2 2 6 3 2 105 0 7 0 9 7 9 101 0 6 6 23 6 78 25 24 13 12 1 0 66 64 56 55 47 45 40 37 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,64,ls),
(557,-61,o),
(494,-135,qs),
(426,-214,o),
(306,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 1 0 25 24 16 14 9 6 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 41 30 41 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,534,qs),
(87,575,o),
(134,582,qs),
(135,582,l),
(124,600,o),
(124,621,qs),
(124,653,o),
(167,697,o),
(199,698,qs),
(226,698,o),
(263,671,o),
(264,650,qs),
(264,639,o),
(257,639,q),
(254,640,o),
(249,643,q),
(245,644,o),
(244,645,q),
(226,654,o),
(209,654,qs),
(172,654,o),
(172,620,qs),
(172,604,o),
(191,584,o),
(207,584,qs),
(250,584,ls),
(285,584,o),
(285,552,qs),
(285,548,ls),
(285,539,o),
(276,539,qs),
(169,539,ls),
(134,539,o),
(116,533,qs),
(113,532,o),
(110,530,qs),
(105,528,o),
(103,528,qs),
(98,528,o)
);
},
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
34 1 0 2 73 55 2 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
34 1 1 2 73 55 2 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 2 4 3 105 0 2 1 7 2 0 6 2 0 105 8 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
7 1 0 1 6 1 0 6 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 8 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 1 6 1 0 6 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 8 1 6 5 5 6 89 8 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
69 68 1 0 68 80 69 80 63 61 30 28 19 17 14 11 8 5 0 38 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 41 30 41 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,534,qs),
(87,575,o),
(134,582,qs),
(135,582,l),
(124,600,o),
(124,621,qs),
(124,653,o),
(167,697,o),
(199,698,qs),
(226,698,o),
(263,671,o),
(264,650,qs),
(264,639,o),
(257,639,q),
(254,640,o),
(249,643,q),
(245,644,o),
(244,645,q),
(226,654,o),
(209,654,qs),
(172,654,o),
(172,620,qs),
(172,604,o),
(191,584,o),
(207,584,qs),
(250,584,ls),
(285,584,o),
(285,552,qs),
(285,548,ls),
(285,539,o),
(276,539,qs),
(169,539,ls),
(134,539,o),
(116,533,qs),
(113,532,o),
(110,530,qs),
(105,528,o),
(103,528,qs),
(98,528,o)
);
},
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
34 1 0 2 73 55 2 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
34 1 1 2 73 55 2 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 4 0 3 2 4 3 105 0 2 1 7 2 0 6 2 0 105 8 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
7 1 0 1 6 1 0 6 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 8 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
7 1 0 1 6 1 0 6 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 8 1 6 5 5 6 89 8 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
69 68 1 0 68 80 69 80 63 61 30 28 19 17 14 11 8 5 0 38 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,551,o),
(82,571,qs),
(82,590,o),
(107,615,o),
(125,615,qs),
(144,615,o),
(170,590,o),
(170,571,qs),
(170,551,o),
(144,525,o),
(125,525,qs),
(107,525,o)
);
},
{
closed = 1;
nodes = (
(208,551,o),
(208,571,qs),
(208,589,o),
(233,615,o),
(252,615,qs),
(271,615,o),
(295,590,o),
(295,571,qs),
(295,551,o),
(271,525,o),
(252,525,qs),
(233,525,o)
);
},
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
58 40 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
54 53 13 12 1 0 53 65 54 65 48 46 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,600,o),
(157,600,qs),
(192,600,o),
(205,568,qs),
(225,521,l),
(245,568,ls),
(258,600,o),
(293,600,qs),
(307,600,o),
(303,589,qs),
(255,472,ls),
(250,461,o),
(239,461,qs),
(212,461,ls),
(200,461,o),
(195,472,qs),
(148,589,ls)
);
},
{
closed = 1;
nodes = (
(402,118,qs),
(402,19,o),
(386,-84,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(256,-142,o),
(288,-102,qs),
(321,-61,o),
(325,16,q),
(272,-11,o),
(223,-9,qs),
(153,-9,o),
(107,39,qs),
(56,93,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(337,377,o),
(378,276,qs),
(401,221,o)
);
},
{
closed = 1;
nodes = (
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,129,o),
(186,63,o),
(229,63,qs),
(286,63,o),
(323,92,q),
(324,106,o),
(324,117,qs),
(325,206,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 29 1 4 8 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 5 0 7 5 7 101 0 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 8 0 4 6 8 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
61 59 41 35 34 36 38 35 36 35 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,470,o),
(118,489,qs),
(118,508,o),
(142,534,o),
(161,534,qs),
(180,534,o),
(205,508,o),
(205,489,qs),
(205,470,o),
(180,444,o),
(161,444,qs),
(142,444,o)
);
},
{
closed = 1;
nodes = (
(243,470,o),
(243,489,qs),
(243,508,o),
(269,534,o),
(288,534,qs),
(306,534,o),
(331,508,o),
(331,489,qs),
(331,470,o),
(306,444,o),
(288,444,qs),
(269,444,o)
);
},
{
closed = 1;
nodes = (
(402,118,qs),
(402,19,o),
(386,-84,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(256,-142,o),
(288,-102,qs),
(321,-61,o),
(325,16,q),
(272,-11,o),
(223,-9,qs),
(153,-9,o),
(107,39,qs),
(56,93,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(337,377,o),
(378,276,qs),
(401,221,o)
);
},
{
closed = 1;
nodes = (
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,129,o),
(186,63,o),
(229,63,qs),
(286,63,o),
(323,92,q),
(324,106,o),
(324,117,qs),
(325,206,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 68 66 61 59 50 48 45 43 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(612,45,o),
(606,1,qs),
(596,-90,o),
(528,-148,qs),
(450,-214,o),
(329,-214,qs),
(207,-214,o),
(128,-147,qs),
(42,-74,o),
(42,39,qs),
(42,101,o),
(92,205,o),
(135,233,qs),
(144,238,o),
(151,238,qs),
(163,238,o),
(163,227,qs),
(163,221,o),
(158,214,q),
(116,141,o),
(116,59,qs),
(116,-28,o),
(169,-82,qs),
(229,-143,o),
(329,-143,qs),
(397,-143,o),
(450,-112,qs),
(513,-75,o),
(525,-12,qs),
(526,-9,o),
(526,-6,qs),
(526,12,o),
(491,30,o),
(441,40,qs),
(417,44,o),
(406,47,qs),
(348,60,o),
(313,93,qs),
(269,135,o),
(269,202,qs),
(269,276,o),
(315,324,qs),
(366,377,o),
(446,377,qs),
(499,377,o),
(573,330,o),
(573,296,qs),
(573,277,o),
(560,277,qs),
(556,277,o),
(548,282,q),
(499,306,o),
(455,306,qs),
(407,306,o),
(346,249,o),
(346,203,qs),
(346,133,o),
(438,114,qs),
(539,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
27 1 3 4 1 76 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 53 51 44 42 34 32 35 34 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,460,o),
(92,460,qs),
(127,460,o),
(140,428,qs),
(160,381,l),
(179,428,ls),
(193,460,o),
(228,460,qs),
(242,460,o),
(237,449,qs),
(189,332,ls),
(185,321,o),
(173,321,qs),
(146,321,ls),
(135,321,o),
(130,332,qs),
(82,449,ls)
);
},
{
closed = 1;
nodes = (
(626,45,o),
(620,1,qs),
(610,-90,o),
(542,-148,qs),
(464,-214,o),
(343,-214,qs),
(221,-214,o),
(142,-147,qs),
(56,-74,o),
(56,39,qs),
(56,101,o),
(106,205,o),
(149,233,qs),
(158,238,o),
(165,238,qs),
(177,238,o),
(177,227,qs),
(177,221,o),
(172,214,q),
(130,141,o),
(130,59,qs),
(130,-28,o),
(183,-82,qs),
(243,-143,o),
(343,-143,qs),
(411,-143,o),
(464,-112,qs),
(527,-75,o),
(539,-12,qs),
(540,-9,o),
(540,-6,qs),
(540,12,o),
(505,30,o),
(455,40,qs),
(431,44,o),
(420,47,qs),
(362,60,o),
(327,93,qs),
(283,135,o),
(283,202,qs),
(283,276,o),
(329,324,qs),
(380,377,o),
(460,377,qs),
(513,377,o),
(587,330,o),
(587,296,qs),
(587,277,o),
(574,277,qs),
(570,277,o),
(562,282,q),
(513,306,o),
(469,306,qs),
(421,306,o),
(360,249,o),
(360,203,qs),
(360,133,o),
(452,114,qs),
(553,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
11 1 5 1 44 1 6 7 2 76 2 1 1 5 1 133 0 0 5 3 5 0 3 128 0 4 3 7 3 4 7 128 0 7 6 3 7 6 126 0 5 0 3 4 5 3 105 0 6 8 8 6 89 0 6 6 8 98 0 8 6 8 82 70 68 61 59 51 49 35 34 38 36 35 49 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 676;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,0,o),
(114,40,qs),
(56,90,o),
(56,179,qs),
(56,256,o),
(102,306,qs),
(150,358,o),
(223,358,qs),
(289,358,ls),
(300,358,o),
(300,373,qs),
(300,379,ls),
(300,458,o),
(339,507,qs),
(385,564,o),
(471,564,qs),
(541,564,o),
(586,523,qs),
(632,480,o),
(638,409,qs),
(640,380,o),
(610,342,o),
(584,342,qs),
(577,342,ls),
(565,342,o),
(565,355,qs),
(565,370,ls),
(565,429,o),
(516,493,o),
(471,493,qs),
(425,493,o),
(401,460,qs),
(378,428,o),
(378,372,qs),
(378,345,ls),
(378,287,o),
(318,287,qs),
(231,287,ls),
(194,287,o),
(167,262,qs),
(134,233,o),
(134,183,qs),
(134,134,o),
(185,74,o),
(227,74,qs),
(619,74,ls),
(649,74,o),
(687,44,o),
(687,19,qs),
(687,12,ls),
(687,0,o),
(673,0,qs),
(228,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
32 1 6 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 6 4 2 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 6 2 6 4 2 128 0 5 0 3 6 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 45 42 37 35 30 27 23 21 16 13 8 5 0 52 1 51 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(57,437,qs),
(53,455,o),
(73,481,o),
(95,484,q),
(85,502,o),
(85,523,qs),
(85,555,o),
(128,600,o),
(160,600,qs),
(186,600,o),
(223,573,o),
(225,552,qs),
(225,541,o),
(217,542,qs),
(215,542,o),
(209,545,qs),
(206,547,o),
(204,547,q),
(186,556,o),
(169,556,qs),
(132,556,o),
(132,522,qs),
(132,507,o),
(152,486,o),
(167,486,qs),
(211,486,ls),
(246,486,o),
(246,454,qs),
(246,450,ls),
(246,442,o),
(237,442,qs),
(129,442,ls),
(95,442,o),
(77,435,qs),
(74,434,o),
(70,432,qs),
(66,430,o),
(64,430,qs),
(59,430,o)
);
},
{
closed = 1;
nodes = (
(651,74,o),
(688,44,o),
(688,19,qs),
(688,12,ls),
(688,0,o),
(674,0,qs),
(230,0,ls),
(162,0,o),
(116,40,qs),
(58,90,o),
(58,179,qs),
(58,256,o),
(103,306,qs),
(152,358,o),
(225,358,qs),
(290,358,ls),
(302,358,o),
(302,373,qs),
(302,379,ls),
(302,458,o),
(341,507,qs),
(387,564,o),
(473,564,qs),
(543,564,o),
(588,523,qs),
(633,480,o),
(639,409,qs),
(642,380,o),
(611,342,o),
(585,342,qs),
(578,342,ls),
(567,342,o),
(567,355,qs),
(567,370,ls),
(567,429,o),
(518,493,o),
(473,493,qs),
(427,493,o),
(403,460,qs),
(379,428,o),
(379,372,qs),
(379,345,ls),
(379,287,o),
(319,287,qs),
(233,287,ls),
(195,287,o),
(169,262,qs),
(136,233,o),
(136,183,qs),
(136,134,o),
(186,74,o),
(229,74,qs),
(621,74,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
26 1 7 3 34 1 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
26 1 7 3 34 1 1 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 10 6 10 8 6 128 0 4 0 3 7 4 3 105 0 2 1 12 2 0 10 2 0 105 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 13 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
12 1 0 1 10 1 0 10 128 0 8 10 6 10 8 6 128 0 4 0 3 7 4 3 105 0 2 0 1 0 2 1 103 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 13 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
12 1 0 1 10 1 0 10 128 0 8 10 6 10 8 6 128 0 4 0 3 7 4 3 105 0 9 0 7 2 9 7 105 0 2 0 1 0 2 1 103 0 10 0 6 5 10 6 103 13 1 5 5 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
40 39 1 0 86 83 77 74 69 67 62 59 55 53 48 45 39 91 40 90 30 28 19 17 14 11 8 5 0 38 1 38 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,176,qs),
(403,99,o),
(361,49,qs),
(313,-9,o),
(229,-9,qs),
(161,-9,o),
(114,32,qs),
(56,83,o),
(56,176,qs),
(56,238,o),
(124,338,o),
(187,367,q),
(176,379,o),
(168,395,q),
(157,434,o),
(198,455,q),
(199,456,o),
(202,457,qs),
(204,458,o),
(205,458,qs),
(211,459,o),
(215,449,qs),
(232,414,o),
(278,378,qs),
(292,367,o),
(298,362,qs),
(312,351,o),
(320,344,qs),
(403,273,o)
);
},
{
closed = 1;
nodes = (
(294,90,qs),
(326,123,o),
(324,177,qs),
(323,226,o),
(289,264,qs),
(270,285,o),
(235,313,q),
(135,267,o),
(134,173,qs),
(134,126,o),
(188,62,o),
(229,62,qs),
(268,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
34 16 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
30 29 29 41 30 41 24 22 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,530,o),
(142,530,qs),
(123,530,o),
(97,555,o),
(97,574,qs),
(97,594,o),
(123,620,o),
(142,620,qs),
(160,620,o),
(185,594,o),
(185,574,qs),
(185,555,o)
);
},
{
closed = 1;
nodes = (
(121,498,o),
(121,479,qs),
(121,460,o),
(95,434,o),
(76,434,qs),
(58,434,o),
(33,460,o),
(33,479,qs),
(33,498,o),
(58,524,o),
(76,524,qs),
(95,524,o)
);
},
{
closed = 1;
nodes = (
(246,498,o),
(246,479,qs),
(246,460,o),
(222,434,o),
(203,434,qs),
(184,434,o),
(159,460,o),
(159,479,qs),
(159,498,o),
(184,524,o),
(203,524,qs),
(221,524,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 52 values pushed */
0 0 0 1 2 0 1 105 7 4 6 3 2 3 3 2 89 7 4 6 3 2 2 3 97 5 1 3 2 3 81 25 24 13 12 31 29 24 35 25 35 19 17 12 23 13 23 36 34 8 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,101,qs),
(378,154,o),
(378,278,qs),
(378,496,o),
(252,496,qs),
(194,496,o),
(163,455,qs),
(125,403,o),
(125,278,qs),
(125,168,o),
(154,115,qs),
(185,61,o),
(252,61,qs),
(309,61,o)
);
},
{
closed = 1;
nodes = (
(107,54,qs),
(48,128,o),
(48,278,qs),
(48,409,o),
(95,483,qs),
(147,567,o),
(252,567,qs),
(342,567,o),
(394,502,qs),
(455,428,o),
(455,278,qs),
(455,147,o),
(409,73,qs),
(357,-10,o),
(252,-10,qs),
(159,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
15 14 1 0 23 21 14 29 15 29 9 7 0 13 1 13 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,447,ls),
(37,443,o),
(37,453,qs),
(37,511,ls),
(37,522,o),
(47,525,qs),
(108,547,ls),
(133,556,o),
(157,556,qs),
(170,556,ls),
(219,556,o),
(219,501,qs),
(219,69,l),
(285,69,ls),
(330,69,o),
(330,26,qs),
(330,11,ls),
(330,0,o),
(319,0,qs),
(44,0,ls),
(36,0,o),
(36,9,qs),
(36,61,ls),
(36,69,o),
(44,69,qs),
(144,69,l),
(144,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 353;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,69,o),
(399,27,qs),
(399,11,ls),
(399,0,o),
(388,0,qs),
(45,0,ls),
(37,0,o),
(37,9,qs),
(37,98,o),
(86,160,qs),
(118,200,o),
(192,249,qs),
(270,301,o),
(318,361,o),
(318,406,qs),
(318,449,o),
(263,498,o),
(213,498,qs),
(146,498,o),
(79,455,qs),
(70,450,o),
(66,450,qs),
(61,450,o),
(58,458,qs),
(52,478,ls),
(40,517,o),
(88,538,qs),
(155,567,o),
(218,567,qs),
(295,567,o),
(341,531,qs),
(395,490,o),
(395,407,qs),
(395,341,o),
(349,288,qs),
(320,254,o),
(251,207,qs),
(177,156,o),
(129,104,o),
(125,69,q),
(354,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 58 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,208,o),
(401,157,qs),
(401,88,o),
(354,43,qs),
(300,-10,o),
(208,-10,qs),
(127,-10,o),
(75,30,qs),
(25,69,o),
(25,117,qs),
(25,139,o),
(39,139,qs),
(45,139,o),
(54,129,qs),
(110,58,o),
(202,58,qs),
(258,58,o),
(324,113,o),
(324,159,qs),
(324,205,o),
(292,230,qs),
(260,254,o),
(205,254,qs),
(148,254,ls),
(106,254,o),
(106,294,qs),
(106,311,ls),
(106,324,o),
(116,324,qs),
(207,324,ls),
(308,324,o),
(308,412,qs),
(308,499,o),
(201,499,qs),
(134,499,o),
(68,456,qs),
(67,455,o),
(65,454,qs),
(58,450,o),
(56,450,qs),
(50,450,o),
(47,458,qs),
(41,478,ls),
(29,515,o),
(77,538,qs),
(143,567,o),
(204,567,qs),
(279,567,o),
(326,534,qs),
(383,494,o),
(383,419,qs),
(383,327,o),
(294,291,q),
(343,280,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 37 51 50 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 441;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,128,o),
(16,136,qs),
(16,177,ls),
(16,194,o),
(26,208,qs),
(243,537,l),
(254,556,o),
(277,556,qs),
(307,556,ls),
(354,556,o),
(354,508,qs),
(354,197,l),
(390,197,ls),
(435,197,o),
(435,154,qs),
(435,138,ls),
(435,128,o),
(424,128,qs),
(354,128,l),
(354,9,ls),
(354,0,o),
(347,0,qs),
(287,0,ls),
(279,0,o),
(279,9,qs),
(279,128,l),
(24,128,ls)
);
},
{
closed = 1;
nodes = (
(279,476,l),
(95,197,l),
(279,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,353,o),
(224,353,qs),
(303,353,o),
(352,312,qs),
(407,265,o),
(407,179,qs),
(407,100,o),
(357,48,qs),
(302,-10,o),
(210,-10,qs),
(135,-10,o),
(83,27,qs),
(29,65,o),
(29,116,qs),
(29,137,o),
(44,137,qs),
(51,137,o),
(59,128,qs),
(115,58,o),
(203,58,qs),
(259,58,o),
(293,86,qs),
(331,118,o),
(331,175,qs),
(331,225,o),
(303,254,qs),
(272,286,o),
(211,286,qs),
(142,286,o),
(68,259,qs),
(56,255,o),
(56,268,qs),
(56,547,ls),
(56,556,o),
(63,556,qs),
(329,556,ls),
(375,556,o),
(375,513,qs),
(375,497,ls),
(375,486,o),
(364,486,qs),
(130,486,l),
(130,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 38 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,362,qs),
(324,362,o),
(373,315,qs),
(428,263,o),
(428,184,qs),
(428,101,o),
(381,49,qs),
(328,-10,o),
(236,-10,qs),
(158,-10,o),
(104,35,qs),
(42,87,o),
(42,174,qs),
(42,213,o),
(71,291,o),
(108,353,qs),
(232,557,ls),
(238,567,o),
(247,567,qs),
(272,567,o),
(281,544,qs),
(292,516,o),
(270,479,qs),
(191,349,l),
(222,362,o)
);
},
{
closed = 1;
nodes = (
(145,96,qs),
(178,59,o),
(237,59,qs),
(286,59,o),
(318,88,qs),
(353,121,o),
(353,177,qs),
(353,225,o),
(326,257,qs),
(293,296,o),
(236,296,qs),
(187,296,o),
(154,267,qs),
(116,233,o),
(116,177,qs),
(116,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,486,o),
(27,495,qs),
(27,547,ls),
(27,556,o),
(35,556,qs),
(339,556,ls),
(385,556,o),
(385,513,qs),
(385,502,ls),
(385,480,o),
(374,456,qs),
(170,12,ls),
(165,0,o),
(154,0,qs),
(93,0,ls),
(83,0,o),
(87,9,qs),
(306,486,l),
(35,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,86,qs),
(172,54,o),
(231,54,qs),
(286,54,o),
(352,109,o),
(352,156,qs),
(352,201,o),
(321,230,qs),
(287,261,o),
(231,261,qs),
(178,261,o),
(111,203,o),
(111,156,qs),
(111,113,o)
);
},
{
closed = 1;
nodes = (
(150,353,qs),
(180,324,o),
(231,324,qs),
(278,324,o),
(337,373,o),
(337,412,qs),
(337,453,o),
(279,503,o),
(231,503,qs),
(183,503,o),
(125,453,o),
(125,412,qs),
(125,377,o)
);
},
{
closed = 1;
nodes = (
(52,422,qs),
(52,483,o),
(98,523,qs),
(148,567,o),
(231,567,qs),
(303,567,o),
(352,533,qs),
(410,492,o),
(410,422,qs),
(410,332,o),
(322,294,q),
(427,258,o),
(427,155,qs),
(427,87,o),
(381,42,qs),
(327,-11,o),
(231,-11,qs),
(148,-11,o),
(95,30,qs),
(36,76,o),
(36,155,qs),
(36,258,o),
(140,294,q),
(52,332,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 40 36 37 37 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,194,qs),
(141,194,o),
(92,239,qs),
(36,291,o),
(36,372,qs),
(36,455,o),
(85,508,qs),
(140,567,o),
(231,567,qs),
(310,567,o),
(362,522,qs),
(422,470,o),
(422,382,qs),
(422,342,o),
(394,265,o),
(356,204,qs),
(233,1,ls),
(227,-10,o),
(217,-10,qs),
(192,-10,o),
(183,14,qs),
(173,42,o),
(194,77,qs),
(275,209,l),
(246,194,o)
);
},
{
closed = 1;
nodes = (
(310,290,qs),
(347,323,o),
(347,379,qs),
(347,429,o),
(320,461,qs),
(287,498,o),
(229,498,qs),
(180,498,o),
(147,469,qs),
(111,435,o),
(111,379,qs),
(111,329,o),
(138,297,qs),
(170,261,o),
(228,261,qs),
(277,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,178,qs),
(0,227,ls),
(0,236,o),
(8,236,qs),
(328,236,ls),
(336,236,o),
(336,227,qs),
(336,178,ls),
(336,170,o),
(328,170,qs),
(8,170,ls),
(0,170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 336;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,178,qs),
(0,227,ls),
(0,236,o),
(8,236,qs),
(652,236,ls),
(660,236,o),
(660,227,qs),
(660,178,ls),
(660,170,o),
(652,170,qs),
(8,170,ls),
(0,170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,434,o),
(127,413,qs),
(127,390,o),
(96,358,o),
(74,358,qs),
(51,358,o),
(20,391,o),
(20,415,qs),
(20,496,o),
(104,562,q),
(106,565,o),
(109,562,qs),
(131,541,o),
(108,516,qs),
(86,488,o),
(82,467,q),
(102,464,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
4 1 0 74 0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 143;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,530,o),
(127,506,qs),
(127,425,o),
(43,359,q),
(42,357,o),
(38,359,q),
(16,380,o),
(39,406,qs),
(61,433,o),
(66,454,q),
(45,457,o),
(20,487,o),
(20,508,qs),
(20,531,o),
(51,563,o),
(73,563,qs),
(96,563,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
10 6 2 0 73 1 1 0 0 39 0 78 1 0 0 16 1 16 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 143;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,65,o),
(128,42,qs),
(128,-39,o),
(44,-106,q),
(43,-108,o),
(39,-105,qs),
(17,-84,o),
(40,-59,qs),
(62,-32,o),
(67,-11,q),
(46,-7,o),
(21,23,o),
(21,44,qs),
(21,67,o),
(52,99,o),
(74,99,qs),
(97,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 16 1 16 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 147;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,434,o),
(127,413,qs),
(127,390,o),
(96,358,o),
(74,358,qs),
(51,358,o),
(20,391,o),
(20,415,qs),
(20,496,o),
(104,562,q),
(106,565,o),
(109,562,qs),
(131,541,o),
(108,516,qs),
(86,488,o),
(82,467,q),
(102,464,o)
);
},
{
closed = 1;
nodes = (
(297,434,o),
(297,413,qs),
(297,390,o),
(266,358,o),
(243,358,qs),
(221,358,o),
(189,391,o),
(189,415,qs),
(189,496,o),
(273,562,q),
(275,565,o),
(279,562,qs),
(301,541,o),
(278,516,qs),
(256,488,o),
(251,467,q),
(271,464,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
4 1 0 74 1 1 0 0 118 47 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,530,o),
(127,506,qs),
(127,425,o),
(43,359,q),
(42,357,o),
(38,359,q),
(16,380,o),
(39,406,qs),
(61,433,o),
(66,454,q),
(45,457,o),
(20,487,o),
(20,508,qs),
(20,531,o),
(51,563,o),
(73,563,qs),
(96,563,o)
);
},
{
closed = 1;
nodes = (
(297,530,o),
(297,506,qs),
(297,425,o),
(213,359,qs),
(211,357,o),
(207,359,q),
(185,380,o),
(208,406,qs),
(230,433,o),
(235,454,q),
(215,457,o),
(189,487,o),
(189,508,qs),
(189,531,o),
(221,563,o),
(243,563,qs),
(265,563,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
27 23 10 6 4 0 73 3 1 2 3 0 0 39 0 78 18 17 1 0 17 33 18 33 0 16 1 16 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 312;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,65,o),
(128,42,qs),
(128,-39,o),
(44,-106,q),
(43,-108,o),
(39,-105,qs),
(17,-84,o),
(40,-59,qs),
(62,-32,o),
(67,-11,q),
(46,-7,o),
(21,23,o),
(21,44,qs),
(21,67,o),
(52,99,o),
(74,99,qs),
(97,99,o)
);
},
{
closed = 1;
nodes = (
(298,65,o),
(298,42,qs),
(298,-39,o),
(214,-106,qs),
(212,-108,o),
(208,-105,qs),
(186,-84,o),
(209,-59,qs),
(231,-31,o),
(236,-11,q),
(216,-7,o),
(190,23,o),
(190,44,qs),
(190,67,o),
(222,99,o),
(244,99,qs),
(266,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
23 6 2 0 73 3 1 2 3 0 0 118 18 17 1 0 17 33 18 33 0 16 1 16 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,295,o),
(34,304,qs),
(34,351,ls),
(34,359,o),
(42,359,qs),
(131,359,l),
(131,547,ls),
(131,554,o),
(139,554,qs),
(198,554,o),
(198,486,qs),
(198,359,l),
(287,359,ls),
(295,359,o),
(295,351,qs),
(295,304,ls),
(295,295,o),
(287,295,qs),
(198,295,l),
(198,-151,ls),
(198,-160,o),
(190,-160,qs),
(139,-160,ls),
(131,-160,o),
(131,-151,qs),
(131,295,l),
(42,295,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 6 5 2 1 0 2 1 103 0 3 3 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 26 0 25 34 34 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,103,o),
(34,111,qs),
(34,159,ls),
(34,167,o),
(42,167,qs),
(131,167,l),
(131,295,l),
(42,295,ls),
(34,295,o),
(34,304,qs),
(34,351,ls),
(34,359,o),
(42,359,qs),
(131,359,l),
(131,547,ls),
(131,554,o),
(139,554,qs),
(198,554,o),
(198,486,qs),
(198,359,l),
(287,359,ls),
(295,359,o),
(295,351,qs),
(295,304,ls),
(295,295,o),
(287,295,qs),
(198,295,l),
(198,167,l),
(287,167,ls),
(295,167,o),
(295,159,qs),
(295,111,ls),
(295,103,o),
(287,103,qs),
(198,103,l),
(198,-151,ls),
(198,-160,o),
(190,-160,qs),
(139,-160,ls),
(131,-160,o),
(131,-151,qs),
(131,103,l),
(42,103,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 7 1 3 2 4 3 103 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 42 0 41 33 35 34 34 35 33 35 34 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,234,o),
(47,279,qs),
(47,325,o),
(99,378,o),
(144,378,qs),
(189,378,o),
(242,324,o),
(242,279,qs),
(242,234,o),
(189,180,o),
(145,180,qs),
(100,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 288;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,21,o),
(56,44,qs),
(56,66,o),
(88,99,o),
(110,99,qs),
(132,99,o),
(164,67,o),
(164,44,qs),
(164,21,o),
(132,-11,o),
(110,-11,qs),
(88,-11,o)
);
},
{
closed = 1;
nodes = (
(256,21,o),
(256,44,qs),
(256,66,o),
(288,99,o),
(310,99,qs),
(332,99,o),
(363,67,o),
(363,44,qs),
(363,21,o),
(332,-11,o),
(310,-11,qs),
(288,-11,o)
);
},
{
closed = 1;
nodes = (
(455,21,o),
(455,44,qs),
(455,66,o),
(487,99,o),
(509,99,qs),
(531,99,o),
(563,66,o),
(563,44,qs),
(563,21,o),
(531,-11,o),
(509,-11,qs),
(487,-11,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(667,162,qs),
(667,281,o),
(590,281,qs),
(513,281,o),
(513,162,qs),
(513,45,o),
(590,45,qs),
(667,45,o)
);
},
{
closed = 1;
nodes = (
(995,162,qs),
(995,281,o),
(917,281,qs),
(841,281,o),
(841,162,qs),
(841,45,o),
(917,45,qs),
(995,45,o)
);
},
{
closed = 1;
nodes = (
(248,393,qs),
(248,513,o),
(171,513,qs),
(95,513,o),
(95,393,qs),
(95,276,o),
(171,276,qs),
(248,276,o)
);
},
{
closed = 1;
nodes = (
(195,9,q),
(490,547,ls),
(495,556,o),
(502,556,qs),
(515,556,ls),
(539,556,o),
(552,522,o),
(538,496,qs),
(270,9,ls),
(265,0,o),
(257,0,qs),
(198,0,ls),
(189,0,o)
);
},
{
closed = 1;
nodes = (
(494,32,qs),
(452,79,o),
(452,163,qs),
(452,235,o),
(485,281,qs),
(522,335,o),
(590,335,qs),
(648,335,o),
(685,294,qs),
(728,246,o),
(728,163,qs),
(728,90,o),
(695,44,qs),
(658,-9,o),
(590,-9,qs),
(531,-9,o)
);
},
{
closed = 1;
nodes = (
(822,32,qs),
(780,79,o),
(780,163,qs),
(780,235,o),
(812,281,qs),
(850,335,o),
(917,335,qs),
(976,335,o),
(1013,294,qs),
(1055,246,o),
(1055,163,qs),
(1055,90,o),
(1022,44,qs),
(985,-9,o),
(917,-9,qs),
(859,-9,o)
);
},
{
closed = 1;
nodes = (
(76,264,qs),
(34,310,o),
(34,394,qs),
(34,467,o),
(66,513,qs),
(104,567,o),
(171,567,qs),
(230,567,o),
(267,525,qs),
(309,478,o),
(309,394,qs),
(309,321,o),
(277,276,qs),
(240,223,o),
(171,223,qs),
(112,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 5 5 7 97 13 1 7 7 39 77 15 2 14 3 0 0 6 97 19 10 18 8 17 5 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 0 5 5 13 97 0 13 13 39 77 15 2 14 3 0 0 6 97 19 10 18 8 17 5 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 0 5 5 13 97 0 13 13 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 13 0 5 9 13 5 105 11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 49 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
70 69 54 53 38 37 26 24 17 16 9 8 1 0 78 76 69 84 70 84 62 60 53 68 54 68 46 44 37 52 38 52 33 30 24 36 26 36 21 19 16 23 17 23 13 11 8 15 9 15 5 3 0 7 1 7 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1089;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,44,o),
(210,39,o),
(205,39,qs),
(151,39,ls),
(137,39,o),
(130,49,qs),
(33,175,ls),
(26,184,o),
(26,189,qs),
(26,194,o),
(33,203,qs),
(130,328,ls),
(138,338,o),
(151,338,qs),
(205,338,ls),
(210,338,o),
(212,332,o),
(209,329,q),
(103,189,l),
(209,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,332,o),
(26,338,o),
(30,338,qs),
(86,338,ls),
(98,338,o),
(106,328,qs),
(203,203,ls),
(210,194,o),
(210,189,qs),
(210,184,o),
(203,175,qs),
(106,49,ls),
(99,39,o),
(86,39,qs),
(30,39,ls),
(26,39,o),
(24,44,o),
(26,48,q),
(134,189,l),
(26,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
1 1 0 1 1 76 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 236;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,9,q),
(301,547,l),
(305,556,o),
(314,556,qs),
(323,556,ls),
(347,556,o),
(359,522,o),
(345,496,qs),
(79,9,l),
(75,0,o),
(67,0,qs),
(10,0,ls),
(0,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 351;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,182,o),
(7,190,qs),
(25,233,l),
(30,242,o),
(36,242,qs),
(88,242,l),
(84,278,o),
(87,305,q),
(23,305,ls),
(14,305,o),
(18,314,qs),
(37,357,ls),
(41,365,o),
(47,365,qs),
(97,365,l),
(118,450,o),
(177,504,qs),
(244,567,o),
(337,567,qs),
(402,567,o),
(463,539,qs),
(510,515,o),
(502,489,qs),
(494,460,l),
(490,450,o),
(485,450,qs),
(479,450,o),
(470,456,qs),
(408,498,o),
(343,498,qs),
(284,498,o),
(242,467,qs),
(194,433,o),
(176,365,q),
(441,365,ls),
(448,365,o),
(446,357,q),
(428,314,l),
(423,305,o),
(416,305,qs),
(164,305,l),
(161,286,o),
(165,242,q),
(395,242,ls),
(405,242,o),
(400,233,q),
(382,190,ls),
(379,182,o),
(372,182,qs),
(177,182,l),
(193,125,o),
(233,93,qs),
(278,57,o),
(345,57,qs),
(436,57,o),
(491,128,qs),
(498,138,o),
(505,138,qs),
(518,138,o),
(518,118,qs),
(518,78,o),
(481,41,qs),
(428,-11,o),
(337,-11,qs),
(254,-11,o),
(192,34,qs),
(121,86,o),
(97,182,q),
(12,182,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 12 1 4 14 13 2 3 1 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 95 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 12 1 4 14 13 2 3 1 4 3 103 11 1 5 5 6 95 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 68 0 67 63 62 60 58 54 53 50 48 34 35 35 34 35 35 34 36 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,552,ls),
(31,556,o),
(35,556,qs),
(226,556,ls),
(250,556,o),
(250,534,qs),
(250,514,ls),
(250,508,o),
(244,508,qs),
(165,508,l),
(165,276,ls),
(165,272,o),
(163,272,qs),
(118,272,ls),
(114,272,o),
(114,276,qs),
(114,508,l),
(35,508,ls)
);
},
{
closed = 1;
nodes = (
(498,556,o),
(502,556,qs),
(537,556,ls),
(565,556,o),
(567,528,qs),
(582,276,ls),
(582,272,o),
(578,272,qs),
(535,272,ls),
(530,272,o),
(530,277,qs),
(519,473,l),
(453,276,l),
(450,272,o),
(447,272,qs),
(414,272,ls),
(409,272,o),
(408,276,qs),
(345,471,l),
(333,276,ls),
(333,272,o),
(329,272,qs),
(287,272,ls),
(283,272,o),
(283,276,qs),
(299,552,ls),
(299,556,o),
(304,556,qs),
(337,556,ls),
(366,556,o),
(373,533,qs),
(431,355,l),
(497,551,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
47 26 17 16 10 5 1 2 46 41 40 33 32 27 1 7 0 1 2 76 7 6 5 3 0 1 0 134 8 4 2 2 1 1 2 89 8 4 2 2 2 1 95 9 3 2 1 2 1 79 0 0 50 48 44 43 37 36 30 29 24 22 0 19 0 19 36 19 19 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 642;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,148,o),
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(135,214,l),
(197,325,l),
(45,325,ls),
(37,325,o),
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(234,391,l),
(285,484,ls),
(290,493,o),
(299,493,qs),
(303,493,ls),
(326,493,o),
(338,460,o),
(324,433,qs),
(300,391,l),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(265,325,l),
(203,214,l),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(166,148,l),
(121,67,l),
(117,58,o),
(110,58,qs),
(58,58,ls),
(48,58,o),
(54,67,qs),
(99,148,l),
(45,148,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 5 133 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 43 33 35 34 51 35 33 35 34 50 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,66,o),
(45,66,qs),
(399,66,ls),
(407,66,o),
(407,58,qs),
(407,8,ls),
(407,0,o),
(399,0,qs),
(45,0,ls),
(37,0,o),
(37,8,qs),
(37,58,ls)
);
},
{
closed = 1;
nodes = (
(407,181,o),
(407,122,qs),
(407,117,ls),
(407,108,o),
(399,111,qs),
(45,261,l),
(37,263,o),
(37,273,qs),
(37,313,ls),
(37,322,o),
(45,326,qs),
(397,474,ls),
(407,478,o),
(407,468,qs),
(407,418,ls),
(407,405,o),
(393,399,qs),
(133,293,l),
(354,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,406,o),
(43,418,qs),
(43,468,ls),
(43,478,o),
(53,474,qs),
(406,326,ls),
(414,322,o),
(414,313,qs),
(414,273,ls),
(414,263,o),
(406,261,q),
(52,111,ls),
(43,108,o),
(43,117,qs),
(43,122,ls),
(43,182,o),
(96,203,qs),
(318,293,l),
(57,399,l)
);
},
{
closed = 1;
nodes = (
(43,66,o),
(51,66,qs),
(405,66,ls),
(412,66,o),
(412,58,qs),
(412,8,ls),
(412,0,o),
(405,0,qs),
(51,0,ls),
(43,0,o),
(43,8,qs),
(43,58,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 29 26 23 20 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,525,o),
(304,513,qs),
(304,500,o),
(285,482,o),
(272,482,qs),
(260,482,o),
(242,500,o),
(242,513,qs),
(242,525,o),
(260,544,o),
(272,544,qs),
(285,544,o)
);
},
{
closed = 1;
nodes = (
(390,500,o),
(390,488,qs),
(390,475,o),
(372,457,o),
(359,457,qs),
(346,457,o),
(328,475,o),
(328,488,qs),
(328,500,o),
(347,519,o),
(359,519,qs),
(371,519,o)
);
},
{
closed = 1;
nodes = (
(109,330,o),
(109,317,qs),
(109,304,o),
(91,286,o),
(78,286,qs),
(66,286,o),
(47,305,o),
(47,317,qs),
(47,330,o),
(66,349,o),
(78,349,qs),
(90,349,o)
);
},
{
closed = 1;
nodes = (
(498,330,o),
(498,317,qs),
(498,305,o),
(480,286,o),
(467,286,qs),
(454,286,o),
(436,304,o),
(436,317,qs),
(436,330,o),
(455,349,o),
(467,349,qs),
(479,349,o)
);
},
{
closed = 1;
nodes = (
(242,109,o),
(242,121,qs),
(242,134,o),
(260,152,o),
(272,152,qs),
(285,152,o),
(304,134,o),
(304,121,qs),
(304,109,o),
(285,90,o),
(272,90,qs),
(260,90,o)
);
},
{
closed = 1;
nodes = (
(464,434,o),
(464,421,qs),
(464,409,o),
(445,390,o),
(432,390,qs),
(420,390,o),
(402,408,o),
(402,421,qs),
(402,434,o),
(420,453,o),
(432,453,qs),
(445,453,o)
);
},
{
closed = 1;
nodes = (
(148,501,o),
(148,489,qs),
(148,476,o),
(167,457,o),
(180,457,qs),
(192,457,o),
(210,476,o),
(210,489,qs),
(210,501,o),
(192,520,o),
(180,520,qs),
(167,520,o)
);
},
{
closed = 1;
nodes = (
(74,425,o),
(74,413,qs),
(74,400,o),
(93,381,o),
(106,381,qs),
(118,381,o),
(136,400,o),
(136,413,qs),
(136,425,o),
(118,444,o),
(106,444,qs),
(93,444,o)
);
},
{
closed = 1;
nodes = (
(404,142,o),
(404,155,qs),
(404,167,o),
(385,186,o),
(372,186,qs),
(360,186,o),
(342,168,o),
(342,155,qs),
(342,142,o),
(360,123,o),
(372,123,qs),
(385,123,o)
);
},
{
closed = 1;
nodes = (
(470,209,o),
(470,221,qs),
(470,234,o),
(452,253,o),
(439,253,qs),
(426,253,o),
(408,234,o),
(408,221,qs),
(408,209,o),
(427,190,o),
(439,190,qs),
(451,190,o)
);
},
{
closed = 1;
nodes = (
(148,142,o),
(148,155,qs),
(148,167,o),
(166,186,o),
(179,186,qs),
(192,186,o),
(210,168,o),
(210,155,qs),
(210,142,o),
(191,123,o),
(179,123,qs),
(167,123,o)
);
},
{
closed = 1;
nodes = (
(68,209,o),
(68,221,qs),
(68,234,o),
(87,253,o),
(100,253,qs),
(112,253,o),
(130,234,o),
(130,221,qs),
(130,209,o),
(112,190,o),
(100,190,qs),
(87,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 240 values pushed */
30 1 12 0 2 0 12 2 128 0 13 3 10 3 13 10 128 31 1 14 10 11 10 14 11 128 0 15 11 4 11 15 4 128 0 19 5 23 5 19 23 128 33 1 18 22 17 22 18 17 128 0 17 21 22 17 21 126 32 1 16 20 8 20 16 8 128 24 1 0 0 1 3 0 1 105 25 1 2 0 3 13 2 3 105 29 1 10 0 11 15 10 11 105 27 6 26 3 4 7 1 5 19 4 5 105 0 23 35 1 22 18 23 22 106 0 9 20 8 9 89 0 21 34 1 20 16 21 20 105 0 9 9 8 97 28 1 8 9 8 81 133 132 121 120 109 108 97 96 85 84 73 72 61 60 49 48 37 36 25 24 13 12 1 0 139 137 132 143 133 143 127 125 120 131 121 131 115 113 108 119 109 119 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 67 65 60 71 61 71 55 53 48 59 49 59 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 36 6 22 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,101,qs),
(372,154,o),
(372,278,qs),
(372,388,o),
(342,441,qs),
(312,496,o),
(246,496,qs),
(188,496,o),
(158,455,qs),
(120,403,o),
(120,278,qs),
(120,168,o),
(149,115,qs),
(180,61,o),
(246,61,qs),
(303,61,o)
);
},
{
closed = 1;
nodes = (
(102,54,qs),
(43,127,o),
(43,278,qs),
(43,409,o),
(89,483,qs),
(142,567,o),
(246,567,qs),
(336,567,o),
(388,502,qs),
(449,428,o),
(449,278,qs),
(449,146,o),
(403,73,qs),
(352,-10,o),
(246,-10,qs),
(153,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,441,ls),
(94,437,o),
(94,446,qs),
(94,503,ls),
(94,514,o),
(104,518,qs),
(186,547,ls),
(211,556,o),
(234,556,qs),
(248,556,ls),
(297,556,o),
(297,501,qs),
(297,69,l),
(402,69,ls),
(447,69,o),
(447,26,qs),
(447,11,ls),
(447,0,o),
(436,0,qs),
(88,0,ls),
(79,0,o),
(79,9,qs),
(79,61,ls),
(79,69,o),
(88,69,qs),
(222,69,l),
(222,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(435,69,o),
(435,27,qs),
(435,11,ls),
(435,0,o),
(424,0,qs),
(69,0,ls),
(61,0,o),
(61,9,qs),
(61,98,o),
(112,161,qs),
(145,201,o),
(222,250,qs),
(304,303,o),
(354,363,o),
(354,407,qs),
(354,450,o),
(295,498,o),
(242,498,qs),
(170,498,o),
(103,455,qs),
(94,450,o),
(90,450,qs),
(85,450,o),
(82,458,qs),
(76,478,ls),
(64,517,o),
(112,538,qs),
(179,567,o),
(247,567,qs),
(325,567,o),
(373,532,qs),
(431,491,o),
(431,409,qs),
(431,343,o),
(384,290,qs),
(353,256,o),
(281,208,qs),
(203,157,o),
(153,104,o),
(149,69,q),
(390,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 40 0 39 58 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,208,o),
(432,157,qs),
(432,88,o),
(385,43,qs),
(330,-10,o),
(237,-10,qs),
(156,-10,o),
(104,30,qs),
(54,69,o),
(54,117,qs),
(54,139,o),
(68,139,qs),
(75,139,o),
(83,129,qs),
(140,58,o),
(231,58,qs),
(287,58,o),
(355,113,o),
(355,159,qs),
(355,205,o),
(323,230,qs),
(292,254,o),
(236,254,qs),
(177,254,ls),
(135,254,o),
(135,294,qs),
(135,311,ls),
(135,324,o),
(146,324,qs),
(238,324,ls),
(340,324,o),
(340,412,qs),
(340,454,o),
(282,499,o),
(230,499,qs),
(163,499,o),
(98,456,qs),
(97,455,o),
(94,454,q),
(88,450,o),
(85,450,qs),
(79,450,o),
(76,458,qs),
(70,478,ls),
(58,515,o),
(106,538,qs),
(173,567,o),
(233,567,qs),
(309,567,o),
(356,534,qs),
(414,494,o),
(414,419,qs),
(414,327,o),
(326,291,q),
(375,280,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 37 51 51 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,128,o),
(43,136,qs),
(43,177,ls),
(43,193,o),
(53,208,qs),
(270,537,l),
(281,556,o),
(304,556,qs),
(334,556,ls),
(381,556,o),
(381,508,qs),
(381,197,l),
(417,197,ls),
(462,197,o),
(462,154,qs),
(462,138,ls),
(462,128,o),
(451,128,qs),
(381,128,l),
(381,9,ls),
(381,0,o),
(374,0,qs),
(314,0,ls),
(306,0,o),
(306,9,qs),
(306,128,l),
(51,128,ls)
);
},
{
closed = 1;
nodes = (
(306,476,l),
(122,197,l),
(306,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,353,o),
(251,353,qs),
(331,353,o),
(379,312,qs),
(435,265,o),
(435,179,qs),
(435,100,o),
(384,48,qs),
(328,-10,o),
(237,-10,qs),
(162,-10,o),
(109,27,qs),
(53,66,o),
(53,116,qs),
(53,137,o),
(68,137,qs),
(75,137,o),
(82,128,qs),
(137,58,o),
(229,58,qs),
(285,58,o),
(319,86,qs),
(359,118,o),
(359,175,qs),
(359,225,o),
(331,254,qs),
(299,286,o),
(238,286,qs),
(165,286,o),
(92,259,qs),
(79,255,o),
(79,268,qs),
(79,547,ls),
(79,556,o),
(87,556,qs),
(357,556,ls),
(402,556,o),
(402,513,qs),
(402,497,ls),
(402,486,o),
(391,486,qs),
(154,486,l),
(154,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
42 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 38 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,362,qs),
(344,362,o),
(393,315,qs),
(448,263,o),
(448,184,qs),
(448,101,o),
(401,49,qs),
(348,-10,o),
(256,-10,qs),
(177,-10,o),
(124,35,qs),
(62,87,o),
(62,174,qs),
(62,214,o),
(91,293,o),
(128,353,qs),
(252,557,ls),
(258,567,o),
(266,567,qs),
(292,567,o),
(301,544,qs),
(312,516,o),
(290,479,qs),
(211,349,l),
(242,362,o)
);
},
{
closed = 1;
nodes = (
(165,96,qs),
(198,59,o),
(257,59,qs),
(306,59,o),
(338,88,qs),
(373,121,o),
(373,177,qs),
(373,225,o),
(346,257,qs),
(313,296,o),
(256,296,qs),
(207,296,o),
(174,267,qs),
(136,233,o),
(136,177,qs),
(136,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,486,o),
(61,495,qs),
(61,547,ls),
(61,556,o),
(69,556,qs),
(398,556,ls),
(443,556,o),
(443,513,qs),
(443,502,ls),
(443,477,o),
(432,456,qs),
(215,12,ls),
(210,0,o),
(198,0,qs),
(138,0,ls),
(128,0,o),
(132,9,qs),
(365,486,l),
(69,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,86,qs),
(186,54,o),
(245,54,qs),
(300,54,o),
(366,110,o),
(366,156,qs),
(366,201,o),
(335,230,qs),
(301,261,o),
(245,261,qs),
(191,261,o),
(124,203,o),
(124,156,qs),
(124,113,o)
);
},
{
closed = 1;
nodes = (
(164,353,qs),
(194,324,o),
(245,324,qs),
(292,324,o),
(351,374,o),
(351,412,qs),
(351,453,o),
(293,503,o),
(245,503,qs),
(197,503,o),
(138,453,o),
(138,412,qs),
(138,377,o)
);
},
{
closed = 1;
nodes = (
(66,422,qs),
(66,483,o),
(112,523,qs),
(162,567,o),
(245,567,qs),
(317,567,o),
(366,533,qs),
(424,492,o),
(424,422,qs),
(424,332,o),
(336,294,q),
(386,277,o),
(441,204,o),
(441,155,qs),
(441,87,o),
(395,42,qs),
(341,-11,o),
(245,-11,qs),
(162,-11,o),
(109,30,qs),
(49,76,o),
(49,155,qs),
(49,204,o),
(104,277,o),
(155,294,q),
(66,332,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 41 36 37 37 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,194,qs),
(157,194,o),
(108,239,qs),
(52,291,o),
(52,372,qs),
(52,455,o),
(101,508,qs),
(155,567,o),
(247,567,qs),
(326,567,o),
(377,522,qs),
(438,470,o),
(438,382,qs),
(438,342,o),
(409,264,o),
(372,204,qs),
(249,1,ls),
(242,-10,o),
(233,-10,qs),
(207,-10,o),
(199,14,qs),
(189,42,o),
(210,77,qs),
(290,209,l),
(261,194,o)
);
},
{
closed = 1;
nodes = (
(326,290,qs),
(363,324,o),
(363,379,qs),
(363,429,o),
(335,461,qs),
(303,498,o),
(245,498,qs),
(195,498,o),
(163,469,qs),
(126,435,o),
(126,379,qs),
(126,329,o),
(154,297,qs),
(186,261,o),
(244,261,qs),
(293,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,414,o),
(169,417,qs),
(169,422,o),
(174,422,qs),
(225,422,l),
(247,521,o),
(299,594,qs),
(352,668,o),
(422,697,qs),
(431,700,o),
(431,691,qs),
(431,690,o),
(431,688,qs),
(431,677,o),
(430,671,q),
(429,639,o),
(409,621,qs),
(403,615,o),
(402,614,qs),
(322,536,o),
(296,422,q),
(338,422,ls),
(343,422,o),
(343,417,qs),
(343,414,o),
(341,413,q),
(291,354,l),
(276,365,o),
(257,365,qs),
(235,365,o),
(220,354,q),
(170,413,ls)
);
},
{
closed = 1;
nodes = (
(176,241,q),
(118,192,ls),
(115,190,o),
(114,190,qs),
(109,190,o),
(109,196,qs),
(109,240,l),
(62,258,ls),
(56,260,o),
(56,267,qs),
(56,286,ls),
(56,293,o),
(62,295,qs),
(109,313,l),
(109,358,ls),
(109,363,o),
(113,363,qs),
(115,363,o),
(118,361,qs),
(176,313,l),
(166,298,o),
(166,277,qs),
(166,257,o)
);
},
{
closed = 1;
nodes = (
(456,293,o),
(456,286,qs),
(456,267,ls),
(456,260,o),
(450,258,qs),
(403,239,l),
(403,194,ls),
(403,189,o),
(398,189,qs),
(396,189,o),
(394,191,qs),
(336,241,l),
(347,258,o),
(347,277,qs),
(347,297,o),
(336,312,q),
(394,361,l),
(396,362,o),
(399,362,qs),
(403,362,o),
(403,357,qs),
(403,313,l),
(450,294,l)
);
},
{
closed = 1;
nodes = (
(298,294,o),
(298,276,qs),
(298,258,o),
(273,234,o),
(255,234,qs),
(238,234,o),
(213,258,o),
(213,276,qs),
(213,294,o),
(238,318,o),
(255,318,qs),
(273,318,o)
);
},
{
closed = 1;
nodes = (
(407,-66,qs),
(429,-86,o),
(430,-118,q),
(431,-123,o),
(431,-134,qs),
(431,-137,o),
(431,-138,qs),
(431,-148,o),
(422,-144,qs),
(362,-120,o),
(313,-61,qs),
(250,16,o),
(225,130,q),
(174,130,ls),
(169,130,o),
(169,135,qs),
(169,137,o),
(170,139,q),
(220,197,l),
(235,187,o),
(257,187,qs),
(276,187,o),
(291,197,q),
(341,139,l),
(343,138,o),
(343,135,qs),
(343,130,o),
(338,130,qs),
(297,130,l),
(323,17,o),
(402,-61,qs),
(404,-63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
29 1 0 1 58 56 39 37 4 5 3 0 71 65 61 55 53 47 40 34 8 4 3 102 98 50 48 4 6 4 95 1 5 6 5 76 16 1 1 74 2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 7 1 5 5 132 8 1 3 4 4 3 89 8 1 3 3 4 97 0 4 3 4 81 79 78 108 106 101 99 93 92 85 83 78 89 79 89 27 26 37 33 9 6 24 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,619,qs),
(83,639,o),
(82,671,q),
(81,677,o),
(81,687,qs),
(81,690,o),
(81,691,qs),
(81,700,o),
(90,697,qs),
(150,672,o),
(199,612,qs),
(262,535,o),
(287,422,q),
(338,422,ls),
(343,422,o),
(343,417,qs),
(343,414,o),
(342,413,qs),
(292,354,l),
(277,365,o),
(255,365,qs),
(236,365,o),
(221,354,q),
(171,413,l),
(169,414,o),
(169,417,qs),
(169,422,o),
(174,422,qs),
(216,422,l),
(190,536,o),
(110,614,qs),
(108,616,o)
);
},
{
closed = 1;
nodes = (
(456,293,o),
(456,286,qs),
(456,267,ls),
(456,260,o),
(450,258,qs),
(403,240,l),
(403,196,ls),
(403,190,o),
(398,190,qs),
(397,190,o),
(394,192,qs),
(336,241,l),
(346,257,o),
(346,277,qs),
(346,298,o),
(336,313,q),
(394,361,ls),
(397,363,o),
(399,363,qs),
(403,363,o),
(403,358,qs),
(403,313,l),
(450,295,ls)
);
},
{
closed = 1;
nodes = (
(62,258,ls),
(56,260,o),
(56,267,qs),
(56,286,ls),
(56,293,o),
(62,294,q),
(109,313,l),
(109,357,ls),
(109,362,o),
(113,362,qs),
(116,362,o),
(118,361,q),
(176,312,l),
(165,297,o),
(165,277,qs),
(165,258,o),
(176,241,q),
(118,191,ls),
(116,189,o),
(114,189,qs),
(109,189,o),
(109,194,qs),
(109,239,l)
);
},
{
closed = 1;
nodes = (
(299,294,o),
(299,276,qs),
(299,258,o),
(274,234,o),
(257,234,qs),
(239,234,o),
(214,258,o),
(214,276,qs),
(214,294,o),
(239,318,o),
(257,318,qs),
(274,318,o)
);
},
{
closed = 1;
nodes = (
(343,137,o),
(343,135,qs),
(343,130,o),
(338,130,qs),
(287,130,l),
(265,30,o),
(213,-42,qs),
(159,-116,o),
(90,-144,qs),
(81,-148,o),
(81,-138,qs),
(81,-137,o),
(81,-135,qs),
(81,-124,o),
(82,-118,q),
(83,-86,o),
(103,-69,qs),
(109,-63,o),
(110,-61,q),
(189,17,o),
(215,130,q),
(174,130,ls),
(169,130,o),
(169,135,qs),
(169,138,o),
(171,139,q),
(221,197,l),
(236,187,o),
(255,187,qs),
(277,187,o),
(292,197,q),
(342,139,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
5 1 1 0 35 33 12 8 4 3 1 77 70 64 60 48 42 38 32 8 4 3 94 57 55 3 5 4 119 1 6 5 5 76 28 1 0 74 106 1 6 73 2 1 0 1 0 133 0 1 3 1 133 0 5 4 6 4 5 6 128 7 1 6 6 132 8 1 3 4 4 3 89 8 1 3 3 4 97 0 4 3 4 81 79 78 117 116 100 98 93 91 85 83 78 89 79 89 37 38 18 9 6 25 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,398,ls),
(105,467,o),
(142,511,qs),
(186,564,o),
(269,564,qs),
(342,564,o),
(386,523,qs),
(433,478,o),
(433,398,qs),
(433,68,ls),
(433,0,o),
(372,0,qs),
(365,0,ls),
(357,0,o),
(357,8,qs),
(357,404,ls),
(357,446,o),
(310,494,o),
(269,494,qs),
(228,494,o),
(181,446,o),
(181,404,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 31 29 23 21 16 13 9 7 0 32 1 32 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,154,o),
(61,168,qs),
(56,488,ls),
(55,556,o),
(117,556,qs),
(123,556,ls),
(132,556,o),
(132,548,qs),
(127,168,ls),
(127,154,o),
(114,154,qs),
(74,154,ls)
);
},
{
closed = 1;
nodes = (
(149,67,o),
(149,44,qs),
(149,21,o),
(117,-11,o),
(95,-11,qs),
(73,-11,o),
(41,21,o),
(41,44,qs),
(41,66,o),
(73,99,o),
(95,99,qs),
(117,99,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 0 3 2 3 101 4 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 4 0 11 1 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 189;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,0,o),
(148,14,qs),
(148,486,ls),
(148,545,o),
(191,553,qs),
(204,556,o),
(226,556,qs),
(314,556,o),
(360,498,qs),
(362,495,o),
(364,498,qs),
(403,556,o),
(490,556,qs),
(541,556,ls),
(549,556,o),
(549,548,qs),
(549,542,ls),
(549,496,o),
(505,488,qs),
(504,488,o),
(496,487,qs),
(483,486,o),
(479,486,qs),
(445,482,o),
(399,443,o),
(376,398,qs),
(369,386,o),
(363,386,qs),
(356,386,o),
(349,398,qs),
(324,444,o),
(283,480,o),
(249,483,q),
(247,484,o),
(242,484,qs),
(231,485,o),
(228,485,qs),
(224,485,o),
(224,481,qs),
(224,14,ls),
(224,0,o),
(210,0,qs),
(161,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
31 1 2 3 3 1 1 2 2 76 0 1 2 0 2 1 0 128 0 2 2 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 36 34 30 27 21 19 14 13 0 42 1 41 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,556,o),
(450,556,qs),
(455,556,o),
(457,548,qs),
(459,539,o),
(458,531,q),
(462,475,o),
(434,456,q),
(240,297,l),
(166,230,o),
(165,168,qs),
(165,125,o),
(222,71,o),
(268,71,qs),
(541,71,ls),
(570,71,o),
(606,41,o),
(606,18,qs),
(606,12,ls),
(606,0,o),
(592,0,qs),
(263,0,ls),
(193,0,o),
(146,35,qs),
(88,80,o),
(88,164,qs),
(88,220,o),
(146,313,o),
(217,373,qs),
(440,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 42 52 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,530,o),
(89,541,qs),
(41,658,ls),
(37,669,o),
(51,669,qs),
(86,669,o),
(99,637,qs),
(119,590,l),
(139,637,ls),
(152,669,o),
(187,669,qs),
(201,669,o),
(196,658,qs),
(149,541,ls),
(144,530,o),
(132,530,qs),
(105,530,ls)
);
},
{
closed = 1;
nodes = (
(448,556,o),
(448,548,qs),
(448,168,ls),
(448,94,o),
(411,50,qs),
(369,0,o),
(290,0,qs),
(66,0,ls),
(52,0,o),
(52,12,qs),
(52,19,ls),
(52,44,o),
(86,74,o),
(113,74,qs),
(201,74,l),
(105,363,ls),
(88,414,o),
(120,434,qs),
(132,443,o),
(146,447,qs),
(151,448,ls),
(158,450,o),
(160,443,qs),
(282,74,l),
(296,74,ls),
(331,74,o),
(372,126,o),
(372,169,qs),
(372,488,ls),
(372,533,o),
(401,548,qs),
(415,556,o),
(433,556,qs),
(440,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 3 1 1 76 2 1 1 3 1 133 7 1 0 3 4 3 0 4 128 8 1 3 3 23 77 5 1 4 4 6 96 0 6 6 24 6 78 18 17 1 0 44 41 37 35 26 24 17 50 18 49 12 10 6 4 0 16 1 15 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,530,o),
(89,541,qs),
(41,658,ls),
(37,669,o),
(51,669,qs),
(86,669,o),
(99,637,qs),
(119,590,l),
(139,637,ls),
(152,669,o),
(187,669,qs),
(201,669,o),
(196,658,qs),
(149,541,ls),
(144,530,o),
(132,530,qs),
(105,530,ls)
);
},
{
closed = 1;
nodes = (
(583,0,l),
(524,0,ls),
(450,0,o),
(412,51,q),
(370,0,o),
(290,0,qs),
(66,0,ls),
(52,0,o),
(52,12,qs),
(52,19,ls),
(52,44,o),
(86,74,o),
(113,74,qs),
(201,74,l),
(105,363,ls),
(88,414,o),
(120,434,qs),
(132,443,o),
(146,447,qs),
(151,448,ls),
(158,450,o),
(160,443,qs),
(282,74,l),
(296,74,ls),
(331,74,o),
(372,126,o),
(372,169,qs),
(372,488,ls),
(372,533,o),
(401,548,qs),
(415,556,o),
(433,556,qs),
(440,556,ls),
(448,556,o),
(448,548,qs),
(448,168,ls),
(448,124,o),
(491,74,o),
(529,74,qs),
(583,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
8 1 4 1 52 1 7 3 2 76 2 1 1 4 1 133 9 1 0 4 3 4 0 3 128 0 4 4 23 77 6 5 10 3 3 3 7 96 8 1 7 7 24 7 78 18 17 1 0 55 53 51 48 44 42 33 31 25 22 17 56 18 56 12 10 6 4 0 16 1 15 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,655,o),
(459,676,qs),
(459,697,o),
(488,726,o),
(509,726,qs),
(529,726,o),
(558,697,o),
(558,676,qs),
(558,655,o),
(529,626,o),
(509,626,qs),
(488,626,o)
);
},
{
closed = 1;
nodes = (
(678,0,l),
(619,0,ls),
(575,0,o),
(541,20,q),
(530,-86,o),
(468,-147,qs),
(401,-214,o),
(292,-214,qs),
(192,-214,o),
(124,-156,qs),
(42,-85,o),
(43,39,qs),
(43,101,o),
(98,207,o),
(143,232,qs),
(151,236,o),
(157,236,qs),
(170,236,o),
(170,224,qs),
(170,219,o),
(165,213,q),
(117,134,o),
(116,55,qs),
(115,-35,o),
(163,-88,qs),
(212,-143,o),
(292,-143,qs),
(363,-143,o),
(409,-100,qs),
(467,-47,o),
(467,58,qs),
(467,488,ls),
(467,556,o),
(528,556,qs),
(535,556,ls),
(543,556,o),
(543,548,qs),
(543,168,ls),
(544,124,o),
(586,74,o),
(624,74,qs),
(678,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
49 1 7 2 1 76 0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 77 9 1 2 2 7 95 0 7 7 24 7 78 13 12 1 0 52 50 46 44 36 35 27 25 20 17 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,696,o),
(195,675,qs),
(195,654,o),
(167,625,o),
(146,625,qs),
(126,625,o),
(97,654,o),
(97,675,qs),
(97,696,o),
(126,725,o),
(146,725,qs),
(167,725,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 27 25 21 18 12 28 13 28 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,654,o),
(97,675,qs),
(97,696,o),
(126,725,o),
(146,725,qs),
(167,725,o),
(195,696,o),
(195,675,qs),
(195,654,o),
(167,625,o),
(146,625,qs),
(126,625,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(257,0,ls),
(184,0,o),
(145,51,q),
(103,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
30 1 5 2 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 20 17 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,753,o),
(461,772,qs),
(461,792,o),
(487,818,o),
(506,818,qs),
(524,818,o),
(549,792,o),
(549,772,qs),
(549,753,o),
(524,728,o),
(506,728,qs),
(487,728,o)
);
},
{
closed = 1;
nodes = (
(397,658,o),
(397,677,qs),
(397,696,o),
(422,722,o),
(440,722,qs),
(459,722,o),
(485,696,o),
(485,677,qs),
(485,658,o),
(459,632,o),
(440,632,qs),
(422,632,o)
);
},
{
closed = 1;
nodes = (
(548,722,o),
(567,722,qs),
(585,722,o),
(610,696,o),
(610,677,qs),
(610,658,o),
(586,632,o),
(567,632,qs),
(548,632,o),
(523,658,o),
(523,677,qs),
(523,696,o)
);
},
{
closed = 1;
nodes = (
(678,0,l),
(619,0,ls),
(575,0,o),
(541,20,q),
(530,-86,o),
(468,-147,qs),
(401,-214,o),
(292,-214,qs),
(192,-214,o),
(124,-156,qs),
(42,-85,o),
(43,39,qs),
(43,101,o),
(98,207,o),
(143,232,qs),
(151,236,o),
(157,236,qs),
(170,236,o),
(170,224,qs),
(170,219,o),
(165,213,q),
(117,134,o),
(116,55,qs),
(115,-35,o),
(163,-88,qs),
(212,-143,o),
(292,-143,qs),
(363,-143,o),
(409,-100,qs),
(467,-47,o),
(467,58,qs),
(467,488,ls),
(467,556,o),
(528,556,qs),
(535,556,ls),
(543,556,o),
(543,548,qs),
(543,168,ls),
(544,124,o),
(586,74,o),
(624,74,qs),
(678,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
73 1 11 6 1 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 14 1 6 6 11 95 0 11 11 24 11 78 37 36 13 12 1 0 76 74 70 68 60 59 51 49 44 41 36 77 37 77 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,753,o),
(99,772,qs),
(99,792,o),
(125,818,o),
(144,818,qs),
(162,818,o),
(187,792,o),
(187,772,qs),
(187,753,o),
(162,728,o),
(144,728,qs),
(125,728,o)
);
},
{
closed = 1;
nodes = (
(35,658,o),
(35,677,qs),
(35,696,o),
(60,722,o),
(78,722,qs),
(97,722,o),
(123,696,o),
(123,677,qs),
(123,658,o),
(97,632,o),
(78,632,qs),
(60,632,o)
);
},
{
closed = 1;
nodes = (
(248,696,o),
(248,677,qs),
(248,658,o),
(223,632,o),
(205,632,qs),
(186,632,o),
(160,658,o),
(160,677,qs),
(160,696,o),
(186,722,o),
(205,722,qs),
(223,722,o)
);
},
{
closed = 1;
nodes = (
(181,556,o),
(181,548,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 9 1 0 3 1 0 105 11 4 2 3 5 10 2 2 6 3 2 105 12 1 6 6 23 77 0 7 7 8 97 0 8 8 24 8 78 37 36 25 24 13 12 1 0 46 44 43 41 36 52 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,753,o),
(99,772,qs),
(99,792,o),
(125,818,o),
(144,818,qs),
(162,818,o),
(187,792,o),
(187,772,qs),
(187,753,o),
(162,728,o),
(144,728,qs),
(125,728,o)
);
},
{
closed = 1;
nodes = (
(35,658,o),
(35,677,qs),
(35,696,o),
(60,722,o),
(78,722,qs),
(97,722,o),
(123,696,o),
(123,677,qs),
(123,658,o),
(97,632,o),
(78,632,qs),
(60,632,o)
);
},
{
closed = 1;
nodes = (
(186,722,o),
(205,722,qs),
(223,722,o),
(248,696,o),
(248,677,qs),
(248,658,o),
(223,632,o),
(205,632,qs),
(186,632,o),
(160,658,o),
(160,677,qs),
(160,696,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(257,0,ls),
(184,0,o),
(145,51,q),
(103,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
54 1 9 6 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 97 10 1 9 9 24 9 78 37 36 13 12 1 0 57 55 53 51 50 48 44 41 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,779,o),
(453,779,qs),
(488,779,o),
(501,747,qs),
(521,700,l),
(540,747,ls),
(554,779,o),
(589,779,qs),
(603,779,o),
(598,768,qs),
(550,651,ls),
(546,640,o),
(534,640,qs),
(507,640,ls),
(496,640,o),
(491,651,qs),
(443,768,ls)
);
},
{
closed = 1;
nodes = (
(692,0,l),
(633,0,ls),
(589,0,o),
(555,20,q),
(544,-86,o),
(482,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(692,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
11 1 0 1 54 1 8 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 101 0 4 4 23 77 9 1 3 3 8 95 0 8 8 24 8 78 18 17 57 55 51 49 41 40 32 30 25 22 17 58 18 58 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,768,qs),
(176,651,ls),
(172,640,o),
(160,640,qs),
(133,640,ls),
(122,640,o),
(117,651,qs),
(69,768,ls),
(65,779,o),
(79,779,qs),
(114,779,o),
(127,747,qs),
(147,700,l),
(166,747,ls),
(180,779,o),
(215,779,qs),
(229,779,o)
);
},
{
closed = 1;
nodes = (
(181,556,o),
(181,548,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
3 1 2 0 1 76 1 6 2 0 2 0 133 0 2 3 2 133 7 1 3 3 23 77 0 4 4 5 97 0 5 5 24 5 78 18 17 1 0 27 25 24 22 17 33 18 32 13 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,779,o),
(79,779,qs),
(114,779,o),
(127,747,qs),
(147,700,l),
(166,747,ls),
(180,779,o),
(215,779,qs),
(229,779,o),
(224,768,qs),
(176,651,ls),
(172,640,o),
(160,640,qs),
(133,640,ls),
(122,640,o),
(117,651,qs),
(69,768,ls)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(257,0,ls),
(184,0,o),
(145,51,q),
(103,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
11 1 0 1 35 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 97 7 1 6 6 24 6 78 18 17 38 36 34 32 31 29 25 22 17 39 18 39 36 35 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,0,o),
(51,9,q),
(330,520,ls),
(349,555,o),
(374,556,qs),
(411,556,ls),
(423,556,o),
(417,544,qs),
(123,6,ls),
(120,0,o),
(113,0,qs),
(57,0,ls)
);
},
{
closed = 1;
nodes = (
(202,493,o),
(202,472,qs),
(202,451,o),
(174,422,o),
(154,422,qs),
(133,422,o),
(104,451,o),
(104,472,qs),
(104,493,o),
(133,522,o),
(154,522,qs),
(174,522,o)
);
},
{
closed = 1;
nodes = (
(342,60,o),
(342,39,qs),
(342,18,o),
(314,-11,o),
(294,-11,qs),
(273,-11,o),
(244,18,o),
(244,39,qs),
(244,60,o),
(273,89,o),
(294,89,qs),
(314,89,o)
);
},
{
closed = 1;
nodes = (
(520,60,o),
(520,39,qs),
(520,18,o),
(492,-11,o),
(471,-11,qs),
(451,-11,o),
(422,18,o),
(422,39,qs),
(422,60,o),
(450,89,o),
(471,89,qs),
(492,89,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 1 2 1 133 8 1 0 4 5 4 0 5 128 9 1 2 0 3 4 2 3 105 11 6 10 3 4 0 5 4 89 11 6 10 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 1 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 4 0 11 1 10 12 6 22 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-216,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-66,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
},
{
closed = 1;
nodes = (
(98,-306,o),
(98,-327,qs),
(98,-348,o),
(69,-377,o),
(49,-377,qs),
(28,-377,o),
(0,-348,o),
(0,-327,qs),
(0,-305,o),
(28,-277,o),
(49,-277,qs),
(70,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
26 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 106 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 33 32 1 0 39 37 32 43 33 43 30 28 25 23 19 17 13 11 8 5 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,583,o),
(85,583,qs),
(120,583,o),
(133,551,qs),
(153,503,l),
(172,551,ls),
(186,583,o),
(221,583,qs),
(235,583,o),
(230,572,qs),
(182,454,ls),
(178,443,o),
(166,443,qs),
(139,443,ls),
(128,443,o),
(123,454,qs),
(75,572,ls)
);
},
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
11 1 0 1 45 1 8 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 9 1 3 3 8 98 0 8 8 24 8 78 18 17 49 47 42 40 36 34 30 28 25 22 17 50 18 50 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-216,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-66,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
},
{
closed = 1;
nodes = (
(120,-288,qs),
(72,-405,ls),
(68,-416,o),
(56,-416,qs),
(29,-416,ls),
(18,-416,o),
(13,-405,qs),
(-35,-288,ls),
(-39,-277,o),
(-25,-277,qs),
(10,-277,o),
(23,-309,qs),
(43,-356,l),
(62,-309,ls),
(76,-277,o),
(111,-277,qs),
(125,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
26 1 5 0 35 1 8 6 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 7 10 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 106 9 1 0 0 5 97 0 5 5 24 5 78 33 32 1 0 45 42 39 37 32 48 33 48 30 28 25 23 19 17 13 11 8 5 0 31 1 31 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,577,o),
(257,532,o),
(257,493,qs),
(257,454,o),
(210,410,o),
(170,410,qs),
(47,410,ls),
(38,410,o),
(38,418,qs),
(38,422,ls),
(38,456,o),
(81,456,qs),
(85,456,l),
(85,587,ls),
(85,636,o),
(122,636,qs),
(125,636,ls),
(132,636,o),
(132,628,qs),
(132,577,l),
(170,577,ls)
);
},
{
closed = 1;
nodes = (
(188,456,o),
(207,477,o),
(207,493,qs),
(207,510,o),
(188,531,o),
(173,531,qs),
(132,531,l),
(132,456,l),
(173,456,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 0 3 0 133 6 1 3 0 4 1 3 4 105 7 5 2 1 2 2 1 89 7 5 2 1 1 2 95 0 2 1 2 79 21 21 0 0 21 29 21 28 24 22 0 20 0 19 51 34 50 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-165,o),
(76,-165,qs),
(58,-165,o),
(33,-139,o),
(33,-119,qs),
(33,-100,o),
(58,-75,o),
(76,-75,qs),
(95,-75,o),
(121,-100,o),
(121,-119,qs),
(121,-139,o)
);
},
{
closed = 1;
nodes = (
(246,-100,o),
(246,-119,qs),
(246,-139,o),
(222,-165,o),
(203,-165,qs),
(184,-165,o),
(159,-139,o),
(159,-119,qs),
(159,-100,o),
(184,-75,o),
(203,-75,qs),
(222,-75,o)
);
},
{
closed = 1;
nodes = (
(185,-196,o),
(185,-215,qs),
(185,-234,o),
(160,-261,o),
(142,-261,qs),
(123,-261,o),
(97,-234,o),
(97,-215,qs),
(97,-196,o),
(123,-171,o),
(142,-171,qs),
(160,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
6 2 2 0 3 1 1 4 0 1 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 25 24 13 12 31 29 24 35 25 35 19 17 12 23 13 23 36 34 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,460,o),
(33,479,qs),
(33,498,o),
(58,524,o),
(76,524,qs),
(95,524,o),
(121,498,o),
(121,479,qs),
(121,460,o),
(95,434,o),
(76,434,qs),
(58,434,o)
);
},
{
closed = 1;
nodes = (
(159,460,o),
(159,479,qs),
(159,498,o),
(184,524,o),
(203,524,qs),
(222,524,o),
(246,498,o),
(246,479,qs),
(246,460,o),
(221,434,o),
(203,434,qs),
(184,434,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,-139,o),
(33,-119,qs),
(33,-100,o),
(58,-75,o),
(76,-75,qs),
(95,-75,o),
(121,-100,o),
(121,-119,qs),
(121,-139,o),
(95,-165,o),
(76,-165,qs),
(58,-165,o)
);
},
{
closed = 1;
nodes = (
(159,-139,o),
(159,-119,qs),
(159,-100,o),
(184,-75,o),
(203,-75,qs),
(222,-75,o),
(246,-100,o),
(246,-119,qs),
(246,-139,o),
(221,-165,o),
(203,-165,qs),
(184,-165,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,548,qs),
(40,548,o),
(31,535,q),
(29,533,o),
(27,530,qs),
(22,522,o),
(20,521,qs),
(18,520,o),
(16,520,qs),
(12,520,o),
(9,524,qs),
(2,536,o),
(2,548,qs),
(2,566,o),
(27,592,o),
(44,592,qs),
(56,592,o),
(70,588,qs),
(74,587,o),
(75,587,qs),
(78,587,o),
(80,590,qs),
(114,648,o),
(164,648,qs),
(193,648,o),
(229,615,o),
(229,589,qs),
(229,560,o),
(185,521,o),
(153,521,qs),
(130,521,o),
(93,536,qs),
(63,548,o)
);
},
{
closed = 1;
nodes = (
(118,572,q),
(136,563,o),
(154,563,qs),
(186,563,o),
(186,590,qs),
(186,608,o),
(163,608,qs),
(140,608,o)
);
},
{
closed = 1;
nodes = (
(445,556,o),
(445,548,qs),
(445,168,ls),
(445,94,o),
(409,50,qs),
(366,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(83,74,o),
(110,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(129,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(328,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(412,556,o),
(430,556,qs),
(437,556,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
39 12 2 5 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 0 0 5 97 11 6 2 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 10 1 4 2 1 4 105 0 2 0 3 0 2 3 105 11 1 6 6 23 77 0 0 0 5 97 0 5 5 23 77 8 1 7 7 9 95 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
42 41 34 33 68 65 61 59 50 48 41 74 42 73 38 36 33 40 34 40 45 38 36 33 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,548,qs),
(40,548,o),
(31,535,q),
(29,533,o),
(27,530,qs),
(22,522,o),
(20,521,qs),
(18,520,o),
(16,520,qs),
(12,520,o),
(9,524,qs),
(2,536,o),
(2,548,qs),
(2,566,o),
(27,592,o),
(44,592,qs),
(56,592,o),
(70,588,qs),
(74,587,o),
(75,587,qs),
(78,587,o),
(80,590,qs),
(114,648,o),
(164,648,qs),
(193,648,o),
(229,615,o),
(229,589,qs),
(229,560,o),
(185,521,o),
(153,521,qs),
(130,521,o),
(93,536,qs),
(63,548,o)
);
},
{
closed = 1;
nodes = (
(118,572,q),
(136,563,o),
(154,563,qs),
(186,563,o),
(186,590,qs),
(186,608,o),
(163,608,qs),
(140,608,o)
);
},
{
closed = 1;
nodes = (
(580,0,l),
(521,0,ls),
(447,0,o),
(409,51,q),
(367,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(83,74,o),
(110,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(129,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(328,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(412,556,o),
(430,556,qs),
(437,556,ls),
(445,556,o),
(445,548,qs),
(445,168,ls),
(446,124,o),
(488,74,o),
(526,74,qs),
(580,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
39 12 2 5 2 76 1 10 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 0 0 5 97 7 1 5 5 23 77 9 8 13 3 6 6 10 95 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 7 7 23 77 0 0 0 5 97 0 5 5 23 77 9 8 13 3 6 6 10 95 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
42 41 34 33 79 77 75 72 68 66 57 55 49 46 41 80 42 80 38 36 33 40 34 40 45 38 36 33 14 7 26 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,780,qs),
(29,785,o),
(29,793,qs),
(29,829,o),
(90,829,qs),
(192,829,ls),
(227,829,o),
(227,797,qs),
(227,793,ls),
(227,785,o),
(217,785,qs),
(103,785,ls),
(69,785,o),
(50,778,q),
(49,778,o),
(48,777,qs),
(46,776,o),
(44,776,q),
(43,775,l),
(39,773,o),
(37,773,qs),
(33,773,o)
);
},
{
closed = 1;
nodes = (
(31,687,qs),
(29,692,o),
(29,699,qs),
(29,736,o),
(90,736,qs),
(192,736,ls),
(227,736,o),
(227,704,qs),
(227,700,ls),
(227,692,o),
(217,692,qs),
(103,692,ls),
(69,692,o),
(50,685,q),
(49,685,o),
(48,684,qs),
(46,683,o),
(44,683,q),
(43,682,l),
(39,680,o),
(37,680,qs),
(33,680,o)
);
},
{
closed = 1;
nodes = (
(261,620,o),
(261,613,qs),
(261,553,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,487,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,553,qs),
(-5,573,ls),
(-5,620,o),
(31,620,qs),
(38,620,ls),
(44,620,o),
(44,613,qs),
(44,548,ls),
(44,511,o),
(74,511,qs),
(103,511,o),
(103,548,qs),
(103,573,ls),
(103,620,o),
(139,620,qs),
(146,620,ls),
(152,620,o),
(152,613,qs),
(152,548,ls),
(152,511,o),
(182,511,qs),
(211,511,o),
(211,548,qs),
(211,573,ls),
(211,620,o),
(247,620,qs),
(254,620,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
73 1 9 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 6 11 3 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
8 6 11 3 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
45 44 76 74 72 70 67 64 61 59 56 53 50 48 44 81 45 80 51 61 51 56 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,716,o),
(68,743,qs),
(68,771,o),
(103,806,o),
(131,806,qs),
(158,806,o),
(192,771,o),
(192,743,qs),
(192,716,o),
(158,682,o),
(131,682,qs),
(103,682,o)
);
},
{
closed = 1;
nodes = (
(105,743,qs),
(105,714,o),
(131,714,qs),
(156,714,o),
(156,743,qs),
(156,773,o),
(131,773,qs),
(105,773,o)
);
},
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
55 39 28 3 5 4 49 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 6 13 3 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
8 6 13 3 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
21 20 13 12 1 0 52 50 48 46 43 41 37 35 32 30 26 24 20 57 21 57 17 15 12 19 13 19 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,247,o),
(423,241,qs),
(423,236,o),
(418,231,qs),
(351,163,ls),
(347,159,o),
(342,159,qs),
(337,159,o),
(332,163,q),
(264,231,l),
(260,236,o),
(260,241,qs),
(260,246,o),
(264,250,qs),
(332,317,ls),
(337,322,o),
(342,322,qs),
(347,322,o),
(351,318,qs),
(418,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,o),
(303,10,qs),
(303,488,ls),
(303,556,o),
(364,556,qs),
(371,556,ls),
(379,556,o),
(379,548,qs),
(379,10,ls),
(379,0,o),
(369,0,qs),
(313,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,0,o),
(206,10,qs),
(206,372,ls),
(206,556,o),
(369,556,qs),
(463,556,ls),
(470,556,o),
(470,548,qs),
(470,542,ls),
(470,525,o),
(464,513,qs),
(452,486,o),
(410,486,qs),
(372,486,ls),
(325,486,o),
(282,433,o),
(282,376,qs),
(282,10,ls),
(282,0,o),
(272,0,qs),
(216,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,557,o),
(616,549,qs),
(616,439,ls),
(616,359,o),
(579,311,qs),
(537,256,o),
(460,256,qs),
(382,256,o),
(343,314,q),
(302,256,o),
(225,256,qs),
(179,256,o),
(143,277,q),
(143,10,ls),
(143,0,o),
(134,0,qs),
(77,0,ls),
(67,0,o),
(67,10,qs),
(67,488,l),
(70,556,o),
(128,556,qs),
(134,556,ls),
(143,556,o),
(143,548,qs),
(143,442,ls),
(143,331,o),
(225,331,qs),
(265,331,o),
(308,389,o),
(308,442,qs),
(308,492,ls),
(308,520,o),
(337,556,o),
(360,556,qs),
(367,556,ls),
(375,556,o),
(375,549,qs),
(375,442,ls),
(375,388,o),
(418,331,o),
(458,331,qs),
(497,331,o),
(541,388,o),
(541,440,qs),
(541,489,ls),
(541,557,o),
(601,557,qs),
(608,557,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 35 2 6 1 1 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 42 40 38 36 33 30 27 24 21 19 14 11 7 5 0 48 1 47 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,246,o),
(266,197,o),
(266,160,qs),
(266,118,o),
(321,71,o),
(371,71,qs),
(433,71,ls),
(462,71,o),
(497,42,o),
(497,18,qs),
(497,12,ls),
(497,0,o),
(485,0,qs),
(366,0,ls),
(299,0,o),
(253,29,qs),
(188,71,o),
(188,164,qs),
(188,201,o),
(225,266,o),
(257,284,q),
(195,323,o),
(195,403,qs),
(195,470,o),
(235,514,qs),
(281,564,o),
(359,564,qs),
(406,564,o),
(472,524,o),
(475,493,qs),
(477,474,o),
(463,474,qs),
(460,474,o),
(454,475,qs),
(451,476,o),
(449,477,qs),
(404,494,o),
(370,494,qs),
(327,494,o),
(273,445,o),
(273,407,qs),
(273,364,o),
(327,317,o),
(375,317,qs),
(433,317,ls),
(462,317,o),
(497,287,o),
(497,263,qs),
(497,257,ls),
(497,246,o),
(485,246,qs),
(362,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 39 36 25 23 20 18 14 12 8 5 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(514,97,o),
(473,47,qs),
(426,-10,o),
(341,-10,qs),
(266,-10,o),
(220,34,qs),
(167,85,o),
(167,178,qs),
(167,188,o),
(178,383,qs),
(182,463,o),
(219,510,qs),
(263,564,o),
(341,564,qs),
(409,564,o),
(451,523,qs),
(498,475,o),
(504,384,qs),
(515,178,l)
);
},
{
closed = 1;
nodes = (
(437,123,o),
(436,181,qs),
(426,378,ls),
(424,433,o),
(379,493,o),
(341,493,qs),
(303,493,o),
(258,433,o),
(255,378,qs),
(245,181,l),
(245,123,o),
(294,61,o),
(341,61,qs),
(388,61,o)
);
},
{
closed = 1;
nodes = (
(515,178,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
20 19 27 25 19 32 20 32 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(394,0,o),
(394,10,qs),
(395,376,ls),
(395,433,o),
(352,486,o),
(304,486,qs),
(267,486,ls),
(224,486,o),
(212,513,qs),
(206,525,o),
(206,542,qs),
(206,548,ls),
(206,556,o),
(213,556,qs),
(308,556,ls),
(470,556,o),
(470,372,qs),
(470,10,ls),
(470,0,o),
(460,0,qs),
(404,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 7 4 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,116,q),
(465,543,ls),
(468,556,o),
(477,556,qs),
(481,556,ls),
(508,556,o),
(537,515,o),
(532,485,qs),
(473,129,ls),
(450,-8,o),
(345,-8,qs),
(240,-8,o),
(217,129,qs),
(158,485,ls),
(153,515,o),
(182,556,o),
(209,556,qs),
(213,556,ls),
(223,556,o),
(225,543,qs),
(295,116,l),
(306,66,o),
(345,66,qs),
(384,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,0,o),
(148,17,qs),
(215,427,ls),
(238,564,o),
(344,564,qs),
(449,564,o),
(472,427,qs),
(540,17,ls),
(542,0,o),
(528,0,qs),
(479,0,ls),
(466,0,o),
(463,15,qs),
(394,441,l),
(383,491,o),
(344,491,qs),
(305,491,o),
(293,441,q),
(224,15,ls),
(222,0,o),
(208,0,qs),
(160,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(448,521,qs),
(503,469,o),
(503,378,qs),
(503,10,ls),
(503,0,o),
(493,0,qs),
(437,0,ls),
(426,0,o),
(426,10,qs),
(426,193,l),
(333,193,ls),
(265,193,o),
(218,237,qs),
(162,288,o),
(162,378,qs),
(162,457,o),
(206,508,qs),
(254,564,o),
(333,564,qs),
(401,564,o)
);
},
{
closed = 1;
nodes = (
(269,465,qs),
(240,433,o),
(240,378,qs),
(240,329,o),
(293,264,o),
(333,264,qs),
(426,264,l),
(426,379,ls),
(426,430,o),
(375,493,o),
(333,493,qs),
(294,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
34 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 96 5 1 4 4 24 4 78 1 0 37 35 33 30 23 21 15 12 8 5 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 6 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 5 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,-1,l),
(709,-1,ls),
(657,-1,o),
(634,17,q),
(613,-1,o),
(560,-1,qs),
(368,-1,l),
(368,0,l),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(520,74,l),
(495,94,o),
(463,162,o),
(462,200,qs),
(462,266,o),
(502,316,qs),
(552,377,o),
(634,377,qs),
(706,377,o),
(755,329,qs),
(807,277,o),
(807,200,qs),
(806,162,o),
(774,93,o),
(748,74,q),
(938,74,l)
);
},
{
closed = 1;
nodes = (
(729,162,o),
(728,201,qs),
(728,247,o),
(675,306,o),
(634,306,qs),
(597,306,o),
(571,281,qs),
(541,251,o),
(540,201,qs),
(540,162,o),
(594,93,o),
(634,82,q),
(674,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
37 1 3 1 1 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 7 5 2 1 1 3 96 4 1 3 3 24 3 78 0 0 50 48 0 41 0 41 34 87 38 38 38 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 929;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,331,qs),
(435,277,o),
(435,188,qs),
(435,112,o),
(393,60,qs),
(346,2,o),
(268,0,qs),
(-3,0,l),
(-3,74,l),
(129,74,l),
(94,115,o),
(93,188,qs),
(93,265,o),
(135,318,qs),
(184,377,o),
(264,377,qs),
(333,377,o)
);
},
{
closed = 1;
nodes = (
(331,107,qs),
(358,141,o),
(358,190,qs),
(358,232,o),
(337,264,qs),
(310,306,o),
(264,306,qs),
(223,306,o),
(197,273,qs),
(170,239,o),
(170,190,qs),
(170,148,o),
(191,116,qs),
(217,74,o),
(264,74,qs),
(305,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 26 24 17 32 18 32 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(566,0,l),
(338,0,ls),
(286,0,o),
(263,18,q),
(241,0,o),
(189,0,qs),
(-3,0,l),
(-3,74,l),
(150,74,l),
(124,94,o),
(92,163,o),
(91,201,qs),
(90,267,o),
(131,316,qs),
(181,377,o),
(263,377,qs),
(335,377,o),
(383,329,qs),
(436,278,o),
(435,201,qs),
(434,163,o),
(402,94,o),
(376,74,q),
(566,74,l)
);
},
{
closed = 1;
nodes = (
(358,163,o),
(357,201,qs),
(357,247,o),
(304,306,o),
(263,306,qs),
(226,306,o),
(200,281,qs),
(170,251,o),
(169,201,qs),
(168,163,o),
(223,94,o),
(263,82,q),
(303,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 32 30 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,502,o),
(133,521,qs),
(133,540,o),
(157,566,o),
(176,566,qs),
(195,566,o),
(220,540,o),
(220,521,qs),
(220,502,o),
(195,476,o),
(176,476,qs),
(158,476,o)
);
},
{
closed = 1;
nodes = (
(258,502,o),
(258,521,qs),
(258,540,o),
(284,566,o),
(303,566,qs),
(321,566,o),
(346,540,o),
(346,521,qs),
(346,502,o),
(321,476,o),
(303,476,qs),
(284,476,o)
);
},
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 7 97 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 58 56 50 62 51 62 48 46 44 42 36 33 32 29 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,247,o),
(423,241,qs),
(423,236,o),
(418,232,q),
(351,163,ls),
(347,159,o),
(342,159,qs),
(336,159,o),
(332,163,qs),
(264,232,ls),
(260,236,o),
(260,242,qs),
(260,247,o),
(264,251,qs),
(332,318,l),
(338,322,o),
(342,322,qs),
(348,322,o),
(351,318,q),
(418,251,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,o),
(303,10,qs),
(303,488,ls),
(303,556,o),
(364,556,qs),
(371,556,ls),
(379,556,o),
(379,548,qs),
(379,10,ls),
(379,0,o),
(369,0,qs),
(313,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,0,o),
(206,10,qs),
(206,372,ls),
(206,556,o),
(369,556,qs),
(463,556,ls),
(470,556,o),
(470,548,qs),
(470,542,ls),
(470,525,o),
(464,513,qs),
(452,486,o),
(410,486,qs),
(372,486,ls),
(325,486,o),
(282,433,o),
(282,376,qs),
(282,10,ls),
(282,0,o),
(272,0,qs),
(216,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,557,o),
(616,549,qs),
(616,439,ls),
(616,359,o),
(579,311,qs),
(537,256,o),
(460,256,qs),
(382,256,o),
(343,314,q),
(302,256,o),
(225,256,qs),
(179,256,o),
(143,277,q),
(143,10,ls),
(143,0,o),
(134,0,qs),
(77,0,ls),
(67,0,o),
(67,10,qs),
(67,488,l),
(70,556,o),
(128,556,qs),
(134,556,ls),
(143,556,o),
(143,548,qs),
(143,442,ls),
(143,331,o),
(225,331,qs),
(265,331,o),
(308,389,o),
(308,442,qs),
(308,492,ls),
(308,520,o),
(337,556,o),
(360,556,qs),
(367,556,ls),
(375,556,o),
(375,549,qs),
(375,442,ls),
(375,388,o),
(418,331,o),
(458,331,qs),
(497,331,o),
(541,388,o),
(541,440,qs),
(541,489,ls),
(541,557,o),
(601,557,qs),
(608,557,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 35 2 6 1 1 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 42 40 38 36 33 30 27 24 21 19 14 11 7 5 0 48 1 47 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(501,317,qs),
(495,280,o),
(427,235,o),
(379,236,qs),
(310,236,o),
(264,270,q),
(264,14,ls),
(264,0,o),
(250,0,qs),
(201,0,ls),
(188,0,o),
(188,14,qs),
(188,488,ls),
(188,533,o),
(217,548,qs),
(232,556,o),
(249,556,qs),
(255,556,ls),
(264,556,o),
(264,548,qs),
(264,518,l),
(309,565,o),
(376,564,qs),
(418,564,o),
(474,521,o),
(476,488,qs),
(477,471,o),
(464,471,qs),
(461,471,o),
(454,473,qs),
(452,474,o),
(451,474,q),
(401,492,o),
(372,492,qs),
(330,491,o),
(266,434,o),
(264,394,qs),
(264,386,ls),
(265,356,o),
(292,333,qs),
(327,304,o),
(382,303,qs),
(425,302,o),
(471,324,q),
(472,324,o),
(474,325,qs),
(486,330,o),
(491,331,q),
(504,331,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
27 1 1 3 42 1 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
27 1 1 4 42 1 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 48 0 48 35 53 51 35 36 38 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,147,qs),
(167,156,o),
(181,382,qs),
(187,462,o),
(224,510,qs),
(268,564,o),
(345,564,qs),
(412,564,o),
(454,522,qs),
(502,474,o),
(508,382,qs),
(523,156,o),
(523,147,qs),
(525,73,o),
(504,35,qs),
(478,-10,o),
(415,-10,qs),
(373,-10,o),
(347,19,qs),
(345,21,o),
(343,19,qs),
(318,-10,o),
(275,-10,qs),
(163,-10,o)
);
},
{
closed = 1;
nodes = (
(335,107,qs),
(337,121,o),
(345,121,qs),
(353,121,o),
(355,107,qs),
(362,63,o),
(397,63,qs),
(447,63,o),
(445,149,qs),
(445,181,o),
(432,376,qs),
(424,494,o),
(345,494,qs),
(265,494,o),
(257,376,qs),
(246,202,o),
(244,155,qs),
(244,150,o),
(244,149,qs),
(243,63,o),
(291,63,qs),
(328,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 6 4 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 43 41 39 37 33 31 24 45 25 45 17 15 7 5 0 23 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(506,278,o),
(480,266,q),
(394,233,o),
(335,175,qs),
(276,115,o),
(228,9,q),
(225,0,o),
(215,0,qs),
(157,0,ls),
(147,0,o),
(150,11,qs),
(164,71,o),
(237,191,o),
(285,234,q),
(234,250,o),
(204,292,qs),
(172,337,o),
(172,399,qs),
(172,470,o),
(213,515,qs),
(258,564,o),
(334,564,qs),
(378,564,o),
(441,522,o),
(442,490,qs),
(443,473,o),
(431,473,qs),
(427,473,o),
(417,477,qs),
(374,494,o),
(344,493,qs),
(302,493,o),
(248,438,o),
(248,394,qs),
(248,353,o),
(302,290,o),
(346,283,q),
(422,332,o),
(503,352,qs),
(514,355,o),
(518,343,qs),
(527,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
59 35 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,116,q),
(465,543,ls),
(468,556,o),
(477,556,qs),
(481,556,ls),
(508,556,o),
(537,515,o),
(532,485,qs),
(473,129,ls),
(450,-8,o),
(345,-8,qs),
(240,-8,o),
(217,129,qs),
(158,485,ls),
(153,515,o),
(182,556,o),
(209,556,qs),
(213,556,ls),
(223,556,o),
(225,543,qs),
(295,116,l),
(306,66,o),
(345,66,qs),
(384,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,0,o),
(148,17,qs),
(215,427,ls),
(238,564,o),
(344,564,qs),
(449,564,o),
(472,427,qs),
(540,17,ls),
(542,0,o),
(528,0,qs),
(479,0,ls),
(466,0,o),
(463,15,qs),
(394,441,l),
(383,491,o),
(344,491,qs),
(305,491,o),
(293,441,q),
(224,15,ls),
(222,0,o),
(208,0,qs),
(160,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(448,521,qs),
(503,469,o),
(503,378,qs),
(503,10,ls),
(503,0,o),
(493,0,qs),
(437,0,ls),
(426,0,o),
(426,10,qs),
(426,193,l),
(333,193,ls),
(265,193,o),
(218,237,qs),
(162,288,o),
(162,378,qs),
(162,457,o),
(206,508,qs),
(254,564,o),
(333,564,qs),
(401,564,o)
);
},
{
closed = 1;
nodes = (
(269,465,qs),
(240,433,o),
(240,378,qs),
(240,329,o),
(293,264,o),
(333,264,qs),
(426,264,l),
(426,379,ls),
(426,430,o),
(375,493,o),
(333,493,qs),
(294,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
34 1 0 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
34 1 1 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 10 0 7 0 10 7 128 0 4 0 3 2 4 3 105 6 1 2 1 18 2 0 10 2 0 105 20 14 2 12 15 1 13 16 12 13 106 0 9 0 11 17 9 11 105 21 1 16 0 17 16 17 101 0 7 7 5 95 8 19 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
18 1 0 1 10 1 0 10 128 0 10 7 1 10 7 126 0 4 0 3 2 4 3 105 6 1 2 0 1 0 2 1 103 20 14 2 12 15 1 13 16 12 13 106 0 9 0 11 17 9 11 105 21 1 16 0 17 16 17 101 0 7 7 5 95 8 19 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
115 114 103 102 41 40 1 0 121 119 114 125 115 125 109 107 102 113 103 113 100 98 94 92 86 84 77 75 67 65 62 60 56 53 49 46 40 89 41 89 30 28 19 17 14 11 8 5 0 39 1 39 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 1 5 1 133 0 5 2 5 133 14 9 2 7 10 1 8 11 7 8 106 0 4 0 6 12 4 6 105 15 1 11 0 12 11 12 101 0 2 2 0 95 3 13 2 0 0 24 0 78 75 74 63 62 1 0 81 79 74 85 75 85 69 67 62 73 63 73 60 58 54 52 46 44 37 35 27 25 22 20 16 13 9 6 0 49 1 49 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
0 1 5 1 133 0 5 2 5 133 18 9 2 7 10 1 8 11 7 8 106 0 4 0 6 12 4 6 105 19 1 11 0 12 13 11 12 105 21 15 20 3 13 16 1 14 13 14 101 0 2 2 0 95 3 17 2 0 0 24 0 78 99 98 87 86 75 74 63 62 1 0 105 103 98 109 99 109 93 91 86 97 87 97 81 79 74 85 75 85 69 67 62 73 63 73 60 58 54 52 46 44 37 35 27 25 22 20 16 13 9 6 0 49 1 49 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 106 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 95 8 7 2 3 3 24 3 78 82 81 70 69 1 0 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(861,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 106 0 4 0 6 14 4 6 105 21 1 13 0 14 15 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 95 8 7 2 3 3 24 3 78 106 105 94 93 82 81 70 69 1 0 112 110 105 116 106 116 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(883,358,o),
(883,350,qs),
(883,168,ls),
(883,76,o),
(827,32,q),
(825,29,o),
(819,23,qs),
(798,-1,o),
(781,-19,qs),
(757,-47,o),
(750,-70,q),
(768,-74,o),
(790,-101,o),
(790,-119,qs),
(789,-140,o),
(761,-169,o),
(741,-169,qs),
(720,-169,o),
(692,-141,o),
(692,-119,qs),
(690,-63,o),
(744,1,q),
(731,0,o),
(724,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(726,74,ls),
(764,74,o),
(807,124,o),
(807,169,qs),
(807,291,ls),
(807,358,o),
(867,358,qs),
(874,358,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
34 1 0 2 84 1 7 6 95 1 8 7 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
34 1 1 2 84 1 7 6 95 1 8 7 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 0 3 2 4 3 105 14 5 2 2 1 13 2 0 9 2 0 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
13 1 0 1 9 1 0 9 128 0 9 6 1 9 6 126 0 12 8 10 8 12 10 128 0 4 0 3 2 4 3 105 14 5 2 2 0 1 0 2 1 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
41 40 1 0 90 88 83 81 78 76 69 67 59 57 54 52 48 45 40 106 41 105 30 28 19 17 14 11 8 5 0 39 1 39 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 948;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(883,358,o),
(883,350,qs),
(883,168,ls),
(883,76,o),
(827,32,q),
(825,29,o),
(819,23,qs),
(798,-1,o),
(781,-19,qs),
(757,-47,o),
(750,-70,q),
(768,-74,o),
(790,-101,o),
(790,-119,qs),
(789,-140,o),
(761,-169,o),
(741,-169,qs),
(720,-169,o),
(692,-141,o),
(692,-119,qs),
(690,-63,o),
(744,1,q),
(731,0,o),
(724,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(726,74,ls),
(764,74,o),
(807,124,o),
(807,169,qs),
(807,291,ls),
(807,358,o),
(867,358,qs),
(874,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
44 1 2 1 55 1 3 2 2 76 8 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 1 0 50 48 43 41 38 36 29 27 19 17 14 12 8 5 0 66 1 65 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 948;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(883,358,o),
(883,350,qs),
(883,168,ls),
(883,77,o),
(827,32,qs),
(825,30,o),
(819,23,qs),
(798,0,o),
(781,-19,qs),
(757,-47,o),
(750,-70,q),
(768,-74,o),
(790,-101,o),
(790,-119,qs),
(789,-140,o),
(761,-169,o),
(741,-169,qs),
(720,-169,o),
(692,-141,o),
(692,-119,qs),
(690,-63,o),
(744,1,q),
(730,0,o),
(724,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(726,74,ls),
(764,74,o),
(807,124,o),
(807,169,qs),
(807,291,ls),
(807,358,o),
(867,358,qs),
(874,358,ls)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
55 1 3 2 1 76 12 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 80 79 68 67 1 0 86 84 79 90 80 90 74 72 67 78 68 78 50 48 44 41 38 36 29 27 19 17 14 12 8 5 0 66 1 65 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 948;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 5 1 133 0 5 2 5 133 12 9 2 7 10 1 8 6 7 8 106 0 4 0 6 4 6 101 0 2 2 0 95 3 11 2 0 0 24 0 78 63 62 1 0 69 67 62 73 63 73 60 58 54 52 46 44 37 35 27 25 22 20 16 13 9 6 0 49 1 49 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 6 9 10 106 0 4 0 6 4 6 101 2 13 2 0 0 3 95 8 7 2 3 3 24 3 78 70 69 1 0 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(876,358,o),
(876,350,qs),
(876,168,ls),
(876,94,o),
(839,50,qs),
(797,0,o),
(717,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(719,74,ls),
(757,74,o),
(800,124,o),
(800,169,qs),
(800,291,ls),
(800,358,o),
(860,358,qs),
(868,358,ls)
);
},
{
closed = 1;
nodes = (
(779,-98,o),
(779,-119,qs),
(779,-140,o),
(750,-169,o),
(730,-169,qs),
(709,-169,o),
(680,-140,o),
(680,-119,qs),
(680,-98,o),
(709,-69,o),
(730,-69,qs),
(751,-69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
34 1 0 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
34 1 1 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 9 0 6 0 9 6 128 0 4 0 3 2 4 3 105 15 5 2 2 1 14 2 0 9 2 0 105 16 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
14 1 0 1 9 1 0 9 128 0 9 6 1 9 6 126 0 4 0 3 2 4 3 105 15 5 2 2 0 1 0 2 1 103 16 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
91 90 41 40 1 0 97 95 90 101 91 101 83 81 78 76 69 67 59 57 54 52 48 45 40 89 41 88 30 28 19 17 14 11 8 5 0 39 1 39 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,309,qs),
(232,328,o),
(252,353,o),
(274,356,qs),
(275,356,l),
(264,375,o),
(264,395,qs),
(264,428,o),
(307,472,o),
(339,472,qs),
(366,473,o),
(403,445,o),
(404,424,qs),
(404,413,o),
(396,414,q),
(394,415,o),
(388,417,q),
(385,419,o),
(384,419,q),
(366,428,o),
(349,428,qs),
(311,428,o),
(311,394,qs),
(311,379,o),
(331,358,o),
(346,358,qs),
(390,358,ls),
(425,358,o),
(425,326,qs),
(425,322,ls),
(425,314,o),
(416,314,qs),
(309,314,ls),
(274,314,o),
(256,307,qs),
(253,306,o),
(250,304,qs),
(245,302,o),
(243,302,qs),
(238,302,o)
);
},
{
closed = 1;
nodes = (
(595,-95,o),
(523,-152,qs),
(445,-214,o),
(329,-214,qs),
(208,-214,o),
(128,-147,qs),
(42,-73,o),
(43,41,qs),
(43,101,o),
(94,205,o),
(138,234,qs),
(145,238,o),
(152,238,qs),
(164,238,o),
(164,227,qs),
(164,221,o),
(159,214,qs),
(115,139,o),
(116,56,qs),
(118,-30,o),
(171,-83,qs),
(230,-143,o),
(329,-143,qs),
(403,-143,o),
(455,-110,qs),
(516,-72,o),
(535,0,q),
(418,0,ls),
(404,0,o),
(404,12,qs),
(404,19,ls),
(404,44,o),
(442,74,o),
(471,74,qs),
(701,74,ls),
(739,74,o),
(781,124,o),
(781,169,qs),
(781,291,ls),
(781,358,o),
(842,358,qs),
(849,358,ls),
(858,358,o),
(858,350,qs),
(858,168,ls),
(858,94,o),
(820,50,qs),
(778,0,o),
(699,0,qs),
(612,0,l)
);
},
{
closed = 1;
nodes = (
(753,-100,o),
(753,-119,qs),
(753,-139,o),
(727,-165,o),
(708,-165,qs),
(690,-165,o),
(665,-139,o),
(665,-119,qs),
(665,-100,o),
(690,-75,o),
(708,-75,qs),
(727,-75,o)
);
},
{
closed = 1;
nodes = (
(878,-100,o),
(878,-119,qs),
(878,-139,o),
(853,-165,o),
(835,-165,qs),
(816,-165,o),
(790,-139,o),
(790,-119,qs),
(790,-101,o),
(816,-75,o),
(835,-75,qs),
(853,-75,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
34 1 0 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
34 1 1 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 0 7 0 10 7 128 0 4 0 3 2 4 3 105 6 1 2 1 16 2 0 10 2 0 105 19 14 18 3 12 15 1 13 11 12 13 106 0 9 0 11 9 11 101 0 7 7 5 95 8 17 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
16 1 0 1 10 1 0 10 128 0 10 7 1 10 7 126 0 4 0 3 2 4 3 105 6 1 2 0 1 0 2 1 103 19 14 18 3 12 15 1 13 11 12 13 106 0 9 0 11 9 11 101 0 7 7 5 95 8 17 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
103 102 91 90 41 40 1 0 109 107 102 113 103 113 97 95 90 101 91 101 86 84 77 75 67 65 62 60 56 53 49 46 40 89 41 89 30 28 19 17 14 11 8 5 0 39 1 39 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 923;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
34 1 0 2 92 1 8 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
34 1 1 2 92 1 8 5 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 10 0 5 0 10 5 128 0 4 0 3 2 4 3 105 6 1 2 1 18 2 0 10 2 0 105 21 16 20 3 14 17 1 15 11 14 15 106 0 9 0 11 9 11 101 7 19 2 5 5 8 95 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
18 1 0 1 10 1 0 10 128 0 10 5 1 10 5 126 0 4 0 3 2 4 3 105 6 1 2 0 1 0 2 1 103 21 16 20 3 14 17 1 15 11 14 15 106 0 9 0 11 9 11 101 7 19 2 5 5 8 95 13 12 2 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
110 109 98 97 41 40 1 0 116 114 109 120 110 120 104 102 97 108 98 108 95 93 91 89 86 84 77 75 67 65 62 60 56 52 48 45 40 96 41 96 30 28 19 17 14 11 8 5 0 39 1 39 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,714,o),
(243,688,qs),
(243,659,o),
(199,620,o),
(167,620,qs),
(144,620,o),
(107,635,qs),
(77,647,o),
(65,647,qs),
(54,647,o),
(45,634,q),
(43,632,o),
(41,629,qs),
(36,621,o),
(34,620,qs),
(32,619,o),
(30,619,qs),
(26,619,o),
(23,623,qs),
(16,634,o),
(16,647,qs),
(16,665,o),
(41,691,o),
(58,691,qs),
(70,691,o),
(84,687,qs),
(88,686,o),
(89,686,qs),
(92,686,o),
(94,689,qs),
(128,747,o),
(178,747,qs),
(207,747,o)
);
},
{
closed = 1;
nodes = (
(200,689,qs),
(200,707,o),
(177,707,qs),
(154,707,o),
(132,671,q),
(150,662,o),
(168,662,qs),
(200,662,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
35 4 2 4 1 1 76 6 1 0 0 5 1 0 5 105 7 1 4 2 3 4 89 0 1 0 2 3 1 2 105 7 1 4 4 3 97 0 3 4 3 81 34 33 1 0 38 36 33 40 34 40 28 26 24 22 9 7 0 32 1 32 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,470,o),
(118,489,qs),
(118,508,o),
(142,534,o),
(161,534,qs),
(180,534,o),
(205,508,o),
(205,489,qs),
(205,470,o),
(180,444,o),
(161,444,qs),
(142,444,o)
);
},
{
closed = 1;
nodes = (
(243,470,o),
(243,489,qs),
(243,508,o),
(269,534,o),
(288,534,qs),
(306,534,o),
(331,508,o),
(331,489,qs),
(331,470,o),
(306,444,o),
(288,444,qs),
(269,444,o)
);
},
{
closed = 1;
nodes = (
(536,0,l),
(398,0,l),
(391,-74,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(310,-141,o),
(324,0,q),
(227,0,ls),
(158,0,o),
(110,46,qs),
(56,98,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(336,377,o),
(378,276,qs),
(400,223,o),
(402,132,qs),
(402,92,o),
(402,74,q),
(536,74,l)
);
},
{
closed = 1;
nodes = (
(328,199,o),
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,137,o),
(188,74,o),
(228,74,qs),
(323,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 7 5 6 5 7 6 128 3 1 1 14 2 13 3 0 4 1 0 105 0 4 0 12 10 4 12 105 0 6 0 8 6 8 101 16 11 15 3 10 10 5 95 9 1 5 5 24 5 78 58 57 24 24 13 12 1 0 65 63 57 68 58 68 24 56 24 56 55 54 51 49 46 44 42 40 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,600,o),
(157,600,qs),
(192,600,o),
(205,568,qs),
(225,521,l),
(245,568,ls),
(258,600,o),
(293,600,qs),
(307,600,o),
(303,589,qs),
(255,472,ls),
(250,461,o),
(239,461,qs),
(212,461,ls),
(200,461,o),
(195,472,qs),
(148,589,ls)
);
},
{
closed = 1;
nodes = (
(536,0,l),
(398,0,l),
(391,-74,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(310,-141,o),
(324,0,q),
(227,0,ls),
(158,0,o),
(110,46,qs),
(56,98,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(336,377,o),
(378,276,qs),
(400,223,o),
(402,132,qs),
(402,92,o),
(402,74,q),
(536,74,l)
);
},
{
closed = 1;
nodes = (
(328,199,o),
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,137,o),
(188,74,o),
(228,74,qs),
(323,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
11 1 0 1 1 76 2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 11 9 3 11 106 0 5 0 7 5 7 101 13 10 12 3 9 9 4 95 8 1 4 4 24 4 78 51 50 17 17 58 56 50 61 51 61 17 49 17 49 19 35 34 33 38 39 36 35 49 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,572,qs),
(863,455,ls),
(859,444,o),
(847,444,qs),
(820,444,ls),
(808,444,o),
(804,455,qs),
(756,572,ls),
(752,583,o),
(765,583,qs),
(800,583,o),
(814,551,qs),
(834,504,l),
(853,551,ls),
(867,583,o),
(902,583,qs),
(915,583,o)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
3 1 2 0 1 76 1 14 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 15 2 3 10 5 3 103 0 7 11 9 7 89 17 12 16 3 10 13 1 11 9 10 11 105 0 7 7 9 97 0 9 7 9 81 80 79 68 67 18 17 1 0 86 84 79 90 80 90 74 72 67 78 68 78 63 61 54 52 44 42 39 37 33 30 26 23 17 66 18 66 13 10 7 5 0 16 1 16 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(738,582,o),
(752,582,qs),
(787,582,o),
(800,550,qs),
(820,503,l),
(840,550,ls),
(853,582,o),
(888,582,qs),
(902,582,o),
(898,571,qs),
(850,454,ls),
(845,443,o),
(834,443,qs),
(807,443,ls),
(795,443,o),
(790,454,qs),
(743,571,ls)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
11 1 0 1 69 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 9 12 13 106 0 7 0 9 7 9 101 5 16 2 3 3 6 96 11 10 2 6 6 24 6 78 87 86 75 74 18 17 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 54 52 44 42 39 37 33 29 25 22 17 73 18 73 36 35 49 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,572,qs),
(863,455,ls),
(859,444,o),
(847,444,qs),
(820,444,ls),
(808,444,o),
(804,455,qs),
(756,572,ls),
(752,583,o),
(765,583,qs),
(800,583,o),
(814,551,qs),
(834,504,l),
(853,551,ls),
(867,583,o),
(902,583,qs),
(915,583,o)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(298,-364,o),
(279,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(279,-274,qs),
(298,-274,o),
(323,-299,o),
(323,-318,qs),
(323,-338,o)
);
},
{
closed = 1;
nodes = (
(449,-299,o),
(449,-318,qs),
(449,-338,o),
(424,-364,o),
(405,-364,qs),
(387,-364,o),
(361,-338,o),
(361,-318,qs),
(361,-299,o),
(386,-274,o),
(405,-274,qs),
(424,-274,o)
);
},
{
closed = 1;
nodes = (
(388,-395,o),
(388,-414,qs),
(388,-433,o),
(363,-459,o),
(344,-459,qs),
(325,-459,o),
(300,-433,o),
(300,-414,qs),
(300,-395,o),
(325,-369,o),
(344,-369,qs),
(363,-369,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 147 values pushed */
3 1 2 0 1 76 1 20 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 23 12 22 3 10 13 1 11 9 10 11 106 0 7 0 9 14 7 9 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 0 5 5 3 96 6 21 2 3 3 24 3 78 116 115 104 103 80 79 68 67 18 17 1 0 122 120 115 126 116 126 110 108 103 114 104 114 101 99 95 93 86 84 79 90 80 90 74 72 67 78 68 78 63 61 54 52 44 42 39 37 33 30 26 23 17 66 18 66 13 10 7 5 0 16 1 16 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(738,582,o),
(752,582,qs),
(787,582,o),
(800,550,qs),
(820,503,l),
(840,550,ls),
(853,582,o),
(888,582,qs),
(902,582,o),
(898,571,qs),
(850,454,ls),
(845,443,o),
(834,443,qs),
(807,443,ls),
(795,443,o),
(790,454,qs),
(743,571,ls)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(298,-364,o),
(279,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(279,-274,qs),
(298,-274,o),
(323,-299,o),
(323,-318,qs),
(323,-338,o)
);
},
{
closed = 1;
nodes = (
(449,-299,o),
(449,-318,qs),
(449,-338,o),
(424,-364,o),
(405,-364,qs),
(387,-364,o),
(361,-338,o),
(361,-318,qs),
(361,-299,o),
(386,-274,o),
(405,-274,qs),
(424,-274,o)
);
},
{
closed = 1;
nodes = (
(388,-395,o),
(388,-414,qs),
(388,-433,o),
(363,-459,o),
(344,-459,qs),
(325,-459,o),
(300,-433,o),
(300,-414,qs),
(300,-395,o),
(325,-369,o),
(344,-369,qs),
(363,-369,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 149 values pushed */
11 1 0 1 69 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 9 12 13 106 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 96 11 10 2 6 6 24 6 78 123 122 111 110 87 86 75 74 18 17 129 127 122 133 123 133 117 115 110 121 111 121 108 106 102 100 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 54 52 44 42 39 37 33 29 25 22 17 73 18 73 36 35 49 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,572,qs),
(863,455,ls),
(859,444,o),
(847,444,qs),
(820,444,ls),
(808,444,o),
(804,455,qs),
(756,572,ls),
(752,583,o),
(765,583,qs),
(800,583,o),
(814,551,qs),
(834,504,l),
(853,551,ls),
(867,583,o),
(902,583,qs),
(915,583,o)
);
},
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 157 values pushed */
3 1 7 0 51 1 4 5 2 76 1 19 2 0 7 0 133 0 2 7 6 7 2 6 128 20 1 3 4 13 4 3 13 128 0 13 10 4 13 10 126 0 7 0 6 5 7 6 105 9 1 5 0 4 3 5 4 103 0 10 11 21 2 8 15 10 8 103 0 12 16 14 12 89 23 17 22 3 15 18 1 16 14 15 16 105 0 12 12 14 97 0 14 12 14 81 120 119 108 107 58 57 18 17 1 0 126 124 119 130 120 130 114 112 107 118 108 118 103 101 94 92 84 82 79 77 73 70 66 63 57 106 58 106 47 45 36 34 31 28 25 22 17 56 18 56 13 10 7 5 0 16 1 16 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(738,582,o),
(752,582,qs),
(787,582,o),
(800,550,qs),
(820,503,l),
(840,550,ls),
(853,582,o),
(888,582,qs),
(902,582,o),
(898,571,qs),
(850,454,ls),
(845,443,o),
(834,443,qs),
(807,443,ls),
(795,443,o),
(790,454,qs),
(743,571,ls)
);
},
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
11 1 7 1 51 1 3 5 109 1 11 8 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
11 1 7 1 51 1 4 5 109 1 11 8 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
2 1 1 7 1 133 0 0 7 6 7 0 6 128 0 13 3 8 3 13 8 128 0 7 0 6 5 7 6 105 9 1 5 4 21 2 3 13 5 3 105 24 19 23 3 17 20 1 18 14 17 18 106 0 12 0 14 12 14 101 10 22 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
2 1 1 7 1 133 0 0 7 6 7 0 6 128 21 1 3 4 13 4 3 13 128 0 13 8 4 13 8 126 0 7 0 6 5 7 6 105 9 1 5 0 4 3 5 4 103 24 19 23 3 17 20 1 18 14 17 18 106 0 12 0 14 12 14 101 10 22 2 8 8 11 96 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 58 values pushed */
127 126 115 114 58 57 18 17 133 131 126 137 127 137 121 119 114 125 115 125 112 110 108 106 103 101 94 92 84 82 79 77 73 69 65 62 57 113 58 113 47 45 36 34 31 28 25 22 17 56 18 56 36 35 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(911,572,qs),
(863,455,ls),
(859,444,o),
(847,444,qs),
(820,444,ls),
(808,444,o),
(804,455,qs),
(756,572,ls),
(752,583,o),
(765,583,qs),
(800,583,o),
(814,551,qs),
(834,504,l),
(853,551,ls),
(867,583,o),
(902,583,qs),
(915,583,o)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 144 values pushed */
3 1 2 0 1 76 1 18 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 19 2 3 10 5 3 103 21 12 20 3 10 13 1 11 9 10 11 105 0 7 0 9 14 7 9 105 23 16 22 3 14 15 15 14 89 23 16 22 3 14 14 15 97 17 1 15 14 15 81 104 103 92 91 80 79 68 67 18 17 1 0 110 108 103 114 104 114 98 96 91 102 92 102 86 84 79 90 80 90 74 72 67 78 68 78 63 61 54 52 44 42 39 37 33 30 26 23 17 66 18 66 13 10 7 5 0 16 1 16 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(738,582,o),
(752,582,qs),
(787,582,o),
(800,550,qs),
(820,503,l),
(840,550,ls),
(853,582,o),
(888,582,qs),
(902,582,o),
(898,571,qs),
(850,454,ls),
(845,443,o),
(834,443,qs),
(807,443,ls),
(795,443,o),
(790,454,qs),
(743,571,ls)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(861,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 137 values pushed */
11 1 0 1 69 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 9 12 13 106 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 96 11 10 2 6 6 24 6 78 111 110 99 98 87 86 75 74 18 17 117 115 110 121 111 121 105 103 98 109 99 109 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 54 52 44 42 39 37 33 29 25 22 17 73 18 73 36 35 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(905,572,qs),
(858,455,ls),
(853,444,o),
(842,444,qs),
(814,444,ls),
(803,444,o),
(798,455,qs),
(750,572,ls),
(746,583,o),
(760,583,qs),
(795,583,o),
(808,551,qs),
(828,504,l),
(848,551,ls),
(861,583,o),
(896,583,qs),
(910,583,o)
);
},
{
closed = 1;
nodes = (
(267,454,o),
(281,454,qs),
(316,454,o),
(329,422,qs),
(349,375,l),
(369,422,ls),
(382,454,o),
(417,454,qs),
(431,454,o),
(427,443,qs),
(379,326,ls),
(374,315,o),
(363,315,qs),
(335,315,ls),
(324,315,o),
(319,326,qs),
(272,443,ls)
);
},
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 134 values pushed */
3 1 4 0 28 1 7 2 2 76 1 17 2 0 4 0 133 5 1 4 2 4 133 0 2 7 2 133 0 7 3 7 133 0 3 11 3 133 0 11 8 11 133 0 8 9 18 2 6 13 8 6 103 0 10 14 12 10 89 20 15 19 3 13 16 1 14 12 13 14 105 0 10 10 12 97 0 12 10 12 81 97 96 85 84 35 34 1 0 103 101 96 107 97 107 91 89 84 95 85 95 80 78 71 69 61 59 56 54 50 47 43 40 34 83 35 83 32 30 26 24 21 18 13 10 7 5 0 16 1 16 21 6 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(738,582,o),
(752,582,qs),
(787,582,o),
(800,550,qs),
(820,503,l),
(840,550,ls),
(853,582,o),
(888,582,qs),
(902,582,o),
(898,571,qs),
(850,454,ls),
(845,443,o),
(834,443,qs),
(807,443,ls),
(795,443,o),
(790,454,qs),
(743,571,ls)
);
},
{
closed = 1;
nodes = (
(267,454,o),
(281,454,qs),
(316,454,o),
(329,422,qs),
(349,375,l),
(369,422,ls),
(382,454,o),
(417,454,qs),
(431,454,o),
(427,443,qs),
(379,326,ls),
(374,315,o),
(363,315,qs),
(335,315,ls),
(324,315,o),
(319,326,qs),
(272,443,ls)
);
},
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 127 values pushed */
11 1 4 1 28 1 7 0 86 1 9 6 3 76 2 1 1 4 1 133 5 1 4 0 4 133 0 0 7 0 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 12 15 16 106 0 10 0 12 10 12 101 8 19 2 6 6 9 96 14 13 2 9 9 24 9 78 104 103 92 91 35 34 110 108 103 114 104 114 98 96 91 102 92 102 89 87 85 83 80 78 71 69 61 59 56 54 50 46 42 39 34 90 35 90 36 35 51 36 35 49 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,454,o),
(281,454,qs),
(316,454,o),
(329,422,qs),
(349,375,l),
(369,422,ls),
(382,454,o),
(417,454,qs),
(431,454,o),
(427,443,qs),
(379,326,ls),
(374,315,o),
(363,315,qs),
(335,315,ls),
(324,315,o),
(319,326,qs),
(272,443,ls)
);
},
{
closed = 1;
nodes = (
(642,0,l),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
11 1 0 1 1 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 9 1 3 3 4 96 8 1 4 4 24 4 78 18 17 52 51 48 46 39 37 29 27 24 22 17 53 18 53 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 633;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,571,qs),
(176,453,ls),
(171,442,o),
(160,442,qs),
(132,442,ls),
(121,442,o),
(116,453,qs),
(69,571,ls),
(64,582,o),
(78,582,qs),
(113,582,o),
(126,549,qs),
(146,502,l),
(166,549,ls),
(179,582,o),
(214,582,qs),
(228,582,o)
);
},
{
closed = 1;
nodes = (
(181,94,o),
(144,50,qs),
(101,0,o),
(22,0,qs),
(-4,0,l),
(-4,74,l),
(24,74,ls),
(62,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(165,358,qs),
(172,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls)
);
},
{
closed = 1;
nodes = (
(76,-100,o),
(76,-119,qs),
(76,-139,o),
(50,-165,o),
(31,-165,qs),
(13,-165,o),
(-12,-139,o),
(-12,-119,qs),
(-12,-100,o),
(13,-75,o),
(31,-75,qs),
(50,-75,o)
);
},
{
closed = 1;
nodes = (
(201,-100,o),
(201,-119,qs),
(201,-139,o),
(176,-165,o),
(158,-165,qs),
(139,-165,o),
(114,-139,o),
(114,-119,qs),
(114,-100,o),
(139,-75,o),
(158,-75,qs),
(177,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
3 1 2 0 1 76 1 10 2 0 2 0 133 0 2 3 2 133 0 3 4 3 133 12 8 11 3 6 9 1 7 6 7 102 0 4 4 5 98 0 5 5 24 5 78 47 46 35 34 1 0 53 51 46 57 47 57 41 39 34 45 35 45 30 28 27 25 21 18 13 10 7 5 0 16 1 16 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,582,o),
(79,582,qs),
(114,582,o),
(127,549,qs),
(147,502,l),
(166,549,ls),
(180,582,o),
(215,582,qs),
(229,582,o),
(224,571,qs),
(176,453,ls),
(172,442,o),
(160,442,qs),
(133,442,ls),
(122,442,o),
(117,453,qs),
(69,571,ls)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
},
{
closed = 1;
nodes = (
(92,-100,o),
(92,-119,qs),
(92,-139,o),
(66,-165,o),
(48,-165,qs),
(29,-165,o),
(4,-139,o),
(4,-119,qs),
(4,-100,o),
(29,-75,o),
(48,-75,qs),
(67,-75,o)
);
},
{
closed = 1;
nodes = (
(218,-100,o),
(218,-119,qs),
(218,-139,o),
(193,-165,o),
(174,-165,qs),
(155,-165,o),
(130,-139,o),
(130,-119,qs),
(130,-100,o),
(155,-75,o),
(174,-75,qs),
(193,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
11 1 0 1 35 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 102 5 12 2 3 3 6 98 7 1 6 6 24 6 78 53 52 41 40 18 17 59 57 52 63 53 63 47 45 40 51 41 51 38 36 34 32 31 29 25 22 17 39 18 39 36 35 49 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(648,755,qs),
(645,764,o),
(645,773,qs),
(645,792,o),
(661,802,qs),
(666,805,o),
(669,806,qs),
(677,809,o),
(682,803,qs),
(692,790,o),
(695,760,qs),
(701,702,o),
(680,675,qs),
(674,667,o),
(668,667,qs),
(663,667,o),
(662,683,qs),
(661,707,o)
);
},
{
closed = 1;
nodes = (
(539,577,qs),
(539,583,ls),
(539,630,o),
(575,630,qs),
(582,630,ls),
(588,630,o),
(588,623,qs),
(588,572,ls),
(588,534,o),
(618,534,qs),
(647,534,o),
(647,572,qs),
(647,583,ls),
(647,630,o),
(683,630,qs),
(689,630,ls),
(696,630,o),
(696,623,qs),
(696,572,ls),
(696,534,o),
(725,534,qs),
(755,534,o),
(755,572,qs),
(755,583,ls),
(755,630,o),
(791,630,qs),
(798,630,ls),
(804,630,o),
(804,623,qs),
(804,577,ls),
(804,536,o),
(763,490,o),
(726,490,qs),
(691,490,o),
(672,511,q),
(651,490,o),
(619,490,qs),
(539,490,o)
);
},
{
closed = 1;
nodes = (
(1021,431,o),
(1021,423,qs),
(1021,168,ls),
(1021,94,o),
(984,50,qs),
(942,0,o),
(862,0,qs),
(784,0,ls),
(711,0,o),
(672,51,q),
(630,0,o),
(550,0,qs),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(552,74,ls),
(590,74,o),
(633,124,o),
(633,169,qs),
(633,363,ls),
(633,431,o),
(693,431,qs),
(700,431,ls),
(709,431,o),
(709,423,qs),
(709,168,ls),
(709,124,o),
(752,74,o),
(789,74,qs),
(864,74,ls),
(902,74,o),
(945,124,o),
(945,169,qs),
(945,363,ls),
(945,431,o),
(1005,431,qs),
(1013,431,ls)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
20 1 1 4 103 98 2 14 9 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
20 1 1 4 103 98 2 14 17 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
20 1 1 4 103 98 2 15 17 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 0 3 0 133 7 5 2 3 4 4 3 112 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 21 17 11 3 9 9 14 95 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 21 17 11 3 9 9 14 95 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 11 1 9 9 14 95 16 15 2 14 14 24 77 21 1 17 17 14 95 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 11 1 9 9 15 95 16 1 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 21 1 17 0 14 17 14 101 11 1 9 9 15 95 16 1 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
115 114 57 56 19 18 122 120 114 126 115 126 107 104 102 99 97 95 89 86 85 82 78 75 71 68 64 61 56 113 57 112 52 49 46 44 41 38 35 33 30 27 23 21 18 55 19 55 33 22 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1087;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o),
(767,-100,o),
(767,-119,qs),
(767,-139,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(831,-196,o),
(831,-214,qs),
(831,-234,o),
(806,-259,o),
(788,-259,qs),
(769,-259,o),
(744,-234,o),
(744,-214,qs),
(744,-196,o),
(770,-171,o),
(788,-171,qs),
(806,-171,o)
);
},
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
127 1 15 1 52 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
127 1 16 1 52 1 3 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 5 15 0 15 5 0 128 0 19 0 18 1 19 18 105 17 1 1 16 23 2 15 5 1 15 105 21 11 2 9 12 1 10 13 9 10 106 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 95 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
23 1 15 16 5 16 15 5 128 0 5 0 16 5 0 126 0 19 0 18 1 19 18 105 17 1 1 0 16 15 1 16 103 21 11 2 9 12 1 10 13 9 10 106 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 95 8 7 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
94 93 82 81 70 69 1 0 123 121 112 110 107 104 101 98 93 132 94 132 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 97 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 34 32 26 38 27 38 24 22 20 18 12 9 8 5 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,565,o),
(230,584,qs),
(230,604,o),
(256,630,o),
(275,630,qs),
(293,630,o),
(318,604,o),
(318,584,qs),
(318,565,o),
(293,540,o),
(275,540,qs),
(256,540,o)
);
},
{
closed = 1;
nodes = (
(166,470,o),
(166,489,qs),
(166,508,o),
(191,534,o),
(209,534,qs),
(228,534,o),
(254,508,o),
(254,489,qs),
(254,470,o),
(228,444,o),
(209,444,qs),
(191,444,o)
);
},
{
closed = 1;
nodes = (
(317,534,o),
(336,534,qs),
(354,534,o),
(379,508,o),
(379,489,qs),
(379,470,o),
(355,444,o),
(336,444,qs),
(317,444,o),
(292,470,o),
(292,489,qs),
(292,508,o)
);
},
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-69,o),
(111,24,o),
(161,49,q),
(131,72,o),
(95,148,o),
(95,188,qs),
(95,268,o),
(144,320,qs),
(197,377,o),
(283,377,qs),
(336,377,o),
(410,332,o),
(413,298,qs),
(414,277,o),
(400,277,qs),
(396,277,o),
(387,282,qs),
(339,306,o),
(292,306,qs),
(244,306,o),
(212,279,qs),
(173,247,o),
(172,188,qs),
(172,148,o),
(195,117,qs),
(225,74,o),
(280,74,qs),
(400,74,ls),
(430,74,o),
(467,43,o),
(467,18,qs),
(467,12,ls),
(467,0,o),
(453,0,qs),
(275,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
57 1 9 8 67 1 6 7 2 76 0 9 8 7 8 9 7 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 10 3 2 105 0 10 0 8 9 10 8 105 0 7 15 1 6 12 7 6 103 0 12 11 11 12 89 0 12 12 11 97 0 11 12 11 81 37 36 13 12 1 0 86 84 75 73 61 59 56 54 52 50 44 41 36 93 37 92 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,566,o),
(252,584,qs),
(252,604,o),
(278,630,o),
(296,630,qs),
(315,630,o),
(340,604,o),
(340,584,qs),
(340,565,o),
(315,540,o),
(296,540,qs),
(278,540,o)
);
},
{
closed = 1;
nodes = (
(188,470,o),
(188,489,qs),
(188,508,o),
(212,534,o),
(231,534,qs),
(250,534,o),
(275,508,o),
(275,489,qs),
(275,470,o),
(250,444,o),
(231,444,qs),
(212,444,o)
);
},
{
closed = 1;
nodes = (
(339,534,o),
(358,534,qs),
(376,534,o),
(401,508,o),
(401,489,qs),
(401,470,o),
(376,444,o),
(358,444,qs),
(339,444,o),
(313,470,o),
(313,489,qs),
(313,508,o)
);
},
{
closed = 1;
nodes = (
(160,-38,qs),
(123,-75,o),
(124,-130,qs),
(124,-180,o),
(155,-215,qs),
(195,-258,o),
(270,-260,qs),
(322,-261,o),
(366,-248,qs),
(392,-241,o),
(429,-221,qs),
(442,-214,o),
(455,-226,o),
(450,-240,qs),
(432,-283,o),
(380,-307,qs),
(328,-332,o),
(260,-331,qs),
(166,-330,o),
(107,-277,qs),
(42,-220,o),
(42,-127,qs),
(42,-57,o),
(81,-6,qs),
(127,55,o),
(211,70,q),
(117,192,ls),
(96,219,o),
(95,249,qs),
(94,300,o),
(150,337,qs),
(211,377,o),
(295,377,qs),
(367,378,o),
(425,346,qs),
(497,308,o),
(495,249,qs),
(494,218,o),
(474,192,qs),
(384,74,l),
(621,74,l),
(621,0,l),
(363,0,ls),
(318,0,o),
(296,16,q),
(278,2,o),
(250,-1,qs),
(195,-4,o)
);
},
{
closed = 1;
nodes = (
(203,202,qs),
(289,89,ls),
(295,81,o),
(301,89,qs),
(388,202,ls),
(406,225,o),
(406,239,qs),
(406,262,o),
(381,281,qs),
(349,306,o),
(295,306,qs),
(250,306,o),
(184,267,o),
(184,239,qs),
(184,225,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
57 38 2 6 7 1 76 15 1 11 6 10 6 11 10 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 8 3 2 105 0 8 0 12 7 8 12 105 0 7 0 6 11 7 6 103 0 10 9 9 10 89 0 10 10 9 97 0 9 10 9 81 36 36 13 12 1 0 88 86 36 83 36 83 77 75 66 64 51 49 43 42 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(225,565,o),
(225,584,qs),
(225,604,o),
(251,630,o),
(270,630,qs),
(288,630,o),
(313,604,o),
(313,584,qs),
(313,565,o),
(288,540,o),
(270,540,qs),
(251,540,o)
);
},
{
closed = 1;
nodes = (
(161,470,o),
(161,489,qs),
(161,508,o),
(186,534,o),
(204,534,qs),
(223,534,o),
(249,508,o),
(249,489,qs),
(249,470,o),
(223,444,o),
(204,444,qs),
(186,444,o)
);
},
{
closed = 1;
nodes = (
(312,534,o),
(331,534,qs),
(349,534,o),
(374,508,o),
(374,489,qs),
(374,470,o),
(349,444,o),
(331,444,qs),
(312,444,o),
(286,470,o),
(286,489,qs),
(286,508,o)
);
},
{
closed = 1;
nodes = (
(429,74,o),
(466,43,o),
(466,18,qs),
(466,12,ls),
(466,0,o),
(453,0,qs),
(-3,0,l),
(-3,74,l),
(134,74,l),
(95,124,o),
(94,188,qs),
(94,268,o),
(143,320,qs),
(197,377,o),
(282,377,qs),
(335,377,o),
(410,332,o),
(412,298,qs),
(413,277,o),
(399,277,qs),
(395,277,o),
(386,282,qs),
(339,305,o),
(291,306,qs),
(243,306,o),
(211,279,qs),
(172,247,o),
(171,188,qs),
(171,148,o),
(194,117,qs),
(224,74,o),
(279,74,qs),
(399,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 63 61 60 59 54 52 49 47 45 43 36 68 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,565,o),
(249,584,qs),
(249,604,o),
(275,630,o),
(294,630,qs),
(312,630,o),
(337,604,o),
(337,584,qs),
(337,565,o),
(312,540,o),
(294,540,qs),
(275,540,o)
);
},
{
closed = 1;
nodes = (
(185,470,o),
(185,489,qs),
(185,508,o),
(210,534,o),
(228,534,qs),
(247,534,o),
(273,508,o),
(273,489,qs),
(273,470,o),
(247,444,o),
(228,444,qs),
(210,444,o)
);
},
{
closed = 1;
nodes = (
(336,534,o),
(355,534,qs),
(373,534,o),
(398,508,o),
(398,489,qs),
(398,470,o),
(373,444,o),
(355,444,qs),
(336,444,o),
(310,470,o),
(310,489,qs),
(310,508,o)
);
},
{
closed = 1;
nodes = (
(618,74,l),
(618,0,l),
(360,0,ls),
(315,0,o),
(293,16,q),
(270,0,o),
(224,0,qs),
(-3,0,l),
(-3,74,l),
(205,74,l),
(114,192,ls),
(94,218,o),
(93,249,qs),
(91,300,o),
(147,337,qs),
(208,377,o),
(293,377,qs),
(364,378,o),
(422,346,qs),
(494,308,o),
(492,249,qs),
(491,218,o),
(471,192,qs),
(381,74,l)
);
},
{
closed = 1;
nodes = (
(404,226,o),
(404,239,qs),
(404,262,o),
(379,281,qs),
(346,306,o),
(293,306,qs),
(247,306,o),
(181,267,o),
(181,239,qs),
(181,226,o),
(200,202,qs),
(286,89,ls),
(292,82,o),
(298,89,qs),
(385,202,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
54 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 10 1 7 8 8 7 87 10 1 7 7 8 95 9 1 8 7 8 79 13 12 1 0 69 67 59 58 57 55 53 51 50 49 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 6 22 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,14,qs),
(67,486,ls),
(67,545,o),
(110,553,qs),
(123,556,o),
(145,556,qs),
(233,556,o),
(279,498,qs),
(281,495,o),
(283,498,qs),
(322,556,o),
(409,556,qs),
(460,556,ls),
(468,556,o),
(468,548,qs),
(468,542,ls),
(468,496,o),
(424,488,qs),
(423,488,o),
(415,487,qs),
(402,486,o),
(398,486,qs),
(364,482,o),
(318,443,o),
(295,398,qs),
(288,386,o),
(282,386,qs),
(275,386,o),
(268,398,qs),
(243,444,o),
(202,480,o),
(168,483,q),
(166,484,o),
(161,484,qs),
(150,485,o),
(147,485,qs),
(143,485,o),
(143,481,qs),
(143,14,ls),
(143,0,o),
(129,0,qs),
(80,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
31 1 2 3 3 1 1 2 2 76 0 1 2 0 2 1 0 128 0 2 2 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 36 34 30 27 21 19 14 13 0 42 1 41 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,556,o),
(418,556,qs),
(423,556,o),
(425,548,qs),
(427,539,o),
(426,531,q),
(430,475,o),
(402,456,q),
(208,297,l),
(134,230,o),
(133,168,qs),
(133,125,o),
(190,71,o),
(236,71,qs),
(509,71,ls),
(538,71,o),
(574,41,o),
(574,18,qs),
(574,12,ls),
(574,0,o),
(560,0,qs),
(231,0,ls),
(161,0,o),
(114,35,qs),
(56,80,o),
(56,164,qs),
(56,220,o),
(114,313,o),
(185,373,qs),
(408,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 42 52 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,302,o),
(14,310,qs),
(14,359,ls),
(14,368,o),
(22,368,qs),
(82,368,l),
(82,442,ls),
(82,499,o),
(134,562,o),
(181,562,qs),
(217,562,o),
(270,516,o),
(270,485,qs),
(270,471,o),
(261,471,qs),
(258,471,o),
(254,473,q),
(253,474,o),
(252,474,q),
(225,496,o),
(199,496,qs),
(156,496,o),
(156,438,qs),
(156,368,l),
(247,368,ls),
(255,368,o),
(255,359,qs),
(255,310,ls),
(255,302,o),
(247,302,qs),
(156,302,l),
(156,9,ls),
(156,0,o),
(148,0,qs),
(90,0,ls),
(82,0,o),
(82,9,qs),
(82,302,l),
(22,302,ls)
);
},
{
closed = 1;
nodes = (
(342,9,qs),
(342,359,ls),
(342,368,o),
(350,368,qs),
(355,368,ls),
(416,368,o),
(416,299,qs),
(416,9,ls),
(416,0,o),
(408,0,qs),
(350,0,ls),
(342,0,o)
);
},
{
closed = 1;
nodes = (
(361,513,o),
(380,513,qs),
(398,513,o),
(424,486,o),
(424,467,qs),
(424,449,o),
(398,422,o),
(380,422,qs),
(361,422,o),
(335,448,o),
(335,467,qs),
(335,486,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 4 3 10 3 4 10 128 0 11 0 10 2 11 10 105 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 9 6 2 2 2 42 77 13 8 2 0 0 40 0 78 41 39 0 0 61 59 55 53 47 44 39 50 41 50 0 38 0 37 35 35 36 34 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 469;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,302,o),
(14,310,qs),
(14,359,ls),
(14,368,o),
(22,368,qs),
(82,368,l),
(82,442,ls),
(82,499,o),
(134,562,o),
(181,562,qs),
(217,562,o),
(270,516,o),
(270,485,qs),
(270,471,o),
(261,471,qs),
(258,471,o),
(254,473,qs),
(252,474,l),
(225,496,o),
(199,496,qs),
(156,496,o),
(156,438,qs),
(156,368,l),
(247,368,ls),
(255,368,o),
(255,359,qs),
(255,310,ls),
(255,302,o),
(247,302,qs),
(156,302,l),
(156,9,ls),
(156,0,o),
(148,0,qs),
(90,0,ls),
(82,0,o),
(82,9,qs),
(82,302,l),
(22,302,ls)
);
},
{
closed = 1;
nodes = (
(342,106,qs),
(342,547,ls),
(342,556,o),
(350,556,qs),
(355,556,ls),
(416,556,o),
(416,487,qs),
(416,111,ls),
(416,59,o),
(455,59,qs),
(481,59,o),
(503,83,q),
(507,89,o),
(512,89,qs),
(522,89,o),
(522,76,qs),
(522,40,o),
(472,-9,o),
(435,-9,qs),
(342,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 10 10 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 11 11 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 49 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
39 38 0 0 54 51 48 46 43 42 38 57 39 57 0 37 0 36 35 35 35 34 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,726,o),
(218,699,qs),
(218,671,o),
(174,632,o),
(142,632,qs),
(119,632,o),
(82,647,qs),
(52,658,o),
(40,658,qs),
(29,658,o),
(20,646,qs),
(18,644,o),
(16,640,qs),
(11,633,o),
(9,632,qs),
(6,631,o),
(5,631,qs),
(1,631,o),
(-2,635,qs),
(-9,646,o),
(-9,659,qs),
(-9,677,o),
(16,703,o),
(33,703,qs),
(45,703,o),
(59,699,qs),
(63,698,o),
(64,698,qs),
(67,698,o),
(69,701,qs),
(103,758,o),
(153,758,qs),
(182,758,o)
);
},
{
closed = 1;
nodes = (
(175,701,qs),
(175,718,o),
(152,718,qs),
(129,718,o),
(107,683,q),
(125,674,o),
(143,674,qs),
(175,674,o)
);
},
{
closed = 1;
nodes = (
(155,0,o),
(114,39,qs),
(66,83,o),
(66,168,qs),
(66,488,ls),
(66,556,o),
(127,556,qs),
(134,556,ls),
(142,556,o),
(142,548,qs),
(142,169,ls),
(142,124,o),
(184,74,o),
(223,74,qs),
(277,74,l),
(277,0,l),
(225,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
35 4 2 4 1 1 76 9 1 0 0 5 1 0 5 105 0 1 0 2 3 1 2 105 10 1 4 0 3 7 4 3 105 0 7 7 23 77 0 6 6 8 97 11 1 8 8 24 8 78 41 41 34 33 1 0 41 57 41 56 51 48 44 42 38 36 33 40 34 40 28 26 24 22 9 7 0 32 1 32 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
},
{
closed = 1;
nodes = (
(334,-165,o),
(315,-165,qs),
(297,-165,o),
(272,-139,o),
(272,-119,qs),
(272,-100,o),
(297,-75,o),
(315,-75,qs),
(334,-75,o),
(360,-100,o),
(360,-119,qs),
(360,-139,o)
);
},
{
closed = 1;
nodes = (
(485,-100,o),
(485,-119,qs),
(485,-139,o),
(461,-165,o),
(442,-165,qs),
(423,-165,o),
(398,-139,o),
(398,-119,qs),
(398,-100,o),
(423,-75,o),
(442,-75,qs),
(461,-75,o)
);
},
{
closed = 1;
nodes = (
(424,-196,o),
(424,-215,qs),
(424,-234,o),
(399,-261,o),
(381,-261,qs),
(362,-261,o),
(337,-234,o),
(337,-215,qs),
(337,-196,o),
(362,-171,o),
(381,-171,qs),
(400,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
34 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 96 5 1 4 4 24 4 78 64 63 52 51 1 0 70 68 63 74 64 74 58 56 51 62 52 62 49 47 43 41 37 35 33 30 23 21 15 12 8 5 0 38 1 38 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,94,o),
(144,50,qs),
(101,0,o),
(22,0,qs),
(-4,0,l),
(-4,74,l),
(24,74,ls),
(62,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(165,358,qs),
(172,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls)
);
},
{
closed = 1;
nodes = (
(50,-165,o),
(31,-165,qs),
(13,-165,o),
(-12,-139,o),
(-12,-119,qs),
(-12,-100,o),
(13,-75,o),
(31,-75,qs),
(50,-75,o),
(76,-100,o),
(76,-119,qs),
(76,-139,o)
);
},
{
closed = 1;
nodes = (
(201,-100,o),
(201,-119,qs),
(201,-139,o),
(177,-165,o),
(158,-165,qs),
(139,-165,o),
(114,-139,o),
(114,-119,qs),
(114,-100,o),
(139,-75,o),
(158,-75,qs),
(177,-75,o)
);
},
{
closed = 1;
nodes = (
(140,-196,o),
(140,-215,qs),
(140,-234,o),
(115,-261,o),
(97,-261,qs),
(78,-261,o),
(52,-234,o),
(52,-215,qs),
(52,-196,o),
(78,-171,o),
(97,-171,qs),
(115,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 0 1 0 133 9 5 2 3 6 1 4 7 3 4 106 10 1 7 0 8 7 8 101 0 1 1 2 97 0 2 2 24 2 78 42 41 30 29 48 46 41 52 42 52 36 34 29 40 30 40 36 38 33 36 49 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
},
{
closed = 1;
nodes = (
(67,-165,o),
(48,-165,qs),
(30,-165,o),
(5,-139,o),
(5,-119,qs),
(5,-100,o),
(30,-75,o),
(48,-75,qs),
(67,-75,o),
(93,-100,o),
(93,-119,qs),
(93,-139,o)
);
},
{
closed = 1;
nodes = (
(218,-100,o),
(218,-119,qs),
(218,-139,o),
(193,-165,o),
(175,-165,qs),
(156,-165,o),
(130,-139,o),
(130,-119,qs),
(130,-100,o),
(156,-75,o),
(175,-75,qs),
(193,-75,o)
);
},
{
closed = 1;
nodes = (
(157,-196,o),
(157,-215,qs),
(157,-234,o),
(132,-261,o),
(114,-261,qs),
(95,-261,o),
(69,-234,o),
(69,-215,qs),
(69,-196,o),
(95,-171,o),
(114,-171,qs),
(132,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
18 1 3 0 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 106 13 1 9 0 10 9 10 101 2 11 2 0 0 3 97 4 1 3 3 24 3 78 48 47 36 35 1 0 54 52 47 58 48 58 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 8 5 0 22 1 22 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,383,o),
(293,391,qs),
(293,396,ls),
(293,429,o),
(337,429,qs),
(340,429,l),
(340,561,ls),
(340,609,o),
(377,609,qs),
(380,609,ls),
(388,609,o),
(388,602,qs),
(388,551,l),
(425,551,ls),
(465,551,o),
(512,506,o),
(512,467,qs),
(512,428,o),
(466,383,o),
(425,383,qs),
(302,383,ls)
);
},
{
closed = 1;
nodes = (
(388,429,l),
(428,429,ls),
(443,429,o),
(463,450,o),
(463,467,qs),
(463,483,o),
(444,504,o),
(428,504,qs),
(388,504,l)
);
},
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
64 1 10 6 1 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 5 1 3 12 1 0 7 3 0 104 13 1 4 4 1 97 0 1 1 23 77 8 14 2 6 6 10 96 11 1 10 10 24 10 78 31 30 22 21 1 0 67 65 63 60 53 51 45 42 38 35 30 68 31 68 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,611,o),
(249,566,o),
(249,527,qs),
(249,488,o),
(202,443,o),
(161,443,qs),
(39,443,ls),
(30,443,o),
(30,451,qs),
(30,456,ls),
(30,489,o),
(73,489,qs),
(76,489,l),
(76,621,ls),
(76,669,o),
(114,669,qs),
(117,669,ls),
(124,669,o),
(124,662,qs),
(124,611,l),
(161,611,ls)
);
},
{
closed = 1;
nodes = (
(180,489,o),
(199,510,o),
(199,527,qs),
(199,543,o),
(180,564,o),
(165,564,qs),
(124,564,l),
(124,489,l),
(165,489,ls)
);
},
{
closed = 1;
nodes = (
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 0 3 0 133 11 1 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 97 0 8 8 24 8 78 31 30 21 21 0 0 40 38 37 35 30 46 31 45 21 29 21 28 24 22 0 20 0 19 51 34 50 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,443,o),
(30,451,qs),
(30,456,ls),
(30,489,o),
(73,489,qs),
(76,489,l),
(76,621,ls),
(76,669,o),
(114,669,qs),
(117,669,ls),
(124,669,o),
(124,662,qs),
(124,611,l),
(161,611,ls),
(202,611,o),
(249,566,o),
(249,527,qs),
(249,488,o),
(202,443,o),
(161,443,qs),
(39,443,ls)
);
},
{
closed = 1;
nodes = (
(124,489,l),
(165,489,ls),
(180,489,o),
(199,510,o),
(199,527,qs),
(199,543,o),
(180,564,o),
(165,564,qs),
(124,564,l)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
48 1 9 6 1 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 97 10 1 9 9 24 9 78 31 30 22 21 1 0 51 49 47 45 44 42 38 35 30 52 31 52 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,566,o),
(576,584,qs),
(576,604,o),
(601,630,o),
(620,630,qs),
(639,630,o),
(664,604,o),
(664,584,qs),
(664,565,o),
(639,540,o),
(620,540,qs),
(601,540,o)
);
},
{
closed = 1;
nodes = (
(511,470,o),
(511,489,qs),
(511,508,o),
(536,534,o),
(555,534,qs),
(574,534,o),
(599,508,o),
(599,489,qs),
(599,470,o),
(574,444,o),
(555,444,qs),
(536,444,o)
);
},
{
closed = 1;
nodes = (
(663,534,o),
(681,534,qs),
(700,534,o),
(725,508,o),
(725,489,qs),
(725,470,o),
(700,444,o),
(681,444,qs),
(662,444,o),
(637,470,o),
(637,489,qs),
(637,508,o)
);
},
{
closed = 1;
nodes = (
(924,-1,l),
(695,-1,ls),
(643,-1,o),
(620,17,q),
(599,-1,o),
(546,-1,qs),
(354,-1,l),
(354,0,l),
(228,0,ls),
(149,0,o),
(101,33,qs),
(42,73,o),
(42,154,qs),
(42,199,o),
(88,278,o),
(126,298,qs),
(136,303,o),
(143,303,qs),
(154,303,o),
(154,292,qs),
(154,286,o),
(149,278,q),
(109,226,o),
(109,177,qs),
(109,74,o),
(231,74,qs),
(506,74,l),
(481,94,o),
(449,162,o),
(448,200,qs),
(448,266,o),
(488,316,qs),
(538,377,o),
(620,377,qs),
(692,377,o),
(741,329,qs),
(793,277,o),
(793,200,qs),
(792,162,o),
(760,93,o),
(734,74,q),
(924,74,l)
);
},
{
closed = 1;
nodes = (
(715,162,o),
(714,201,qs),
(714,247,o),
(661,306,o),
(620,306,qs),
(583,306,o),
(557,281,qs),
(527,251,o),
(526,201,qs),
(526,162,o),
(580,93,o),
(620,82,q),
(660,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
73 1 9 7 1 76 0 8 12 7 12 8 7 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 8 6 12 105 15 11 2 7 7 9 96 10 1 9 9 24 9 78 36 36 13 12 1 0 86 84 36 77 36 77 76 74 72 67 60 58 52 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 915;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,565,o),
(221,584,qs),
(221,604,o),
(247,630,o),
(266,630,qs),
(284,630,o),
(309,604,o),
(309,584,qs),
(309,565,o),
(284,540,o),
(266,540,qs),
(247,540,o)
);
},
{
closed = 1;
nodes = (
(157,470,o),
(157,489,qs),
(157,508,o),
(182,534,o),
(200,534,qs),
(219,534,o),
(245,508,o),
(245,489,qs),
(245,470,o),
(219,444,o),
(200,444,qs),
(182,444,o)
);
},
{
closed = 1;
nodes = (
(308,534,o),
(327,534,qs),
(346,534,o),
(370,508,o),
(370,489,qs),
(370,470,o),
(346,444,o),
(327,444,qs),
(308,444,o),
(283,470,o),
(283,489,qs),
(283,508,o)
);
},
{
closed = 1;
nodes = (
(380,331,qs),
(435,277,o),
(435,188,qs),
(435,112,o),
(393,60,qs),
(346,2,o),
(268,0,qs),
(-3,0,l),
(-3,74,l),
(129,74,l),
(94,115,o),
(93,188,qs),
(93,265,o),
(135,318,qs),
(184,377,o),
(264,377,qs),
(333,377,o)
);
},
{
closed = 1;
nodes = (
(331,107,qs),
(358,141,o),
(358,190,qs),
(358,232,o),
(337,264,qs),
(310,306,o),
(264,306,qs),
(223,306,o),
(197,273,qs),
(170,239,o),
(170,190,qs),
(170,148,o),
(191,116,qs),
(217,74,o),
(264,74,qs),
(305,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 13 1 6 0 10 7 6 10 105 14 9 2 7 7 8 95 0 8 8 24 8 78 54 53 37 36 13 12 1 0 62 60 53 68 54 68 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,565,o),
(220,584,qs),
(220,604,o),
(246,630,o),
(265,630,qs),
(283,630,o),
(308,604,o),
(308,584,qs),
(308,565,o),
(283,540,o),
(265,540,qs),
(246,540,o)
);
},
{
closed = 1;
nodes = (
(156,470,o),
(156,489,qs),
(156,508,o),
(181,534,o),
(199,534,qs),
(218,534,o),
(244,508,o),
(244,489,qs),
(244,470,o),
(218,444,o),
(199,444,qs),
(181,444,o)
);
},
{
closed = 1;
nodes = (
(307,534,o),
(326,534,qs),
(344,534,o),
(369,508,o),
(369,489,qs),
(369,470,o),
(344,444,o),
(326,444,qs),
(307,444,o),
(281,470,o),
(281,489,qs),
(281,508,o)
);
},
{
closed = 1;
nodes = (
(566,0,l),
(338,0,ls),
(286,0,o),
(263,18,q),
(241,0,o),
(189,0,qs),
(-3,0,l),
(-3,74,l),
(150,74,l),
(124,94,o),
(92,163,o),
(91,201,qs),
(90,267,o),
(131,316,qs),
(181,377,o),
(263,377,qs),
(335,377,o),
(383,329,qs),
(436,278,o),
(435,201,qs),
(434,163,o),
(402,94,o),
(376,74,q),
(566,74,l)
);
},
{
closed = 1;
nodes = (
(358,163,o),
(357,201,qs),
(357,247,o),
(304,306,o),
(263,306,qs),
(226,306,o),
(200,281,qs),
(170,251,o),
(169,201,qs),
(168,163,o),
(223,94,o),
(263,82,q),
(303,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
55 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 68 66 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,0,l),
(562,0,ls),
(502,0,o),
(468,37,q),
(417,0,o),
(332,0,qs),
(275,0,ls),
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(335,74,ls),
(392,74,o),
(425,99,q),
(411,126,o),
(388,199,qs),
(352,306,o),
(264,306,qs),
(206,306,o),
(152,258,q),
(151,258,o),
(150,257,qs),
(136,245,o),
(128,245,qs),
(109,245,o),
(119,276,qs),
(132,316,o),
(168,343,qs),
(214,378,o),
(275,377,qs),
(415,376,o),
(468,209,qs),
(488,144,o),
(508,101,o),
(523,89,qs),
(544,74,o),
(571,74,qs),
(617,74,l)
);
},
{
closed = 1;
nodes = (
(323,-89,o),
(323,-101,qs),
(323,-113,o),
(307,-129,o),
(295,-129,qs),
(283,-129,o),
(267,-113,o),
(267,-101,qs),
(267,-89,o),
(283,-72,o),
(295,-72,qs),
(307,-72,o)
);
},
{
closed = 1;
nodes = (
(389,-130,o),
(377,-130,qs),
(365,-130,o),
(349,-114,o),
(349,-101,qs),
(349,-89,o),
(365,-72,o),
(377,-72,qs),
(389,-72,o),
(405,-89,o),
(405,-101,qs),
(405,-113,o)
);
},
{
closed = 1;
nodes = (
(308,-178,o),
(308,-166,qs),
(308,-154,o),
(325,-137,o),
(337,-137,qs),
(349,-137,o),
(365,-154,o),
(365,-166,qs),
(365,-178,o),
(349,-194,o),
(337,-194,qs),
(325,-194,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
23 1 0 2 56 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 11 16 2 9 12 1 10 14 9 10 105 0 14 17 1 13 6 14 13 105 0 6 0 5 6 5 101 4 15 2 0 0 7 97 8 1 7 7 24 7 78 86 85 62 61 1 0 92 90 85 96 86 96 83 81 77 75 68 66 61 72 62 72 59 57 55 52 46 44 35 33 27 24 20 18 14 12 8 6 0 60 1 60 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,66,qs),
(528,35,o),
(490,0,o),
(458,0,qs),
(-3,0,l),
(-3,74,l),
(406,74,l),
(393,86,o),
(375,128,o),
(354,194,qs),
(317,306,o),
(229,306,qs),
(171,306,o),
(116,258,qs),
(115,257,ls),
(101,245,o),
(93,245,qs),
(73,245,o),
(84,276,qs),
(97,316,o),
(133,343,qs),
(179,378,o),
(240,377,qs),
(382,376,o),
(433,207,qs),
(457,120,o),
(484,90,qs),
(497,76,o),
(519,75,qs),
(528,74,o)
);
},
{
closed = 1;
nodes = (
(190,-165,o),
(171,-165,qs),
(152,-165,o),
(128,-139,o),
(128,-119,qs),
(128,-100,o),
(152,-75,o),
(171,-75,qs),
(190,-75,o),
(215,-100,o),
(215,-119,qs),
(215,-139,o)
);
},
{
closed = 1;
nodes = (
(341,-100,o),
(341,-119,qs),
(341,-139,o),
(316,-165,o),
(298,-165,qs),
(279,-165,o),
(253,-139,o),
(253,-119,qs),
(253,-100,o),
(279,-75,o),
(298,-75,qs),
(316,-75,o)
);
},
{
closed = 1;
nodes = (
(280,-196,o),
(280,-215,qs),
(280,-234,o),
(255,-261,o),
(236,-261,qs),
(218,-261,o),
(192,-234,o),
(192,-215,qs),
(192,-196,o),
(217,-171,o),
(236,-171,qs),
(255,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 12 8 2 6 9 1 7 10 6 7 105 13 1 10 0 11 10 11 101 4 1 0 0 5 95 0 5 5 24 5 78 55 54 43 42 61 59 54 65 55 65 49 47 42 53 43 53 36 38 33 20 35 36 36 16 14 7 30 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,0,l),
(526,0,ls),
(467,0,o),
(432,37,q),
(382,0,o),
(296,0,qs),
(-3,0,l),
(-3,74,l),
(300,74,ls),
(356,74,o),
(390,99,q),
(375,126,o),
(352,199,qs),
(317,306,o),
(229,306,qs),
(170,306,o),
(116,258,q),
(115,258,o),
(114,257,qs),
(101,245,o),
(92,245,qs),
(73,245,o),
(83,276,qs),
(96,316,o),
(133,343,qs),
(178,378,o),
(240,377,qs),
(379,376,o),
(432,209,qs),
(452,144,o),
(472,101,o),
(488,89,qs),
(508,74,o),
(535,74,qs),
(581,74,l)
);
},
{
closed = 1;
nodes = (
(190,-165,o),
(171,-165,qs),
(152,-165,o),
(128,-139,o),
(128,-119,qs),
(128,-100,o),
(152,-75,o),
(171,-75,qs),
(190,-75,o),
(215,-100,o),
(215,-119,qs),
(215,-139,o)
);
},
{
closed = 1;
nodes = (
(341,-100,o),
(341,-119,qs),
(341,-139,o),
(316,-165,o),
(298,-165,qs),
(279,-165,o),
(253,-139,o),
(253,-119,qs),
(253,-100,o),
(279,-75,o),
(298,-75,qs),
(316,-75,o)
);
},
{
closed = 1;
nodes = (
(280,-196,o),
(280,-215,qs),
(280,-234,o),
(255,-261,o),
(236,-261,qs),
(218,-261,o),
(192,-234,o),
(192,-215,qs),
(192,-196,o),
(217,-171,o),
(236,-171,qs),
(255,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
23 1 0 2 30 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 14 9 2 7 10 1 8 11 7 8 105 15 1 11 0 12 11 12 101 4 13 2 0 0 5 97 6 1 5 5 24 5 78 60 59 48 47 1 0 66 64 59 70 60 70 54 52 47 58 48 58 45 43 39 37 33 31 29 27 26 24 20 18 14 12 8 6 0 34 1 34 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,458,o),
(106,466,qs),
(106,470,ls),
(106,504,o),
(149,504,qs),
(153,504,l),
(153,635,ls),
(153,684,o),
(190,684,qs),
(193,684,ls),
(201,684,o),
(201,676,qs),
(201,625,l),
(238,625,ls),
(278,625,o),
(325,580,o),
(325,541,qs),
(325,502,o),
(279,458,o),
(238,458,qs),
(115,458,ls)
);
},
{
closed = 1;
nodes = (
(201,504,l),
(241,504,ls),
(256,504,o),
(276,525,o),
(276,541,qs),
(276,558,o),
(256,579,o),
(241,579,qs),
(201,579,l)
);
},
{
closed = 1;
nodes = (
(502,0,l),
(450,0,ls),
(368,0,o),
(325,54,q),
(279,0,o),
(200,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o),
(320,328,qs),
(367,274,o),
(367,181,qs),
(367,166,ls),
(368,123,o),
(410,74,o),
(447,74,qs),
(502,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
64 1 11 6 1 76 0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 31 30 22 21 1 0 67 65 63 60 56 53 49 47 45 43 39 37 30 68 31 68 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,555,o),
(108,574,qs),
(108,593,o),
(134,619,o),
(153,619,qs),
(171,619,o),
(196,593,o),
(196,574,qs),
(196,555,o),
(171,529,o),
(153,529,qs),
(134,529,o)
);
},
{
closed = 1;
nodes = (
(44,459,o),
(44,478,qs),
(44,498,o),
(69,524,o),
(87,524,qs),
(106,524,o),
(132,498,o),
(132,478,qs),
(132,459,o),
(106,434,o),
(87,434,qs),
(69,434,o)
);
},
{
closed = 1;
nodes = (
(195,524,o),
(214,524,qs),
(233,524,o),
(257,498,o),
(257,478,qs),
(257,459,o),
(233,434,o),
(214,434,qs),
(195,434,o),
(170,459,o),
(170,478,qs),
(170,498,o)
);
},
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
64 1 11 6 1 76 0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 68 66 61 59 55 53 49 47 44 41 36 69 37 69 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,443,o),
(39,451,qs),
(39,456,ls),
(39,489,o),
(82,489,qs),
(86,489,l),
(86,621,ls),
(86,669,o),
(123,669,qs),
(126,669,ls),
(133,669,o),
(133,662,qs),
(133,611,l),
(171,611,ls),
(211,611,o),
(258,566,o),
(258,527,qs),
(258,488,o),
(211,443,o),
(171,443,qs),
(48,443,ls)
);
},
{
closed = 1;
nodes = (
(133,489,l),
(174,489,ls),
(189,489,o),
(208,510,o),
(208,527,qs),
(208,543,o),
(189,564,o),
(174,564,qs),
(133,564,l)
);
},
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
58 1 11 6 1 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 31 30 22 21 1 0 62 60 55 53 49 47 43 41 38 35 30 63 31 63 28 26 21 29 22 29 16 14 12 9 7 5 0 20 1 19 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,0,l),
(797,0,ls),
(716,0,o),
(673,52,q),
(627,0,o),
(548,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(545,74,ls),
(588,74,o),
(636,131,o),
(636,181,qs),
(636,231,o),
(588,287,o),
(545,287,qs),
(349,287,ls),
(297,287,o),
(297,329,qs),
(297,347,ls),
(297,376,o),
(315,388,qs),
(556,553,ls),
(561,557,o),
(565,555,q),
(585,541,o),
(583,493,o),
(561,478,qs),
(391,362,l),
(387,358,o),
(392,358,qs),
(548,358,ls),
(613,358,o),
(656,322,qs),
(713,275,o),
(714,181,qs),
(714,168,ls),
(714,124,o),
(757,74,o),
(794,74,qs),
(849,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
51 1 5 0 1 76 15 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 1 0 54 52 50 47 40 38 32 29 25 22 9 7 0 55 1 55 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 840;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(371,541,o),
(369,493,o),
(347,478,qs),
(177,362,l),
(173,358,o),
(178,358,qs),
(334,358,ls),
(399,358,o),
(443,321,qs),
(500,273,o),
(500,177,qs),
(500,96,o),
(455,48,qs),
(410,0,o),
(334,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 31 29 25 22 9 7 0 32 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,0,l),
(583,0,ls),
(502,0,o),
(459,52,q),
(413,0,o),
(334,0,qs),
(-3,0,l),
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(371,541,o),
(369,493,o),
(347,478,qs),
(177,362,l),
(173,358,o),
(178,358,qs),
(334,358,ls),
(399,358,o),
(442,322,qs),
(499,275,o),
(500,181,qs),
(500,168,ls),
(500,124,o),
(543,74,o),
(580,74,qs),
(635,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
35 1 4 0 1 76 15 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 38 36 34 32 31 29 25 22 9 7 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,487,o),
(294,490,o),
(294,498,qs),
(294,501,o),
(294,511,qs),
(294,515,o),
(294,516,qs),
(294,530,o),
(310,541,qs),
(497,669,ls),
(502,673,o),
(505,669,qs),
(516,658,o),
(516,646,qs),
(516,631,o),
(495,616,qs),
(315,493,ls)
);
},
{
closed = 1;
nodes = (
(847,0,l),
(795,0,ls),
(715,0,o),
(671,52,q),
(625,0,o),
(547,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,198,o),
(103,277,o),
(142,298,q),
(149,303,o),
(155,303,qs),
(167,303,o),
(167,292,qs),
(167,286,o),
(162,278,q),
(122,229,o),
(122,177,qs),
(122,74,o),
(245,74,qs),
(544,74,ls),
(586,74,o),
(634,131,o),
(634,181,qs),
(634,231,o),
(586,287,o),
(544,287,qs),
(348,287,ls),
(295,287,o),
(295,329,qs),
(295,347,ls),
(295,375,o),
(314,388,qs),
(554,553,ls),
(560,557,o),
(564,555,q),
(575,546,o),
(578,533,q),
(594,503,o),
(558,480,qs),
(385,358,l),
(547,358,ls),
(611,358,o),
(654,322,qs),
(711,275,o),
(712,181,qs),
(712,168,ls),
(713,124,o),
(755,74,o),
(793,74,qs),
(847,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
67 1 5 0 1 76 31 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 18 17 70 68 66 63 55 54 48 45 41 38 26 24 17 71 18 71 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 838;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,487,o),
(82,490,o),
(82,498,qs),
(82,501,o),
(82,511,qs),
(82,515,o),
(82,516,qs),
(82,530,o),
(98,541,qs),
(284,669,ls),
(290,673,o),
(293,669,qs),
(304,658,o),
(304,646,qs),
(304,631,o),
(283,616,qs),
(103,493,ls)
);
},
{
closed = 1;
nodes = (
(399,358,o),
(443,321,qs),
(500,273,o),
(500,177,qs),
(500,96,o),
(455,48,qs),
(410,0,o),
(334,0,qs),
(-3,0,l),
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(362,547,o),
(365,533,q),
(381,503,o),
(346,480,qs),
(172,358,l),
(334,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 1 3 74 4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 17 17 17 48 17 47 41 39 38 36 32 29 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,487,o),
(82,490,o),
(82,498,qs),
(82,501,o),
(82,511,qs),
(82,515,o),
(82,516,qs),
(82,530,o),
(98,541,qs),
(284,669,ls),
(290,673,o),
(293,669,qs),
(304,658,o),
(304,646,qs),
(304,631,o),
(283,616,qs),
(103,493,ls)
);
},
{
closed = 1;
nodes = (
(635,0,l),
(583,0,ls),
(502,0,o),
(459,52,q),
(413,0,o),
(334,0,qs),
(-3,0,l),
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(362,547,o),
(365,533,q),
(381,503,o),
(346,480,qs),
(172,358,l),
(334,358,ls),
(399,358,o),
(442,322,qs),
(499,275,o),
(500,181,qs),
(500,168,ls),
(500,124,o),
(543,74,o),
(580,74,qs),
(635,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
51 1 4 0 1 76 31 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 18 17 54 52 50 48 47 45 41 38 26 24 17 55 18 55 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,0,l),
(633,0,ls),
(589,0,o),
(555,20,q),
(544,-86,o),
(482,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(692,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
37 1 5 0 1 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 5 95 0 5 5 24 5 78 1 0 40 38 34 32 24 23 15 13 8 5 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,476,qs),
(125,517,o),
(173,523,q),
(163,542,o),
(163,562,qs),
(163,595,o),
(206,639,o),
(238,639,qs),
(264,640,o),
(301,613,o),
(303,592,qs),
(303,580,o),
(295,581,q),
(292,582,o),
(287,584,qs),
(283,586,o),
(282,587,q),
(264,596,o),
(247,596,qs),
(210,596,o),
(210,562,qs),
(210,546,o),
(230,526,o),
(245,526,qs),
(289,526,ls),
(324,526,o),
(324,493,qs),
(324,489,ls),
(324,481,o),
(314,481,qs),
(207,481,ls),
(172,481,o),
(154,474,qs),
(152,473,o),
(148,472,q),
(143,469,o),
(142,469,qs),
(137,469,o)
);
},
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 1 2 34 1 0 1 59 1 7 4 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 1 2 34 1 0 1 59 1 7 9 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 1 2 34 1 0 1 59 1 8 9 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 12 9 11 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 11 1 4 4 7 97 8 1 7 7 24 77 12 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 11 1 4 4 8 97 0 8 8 24 77 12 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 6 0 10 4 6 10 103 12 1 9 0 7 9 7 101 11 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
65 64 39 38 72 70 64 76 65 76 62 60 58 56 50 47 46 43 38 63 39 63 41 35 51 53 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 97 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 34 32 26 38 27 38 24 22 20 18 12 9 8 5 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,358,o),
(182,350,qs),
(182,168,ls),
(182,66,o),
(113,23,q),
(110,19,o),
(103,12,qs),
(85,-8,o),
(76,-19,qs),
(51,-47,o),
(45,-70,q),
(62,-74,o),
(84,-101,o),
(84,-119,qs),
(84,-140,o),
(55,-169,o),
(36,-169,qs),
(15,-169,o),
(-13,-141,o),
(-14,-119,qs),
(-15,-62,o),
(38,1,q),
(33,0,o),
(23,0,qs),
(-2,0,l),
(-2,74,l),
(26,74,ls),
(64,74,o),
(106,124,o),
(106,169,qs),
(106,291,ls),
(106,358,o),
(167,358,qs),
(174,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
22 1 3 2 1 76 4 1 0 1 0 133 0 3 2 3 134 0 1 1 2 97 0 2 2 24 2 78 1 0 17 15 10 8 7 5 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(584,-1,o),
(582,-3,qs),
(572,-14,o),
(568,-19,qs),
(543,-47,o),
(537,-70,q),
(554,-74,o),
(576,-101,o),
(576,-119,qs),
(576,-140,o),
(547,-169,o),
(528,-169,qs),
(507,-169,o),
(479,-141,o),
(478,-119,qs),
(477,-63,o),
(530,0,q),
(389,0,ls),
(375,0,o),
(374,-22,qs),
(374,-28,o),
(374,-29,qs),
(371,-103,o),
(339,-145,q),
(295,-214,o),
(203,-214,qs),
(128,-214,o),
(84,-166,qs),
(36,-119,o),
(36,-31,qs),
(36,-12,o),
(37,0,q),
(-3,0,l),
(-3,74,l),
(36,74,ls),
(64,74,o),
(87,97,qs),
(96,106,o),
(99,108,q),
(99,109,o),
(100,110,qs),
(109,117,o),
(115,117,qs),
(136,117,o),
(128,84,qs),
(118,42,o),
(115,11,qs),
(110,-59,o),
(157,-143,o),
(202,-143,qs),
(296,-143,o),
(297,-23,qs),
(298,34,o),
(323,74,o),
(359,74,qs),
(671,74,l),
(671,0,l),
(585,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
51 1 1 4 1 76 0 2 0 2 133 0 7 1 5 1 7 5 128 0 1 0 5 1 5 102 3 1 0 0 4 95 9 8 6 3 4 4 24 4 78 0 0 0 57 0 55 36 38 37 17 39 21 35 33 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(804,0,l),
(744,0,ls),
(667,0,o),
(629,56,q),
(583,0,o),
(503,0,qs),
(359,0,ls),
(310,0,o),
(289,16,q),
(268,0,o),
(218,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(188,74,l),
(133,118,o),
(133,197,qs),
(133,274,o),
(181,321,q),
(116,332,o),
(113,391,qs),
(113,396,ls),
(113,407,o),
(125,402,q),
(157,393,o),
(182,389,qs),
(227,382,o),
(286,380,qs),
(334,378,o),
(459,377,qs),
(553,375,o),
(607,332,qs),
(669,281,o),
(669,182,qs),
(669,180,l),
(669,166,ls),
(670,123,o),
(712,74,o),
(749,74,qs),
(804,74,l)
);
},
{
closed = 1;
nodes = (
(544,74,o),
(593,133,o),
(593,183,qs),
(593,303,o),
(454,307,qs),
(441,307,o),
(413,308,qs),
(406,308,l),
(443,263,o),
(443,197,qs),
(443,117,o),
(388,74,q),
(502,74,ls)
);
},
{
closed = 1;
nodes = (
(231,281,qs),
(202,251,o),
(202,201,qs),
(202,159,o),
(250,94,o),
(288,84,q),
(327,94,o),
(374,159,o),
(374,201,qs),
(374,246,o),
(326,306,o),
(288,306,qs),
(255,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
20 1 6 1 63 1 0 6 39 34 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 58 57 44 44 1 0 57 69 58 69 44 56 44 55 52 48 42 40 38 35 33 30 26 24 12 8 0 43 1 43 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,332,qs),
(631,281,o),
(631,182,qs),
(631,104,o),
(590,55,qs),
(544,0,o),
(465,0,qs),
(321,0,ls),
(271,0,o),
(250,16,q),
(230,0,o),
(180,0,qs),
(-3,0,l),
(-3,74,l),
(149,74,l),
(94,118,o),
(94,197,qs),
(94,274,o),
(143,321,q),
(78,332,o),
(75,391,qs),
(75,396,ls),
(75,407,o),
(86,402,q),
(118,393,o),
(143,389,qs),
(189,382,o),
(248,380,qs),
(296,378,o),
(420,377,qs),
(515,375,o)
);
},
{
closed = 1;
nodes = (
(505,74,o),
(554,133,o),
(554,183,qs),
(554,303,o),
(415,307,qs),
(402,307,o),
(374,308,qs),
(368,308,l),
(404,263,o),
(404,197,qs),
(404,117,o),
(350,74,q),
(463,74,ls)
);
},
{
closed = 1;
nodes = (
(192,281,qs),
(164,251,o),
(164,201,qs),
(164,159,o),
(211,94,o),
(250,84,q),
(288,94,o),
(335,159,o),
(335,201,qs),
(335,246,o),
(287,306,o),
(250,306,qs),
(216,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
11 1 4 0 50 1 1 4 20 1 2 1 3 76 7 1 0 9 6 2 4 1 0 4 105 8 5 2 1 1 2 95 3 1 2 2 24 2 78 45 44 31 31 3 0 44 56 45 56 31 43 31 42 39 35 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(766,0,l),
(706,0,ls),
(628,0,o),
(591,56,q),
(544,0,o),
(465,0,qs),
(321,0,ls),
(271,0,o),
(250,16,q),
(230,0,o),
(180,0,qs),
(-3,0,l),
(-3,74,l),
(149,74,l),
(94,118,o),
(94,197,qs),
(94,274,o),
(143,321,q),
(78,332,o),
(75,391,qs),
(75,396,ls),
(75,407,o),
(86,402,q),
(118,393,o),
(143,389,qs),
(189,382,o),
(248,380,qs),
(296,378,o),
(420,377,qs),
(515,375,o),
(569,332,qs),
(631,281,o),
(631,182,qs),
(631,180,l),
(631,166,ls),
(631,123,o),
(674,74,o),
(711,74,qs),
(766,74,l)
);
},
{
closed = 1;
nodes = (
(505,74,o),
(554,133,o),
(554,183,qs),
(554,303,o),
(415,307,qs),
(402,307,o),
(374,308,qs),
(368,308,l),
(404,263,o),
(404,197,qs),
(404,117,o),
(350,74,q),
(463,74,ls)
);
},
{
closed = 1;
nodes = (
(192,281,qs),
(164,251,o),
(164,201,qs),
(164,159,o),
(211,94,o),
(250,84,q),
(288,94,o),
(335,159,o),
(335,201,qs),
(335,246,o),
(287,306,o),
(250,306,qs),
(216,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
20 1 6 1 58 1 0 6 34 29 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 53 52 39 39 1 0 52 64 53 64 39 51 39 50 47 43 37 35 33 30 28 26 25 24 12 8 0 38 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,0,ls),
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(549,74,l),
(549,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 2 1 101 0 0 0 3 95 0 3 3 24 3 78 38 41 38 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,154,qs),
(164,173,o),
(185,199,o),
(207,202,q),
(197,220,o),
(197,241,qs),
(197,273,o),
(240,317,o),
(272,318,qs),
(298,318,o),
(335,291,o),
(337,270,qs),
(337,259,o),
(329,259,q),
(326,260,o),
(321,263,q),
(317,264,o),
(316,265,q),
(298,274,o),
(281,274,qs),
(244,274,o),
(244,240,qs),
(244,224,o),
(264,204,o),
(279,204,qs),
(323,204,ls),
(358,204,o),
(358,172,qs),
(358,168,ls),
(358,159,o),
(348,159,qs),
(241,159,ls),
(206,159,o),
(188,153,qs),
(186,152,o),
(182,150,qs),
(177,148,o),
(175,148,qs),
(170,148,o)
);
},
{
closed = 1;
nodes = (
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(549,74,l),
(549,0,l),
(275,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
26 1 2 3 34 1 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
26 1 2 3 34 1 1 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 0 3 2 4 3 105 0 2 1 9 2 0 5 2 0 105 0 7 0 6 7 6 101 0 5 5 8 95 10 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
9 1 0 1 5 1 0 5 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 7 0 6 7 6 101 0 5 5 8 95 10 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
39 39 1 0 39 68 39 67 61 59 50 48 42 40 30 28 19 17 14 11 8 5 0 38 1 38 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,501,o),
(200,479,qs),
(200,459,o),
(172,429,o),
(151,429,qs),
(131,429,o),
(102,458,o),
(102,479,qs),
(102,501,o),
(131,529,o),
(151,529,qs),
(172,529,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,-98,o),
(137,-119,qs),
(137,-140,o),
(109,-169,o),
(88,-169,qs),
(68,-169,o),
(39,-140,o),
(39,-119,qs),
(39,-98,o),
(68,-69,o),
(88,-69,qs),
(109,-69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 6 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 5 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,0,l),
(612,0,l),
(595,-95,o),
(523,-152,qs),
(445,-214,o),
(329,-214,qs),
(208,-214,o),
(128,-147,qs),
(42,-73,o),
(43,41,qs),
(43,101,o),
(94,205,o),
(138,234,qs),
(145,238,o),
(152,238,qs),
(164,238,o),
(164,227,qs),
(164,221,o),
(159,214,qs),
(115,139,o),
(116,56,qs),
(118,-30,o),
(171,-83,qs),
(230,-143,o),
(329,-143,qs),
(403,-143,o),
(455,-110,qs),
(516,-72,o),
(535,0,q),
(418,0,ls),
(404,0,o),
(404,12,qs),
(404,19,ls),
(404,44,o),
(442,74,o),
(471,74,qs),
(628,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 35 34 31 29 22 20 12 10 7 5 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,94,o),
(144,50,qs),
(101,0,o),
(22,0,qs),
(-4,0,l),
(-4,74,l),
(24,74,ls),
(62,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(165,358,qs),
(172,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls)
);
},
{
closed = 1;
nodes = (
(50,-165,o),
(31,-165,qs),
(13,-165,o),
(-12,-139,o),
(-12,-119,qs),
(-12,-100,o),
(13,-75,o),
(31,-75,qs),
(50,-75,o),
(76,-100,o),
(76,-119,qs),
(76,-139,o)
);
},
{
closed = 1;
nodes = (
(201,-100,o),
(201,-119,qs),
(201,-139,o),
(177,-165,o),
(158,-165,qs),
(139,-165,o),
(114,-139,o),
(114,-119,qs),
(114,-100,o),
(139,-75,o),
(158,-75,qs),
(177,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 0 1 0 133 7 5 2 3 6 1 4 3 4 102 0 1 1 2 97 0 2 2 24 2 78 30 29 36 34 29 40 30 40 36 38 33 36 49 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
},
{
closed = 1;
nodes = (
(67,-165,o),
(48,-165,qs),
(30,-165,o),
(5,-139,o),
(5,-119,qs),
(5,-100,o),
(30,-75,o),
(48,-75,qs),
(67,-75,o),
(93,-100,o),
(93,-119,qs),
(93,-139,o)
);
},
{
closed = 1;
nodes = (
(218,-100,o),
(218,-119,qs),
(218,-139,o),
(193,-165,o),
(175,-165,qs),
(156,-165,o),
(130,-139,o),
(130,-119,qs),
(130,-100,o),
(156,-75,o),
(175,-75,qs),
(193,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
18 1 3 0 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 102 2 9 2 0 0 3 97 4 1 3 3 24 3 78 36 35 1 0 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 8 5 0 22 1 22 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(876,358,o),
(876,350,qs),
(876,168,ls),
(876,94,o),
(839,50,qs),
(797,0,o),
(717,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(719,74,ls),
(757,74,o),
(800,124,o),
(800,169,qs),
(800,291,ls),
(800,358,o),
(860,358,qs),
(868,358,ls)
);
},
{
closed = 1;
nodes = (
(779,-98,o),
(779,-119,qs),
(779,-140,o),
(750,-169,o),
(730,-169,qs),
(709,-169,o),
(680,-140,o),
(680,-119,qs),
(680,-98,o),
(709,-69,o),
(730,-69,qs),
(751,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
9 1 0 4 0 133 0 4 1 4 133 10 1 7 0 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 51 50 1 0 57 55 50 61 51 61 43 41 38 36 29 27 19 17 14 12 8 5 0 49 1 48 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(876,358,o),
(876,350,qs),
(876,168,ls),
(876,94,o),
(839,50,qs),
(797,0,o),
(717,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(719,74,ls),
(757,74,o),
(800,124,o),
(800,169,qs),
(800,291,ls),
(800,358,o),
(860,358,qs),
(868,358,ls)
);
},
{
closed = 1;
nodes = (
(779,-98,o),
(779,-119,qs),
(779,-140,o),
(750,-169,o),
(730,-169,qs),
(709,-169,o),
(680,-140,o),
(680,-119,qs),
(680,-98,o),
(709,-69,o),
(730,-69,qs),
(751,-69,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 1 7 0 8 5 7 8 105 0 3 0 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 75 74 63 62 51 50 1 0 81 79 74 85 75 85 69 67 62 73 63 73 57 55 50 61 51 61 43 41 38 36 29 27 19 17 14 12 8 5 0 49 1 48 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 942;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(784,468,o),
(784,489,qs),
(784,511,o),
(813,539,o),
(834,539,qs),
(854,539,o),
(883,511,o),
(883,489,qs),
(883,469,o),
(854,439,o),
(834,439,qs),
(813,439,o)
);
},
{
closed = 1;
nodes = (
(947,331,qs),
(1002,277,o),
(1002,188,qs),
(1002,112,o),
(960,60,qs),
(913,2,o),
(835,0,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(695,74,l),
(660,116,o),
(659,188,qs),
(659,265,o),
(702,318,qs),
(751,377,o),
(830,377,qs),
(900,377,o)
);
},
{
closed = 1;
nodes = (
(898,107,qs),
(924,141,o),
(924,190,qs),
(924,232,o),
(904,264,qs),
(877,306,o),
(831,306,qs),
(790,306,o),
(764,273,qs),
(737,239,o),
(737,190,qs),
(737,148,o),
(758,116,qs),
(784,74,o),
(831,74,qs),
(872,74,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 6 10 3 10 6 3 128 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 15 1 0 0 1 97 0 1 1 23 77 17 9 2 3 3 4 95 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 17 9 2 3 3 4 95 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
91 90 79 78 63 62 13 12 1 0 97 95 90 101 91 101 85 83 78 89 79 89 71 69 62 77 63 77 55 53 50 48 41 39 31 29 26 24 20 18 12 61 13 61 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1056;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 5 1 133 0 5 2 5 133 13 9 12 3 7 10 1 8 6 7 8 106 0 4 0 6 4 6 101 0 2 2 0 95 3 11 2 0 0 24 0 78 63 62 51 50 1 0 69 67 62 73 63 73 57 55 50 61 51 61 46 44 37 35 27 25 22 20 16 13 9 6 0 49 1 49 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(715,74,ls),
(753,74,o),
(795,124,o),
(795,169,qs),
(795,291,ls),
(795,358,o),
(856,358,qs),
(863,358,ls),
(872,358,o),
(872,350,qs),
(872,168,ls),
(872,94,o),
(834,50,qs),
(792,0,o),
(713,0,qs),
(626,0,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
0 1 5 1 133 0 5 2 5 133 17 9 16 3 7 10 1 8 6 7 8 106 0 4 0 6 11 4 6 105 19 13 18 3 11 14 1 12 11 12 101 0 2 2 0 95 3 15 2 0 0 24 0 78 87 86 75 74 63 62 51 50 1 0 93 91 86 97 87 97 81 79 74 85 75 85 69 67 62 73 63 73 57 55 50 61 51 61 46 44 37 35 27 25 22 20 16 13 9 6 0 49 1 49 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,695,qs),
(18,704,o),
(18,714,qs),
(18,733,o),
(41,759,o),
(57,759,qs),
(74,759,o),
(103,735,qs),
(116,726,o),
(121,726,qs),
(125,726,o),
(131,731,qs),
(144,741,l),
(114,767,o),
(114,799,qs),
(114,826,o),
(150,861,o),
(179,861,qs),
(209,861,o),
(245,829,o),
(245,802,qs),
(245,771,o),
(206,738,q),
(212,731,o),
(212,723,qs),
(212,711,o),
(199,701,qs),
(196,698,o),
(193,698,qs),
(191,698,o),
(187,702,qs),
(175,714,l),
(147,693,ls),
(132,682,o),
(118,682,qs),
(103,682,o),
(77,704,q),
(75,705,o),
(71,708,qs),
(62,716,o),
(58,716,qs),
(51,716,o),
(42,701,q),
(41,701,o),
(41,700,q),
(34,689,o),
(31,689,qs),
(25,689,o)
);
},
{
closed = 1;
nodes = (
(154,799,qs),
(154,783,o),
(178,764,q),
(205,783,o),
(205,799,qs),
(205,810,o),
(191,825,o),
(181,825,qs),
(154,825,o)
);
},
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
53 1 5 6 34 24 2 4 5 15 1 0 1 92 76 65 3 8 7 86 1 12 8 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
11 9 16 3 7 0 8 8 7 114 0 3 15 1 6 5 3 6 105 0 5 0 1 0 5 1 105 0 4 2 14 2 0 7 4 0 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
11 9 16 3 7 0 8 0 7 8 128 0 3 15 1 6 5 3 6 105 0 5 0 1 0 5 1 105 0 4 2 14 2 0 7 4 0 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
14 1 0 1 2 1 0 2 128 11 9 16 3 7 2 8 2 7 8 128 0 3 15 1 6 5 3 6 105 0 5 0 1 0 5 1 105 0 4 0 2 7 4 2 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
58 57 49 48 1 0 89 87 85 83 80 78 74 72 69 67 63 61 57 94 58 94 48 56 49 56 42 40 38 36 30 28 13 11 6 5 0 47 1 47 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,831,o),
(261,824,qs),
(261,763,ls),
(261,723,o),
(219,677,o),
(182,677,qs),
(147,677,o),
(128,697,q),
(107,677,o),
(75,677,qs),
(-5,677,o),
(-5,763,qs),
(-5,783,ls),
(-5,831,o),
(31,831,qs),
(38,831,ls),
(44,831,o),
(44,824,qs),
(44,758,ls),
(44,721,o),
(74,721,qs),
(103,721,o),
(103,758,qs),
(103,783,ls),
(103,831,o),
(139,831,qs),
(146,831,ls),
(152,831,o),
(152,824,qs),
(152,758,ls),
(152,721,o),
(182,721,qs),
(211,721,o),
(211,758,qs),
(211,783,ls),
(211,831,o),
(247,831,qs),
(254,831,ls)
);
},
{
closed = 1;
nodes = (
(227,608,o),
(227,576,qs),
(227,572,ls),
(227,563,o),
(218,563,qs),
(103,563,ls),
(70,563,o),
(51,557,q),
(50,556,o),
(48,556,q),
(46,555,o),
(45,554,q),
(44,554,l),
(40,552,o),
(38,552,qs),
(34,552,o),
(31,558,qs),
(29,563,o),
(29,571,qs),
(29,608,o),
(91,608,qs),
(192,608,ls)
);
},
{
closed = 1;
nodes = (
(227,514,o),
(227,482,qs),
(227,478,ls),
(227,470,o),
(218,470,qs),
(103,470,ls),
(70,470,o),
(51,463,q),
(50,463,o),
(48,462,qs),
(46,461,o),
(45,461,qs),
(44,461,o),
(44,460,q),
(40,458,o),
(38,458,qs),
(34,458,o),
(31,465,qs),
(29,470,o),
(29,478,qs),
(29,514,o),
(91,514,qs),
(192,514,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 2 11 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 103 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
4 2 11 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 103 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
61 60 39 38 1 0 78 75 60 82 61 81 55 52 38 59 39 58 32 30 28 26 23 20 17 15 12 9 6 4 0 37 1 36 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,688,qs),
(29,693,o),
(29,701,qs),
(29,737,o),
(91,737,qs),
(192,737,ls),
(227,737,o),
(227,705,qs),
(227,701,ls),
(227,693,o),
(218,693,qs),
(103,693,ls),
(70,693,o),
(51,686,q),
(50,686,o),
(48,685,qs),
(46,684,o),
(45,684,qs),
(44,684,o),
(44,683,q),
(40,681,o),
(38,681,qs),
(34,681,o)
);
},
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
58 42 31 3 3 2 52 1 7 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 4 9 3 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 4 9 3 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
24 23 55 53 51 49 46 44 40 38 35 33 29 27 23 60 24 60 51 57 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,701,o),
(44,703,qs),
(76,721,o),
(117,749,q),
(87,775,o),
(86,805,qs),
(85,833,o),
(122,869,o),
(152,869,qs),
(182,869,o),
(218,835,o),
(217,807,qs),
(216,778,o),
(178,746,q),
(193,727,o),
(172,709,qs),
(165,704,o),
(159,711,qs),
(147,722,l),
(109,694,o),
(99,690,q),
(98,690,o),
(96,689,qs),
(81,680,o),
(72,680,qs),
(55,680,o),
(46,692,qs),
(43,696,ls)
);
},
{
closed = 1;
nodes = (
(127,806,qs),
(127,790,o),
(150,772,q),
(176,790,o),
(177,806,qs),
(178,817,o),
(163,833,o),
(153,833,qs),
(126,833,o)
);
},
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
33 31 27 23 13 8 6 0 2 72 56 45 3 4 3 66 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
38 37 29 28 69 67 65 63 60 58 54 52 49 47 43 41 37 74 38 74 28 36 29 36 46 33 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,735,o),
(261,728,qs),
(261,668,ls),
(261,627,o),
(219,581,o),
(182,581,qs),
(147,581,o),
(128,602,q),
(107,581,o),
(75,581,qs),
(-5,581,o),
(-5,668,qs),
(-5,688,ls),
(-5,735,o),
(31,735,qs),
(38,735,ls),
(44,735,o),
(44,728,qs),
(44,663,ls),
(44,626,o),
(74,626,qs),
(103,626,o),
(103,663,qs),
(103,688,ls),
(103,735,o),
(139,735,qs),
(146,735,ls),
(152,735,o),
(152,728,qs),
(152,663,ls),
(152,626,o),
(182,626,qs),
(211,626,o),
(211,663,qs),
(211,688,ls),
(211,735,o),
(247,735,qs),
(254,735,ls)
);
},
{
closed = 1;
nodes = (
(219,511,o),
(219,481,qs),
(219,477,ls),
(219,471,o),
(212,471,qs),
(107,471,ls),
(69,471,o),
(49,462,qs),
(44,459,o),
(42,459,qs),
(40,459,o),
(39,464,q),
(36,470,o),
(37,476,qs),
(38,492,o),
(53,501,qs),
(68,510,o),
(93,511,qs),
(187,511,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
29 1 5 1 42 1 8 7 2 76 46 1 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
4 2 9 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 95 0 8 7 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 2 9 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 95 0 8 7 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
39 38 1 0 52 49 38 56 39 55 32 30 28 26 23 20 17 15 12 9 6 4 0 37 1 36 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,779,qs),
(106,785,o),
(106,787,q),
(103,796,o),
(103,805,qs),
(103,824,o),
(119,834,qs),
(124,837,o),
(127,838,qs),
(135,841,o),
(139,835,qs),
(149,822,o),
(153,792,qs),
(155,774,o),
(155,758,qs),
(155,744,o),
(153,730,qs),
(149,704,o),
(138,689,qs),
(132,682,o),
(126,682,qs),
(120,682,o),
(120,697,qs),
(120,714,o),
(117,734,qs),
(113,762,o)
);
},
{
closed = 1;
nodes = (
(261,619,o),
(261,613,qs),
(261,552,ls),
(261,512,o),
(219,466,o),
(182,466,qs),
(147,466,o),
(128,486,q),
(107,466,o),
(75,466,qs),
(-5,466,o),
(-5,552,qs),
(-5,572,ls),
(-5,619,o),
(31,619,qs),
(38,619,ls),
(44,619,o),
(44,613,qs),
(44,547,ls),
(44,510,o),
(74,510,qs),
(103,510,o),
(103,547,qs),
(103,572,ls),
(103,619,o),
(139,619,qs),
(146,619,ls),
(152,619,o),
(152,613,qs),
(152,547,ls),
(152,510,o),
(182,510,qs),
(211,510,o),
(211,547,qs),
(211,572,ls),
(211,619,o),
(247,619,qs),
(254,619,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
61 45 34 3 2 1 55 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 5 3 8 3 1 2 2 1 112 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 5 3 8 3 1 2 1 133 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
27 26 58 56 54 52 49 47 43 41 38 36 32 30 26 63 27 63 35 9 7 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(860,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-101,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 6 9 10 106 0 4 0 6 4 6 101 2 13 2 0 0 3 95 8 7 2 3 3 24 3 78 70 69 58 57 1 0 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(991,-1,l),
(939,-1,ls),
(861,-1,o),
(818,48,q),
(775,-1,o),
(697,-1,qs),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l),
(699,74,ls),
(737,74,o),
(780,124,o),
(780,168,qs),
(780,290,ls),
(780,358,o),
(840,358,qs),
(848,358,ls),
(856,358,o),
(856,349,qs),
(856,167,ls),
(856,123,o),
(899,74,o),
(937,74,qs),
(991,74,l)
);
},
{
closed = 1;
nodes = (
(767,-100,o),
(767,-119,qs),
(767,-139,o),
(741,-165,o),
(722,-165,qs),
(704,-165,o),
(679,-139,o),
(679,-119,qs),
(679,-100,o),
(704,-75,o),
(722,-75,qs),
(741,-75,o)
);
},
{
closed = 1;
nodes = (
(892,-100,o),
(892,-119,qs),
(892,-139,o),
(867,-165,o),
(849,-165,qs),
(830,-165,o),
(804,-139,o),
(804,-119,qs),
(804,-100,o),
(830,-75,o),
(849,-75,qs),
(867,-75,o)
);
},
{
closed = 1;
nodes = (
(323,-299,o),
(323,-318,qs),
(323,-338,o),
(297,-364,o),
(278,-364,qs),
(260,-364,o),
(235,-338,o),
(235,-318,qs),
(235,-299,o),
(260,-274,o),
(278,-274,qs),
(297,-274,o)
);
},
{
closed = 1;
nodes = (
(448,-299,o),
(448,-318,qs),
(448,-338,o),
(423,-364,o),
(405,-364,qs),
(386,-364,o),
(360,-338,o),
(360,-318,qs),
(360,-299,o),
(386,-274,o),
(405,-274,qs),
(423,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
52 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 6 9 10 106 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 95 8 7 2 3 3 24 3 78 94 93 82 81 70 69 58 57 1 0 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 37 35 27 25 22 20 16 12 8 5 0 56 1 56 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 982;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1154,0,o),
(1154,8,qs),
(1154,488,ls),
(1154,556,o),
(1215,556,qs),
(1222,556,ls),
(1230,556,o),
(1230,548,qs),
(1230,68,ls),
(1230,0,o),
(1169,0,qs),
(1163,0,ls)
);
},
{
closed = 1;
nodes = (
(648,755,qs),
(645,764,o),
(645,773,qs),
(645,792,o),
(661,802,qs),
(666,805,o),
(669,806,qs),
(677,809,o),
(682,803,qs),
(692,790,o),
(695,760,qs),
(701,702,o),
(680,675,qs),
(674,667,o),
(668,667,qs),
(663,667,o),
(662,683,qs),
(661,707,o)
);
},
{
closed = 1;
nodes = (
(539,577,qs),
(539,583,ls),
(539,630,o),
(575,630,qs),
(582,630,ls),
(588,630,o),
(588,623,qs),
(588,572,ls),
(588,534,o),
(618,534,qs),
(647,534,o),
(647,572,qs),
(647,583,ls),
(647,630,o),
(683,630,qs),
(689,630,ls),
(696,630,o),
(696,623,qs),
(696,572,ls),
(696,534,o),
(725,534,qs),
(755,534,o),
(755,572,qs),
(755,583,ls),
(755,630,o),
(791,630,qs),
(798,630,ls),
(804,630,o),
(804,623,qs),
(804,577,ls),
(804,536,o),
(763,490,o),
(726,490,qs),
(691,490,o),
(672,511,q),
(651,490,o),
(619,490,qs),
(539,490,o)
);
},
{
closed = 1;
nodes = (
(1021,431,o),
(1021,423,qs),
(1021,168,ls),
(1021,94,o),
(984,50,qs),
(942,0,o),
(862,0,qs),
(784,0,ls),
(711,0,o),
(672,51,q),
(630,0,o),
(550,0,qs),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(552,74,ls),
(590,74,o),
(633,124,o),
(633,169,qs),
(633,363,ls),
(633,431,o),
(693,431,qs),
(700,431,ls),
(709,431,o),
(709,423,qs),
(709,168,ls),
(709,124,o),
(752,74,o),
(789,74,qs),
(864,74,ls),
(902,74,o),
(945,124,o),
(945,169,qs),
(945,363,ls),
(945,431,o),
(1005,431,qs),
(1013,431,ls)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
32 1 3 6 115 110 2 0 11 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
32 1 3 6 115 110 2 0 19 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 2 5 2 133 9 7 2 5 1 6 5 112 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 0 1 1 23 77 24 19 13 3 11 11 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 0 1 1 23 77 24 19 13 3 11 11 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 0 1 1 23 77 13 1 11 11 0 97 18 17 16 21 4 0 0 24 77 24 1 19 19 0 97 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 0 1 1 23 77 13 1 11 11 0 95 18 17 21 3 0 0 24 77 24 1 19 19 16 97 0 16 16 24 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 24 1 19 0 16 19 16 101 0 1 1 23 77 13 1 11 11 0 95 18 17 21 3 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 61 values pushed */
127 126 69 68 31 30 1 0 134 132 126 138 127 138 119 116 114 111 109 107 101 98 97 94 90 87 83 80 76 73 68 125 69 124 64 61 58 56 53 50 47 45 42 39 35 33 30 67 31 67 15 13 7 4 0 11 1 10 25 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1297;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,12,o),
(321,35,qs),
(341,63,ls),
(351,78,o),
(351,91,qs),
(351,193,l),
(426,209,l),
(426,56,l),
(665,107,l),
(681,139,o),
(687,188,q),
(500,148,l),
(500,224,l),
(666,260,l),
(682,299,o),
(687,341,q),
(500,301,l),
(500,575,l),
(459,551,o),
(426,510,q),
(426,285,l),
(351,269,l),
(351,612,l),
(315,593,o),
(277,548,q),
(277,253,l),
(110,218,l),
(93,178,o),
(88,137,q),
(277,177,l),
(277,81,l),
(74,38,l),
(58,-3,o),
(53,-43,q),
(279,6,ls)
);
},
{
closed = 1;
nodes = (
(426,-96,q),
(666,-45,l),
(682,-5,o),
(687,35,q),
(448,-16,l),
(432,-54,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,649,q),
(30,647,o),
(28,644,qs),
(23,636,o),
(21,635,qs),
(18,634,o),
(17,634,qs),
(13,634,o),
(10,638,qs),
(3,650,o),
(3,662,qs),
(3,680,o),
(28,706,o),
(45,706,qs),
(68,706,o),
(111,690,qs),
(113,689,o),
(115,689,q),
(151,677,o),
(160,677,qs),
(172,677,o),
(181,689,qs),
(182,691,o),
(185,695,qs),
(190,702,o),
(192,703,qs),
(194,704,o),
(196,704,qs),
(200,704,o),
(202,700,q),
(210,689,o),
(210,676,qs),
(210,658,o),
(185,632,o),
(167,632,qs),
(144,632,o),
(101,648,q),
(100,649,o),
(97,650,qs),
(62,662,o),
(52,662,qs),
(41,662,o)
);
},
{
closed = 1;
nodes = (
(156,0,o),
(115,39,qs),
(67,83,o),
(67,168,qs),
(67,488,ls),
(67,556,o),
(127,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,169,ls),
(143,124,o),
(185,74,o),
(224,74,qs),
(278,74,l),
(278,0,l),
(226,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
13 1 2 3 1 76 0 3 7 1 0 1 3 0 105 0 2 0 1 5 2 1 105 0 5 5 23 77 0 4 4 6 97 8 1 6 6 24 6 78 42 42 1 0 42 58 42 57 52 49 45 43 28 26 22 20 7 5 0 41 1 41 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,639,o),
(31,632,qs),
(29,631,o),
(26,630,qs),
(21,628,o),
(19,628,qs),
(15,628,o),
(13,634,qs),
(11,639,o),
(11,647,qs),
(11,676,o),
(50,682,q),
(40,701,o),
(40,721,qs),
(40,753,o),
(83,797,o),
(115,798,qs),
(141,798,o),
(178,771,o),
(180,750,qs),
(180,739,o),
(172,739,q),
(170,740,o),
(164,743,qs),
(161,744,o),
(159,745,qs),
(142,754,o),
(124,754,qs),
(87,754,o),
(87,720,qs),
(87,704,o),
(107,684,o),
(122,684,qs),
(166,684,ls),
(201,684,o),
(201,652,qs),
(201,648,ls),
(201,639,o),
(192,639,qs),
(85,639,ls)
);
},
{
closed = 1;
nodes = (
(278,0,l),
(226,0,ls),
(156,0,o),
(115,39,qs),
(67,83,o),
(67,168,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,169,ls),
(143,124,o),
(186,74,o),
(224,74,qs),
(278,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
19 1 1 2 27 1 0 1 2 76 0 3 0 2 1 3 2 105 0 1 7 1 0 5 1 0 103 0 5 5 23 77 8 1 4 4 6 97 0 6 6 24 6 78 41 40 1 0 55 53 48 45 40 56 41 56 23 21 12 10 7 4 0 39 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,455,qs),
(123,496,o),
(170,502,qs),
(171,502,l),
(160,521,o),
(160,541,qs),
(160,574,o),
(203,618,o),
(235,618,qs),
(262,619,o),
(299,592,o),
(300,571,qs),
(300,559,o),
(293,560,qs),
(290,561,o),
(285,563,qs),
(281,565,o),
(280,566,q),
(262,574,o),
(245,574,qs),
(208,574,o),
(208,541,qs),
(208,525,o),
(227,504,o),
(243,504,qs),
(287,504,ls),
(322,504,o),
(322,472,qs),
(322,468,ls),
(322,460,o),
(312,460,qs),
(205,460,ls),
(170,460,o),
(152,453,qs),
(150,452,o),
(146,451,q),
(141,448,o),
(139,448,qs),
(134,448,o)
);
},
{
closed = 1;
nodes = (
(536,0,l),
(398,0,l),
(391,-74,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(310,-141,o),
(324,0,q),
(227,0,ls),
(158,0,o),
(110,46,qs),
(56,98,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(336,377,o),
(378,276,qs),
(400,223,o),
(402,132,qs),
(402,92,o),
(402,74,q),
(536,74,l)
);
},
{
closed = 1;
nodes = (
(328,199,o),
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,137,o),
(188,74,o),
(228,74,qs),
(323,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
34 1 0 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
34 1 1 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 8 6 7 6 8 7 128 0 4 0 3 2 4 3 105 0 2 1 14 2 0 5 2 0 105 0 5 0 13 11 5 13 105 0 7 0 9 7 9 101 16 12 15 3 11 11 6 95 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
14 1 0 1 5 1 0 5 128 0 8 6 7 6 8 7 128 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 5 0 13 11 5 13 105 0 7 0 9 7 9 101 16 12 15 3 11 11 6 95 10 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
73 72 39 39 1 0 80 78 72 83 73 83 39 71 39 71 70 69 66 64 61 59 57 55 54 52 46 44 30 28 19 17 14 11 8 5 0 38 1 38 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,0,l),
(228,0,ls),
(158,0,o),
(117,39,qs),
(69,83,o),
(69,168,qs),
(69,488,ls),
(69,556,o),
(130,556,qs),
(137,556,ls),
(145,556,o),
(145,548,qs),
(145,169,ls),
(145,124,o),
(188,74,o),
(226,74,qs),
(280,74,l)
);
},
{
closed = 1;
nodes = (
(208,-183,o),
(208,-216,qs),
(208,-219,ls),
(208,-228,o),
(199,-228,qs),
(91,-228,ls),
(57,-228,o),
(39,-234,qs),
(36,-235,o),
(32,-237,qs),
(28,-239,o),
(26,-239,qs),
(21,-239,o),
(19,-233,qs),
(15,-214,o),
(35,-188,o),
(57,-186,q),
(47,-167,o),
(47,-147,qs),
(47,-114,o),
(90,-70,o),
(122,-69,qs),
(148,-69,o),
(185,-96,o),
(187,-117,qs),
(187,-128,o),
(179,-128,q),
(177,-127,o),
(171,-124,qs),
(168,-123,o),
(166,-122,qs),
(148,-113,o),
(131,-113,qs),
(94,-113,o),
(94,-147,qs),
(94,-163,o),
(114,-183,o),
(129,-183,qs),
(173,-183,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
30 1 3 4 38 1 6 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
30 1 3 4 38 1 7 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 4 3 5 4 106 9 1 3 7 1 6 3 6 101 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 6 134 0 5 0 4 3 5 4 106 9 1 3 0 7 6 3 7 103 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
18 17 1 0 51 48 44 42 34 32 23 21 17 55 18 54 15 13 8 5 0 16 1 16 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,309,qs),
(246,328,o),
(266,353,o),
(288,356,qs),
(289,356,l),
(278,375,o),
(278,395,qs),
(278,428,o),
(321,472,o),
(353,472,qs),
(380,473,o),
(417,445,o),
(418,424,qs),
(418,413,o),
(410,414,q),
(408,415,o),
(402,417,q),
(399,419,o),
(398,419,q),
(380,428,o),
(363,428,qs),
(325,428,o),
(325,394,qs),
(325,379,o),
(345,358,o),
(360,358,qs),
(404,358,ls),
(439,358,o),
(439,326,qs),
(439,322,ls),
(439,314,o),
(430,314,qs),
(323,314,ls),
(288,314,o),
(270,307,qs),
(267,306,o),
(264,304,qs),
(259,302,o),
(257,302,qs),
(252,302,o)
);
},
{
closed = 1;
nodes = (
(642,0,l),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
34 1 0 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
34 1 1 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 0 5 0 8 5 128 0 4 0 3 2 4 3 105 0 2 1 11 2 0 8 2 0 105 0 7 0 9 7 9 101 12 1 5 5 6 95 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
11 1 0 1 8 1 0 8 128 0 8 5 1 8 5 126 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 7 0 9 7 9 101 12 1 5 5 6 95 10 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 75 74 71 69 62 60 52 50 47 45 40 76 41 76 30 28 19 17 14 11 8 5 0 39 1 39 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 633;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,487,o),
(237,455,qs),
(237,451,ls),
(237,443,o),
(228,443,qs),
(120,443,ls),
(86,443,o),
(68,436,qs),
(65,435,o),
(62,434,q),
(57,431,o),
(55,431,qs),
(50,431,o),
(48,438,qs),
(44,457,o),
(64,482,o),
(86,485,q),
(76,504,o),
(76,524,qs),
(76,556,o),
(119,601,o),
(151,601,qs),
(177,602,o),
(214,574,o),
(216,553,qs),
(216,542,o),
(208,543,q),
(206,544,o),
(200,546,q),
(197,548,o),
(195,548,q),
(178,557,o),
(160,557,qs),
(123,557,o),
(123,523,qs),
(123,508,o),
(143,487,o),
(158,487,qs),
(202,487,ls)
);
},
{
closed = 1;
nodes = (
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
13 1 0 1 21 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
13 1 0 1 21 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 5 3 6 3 5 6 128 0 2 0 1 0 2 1 105 8 1 0 4 1 3 5 0 3 105 0 6 6 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 3 4 5 4 3 5 128 9 1 5 6 4 5 6 126 0 2 0 1 0 2 1 105 8 1 0 0 4 3 0 4 103 0 6 6 7 97 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
40 39 1 0 49 47 46 44 39 55 40 54 34 31 27 25 17 15 6 4 0 38 1 37 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,438,qs),
(44,457,o),
(64,482,o),
(86,485,q),
(76,504,o),
(76,524,qs),
(76,556,o),
(119,601,o),
(151,601,qs),
(177,602,o),
(214,574,o),
(216,553,qs),
(216,542,o),
(208,543,q),
(206,544,o),
(200,546,q),
(197,548,o),
(195,548,q),
(178,557,o),
(160,557,qs),
(123,557,o),
(123,523,qs),
(123,508,o),
(143,487,o),
(158,487,qs),
(202,487,ls),
(237,487,o),
(237,455,qs),
(237,451,ls),
(237,443,o),
(228,443,qs),
(120,443,ls),
(86,443,o),
(68,436,qs),
(65,435,o),
(62,434,q),
(57,431,o),
(55,431,qs),
(50,431,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
26 1 2 3 34 1 0 2 57 1 8 5 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
26 1 2 3 34 1 1 2 57 1 8 5 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 0 5 0 6 5 128 0 4 0 3 2 4 3 105 0 2 1 10 2 0 6 2 0 105 7 11 2 5 5 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
10 1 0 1 6 1 0 6 128 0 6 5 1 6 5 126 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 7 11 2 5 5 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
40 39 1 0 60 58 56 54 53 51 47 44 39 61 40 61 30 28 19 17 14 11 8 5 0 38 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,0,o),
(115,39,qs),
(67,83,o),
(67,168,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,169,ls),
(143,124,o),
(185,74,o),
(224,74,qs),
(278,74,l),
(278,0,l),
(226,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 97 3 1 2 2 24 2 78 0 0 0 16 0 15 52 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(696,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
},
{
closed = 1;
nodes = (
(429,-98,o),
(429,-119,qs),
(429,-140,o),
(400,-169,o),
(380,-169,qs),
(359,-169,o),
(330,-140,o),
(330,-119,qs),
(330,-98,o),
(359,-69,o),
(380,-69,qs),
(401,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
34 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 96 5 1 4 4 24 4 78 40 39 1 0 46 44 39 50 40 50 37 35 33 30 23 21 15 12 8 5 0 38 1 38 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(182,358,o),
(182,350,qs),
(182,168,ls),
(182,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
},
{
closed = 1;
nodes = (
(84,-98,o),
(84,-119,qs),
(84,-140,o),
(56,-169,o),
(35,-169,qs),
(15,-169,o),
(-14,-140,o),
(-14,-119,qs),
(-14,-98,o),
(15,-69,o),
(35,-69,qs),
(56,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 97 5 1 0 0 24 0 78 18 17 1 0 24 22 17 28 18 28 15 13 9 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
},
{
closed = 1;
nodes = (
(193,-98,o),
(193,-119,qs),
(193,-140,o),
(165,-169,o),
(144,-169,qs),
(123,-169,o),
(95,-140,o),
(95,-119,qs),
(95,-98,o),
(123,-69,o),
(144,-69,qs),
(165,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
18 1 3 0 1 76 0 1 0 1 133 8 1 5 0 6 5 6 102 2 7 2 0 0 3 97 4 1 3 3 24 3 78 24 23 1 0 30 28 23 34 24 34 21 19 17 15 14 12 8 5 0 22 1 22 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,502,o),
(133,521,qs),
(133,540,o),
(157,566,o),
(176,566,qs),
(195,566,o),
(220,540,o),
(220,521,qs),
(220,502,o),
(195,476,o),
(176,476,qs),
(158,476,o)
);
},
{
closed = 1;
nodes = (
(258,502,o),
(258,521,qs),
(258,540,o),
(284,566,o),
(303,566,qs),
(321,566,o),
(346,540,o),
(346,521,qs),
(346,502,o),
(321,476,o),
(303,476,qs),
(284,476,o)
);
},
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 4 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
45 1 7 9 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
45 1 8 9 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 7 97 8 1 7 7 24 77 14 1 9 9 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 103 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
51 50 25 24 13 12 1 0 58 56 50 62 51 62 48 46 44 42 36 33 32 29 24 49 25 49 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,403,o),
(277,422,qs),
(277,441,o),
(301,467,o),
(320,467,qs),
(339,467,o),
(364,441,o),
(364,422,qs),
(364,403,o),
(339,377,o),
(320,377,qs),
(301,377,o)
);
},
{
closed = 1;
nodes = (
(402,403,o),
(402,422,qs),
(402,441,o),
(428,467,o),
(447,467,qs),
(465,467,o),
(490,441,o),
(490,422,qs),
(490,403,o),
(465,377,o),
(447,377,qs),
(428,377,o)
);
},
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
58 1 8 4 1 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 96 9 1 8 8 24 8 78 25 24 13 12 1 0 61 59 57 54 47 45 39 36 32 29 24 62 25 62 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 823;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,460,o),
(35,479,qs),
(35,498,o),
(60,524,o),
(78,524,qs),
(97,524,o),
(123,498,o),
(123,479,qs),
(123,460,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(160,460,o),
(160,479,qs),
(160,498,o),
(186,524,o),
(205,524,qs),
(223,524,o),
(248,498,o),
(248,479,qs),
(248,460,o),
(223,434,o),
(205,434,qs),
(186,434,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 97 9 1 4 4 24 4 78 25 24 13 12 1 0 39 37 33 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,460,o),
(35,479,qs),
(35,498,o),
(60,524,o),
(78,524,qs),
(97,524,o),
(123,498,o),
(123,479,qs),
(123,460,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(160,460,o),
(160,479,qs),
(160,498,o),
(186,524,o),
(205,524,qs),
(223,524,o),
(248,498,o),
(248,479,qs),
(248,460,o),
(223,434,o),
(205,434,qs),
(186,434,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
42 1 7 4 1 76 0 5 0 4 0 5 4 128 3 1 1 10 2 9 3 0 5 1 0 105 6 11 2 4 4 7 97 8 1 7 7 24 7 78 25 24 13 12 1 0 45 43 41 39 38 36 32 29 24 46 25 46 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,497,o),
(340,516,qs),
(340,536,o),
(366,562,o),
(385,562,qs),
(403,562,o),
(428,536,o),
(428,516,qs),
(428,497,o),
(403,472,o),
(385,472,qs),
(366,472,o)
);
},
{
closed = 1;
nodes = (
(276,402,o),
(276,421,qs),
(276,440,o),
(301,466,o),
(319,466,qs),
(338,466,o),
(364,440,o),
(364,421,qs),
(364,402,o),
(338,376,o),
(319,376,qs),
(301,376,o)
);
},
{
closed = 1;
nodes = (
(427,466,o),
(446,466,qs),
(465,466,o),
(489,440,o),
(489,421,qs),
(489,402,o),
(465,376,o),
(446,376,qs),
(427,376,o),
(402,402,o),
(402,421,qs),
(402,440,o)
);
},
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,291,ls),
(618,358,o),
(679,358,qs),
(686,358,ls),
(694,358,o),
(694,350,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
70 1 10 6 1 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 5 1 3 4 13 2 2 7 3 2 105 12 1 0 0 1 97 0 1 1 23 77 8 14 2 6 6 10 96 11 1 10 10 24 10 78 37 36 13 12 1 0 73 71 69 66 59 57 51 48 44 41 36 74 37 74 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,555,o),
(99,574,qs),
(99,593,o),
(125,619,o),
(144,619,qs),
(162,619,o),
(187,593,o),
(187,574,qs),
(187,555,o),
(162,529,o),
(144,529,qs),
(125,529,o)
);
},
{
closed = 1;
nodes = (
(35,459,o),
(35,478,qs),
(35,498,o),
(60,524,o),
(78,524,qs),
(97,524,o),
(123,498,o),
(123,478,qs),
(123,459,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(248,498,o),
(248,478,qs),
(248,459,o),
(223,434,o),
(205,434,qs),
(186,434,o),
(160,459,o),
(160,478,qs),
(160,498,o),
(186,524,o),
(205,524,qs),
(223,524,o)
);
},
{
closed = 1;
nodes = (
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
12 1 6 2 7 2 6 7 128 0 1 9 1 0 3 1 0 105 11 4 2 3 5 10 2 2 6 3 2 105 0 7 7 8 97 0 8 8 24 8 78 37 36 25 24 13 12 1 0 46 44 43 41 36 52 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,555,o),
(99,574,qs),
(99,593,o),
(125,619,o),
(144,619,qs),
(162,619,o),
(187,593,o),
(187,574,qs),
(187,555,o),
(162,529,o),
(144,529,qs),
(125,529,o)
);
},
{
closed = 1;
nodes = (
(35,459,o),
(35,478,qs),
(35,498,o),
(60,524,o),
(78,524,qs),
(97,524,o),
(123,498,o),
(123,478,qs),
(123,459,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(186,524,o),
(205,524,qs),
(223,524,o),
(248,498,o),
(248,478,qs),
(248,459,o),
(223,434,o),
(205,434,qs),
(186,434,o),
(160,459,o),
(160,478,qs),
(160,498,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
54 1 9 6 1 76 0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 8 13 2 6 6 9 97 10 1 9 9 24 9 78 37 36 13 12 1 0 57 55 53 51 50 48 44 41 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,0,l),
(562,0,ls),
(502,0,o),
(468,37,q),
(417,0,o),
(332,0,qs),
(275,0,ls),
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(335,74,ls),
(392,74,o),
(425,99,q),
(411,126,o),
(388,199,qs),
(352,306,o),
(264,306,qs),
(206,306,o),
(152,258,q),
(151,258,o),
(150,257,qs),
(136,245,o),
(128,245,qs),
(109,245,o),
(119,276,qs),
(132,316,o),
(168,343,qs),
(214,378,o),
(275,377,qs),
(415,376,o),
(468,209,qs),
(488,144,o),
(508,101,o),
(523,89,qs),
(544,74,o),
(571,74,qs),
(617,74,l)
);
},
{
closed = 1;
nodes = (
(299,-78,o),
(320,-78,qs),
(341,-78,o),
(369,-107,o),
(369,-128,qs),
(369,-149,o),
(340,-178,o),
(320,-178,qs),
(299,-178,o),
(270,-149,o),
(270,-128,qs),
(270,-107,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
23 1 0 2 56 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 0 10 0 9 6 10 9 105 0 6 0 5 6 5 101 4 11 2 0 0 7 97 8 1 7 7 24 7 78 1 0 71 69 65 63 59 57 55 52 46 44 35 33 27 24 20 18 14 12 8 6 0 60 1 60 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(406,74,l),
(393,86,o),
(375,128,o),
(354,194,qs),
(317,306,o),
(229,306,qs),
(171,306,o),
(116,258,qs),
(115,257,ls),
(101,245,o),
(93,245,qs),
(73,245,o),
(84,276,qs),
(97,315,o),
(133,343,qs),
(178,378,o),
(240,377,qs),
(381,376,o),
(433,207,qs),
(457,120,o),
(484,90,qs),
(497,76,o),
(519,75,q),
(528,73,o),
(528,66,qs),
(528,35,o),
(490,0,o),
(458,0,qs),
(-3,0,l)
);
},
{
closed = 1;
nodes = (
(276,-98,o),
(276,-119,qs),
(276,-140,o),
(248,-169,o),
(228,-169,qs),
(207,-169,o),
(178,-140,o),
(178,-119,qs),
(178,-98,o),
(207,-69,o),
(228,-69,qs),
(248,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 9 1 6 0 7 6 7 101 5 1 1 1 0 95 8 1 0 0 24 0 78 31 30 1 0 37 35 30 41 31 41 28 27 23 21 18 16 12 10 6 5 0 29 1 29 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,0,l),
(526,0,ls),
(467,0,o),
(432,37,q),
(382,0,o),
(296,0,qs),
(-3,0,l),
(-3,74,l),
(300,74,ls),
(356,74,o),
(390,99,q),
(375,126,o),
(352,199,qs),
(317,306,o),
(229,306,qs),
(170,306,o),
(116,258,q),
(115,258,o),
(114,257,qs),
(101,245,o),
(92,245,qs),
(73,245,o),
(83,276,qs),
(96,316,o),
(133,343,qs),
(178,378,o),
(240,377,qs),
(379,376,o),
(432,209,qs),
(452,144,o),
(472,101,o),
(488,89,qs),
(508,74,o),
(535,74,qs),
(581,74,l)
);
},
{
closed = 1;
nodes = (
(276,-98,o),
(276,-119,qs),
(276,-140,o),
(248,-169,o),
(228,-169,qs),
(207,-169,o),
(178,-140,o),
(178,-119,qs),
(178,-98,o),
(207,-69,o),
(228,-69,qs),
(248,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
23 1 0 2 30 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 10 1 7 0 8 7 8 101 4 9 2 0 0 5 97 6 1 5 5 24 5 78 36 35 1 0 42 40 35 46 36 46 33 31 29 27 26 24 20 18 14 12 8 6 0 34 1 34 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,0,l),
(562,0,ls),
(502,0,o),
(468,37,q),
(417,0,o),
(332,0,qs),
(275,0,ls),
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(335,74,ls),
(392,74,o),
(425,99,q),
(411,126,o),
(388,199,qs),
(352,306,o),
(264,306,qs),
(206,306,o),
(152,258,q),
(151,258,o),
(150,257,qs),
(136,245,o),
(128,245,qs),
(109,245,o),
(119,276,qs),
(132,316,o),
(168,343,qs),
(214,378,o),
(275,377,qs),
(415,376,o),
(468,209,qs),
(488,144,o),
(508,101,o),
(523,89,qs),
(544,74,o),
(571,74,qs),
(617,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
23 1 0 2 56 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 0 6 0 5 6 5 101 4 9 2 0 0 7 97 8 1 7 7 24 7 78 1 0 59 57 55 52 46 44 35 33 27 24 20 18 14 12 8 6 0 60 1 60 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(406,74,l),
(393,86,o),
(375,128,o),
(354,194,qs),
(317,306,o),
(229,306,qs),
(171,306,o),
(116,258,qs),
(115,257,ls),
(101,245,o),
(93,245,qs),
(73,245,o),
(84,276,qs),
(97,316,o),
(133,343,qs),
(179,378,o),
(240,377,qs),
(382,376,o),
(433,207,qs),
(457,120,o),
(484,90,qs),
(497,76,o),
(519,75,q),
(528,73,o),
(528,66,qs),
(528,35,o),
(490,0,o),
(458,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 5 1 1 1 0 95 6 1 0 0 24 0 78 1 0 28 27 23 21 18 16 12 10 6 5 0 29 1 29 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,0,l),
(526,0,ls),
(467,0,o),
(432,37,q),
(382,0,o),
(296,0,qs),
(-3,0,l),
(-3,74,l),
(300,74,ls),
(356,74,o),
(390,99,q),
(375,126,o),
(352,199,qs),
(317,306,o),
(229,306,qs),
(170,306,o),
(116,258,q),
(115,258,o),
(114,257,qs),
(101,245,o),
(92,245,qs),
(73,245,o),
(83,276,qs),
(96,316,o),
(133,343,qs),
(178,378,o),
(240,377,qs),
(379,376,o),
(432,209,qs),
(452,144,o),
(472,101,o),
(488,89,qs),
(508,74,o),
(535,74,qs),
(581,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
23 1 0 2 30 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 33 31 29 27 26 24 20 18 14 12 8 6 0 34 1 34 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,468,o),
(227,489,qs),
(227,511,o),
(255,539,o),
(276,539,qs),
(297,539,o),
(325,511,o),
(325,489,qs),
(325,469,o),
(296,439,o),
(276,439,qs),
(255,439,o)
);
},
{
closed = 1;
nodes = (
(617,0,l),
(562,0,ls),
(502,0,o),
(468,37,q),
(417,0,o),
(332,0,qs),
(275,0,ls),
(216,0,o),
(178,-35,qs),
(138,-73,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-46,o),
(107,8,qs),
(168,74,o),
(275,74,qs),
(335,74,ls),
(392,74,o),
(425,99,q),
(411,126,o),
(388,199,qs),
(352,306,o),
(264,306,qs),
(206,306,o),
(152,258,q),
(151,258,o),
(150,257,qs),
(136,245,o),
(128,245,qs),
(109,245,o),
(119,276,qs),
(132,316,o),
(168,343,qs),
(214,378,o),
(275,377,qs),
(415,376,o),
(468,209,qs),
(488,144,o),
(508,101,o),
(523,89,qs),
(544,74,o),
(571,74,qs),
(617,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 2 4 68 1 9 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 0 8 0 7 8 7 101 11 1 0 0 1 97 0 1 1 23 77 6 12 2 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 5 2 5 4 2 128 0 1 11 1 0 3 1 0 105 0 3 0 5 4 3 5 105 0 8 0 7 8 7 101 6 12 2 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 71 69 67 64 58 56 47 45 39 36 32 30 26 24 20 18 12 72 13 72 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,511,o),
(290,489,qs),
(290,469,o),
(261,439,o),
(241,439,qs),
(220,439,o),
(191,468,o),
(191,489,qs),
(191,511,o),
(220,539,o),
(241,539,qs),
(262,539,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(406,74,l),
(393,86,o),
(375,128,o),
(354,194,qs),
(317,306,o),
(229,306,qs),
(171,306,o),
(116,258,qs),
(115,257,ls),
(101,245,o),
(93,245,qs),
(73,245,o),
(84,276,qs),
(97,316,o),
(133,343,qs),
(179,378,o),
(240,377,qs),
(382,376,o),
(433,207,qs),
(457,120,o),
(484,90,qs),
(497,76,o),
(519,75,q),
(528,73,o),
(528,66,qs),
(528,35,o),
(490,0,o),
(458,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 6 3 6 5 3 128 0 4 0 6 5 4 6 105 0 1 1 0 97 8 1 0 0 23 77 7 1 3 3 2 95 9 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 3 6 5 3 128 8 1 0 0 1 4 0 1 105 0 4 0 6 5 4 6 105 7 1 3 3 2 95 9 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 40 39 35 33 30 28 24 22 18 17 12 41 13 41 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,468,o),
(191,489,qs),
(191,511,o),
(220,539,o),
(241,539,qs),
(262,539,o),
(290,511,o),
(290,489,qs),
(290,469,o),
(261,439,o),
(241,439,qs),
(220,439,o)
);
},
{
closed = 1;
nodes = (
(581,0,l),
(526,0,ls),
(467,0,o),
(432,37,q),
(382,0,o),
(296,0,qs),
(-3,0,l),
(-3,74,l),
(300,74,ls),
(356,74,o),
(390,99,q),
(375,126,o),
(352,199,qs),
(317,306,o),
(229,306,qs),
(170,306,o),
(116,258,q),
(115,258,o),
(114,257,qs),
(101,245,o),
(92,245,qs),
(73,245,o),
(83,276,qs),
(96,316,o),
(133,343,qs),
(178,378,o),
(240,377,qs),
(379,376,o),
(432,209,qs),
(452,144,o),
(472,101,o),
(488,89,qs),
(508,74,o),
(535,74,qs),
(581,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 2 4 42 1 7 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 45 43 41 39 38 36 32 30 26 24 20 18 12 46 13 46 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,0,l),
(450,0,ls),
(368,0,o),
(325,54,q),
(279,0,o),
(200,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o),
(320,328,qs),
(367,274,o),
(367,181,qs),
(367,166,ls),
(368,123,o),
(410,74,o),
(447,74,qs),
(502,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
34 1 5 0 1 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 37 35 33 30 26 23 19 17 15 13 9 7 0 38 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,462,o),
(108,483,qs),
(108,505,o),
(136,533,o),
(157,533,qs),
(178,533,o),
(206,504,o),
(206,483,qs),
(206,462,o),
(178,433,o),
(157,433,qs),
(136,433,o)
);
},
{
closed = 1;
nodes = (
(502,0,l),
(450,0,ls),
(368,0,o),
(325,54,q),
(279,0,o),
(200,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(198,74,ls),
(240,74,o),
(290,134,o),
(290,183,qs),
(290,240,o),
(239,306,o),
(195,306,qs),
(167,306,o),
(136,293,qs),
(126,288,o),
(118,288,qs),
(105,288,o),
(105,304,qs),
(105,328,o),
(131,350,qs),
(164,377,o),
(212,377,qs),
(279,377,o),
(320,328,qs),
(367,274,o),
(367,181,qs),
(367,166,ls),
(368,123,o),
(410,74,o),
(447,74,qs),
(502,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
46 1 7 2 1 76 0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 13 12 1 0 49 47 45 42 38 35 31 29 27 25 21 19 12 50 13 50 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 32 30 25 23 19 17 13 11 8 5 0 33 1 33 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,457,o),
(108,478,qs),
(108,500,o),
(136,528,o),
(157,528,qs),
(178,528,o),
(206,499,o),
(206,478,qs),
(206,457,o),
(178,428,o),
(157,428,qs),
(137,428,o)
);
},
{
closed = 1;
nodes = (
(326,0,l),
(273,0,ls),
(226,0,o),
(191,19,q),
(191,13,ls),
(191,-88,o),
(157,-146,qs),
(115,-215,o),
(28,-214,qs),
(-10,-214,o),
(-76,-176,o),
(-89,-148,qs),
(-94,-139,o),
(-87,-124,o),
(-78,-124,qs),
(-74,-124,o),
(-67,-127,qs),
(-64,-128,o),
(-63,-128,q),
(-20,-143,o),
(15,-143,qs),
(115,-141,o),
(115,-4,qs),
(115,291,ls),
(115,358,o),
(175,358,qs),
(182,358,ls),
(191,358,o),
(191,350,qs),
(191,168,ls),
(191,124,o),
(234,74,o),
(271,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
40 1 7 2 1 76 0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 44 42 37 35 31 29 25 23 20 17 12 45 13 45 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1165,0,l),
(1113,0,ls),
(1039,0,o),
(996,44,q),
(954,-10,o),
(872,-9,qs),
(797,-9,o),
(755,40,q),
(715,-9,o),
(633,-9,qs),
(588,-9,o),
(552,12,q),
(540,-88,o),
(478,-148,qs),
(410,-214,o),
(304,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-84,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(170,236,qs),
(183,236,o),
(183,224,qs),
(183,220,o),
(178,213,qs),
(131,136,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(304,-143,qs),
(369,-143,o),
(416,-101,qs),
(478,-47,o),
(478,55,qs),
(478,252,ls),
(478,297,o),
(507,312,qs),
(522,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(554,312,qs),
(554,159,ls),
(554,65,o),
(635,65,qs),
(674,65,o),
(716,114,o),
(716,159,qs),
(716,271,ls),
(716,338,o),
(777,338,qs),
(784,338,ls),
(792,338,o),
(792,331,qs),
(792,159,ls),
(792,65,o),
(873,65,qs),
(911,65,o),
(954,114,o),
(954,159,qs),
(954,291,ls),
(954,358,o),
(1014,358,qs),
(1021,358,ls),
(1030,358,o),
(1030,350,qs),
(1030,168,ls),
(1030,124,o),
(1073,74,o),
(1110,74,qs),
(1165,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
71 67 63 3 9 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
71 67 63 3 11 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 4 2 12 3 0 0 9 97 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 105 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 74 72 70 68 66 64 60 58 50 49 41 39 32 29 26 24 20 17 14 12 8 5 0 75 1 75 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1156;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(657,358,o),
(657,350,qs),
(657,158,ls),
(657,84,o),
(620,41,qs),
(578,-10,o),
(499,-9,qs),
(424,-9,o),
(382,40,q),
(342,-9,o),
(260,-9,qs),
(186,-9,o),
(140,46,q),
(98,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,246,ls),
(105,313,o),
(166,313,qs),
(173,313,ls),
(181,313,o),
(181,305,qs),
(181,168,l),
(181,159,ls),
(181,65,o),
(262,65,qs),
(301,65,o),
(343,114,o),
(343,159,qs),
(343,271,ls),
(343,338,o),
(404,338,qs),
(411,338,ls),
(419,338,o),
(419,331,qs),
(419,159,ls),
(419,65,o),
(500,65,qs),
(539,65,o),
(581,114,o),
(581,159,qs),
(581,291,ls),
(581,358,o),
(641,358,qs),
(648,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 36 2 6 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 97 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 97 7 1 6 6 24 77 5 3 2 1 1 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 101 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 43 41 39 37 35 33 32 30 26 23 19 17 13 10 7 5 0 49 1 48 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(792,0,l),
(740,0,ls),
(667,0,o),
(623,44,q),
(580,-10,o),
(499,-9,qs),
(424,-9,o),
(382,40,q),
(342,-9,o),
(260,-9,qs),
(186,-9,o),
(140,46,q),
(98,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,246,ls),
(105,313,o),
(166,313,qs),
(173,313,ls),
(181,313,o),
(181,305,qs),
(181,168,l),
(181,159,ls),
(181,65,o),
(262,65,qs),
(301,65,o),
(343,114,o),
(343,159,qs),
(343,271,ls),
(343,338,o),
(404,338,qs),
(411,338,ls),
(419,338,o),
(419,331,qs),
(419,159,ls),
(419,65,o),
(500,65,qs),
(539,65,o),
(581,114,o),
(581,159,qs),
(581,291,ls),
(581,358,o),
(641,358,qs),
(648,358,ls),
(657,358,o),
(657,350,qs),
(657,168,ls),
(657,124,o),
(700,74,o),
(738,74,qs),
(792,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
51 47 43 3 7 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
51 47 43 3 7 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 97 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 97 10 8 2 7 7 24 77 6 4 2 11 4 0 0 9 97 0 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 1 7 7 24 77 4 1 2 2 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 101 6 11 2 0 0 7 97 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 54 52 50 48 46 44 42 40 39 37 33 30 26 24 20 17 14 12 8 5 0 55 1 55 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(710,535,o),
(710,554,qs),
(710,574,o),
(735,600,o),
(754,600,qs),
(773,600,o),
(798,574,o),
(798,554,qs),
(798,535,o),
(773,510,o),
(754,510,qs),
(735,510,o)
);
},
{
closed = 1;
nodes = (
(645,440,o),
(645,459,qs),
(645,478,o),
(670,504,o),
(689,504,qs),
(708,504,o),
(733,478,o),
(733,459,qs),
(733,440,o),
(708,414,o),
(689,414,qs),
(670,414,o)
);
},
{
closed = 1;
nodes = (
(797,504,o),
(815,504,qs),
(834,504,o),
(859,478,o),
(859,459,qs),
(859,440,o),
(834,414,o),
(815,414,qs),
(797,414,o),
(771,440,o),
(771,459,qs),
(771,478,o)
);
},
{
closed = 1;
nodes = (
(1165,0,l),
(1113,0,ls),
(1039,0,o),
(996,44,q),
(954,-10,o),
(872,-9,qs),
(797,-9,o),
(755,40,q),
(715,-9,o),
(633,-9,qs),
(588,-9,o),
(552,12,q),
(540,-88,o),
(478,-148,qs),
(410,-214,o),
(304,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-84,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(170,236,qs),
(183,236,o),
(183,224,qs),
(183,220,o),
(178,213,qs),
(131,136,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(304,-143,qs),
(369,-143,o),
(416,-101,qs),
(478,-47,o),
(478,55,qs),
(478,252,ls),
(478,297,o),
(507,312,qs),
(522,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(554,312,qs),
(554,159,ls),
(554,65,o),
(635,65,qs),
(674,65,o),
(716,114,o),
(716,159,qs),
(716,271,ls),
(716,338,o),
(777,338,qs),
(784,338,ls),
(792,338,o),
(792,331,qs),
(792,159,ls),
(792,65,o),
(873,65,qs),
(911,65,o),
(954,114,o),
(954,159,qs),
(954,291,ls),
(954,358,o),
(1014,358,qs),
(1021,358,ls),
(1030,358,o),
(1030,350,qs),
(1030,168,ls),
(1030,124,o),
(1073,74,o),
(1110,74,qs),
(1165,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
107 103 99 3 15 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
107 103 99 3 17 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 10 8 20 3 6 6 15 97 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 97 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 105 0 12 0 14 12 14 101 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 110 108 106 104 102 100 96 94 86 85 77 75 68 65 62 60 56 53 50 48 44 41 36 111 37 111 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1156;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,535,o),
(337,554,qs),
(337,574,o),
(363,600,o),
(381,600,qs),
(400,600,o),
(425,574,o),
(425,554,qs),
(425,535,o),
(400,510,o),
(381,510,qs),
(362,510,o)
);
},
{
closed = 1;
nodes = (
(273,440,o),
(273,459,qs),
(273,478,o),
(297,504,o),
(316,504,qs),
(335,504,o),
(360,478,o),
(360,459,qs),
(360,440,o),
(335,414,o),
(316,414,qs),
(297,414,o)
);
},
{
closed = 1;
nodes = (
(424,504,o),
(443,504,qs),
(461,504,o),
(486,478,o),
(486,459,qs),
(486,440,o),
(461,414,o),
(443,414,qs),
(424,414,o),
(398,440,o),
(398,459,qs),
(398,478,o)
);
},
{
closed = 1;
nodes = (
(657,358,o),
(657,350,qs),
(657,158,ls),
(657,84,o),
(620,41,qs),
(578,-10,o),
(499,-9,qs),
(424,-9,o),
(382,40,q),
(342,-9,o),
(260,-9,qs),
(186,-9,o),
(140,46,q),
(98,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,246,ls),
(105,313,o),
(166,313,qs),
(173,313,ls),
(181,313,o),
(181,305,qs),
(181,168,l),
(181,159,ls),
(181,65,o),
(262,65,qs),
(301,65,o),
(343,114,o),
(343,159,qs),
(343,271,ls),
(343,338,o),
(404,338,qs),
(411,338,ls),
(419,338,o),
(419,331,qs),
(419,159,ls),
(419,65,o),
(500,65,qs),
(539,65,o),
(581,114,o),
(581,159,qs),
(581,291,ls),
(581,358,o),
(641,358,qs),
(648,358,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
76 72 2 12 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 97 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 97 13 1 12 12 24 77 11 9 2 7 7 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 97 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 101 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 13 12 1 0 79 77 75 73 71 69 68 66 62 59 55 53 49 46 43 41 36 85 37 84 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,535,o),
(337,554,qs),
(337,574,o),
(363,600,o),
(381,600,qs),
(400,600,o),
(425,574,o),
(425,554,qs),
(425,535,o),
(400,510,o),
(381,510,qs),
(362,510,o)
);
},
{
closed = 1;
nodes = (
(273,440,o),
(273,459,qs),
(273,478,o),
(297,504,o),
(316,504,qs),
(335,504,o),
(360,478,o),
(360,459,qs),
(360,440,o),
(335,414,o),
(316,414,qs),
(297,414,o)
);
},
{
closed = 1;
nodes = (
(424,504,o),
(443,504,qs),
(461,504,o),
(486,478,o),
(486,459,qs),
(486,440,o),
(461,414,o),
(443,414,qs),
(424,414,o),
(398,440,o),
(398,459,qs),
(398,478,o)
);
},
{
closed = 1;
nodes = (
(792,0,l),
(740,0,ls),
(667,0,o),
(623,44,q),
(580,-10,o),
(499,-9,qs),
(424,-9,o),
(382,40,q),
(342,-9,o),
(260,-9,qs),
(186,-9,o),
(140,46,q),
(98,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,246,ls),
(105,313,o),
(166,313,qs),
(173,313,ls),
(181,313,o),
(181,305,qs),
(181,168,l),
(181,159,ls),
(181,65,o),
(262,65,qs),
(301,65,o),
(343,114,o),
(343,159,qs),
(343,271,ls),
(343,338,o),
(404,338,qs),
(411,338,ls),
(419,338,o),
(419,331,qs),
(419,159,ls),
(419,65,o),
(500,65,qs),
(539,65,o),
(581,114,o),
(581,159,qs),
(581,291,ls),
(581,358,o),
(641,358,qs),
(648,358,ls),
(657,358,o),
(657,350,qs),
(657,168,ls),
(657,124,o),
(700,74,o),
(738,74,qs),
(792,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
87 83 79 3 13 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
87 83 79 3 13 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 97 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 97 16 14 2 13 13 24 77 12 10 8 19 4 6 6 15 97 0 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 1 13 13 24 77 10 1 8 8 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 101 12 19 2 6 6 13 97 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 90 88 86 84 82 80 78 76 75 73 69 66 62 60 56 53 50 48 44 41 36 91 37 91 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 784;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1319,0,l),
(1267,0,ls),
(1184,0,o),
(1140,55,q),
(1092,0,o),
(1014,0,qs),
(633,0,ls),
(589,0,o),
(555,21,q),
(545,-86,o),
(483,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(639,74,l),
(673,196,o),
(751,276,qs),
(848,377,o),
(983,377,qs),
(1065,377,o),
(1120,331,qs),
(1184,277,o),
(1184,182,qs),
(1184,181,l),
(1184,166,ls),
(1185,123,o),
(1227,74,o),
(1264,74,qs),
(1319,74,l)
);
},
{
closed = 1;
nodes = (
(1050,74,o),
(1077,104,qs),
(1106,136,o),
(1106,186,qs),
(1105,241,o),
(1071,273,qs),
(1036,306,o),
(979,306,qs),
(895,306,o),
(827,247,qs),
(755,184,o),
(722,74,q),
(1009,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
56 51 2 7 0 1 76 0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 61 61 1 0 61 73 61 72 66 64 59 57 55 52 48 46 38 37 29 27 22 19 15 13 10 8 0 60 1 60 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1309;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,331,qs),
(808,277,o),
(808,182,qs),
(808,104,o),
(764,54,qs),
(716,0,o),
(638,0,qs),
(264,0,ls),
(186,0,o),
(143,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,232,ls),
(105,299,o),
(166,299,qs),
(173,299,ls),
(181,299,o),
(181,292,qs),
(181,168,ls),
(181,124,o),
(224,74,o),
(261,74,qs),
(263,74,l),
(297,196,o),
(374,276,qs),
(472,377,o),
(606,377,qs),
(689,377,o)
);
},
{
closed = 1;
nodes = (
(674,74,o),
(701,104,qs),
(730,136,o),
(730,186,qs),
(729,241,o),
(695,273,qs),
(660,306,o),
(603,306,qs),
(518,306,o),
(451,247,qs),
(379,184,o),
(346,74,q),
(633,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
23 1 4 1 1 76 0 2 6 1 6 2 1 128 8 1 0 0 6 2 0 6 105 9 7 3 3 1 1 4 97 5 1 4 4 24 4 78 34 34 1 0 34 46 34 45 39 37 27 24 22 20 19 17 13 10 6 4 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 863;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(943,0,l),
(890,0,ls),
(808,0,o),
(764,55,q),
(716,0,o),
(638,0,qs),
(264,0,ls),
(186,0,o),
(143,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,232,ls),
(105,299,o),
(166,299,qs),
(173,299,ls),
(181,299,o),
(181,292,qs),
(181,168,ls),
(181,124,o),
(224,74,o),
(261,74,qs),
(263,74,l),
(297,196,o),
(374,276,qs),
(472,377,o),
(606,377,qs),
(689,377,o),
(743,331,qs),
(808,277,o),
(808,182,qs),
(808,181,l),
(808,166,ls),
(808,123,o),
(851,74,o),
(888,74,qs),
(943,74,l)
);
},
{
closed = 1;
nodes = (
(674,74,o),
(701,104,qs),
(730,136,o),
(730,186,qs),
(729,241,o),
(695,273,qs),
(660,306,o),
(603,306,qs),
(518,306,o),
(451,247,qs),
(379,184,o),
(346,74,q),
(633,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
37 32 2 5 0 1 76 0 3 8 0 8 3 0 128 0 1 0 8 3 1 8 105 11 9 4 2 10 5 0 0 5 97 7 6 2 5 5 24 5 78 42 42 1 0 42 54 42 53 47 45 40 38 36 33 31 29 28 26 22 19 15 13 10 8 0 41 1 41 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 934;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,468,o),
(903,489,qs),
(903,511,o),
(932,539,o),
(953,539,qs),
(973,539,o),
(1002,510,o),
(1002,489,qs),
(1002,469,o),
(973,439,o),
(953,439,qs),
(932,439,o)
);
},
{
closed = 1;
nodes = (
(1319,0,l),
(1267,0,ls),
(1184,0,o),
(1140,55,q),
(1092,0,o),
(1014,0,qs),
(633,0,ls),
(589,0,o),
(555,21,q),
(545,-86,o),
(483,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(639,74,l),
(673,196,o),
(751,276,qs),
(848,377,o),
(983,377,qs),
(1065,377,o),
(1120,331,qs),
(1184,277,o),
(1184,182,qs),
(1184,181,l),
(1184,166,ls),
(1185,123,o),
(1227,74,o),
(1264,74,qs),
(1319,74,l)
);
},
{
closed = 1;
nodes = (
(1050,74,o),
(1077,104,qs),
(1106,136,o),
(1106,186,qs),
(1105,241,o),
(1071,273,qs),
(1036,306,o),
(979,306,qs),
(895,306,o),
(827,247,qs),
(755,184,o),
(722,74,q),
(1009,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
68 63 2 9 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
73 73 13 12 1 0 73 85 73 84 78 76 71 69 67 64 60 58 50 49 41 39 34 31 27 25 22 20 12 72 13 72 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1309;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,468,o),
(527,489,qs),
(527,511,o),
(556,539,o),
(576,539,qs),
(597,539,o),
(625,511,o),
(625,489,qs),
(625,469,o),
(597,439,o),
(576,439,qs),
(556,439,o)
);
},
{
closed = 1;
nodes = (
(743,331,qs),
(808,277,o),
(808,182,qs),
(808,104,o),
(764,54,qs),
(716,0,o),
(638,0,qs),
(264,0,ls),
(186,0,o),
(143,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,232,ls),
(105,299,o),
(166,299,qs),
(173,299,ls),
(181,299,o),
(181,292,qs),
(181,168,ls),
(181,124,o),
(224,74,o),
(261,74,qs),
(263,74,l),
(297,196,o),
(374,276,qs),
(472,377,o),
(606,377,qs),
(689,377,o)
);
},
{
closed = 1;
nodes = (
(674,74,o),
(701,104,qs),
(730,136,o),
(730,186,qs),
(729,241,o),
(695,273,qs),
(660,306,o),
(603,306,qs),
(518,306,o),
(451,247,qs),
(379,184,o),
(346,74,q),
(633,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 6 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 4 8 3 8 4 3 128 11 1 2 0 8 4 2 8 105 10 1 0 0 1 97 0 1 1 23 77 12 9 5 3 3 3 6 97 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 8 3 8 4 3 128 0 1 10 1 0 2 1 0 105 11 1 2 0 8 4 2 8 105 12 9 5 3 3 3 6 97 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
46 46 13 12 1 0 46 58 46 57 51 49 39 36 34 32 31 29 25 22 18 16 12 45 13 45 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 863;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,468,o),
(527,489,qs),
(527,511,o),
(556,539,o),
(576,539,qs),
(597,539,o),
(625,511,o),
(625,489,qs),
(625,469,o),
(597,439,o),
(576,439,qs),
(556,439,o)
);
},
{
closed = 1;
nodes = (
(943,0,l),
(890,0,ls),
(808,0,o),
(764,55,q),
(716,0,o),
(638,0,qs),
(264,0,ls),
(186,0,o),
(143,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,232,ls),
(105,299,o),
(166,299,qs),
(173,299,ls),
(181,299,o),
(181,292,qs),
(181,168,ls),
(181,124,o),
(224,74,o),
(261,74,qs),
(263,74,l),
(297,196,o),
(374,276,qs),
(472,377,o),
(606,377,qs),
(689,377,o),
(743,331,qs),
(808,277,o),
(808,182,qs),
(808,181,l),
(808,166,ls),
(808,123,o),
(851,74,o),
(888,74,qs),
(943,74,l)
);
},
{
closed = 1;
nodes = (
(674,74,o),
(701,104,qs),
(730,136,o),
(730,186,qs),
(729,241,o),
(695,273,qs),
(660,306,o),
(603,306,qs),
(518,306,o),
(451,247,qs),
(379,184,o),
(346,74,q),
(633,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
49 44 2 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 10 2 10 5 2 128 0 3 0 10 5 3 10 105 12 1 0 0 1 97 0 1 1 23 77 14 11 6 4 13 5 2 2 7 97 9 8 2 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 10 2 10 5 2 128 0 1 12 1 0 3 1 0 105 0 3 0 10 5 3 10 105 14 11 6 4 13 5 2 2 7 97 9 8 2 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
54 54 13 12 1 0 54 66 54 65 59 57 52 50 48 45 43 41 40 38 34 31 27 25 22 20 12 53 13 53 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 934;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,0,l),
(789,0,ls),
(710,0,o),
(673,57,q),
(624,0,o),
(544,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(176,74,l),
(176,488,ls),
(176,556,o),
(237,556,qs),
(244,556,ls),
(253,556,o),
(253,548,qs),
(253,235,l),
(355,377,o),
(513,377,qs),
(595,377,o),
(650,331,qs),
(714,277,o),
(714,182,qs),
(714,180,l),
(714,166,ls),
(714,123,o),
(757,74,o),
(794,74,qs),
(849,74,l)
);
},
{
closed = 1;
nodes = (
(580,74,o),
(607,104,qs),
(637,136,o),
(636,186,qs),
(635,241,o),
(601,273,qs),
(566,306,o),
(509,306,qs),
(425,306,o),
(357,247,qs),
(285,184,o),
(253,74,q),
(539,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
11 1 0 6 28 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 96 5 1 4 4 24 4 78 33 33 1 0 33 45 33 44 38 36 31 29 27 24 20 18 16 13 10 8 0 32 1 32 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 841;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,331,qs),
(643,277,o),
(643,182,qs),
(643,104,o),
(599,54,qs),
(551,0,o),
(473,0,qs),
(-3,0,l),
(-3,74,l),
(105,74,l),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,235,l),
(284,377,o),
(441,377,qs),
(524,377,o)
);
},
{
closed = 1;
nodes = (
(509,74,o),
(536,104,qs),
(565,136,o),
(565,186,qs),
(564,241,o),
(530,273,qs),
(495,306,o),
(438,306,qs),
(353,306,o),
(286,247,qs),
(214,184,o),
(181,74,q),
(468,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 2 4 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 20 20 1 0 20 32 20 31 25 23 13 11 10 9 7 4 0 19 1 19 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,0,l),
(718,0,ls),
(639,0,o),
(601,57,q),
(553,0,o),
(473,0,qs),
(-3,0,l),
(-3,74,l),
(105,74,l),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,235,l),
(284,377,o),
(441,377,qs),
(524,377,o),
(578,331,qs),
(643,277,o),
(643,182,qs),
(643,180,l),
(643,166,ls),
(643,123,o),
(685,74,o),
(723,74,qs),
(778,74,l)
);
},
{
closed = 1;
nodes = (
(509,74,o),
(536,104,qs),
(565,136,o),
(565,186,qs),
(564,241,o),
(530,273,qs),
(495,306,o),
(438,306,qs),
(353,306,o),
(286,247,qs),
(214,184,o),
(181,74,q),
(468,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
11 1 0 6 23 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 96 5 1 4 4 24 4 78 28 28 1 0 28 40 28 39 33 31 26 24 22 20 19 18 16 13 10 8 0 27 1 27 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 769;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(849,0,l),
(789,0,ls),
(710,0,o),
(673,57,q),
(624,0,o),
(544,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(87,74,o),
(117,74,qs),
(176,74,l),
(176,488,ls),
(176,556,o),
(237,556,qs),
(244,556,ls),
(253,556,o),
(253,548,qs),
(253,235,l),
(355,377,o),
(513,377,qs),
(595,377,o),
(650,331,qs),
(714,277,o),
(714,182,qs),
(714,180,l),
(714,166,ls),
(714,123,o),
(757,74,o),
(794,74,qs),
(849,74,l)
);
},
{
closed = 1;
nodes = (
(434,468,o),
(434,489,qs),
(434,511,o),
(462,539,o),
(483,539,qs),
(504,539,o),
(532,511,o),
(532,489,qs),
(532,469,o),
(504,439,o),
(483,439,qs),
(463,439,o)
);
},
{
closed = 1;
nodes = (
(580,74,o),
(607,104,qs),
(637,136,o),
(636,186,qs),
(635,241,o),
(601,273,qs),
(566,306,o),
(509,306,qs),
(425,306,o),
(357,247,qs),
(285,184,o),
(253,74,q),
(539,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 8 28 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 96 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 96 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
45 45 34 33 1 0 45 57 45 56 50 48 40 38 33 44 34 44 31 29 27 24 20 18 16 13 10 8 0 32 1 32 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 841;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,331,qs),
(643,277,o),
(643,182,qs),
(643,104,o),
(599,54,qs),
(551,0,o),
(473,0,qs),
(-3,0,l),
(-3,74,l),
(105,74,l),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,235,l),
(284,377,o),
(441,377,qs),
(524,377,o)
);
},
{
closed = 1;
nodes = (
(362,468,o),
(362,489,qs),
(362,511,o),
(391,539,o),
(411,539,qs),
(432,539,o),
(460,511,o),
(460,489,qs),
(460,469,o),
(432,439,o),
(411,439,qs),
(391,439,o)
);
},
{
closed = 1;
nodes = (
(509,74,o),
(536,104,qs),
(565,136,o),
(565,186,qs),
(564,241,o),
(530,273,qs),
(495,306,o),
(438,306,qs),
(353,306,o),
(286,247,qs),
(214,184,o),
(181,74,q),
(468,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
8 1 0 0 6 2 0 6 105 0 1 1 23 77 9 1 4 4 5 97 0 5 5 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
32 32 21 20 1 0 32 44 32 43 37 35 27 25 20 31 21 31 13 11 10 9 7 4 0 19 1 19 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,0,l),
(718,0,ls),
(639,0,o),
(601,57,q),
(553,0,o),
(473,0,qs),
(-3,0,l),
(-3,74,l),
(105,74,l),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,235,l),
(284,377,o),
(441,377,qs),
(524,377,o),
(578,331,qs),
(643,277,o),
(643,182,qs),
(643,180,l),
(643,166,ls),
(643,123,o),
(685,74,o),
(723,74,qs),
(778,74,l)
);
},
{
closed = 1;
nodes = (
(362,468,o),
(362,489,qs),
(362,511,o),
(391,539,o),
(411,539,qs),
(432,539,o),
(460,511,o),
(460,489,qs),
(460,469,o),
(432,439,o),
(411,439,qs),
(391,439,o)
);
},
{
closed = 1;
nodes = (
(509,74,o),
(536,104,qs),
(565,136,o),
(565,186,qs),
(564,241,o),
(530,273,qs),
(495,306,o),
(438,306,qs),
(353,306,o),
(286,247,qs),
(214,184,o),
(181,74,q),
(468,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 8 23 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 96 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 96 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
40 40 29 28 1 0 40 52 40 51 45 43 35 33 28 39 29 39 26 24 22 20 19 18 16 13 10 8 0 27 1 27 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 769;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,-38,qs),
(137,-75,o),
(138,-130,qs),
(138,-180,o),
(169,-215,qs),
(209,-258,o),
(284,-260,qs),
(336,-261,o),
(380,-248,qs),
(406,-241,o),
(443,-221,qs),
(456,-214,o),
(469,-226,o),
(464,-240,qs),
(446,-283,o),
(394,-307,qs),
(342,-332,o),
(274,-331,qs),
(180,-330,o),
(121,-277,qs),
(56,-220,o),
(56,-127,qs),
(56,-57,o),
(95,-6,qs),
(141,55,o),
(225,70,q),
(131,192,ls),
(110,219,o),
(109,249,qs),
(108,300,o),
(164,337,qs),
(225,377,o),
(309,377,qs),
(381,378,o),
(439,346,qs),
(511,308,o),
(509,249,qs),
(508,218,o),
(488,192,qs),
(398,74,l),
(635,74,l),
(635,0,l),
(377,0,ls),
(332,0,o),
(310,16,q),
(292,2,o),
(264,-1,qs),
(209,-4,o)
);
},
{
closed = 1;
nodes = (
(217,202,qs),
(303,89,ls),
(309,81,o),
(315,89,qs),
(402,202,ls),
(420,225,o),
(420,239,qs),
(420,262,o),
(395,281,qs),
(363,306,o),
(309,306,qs),
(264,306,o),
(198,267,o),
(198,239,qs),
(198,225,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
21 2 2 0 1 1 76 0 2 0 6 1 2 6 105 0 4 0 3 4 3 101 0 1 1 0 97 7 5 2 0 0 24 0 78 0 0 52 50 0 47 0 47 41 45 38 17 35 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 626;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,74,o),
(466,43,o),
(466,18,qs),
(466,12,ls),
(466,0,o),
(453,0,qs),
(-3,0,l),
(-3,74,l),
(134,74,l),
(95,124,o),
(94,188,qs),
(94,268,o),
(143,320,qs),
(197,377,o),
(282,377,qs),
(335,377,o),
(410,332,o),
(412,298,qs),
(413,277,o),
(399,277,qs),
(395,277,o),
(386,282,qs),
(339,305,o),
(291,306,qs),
(243,306,o),
(211,279,qs),
(172,247,o),
(171,188,qs),
(171,148,o),
(194,117,qs),
(224,74,o),
(279,74,qs),
(399,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 27 25 24 23 18 16 13 11 9 7 0 32 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(205,74,l),
(114,192,ls),
(94,218,o),
(93,249,qs),
(91,300,o),
(147,337,qs),
(208,377,o),
(293,377,qs),
(364,378,o),
(422,346,qs),
(494,308,o),
(492,249,qs),
(491,218,o),
(471,192,qs),
(381,74,l),
(618,74,l),
(618,0,l),
(360,0,ls),
(315,0,o),
(293,16,q),
(270,0,o),
(224,0,qs),
(-3,0,l)
);
},
{
closed = 1;
nodes = (
(292,82,o),
(298,89,qs),
(385,202,ls),
(404,226,o),
(404,239,qs),
(404,262,o),
(379,281,qs),
(346,306,o),
(293,306,qs),
(247,306,o),
(181,267,o),
(181,239,qs),
(181,226,o),
(200,202,qs),
(286,89,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
2 1 0 2 1 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 30 28 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,468,o),
(245,489,qs),
(245,511,o),
(274,539,o),
(295,539,qs),
(315,539,o),
(344,511,o),
(344,489,qs),
(344,469,o),
(315,439,o),
(295,439,qs),
(274,439,o)
);
},
{
closed = 1;
nodes = (
(160,-38,qs),
(123,-75,o),
(124,-130,qs),
(124,-180,o),
(155,-215,qs),
(195,-258,o),
(270,-260,qs),
(322,-261,o),
(366,-248,qs),
(392,-241,o),
(429,-221,qs),
(442,-214,o),
(455,-226,o),
(450,-240,qs),
(432,-283,o),
(380,-307,qs),
(328,-332,o),
(260,-331,qs),
(166,-330,o),
(107,-277,qs),
(42,-220,o),
(42,-127,qs),
(42,-57,o),
(81,-6,qs),
(127,55,o),
(211,70,q),
(117,192,ls),
(96,219,o),
(95,249,qs),
(94,300,o),
(150,337,qs),
(211,377,o),
(295,377,qs),
(367,378,o),
(425,346,qs),
(497,308,o),
(495,249,qs),
(494,218,o),
(474,192,qs),
(384,74,l),
(621,74,l),
(621,0,l),
(363,0,ls),
(318,0,o),
(296,16,q),
(278,2,o),
(250,-1,qs),
(195,-4,o)
);
},
{
closed = 1;
nodes = (
(203,202,qs),
(289,89,ls),
(295,81,o),
(301,89,qs),
(388,202,ls),
(406,225,o),
(406,239,qs),
(406,262,o),
(381,281,qs),
(349,306,o),
(295,306,qs),
(250,306,o),
(184,267,o),
(184,239,qs),
(184,225,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 14 2 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 0 8 3 4 8 105 0 6 0 5 6 5 101 9 1 0 0 1 97 0 1 1 23 77 0 3 3 2 97 10 7 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 1 9 1 0 4 1 0 105 0 4 0 8 3 4 8 105 0 6 0 5 6 5 101 0 3 3 2 97 10 7 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
12 12 1 0 64 62 12 59 12 59 53 51 42 40 27 25 19 18 17 15 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,468,o),
(224,489,qs),
(224,511,o),
(253,539,o),
(274,539,qs),
(294,539,o),
(323,511,o),
(323,489,qs),
(323,469,o),
(294,439,o),
(274,439,qs),
(253,439,o)
);
},
{
closed = 1;
nodes = (
(429,74,o),
(466,43,o),
(466,18,qs),
(466,12,ls),
(466,0,o),
(453,0,qs),
(-3,0,l),
(-3,74,l),
(134,74,l),
(95,124,o),
(94,188,qs),
(94,268,o),
(143,320,qs),
(197,377,o),
(282,377,qs),
(335,377,o),
(410,332,o),
(412,298,qs),
(413,277,o),
(399,277,qs),
(395,277,o),
(386,282,qs),
(339,305,o),
(291,306,qs),
(243,306,o),
(211,279,qs),
(172,247,o),
(171,188,qs),
(171,148,o),
(194,117,qs),
(224,74,o),
(279,74,qs),
(399,74,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 8 1 0 0 1 97 0 1 1 23 77 6 9 2 2 2 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 39 37 36 35 30 28 25 23 21 19 12 44 13 43 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,510,o),
(341,489,qs),
(341,468,o),
(313,439,o),
(293,439,qs),
(272,439,o),
(243,468,o),
(243,489,qs),
(243,510,o),
(272,539,o),
(293,539,qs),
(313,539,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(205,74,l),
(114,192,ls),
(94,218,o),
(93,249,qs),
(91,300,o),
(147,337,qs),
(208,377,o),
(293,377,qs),
(364,378,o),
(422,346,qs),
(494,308,o),
(492,249,qs),
(491,218,o),
(471,192,qs),
(381,74,l),
(618,74,l),
(618,0,l),
(360,0,ls),
(315,0,o),
(293,16,q),
(270,0,o),
(224,0,qs),
(-3,0,l)
);
},
{
closed = 1;
nodes = (
(292,82,o),
(298,89,qs),
(385,202,ls),
(404,226,o),
(404,239,qs),
(404,262,o),
(379,281,qs),
(346,306,o),
(293,306,qs),
(247,306,o),
(181,267,o),
(181,239,qs),
(181,226,o),
(200,202,qs),
(286,89,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 2 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 7 4 5 7 105 0 1 1 0 97 8 1 0 0 23 77 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 42 40 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(585,468,o),
(585,489,qs),
(585,511,o),
(613,539,o),
(634,539,qs),
(655,539,o),
(683,511,o),
(683,489,qs),
(683,469,o),
(655,439,o),
(634,439,qs),
(614,439,o)
);
},
{
closed = 1;
nodes = (
(938,-1,l),
(709,-1,ls),
(657,-1,o),
(634,17,q),
(613,-1,o),
(560,-1,qs),
(368,-1,l),
(368,0,l),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(520,74,l),
(495,94,o),
(463,162,o),
(462,200,qs),
(462,266,o),
(502,316,qs),
(552,377,o),
(634,377,qs),
(706,377,o),
(755,329,qs),
(807,277,o),
(807,200,qs),
(806,162,o),
(774,93,o),
(748,74,q),
(938,74,l)
);
},
{
closed = 1;
nodes = (
(729,162,o),
(728,201,qs),
(728,247,o),
(675,306,o),
(634,306,qs),
(597,306,o),
(571,281,qs),
(541,251,o),
(540,201,qs),
(540,162,o),
(594,93,o),
(634,82,q),
(674,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 5 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 8 3 8 4 3 128 0 2 0 8 4 2 8 105 9 1 0 0 1 97 0 1 1 23 77 10 7 2 3 3 5 96 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 8 3 8 4 3 128 0 1 9 1 0 2 1 0 105 0 2 0 8 4 2 8 105 10 7 2 3 3 5 96 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
12 12 1 0 62 60 12 53 12 53 52 50 48 43 36 34 28 26 20 18 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 929;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,468,o),
(218,489,qs),
(218,511,o),
(246,539,o),
(267,539,qs),
(288,539,o),
(316,511,o),
(316,489,qs),
(316,469,o),
(287,439,o),
(267,439,qs),
(246,439,o)
);
},
{
closed = 1;
nodes = (
(380,331,qs),
(435,277,o),
(435,188,qs),
(435,112,o),
(393,60,qs),
(346,2,o),
(268,0,qs),
(-3,0,l),
(-3,74,l),
(129,74,l),
(94,115,o),
(93,188,qs),
(93,265,o),
(135,318,qs),
(184,377,o),
(264,377,qs),
(333,377,o)
);
},
{
closed = 1;
nodes = (
(331,107,qs),
(358,141,o),
(358,190,qs),
(358,232,o),
(337,264,qs),
(310,306,o),
(264,306,qs),
(223,306,o),
(197,273,qs),
(170,239,o),
(170,190,qs),
(170,148,o),
(191,116,qs),
(217,74,o),
(264,74,qs),
(305,74,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 2 0 6 3 2 6 105 7 1 0 0 1 97 0 1 1 23 77 9 5 2 3 3 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 2 1 0 105 8 1 2 0 6 3 2 6 105 9 5 2 3 3 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
30 29 13 12 1 0 38 36 29 44 30 44 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,468,o),
(215,489,qs),
(215,510,o),
(244,539,o),
(265,539,qs),
(285,539,o),
(314,510,o),
(314,489,qs),
(314,468,o),
(285,439,o),
(265,439,qs),
(244,439,o)
);
},
{
closed = 1;
nodes = (
(566,0,l),
(338,0,ls),
(286,0,o),
(263,18,q),
(241,0,o),
(189,0,qs),
(-3,0,l),
(-3,74,l),
(150,74,l),
(124,94,o),
(92,163,o),
(91,201,qs),
(90,267,o),
(131,316,qs),
(181,377,o),
(263,377,qs),
(335,377,o),
(383,329,qs),
(436,278,o),
(435,201,qs),
(434,163,o),
(402,94,o),
(376,74,q),
(566,74,l)
);
},
{
closed = 1;
nodes = (
(358,163,o),
(357,201,qs),
(357,247,o),
(304,306,o),
(263,306,qs),
(226,306,o),
(200,281,qs),
(170,251,o),
(169,201,qs),
(168,163,o),
(223,94,o),
(263,82,q),
(303,94,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
12 12 1 0 44 42 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,470,o),
(348,489,qs),
(348,508,o),
(372,534,o),
(391,534,qs),
(410,534,o),
(435,508,o),
(435,489,qs),
(435,470,o),
(410,444,o),
(391,444,qs),
(372,444,o)
);
},
{
closed = 1;
nodes = (
(473,470,o),
(473,489,qs),
(473,508,o),
(499,534,o),
(518,534,qs),
(536,534,o),
(561,508,o),
(561,489,qs),
(561,470,o),
(536,444,o),
(518,444,qs),
(499,444,o)
);
},
{
closed = 1;
nodes = (
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(467,-110,qs),
(524,-73,o),
(543,0,q),
(455,0,ls),
(386,0,o),
(338,46,qs),
(284,98,o),
(284,182,qs),
(284,266,o),
(327,319,qs),
(375,377,o),
(455,377,qs),
(567,377,o),
(608,276,qs),
(636,211,o),
(629,74,q),
(764,74,l),
(764,0,l),
(620,0,l),
(600,-98,o),
(536,-152,qs),
(463,-215,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,102,o),
(107,205,o),
(149,233,q),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o)
);
},
{
closed = 1;
nodes = (
(551,78,o),
(552,86,qs),
(552,91,o),
(552,93,qs),
(557,204,o),
(537,249,qs),
(512,306,o),
(456,306,qs),
(416,306,o),
(391,275,qs),
(363,241,o),
(363,184,qs),
(363,137,o),
(416,74,o),
(456,74,qs),
(550,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
80 1 7 4 1 76 0 4 12 7 12 4 7 128 3 1 1 14 2 13 3 0 8 1 0 105 0 8 0 12 4 8 12 105 0 10 0 5 10 5 101 15 11 2 7 7 6 95 9 1 6 6 24 6 78 68 67 13 12 1 0 75 73 67 82 68 81 64 62 59 57 51 49 46 45 44 43 40 38 31 29 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,470,o),
(157,489,qs),
(157,508,o),
(182,534,o),
(200,534,qs),
(219,534,o),
(245,508,o),
(245,489,qs),
(245,470,o),
(219,444,o),
(200,444,qs),
(182,444,o)
);
},
{
closed = 1;
nodes = (
(283,470,o),
(283,489,qs),
(283,508,o),
(308,534,o),
(327,534,qs),
(346,534,o),
(370,508,o),
(370,489,qs),
(370,470,o),
(346,444,o),
(327,444,qs),
(308,444,o)
);
},
{
closed = 1;
nodes = (
(380,331,qs),
(435,277,o),
(435,188,qs),
(435,112,o),
(393,60,qs),
(346,2,o),
(268,0,qs),
(-3,0,l),
(-3,74,l),
(129,74,l),
(94,115,o),
(93,188,qs),
(93,265,o),
(135,318,qs),
(184,377,o),
(264,377,qs),
(333,377,o)
);
},
{
closed = 1;
nodes = (
(331,107,qs),
(358,141,o),
(358,190,qs),
(358,232,o),
(337,264,qs),
(310,306,o),
(264,306,qs),
(223,306,o),
(197,273,qs),
(170,239,o),
(170,190,qs),
(170,148,o),
(191,116,qs),
(217,74,o),
(264,74,qs),
(305,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 11 1 4 0 8 5 4 8 105 12 7 2 5 5 6 95 0 6 6 24 6 78 42 41 25 24 13 12 1 0 50 48 41 56 42 56 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,470,o),
(157,489,qs),
(157,508,o),
(182,534,o),
(200,534,qs),
(219,534,o),
(245,508,o),
(245,489,qs),
(245,470,o),
(219,444,o),
(200,444,qs),
(182,444,o)
);
},
{
closed = 1;
nodes = (
(283,470,o),
(283,489,qs),
(283,508,o),
(308,534,o),
(327,534,qs),
(346,534,o),
(370,508,o),
(370,489,qs),
(370,470,o),
(346,444,o),
(327,444,qs),
(308,444,o)
);
},
{
closed = 1;
nodes = (
(566,0,l),
(338,0,ls),
(286,0,o),
(263,18,q),
(241,0,o),
(189,0,qs),
(-3,0,l),
(-3,74,l),
(150,74,l),
(124,94,o),
(92,163,o),
(91,201,qs),
(90,267,o),
(131,316,qs),
(181,377,o),
(263,377,qs),
(335,377,o),
(383,329,qs),
(436,278,o),
(435,201,qs),
(434,163,o),
(402,94,o),
(376,74,q),
(566,74,l)
);
},
{
closed = 1;
nodes = (
(358,163,o),
(357,201,qs),
(357,247,o),
(304,306,o),
(263,306,qs),
(226,306,o),
(200,281,qs),
(170,251,o),
(169,201,qs),
(168,163,o),
(223,94,o),
(263,82,q),
(303,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
43 1 6 5 1 76 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 56 54 24 47 24 47 46 44 42 40 39 38 32 30 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(830,0,l),
(770,0,ls),
(697,0,o),
(658,51,q),
(616,0,o),
(535,0,qs),
(242,0,ls),
(163,0,o),
(115,33,qs),
(56,73,o),
(56,154,qs),
(56,199,o),
(102,278,o),
(140,298,qs),
(150,303,o),
(157,303,qs),
(168,303,o),
(168,292,qs),
(168,286,o),
(163,278,q),
(123,226,o),
(123,177,qs),
(123,74,o),
(245,74,qs),
(538,74,ls),
(576,74,o),
(618,124,o),
(618,169,qs),
(618,488,ls),
(618,556,o),
(679,556,qs),
(686,556,ls),
(694,556,o),
(694,547,qs),
(694,168,ls),
(695,124,o),
(737,74,o),
(775,74,qs),
(830,74,l)
);
},
{
closed = 1;
nodes = (
(286,268,qs),
(286,302,o),
(322,313,q),
(307,335,o),
(307,362,qs),
(307,399,o),
(357,449,o),
(395,449,qs),
(423,449,o),
(462,421,o),
(464,401,qs),
(464,387,o),
(455,387,qs),
(451,387,o),
(445,391,q),
(438,394,ls),
(423,402,o),
(403,402,qs),
(357,402,o),
(357,361,qs),
(357,342,o),
(383,317,o),
(403,317,qs),
(448,317,ls),
(485,317,o),
(485,283,qs),
(485,279,ls),
(485,270,o),
(475,270,qs),
(360,270,ls),
(327,270,o),
(307,262,q),
(305,262,o),
(304,261,q),
(303,261,o),
(302,260,q),
(298,259,o),
(295,259,qs),
(286,259,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
66 1 9 8 74 1 3 7 34 1 4 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 8 7 8 9 7 128 0 3 7 6 7 3 6 128 0 10 0 8 9 10 8 105 0 7 13 11 2 6 0 7 6 105 0 1 1 23 77 2 12 2 0 0 4 96 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 9 8 7 8 9 7 128 0 3 7 6 7 3 6 128 13 1 11 6 0 6 11 0 128 0 10 0 8 9 10 8 105 0 7 0 6 11 7 6 103 0 1 1 23 77 2 12 2 0 0 4 96 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
39 39 1 0 39 77 39 77 70 68 65 63 60 58 55 52 49 46 37 35 33 30 23 21 15 12 8 5 0 38 1 38 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(371,541,o),
(369,493,o),
(347,478,qs),
(177,362,l),
(173,358,o),
(178,358,qs),
(334,358,ls),
(399,358,o),
(443,321,qs),
(500,273,o),
(500,177,qs),
(500,96,o),
(455,48,qs),
(410,0,o),
(334,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 31 29 25 22 9 7 0 32 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,0,l),
(583,0,ls),
(502,0,o),
(459,52,q),
(413,0,o),
(334,0,qs),
(-3,0,l),
(-3,74,l),
(331,74,ls),
(374,74,o),
(422,131,o),
(422,181,qs),
(422,231,o),
(374,287,o),
(331,287,qs),
(135,287,ls),
(83,287,o),
(83,329,qs),
(83,347,ls),
(83,376,o),
(101,388,qs),
(342,553,ls),
(347,557,o),
(351,555,q),
(371,541,o),
(369,493,o),
(347,478,qs),
(177,362,l),
(173,358,o),
(178,358,qs),
(334,358,ls),
(399,358,o),
(442,322,qs),
(499,275,o),
(500,181,qs),
(500,168,ls),
(500,124,o),
(543,74,o),
(580,74,qs),
(635,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
35 1 4 0 1 76 15 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 38 36 34 32 31 29 25 22 9 7 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,0,l),
(633,0,ls),
(589,0,o),
(555,20,q),
(544,-86,o),
(482,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,488,ls),
(481,556,o),
(542,556,qs),
(549,556,ls),
(557,556,o),
(557,548,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(692,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
37 1 5 0 1 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 6 1 0 0 5 95 0 5 5 24 5 78 1 0 40 38 34 32 24 23 15 13 8 5 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 6 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(257,0,ls),
(184,0,o),
(145,51,q),
(103,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,488,ls),
(105,556,o),
(166,556,qs),
(173,556,ls),
(181,556,o),
(181,548,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
18 1 3 0 1 76 0 1 1 23 77 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 5 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,0,l),
(635,0,ls),
(562,0,o),
(519,44,q),
(478,-9,o),
(392,-9,qs),
(298,-9,o),
(205,42,q),
(195,42,ls),
(122,37,o),
(122,-54,qs),
(122,-221,ls),
(122,-288,o),
(62,-288,qs),
(54,-288,ls),
(46,-288,o),
(46,-280,qs),
(46,-53,ls),
(46,96,o),
(169,114,q),
(177,127,o),
(191,159,qs),
(198,173,ls),
(246,275,o),
(268,306,qs),
(318,377,o),
(386,377,qs),
(462,377,o),
(507,320,qs),
(552,262,o),
(553,167,qs),
(553,164,ls),
(553,123,o),
(596,74,o),
(633,74,qs),
(687,74,l)
);
},
{
closed = 1;
nodes = (
(474,164,qs),
(474,232,o),
(429,306,o),
(389,306,qs),
(363,306,o),
(313,240,o),
(275,153,qs),
(262,123,o),
(250,104,q),
(327,62,o),
(395,63,qs),
(474,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
38 1 0 7 31 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
38 1 0 7 31 1 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 4 0 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 6 8 3 0 0 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 4 6 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 4 97 5 1 4 4 24 77 9 1 6 6 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 5 97 0 5 5 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 1 6 0 4 2 6 4 105 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
37 36 1 0 44 42 36 47 37 47 34 32 30 28 27 25 22 19 9 7 0 35 1 35 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,318,qs),
(468,259,o),
(468,163,qs),
(468,82,o),
(429,38,qs),
(387,-9,o),
(307,-9,qs),
(215,-9,o),
(124,40,q),
(103,17,o),
(52,0,o),
(6,0,qs),
(-3,0,l),
(-3,74,l),
(5,74,ls),
(47,74,o),
(85,109,o),
(113,173,qs),
(162,275,o),
(183,306,qs),
(233,377,o),
(301,377,qs),
(378,377,o)
);
},
{
closed = 1;
nodes = (
(389,164,qs),
(389,232,o),
(345,306,o),
(304,306,qs),
(277,306,o),
(228,240,o),
(190,153,qs),
(175,118,o),
(166,104,q),
(242,62,o),
(310,63,qs),
(389,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 1 5 13 1 2 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
25 1 1 5 13 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 1 0 0 5 1 0 5 105 7 4 2 1 1 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 3 1 2 2 24 77 7 1 4 4 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 5 1 0 5 105 7 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
24 23 1 0 31 29 23 34 24 34 16 14 11 9 8 6 0 22 1 22 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,0,l),
(551,0,ls),
(478,0,o),
(434,44,q),
(393,-9,o),
(307,-9,qs),
(215,-9,o),
(124,40,q),
(103,17,o),
(52,0,o),
(6,0,qs),
(-3,0,l),
(-3,74,l),
(5,74,ls),
(47,74,o),
(85,109,o),
(113,173,qs),
(162,275,o),
(183,306,qs),
(233,377,o),
(301,377,qs),
(378,377,o),
(422,320,qs),
(467,262,o),
(468,167,qs),
(468,164,ls),
(469,123,o),
(512,74,o),
(548,74,qs),
(603,74,l)
);
},
{
closed = 1;
nodes = (
(389,164,qs),
(389,232,o),
(345,306,o),
(304,306,qs),
(277,306,o),
(228,240,o),
(190,153,qs),
(175,118,o),
(166,104,q),
(242,62,o),
(310,63,qs),
(389,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
32 1 0 7 25 21 2 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
32 1 0 7 25 21 2 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 7 0 1 7 105 9 6 2 8 4 0 0 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 4 2 3 3 24 77 9 1 6 6 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
31 30 1 0 38 36 30 41 31 41 28 26 24 22 19 17 16 14 9 7 0 29 1 29 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 594;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,359,o),
(259,380,qs),
(259,401,o),
(288,430,o),
(309,430,qs),
(329,430,o),
(358,401,o),
(358,380,qs),
(358,359,o),
(329,330,o),
(309,330,qs),
(288,330,o)
);
},
{
closed = 1;
nodes = (
(692,0,l),
(633,0,ls),
(589,0,o),
(555,20,q),
(544,-86,o),
(482,-147,qs),
(415,-214,o),
(306,-214,qs),
(206,-214,o),
(138,-156,qs),
(56,-85,o),
(57,39,qs),
(57,101,o),
(112,207,o),
(157,232,qs),
(165,236,o),
(171,236,qs),
(184,236,o),
(184,224,qs),
(184,219,o),
(179,213,q),
(131,134,o),
(130,55,qs),
(129,-35,o),
(177,-88,qs),
(226,-143,o),
(306,-143,qs),
(377,-143,o),
(423,-100,qs),
(481,-47,o),
(481,58,qs),
(481,291,ls),
(481,358,o),
(542,358,qs),
(549,358,ls),
(557,358,o),
(557,351,qs),
(557,168,ls),
(558,124,o),
(600,74,o),
(638,74,qs),
(692,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
49 1 7 2 1 76 0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 95 0 7 7 24 7 78 13 12 1 0 52 50 46 44 36 35 27 25 20 17 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,499,o),
(195,478,qs),
(195,457,o),
(167,428,o),
(146,428,qs),
(126,428,o),
(97,457,o),
(97,478,qs),
(97,500,o),
(126,528,o),
(146,528,qs),
(167,528,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(102,0,o),
(23,0,qs),
(-3,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 27 25 21 18 12 28 13 28 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,457,o),
(97,478,qs),
(97,500,o),
(126,528,o),
(146,528,qs),
(167,528,o),
(195,499,o),
(195,478,qs),
(195,457,o),
(167,428,o),
(146,428,qs),
(126,428,o)
);
},
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
30 1 5 2 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 20 17 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(533,0,l),
(481,0,ls),
(399,0,o),
(358,49,q),
(311,-9,o),
(228,-9,qs),
(158,-9,o),
(112,32,qs),
(56,83,o),
(56,174,qs),
(56,254,o),
(100,304,qs),
(147,358,o),
(228,358,qs),
(322,358,l),
(322,364,ls),
(322,432,o),
(383,432,qs),
(390,432,ls),
(398,432,o),
(398,424,qs),
(398,169,ls),
(398,124,o),
(441,74,o),
(479,74,qs),
(533,74,l)
);
},
{
closed = 1;
nodes = (
(294,89,qs),
(322,120,o),
(322,174,qs),
(322,287,l),
(228,287,ls),
(188,287,o),
(162,259,qs),
(134,228,o),
(134,174,qs),
(134,123,o),
(186,62,o),
(228,62,qs),
(269,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
21 1 3 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
21 1 4 5 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 3 97 4 1 3 3 24 77 8 1 5 5 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
27 26 1 0 34 32 26 38 27 38 24 22 20 18 12 9 8 5 0 25 1 25 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(569,332,qs),
(631,281,o),
(631,182,qs),
(631,104,o),
(590,55,qs),
(544,0,o),
(465,0,qs),
(321,0,ls),
(271,0,o),
(250,16,q),
(230,0,o),
(180,0,qs),
(-3,0,l),
(-3,74,l),
(149,74,l),
(94,118,o),
(94,197,qs),
(94,274,o),
(143,321,q),
(78,332,o),
(75,391,qs),
(75,396,ls),
(75,407,o),
(86,402,q),
(118,393,o),
(143,389,qs),
(189,382,o),
(248,380,qs),
(296,378,o),
(420,377,qs),
(515,375,o)
);
},
{
closed = 1;
nodes = (
(505,74,o),
(554,133,o),
(554,183,qs),
(554,303,o),
(415,307,qs),
(402,307,o),
(374,308,qs),
(368,308,l),
(404,263,o),
(404,197,qs),
(404,117,o),
(350,74,q),
(463,74,ls)
);
},
{
closed = 1;
nodes = (
(192,281,qs),
(164,251,o),
(164,201,qs),
(164,159,o),
(211,94,o),
(250,84,q),
(288,94,o),
(335,159,o),
(335,201,qs),
(335,246,o),
(287,306,o),
(250,306,qs),
(216,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
11 1 4 0 50 1 1 4 20 1 2 1 3 76 7 1 0 9 6 2 4 1 0 4 105 8 5 2 1 1 2 95 3 1 2 2 24 2 78 45 44 31 31 3 0 44 56 45 56 31 43 31 42 39 35 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(766,0,l),
(706,0,ls),
(628,0,o),
(591,56,q),
(544,0,o),
(465,0,qs),
(321,0,ls),
(271,0,o),
(250,16,q),
(230,0,o),
(180,0,qs),
(-3,0,l),
(-3,74,l),
(149,74,l),
(94,118,o),
(94,197,qs),
(94,274,o),
(143,321,q),
(78,332,o),
(75,391,qs),
(75,396,ls),
(75,407,o),
(86,402,q),
(118,393,o),
(143,389,qs),
(189,382,o),
(248,380,qs),
(296,378,o),
(420,377,qs),
(515,375,o),
(569,332,qs),
(631,281,o),
(631,182,qs),
(631,180,l),
(631,166,ls),
(631,123,o),
(674,74,o),
(711,74,qs),
(766,74,l)
);
},
{
closed = 1;
nodes = (
(505,74,o),
(554,133,o),
(554,183,qs),
(554,303,o),
(415,307,qs),
(402,307,o),
(374,308,qs),
(368,308,l),
(404,263,o),
(404,197,qs),
(404,117,o),
(350,74,q),
(463,74,ls)
);
},
{
closed = 1;
nodes = (
(192,281,qs),
(164,251,o),
(164,201,qs),
(164,159,o),
(211,94,o),
(250,84,q),
(288,94,o),
(335,159,o),
(335,201,qs),
(335,246,o),
(287,306,o),
(250,306,qs),
(216,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
20 1 6 1 58 1 0 6 34 29 2 3 0 3 76 0 1 11 8 2 6 0 1 6 105 10 7 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 53 52 39 39 1 0 52 64 53 64 39 51 39 50 47 43 37 35 33 30 28 26 25 24 12 8 0 38 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,0,l),
(398,0,l),
(391,-74,o),
(364,-124,qs),
(319,-215,o),
(205,-214,qs),
(155,-214,o),
(83,-171,o),
(77,-139,qs),
(75,-124,o),
(89,-124,qs),
(94,-124,o),
(102,-127,qs),
(150,-143,o),
(200,-143,qs),
(310,-141,o),
(324,0,q),
(227,0,ls),
(158,0,o),
(110,46,qs),
(56,98,o),
(56,182,qs),
(56,266,o),
(99,319,qs),
(147,377,o),
(227,377,qs),
(336,377,o),
(378,276,qs),
(400,223,o),
(402,132,qs),
(402,92,o),
(402,74,q),
(536,74,l)
);
},
{
closed = 1;
nodes = (
(328,199,o),
(307,249,qs),
(282,306,o),
(228,306,qs),
(188,306,o),
(163,275,qs),
(134,241,o),
(134,184,qs),
(134,137,o),
(188,74,o),
(228,74,qs),
(323,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 3 1 2 1 3 2 128 0 0 0 8 6 0 8 105 0 2 0 4 2 4 101 10 7 9 3 6 6 1 95 5 1 1 1 24 1 78 34 33 0 0 41 39 33 44 34 44 0 32 0 32 19 35 34 33 38 37 11 7 28 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,0,l),
(626,0,l),
(609,-95,o),
(537,-152,qs),
(459,-214,o),
(343,-214,qs),
(222,-214,o),
(142,-147,qs),
(56,-73,o),
(57,41,qs),
(57,101,o),
(108,205,o),
(152,234,qs),
(159,238,o),
(166,238,qs),
(178,238,o),
(178,227,qs),
(178,221,o),
(173,214,qs),
(129,139,o),
(130,56,qs),
(132,-30,o),
(185,-83,qs),
(244,-143,o),
(343,-143,qs),
(417,-143,o),
(469,-110,qs),
(530,-72,o),
(549,0,q),
(432,0,ls),
(418,0,o),
(418,12,qs),
(418,19,ls),
(418,44,o),
(456,74,o),
(485,74,qs),
(642,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 35 34 31 29 22 20 12 10 7 5 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 633;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,0,l),
(612,0,l),
(595,-95,o),
(523,-152,qs),
(445,-214,o),
(329,-214,qs),
(208,-214,o),
(128,-147,qs),
(42,-73,o),
(43,41,qs),
(43,101,o),
(94,205,o),
(138,234,qs),
(145,238,o),
(152,238,qs),
(164,238,o),
(164,227,qs),
(164,221,o),
(159,214,qs),
(115,139,o),
(116,56,qs),
(118,-30,o),
(171,-83,qs),
(230,-143,o),
(329,-143,qs),
(403,-143,o),
(455,-110,qs),
(516,-72,o),
(535,0,q),
(418,0,ls),
(404,0,o),
(404,12,qs),
(404,19,ls),
(404,44,o),
(442,74,o),
(471,74,qs),
(628,74,l)
);
},
{
closed = 1;
nodes = (
(309,-299,o),
(309,-318,qs),
(309,-338,o),
(283,-364,o),
(264,-364,qs),
(246,-364,o),
(221,-338,o),
(221,-318,qs),
(221,-299,o),
(246,-274,o),
(264,-274,qs),
(283,-274,o)
);
},
{
closed = 1;
nodes = (
(434,-299,o),
(434,-318,qs),
(434,-338,o),
(409,-364,o),
(391,-364,qs),
(372,-364,o),
(346,-338,o),
(346,-318,qs),
(346,-299,o),
(372,-274,o),
(391,-274,qs),
(409,-274,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 3 0 3 133 0 2 0 4 6 2 4 105 12 8 11 3 6 9 1 7 6 7 101 10 1 0 0 1 95 5 1 1 1 24 1 78 50 49 38 37 1 0 56 54 49 60 50 60 44 42 37 48 38 48 35 34 31 29 22 20 12 10 7 5 0 36 1 36 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,74,l),
(24,74,ls),
(62,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(165,358,qs),
(172,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(181,94,o),
(144,50,qs),
(101,0,o),
(22,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(-12,-139,o),
(-12,-119,qs),
(-12,-100,o),
(13,-75,o),
(31,-75,qs),
(50,-75,o),
(76,-100,o),
(76,-119,qs),
(76,-139,o),
(50,-165,o),
(31,-165,qs),
(13,-165,o)
);
},
{
closed = 1;
nodes = (
(114,-139,o),
(114,-119,qs),
(114,-100,o),
(139,-75,o),
(158,-75,qs),
(177,-75,o),
(201,-100,o),
(201,-119,qs),
(201,-139,o),
(176,-165,o),
(158,-165,qs),
(139,-165,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 6 1 4 9 5 8 3 3 4 3 102 0 2 2 0 97 7 1 0 0 24 0 78 30 29 18 17 1 0 36 34 29 40 30 40 24 22 17 28 18 28 15 13 9 6 0 16 1 16 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 248;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,0,l),
(264,0,ls),
(186,0,o),
(144,49,q),
(101,0,o),
(23,0,qs),
(-3,0,l),
(-3,74,l),
(25,74,ls),
(63,74,o),
(105,124,o),
(105,169,qs),
(105,291,ls),
(105,358,o),
(166,358,qs),
(173,358,ls),
(181,358,o),
(181,350,qs),
(181,168,ls),
(182,124,o),
(225,74,o),
(262,74,qs),
(316,74,l)
);
},
{
closed = 1;
nodes = (
(92,-100,o),
(92,-119,qs),
(92,-139,o),
(66,-165,o),
(48,-165,qs),
(29,-165,o),
(4,-139,o),
(4,-119,qs),
(4,-100,o),
(29,-75,o),
(48,-75,qs),
(67,-75,o)
);
},
{
closed = 1;
nodes = (
(218,-100,o),
(218,-119,qs),
(218,-139,o),
(193,-165,o),
(174,-165,qs),
(155,-165,o),
(130,-139,o),
(130,-119,qs),
(130,-100,o),
(155,-75,o),
(174,-75,qs),
(193,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
18 1 3 0 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 102 2 9 2 0 0 3 97 4 1 3 3 24 3 78 36 35 24 23 1 0 42 40 35 46 36 46 30 28 23 34 24 34 21 19 17 15 14 12 8 5 0 22 1 22 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,539,qs),
(75,551,o),
(65,551,qs),
(54,551,o),
(45,538,q),
(43,536,o),
(41,533,qs),
(36,525,o),
(34,524,qs),
(32,523,o),
(30,523,qs),
(26,523,o),
(23,527,qs),
(16,538,o),
(16,551,qs),
(16,569,o),
(41,595,o),
(58,595,qs),
(81,595,o),
(124,579,qs),
(126,578,o),
(128,578,q),
(164,566,o),
(173,566,qs),
(185,566,o),
(194,578,qs),
(195,580,o),
(198,583,q),
(203,591,o),
(205,592,qs),
(207,593,o),
(209,593,qs),
(213,593,o),
(215,589,q),
(223,578,o),
(223,565,qs),
(223,547,o),
(198,521,o),
(180,521,qs),
(157,521,o),
(114,537,q),
(113,538,o)
);
},
{
closed = 1;
nodes = (
(445,556,o),
(445,548,qs),
(445,168,ls),
(445,94,o),
(409,50,qs),
(367,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(110,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(130,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(328,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(430,556,qs),
(437,556,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
9 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 3 0 2 3 105 0 0 0 1 97 8 4 2 1 1 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 0 2 3 105 8 1 4 4 23 77 0 0 0 1 97 0 1 1 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 0 2 3 105 0 1 0 0 5 1 0 105 8 1 4 4 23 77 6 1 5 5 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
43 42 69 66 62 60 51 49 42 75 43 74 45 36 45 33 9 7 26 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,539,qs),
(75,551,o),
(65,551,qs),
(54,551,o),
(45,538,q),
(43,536,o),
(41,533,qs),
(36,525,o),
(34,524,qs),
(32,523,o),
(30,523,qs),
(26,523,o),
(23,527,qs),
(16,538,o),
(16,551,qs),
(16,569,o),
(41,595,o),
(58,595,qs),
(81,595,o),
(124,579,qs),
(126,578,o),
(128,578,q),
(164,566,o),
(173,566,qs),
(185,566,o),
(194,578,qs),
(195,580,o),
(198,583,q),
(203,591,o),
(205,592,qs),
(207,593,o),
(209,593,qs),
(213,593,o),
(215,589,q),
(223,578,o),
(223,565,qs),
(223,547,o),
(198,521,o),
(180,521,qs),
(157,521,o),
(114,537,q),
(113,538,o)
);
},
{
closed = 1;
nodes = (
(580,0,l),
(521,0,ls),
(447,0,o),
(409,51,q),
(368,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(110,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(130,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(328,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(430,556,qs),
(437,556,ls),
(445,556,o),
(445,548,qs),
(445,168,ls),
(446,124,o),
(489,74,o),
(526,74,qs),
(580,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 1 2 77 1 8 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 0 2 3 105 0 0 0 1 97 5 1 1 1 23 77 7 6 10 3 4 4 8 95 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 0 2 3 105 0 5 5 23 77 0 0 0 1 97 0 1 1 23 77 7 6 10 3 4 4 8 95 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 3 0 2 3 105 0 1 0 0 4 1 0 105 0 5 5 23 77 7 6 10 3 4 4 8 95 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
43 42 80 78 76 73 69 67 58 56 50 47 42 81 43 81 45 36 45 33 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,529,o),
(40,523,qs),
(37,522,o),
(34,520,qs),
(29,518,o),
(27,518,qs),
(22,518,o),
(20,524,qs),
(16,543,o),
(36,569,o),
(58,572,q),
(48,591,o),
(48,613,qs),
(48,647,o),
(92,692,o),
(126,693,qs),
(155,693,o),
(193,666,o),
(195,645,qs),
(195,634,o),
(187,634,q),
(185,635,o),
(179,638,qs),
(176,639,o),
(174,640,qs),
(156,649,o),
(136,649,qs),
(95,649,o),
(95,613,qs),
(95,574,o),
(133,574,qs),
(181,574,ls),
(216,574,o),
(216,542,qs),
(216,538,ls),
(216,529,o),
(206,529,qs),
(92,529,ls)
);
},
{
closed = 1;
nodes = (
(448,556,o),
(448,548,qs),
(448,168,ls),
(448,94,o),
(412,50,qs),
(370,0,o),
(290,0,qs),
(67,0,ls),
(53,0,o),
(53,12,qs),
(53,19,ls),
(53,44,o),
(87,74,o),
(113,74,qs),
(201,74,l),
(106,363,ls),
(89,414,o),
(120,434,qs),
(133,443,o),
(146,447,qs),
(152,448,ls),
(158,450,o),
(161,443,qs),
(283,74,l),
(297,74,ls),
(331,74,o),
(372,126,o),
(372,169,qs),
(372,488,ls),
(372,533,o),
(402,548,qs),
(416,556,o),
(433,556,qs),
(440,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
18 1 1 2 26 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 0 2 1 3 2 105 10 1 5 5 23 77 4 9 2 0 0 1 97 0 1 1 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 0 6 0 4 6 128 0 3 0 2 1 3 2 105 10 1 5 5 23 77 9 1 0 0 1 97 0 1 1 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 4 0 6 0 4 6 128 0 3 0 2 1 3 2 105 0 1 9 1 0 4 1 0 103 10 1 5 5 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
39 38 1 0 65 62 58 56 47 45 38 71 39 70 32 30 22 20 11 9 7 4 0 37 1 36 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,529,o),
(40,523,qs),
(37,522,o),
(34,520,qs),
(29,518,o),
(27,518,qs),
(22,518,o),
(20,524,qs),
(16,543,o),
(36,569,o),
(58,572,q),
(48,591,o),
(48,613,qs),
(48,647,o),
(92,692,o),
(126,693,qs),
(155,693,o),
(193,666,o),
(195,645,qs),
(195,634,o),
(187,634,q),
(185,635,o),
(179,638,qs),
(176,639,o),
(174,640,qs),
(156,649,o),
(136,649,qs),
(95,649,o),
(95,613,qs),
(95,574,o),
(133,574,qs),
(181,574,ls),
(216,574,o),
(216,542,qs),
(216,538,ls),
(216,529,o),
(206,529,qs),
(92,529,ls)
);
},
{
closed = 1;
nodes = (
(583,0,l),
(524,0,ls),
(450,0,o),
(412,51,q),
(371,0,o),
(290,0,qs),
(67,0,ls),
(53,0,o),
(53,12,qs),
(53,19,ls),
(53,44,o),
(87,74,o),
(113,74,qs),
(201,74,l),
(106,363,ls),
(89,414,o),
(120,434,qs),
(133,443,o),
(146,447,qs),
(152,448,ls),
(158,450,o),
(161,443,qs),
(283,74,l),
(297,74,ls),
(331,74,o),
(372,126,o),
(372,169,qs),
(372,488,ls),
(372,533,o),
(402,548,qs),
(416,556,o),
(433,556,qs),
(440,556,ls),
(448,556,o),
(448,548,qs),
(448,168,ls),
(449,124,o),
(492,74,o),
(529,74,qs),
(583,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
18 1 1 2 26 1 6 1 73 1 9 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 2 1 3 2 105 0 6 6 23 77 4 11 2 0 0 1 97 0 1 1 23 77 8 7 12 3 5 5 9 95 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 4 0 5 0 4 5 128 0 3 0 2 1 3 2 105 0 6 6 23 77 11 1 0 0 1 97 0 1 1 23 77 8 7 12 3 5 5 9 95 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 4 0 5 0 4 5 128 0 3 0 2 1 3 2 105 0 1 11 1 0 4 1 0 103 0 6 6 23 77 8 7 12 3 5 5 9 95 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
39 38 1 0 76 74 72 69 65 63 54 52 46 43 38 77 39 77 32 30 22 20 11 9 7 4 0 37 1 36 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,556,o),
(446,548,qs),
(446,168,ls),
(446,94,o),
(409,50,qs),
(367,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(111,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(129,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(329,74,o),
(369,125,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(431,556,qs),
(437,556,ls)
);
},
{
closed = 1;
nodes = (
(366,-188,o),
(366,-221,qs),
(366,-224,ls),
(366,-233,o),
(357,-233,qs),
(243,-233,ls),
(208,-233,o),
(190,-239,qs),
(187,-240,o),
(184,-242,qs),
(179,-244,o),
(177,-244,qs),
(172,-244,o),
(171,-238,qs),
(161,-197,o),
(208,-191,qs),
(209,-191,l),
(198,-171,o),
(198,-149,qs),
(198,-115,o),
(243,-70,o),
(277,-69,qs),
(305,-69,o),
(343,-96,o),
(345,-117,qs),
(345,-128,o),
(337,-128,q),
(335,-127,o),
(329,-124,qs),
(326,-123,o),
(324,-122,qs),
(307,-113,o),
(286,-113,qs),
(246,-113,o),
(246,-149,qs),
(246,-188,o),
(284,-188,qs),
(331,-188,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
46 1 4 5 54 1 7 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
46 1 4 5 54 1 8 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 0 5 4 6 5 105 10 1 4 8 1 7 4 7 101 9 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 8 7 134 0 6 0 5 4 6 5 105 10 1 4 0 8 7 4 8 103 9 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
35 34 1 0 67 64 60 58 50 48 39 37 34 71 35 70 27 24 20 18 9 7 0 33 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,0,l),
(521,0,ls),
(447,0,o),
(409,51,q),
(368,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(111,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(129,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(329,74,o),
(369,125,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(431,556,qs),
(437,556,ls),
(446,556,o),
(446,548,qs),
(446,168,ls),
(446,124,o),
(489,74,o),
(526,74,qs),
(581,74,l)
);
},
{
closed = 1;
nodes = (
(366,-188,o),
(366,-221,qs),
(366,-224,ls),
(366,-233,o),
(357,-233,qs),
(243,-233,ls),
(208,-233,o),
(190,-239,qs),
(187,-240,o),
(184,-242,qs),
(179,-244,o),
(177,-244,qs),
(172,-244,o),
(171,-238,qs),
(161,-197,o),
(208,-191,qs),
(209,-191,l),
(198,-171,o),
(198,-149,qs),
(198,-115,o),
(243,-70,o),
(277,-69,qs),
(305,-69,o),
(343,-96,o),
(345,-117,qs),
(345,-128,o),
(337,-128,q),
(335,-127,o),
(329,-124,qs),
(326,-123,o),
(324,-122,qs),
(307,-113,o),
(286,-113,qs),
(246,-113,o),
(246,-149,qs),
(246,-188,o),
(284,-188,qs),
(331,-188,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
35 1 4 0 52 1 6 7 60 1 9 6 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
35 1 4 0 52 1 6 7 60 1 10 6 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 8 0 7 6 8 7 105 12 1 6 10 1 9 6 9 101 0 1 1 23 77 3 2 11 3 0 0 4 95 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 9 10 9 134 0 8 0 7 6 8 7 105 12 1 6 0 10 9 6 10 103 0 1 1 23 77 3 2 11 3 0 0 4 95 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
41 40 1 0 73 70 66 64 56 54 45 43 40 77 41 76 38 36 34 31 27 25 16 14 8 5 0 39 1 39 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(446,556,o),
(446,548,qs),
(446,168,ls),
(446,94,o),
(409,50,qs),
(367,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(111,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(130,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(329,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(431,556,qs),
(437,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
4 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 1 0 27 24 20 18 9 7 0 33 1 32 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,0,l),
(521,0,ls),
(447,0,o),
(409,51,q),
(368,0,o),
(287,0,qs),
(64,0,ls),
(50,0,o),
(50,12,qs),
(50,19,ls),
(50,44,o),
(84,74,o),
(111,74,qs),
(198,74,l),
(103,363,ls),
(86,414,o),
(117,434,qs),
(130,443,o),
(143,447,qs),
(149,448,ls),
(155,450,o),
(158,443,qs),
(280,74,l),
(294,74,ls),
(329,74,o),
(369,126,o),
(369,169,qs),
(369,488,ls),
(369,533,o),
(399,548,qs),
(413,556,o),
(431,556,qs),
(437,556,ls),
(446,556,o),
(446,548,qs),
(446,168,ls),
(446,124,o),
(489,74,o),
(526,74,qs),
(581,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
35 1 4 0 1 76 0 1 1 23 77 3 2 6 3 0 0 4 95 5 1 4 4 24 4 78 1 0 38 36 34 31 27 25 16 14 8 5 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,10,qs),
(67,372,ls),
(67,556,o),
(230,556,qs),
(324,556,ls),
(331,556,o),
(331,548,qs),
(331,542,ls),
(331,525,o),
(325,513,qs),
(313,486,o),
(271,486,qs),
(233,486,ls),
(186,486,o),
(143,433,o),
(143,376,qs),
(143,10,ls),
(143,0,o),
(133,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,10,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,10,ls),
(143,0,o),
(133,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,246,o),
(219,240,qs),
(219,235,o),
(214,231,q),
(147,162,ls),
(143,158,o),
(138,158,qs),
(132,158,o),
(128,162,qs),
(60,231,l),
(56,234,o),
(56,241,qs),
(56,246,o),
(60,249,q),
(128,317,l),
(134,321,o),
(138,321,qs),
(144,321,o),
(147,317,q),
(214,249,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 274;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,247,o),
(219,241,qs),
(219,236,o),
(214,231,qs),
(147,163,ls),
(143,159,o),
(138,159,qs),
(133,159,o),
(128,163,q),
(60,231,l),
(56,236,o),
(56,241,qs),
(56,246,o),
(60,250,qs),
(128,317,ls),
(133,322,o),
(138,322,qs),
(143,322,o),
(147,318,qs),
(214,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 274;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,10,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(135,556,ls),
(143,556,o),
(143,548,qs),
(143,10,ls),
(143,0,o),
(133,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(67,10,qs),
(67,372,ls),
(67,556,o),
(230,556,qs),
(324,556,ls),
(331,556,o),
(331,548,qs),
(331,542,ls),
(331,525,o),
(325,513,qs),
(313,486,o),
(271,486,qs),
(233,486,ls),
(186,486,o),
(143,433,o),
(143,376,qs),
(143,10,ls),
(143,0,o),
(133,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 16 13 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,0,o),
(31,17,qs),
(98,427,ls),
(121,564,o),
(227,564,qs),
(332,564,o),
(355,427,qs),
(423,17,ls),
(425,0,o),
(411,0,qs),
(362,0,ls),
(349,0,o),
(346,15,qs),
(277,441,l),
(266,491,o),
(227,491,qs),
(188,491,o),
(176,441,q),
(107,15,ls),
(105,0,o),
(91,0,qs),
(43,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,317,qs),
(374,280,o),
(306,235,o),
(258,236,qs),
(189,236,o),
(143,270,q),
(143,14,ls),
(143,0,o),
(129,0,qs),
(80,0,ls),
(67,0,o),
(67,14,qs),
(67,488,ls),
(67,533,o),
(96,548,qs),
(111,556,o),
(128,556,qs),
(134,556,ls),
(143,556,o),
(143,548,qs),
(143,518,l),
(188,565,o),
(255,564,qs),
(297,564,o),
(353,521,o),
(355,488,qs),
(356,471,o),
(343,471,qs),
(340,471,o),
(333,473,qs),
(331,474,o),
(330,474,q),
(280,492,o),
(251,492,qs),
(209,491,o),
(145,434,o),
(143,394,qs),
(143,386,ls),
(144,356,o),
(171,333,qs),
(206,304,o),
(261,303,qs),
(304,302,o),
(350,324,q),
(351,324,o),
(353,325,qs),
(365,330,o),
(370,331,q),
(383,331,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
27 1 1 3 42 1 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
27 1 1 4 42 1 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 48 0 48 35 53 51 35 36 38 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,147,qs),
(59,156,o),
(73,382,qs),
(79,462,o),
(116,510,qs),
(160,564,o),
(237,564,qs),
(304,564,o),
(346,522,qs),
(394,474,o),
(400,382,qs),
(415,156,o),
(415,147,qs),
(417,73,o),
(396,35,qs),
(370,-10,o),
(307,-10,qs),
(265,-10,o),
(239,19,qs),
(237,21,o),
(235,19,qs),
(210,-10,o),
(167,-10,qs),
(55,-10,o)
);
},
{
closed = 1;
nodes = (
(227,107,qs),
(229,121,o),
(237,121,qs),
(245,121,o),
(247,107,qs),
(254,63,o),
(289,63,qs),
(339,63,o),
(337,149,qs),
(337,181,o),
(324,376,qs),
(316,494,o),
(237,494,qs),
(157,494,o),
(149,376,qs),
(138,202,o),
(136,155,qs),
(136,150,o),
(136,149,qs),
(135,63,o),
(183,63,qs),
(220,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 6 4 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 43 41 39 37 33 31 24 45 25 45 17 15 7 5 0 23 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,278,o),
(377,266,q),
(291,233,o),
(232,175,qs),
(173,115,o),
(125,9,q),
(122,0,o),
(112,0,qs),
(54,0,ls),
(44,0,o),
(47,11,qs),
(61,71,o),
(134,191,o),
(182,234,q),
(131,250,o),
(101,292,qs),
(69,337,o),
(69,399,qs),
(69,470,o),
(110,515,qs),
(155,564,o),
(231,564,qs),
(275,564,o),
(338,522,o),
(339,490,qs),
(340,473,o),
(328,473,qs),
(324,473,o),
(314,477,qs),
(271,494,o),
(241,493,qs),
(199,493,o),
(145,438,o),
(145,394,qs),
(145,353,o),
(199,290,o),
(243,283,q),
(319,332,o),
(400,352,qs),
(411,355,o),
(415,343,qs),
(424,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
27 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
59 35 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,116,q),
(339,543,ls),
(342,556,o),
(351,556,qs),
(355,556,ls),
(382,556,o),
(411,515,o),
(406,485,qs),
(347,129,ls),
(324,-8,o),
(219,-8,qs),
(114,-8,o),
(91,129,qs),
(32,485,ls),
(27,515,o),
(56,556,o),
(83,556,qs),
(87,556,ls),
(97,556,o),
(99,543,qs),
(169,116,l),
(180,66,o),
(219,66,qs),
(258,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,0,o),
(31,17,qs),
(98,427,ls),
(121,564,o),
(227,564,qs),
(332,564,o),
(355,427,qs),
(423,17,ls),
(425,0,o),
(411,0,qs),
(362,0,ls),
(349,0,o),
(346,15,qs),
(277,441,l),
(266,491,o),
(227,491,qs),
(188,491,o),
(176,441,q),
(107,15,ls),
(105,0,o),
(91,0,qs),
(43,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,521,qs),
(397,469,o),
(397,378,qs),
(397,10,ls),
(397,0,o),
(387,0,qs),
(331,0,ls),
(320,0,o),
(320,10,qs),
(320,193,l),
(227,193,ls),
(159,193,o),
(112,237,qs),
(56,288,o),
(56,378,qs),
(56,457,o),
(100,508,qs),
(148,564,o),
(227,564,qs),
(295,564,o)
);
},
{
closed = 1;
nodes = (
(163,465,qs),
(134,433,o),
(134,378,qs),
(134,329,o),
(187,264,o),
(227,264,qs),
(320,264,l),
(320,379,ls),
(320,430,o),
(269,493,o),
(227,493,qs),
(188,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,557,o),
(616,549,qs),
(616,439,ls),
(616,359,o),
(579,311,qs),
(537,256,o),
(460,256,qs),
(382,256,o),
(343,314,q),
(302,256,o),
(225,256,qs),
(179,256,o),
(143,277,q),
(143,10,ls),
(143,0,o),
(134,0,qs),
(77,0,ls),
(67,0,o),
(67,10,qs),
(67,488,ls),
(67,556,o),
(128,556,qs),
(134,556,ls),
(143,556,o),
(143,548,qs),
(143,442,ls),
(143,331,o),
(225,331,qs),
(265,331,o),
(308,389,o),
(308,442,qs),
(308,492,ls),
(308,520,o),
(337,556,o),
(360,556,qs),
(367,556,ls),
(375,556,o),
(375,549,qs),
(375,442,ls),
(375,388,o),
(418,331,o),
(458,331,qs),
(497,331,o),
(541,388,o),
(541,440,qs),
(541,489,ls),
(541,557,o),
(601,557,qs),
(608,557,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 35 2 6 1 1 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 42 40 38 36 33 30 27 24 21 19 14 11 7 5 0 48 1 47 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,521,qs),
(397,469,o),
(397,378,qs),
(397,10,ls),
(397,0,o),
(387,0,qs),
(331,0,ls),
(320,0,o),
(320,10,qs),
(320,193,l),
(227,193,ls),
(159,193,o),
(112,237,qs),
(56,288,o),
(56,378,qs),
(56,457,o),
(100,508,qs),
(148,564,o),
(227,564,qs),
(295,564,o)
);
},
{
closed = 1;
nodes = (
(163,465,qs),
(134,433,o),
(134,378,qs),
(134,329,o),
(187,264,o),
(227,264,qs),
(320,264,l),
(320,379,ls),
(320,430,o),
(269,493,o),
(227,493,qs),
(188,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 31 21 31 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,116,q),
(339,543,ls),
(342,556,o),
(351,556,qs),
(355,556,ls),
(382,556,o),
(411,515,o),
(406,485,qs),
(347,129,ls),
(324,-8,o),
(219,-8,qs),
(114,-8,o),
(91,129,qs),
(32,485,ls),
(27,515,o),
(56,556,o),
(83,556,qs),
(87,556,ls),
(97,556,o),
(99,543,qs),
(169,116,l),
(180,66,o),
(219,66,qs),
(258,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 101 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,0,o),
(238,10,qs),
(239,376,ls),
(239,433,o),
(196,486,o),
(148,486,qs),
(111,486,ls),
(68,486,o),
(56,513,qs),
(50,525,o),
(50,542,qs),
(50,548,ls),
(50,556,o),
(57,556,qs),
(152,556,ls),
(314,556,o),
(314,372,qs),
(314,10,ls),
(314,0,o),
(304,0,qs),
(248,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 7 4 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 381;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,97,o),
(362,47,qs),
(315,-10,o),
(230,-10,qs),
(155,-10,o),
(109,34,qs),
(56,85,o),
(56,178,qs),
(56,188,o),
(67,383,qs),
(71,463,o),
(108,510,qs),
(152,564,o),
(230,564,qs),
(298,564,o),
(340,523,qs),
(387,475,o),
(393,384,qs),
(404,178,l)
);
},
{
closed = 1;
nodes = (
(326,123,o),
(325,181,qs),
(315,378,ls),
(313,433,o),
(268,493,o),
(230,493,qs),
(192,493,o),
(147,433,o),
(144,378,qs),
(134,181,l),
(134,123,o),
(183,61,o),
(230,61,qs),
(277,61,o)
);
},
{
closed = 1;
nodes = (
(404,178,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
20 19 27 25 19 32 20 32 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,246,o),
(134,197,o),
(134,160,qs),
(134,118,o),
(189,71,o),
(239,71,qs),
(301,71,ls),
(330,71,o),
(365,42,o),
(365,18,qs),
(365,12,ls),
(365,0,o),
(353,0,qs),
(234,0,ls),
(167,0,o),
(121,29,qs),
(56,71,o),
(56,164,qs),
(56,201,o),
(93,266,o),
(125,284,q),
(63,323,o),
(63,403,qs),
(63,470,o),
(103,514,qs),
(149,564,o),
(227,564,qs),
(274,564,o),
(340,524,o),
(343,493,qs),
(345,474,o),
(331,474,qs),
(328,474,o),
(322,475,qs),
(319,476,o),
(317,477,qs),
(272,494,o),
(238,494,qs),
(195,494,o),
(141,445,o),
(141,407,qs),
(141,364,o),
(195,317,o),
(243,317,qs),
(301,317,ls),
(330,317,o),
(365,287,o),
(365,263,qs),
(365,257,ls),
(365,246,o),
(353,246,qs),
(230,246,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 39 36 25 23 20 18 14 12 8 5 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 415;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(616,557,o),
(616,549,qs),
(616,439,ls),
(616,359,o),
(579,311,qs),
(537,256,o),
(460,256,qs),
(382,256,o),
(343,314,q),
(302,256,o),
(225,256,qs),
(179,256,o),
(143,277,q),
(143,10,ls),
(143,0,o),
(134,0,qs),
(77,0,ls),
(67,0,o),
(67,10,qs),
(67,488,l),
(70,556,o),
(128,556,qs),
(134,556,ls),
(143,556,o),
(143,548,qs),
(143,442,ls),
(143,331,o),
(225,331,qs),
(265,331,o),
(308,389,o),
(308,442,qs),
(308,492,ls),
(308,520,o),
(337,556,o),
(360,556,qs),
(367,556,ls),
(375,556,o),
(375,549,qs),
(375,442,ls),
(375,388,o),
(418,331,o),
(458,331,qs),
(497,331,o),
(541,388,o),
(541,440,qs),
(541,489,ls),
(541,557,o),
(601,557,qs),
(608,557,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
39 35 2 6 1 1 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 42 40 38 36 33 30 27 24 21 19 14 11 7 5 0 48 1 47 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 683;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFullName;
value = "Zain Regular";
},
{
key = postscriptFontName;
value = "Zain-Regular";
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 8;
"@MMK_R_C" = -12;
"@MMK_R_O" = -12;
"@MMK_R_U" = -6;
"@MMK_R_Y" = -16;
"@MMK_R_a" = -6;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -7;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -13;
"@MMK_R_u" = -5;
"@MMK_R_y" = -9;
};
"@MMK_L_C" = {
"@MMK_R_C" = -4;
"@MMK_R_O" = -4;
"@MMK_R_S" = 3;
"@MMK_R_Z" = 2;
"@MMK_R_quoteright" = 4;
};
"@MMK_L_E" = {
"@MMK_R_A" = 2;
"@MMK_R_C" = -5;
"@MMK_R_O" = -5;
"@MMK_R_Y" = -2;
"@MMK_R_a" = -5;
"@MMK_R_c" = -6;
"@MMK_R_e" = -6;
"@MMK_R_o" = -6;
"@MMK_R_quoteright" = 3;
"@MMK_R_u" = -4;
"@MMK_R_y" = -6;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -2;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -2;
};
"@MMK_L_O" = {
"@MMK_R_A" = -12;
"@MMK_R_S" = -3;
"@MMK_R_Y" = -10;
"@MMK_R_Z" = -9;
"@MMK_R_a" = -2;
"@MMK_R_c" = -2;
"@MMK_R_e" = -2;
"@MMK_R_quoteright" = -4;
"@MMK_R_s" = -2;
"@MMK_R_u" = -2;
"@MMK_R_z" = -3;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -2;
"@MMK_R_a" = 2;
"@MMK_R_c" = 3;
"@MMK_R_e" = 3;
"@MMK_R_o" = 3;
"@MMK_R_y" = -4;
};
"@MMK_L_U" = {
"@MMK_R_A" = -6;
"@MMK_R_Y" = -3;
"@MMK_R_s" = -3;
"@MMK_R_z" = -4;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -12;
"@MMK_R_C" = -10;
"@MMK_R_O" = -9;
"@MMK_R_S" = -2;
"@MMK_R_Y" = 7;
"@MMK_R_a" = -23;
"@MMK_R_c" = -23;
"@MMK_R_e" = -23;
"@MMK_R_f" = -7;
"@MMK_R_n" = -14;
"@MMK_R_o" = -23;
"@MMK_R_quoteright" = 7;
"@MMK_R_r" = -14;
"@MMK_R_s" = -18;
"@MMK_R_u" = -16;
"@MMK_R_y" = -13;
"@MMK_R_z" = -16;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -7;
"@MMK_R_O" = -7;
"@MMK_R_a" = -7;
"@MMK_R_c" = -9;
"@MMK_R_e" = -9;
"@MMK_R_o" = -9;
"@MMK_R_quoteright" = 4;
"@MMK_R_u" = -9;
"@MMK_R_y" = -7;
};
"@MMK_L_a" = {
"@MMK_R_y" = -3;
};
"@MMK_L_c" = {
"@MMK_R_a" = -2;
"@MMK_R_c" = -2;
"@MMK_R_e" = -2;
"@MMK_R_o" = -2;
"@MMK_R_quoteright" = 2;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -2;
"@MMK_R_z" = -3;
};
"@MMK_L_i" = {
"@MMK_R_y" = -3;
};
"@MMK_L_l" = {
"@MMK_R_a" = -2;
"@MMK_R_c" = -2;
"@MMK_R_e" = -2;
"@MMK_R_f" = -5;
"@MMK_R_i" = -2;
"@MMK_R_o" = -2;
"@MMK_R_quoteright" = -8;
"@MMK_R_u" = -3;
"@MMK_R_y" = -7;
};
"@MMK_L_n" = {
"@MMK_R_f" = -2;
"@MMK_R_quoteright" = -12;
"@MMK_R_y" = -3;
};
"@MMK_L_o" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -10;
"@MMK_R_s" = -2;
"@MMK_R_y" = -3;
"@MMK_R_z" = -5;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -9;
"@MMK_R_Y" = 5;
"@MMK_R_a" = -7;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = 7;
"@MMK_R_o" = -7;
"@MMK_R_s" = -3;
"@MMK_R_y" = 9;
"@MMK_R_z" = 2;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 6;
"@MMK_R_Y" = -15;
"@MMK_R_Z" = 4;
"@MMK_R_f" = -9;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -4;
"@MMK_R_y" = -3;
};
"@MMK_L_y" = {
"@MMK_R_a" = -2;
"@MMK_R_c" = -3;
"@MMK_R_e" = -2;
"@MMK_R_f" = 4;
"@MMK_R_o" = -2;
"@MMK_R_quoteright" = 6;
"@MMK_R_y" = 3;
};
"@MMK_L_z" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -4;
"@MMK_R_e" = -3;
"@MMK_R_o" = -3;
};
A = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
AE = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Aacute = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
Acircumflex = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
Adieresis = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
Agrave = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
Aring = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
Atilde = {
G = -12;
J = 6;
Q = -12;
T = -19;
V = -13;
W = -9;
comma = 4;
d = -4;
g = -3;
l = -3;
period = 4;
q = -4;
question = -14;
t = -9;
v = -9;
w = -7;
};
B = {
AE = -6;
T = -4;
V = -4;
X = -2;
Y = -7;
Yacute = -7;
Ydieresis = -7;
y = -3;
yacute = -3;
ydieresis = -3;
};
C = {
G = -4;
Q = -4;
T = 2;
comma = 2;
period = 2;
question = 4;
};
Ccedilla = {
G = -4;
Q = -4;
T = 2;
comma = 2;
period = 2;
question = 4;
};
D = {
A = -10;
AE = -16;
Aacute = -10;
Acircumflex = -10;
Adieresis = -10;
Agrave = -10;
Aring = -10;
Atilde = -10;
J = -10;
M = -2;
T = -13;
V = -9;
W = -5;
X = -11;
Y = -12;
Yacute = -12;
Ydieresis = -12;
Z = -9;
Zcaron = -9;
comma = -10;
period = -10;
question = -7;
quotedblright = -5;
quoteright = -5;
z = -3;
zcaron = -3;
};
Decoratedbracketright = {
rehvabovear = -5;
uni0622 = 29;
uni0623 = 18;
uni0625 = 21;
uni0627 = 0;
uni0631 = -5;
uni0632 = -5;
uni0671 = 29;
uni0691 = -5;
uni0694 = -5;
uni0695 = -5;
uni0698 = -5;
};
E = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Eacute = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Ecircumflex = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Edieresis = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Egrave = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
F = {
A = -11;
AE = -21;
Aacute = -11;
Acircumflex = -11;
Adieresis = -11;
Agrave = -11;
Aring = -11;
Atilde = -11;
C = -3;
Ccedilla = -3;
G = -3;
J = -16;
O = -3;
OE = -3;
Oacute = -3;
Ocircumflex = -3;
Odieresis = -3;
Ograve = -3;
Oslash = -3;
Otilde = -3;
Q = -3;
T = 3;
V = 2;
W = 2;
X = -3;
a = -5;
aacute = -5;
acircumflex = -5;
adieresis = -5;
ae = -5;
agrave = -5;
aring = -5;
atilde = -5;
c = -5;
ccedilla = -5;
comma = -16;
d = -5;
dotlessi = -3;
e = -5;
eacute = -5;
ecircumflex = -5;
edieresis = -5;
egrave = -5;
g = -5;
m = -3;
n = -3;
ntilde = -3;
o = -5;
oacute = -5;
ocircumflex = -5;
odieresis = -5;
oe = -5;
ograve = -5;
oslash = -5;
otilde = -5;
p = -3;
period = -16;
q = -5;
question = 3;
quotedblright = 7;
quoteright = 7;
r = -3;
s = -4;
scaron = -4;
u = -4;
uacute = -4;
ucircumflex = -4;
udieresis = -4;
ugrave = -4;
v = -7;
w = -4;
x = -13;
y = -7;
yacute = -7;
ydieresis = -7;
z = -7;
zcaron = -7;
};
G = {
T = -5;
V = -6;
W = -4;
X = -2;
Y = -7;
Yacute = -7;
Ydieresis = -7;
question = -3;
y = -2;
yacute = -2;
ydieresis = -2;
};
H = {
V = -2;
Y = -2;
Yacute = -2;
Ydieresis = -2;
};
I = {
V = -2;
};
Iacute = {
V = -2;
};
Icircumflex = {
V = -2;
};
Idieresis = {
V = -2;
};
Igrave = {
V = -2;
};
J = {
A = -3;
AE = -7;
Aacute = -3;
Acircumflex = -3;
Adieresis = -3;
Agrave = -3;
Aring = -3;
Atilde = -3;
J = -3;
V = -2;
X = -6;
Y = -2;
Yacute = -2;
Ydieresis = -2;
a = -2;
aacute = -2;
acircumflex = -2;
adieresis = -2;
ae = -2;
agrave = -2;
aring = -2;
atilde = -2;
comma = -3;
e = -2;
eacute = -2;
ecircumflex = -2;
edieresis = -2;
egrave = -2;
o = -2;
oacute = -2;
ocircumflex = -2;
odieresis = -2;
oe = -2;
ograve = -2;
oslash = -2;
otilde = -2;
period = -3;
};
K = {
A = 3;
Aacute = 3;
Acircumflex = 3;
Adieresis = 3;
Agrave = 3;
Aring = 3;
Atilde = 3;
C = -13;
Ccedilla = -13;
G = -13;
O = -13;
OE = -13;
Oacute = -13;
Ocircumflex = -13;
Odieresis = -13;
Ograve = -13;
Oslash = -13;
Otilde = -13;
Q = -13;
S = -6;
Scaron = -6;
T = -3;
U = -6;
Uacute = -6;
Ucircumflex = -6;
Udieresis = -6;
Ugrave = -6;
V = -3;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = 3;
d = -9;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
hyphen = -9;
l = -3;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = 3;
q = -9;
quotedblright = -4;
quoteright = -4;
s = -4;
scaron = -4;
t = -9;
u = -8;
uacute = -8;
ucircumflex = -8;
udieresis = -8;
ugrave = -8;
v = -11;
w = -9;
y = -11;
yacute = -11;
ydieresis = -11;
};
L = {
A = 3;
Aacute = 3;
Acircumflex = 3;
Adieresis = 3;
Agrave = 3;
Aring = 3;
Atilde = 3;
C = -16;
Ccedilla = -16;
G = -16;
J = 3;
O = -16;
OE = -16;
Oacute = -16;
Ocircumflex = -16;
Odieresis = -16;
Ograve = -16;
Oslash = -16;
Otilde = -16;
Q = -16;
S = -3;
Scaron = -3;
T = -24;
U = -11;
Uacute = -11;
Ucircumflex = -11;
Udieresis = -11;
Ugrave = -11;
V = -17;
W = -15;
Y = -21;
Yacute = -21;
Ydieresis = -21;
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -7;
ccedilla = -7;
colon = 2;
comma = 5;
d = -6;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
g = -8;
hyphen = -11;
l = -4;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = 5;
q = -6;
question = -15;
quotedblright = -10;
quoteright = -10;
semicolon = 2;
t = -12;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -13;
w = -11;
y = -12;
yacute = -12;
ydieresis = -12;
};
M = {
C = -2;
Ccedilla = -2;
G = -2;
O = -2;
OE = -2;
Oacute = -2;
Ocircumflex = -2;
Odieresis = -2;
Ograve = -2;
Oslash = -2;
Otilde = -2;
Q = -2;
S = -2;
Scaron = -2;
T = -3;
V = -2;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -2;
aacute = -2;
acircumflex = -2;
adieresis = -2;
ae = -2;
agrave = -2;
aring = -2;
atilde = -2;
c = -2;
ccedilla = -2;
e = -2;
eacute = -2;
ecircumflex = -2;
edieresis = -2;
egrave = -2;
g = -2;
o = -2;
oacute = -2;
ocircumflex = -2;
odieresis = -2;
oe = -2;
ograve = -2;
oslash = -2;
otilde = -2;
s = -2;
scaron = -2;
y = -2;
yacute = -2;
ydieresis = -2;
};
N = {
V = -2;
};
Ntilde = {
V = -2;
};
O = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
OE = {
G = -5;
Q = -5;
comma = 4;
d = -5;
g = -5;
period = 4;
q = -5;
v = -6;
w = -4;
};
Oacute = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
Ocircumflex = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
Odieresis = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
Ograve = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
Oslash = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
Otilde = {
AE = -16;
J = -11;
M = -2;
T = -9;
V = -6;
W = -4;
X = -9;
comma = -9;
d = -2;
g = -2;
period = -9;
q = -2;
question = -7;
x = -6;
};
P = {
A = -16;
AE = -29;
Aacute = -16;
Acircumflex = -16;
Adieresis = -16;
Agrave = -16;
Aring = -16;
Atilde = -16;
J = -18;
M = -2;
T = -3;
X = -10;
Y = -3;
Yacute = -3;
Ydieresis = -3;
Z = -5;
Zcaron = -5;
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -6;
ccedilla = -6;
comma = -16;
d = -6;
e = -6;
eacute = -6;
ecircumflex = -6;
edieresis = -6;
egrave = -6;
g = -6;
hyphen = -3;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
period = -16;
q = -6;
quotedblright = 2;
quoteright = 2;
s = -2;
scaron = -2;
z = -3;
zcaron = -3;
};
Q = {
A = -10;
AE = -7;
Aacute = -10;
Acircumflex = -10;
Adieresis = -10;
Agrave = -10;
Aring = -10;
Atilde = -10;
J = -8;
T = -9;
V = -6;
W = -4;
X = -8;
Y = -10;
Yacute = -10;
Ydieresis = -10;
Z = -9;
Zcaron = -9;
a = -2;
aacute = -2;
acircumflex = -2;
adieresis = -2;
ae = -2;
agrave = -2;
aring = -2;
atilde = -2;
c = -1;
ccedilla = -1;
d = -1;
e = -1;
eacute = -1;
ecircumflex = -1;
edieresis = -1;
egrave = -1;
g = -1;
s = -1;
scaron = -1;
u = -2;
uacute = -2;
ucircumflex = -2;
udieresis = -2;
ugrave = -2;
x = -5;
z = -3;
zcaron = -3;
};
R = {
J = -4;
T = -3;
V = -2;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -7;
aacute = -7;
acircumflex = -7;
adieresis = -7;
ae = -7;
agrave = -7;
aring = -7;
atilde = -7;
c = -7;
ccedilla = -7;
d = -7;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
hyphen = -5;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
q = -7;
s = -4;
scaron = -4;
u = -2;
uacute = -2;
ucircumflex = -2;
udieresis = -2;
ugrave = -2;
};
S = {
T = -2;
d = 3;
g = 3;
q = 3;
t = -3;
v = -4;
w = -3;
x = -5;
};
Scaron = {
T = -2;
d = 3;
g = 3;
q = 3;
t = -3;
v = -4;
w = -3;
x = -5;
};
T = {
A = -16;
AE = -28;
Aacute = -16;
Acircumflex = -16;
Adieresis = -16;
Agrave = -16;
Aring = -16;
Atilde = -16;
C = -9;
Ccedilla = -9;
G = -9;
J = -19;
M = -3;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
T = 3;
X = -3;
Y = 3;
Yacute = 3;
Ydieresis = 3;
a = -24;
aacute = -24;
acircumflex = -24;
adieresis = -24;
ae = -24;
agrave = -24;
aring = -24;
atilde = -24;
c = -24;
ccedilla = -24;
colon = -7;
comma = -13;
d = -24;
dotlessi = -16;
e = -24;
eacute = -24;
ecircumflex = -24;
edieresis = -24;
egrave = -24;
f = -10;
fi = -10;
fl = -10;
g = -24;
hyphen = -13;
m = -16;
n = -16;
ntilde = -16;
o = -24;
oacute = -24;
ocircumflex = -24;
odieresis = -24;
oe = -24;
ograve = -24;
oslash = -24;
otilde = -24;
p = -16;
period = -13;
q = -24;
question = 8;
quotedblright = 7;
quoteright = 7;
r = -16;
s = -18;
scaron = -18;
semicolon = -7;
t = -9;
u = -18;
uacute = -18;
ucircumflex = -18;
udieresis = -18;
ugrave = -18;
v = -24;
w = -22;
x = -26;
y = -24;
yacute = -24;
ydieresis = -24;
z = -18;
zcaron = -18;
};
U = {
AE = -12;
J = -6;
V = -2;
X = -5;
comma = -6;
period = -6;
};
Uacute = {
AE = -12;
J = -6;
V = -2;
X = -5;
comma = -6;
period = -6;
};
Ucircumflex = {
AE = -12;
J = -6;
V = -2;
X = -5;
comma = -6;
period = -6;
};
Udieresis = {
AE = -12;
J = -6;
V = -2;
X = -5;
comma = -6;
period = -6;
};
Ugrave = {
AE = -12;
J = -6;
V = -2;
X = -5;
comma = -6;
period = -6;
};
V = {
A = -12;
AE = -20;
Aacute = -12;
Acircumflex = -12;
Adieresis = -12;
Agrave = -12;
Aring = -12;
Atilde = -12;
C = -7;
Ccedilla = -7;
G = -7;
J = -13;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 3;
V = 4;
Y = 5;
Yacute = 5;
Ydieresis = 5;
Z = 3;
Zcaron = 3;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
colon = -4;
comma = -13;
d = -16;
dotlessi = -6;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
exclam = 3;
f = -3;
fi = -3;
fl = -3;
g = -16;
hyphen = -7;
m = -6;
n = -6;
ntilde = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
p = -6;
period = -13;
q = -16;
question = 6;
quotedblright = 8;
quoteright = 8;
r = -6;
s = -10;
scaron = -10;
semicolon = -4;
t = -3;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -7;
w = -4;
x = -10;
y = -7;
yacute = -7;
ydieresis = -7;
z = -9;
zcaron = -9;
};
W = {
A = -9;
AE = -17;
Aacute = -9;
Acircumflex = -9;
Adieresis = -9;
Agrave = -9;
Aring = -9;
Atilde = -9;
C = -4;
Ccedilla = -4;
G = -4;
J = -10;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
Y = 2;
Yacute = 2;
Ydieresis = 2;
a = -13;
aacute = -13;
acircumflex = -13;
adieresis = -13;
ae = -13;
agrave = -13;
aring = -13;
atilde = -13;
c = -12;
ccedilla = -12;
colon = -3;
comma = -8;
d = -13;
dotlessi = -7;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
f = -4;
fi = -4;
fl = -4;
g = -13;
hyphen = -5;
m = -7;
n = -7;
ntilde = -7;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
p = -7;
period = -8;
q = -13;
question = 4;
quotedblright = 7;
quoteright = 7;
r = -7;
s = -9;
scaron = -9;
semicolon = -3;
t = -4;
u = -9;
uacute = -9;
ucircumflex = -9;
udieresis = -9;
ugrave = -9;
v = -7;
w = -4;
x = -12;
y = -7;
yacute = -7;
ydieresis = -7;
z = -9;
zcaron = -9;
};
X = {
C = -11;
Ccedilla = -11;
G = -11;
O = -10;
OE = -10;
Oacute = -10;
Ocircumflex = -10;
Odieresis = -10;
Ograve = -10;
Oslash = -10;
Otilde = -10;
Q = -10;
S = -2;
Scaron = -2;
T = -3;
U = -4;
Uacute = -4;
Ucircumflex = -4;
Udieresis = -4;
Ugrave = -4;
V = -3;
Y = -3;
Yacute = -3;
Ydieresis = -3;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = 4;
d = -9;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
f = -6;
fi = -6;
fl = -6;
g = -9;
hyphen = -10;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = 4;
q = -9;
s = -3;
scaron = -3;
t = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -9;
w = -8;
y = -9;
yacute = -9;
ydieresis = -9;
};
Y = {
AE = -27;
G = -10;
J = -16;
Q = -10;
T = 3;
V = 5;
W = 2;
colon = -7;
comma = -12;
d = -23;
exclam = 3;
g = -23;
hyphen = -13;
m = -14;
p = -14;
period = -12;
q = -23;
question = 4;
semicolon = -7;
v = -13;
w = -11;
x = -15;
};
Yacute = {
AE = -27;
G = -10;
J = -16;
Q = -10;
T = 3;
V = 5;
W = 2;
colon = -7;
comma = -12;
d = -23;
exclam = 3;
g = -23;
hyphen = -13;
m = -14;
p = -14;
period = -12;
q = -23;
question = 4;
semicolon = -7;
v = -13;
w = -11;
x = -15;
};
Ydieresis = {
AE = -27;
G = -10;
J = -16;
Q = -10;
T = 3;
V = 5;
W = 2;
colon = -7;
comma = -12;
d = -23;
exclam = 3;
g = -23;
hyphen = -13;
m = -14;
p = -14;
period = -12;
q = -23;
question = 4;
semicolon = -7;
v = -13;
w = -11;
x = -15;
};
Z = {
G = -7;
Q = -7;
d = -7;
g = -7;
hyphen = -9;
q = -7;
t = -4;
v = -7;
w = -6;
};
Zcaron = {
G = -7;
Q = -7;
d = -7;
g = -7;
hyphen = -9;
q = -7;
t = -4;
v = -7;
w = -6;
};
a = {
parenright = -6;
question = -6;
v = -3;
};
aacute = {
parenright = -6;
question = -6;
v = -3;
};
acircumflex = {
parenright = -6;
question = -6;
v = -3;
};
adieresis = {
parenright = -6;
question = -6;
v = -3;
};
ae = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
agrave = {
parenright = -6;
question = -6;
v = -3;
};
aring = {
parenright = -6;
question = -6;
v = -3;
};
atilde = {
parenright = -6;
question = -6;
v = -3;
};
b = {
Thorn = 1;
comma = -4;
f = -2;
fi = -2;
fl = -2;
parenright = -18;
period = -4;
question = -13;
quotedblright = -9;
quoteright = -9;
t = -3;
v = -3;
x = -6;
y = -3;
yacute = -3;
ydieresis = -3;
z = -3;
zcaron = -3;
};
braceleft = {
j = 31;
y = 9;
yacute = 9;
ydieresis = 9;
};
braceright = {
rehvabovear = -13;
uni0622 = 26;
uni0623 = 17;
uni0625 = 12;
uni0627 = -18;
uni0631 = -18;
uni0632 = -33;
uni0671 = 28;
uni0691 = -11;
uni0694 = -18;
uni0695 = -18;
uni0698 = -33;
};
bracketleft = {
j = 28;
uni0632 = 8;
y = 7;
yacute = 7;
ydieresis = 7;
};
bracketright = {
rehvabovear = -13;
uni0622 = 26;
uni0623 = 17;
uni0625 = 12;
uni0627 = -18;
uni0631 = -18;
uni0632 = -33;
uni0671 = 28;
uni0691 = -11;
uni0694 = -18;
uni0695 = -18;
uni0698 = -33;
};
c = {
comma = 4;
d = -2;
g = -2;
parenright = -9;
period = 4;
q = -2;
question = -7;
t = 2;
};
ccedilla = {
comma = 4;
d = -2;
g = -2;
parenright = -9;
period = 4;
q = -2;
question = -7;
t = 2;
};
comma = {
eight = -4;
eight.ar = -4;
eight.farsi = -4;
nine = -18;
nine.ar = -18;
nine.farsi = -18;
quotedblright = -12;
quoteright = -12;
seven = -11;
seven.ar = -11;
seven.farsi = -11;
six = -6;
six.ar = -6;
six.farsi = -6;
zero = -13;
zero.ar = -13;
zero.farsi = -13;
};
d = {
parenright = -6;
};
dollar = {
eight = 3;
eight.ar = 3;
eight.farsi = 3;
four = 8;
four.ar = 8;
four.farsi = 8;
nine = -6;
nine.ar = -6;
nine.farsi = -6;
};
dotlessi = {
parenright = -6;
v = -3;
w = -2;
};
e = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
eacute = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
ecircumflex = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
edieresis = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
egrave = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
eight = {
comma = -4;
eight = 3;
four = 4;
period = -4;
seven = -4;
two = -6;
};
eight.ar = {
comma = -4;
eight.ar = 3;
four.ar = 4;
period = -4;
seven.ar = -4;
two.ar = -6;
};
eight.farsi = {
comma = -4;
eight.farsi = 3;
four.farsi = 4;
period = -4;
seven.farsi = -4;
two.farsi = -6;
};
exclamdown = {
j = 24;
y = 3;
yacute = 3;
ydieresis = 3;
};
f = {
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -8;
ccedilla = -8;
comma = -12;
d = -8;
e = -8;
eacute = -8;
ecircumflex = -8;
edieresis = -8;
egrave = -8;
exclam = 3;
g = -8;
hyphen = -4;
o = -8;
oacute = -8;
ocircumflex = -8;
odieresis = -8;
oe = -8;
ograve = -8;
oslash = -8;
otilde = -8;
parenright = -12;
period = -12;
q = -8;
question = 7;
quotedblright = 7;
quoteright = 7;
};
fi = {
parenright = -6;
v = -3;
w = -2;
};
five = {
comma = -5;
four = 2;
nine = -9;
one = -3;
period = -5;
seven = -7;
two = -6;
zero = -2;
};
five.ar = {
comma = -5;
four.ar = 2;
nine.ar = -9;
one.ar = -3;
period = -5;
seven.ar = -7;
two.ar = -6;
zero.ar = -2;
};
five.farsi = {
comma = -5;
four.farsi = 2;
nine.farsi = -9;
one.farsi = -3;
period = -5;
seven.farsi = -7;
two.farsi = -6;
zero.farsi = -2;
};
fl = {
colon = 3;
comma = 6;
d = -2;
g = -2;
hyphen = -2;
l = -2;
period = 6;
q = -2;
question = -9;
semicolon = 3;
t = -9;
v = -7;
w = -5;
};
four = {
four = 3;
nine = -9;
one = -3;
seven = -6;
six = -2;
two = -3;
zero = -6;
};
four.ar = {
four.ar = 3;
nine.ar = -9;
one.ar = -3;
seven.ar = -6;
six.ar = -2;
two.ar = -3;
zero.ar = -6;
};
four.farsi = {
four.farsi = 3;
nine.farsi = -9;
one.farsi = -3;
seven.farsi = -6;
six.farsi = -2;
two.farsi = -3;
zero.farsi = -6;
};
g = {
j = 17;
parenright = -6;
question = -7;
quotedblright = -3;
quoteright = -3;
v = -2;
};
germandbls = {
f = -6;
fi = -6;
fl = -6;
t = -10;
v = -9;
w = -7;
x = -6;
y = -9;
yacute = -9;
ydieresis = -9;
};
h = {
parenright = -6;
question = -13;
quotedblright = -12;
quoteright = -12;
v = -3;
w = -2;
y = -3;
yacute = -3;
ydieresis = -3;
};
hyphen = {
T = -13;
V = -7;
W = -5;
X = -10;
Y = -13;
Yacute = -13;
Ydieresis = -13;
v = -3;
x = -7;
};
i = {
parenright = -6;
v = -3;
w = -2;
};
iacute = {
parenright = -6;
v = -3;
w = -2;
};
icircumflex = {
parenright = -6;
v = -3;
w = -2;
};
idieresis = {
parenright = -6;
v = -3;
w = -2;
};
igrave = {
parenright = -6;
v = -3;
w = -2;
};
j = {
j = 17;
v = -3;
w = -2;
};
k = {
a = -7;
aacute = -7;
acircumflex = -7;
adieresis = -7;
ae = -7;
agrave = -7;
aring = -7;
atilde = -7;
c = -7;
ccedilla = -7;
comma = 2;
d = -7;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
g = -7;
hyphen = -4;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = 2;
q = -7;
question = -3;
s = -2;
scaron = -2;
};
l = {
colon = 3;
comma = 6;
d = -2;
g = -2;
hyphen = -2;
l = -2;
period = 6;
q = -2;
question = -9;
semicolon = 3;
t = -9;
v = -7;
w = -5;
};
lam_alefvabovear = {
lamdotabovear = 0;
lamthreedotsabovear = 38;
lamthreedotsabovear.init = 38;
uni0621 = 18;
uni0622 = 50;
uni0623 = 56;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 50;
uni0686 = 18;
uni0691 = 22;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 22;
uniFB7C = 18;
uniFE9B = 0;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
lam_alefvabovear.fina = {
lamthreedotsabovear = 38;
lamthreedotsabovear.init = 38;
uni0621 = 18;
uni0622 = 50;
uni0623 = 56;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 50;
uni0686 = 18;
uni0691 = 22;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 22;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
m = {
f = -2;
fi = -2;
fl = -2;
parenright = -6;
question = -13;
quotedblright = -12;
quoteright = -12;
v = -3;
w = -2;
y = -3;
yacute = -3;
ydieresis = -3;
};
n = {
parenright = -6;
question = -13;
v = -3;
w = -2;
};
nine = {
comma = -15;
five = -2;
four = -4;
period = -15;
seven = -4;
six = -4;
three = -5;
two = -9;
};
nine.ar = {
comma = -15;
five.ar = -2;
four.ar = -4;
period = -15;
seven.ar = -4;
six.ar = -4;
three.ar = -5;
two.ar = -9;
};
nine.farsi = {
comma = -15;
five.farsi = -2;
four.farsi = -4;
period = -15;
seven.farsi = -4;
six.farsi = -4;
three.farsi = -5;
two.farsi = -9;
};
ntilde = {
parenright = -6;
question = -13;
v = -3;
w = -2;
};
o = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
oacute = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
ocircumflex = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
odieresis = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
oe = {
parenright = -16;
question = -12;
t = -2;
v = -2;
x = -6;
};
ograve = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
one = {
eight = -6;
five = -6;
four = -9;
nine = -16;
seven = -12;
six = -9;
three = -4;
zero = -13;
};
one.ar = {
eight.ar = -6;
five.ar = -6;
four.ar = -9;
nine.ar = -16;
seven.ar = -12;
six.ar = -9;
three.ar = -4;
zero.ar = -13;
};
one.farsi = {
eight.farsi = -6;
five.farsi = -6;
four.farsi = -9;
nine.farsi = -16;
seven.farsi = -12;
six.farsi = -9;
three.farsi = -4;
zero.farsi = -13;
};
oslash = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
otilde = {
comma = -3;
parenright = -18;
period = -3;
question = -14;
t = -5;
v = -3;
w = -2;
x = -8;
};
p = {
comma = -3;
f = -4;
fi = -4;
fl = -4;
parenright = -18;
period = -3;
question = -15;
quotedblright = -10;
quoteright = -10;
t = -4;
v = -2;
x = -6;
y = -2;
yacute = -2;
ydieresis = -2;
z = -3;
zcaron = -3;
};
parenleft = {
a = -18;
aacute = -18;
acircumflex = -18;
adieresis = -18;
ae = -18;
agrave = -18;
aring = -18;
atilde = -18;
b = -6;
c = -18;
ccedilla = -18;
comma = 9;
d = -18;
dotlessi = -6;
e = -18;
eacute = -18;
ecircumflex = -18;
edieresis = -18;
egrave = -18;
f = -12;
fi = -12;
fl = -12;
g = -16;
h = -6;
i = -6;
iacute = -6;
icircumflex = -6;
idieresis = -6;
igrave = -6;
j = 40;
k = -6;
l = -6;
m = -6;
n = -6;
ntilde = -6;
o = -18;
oacute = -18;
ocircumflex = -18;
odieresis = -18;
oe = -18;
ograve = -18;
oslash = -18;
otilde = -18;
q = -18;
r = -6;
s = -12;
scaron = -12;
t = -9;
u = -16;
uacute = -16;
ucircumflex = -16;
udieresis = -16;
ugrave = -16;
uni0622 = 6;
uni0631 = 8;
uni0632 = 8;
uni0671 = 11;
v = -16;
w = -16;
x = -12;
y = 21;
yacute = 21;
ydieresis = 21;
z = -12;
zcaron = -12;
};
parenright = {
rehvabovear = -5;
uni0622 = 23;
uni0623 = 20;
uni0625 = 7;
uni0627 = -11;
uni0631 = -16;
uni0632 = -27;
uni0671 = 28;
uni0691 = -3;
uni0694 = -16;
uni0695 = -16;
uni0698 = -27;
};
period = {
eight = -4;
eight.ar = -4;
eight.farsi = -4;
nine = -18;
nine.ar = -18;
nine.farsi = -18;
quotedblright = -2;
quoteright = -2;
seven = -11;
seven.ar = -11;
seven.farsi = -11;
six = -6;
six.ar = -6;
six.farsi = -6;
zero = -13;
zero.ar = -13;
zero.farsi = -13;
};
q = {
j = 19;
};
questiondown = {
j = 43;
p = 9;
y = 21;
yacute = 21;
ydieresis = 21;
};
quotedblbase = {
T = -16;
V = -13;
W = -9;
j = 21;
t = -12;
v = -10;
w = -9;
};
quotedblleft = {
J = -7;
T = 4;
V = 4;
W = 5;
d = -7;
g = -7;
q = -7;
t = 8;
uni0691 = 28;
uni0698 = 15;
uniFB68 = 28;
uniFE8B = 28;
uniFE97 = 25;
uniFE9B = 25;
v = 9;
w = 9;
x = 4;
};
quotedblright = {
colon = -4;
period = -4;
uni0691 = 42;
uni0698 = 36;
uniFB68 = 42;
uniFE8B = 28;
uniFE97 = 36;
uniFE9B = 36;
};
quoteleft = {
J = -7;
T = 4;
V = 4;
W = 5;
d = -7;
g = -7;
q = -7;
t = 8;
uni0698 = 25;
uniFB68 = 28;
uniFE8B = 28;
uniFE97 = 11;
uniFE9B = 11;
v = 9;
w = 9;
x = 4;
};
quoteright = {
A = -10;
Aacute = -10;
Acircumflex = -10;
Adieresis = -10;
Agrave = -10;
Aring = -10;
Atilde = -10;
O = -5;
OE = -5;
Oacute = -5;
Ocircumflex = -5;
Odieresis = -5;
Ograve = -5;
Oslash = -5;
Otilde = -5;
T = 10;
V = 6;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
colon = -4;
comma = -13;
d = -14;
dotlessi = -7;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
m = -7;
n = -7;
ntilde = -7;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = -4;
r = -7;
s = -12;
scaron = -12;
uni0691 = 42;
uni0698 = 36;
uniFB68 = 42;
uniFE8B = 28;
uniFE97 = 36;
uniFE9B = 36;
};
quotesinglbase = {
T = -16;
V = -13;
W = -9;
j = 21;
t = -12;
v = -10;
w = -9;
};
r = {
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -6;
ccedilla = -6;
comma = -8;
d = -6;
e = -6;
eacute = -6;
ecircumflex = -6;
edieresis = -6;
egrave = -6;
f = 2;
fi = 2;
fl = 2;
g = -6;
hyphen = -3;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
parenright = -16;
period = -8;
q = -6;
question = -6;
t = 2;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
space = 69;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvabovear = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 76;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvabovear.fina = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvbelowar.fina = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
s = {
comma = 3;
parenright = -12;
period = 3;
question = -10;
};
scaron = {
comma = 3;
parenright = -12;
period = 3;
question = -10;
};
seven = {
comma = -19;
eight = -3;
four = -11;
one = 3;
period = -19;
six = -9;
two = -7;
zero = -6;
};
seven.ar = {
comma = -19;
eight.ar = -3;
four.ar = -11;
one.ar = 3;
period = -19;
six.ar = -9;
two.ar = -7;
zero.ar = -6;
};
seven.farsi = {
comma = -19;
eight.farsi = -3;
four.farsi = -11;
one.farsi = 3;
period = -19;
six.farsi = -9;
two.farsi = -7;
zero.farsi = -6;
};
six = {
comma = -5;
four = 4;
nine = -5;
one = -4;
period = -5;
seven = -10;
two = -6;
zero = -2;
};
six.ar = {
comma = -5;
four.ar = 4;
nine.ar = -5;
one.ar = -4;
period = -5;
seven.ar = -10;
two.ar = -6;
zero.ar = -2;
};
six.farsi = {
comma = -5;
four.farsi = 4;
nine.farsi = -5;
one.farsi = -4;
period = -5;
seven.farsi = -10;
two.farsi = -6;
zero.farsi = -2;
};
sterling = {
eight = -3;
four = -7;
seven = 3;
six = -10;
};
t = {
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -5;
ccedilla = -5;
comma = -10;
d = -6;
e = -5;
eacute = -5;
ecircumflex = -5;
edieresis = -5;
egrave = -5;
f = 2;
fi = 2;
fl = 2;
g = -5;
o = -5;
oacute = -5;
ocircumflex = -5;
odieresis = -5;
oe = -5;
ograve = -5;
oslash = -5;
otilde = -5;
parenright = -9;
period = -10;
q = -6;
question = -3;
t = 2;
x = -3;
};
three = {
comma = -4;
four = 5;
one = -4;
period = -4;
seven = -5;
two = -6;
zero = -3;
};
three.ar = {
comma = -4;
four.ar = 5;
one.ar = -4;
period = -4;
seven.ar = -5;
two.ar = -6;
zero.ar = -3;
};
three.farsi = {
comma = -4;
four.farsi = 5;
one.farsi = -4;
period = -4;
seven.farsi = -5;
two.farsi = -6;
zero.farsi = -3;
};
two = {
comma = -4;
eight = -2;
five = -3;
four = -9;
nine = -2;
period = -4;
seven = -3;
six = -9;
three = -3;
zero = -6;
};
two.ar = {
comma = -4;
eight.ar = -2;
five.ar = -3;
four.ar = -9;
nine.ar = -2;
period = -4;
seven.ar = -3;
six.ar = -9;
three.ar = -3;
zero.ar = -6;
};
two.farsi = {
comma = -4;
eight.farsi = -2;
five.farsi = -3;
four.farsi = -9;
nine.farsi = -2;
period = -4;
seven.farsi = -3;
six.farsi = -9;
three.farsi = -3;
zero.farsi = -6;
};
u = {
comma = -3;
parenright = -16;
period = -3;
question = -11;
v = -3;
x = -5;
};
uacute = {
comma = -3;
parenright = -16;
period = -3;
question = -11;
v = -3;
x = -5;
};
ucircumflex = {
comma = -3;
parenright = -16;
period = -3;
question = -11;
v = -3;
x = -5;
};
udieresis = {
comma = -3;
parenright = -16;
period = -3;
question = -11;
v = -3;
x = -5;
};
ugrave = {
comma = -3;
parenright = -16;
period = -3;
question = -11;
v = -3;
x = -5;
};
uni0622 = {
Decoratedbracketleft = 35;
braceleft = 29;
bracketleft = 29;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 29;
parenright = 6;
rehvabovear = 13;
uni0621 = 10;
uni0622 = 66;
uni0623 = 59;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0632 = 67;
uni0639 = 11;
uni063A = 11;
uni0671 = 67;
uni0686 = 9;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFB7C = 9;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 67;
};
uni0623 = {
Decoratedbracketleft = 24;
braceleft = 24;
bracketleft = 24;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 24;
uni0621 = 10;
uni0622 = 55;
uni0623 = 57;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0632 = 67;
uni0639 = 11;
uni063A = 11;
uni0671 = 58;
uni0686 = 9;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFB7C = 9;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 11;
uniFECF = 11;
uniFEE7 = 67;
};
uni0625 = {
Decoratedbracketleft = 24;
braceleft = 21;
bracketleft = 21;
parenleft = 21;
uni0621 = 6;
uni0625 = 52;
uni062C = 6;
uni062D = 6;
uni062E = 6;
uni0632 = 61;
uni0639 = 6;
uni063A = 6;
uni0686 = 6;
uni0691 = 61;
uni0698 = 61;
uniFB68 = 61;
uniFB7C = 6;
uniFE8B = 67;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 6;
uniFEA3 = 6;
uniFEA7 = 6;
uniFECB = 6;
uniFECF = 6;
uniFEE7 = 61;
};
uni0627 = {
Decoratedbracketleft = 8;
braceleft = -18;
bracketleft = -18;
parenleft = -11;
uni0621 = 10;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0632 = 61;
uni0639 = 10;
uni063A = 10;
uni0665 = -11;
uni0686 = 9;
uni0691 = 61;
uni0698 = 61;
uniFB68 = 61;
uniFB7C = 9;
uniFE8B = 61;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 10;
uniFECF = 10;
uniFEE7 = 61;
};
uni062F = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uni0630 = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uni0631 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 76;
uni0621 = 33;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0661 = 48;
uni0662 = -44;
uni0663 = -32;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 38;
uniFECB = 47;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 72;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0632 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -38;
uni0663 = -26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F3 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 38;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0637 = {
uni0621 = 18;
};
uni0638 = {
uni0621 = 18;
};
uni06440671 = {
lamdotabovear = 33;
lamdotabovear.init = 22;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 17;
lamvabovear = 33;
lamvabovear.init = 22;
rehvabovear = 44;
uni0621 = 18;
uni0622 = 22;
uni0623 = 33;
uni0624 = 7;
uni0625 = 33;
uni0626 = 7;
uni0627 = 44;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 28;
uni0644 = 33;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 22;
uni0686 = 18;
uni0691 = 83;
uni0698 = 61;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 83;
uniFB7C = 18;
uniFE8B = 56;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 28;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 50;
yehvabove_pehar = 50;
yehvabove_yehHamzaabovear = 50;
yehvabove_yehar = 50;
yehvabove_yehvar = 50;
yehvabovear.init = 50;
};
uni06440671.fina = {
lamdotabovear = 33;
lamdotabovear.init = 22;
lamthreedotsabovear = 33;
lamthreedotsabovear.init = 17;
lamvabovear = 33;
lamvabovear.init = 22;
rehvabovear = 44;
uni0621 = 18;
uni0622 = 22;
uni0623 = 33;
uni0624 = 7;
uni0625 = 33;
uni0626 = 7;
uni0627 = 44;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 28;
uni0644 = 33;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 22;
uni0686 = 18;
uni0691 = 83;
uni0698 = 61;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 83;
uniFB7C = 18;
uniFE8B = 56;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 28;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 50;
yehvabove_pehar = 50;
yehvabove_yehHamzaabovear = 50;
yehvabove_yehar = 50;
yehvabove_yehvar = 50;
yehvabovear.init = 50;
};
uni0660 = {
uni0666 = -91;
uni0669 = -17;
};
uni0661 = {
uni0667 = 17;
uni0668 = 8;
uni0691 = 11;
uni0698 = 11;
uni06F7 = 11;
};
uni0662 = {
uni0660 = -93;
uni0665 = -33;
uni0666 = 17;
uni0667 = 22;
uni0668 = -29;
uni0669 = -28;
uni06F9 = -3;
};
uni0663 = {
uni0660 = -56;
uni0665 = -17;
uni0666 = -9;
uni0667 = 19;
uni0668 = -39;
uni0669 = -11;
};
uni0664 = {
uni0666 = -22;
uni0668 = 11;
};
uni0665 = {
uni0663 = 9;
uni0666 = -22;
uni0667 = 8;
uni0668 = 5;
};
uni0666 = {
uni0666 = -28;
uni0667 = 13;
uni0668 = 8;
uni0691 = 38;
uni0695 = -24;
uni0698 = 9;
uniFB8B = 0;
uniFB8D = 8;
};
uni0667 = {
uni0632 = 8;
uni0661 = 17;
uni0662 = 13;
uni0663 = 25;
uni0664 = 8;
uni0665 = 8;
uni0666 = 11;
uni0667 = 53;
uni0668 = 3;
uni0669 = 14;
uni0691 = 51;
uni0694 = 8;
uni0695 = 8;
uni0698 = 21;
uni06F3 = 2;
};
uni0668 = {
uni0631 = 8;
uni0632 = 8;
uni0661 = 8;
uni0662 = 19;
uni0663 = 17;
uni0664 = 8;
uni0665 = 5;
uni0666 = -29;
uni0667 = 3;
uni0668 = 51;
uni0669 = -19;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06F7 = -4;
};
uni0669 = {
uni0666 = -39;
uni0667 = 8;
uni0668 = 17;
};
uni0671 = {
Decoratedbracketleft = 38;
braceleft = 29;
bracketleft = 29;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 89;
lamthreedotsabovear.init = 89;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 29;
parenright = 8;
uni0621 = 10;
uni0622 = 68;
uni0623 = 49;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0632 = 67;
uni0639 = 9;
uni063A = 9;
uni0671 = 68;
uni0686 = 9;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFB7C = 9;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 67;
};
uni0688 = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uni0691 = {
Decoratedbracketleft = 119;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0667 = 26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 11;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 24;
uniFB7C = 0;
uniFB8D = 38;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 21;
uniFE91 = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0694 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0695 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0666 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0698 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0661 = 11;
uni0662 = -12;
uni0667 = 8;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 25;
uniFB7C = 0;
uniFB8B = 38;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 7;
uniFE91 = 0;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni06F0 = {
uni06F9 = -17;
};
uni06F1 = {
uni0691 = 11;
uni0698 = 8;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -14;
uni0666 = 13;
uni0667 = 2;
uni06F0 = -34;
uni06F5 = -28;
uni06F7 = 9;
uni06F8 = -29;
uni06F9 = -28;
uniF806 = -33;
};
uni06F3 = {
uni0632 = 8;
uni0664 = -2;
uni0698 = 13;
uni06F0 = -21;
uni06F5 = -6;
uni06F7 = 22;
uni06F8 = -22;
uniF806 = -56;
};
uni06F4 = {
uni0632 = 8;
uni0691 = 13;
uni0698 = 13;
uni06F6 = -9;
uni06F8 = -11;
};
uni06F5 = {
uni06F5 = 5;
uni06F7 = 8;
uni06F8 = 14;
};
uni06F6 = {
uni0668 = -3;
uni06F8 = -2;
uniF806 = -22;
};
uni06F7 = {
uni0631 = 8;
uni0632 = 8;
uni0661 = 3;
uni0691 = 13;
uni0694 = 8;
uni0695 = 8;
uni0698 = 21;
uni06F1 = 17;
uni06F2 = 13;
uni06F3 = 25;
uni06F4 = 22;
uni06F5 = 8;
uni06F6 = 11;
uni06F7 = 53;
uni06F8 = 3;
uni06F9 = 14;
uniF805 = 7;
};
uni06F8 = {
uni0631 = 8;
uni0632 = 8;
uni0667 = -3;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 14;
uni06F6 = 39;
uni06F7 = 3;
uni06F8 = 51;
uni06F9 = -19;
};
uni06F9 = {
uni06F6 = 6;
uni06F7 = 8;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni0661 = -17;
uni06F0 = -56;
uni06F2 = -22;
uni06F3 = -11;
uni06F4 = 1;
uni06F5 = -44;
uni06F6 = -22;
uni06F7 = 3;
uni06F8 = -56;
uni06F9 = -33;
};
uniF806 = {
uni06F6 = 17;
uni06F9 = -111;
};
uniFB51 = {
Decoratedbracketleft = 29;
braceleft = 29;
bracketleft = 29;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 89;
lamthreedotsabovear.init = 89;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 29;
uni0622 = 70;
uni0623 = 71;
uni0632 = 67;
uni0671 = 67;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFEE7 = 67;
};
uniFB89 = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uniFB8B = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
space = 32;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -12;
uni0663 = -12;
uni0666 = -12;
uni0667 = 8;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 78;
uni0695 = 78;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 25;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 1111;
uniFE8B = 7;
uniFE91 = 0;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFB8D = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0667 = 26;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 11;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 24;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 21;
uniFE91 = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFE82 = {
Decoratedbracketleft = 29;
braceleft = 29;
bracketleft = 29;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 29;
uni0622 = 66;
uni0623 = 39;
uni0632 = 67;
uni0671 = 67;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFEE7 = 67;
};
uniFE84 = {
Decoratedbracketleft = 24;
braceleft = 24;
bracketleft = 24;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 24;
uni0622 = 55;
uni0623 = 49;
uni0632 = 67;
uni0671 = 59;
uni0691 = 67;
uni0698 = 67;
uniFB68 = 67;
uniFE8B = 67;
uniFE97 = 67;
uniFE9B = 67;
uniFEE7 = 67;
};
uniFE88 = {
Decoratedbracketleft = 24;
braceleft = 12;
bracketleft = 12;
parenleft = 14;
uni0625 = 45;
uni0632 = 61;
uni0691 = 61;
uni0698 = 61;
uniFB68 = 61;
uniFE8B = 67;
uniFE97 = 61;
uniFE9B = 61;
uniFEE7 = 61;
};
uniFE8E = {
Decoratedbracketleft = 8;
braceleft = -18;
bracketleft = -18;
parenleft = -11;
uni0632 = 61;
uni0691 = 61;
uni0698 = 61;
uniFB68 = 61;
uniFE8B = 61;
uniFE97 = 61;
uniFE9B = 61;
uniFEE7 = 61;
};
uniFE91 = {
uniFB51 = 0;
uniFE82 = 0;
uniFEAE = 2;
uniFEB0 = 2;
};
uniFEAA = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uniFEAC = {
uni0621 = 18;
uni0622 = 0;
uni0623 = 0;
uni0624 = 7;
uni0625 = 0;
uni0626 = 7;
uni0627 = 0;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0631 = 0;
uni0632 = 0;
uni0639 = 18;
uni063A = 18;
uni0642 = 7;
uni0644 = 0;
uni0646 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 0;
uni0686 = 18;
uni0691 = 0;
uni0698 = 0;
uni06CC = 7;
uni06D2 = 27;
uni06D3 = 27;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabovear = 7;
};
uniFEAE = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0623 = 0;
uni0624 = 81;
uni0625 = 136;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFEB0 = {
Decoratedbracketleft = 119;
Decoratedbracketright = -26;
braceleft = 123;
braceright = 18;
bracketleft = 124;
bracketright = 47;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 128;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 81;
uni0625 = 137;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 58;
uni0644 = 58;
uni0646 = 58;
uni0648 = 81;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -38;
uni0663 = -26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F2 = -21;
uni06F3 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFEC2 = {
uni0621 = 18;
};
uniFEC6 = {
uni0621 = 18;
};
uniFEF5 = {
lamdotabovear = 28;
lamdotabovear.init = 11;
lamthreedotsabovear = 28;
lamthreedotsabovear.init = 11;
lamvabovear = 28;
lamvabovear.init = 11;
rehvabovear = 33;
uni0621 = 18;
uni0622 = 17;
uni0623 = 22;
uni0624 = 7;
uni0625 = 17;
uni0626 = 7;
uni0627 = 28;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 22;
uni0644 = 28;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 17;
uni0686 = 18;
uni0691 = 72;
uni0698 = 50;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 72;
uniFB7C = 18;
uniFE8B = 56;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 22;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 39;
yehvabove_pehar = 39;
yehvabove_yehHamzaabovear = 39;
yehvabove_yehar = 39;
yehvabove_yehvar = 39;
yehvabovear.init = 39;
};
uniFEF6 = {
lamdotabovear = 28;
lamdotabovear.init = 11;
lamthreedotsabovear = 28;
lamthreedotsabovear.init = 11;
lamvabovear = 28;
lamvabovear.init = 11;
rehvabovear = 33;
uni0621 = 18;
uni0622 = 17;
uni0623 = 22;
uni0624 = 7;
uni0625 = 17;
uni0626 = 7;
uni0627 = 28;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 22;
uni0644 = 28;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 17;
uni0686 = 18;
uni0691 = 72;
uni0698 = 50;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 72;
uniFB7C = 18;
uniFE8B = 56;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 22;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 39;
yehvabove_pehar = 39;
yehvabove_yehHamzaabovear = 39;
yehvabove_yehar = 39;
yehvabove_yehvar = 39;
yehvabovear.init = 39;
};
uniFEF7 = {
lamdotabovear = 28;
lamthreedotsabovear = 33;
lamvabovear = 28;
rehvabovear = 17;
uni0621 = 18;
uni0622 = 17;
uni0623 = 33;
uni0624 = 7;
uni0626 = 7;
uni0627 = 22;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 11;
uni0644 = 28;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 22;
uni0686 = 18;
uni0691 = 61;
uni0698 = 50;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 61;
uniFB7C = 18;
uniFE8B = 44;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 11;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
uniFEF8 = {
lamdotabovear = 28;
lamthreedotsabovear = 33;
lamvabovear = 28;
rehvabovear = 17;
uni0621 = 18;
uni0622 = 17;
uni0623 = 33;
uni0624 = 7;
uni0626 = 7;
uni0627 = 22;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0643 = 11;
uni0644 = 28;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0671 = 22;
uni0686 = 18;
uni0691 = 61;
uni0698 = 50;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB68 = 61;
uniFB7C = 18;
uniFE8B = 44;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
uniFEDF = 11;
wawtwodotsabovear = 7;
wawvabovear = 7;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
uniFEF9 = {
uni0621 = 18;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0644 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0686 = 18;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
uniFEFA = {
uni0621 = 18;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 17;
uni0639 = 18;
uni063A = 18;
uni0644 = 0;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0686 = 18;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
uniFEFB = {
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 18;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0644 = 22;
uni0648 = 7;
uni0649 = 7;
uni064A = 7;
uni0686 = 18;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
uniFEFC = {
lamdotabovear = 22;
lamthreedotsabovear = 22;
lamvabovear = 22;
uni0621 = 18;
uni0624 = 7;
uni0626 = 7;
uni062C = 18;
uni062D = 18;
uni062E = 18;
uni0639 = 18;
uni063A = 18;
uni0644 = 22;
uni0649 = 7;
uni064A = 7;
uni0686 = 18;
uni06CC = 7;
uni06D2 = 18;
uni06D3 = 18;
uniEECD = 18;
uniEECF = 18;
uniFB7C = 18;
uniFE9F = 18;
uniFEA3 = 18;
uniFEA7 = 18;
uniFECB = 18;
uniFECF = 18;
wawtwodotsabovear = 7;
wawvabovear = 7;
};
v = {
a = -2;
aacute = -2;
acircumflex = -2;
adieresis = -2;
ae = -2;
agrave = -2;
aring = -2;
atilde = -2;
c = -3;
ccedilla = -3;
comma = -12;
d = -2;
e = -2;
eacute = -2;
ecircumflex = -2;
edieresis = -2;
egrave = -2;
g = -2;
hyphen = -3;
o = -2;
oacute = -2;
ocircumflex = -2;
odieresis = -2;
oe = -2;
ograve = -2;
oslash = -2;
otilde = -2;
parenright = -16;
period = -12;
q = -2;
question = -3;
quotedblright = 4;
quoteright = 4;
t = 2;
v = 3;
w = 2;
y = 3;
yacute = 3;
ydieresis = 3;
};
w = {
comma = -6;
parenright = -16;
period = -6;
question = -3;
quotedblright = 6;
quoteright = 6;
t = 2;
v = 2;
y = 2;
yacute = 2;
ydieresis = 2;
};
x = {
a = -7;
aacute = -7;
acircumflex = -7;
adieresis = -7;
ae = -7;
agrave = -7;
aring = -7;
atilde = -7;
c = -7;
ccedilla = -7;
comma = 4;
d = -7;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -7;
hyphen = -7;
o = -8;
oacute = -8;
ocircumflex = -8;
odieresis = -8;
oe = -8;
ograve = -8;
oslash = -8;
otilde = -8;
parenright = -12;
period = 4;
q = -7;
question = -7;
t = -2;
u = -4;
uacute = -4;
ucircumflex = -4;
udieresis = -4;
ugrave = -4;
v = -4;
w = -2;
y = -4;
yacute = -4;
ydieresis = -4;
};
y = {
comma = -12;
d = -2;
g = -2;
parenright = -16;
period = -12;
q = -2;
question = -3;
t = 2;
v = 3;
w = 2;
};
yacute = {
comma = -12;
d = -2;
g = -2;
parenright = -16;
period = -12;
q = -2;
question = -3;
t = 2;
v = 3;
w = 2;
};
ydieresis = {
comma = -12;
d = -2;
g = -2;
parenright = -16;
period = -12;
q = -2;
question = -3;
t = 2;
v = 3;
w = 2;
};
yen = {
five = 4;
seven = 7;
six = -3;
two = -4;
};
z = {
comma = 2;
d = -3;
g = -3;
parenright = -12;
period = 2;
q = -2;
question = -6;
};
zcaron = {
comma = 2;
d = -3;
g = -3;
parenright = -12;
period = 2;
q = -2;
question = -6;
};
zero = {
comma = -13;
five = -2;
one = -4;
period = -13;
seven = -11;
six = -3;
three = -4;
two = -9;
};
zero.ar = {
comma = -13;
five.ar = -2;
one.ar = -4;
period = -13;
seven.ar = -11;
six.ar = -3;
three.ar = -4;
two.ar = -9;
};
zero.farsi = {
comma = -13;
five.farsi = -2;
one.farsi = -4;
period = -13;
seven.farsi = -11;
six.farsi = -3;
three.farsi = -4;
two.farsi = -9;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
