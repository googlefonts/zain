{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
quotedbl.arabic,
numbersign.arabic,
dollar.arabic,
percent.arabic,
ampersand.arabic,
quotesingle.arabic,
parenleft.arabic,
parenright.arabic,
asterisk.arabic,
plus.arabic,
hyphen.arabic,
period.arabic,
slash.arabic,
zero.arabic,
one.arabic,
two.arabic,
three.arabic,
four.arabic,
five.arabic,
six.arabic,
seven.arabic,
eight.arabic,
nine.arabic,
colon.arabic,
less.arabic,
equal.arabic,
greater.arabic,
at.arabic,
bracketleft.arabic,
backslash.arabic,
bracketright.arabic,
asciicircum.arabic,
braceleft.arabic,
bar.arabic,
braceright.arabic,
asciitilde.arabic,
cent.arabic,
sterling.arabic,
Euro.arabic,
yen.arabic,
brokenbar.arabic,
section.arabic,
copyright.arabic,
guillemotleft.arabic,
uni00AD.arabic,
registered.arabic,
degree.arabic,
plusminus.arabic,
twosuperior.arabic,
threesuperior.arabic,
paragraph.arabic,
onesuperior.arabic,
guillemotright.arabic,
onequarter.arabic,
onehalf.arabic,
threequarters.arabic,
multiply.arabic,
divide.arabic,
endash.arabic,
emdash.arabic,
quoteleft.arabic,
quoteright.arabic,
quotesinglbase.arabic,
quotedblleft.arabic,
quotedblright.arabic,
quotedblbase.arabic,
dagger.arabic,
daggerdbl.arabic,
bullet.arabic,
ellipsis.arabic,
perthousand.arabic,
guilsinglleft.arabic,
guilsinglright.arabic,
fraction.arabic,
uni20AC.arabic,
trademark.arabic,
minus.arabic,
notequal.arabic,
lessequal.arabic,
greaterequal.arabic,
zero.tab.arabic,
one.tab.arabic,
two.tab.arabic,
three.tab.arabic,
four.tab.arabic,
five.tab.arabic,
six.tab.arabic,
seven.tab.arabic,
eight.tab.arabic,
nine.tab.arabic,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni06F4,
uni06F5,
uni06F6,
uni0660,
uni06F8,
uni06F9,
uni06F7,
uni0661,
uni0662,
uni0663,
uni0664,
uni0665,
uni0666,
uni0667,
uni0668,
uni0669,
uni06F0,
uni06F1,
uni06F2,
uni06F3
);
}
);
date = "2025-07-04 16:27:34 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_18 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_18;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script latn;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
script arab;
language dflt;
lookup SUB_14 {
	sub zero.tab.arabic by zero.ar;
	sub one.tab.arabic by one.ar;
	sub two.tab.arabic by two.ar;
	sub three.tab.arabic by three.ar;
	sub four.tab.arabic by four.ar;
	sub five.tab.arabic by five.ar;
	sub six.tab.arabic by six.ar;
	sub seven.tab.arabic by seven.ar;
	sub eight.tab.arabic by eight.ar;
	sub nine.tab.arabic by nine.ar;
} SUB_14;
lookup SUB_15 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_15;
";
tag = pnum;
},
{
code = "script latn;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
script arab;
language dflt;
lookup SUB_12 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni0661 by uni0661.tab;
	sub uni0662 by uni0662.tab;
	sub uni0663 by uni0663.tab;
	sub uni0664 by uni0664.tab;
	sub uni0665 by uni0665.tab;
	sub uni0666 by uni0666.tab;
	sub uni0667 by uni0667.tab;
	sub uni0668 by uni0668.tab;
	sub uni0669 by uni0669.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni06F3 by uni06F3.tab;
} SUB_12;
lookup SUB_13 {
	sub zero.ar by zero.tab.arabic;
	sub one.ar by one.tab.arabic;
	sub two.ar by two.tab.arabic;
	sub three.ar by three.tab.arabic;
	sub four.ar by four.tab.arabic;
	sub five.ar by five.tab.arabic;
	sub six.ar by six.tab.arabic;
	sub seven.ar by seven.tab.arabic;
	sub eight.ar by eight.tab.arabic;
	sub nine.ar by nine.tab.arabic;
} SUB_13;
";
tag = lnum;
},
{
code = "script latn;
language dflt;
lookup SUB_7;
script arab;
language dflt;
lookup SUB_12;
lookup SUB_13;
";
tag = tnum;
},
{
code = "script arab;
language dflt;
lookup SUB_8 {
	sub quotedbl by quotedbl.arabic;
	sub numbersign by numbersign.arabic;
	sub dollar by dollar.arabic;
	sub percent by percent.arabic;
	sub ampersand by ampersand.arabic;
	sub quotesingle by quotesingle.arabic;
	sub parenleft by parenleft.arabic;
	sub parenright by parenright.arabic;
	sub asterisk by asterisk.arabic;
	sub plus by plus.arabic;
	sub hyphen by hyphen.arabic;
	sub period by period.arabic;
	sub slash by slash.arabic;
	sub zero by zero.arabic;
	sub one by one.arabic;
	sub two by two.arabic;
	sub three by three.arabic;
	sub four by four.arabic;
	sub five by five.arabic;
	sub six by six.arabic;
	sub seven by seven.arabic;
	sub eight by eight.arabic;
	sub nine by nine.arabic;
	sub colon by colon.arabic;
	sub less by less.arabic;
	sub equal by equal.arabic;
	sub greater by greater.arabic;
	sub at by at.arabic;
	sub bracketleft by bracketleft.arabic;
	sub backslash by backslash.arabic;
	sub bracketright by bracketright.arabic;
	sub asciicircum by asciicircum.arabic;
	sub braceleft by braceleft.arabic;
	sub bar by bar.arabic;
	sub braceright by braceright.arabic;
	sub asciitilde by asciitilde.arabic;
	sub cent by cent.arabic;
	sub sterling by sterling.arabic;
	sub yen by yen.arabic;
	sub brokenbar by brokenbar.arabic;
	sub section by section.arabic;
	sub copyright by copyright.arabic;
	sub guillemotleft by guillemotleft.arabic;
	sub uni00AD by uni00AD.arabic;
	sub registered by registered.arabic;
	sub degree by degree.arabic;
	sub plusminus by plusminus.arabic;
	sub twosuperior by twosuperior.arabic;
	sub threesuperior by threesuperior.arabic;
	sub paragraph by paragraph.arabic;
	sub onesuperior by onesuperior.arabic;
	sub guillemotright by guillemotright.arabic;
	sub onequarter by onequarter.arabic;
	sub onehalf by onehalf.arabic;
	sub threequarters by threequarters.arabic;
	sub multiply by multiply.arabic;
	sub divide by divide.arabic;
	sub endash by endash.arabic;
	sub emdash by emdash.arabic;
	sub quoteleft by quoteleft.arabic;
	sub quoteright by quoteright.arabic;
	sub quotesinglbase by quotesinglbase.arabic;
	sub quotedblleft by quotedblleft.arabic;
	sub quotedblright by quotedblright.arabic;
	sub quotedblbase by quotedblbase.arabic;
	sub dagger by dagger.arabic;
	sub daggerdbl by daggerdbl.arabic;
	sub bullet by bullet.arabic;
	sub ellipsis by ellipsis.arabic;
	sub perthousand by perthousand.arabic;
	sub guilsinglleft by guilsinglleft.arabic;
	sub guilsinglright by guilsinglright.arabic;
	sub fraction by fraction.arabic;
	sub uni20AC by uni20AC.arabic;
	sub trademark by trademark.arabic;
	sub minus by minus.arabic;
	sub notequal by notequal.arabic;
	sub lessequal by lessequal.arabic;
	sub greaterequal by greaterequal.arabic;
	sub zero.tab by zero.tab.arabic;
	sub one.tab by one.tab.arabic;
	sub two.tab by two.tab.arabic;
	sub three.tab by three.tab.arabic;
	sub four.tab by four.tab.arabic;
	sub five.tab by five.tab.arabic;
	sub six.tab by six.tab.arabic;
	sub seven.tab by seven.tab.arabic;
	sub eight.tab by eight.tab.arabic;
	sub nine.tab by nine.tab.arabic;
} SUB_8;
lookup SUB_19 {
	sub exclam by exclam.ar;
} SUB_19;
language URD;
lookup SUB_19;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_11 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_11;
script arab;
language dflt;
lookup SUB_11;
language URD;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_11;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_16 {
	sub f i by fi;
	sub f l by fl;
} SUB_16;
script arab;
language dflt;
lookup SUB_16;
language URD;
lookup SUB_16;
script latn;
language dflt;
lookup SUB_16;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = ccmp;
},
{
code = "script DFLT;
language dflt;
lookup SUB_20 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_20;
script arab;
language dflt;
lookup SUB_20;
language URD;
lookup SUB_20;
script latn;
language dflt;
lookup SUB_20;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_21 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_21;
script arab;
language dflt;
lookup SUB_21;
language URD;
lookup SUB_21;
script latn;
language dflt;
lookup SUB_21;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_22 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_22;
script arab;
language dflt;
lookup SUB_22;
language URD;
lookup SUB_22;
script latn;
language dflt;
lookup SUB_22;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_23 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_23;
lookup SUB_24 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_24;
lookup SUB_25 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_25;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_5;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_5;
lookup POS_6;
lookup POS_7;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_8 {
	sub quotedbl by quotedbl.arabic;
	sub numbersign by numbersign.arabic;
	sub dollar by dollar.arabic;
	sub percent by percent.arabic;
	sub ampersand by ampersand.arabic;
	sub quotesingle by quotesingle.arabic;
	sub parenleft by parenleft.arabic;
	sub parenright by parenright.arabic;
	sub asterisk by asterisk.arabic;
	sub plus by plus.arabic;
	sub hyphen by hyphen.arabic;
	sub period by period.arabic;
	sub slash by slash.arabic;
	sub zero by zero.arabic;
	sub one by one.arabic;
	sub two by two.arabic;
	sub three by three.arabic;
	sub four by four.arabic;
	sub five by five.arabic;
	sub six by six.arabic;
	sub seven by seven.arabic;
	sub eight by eight.arabic;
	sub nine by nine.arabic;
	sub colon by colon.arabic;
	sub less by less.arabic;
	sub equal by equal.arabic;
	sub greater by greater.arabic;
	sub at by at.arabic;
	sub bracketleft by bracketleft.arabic;
	sub backslash by backslash.arabic;
	sub bracketright by bracketright.arabic;
	sub asciicircum by asciicircum.arabic;
	sub braceleft by braceleft.arabic;
	sub bar by bar.arabic;
	sub braceright by braceright.arabic;
	sub asciitilde by asciitilde.arabic;
	sub cent by cent.arabic;
	sub sterling by sterling.arabic;
	sub yen by yen.arabic;
	sub brokenbar by brokenbar.arabic;
	sub section by section.arabic;
	sub copyright by copyright.arabic;
	sub guillemotleft by guillemotleft.arabic;
	sub uni00AD by uni00AD.arabic;
	sub registered by registered.arabic;
	sub degree by degree.arabic;
	sub plusminus by plusminus.arabic;
	sub twosuperior by twosuperior.arabic;
	sub threesuperior by threesuperior.arabic;
	sub paragraph by paragraph.arabic;
	sub onesuperior by onesuperior.arabic;
	sub guillemotright by guillemotright.arabic;
	sub onequarter by onequarter.arabic;
	sub onehalf by onehalf.arabic;
	sub threequarters by threequarters.arabic;
	sub multiply by multiply.arabic;
	sub divide by divide.arabic;
	sub endash by endash.arabic;
	sub emdash by emdash.arabic;
	sub quoteleft by quoteleft.arabic;
	sub quoteright by quoteright.arabic;
	sub quotesinglbase by quotesinglbase.arabic;
	sub quotedblleft by quotedblleft.arabic;
	sub quotedblright by quotedblright.arabic;
	sub quotedblbase by quotedblbase.arabic;
	sub dagger by dagger.arabic;
	sub daggerdbl by daggerdbl.arabic;
	sub bullet by bullet.arabic;
	sub ellipsis by ellipsis.arabic;
	sub perthousand by perthousand.arabic;
	sub guilsinglleft by guilsinglleft.arabic;
	sub guilsinglright by guilsinglright.arabic;
	sub fraction by fraction.arabic;
	sub uni20AC by uni20AC.arabic;
	sub trademark by trademark.arabic;
	sub minus by minus.arabic;
	sub notequal by notequal.arabic;
	sub lessequal by lessequal.arabic;
	sub greaterequal by greaterequal.arabic;
	sub zero.tab by zero.tab.arabic;
	sub one.tab by one.tab.arabic;
	sub two.tab by two.tab.arabic;
	sub three.tab by three.tab.arabic;
	sub four.tab by four.tab.arabic;
	sub five.tab by five.tab.arabic;
	sub six.tab by six.tab.arabic;
	sub seven.tab by seven.tab.arabic;
	sub eight.tab by eight.tab.arabic;
	sub nine.tab by nine.tab.arabic;
} POS_8;
lookup POS_9 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
} POS_9;
script arab;
language dflt;
lookup POS_8;
lookup POS_9;
script latn;
language dflt;
lookup POS_8;
lookup POS_9;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    71,\012    71,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    76,\012    76,\012    68,\012    68,\012    556,\012    0,\012    556,\012    368,\012    0,\012    \"-171\",\012    556,\012    \"-10\",\012    556,\012    377,\012    \"-9\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    563,\012    233,\012    563,\012    233\012)";
}
);
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
pos = 10;
}
);
name = Italic;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,-72,qs),
(283,-72,o),
(301,-48,o),
(298,-29,qs),
(295,-10,o),
(267,14,o),
(249,14,qs),
(209,14,o),
(214,-29,q),
(225,-72,o)
);
},
{
closed = 1;
nodes = (
(262,75,ls),
(258,97,o),
(275,112,qs),
(331,160,o),
(364,221,o),
(355,262,qs),
(346,311,o),
(263,365,o),
(197,365,qs),
(149,365,o),
(108,347,qs),
(78,334,o),
(83,312,q),
(86,304,o),
(90,294,qs),
(99,277,l),
(158,308,o),
(205,307,qs),
(277,306,o),
(287,247,qs),
(294,209,o),
(248,165,qs),
(203,123,o),
(210,88,qs),
(213,67,l),
(264,67,l)
);
},
{
closed = 1;
nodes = (
(541,-254,l),
(400,545,l),
(-61,545,l),
(80,-254,l)
);
},
{
closed = 1;
nodes = (
(485,-206,l),
(120,-206,l),
(-5,497,l),
(361,497,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
19 1 4 2 1 76 9 1 4 2 0 2 4 0 128 0 5 10 1 8 3 5 8 103 0 3 0 2 4 3 2 105 0 0 0 1 7 0 1 105 0 7 6 6 7 87 0 7 7 6 95 0 6 7 6 79 40 40 10 10 40 43 40 43 42 41 39 38 37 36 10 35 10 35 39 39 36 33 11 6 26 
CALL[ ]	/* CallFunction */";
};
width = 531;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 181;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,154,qs),
(95,547,ls),
(97,556,o),
(105,556,qs),
(111,556,ls),
(172,556,o),
(158,485,qs),
(94,154,ls),
(93,146,o),
(85,146,qs),
(39,146,ls),
(31,146,o)
);
},
{
closed = 1;
nodes = (
(-3,34,qs),
(-3,57,o),
(30,91,o),
(53,91,qs),
(94,91,o),
(94,49,qs),
(94,24,o),
(62,-10,o),
(40,-10,qs),
(-3,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
4 1 0 1 3 1 0 3 128 0 1 1 39 77 0 3 3 2 97 5 1 2 2 46 2 78 13 12 2 0 18 16 12 21 13 21 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 153;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,556,o),
(99,556,qs),
(111,556,ls),
(143,556,o),
(161,525,o),
(152,488,qs),
(123,379,l),
(119,371,o),
(114,371,qs),
(80,371,ls),
(74,371,o),
(74,379,qs),
(89,547,l)
);
},
{
closed = 1;
nodes = (
(209,556,o),
(217,556,qs),
(230,556,ls),
(262,556,o),
(279,525,o),
(270,488,qs),
(241,379,ls),
(239,371,o),
(233,371,qs),
(200,371,ls),
(192,371,o),
(192,379,qs),
(207,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
13 12 0 3 0 1 1 76 2 1 0 0 1 97 3 1 1 1 39 0 78 53 35 53 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,151,o),
(13,159,qs),
(30,198,ls),
(34,207,o),
(43,207,qs),
(109,207,l),
(168,347,l),
(103,347,ls),
(92,347,o),
(97,356,q),
(113,394,ls),
(117,403,o),
(123,403,qs),
(190,403,l),
(251,547,ls),
(254,556,o),
(262,556,qs),
(278,556,ls),
(324,556,o),
(301,502,qs),
(259,403,l),
(400,403,l),
(461,547,l),
(463,556,o),
(471,556,qs),
(487,556,ls),
(534,556,o),
(511,502,qs),
(468,403,l),
(534,403,ls),
(544,403,o),
(540,394,qs),
(523,356,ls),
(520,347,o),
(513,347,qs),
(447,347,l),
(388,207,l),
(453,207,ls),
(462,207,o),
(458,198,qs),
(442,159,l),
(437,151,o),
(431,151,qs),
(364,151,l),
(304,9,ls),
(301,0,o),
(296,0,qs),
(239,0,ls),
(233,0,o),
(236,9,qs),
(294,151,l),
(155,151,l),
(96,9,ls),
(93,0,o),
(86,0,qs),
(30,0,ls),
(22,0,o),
(26,9,qs),
(84,151,l),
(19,151,ls)
);
},
{
closed = 1;
nodes = (
(377,347,l),
(238,347,l),
(178,207,l),
(317,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
10 8 2 6 14 11 2 5 4 6 5 104 17 15 12 3 4 16 13 3 3 1 0 4 1 103 9 1 7 7 39 77 2 1 0 0 40 0 78 60 60 0 0 60 63 60 63 62 61 0 59 0 58 55 53 52 50 46 45 43 40 18 50 35 33 36 19 34 18 50 18 9 31 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,284,o),
(73,349,o),
(73,399,qs),
(73,468,o),
(125,513,qs),
(178,559,o),
(263,566,q),
(272,612,ls),
(274,621,o),
(280,621,qs),
(311,621,ls),
(319,621,o),
(318,612,qs),
(309,566,l),
(355,562,o),
(410,538,qs),
(455,518,o),
(436,477,qs),
(429,461,ls),
(424,451,o),
(418,451,qs),
(414,451,o),
(407,456,qs),
(356,492,o),
(297,498,q),
(264,313,l),
(398,261,o),
(398,180,qs),
(398,111,o),
(352,60,qs),
(300,2,o),
(209,-8,q),
(200,-56,ls),
(198,-64,o),
(190,-64,qs),
(160,-64,ls),
(152,-64,o),
(154,-56,qs),
(162,-8,l),
(94,-4,o),
(6,67,o),
(6,119,qs),
(6,154,o),
(24,154,qs),
(30,154,o),
(35,146,qs),
(84,63,o),
(174,59,q),
(209,254,l)
);
},
{
closed = 1;
nodes = (
(267,68,o),
(324,124,o),
(324,163,qs),
(324,210,o),
(252,241,q),
(220,61,l)
);
},
{
closed = 1;
nodes = (
(203,495,o),
(145,447,o),
(145,411,qs),
(145,361,o),
(222,328,q),
(252,499,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
60 34 23 3 4 5 48 22 2 1 4 2 76 54 1 0 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 1 133 0 3 2 2 3 113 0 0 0 2 97 0 2 2 49 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 1 133 0 3 2 2 3 113 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 1 133 0 3 2 2 3 113 0 0 0 2 97 0 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 1 133 0 3 2 3 134 0 0 0 2 97 0 2 2 49 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
40 44 50 19 34 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,314,qs),
(280,358,o),
(280,434,qs),
(280,513,o),
(222,513,qs),
(181,513,o),
(153,474,qs),
(121,428,o),
(121,355,qs),
(121,276,o),
(180,276,qs),
(221,276,o)
);
},
{
closed = 1;
nodes = (
(156,9,qs),
(537,547,ls),
(544,556,o),
(551,556,qs),
(563,556,ls),
(586,556,o),
(593,522,o),
(575,496,qs),
(229,9,ls),
(223,0,o),
(215,0,qs),
(157,0,ls),
(149,0,o)
);
},
{
closed = 1;
nodes = (
(63,295,o),
(63,355,qs),
(63,438,o),
(105,497,qs),
(155,567,o),
(232,567,qs),
(281,567,o),
(339,496,o),
(339,436,qs),
(339,350,o),
(299,291,qs),
(253,223,o),
(173,223,qs),
(123,223,o)
);
},
{
closed = 1;
nodes = (
(613,83,qs),
(645,127,o),
(645,203,qs),
(645,281,o),
(586,281,qs),
(546,281,o),
(518,242,qs),
(486,197,o),
(486,123,qs),
(486,45,o),
(545,45,qs),
(586,45,o)
);
},
{
closed = 1;
nodes = (
(427,63,o),
(427,123,qs),
(427,206,o),
(470,266,qs),
(519,335,o),
(596,335,qs),
(646,335,o),
(704,264,o),
(704,205,qs),
(704,118,o),
(664,60,qs),
(617,-9,o),
(538,-9,qs),
(488,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 1 1 3 97 5 1 3 3 39 77 13 1 6 6 2 97 14 8 11 3 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 39 77 0 1 1 5 97 0 5 5 39 77 13 1 6 6 2 97 14 8 11 3 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 39 77 0 1 1 5 97 0 5 5 39 77 11 1 2 2 40 77 13 1 6 6 8 97 14 1 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 1 9 5 1 105 0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 39 77 11 1 2 2 40 77 13 1 6 6 8 97 14 1 8 8 49 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
52 51 40 39 26 25 14 12 1 0 59 57 51 64 52 64 46 44 39 50 40 50 33 31 25 38 26 38 21 18 12 24 14 24 7 5 0 11 1 11 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,290,o),
(445,290,qs),
(494,290,ls),
(506,290,o),
(498,281,qs),
(376,130,l),
(452,10,ls),
(454,7,o),
(450,0,o),
(446,0,qs),
(398,0,ls),
(372,0,o),
(359,22,qs),
(325,73,l),
(248,-7,o),
(158,-7,qs),
(102,-7,o),
(65,25,qs),
(23,62,o),
(23,125,qs),
(23,187,o),
(63,231,qs),
(94,266,o),
(172,307,q),
(129,369,o),
(129,418,qs),
(129,480,o),
(170,520,qs),
(218,567,o),
(299,567,qs),
(355,567,o),
(425,509,o),
(425,462,qs),
(425,365,o),
(270,288,q),
(344,177,l),
(425,279,ls)
);
},
{
closed = 1;
nodes = (
(352,454,qs),
(352,506,o),
(291,506,qs),
(252,506,o),
(201,461,o),
(201,426,qs),
(201,386,o),
(242,334,q),
(352,386,o)
);
},
{
closed = 1;
nodes = (
(145,230,o),
(96,171,o),
(96,130,qs),
(96,57,o),
(174,57,qs),
(230,57,o),
(295,122,q),
(204,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
12 1 3 4 53 30 22 1 4 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 49 77 0 5 5 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 38 54 35 44 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,556,o),
(99,556,qs),
(112,556,ls),
(143,556,o),
(161,525,o),
(152,488,qs),
(123,379,ls),
(121,371,o),
(114,371,qs),
(80,371,ls),
(74,371,o),
(74,379,qs),
(89,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
12 0 2 0 1 1 76 0 0 0 1 97 0 1 1 39 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 133;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,-42,qs),
(57,46,o),
(57,169,qs),
(57,315,o),
(123,453,qs),
(207,629,o),
(353,693,qs),
(364,698,o),
(362,687,qs),
(358,665,ls),
(352,632,o),
(325,613,qs),
(321,610,o),
(319,608,qs),
(230,534,o),
(181,424,qs),
(129,306,o),
(129,166,qs),
(129,88,o),
(162,-16,o),
(201,-61,qs),
(203,-63,o),
(205,-65,qs),
(226,-86,o),
(220,-117,qs),
(216,-137,ls),
(215,-146,o),
(206,-143,q),
(146,-112,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
20 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 344;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,593,qs),
(289,504,o),
(289,382,qs),
(289,236,o),
(223,98,qs),
(139,-78,o),
(-8,-142,qs),
(-17,-146,o),
(-16,-136,qs),
(-12,-114,ls),
(-6,-82,o),
(20,-62,qs),
(24,-59,o),
(26,-58,q),
(115,16,o),
(165,127,qs),
(217,245,o),
(217,384,qs),
(217,526,o),
(145,611,qs),
(143,613,o),
(140,616,qs),
(119,636,o),
(126,668,qs),
(130,688,ls),
(132,696,o),
(140,694,q),
(200,663,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
19 1 1 50 
CALL[ ]	/* CallFunction */";
};
width = 344;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,403,o),
(73,413,qs),
(99,463,l),
(101,471,o),
(109,468,qs),
(190,431,l),
(200,531,l),
(202,539,o),
(210,539,qs),
(266,539,ls),
(273,539,o),
(272,531,q),
(248,431,l),
(340,468,ls),
(349,471,o),
(350,463,qs),
(356,413,l),
(358,404,o),
(349,402,qs),
(255,377,l),
(299,300,l),
(306,294,o),
(296,289,qs),
(250,261,ls),
(242,257,o),
(240,262,qs),
(203,348,l),
(139,262,ls),
(133,255,o),
(128,261,q),
(90,289,ls),
(84,293,o),
(90,300,qs),
(163,377,l),
(76,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 350;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,238,o),
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(168,304,l),
(168,441,ls),
(168,450,o),
(176,450,qs),
(235,450,o),
(235,389,qs),
(235,304,l),
(358,304,ls),
(366,304,o),
(366,295,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(235,238,l),
(235,101,ls),
(235,92,o),
(227,92,qs),
(176,92,ls),
(168,92,o),
(168,101,qs),
(168,238,l),
(45,238,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 97 0 0 3 0 81 0 0 0 26 0 25 34 34 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,-49,qs),
(22,-28,o),
(29,-8,q),
(-4,-1,o),
(-4,33,qs),
(-4,57,o),
(28,91,o),
(51,91,qs),
(93,91,o),
(93,48,qs),
(93,-17,o),
(3,-86,qs),
(-2,-90,o),
(-5,-86,qs),
(-21,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 73 0 0 0 118 37 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 145;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,177,qs),
(40,229,ls),
(42,238,o),
(49,238,qs),
(253,238,ls),
(262,238,o),
(261,229,qs),
(251,177,ls),
(249,168,o),
(242,168,qs),
(37,168,ls),
(28,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-13,34,qs),
(-13,57,o),
(20,91,o),
(43,91,qs),
(84,91,o),
(84,49,qs),
(84,24,o),
(52,-10,o),
(30,-10,qs),
(-13,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 0 97 2 1 0 0 46 0 78 1 0 6 4 0 9 1 9 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 145;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-38,9,qs),
(276,547,ls),
(282,556,o),
(291,556,qs),
(301,556,ls),
(324,556,o),
(333,520,o),
(317,493,qs),
(35,9,ls),
(29,0,o),
(20,0,qs),
(-36,0,ls),
(-43,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,138,qs),
(389,228,o),
(389,363,qs),
(389,496,o),
(298,496,qs),
(233,496,o),
(182,417,qs),
(123,324,o),
(123,195,qs),
(123,61,o),
(214,61,qs),
(281,61,o)
);
},
{
closed = 1;
nodes = (
(95,38,qs),
(49,91,o),
(49,192,qs),
(49,334,o),
(117,442,qs),
(195,567,o),
(308,567,qs),
(463,567,o),
(463,366,qs),
(463,219,o),
(396,113,qs),
(320,-10,o),
(203,-10,qs),
(135,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 25 13 25 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,447,ls),
(69,443,o),
(70,453,qs),
(81,511,ls),
(83,522,o),
(94,525,qs),
(156,547,ls),
(181,556,o),
(205,556,qs),
(219,556,ls),
(265,556,o),
(255,501,qs),
(179,69,l),
(249,69,ls),
(294,69,o),
(286,26,qs),
(283,11,ls),
(281,0,o),
(270,0,qs),
(4,0,ls),
(-4,0,o),
(-2,9,qs),
(7,61,ls),
(9,69,o),
(16,69,qs),
(108,69,l),
(181,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 39 77 2 1 0 0 1 96 0 1 1 40 1 78 50 35 51 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 346;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,69,o),
(352,27,qs),
(350,11,ls),
(348,0,o),
(337,0,qs),
(5,0,ls),
(-3,0,o),
(-1,9,qs),
(16,102,o),
(80,168,qs),
(118,208,o),
(204,262,qs),
(288,313,o),
(343,378,o),
(343,426,qs),
(343,498,o),
(255,498,qs),
(191,498,o),
(118,455,qs),
(108,450,o),
(104,450,qs),
(99,450,o),
(97,458,q),
(95,478,ls),
(91,519,o),
(138,538,qs),
(208,567,o),
(270,567,qs),
(340,567,o),
(419,498,o),
(419,438,qs),
(419,364,o),
(368,305,qs),
(334,266,o),
(255,217,qs),
(160,157,o),
(104,106,o),
(94,69,q),
(316,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 38 0 37 57 34 37 41 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,186,qs),
(380,108,o),
(328,54,qs),
(267,-10,o),
(169,-10,qs),
(98,-10,o),
(4,60,o),
(4,112,qs),
(4,144,o),
(23,144,qs),
(29,144,o),
(35,134,qs),
(76,58,o),
(166,58,qs),
(228,58,o),
(304,125,o),
(304,180,qs),
(304,254,o),
(204,254,qs),
(149,254,ls),
(109,254,o),
(115,294,qs),
(117,314,ls),
(119,324,o),
(130,324,qs),
(218,324,ls),
(271,324,o),
(334,380,o),
(334,428,qs),
(334,499,o),
(243,499,qs),
(179,499,o),
(107,456,qs),
(105,455,o),
(102,453,qs),
(96,450,o),
(93,450,qs),
(88,450,o),
(87,458,qs),
(85,478,ls),
(80,515,o),
(127,539,qs),
(186,567,o),
(253,567,qs),
(323,567,o),
(407,497,o),
(407,440,qs),
(407,333,o),
(297,291,q),
(380,267,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 35 51 51 36 37 36 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,128,o),
(-1,136,qs),
(6,177,ls),
(10,195,o),
(21,208,qs),
(290,537,l),
(303,556,o),
(327,556,qs),
(356,556,ls),
(400,556,o),
(392,508,qs),
(337,197,l),
(373,197,ls),
(416,197,o),
(409,154,qs),
(407,138,l),
(403,128,o),
(394,128,qs),
(325,128,l),
(304,9,ls),
(303,0,o),
(296,0,qs),
(238,0,ls),
(231,0,o),
(233,9,qs),
(254,128,l),
(5,128,ls)
);
},
{
closed = 1;
nodes = (
(314,476,l),
(87,197,l),
(266,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,353,o),
(233,353,qs),
(302,353,o),
(344,318,qs),
(390,279,o),
(390,208,qs),
(390,120,o),
(337,60,qs),
(274,-10,o),
(173,-10,qs),
(102,-10,o),
(7,57,o),
(7,106,qs),
(7,140,o),
(26,140,qs),
(34,140,o),
(40,131,qs),
(86,58,o),
(167,58,qs),
(227,58,o),
(267,91,qs),
(315,131,o),
(315,199,qs),
(315,286,o),
(215,286,qs),
(147,286,o),
(71,259,qs),
(60,256,o),
(61,268,q),
(110,547,ls),
(111,556,o),
(120,556,qs),
(378,556,ls),
(422,556,o),
(414,513,qs),
(411,497,ls),
(410,486,o),
(398,486,qs),
(171,486,l),
(145,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,361,qs),
(326,361,o),
(366,324,qs),
(413,282,o),
(413,214,qs),
(413,126,o),
(357,63,qs),
(293,-10,o),
(194,-10,qs),
(126,-10,o),
(81,28,qs),
(31,72,o),
(31,145,qs),
(31,195,o),
(67,271,o),
(130,353,qs),
(285,557,ls),
(293,567,o),
(303,567,qs),
(327,567,o),
(331,544,qs),
(337,516,o),
(309,479,qs),
(211,352,l),
(236,361,o)
);
},
{
closed = 1;
nodes = (
(202,59,qs),
(256,59,o),
(293,95,qs),
(337,137,o),
(337,204,qs),
(337,296,o),
(244,296,qs),
(189,296,o),
(149,258,qs),
(104,215,o),
(104,151,qs),
(104,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 39 77 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 2 0 133 0 3 3 2 97 0 2 2 42 77 0 4 4 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 36 38 40 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,486,o),
(83,495,qs),
(92,547,ls),
(93,556,o),
(102,556,qs),
(397,556,ls),
(440,556,o),
(433,513,qs),
(431,502,ls),
(427,482,o),
(413,456,q),
(136,12,l),
(130,0,o),
(118,0,qs),
(59,0,ls),
(48,0,o),
(55,9,q),
(352,486,l),
(89,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 17 54 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,53,o),
(196,53,qs),
(256,53,o),
(333,122,o),
(333,175,qs),
(333,214,o),
(278,261,o),
(232,261,qs),
(182,261,o),
(143,232,qs),
(96,196,o),
(96,139,qs),
(96,99,o)
);
},
{
closed = 1;
nodes = (
(203,324,o),
(243,324,qs),
(293,324,o),
(364,386,o),
(364,429,qs),
(364,503,o),
(271,503,qs),
(220,503,o),
(154,443,o),
(154,397,qs),
(154,364,o)
);
},
{
closed = 1;
nodes = (
(84,398,qs),
(84,463,o),
(132,511,qs),
(189,567,o),
(276,567,qs),
(347,567,o),
(435,497,o),
(435,441,qs),
(435,338,o),
(325,294,q),
(407,263,o),
(407,183,qs),
(407,101,o),
(350,47,qs),
(288,-11,o),
(192,-11,qs),
(119,-11,o),
(74,24,qs),
(22,64,o),
(22,132,qs),
(22,245,o),
(150,294,q),
(84,326,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 39 77 0 1 1 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 1 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
41 39 35 36 36 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,195,qs),
(147,195,o),
(107,233,qs),
(63,275,o),
(63,342,qs),
(63,429,o),
(120,492,qs),
(186,567,o),
(290,567,qs),
(355,567,o),
(397,530,qs),
(445,488,o),
(445,414,qs),
(445,366,o),
(404,278,o),
(346,204,qs),
(191,1,ls),
(183,-10,o),
(173,-10,qs),
(150,-10,o),
(145,13,qs),
(139,40,o),
(162,71,qs),
(265,205,l),
(237,195,o)
);
},
{
closed = 1;
nodes = (
(230,259,qs),
(285,259,o),
(326,299,qs),
(372,343,o),
(372,407,qs),
(372,498,o),
(275,498,qs),
(221,498,o),
(181,460,qs),
(135,416,o),
(135,351,qs),
(135,259,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 2 0 4 2 105 0 3 3 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 4 1 3 105 0 4 0 2 0 4 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 36 38 40 36 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,262,qs),
(39,285,o),
(72,319,o),
(95,319,qs),
(136,319,o),
(136,277,qs),
(136,253,o),
(105,219,o),
(82,219,qs),
(39,219,o)
);
},
{
closed = 1;
nodes = (
(-2,34,qs),
(-2,57,o),
(31,91,o),
(54,91,qs),
(96,91,o),
(96,49,qs),
(96,24,o),
(64,-10,o),
(41,-10,qs),
(-2,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 4 1 0 3 1 0 105 0 3 3 2 97 5 1 2 2 46 2 78 11 10 1 0 16 14 10 19 11 19 6 4 0 9 1 9 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,-49,qs),
(30,-29,o),
(38,-8,q),
(5,-1,o),
(5,33,qs),
(5,57,o),
(37,91,o),
(60,91,qs),
(102,91,o),
(102,48,qs),
(102,-17,o),
(12,-86,qs),
(8,-89,o),
(4,-86,q),
(-11,-67,o)
);
},
{
closed = 1;
nodes = (
(47,262,qs),
(47,285,o),
(80,319,o),
(102,319,qs),
(144,319,o),
(144,277,qs),
(144,253,o),
(112,219,o),
(90,219,qs),
(47,219,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
11 1 0 73 0 0 1 0 134 0 2 1 1 2 89 0 2 2 1 97 3 1 1 2 1 81 16 15 21 19 15 24 16 24 37 4 9 23 
CALL[ ]	/* CallFunction */";
};
width = 162;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,158,o),
(407,99,qs),
(407,94,ls),
(407,86,o),
(399,88,q),
(45,238,l),
(37,240,o),
(37,251,qs),
(37,290,ls),
(37,299,o),
(45,303,qs),
(397,451,ls),
(407,455,o),
(407,445,qs),
(407,396,ls),
(407,382,o),
(393,377,qs),
(133,271,l),
(354,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(45,325,ls),
(37,325,o)
);
},
{
closed = 1;
nodes = (
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(45,148,ls),
(37,148,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 1 4 1 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 5 1 2 3 2 79 14 12 2 0 20 17 12 23 14 23 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,383,o),
(43,396,qs),
(43,445,ls),
(43,456,o),
(53,451,qs),
(406,303,ls),
(414,299,o),
(414,290,qs),
(414,251,ls),
(414,240,o),
(406,238,q),
(52,88,ls),
(43,85,o),
(43,94,qs),
(43,99,ls),
(43,159,o),
(96,180,qs),
(318,271,l),
(57,377,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,220,o),
(179,265,o),
(226,298,qs),
(279,337,o),
(317,389,o),
(317,426,qs),
(317,497,o),
(230,497,qs),
(163,497,o),
(96,456,q),
(86,451,o),
(82,451,qs),
(77,451,o),
(75,459,q),
(73,479,ls),
(69,519,o),
(116,539,qs),
(179,567,o),
(240,567,qs),
(311,567,o),
(392,500,o),
(392,441,qs),
(392,376,o),
(344,322,qs),
(317,292,o),
(224,226,qs),
(202,209,o),
(198,183,qs),
(193,154,ls),
(192,146,o),
(184,146,qs),
(138,146,ls),
(129,146,o),
(131,154,qs),
(138,192,ls)
);
},
{
closed = 1;
nodes = (
(93,34,qs),
(93,57,o),
(126,91,o),
(148,91,qs),
(190,91,o),
(190,49,qs),
(190,24,o),
(158,-10,o),
(136,-10,qs),
(93,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 5 3 0 5 126 0 3 3 1 97 0 1 1 39 77 0 5 5 4 97 6 1 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 5 3 0 5 126 0 1 0 3 2 1 3 105 0 5 5 4 97 6 1 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
36 35 41 39 35 44 36 44 34 37 42 49 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 387;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,147,qs),
(474,198,o),
(474,267,qs),
(474,344,o),
(396,344,qs),
(341,344,o),
(301,297,qs),
(259,247,o),
(259,181,qs),
(259,144,o),
(298,101,o),
(331,101,qs),
(390,101,o)
);
},
{
closed = 1;
nodes = (
(306,34,qs),
(257,34,o),
(224,66,qs),
(186,104,o),
(186,171,qs),
(186,255,o),
(241,325,qs),
(307,409,o),
(404,409,qs),
(480,409,o),
(502,352,q),
(522,403,o),
(568,403,qs),
(574,403,ls),
(582,403,o),
(580,393,qs),
(518,163,ls),
(517,158,o),
(514,149,qs),
(510,133,o),
(508,126,q),
(504,96,o),
(530,96,qs),
(583,96,o),
(618,172,qs),
(651,245,o),
(651,321,qs),
(651,507,o),
(438,507,qs),
(305,507,o),
(211,416,qs),
(106,313,o),
(106,161,qs),
(106,60,o),
(160,0,qs),
(221,-69,o),
(334,-69,qs),
(464,-69,o),
(557,-7,qs),
(559,-6,o),
(562,-3,q),
(570,2,o),
(574,2,qs),
(581,2,o),
(581,-8,qs),
(581,-37,o),
(517,-77,qs),
(431,-131,o),
(324,-131,qs),
(204,-131,o),
(127,-61,qs),
(37,19,o),
(37,159,qs),
(37,314,o),
(142,431,qs),
(265,568,o),
(448,568,qs),
(562,568,o),
(635,509,qs),
(718,441,o),
(718,321,qs),
(718,227,o),
(670,144,qs),
(606,35,o),
(503,35,qs),
(473,35,o),
(438,73,o),
(440,103,q),
(388,34,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
70 1 1 9 13 1 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 2 6 2 5 6 128 10 1 9 0 1 0 9 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 12 1 0 8 2 0 89 0 8 11 1 2 5 8 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 81 79 73 71 69 66 59 57 53 51 45 43 38 37 33 31 25 23 17 15 8 6 0 12 1 12 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,463,l),
(161,221,l),
(332,221,l)
);
},
{
closed = 1;
nodes = (
(45,0,o),
(35,0,qs),
(-25,0,ls),
(-34,0,o),
(-29,9,qs),
(261,548,ls),
(266,556,o),
(274,556,qs),
(293,556,ls),
(322,556,o),
(348,532,o),
(354,500,qs),
(446,9,ls),
(448,0,o),
(438,0,qs),
(383,0,ls),
(371,0,o),
(369,12,qs),
(344,153,l),
(125,153,l),
(51,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 22 19 16 13 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,556,o),
(130,556,qs),
(309,556,ls),
(375,556,o),
(453,492,o),
(453,438,qs),
(453,329,o),
(349,291,q),
(432,267,o),
(432,176,qs),
(432,102,o),
(385,54,qs),
(332,0,o),
(237,0,qs),
(32,0,ls),
(26,0,o),
(26,4,qs),
(26,9,l),
(120,547,ls)
);
},
{
closed = 1;
nodes = (
(358,68,o),
(358,177,qs),
(358,215,o),
(309,258,o),
(267,258,qs),
(143,258,l),
(109,68,l),
(233,68,ls)
);
},
{
closed = 1;
nodes = (
(324,325,o),
(378,376,o),
(378,419,qs),
(378,488,o),
(301,488,qs),
(184,488,l),
(155,325,l),
(279,325,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
10 1 2 5 0 1 0 3 2 76 7 1 5 0 2 3 5 2 103 0 4 4 1 95 0 1 1 39 77 6 1 3 3 0 95 0 0 0 40 0 78 27 27 19 19 27 34 27 33 30 28 19 26 19 25 35 57 50 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,42,qs),
(54,104,o),
(54,222,qs),
(54,353,o),
(132,452,qs),
(223,567,o),
(361,567,qs),
(422,567,o),
(485,538,qs),
(526,517,o),
(511,477,qs),
(502,456,ls),
(498,446,o),
(491,446,qs),
(486,446,o),
(478,452,qs),
(421,495,o),
(351,495,qs),
(263,495,o),
(201,425,qs),
(131,346,o),
(131,224,qs),
(131,61,o),
(272,61,qs),
(367,61,o),
(435,132,qs),
(445,142,o),
(452,142,qs),
(463,142,o),
(463,128,qs),
(463,92,o),
(418,50,qs),
(354,-11,o),
(258,-11,qs),
(169,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 5 0 3 4 5 3 105 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 28 26 21 19 17 15 11 9 7 5 0 34 1 34 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,71,o),
(363,132,qs),
(432,202,o),
(432,330,qs),
(432,485,o),
(265,485,qs),
(184,485,l),
(111,71,l),
(205,71,ls)
);
},
{
closed = 1;
nodes = (
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(282,556,ls),
(381,556,o),
(441,505,qs),
(510,447,o),
(510,339,qs),
(510,199,o),
(439,109,qs),
(353,0,o),
(195,0,qs),
(33,0,ls),
(26,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 5 1 2 2 40 2 78 11 9 0 0 20 17 9 23 11 23 0 8 0 7 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,71,o),
(340,27,qs),
(337,11,ls),
(334,0,o),
(324,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(381,556,ls),
(424,556,o),
(416,513,qs),
(414,496,ls),
(412,485,o),
(401,485,qs),
(186,485,l),
(155,312,l),
(319,312,ls),
(362,312,o),
(355,268,qs),
(353,252,l),
(350,242,o),
(340,242,qs),
(143,242,l),
(113,71,l),
(304,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 51 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,0,o),
(90,0,qs),
(33,0,ls),
(26,0,o),
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(379,556,ls),
(423,556,o),
(415,513,qs),
(412,496,ls),
(411,485,o),
(399,485,qs),
(184,485,l),
(153,310,l),
(316,310,ls),
(359,310,o),
(352,266,qs),
(349,251,ls),
(347,239,o),
(336,239,qs),
(140,239,l),
(100,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 51 51 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 383;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,224,ls),
(291,224,o),
(297,268,qs),
(298,284,ls),
(300,295,o),
(312,295,qs),
(506,295,ls),
(516,295,o),
(515,285,qs),
(482,106,ls),
(477,76,o),
(450,54,qs),
(371,-11,o),
(263,-11,qs),
(172,-11,o),
(117,42,qs),
(54,104,o),
(54,219,qs),
(54,356,o),
(134,454,qs),
(226,567,o),
(370,567,qs),
(441,567,o),
(498,539,qs),
(543,519,o),
(525,479,qs),
(516,458,ls),
(512,448,o),
(506,448,qs),
(503,448,o),
(493,454,qs),
(435,495,o),
(360,495,qs),
(268,495,o),
(205,426,qs),
(132,347,o),
(132,219,qs),
(132,61,o),
(269,61,qs),
(353,61,o),
(413,107,q),
(434,224,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
38 37 2 6 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 103 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 103 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 53 38 37 34 36 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 552;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,0,o),
(90,0,qs),
(33,0,ls),
(26,0,o),
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(138,556,ls),
(196,556,o),
(184,485,qs),
(153,310,l),
(392,310,l),
(433,547,ls),
(435,556,o),
(443,556,qs),
(450,556,ls),
(508,556,o),
(496,485,qs),
(412,9,ls),
(411,0,o),
(403,0,qs),
(345,0,ls),
(337,0,o),
(339,9,qs),
(379,239,l),
(141,239,l),
(100,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 3 0 0 1 3 0 104 4 1 2 2 39 77 5 1 1 1 40 1 78 51 50 18 51 50 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(139,556,ls),
(198,556,o),
(185,485,qs),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-10,97,qs),
(-6,97,o),
(-1,91,qs),
(26,54,o),
(62,54,qs),
(118,54,o),
(129,117,qs),
(205,547,ls),
(206,556,o),
(214,556,qs),
(269,556,o),
(269,508,qs),
(269,501,o),
(268,488,q),
(267,485,l),
(202,114,ls),
(179,-10,o),
(65,-10,qs),
(27,-10,o),
(-24,34,o),
(-24,68,qs),
(-24,97,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 34 35 38 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,0,o),
(90,0,qs),
(33,0,ls),
(26,0,o),
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(138,556,ls),
(195,556,o),
(184,485,qs),
(148,282,l),
(403,544,ls),
(414,556,o),
(424,556,qs),
(490,556,ls),
(497,556,o),
(491,547,q),
(284,332,l),
(424,10,ls),
(428,0,o),
(417,0,qs),
(363,0,ls),
(350,0,o),
(346,11,qs),
(228,277,l),
(130,178,l),
(100,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
15 8 1 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 52 52 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,71,o),
(308,27,qs),
(305,11,ls),
(303,0,o),
(293,0,qs),
(33,0,ls),
(26,0,o),
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(138,556,ls),
(196,556,o),
(184,485,qs),
(111,71,l),
(273,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 15 0 14 51 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,556,o),
(512,556,qs),
(543,556,ls),
(566,556,o),
(591,525,o),
(587,500,qs),
(528,9,l),
(526,0,o),
(519,0,qs),
(460,0,ls),
(453,0,o),
(455,9,q),
(505,416,l),
(305,9,ls),
(301,0,o),
(291,0,qs),
(237,0,ls),
(230,0,o),
(229,9,qs),
(175,412,l),
(83,9,ls),
(81,0,o),
(75,0,qs),
(14,0,ls),
(8,0,o),
(10,9,qs),
(133,547,ls),
(135,556,o),
(142,556,qs),
(174,556,ls),
(201,556,o),
(227,536,o),
(231,511,qs),
(286,108,l),
(499,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 14 2 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 52 52 53 35 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,556,o),
(447,556,qs),
(453,556,ls),
(511,556,o),
(499,485,qs),
(415,9,ls),
(414,0,o),
(406,0,qs),
(358,0,ls),
(344,0,o),
(339,13,qs),
(172,412,l),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(149,556,ls),
(174,556,o),
(198,538,o),
(209,511,qs),
(366,138,l),
(438,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 1 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 51 52 51 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 2 3 1 2 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
36 38 38 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,0,o),
(89,0,qs),
(32,0,ls),
(26,0,o),
(26,4,qs),
(26,9,l),
(120,547,ls),
(122,556,o),
(130,556,qs),
(310,556,ls),
(377,556,o),
(421,522,qs),
(475,482,o),
(475,407,qs),
(475,321,o),
(423,266,qs),
(363,203,o),
(259,203,qs),
(133,203,l),
(99,9,ls)
);
},
{
closed = 1;
nodes = (
(329,273,o),
(399,340,o),
(399,398,qs),
(399,438,o),
(350,485,o),
(308,485,qs),
(183,485,l),
(145,273,l),
(267,273,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
13 1 2 0 1 76 5 1 4 0 0 2 4 0 103 0 3 3 1 95 0 1 1 39 77 0 2 2 40 2 78 20 20 20 28 20 27 35 52 54 32 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,55,qs),
(54,115,o),
(54,219,qs),
(54,350,o),
(134,451,qs),
(226,567,o),
(356,567,qs),
(443,567,o),
(496,515,qs),
(557,456,o),
(557,347,qs),
(557,228,o),
(500,132,qs),
(429,15,o),
(308,-6,q),
(326,-45,o),
(371,-45,qs),
(414,-45,o),
(462,-7,q),
(467,-2,o),
(473,-2,qs),
(482,-2,o),
(482,-17,qs),
(482,-50,o),
(444,-78,qs),
(401,-111,o),
(346,-111,qs),
(240,-111,o),
(219,-7,q),
(146,4,o)
);
},
{
closed = 1;
nodes = (
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(266,495,o),
(204,424,qs),
(132,341,o),
(132,219,qs),
(132,62,o),
(263,62,qs),
(351,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 4 5 1 2 4 114 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
31 30 37 35 30 41 31 41 40 35 20 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,0,o),
(89,0,qs),
(32,0,ls),
(26,0,o),
(26,4,qs),
(26,9,l),
(120,547,ls),
(122,556,o),
(130,556,qs),
(313,556,ls),
(384,556,o),
(427,519,qs),
(475,477,o),
(475,403,qs),
(475,332,o),
(400,232,o),
(332,212,q),
(409,6,ls),
(411,0,o),
(404,0,qs),
(347,0,ls),
(334,0,o),
(330,11,qs),
(258,203,l),
(133,203,l),
(99,9,ls)
);
},
{
closed = 1;
nodes = (
(330,273,o),
(400,338,o),
(400,397,qs),
(400,437,o),
(351,485,o),
(309,485,qs),
(183,485,l),
(145,273,l),
(267,273,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
8 1 0 5 19 1 1 0 2 76 6 1 5 0 0 1 5 0 103 0 4 4 2 95 0 2 2 39 77 3 1 1 1 40 1 78 26 26 26 34 26 33 35 52 56 50 16 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,154,qs),
(26,154,o),
(30,147,qs),
(82,59,o),
(183,59,qs),
(246,59,o),
(318,115,o),
(318,163,qs),
(318,188,o),
(279,225,o),
(229,245,qs),
(152,277,o),
(131,289,qs),
(66,329,o),
(66,394,qs),
(66,466,o),
(118,513,qs),
(177,567,o),
(275,567,qs),
(344,567,o),
(403,538,qs),
(443,518,o),
(429,477,qs),
(423,459,ls),
(419,449,o),
(413,449,qs),
(407,449,o),
(400,455,qs),
(341,498,o),
(264,498,qs),
(213,498,o),
(142,447,o),
(142,411,qs),
(142,381,o),
(168,359,qs),
(190,341,o),
(256,313,qs),
(324,285,o),
(351,265,qs),
(395,231,o),
(395,182,qs),
(395,101,o),
(346,50,qs),
(287,-11,o),
(180,-11,qs),
(107,-11,o),
(2,67,o),
(2,121,qs),
(1,154,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 44 37 34 45 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,485,o),
(68,494,qs),
(77,547,ls),
(79,556,o),
(86,556,qs),
(419,556,ls),
(463,556,o),
(456,513,qs),
(453,496,ls),
(451,485,o),
(440,485,qs),
(295,485,l),
(211,9,ls),
(210,0,o),
(201,0,qs),
(145,0,ls),
(136,0,o),
(138,9,qs),
(221,485,l),
(73,485,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 18 51 34 50 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 413;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,47,qs),
(60,112,o),
(79,223,qs),
(136,547,ls),
(138,556,o),
(146,556,qs),
(152,556,ls),
(211,556,o),
(199,485,qs),
(152,221,ls),
(139,145,o),
(190,61,o),
(249,61,qs),
(365,61,o),
(392,213,qs),
(451,547,ls),
(452,556,o),
(460,556,qs),
(467,556,ls),
(525,556,o),
(513,485,qs),
(463,201,ls),
(446,107,o),
(396,52,qs),
(338,-10,o),
(244,-10,qs),
(159,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 39 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 21 18 14 12 9 6 0 26 1 26 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,556,o),
(459,556,qs),
(514,556,ls),
(524,556,o),
(518,547,q),
(247,9,ls),
(242,0,o),
(235,0,qs),
(169,0,ls),
(161,0,o),
(159,9,qs),
(77,546,ls),
(75,556,o),
(84,556,qs),
(107,556,ls),
(133,556,o),
(156,533,o),
(160,503,qs),
(217,89,l),
(439,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,556,o),
(402,556,qs),
(421,556,ls),
(446,556,o),
(468,533,o),
(470,503,qs),
(509,99,l),
(691,544,l),
(697,556,o),
(710,556,qs),
(765,556,ls),
(773,556,o),
(769,547,qs),
(537,9,ls),
(533,0,o),
(525,0,qs),
(463,0,ls),
(454,0,o),
(454,9,q),
(410,454,l),
(213,9,l),
(210,0,o),
(201,0,qs),
(139,0,ls),
(129,0,o),
(129,9,qs),
(92,546,ls),
(92,556,o),
(101,556,qs),
(115,556,ls),
(142,556,o),
(166,532,o),
(168,503,qs),
(193,99,l),
(384,544,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
28 27 15 14 0 5 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,0,o),
(38,0,qs),
(-22,0,ls),
(-31,0,o),
(-24,9,qs),
(204,301,l),
(92,546,ls),
(88,556,o),
(99,556,qs),
(122,556,ls),
(147,556,o),
(170,539,o),
(183,510,qs),
(257,345,l),
(411,544,l),
(422,556,o),
(432,556,qs),
(490,556,ls),
(499,556,o),
(491,547,q),
(289,282,l),
(413,9,ls),
(417,0,o),
(406,0,qs),
(353,0,ls),
(341,0,o),
(335,12,qs),
(233,236,l),
(56,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
22 14 7 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 52 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,556,o),
(76,556,qs),
(96,556,ls),
(142,556,o),
(159,506,qs),
(235,286,l),
(412,544,l),
(419,556,o),
(431,556,qs),
(488,556,ls),
(499,556,o),
(491,544,qs),
(258,213,l),
(222,9,ls),
(221,0,o),
(213,0,qs),
(156,0,ls),
(148,0,o),
(150,9,qs),
(186,213,l),
(68,547,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
14 1 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 52 52 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,71,o),
(367,27,qs),
(365,11,ls),
(363,0,o),
(352,0,qs),
(1,0,ls),
(-7,0,o),
(-5,9,qs),
(2,51,ls),
(6,69,o),
(22,88,qs),
(365,485,l),
(93,485,ls),
(86,485,o),
(87,494,qs),
(97,547,ls),
(98,556,o),
(106,556,qs),
(405,556,ls),
(460,556,o),
(451,505,qs),
(448,492,ls),
(446,477,o),
(428,455,qs),
(95,71,l),
(332,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,-144,qs),
(40,-144,ls),
(-4,-144,o),
(4,-101,qs),
(137,653,ls),
(144,696,o),
(188,696,qs),
(308,696,ls),
(320,696,o),
(317,685,qs),
(316,678,ls),
(308,635,o),
(265,635,qs),
(202,635,ls),
(198,635,o),
(197,629,qs),
(71,-78,ls),
(70,-83,o),
(75,-83,qs),
(138,-83,ls),
(182,-83,o),
(175,-126,q),
(173,-133,ls),
(171,-144,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 51 51 52 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 246;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,556,o),
(76,556,qs),
(83,556,ls),
(112,556,o),
(138,532,o),
(145,502,qs),
(262,9,l),
(263,0,o),
(255,0,qs),
(204,0,ls),
(195,0,o),
(193,9,qs),
(68,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-36,-83,o),
(8,-83,qs),
(70,-83,ls),
(75,-83,o),
(76,-78,qs),
(202,629,ls),
(203,635,o),
(197,635,qs),
(135,635,ls),
(90,635,o),
(97,678,q),
(99,685,ls),
(101,696,o),
(111,696,qs),
(231,696,ls),
(277,696,o),
(269,653,qs),
(136,-101,ls),
(129,-144,o),
(84,-144,qs),
(-37,-144,ls),
(-48,-144,o),
(-46,-133,qs),
(-44,-126,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 37 35 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 244;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,271,o),
(86,271,qs),
(36,271,ls),
(26,271,o),
(30,279,qs),
(171,544,l),
(176,556,o),
(190,556,qs),
(235,556,o),
(259,512,qs),
(384,279,ls),
(389,271,o),
(377,271,qs),
(327,271,ls),
(316,271,o),
(309,282,q),
(207,477,l),
(104,282,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 51 35 50 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 407;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-85,-180,qs),
(-76,-131,ls),
(-74,-122,o),
(-67,-122,qs),
(351,-122,ls),
(359,-122,o),
(357,-131,qs),
(348,-180,ls),
(347,-188,o),
(340,-188,qs),
(-78,-188,ls),
(-86,-188,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 418;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,431,o),
(148,431,qs),
(97,431,ls),
(81,431,o),
(71,441,qs),
(3,507,ls),
(1,509,o),
(5,516,o),
(9,516,qs),
(72,516,ls),
(84,516,o),
(94,506,qs),
(153,439,l),
(156,437,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 97 0 1 0 1 81 37 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 154;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,-9,qs),
(107,-9,o),
(70,29,qs),
(28,73,o),
(28,148,qs),
(27,237,o),
(82,302,qs),
(145,377,o),
(235,377,qs),
(315,377,o),
(345,319,q),
(362,368,o),
(409,368,qs),
(414,368,ls),
(422,368,o),
(420,360,qs),
(359,9,ls),
(357,0,o),
(349,0,qs),
(293,0,ls),
(285,0,o),
(286,9,qs),
(294,52,l),
(243,-9,o)
);
},
{
closed = 1;
nodes = (
(184,59,qs),
(244,59,o),
(281,103,qs),
(320,148,o),
(320,218,qs),
(320,308,o),
(235,308,qs),
(179,308,o),
(142,264,qs),
(102,217,o),
(103,152,qs),
(104,59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 38 34 51 50 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(110,547,ls),
(111,556,o),
(120,556,qs),
(125,556,ls),
(183,556,o),
(171,487,qs),
(141,316,l),
(193,377,o),
(270,377,qs),
(328,377,o),
(365,341,qs),
(408,301,o),
(408,232,qs),
(408,137,o),
(357,69,qs),
(299,-9,o),
(209,-9,qs),
(123,-9,o),
(95,49,q),
(88,9,ls)
);
},
{
closed = 1;
nodes = (
(291,99,qs),
(333,145,o),
(333,214,qs),
(333,308,o),
(248,308,qs),
(194,308,o),
(157,269,qs),
(116,224,o),
(116,151,qs),
(116,110,o),
(164,59,o),
(203,59,qs),
(254,59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 98 3 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 6 1 4 4 0 98 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 33 31 25 37 26 37 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,29,qs),
(27,71,o),
(27,147,qs),
(27,234,o),
(80,299,qs),
(145,377,o),
(247,377,qs),
(287,377,o),
(321,362,qs),
(355,346,o),
(338,307,qs),
(330,289,ls),
(327,281,o),
(323,281,qs),
(319,281,o),
(315,284,qs),
(276,308,o),
(233,308,qs),
(182,308,o),
(145,269,qs),
(103,223,o),
(103,151,qs),
(103,54,o),
(190,54,qs),
(247,54,o),
(288,91,qs),
(299,101,o),
(304,101,qs),
(313,101,o),
(313,91,qs),
(313,58,o),
(279,28,qs),
(235,-10,o),
(169,-10,qs),
(106,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 48 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 28 26 21 19 17 15 11 9 6 5 0 34 1 34 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,556,o),
(390,556,qs),
(395,556,ls),
(454,556,o),
(441,487,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(291,0,ls),
(285,0,o),
(285,9,q),
(293,52,l),
(243,-9,o),
(163,-9,qs),
(105,-9,o),
(69,28,qs),
(27,71,o),
(27,148,qs),
(27,235,o),
(81,301,qs),
(144,377,o),
(235,377,qs),
(316,377,o),
(340,318,q),
(380,547,ls)
);
},
{
closed = 1;
nodes = (
(279,104,qs),
(319,150,o),
(319,217,qs),
(319,308,o),
(235,308,qs),
(184,308,o),
(146,269,qs),
(103,223,o),
(103,154,qs),
(103,59,o),
(183,59,qs),
(241,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
13 12 2 1 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
13 12 2 2 4 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 6 1 4 4 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 0 2 2 40 77 6 1 4 4 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 32 30 25 36 26 36 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,54,qs),
(255,54,o),
(315,93,qs),
(316,94,o),
(318,95,qs),
(327,101,o),
(330,101,qs),
(338,101,o),
(338,92,qs),
(338,58,o),
(299,28,qs),
(251,-9,o),
(180,-9,qs),
(115,-9,o),
(75,27,qs),
(26,70,o),
(28,154,qs),
(29,244,o),
(83,306,qs),
(144,377,o),
(237,377,qs),
(297,377,o),
(368,308,o),
(368,249,qs),
(367,216,o),
(355,171,qs),
(352,159,o),
(339,159,qs),
(99,159,l),
(90,54,o)
);
},
{
closed = 1;
nodes = (
(296,223,o),
(298,239,q),
(298,313,o),
(225,313,qs),
(137,313,o),
(110,214,q),
(294,214,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
34 1 6 5 1 76 0 3 0 4 0 3 4 128 7 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 30 30 30 36 30 36 34 37 20 38 37 32 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,302,o),
(31,310,qs),
(39,360,ls),
(41,368,o),
(48,368,qs),
(107,368,l),
(119,442,ls),
(141,562,o),
(237,562,qs),
(269,562,o),
(310,522,o),
(310,490,q),
(311,484,o),
(303,471,o),
(298,471,qs),
(293,471,o),
(287,477,qs),
(266,498,o),
(243,498,qs),
(202,498,o),
(192,438,qs),
(179,368,l),
(267,368,ls),
(274,368,o),
(272,360,qs),
(263,310,ls),
(262,302,o),
(255,302,qs),
(168,302,l),
(116,9,ls),
(114,0,o),
(107,0,qs),
(49,0,ls),
(42,0,o),
(43,9,qs),
(95,302,l),
(36,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
24 1 4 3 1 76 0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 0 78 0 0 0 36 0 35 34 36 34 34 35 34 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,-6,qs),
(100,-6,o),
(64,32,qs),
(25,73,o),
(25,146,qs),
(25,235,o),
(81,301,qs),
(145,377,o),
(238,377,qs),
(312,377,o),
(343,319,q),
(358,368,o),
(405,368,qs),
(410,368,ls),
(419,368,o),
(417,360,qs),
(355,12,ls),
(323,-171,o),
(148,-171,qs),
(86,-171,o),
(2,-114,o),
(2,-72,qs),
(2,-45,o),
(16,-45,qs),
(21,-45,o),
(28,-52,qs),
(76,-101,o),
(142,-101,qs),
(261,-101,o),
(284,20,qs),
(291,54,l),
(243,-6,o)
);
},
{
closed = 1;
nodes = (
(273,98,qs),
(317,142,o),
(317,213,qs),
(317,308,o),
(231,308,qs),
(181,308,o),
(143,269,qs),
(100,222,o),
(100,153,qs),
(100,59,o),
(181,59,qs),
(235,59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
20 1 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 46 77 0 0 0 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 0 5 1 0 128 0 3 3 42 77 0 7 7 4 97 0 4 4 48 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 44 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
33 32 39 37 32 43 33 43 38 34 51 35 34 34 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,377,qs),
(319,377,o),
(383,312,o),
(383,261,qs),
(383,247,o),
(380,221,qs),
(379,216,l),
(343,9,ls),
(342,0,o),
(333,0,qs),
(277,0,ls),
(269,0,o),
(271,9,qs),
(305,204,ls),
(308,229,o),
(308,238,qs),
(308,310,o),
(237,310,qs),
(141,310,o),
(121,199,qs),
(88,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(110,547,ls),
(111,556,o),
(120,556,qs),
(125,556,ls),
(183,556,o),
(171,487,qs),
(142,323,l),
(189,377,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 39 53 35 51 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(151,368,o),
(138,299,qs),
(87,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o)
);
},
{
closed = 1;
nodes = (
(112,513,o),
(133,513,qs),
(172,513,o),
(172,476,qs),
(171,454,o),
(141,422,o),
(119,422,qs),
(82,422,o),
(82,460,qs),
(82,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 1 42 77 4 1 0 0 40 0 78 2 0 20 18 15 13 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 176;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-114,-78,qs),
(-110,-78,o),
(-106,-82,qs),
(-80,-106,o),
(-59,-106,qs),
(-37,-106,o),
(-15,-78,o),
(-8,-42,qs),
(63,360,ls),
(64,368,o),
(72,368,qs),
(77,368,ls),
(136,368,o),
(124,299,qs),
(63,-48,ls),
(42,-171,o),
(-49,-171,qs),
(-83,-171,o),
(-125,-132,o),
(-125,-101,qs),
(-125,-78,o)
);
},
{
closed = 1;
nodes = (
(68,460,qs),
(68,482,o),
(97,513,o),
(118,513,qs),
(157,513,o),
(157,476,qs),
(157,454,o),
(126,422,o),
(104,422,qs),
(68,422,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 3 1 2 1 3 2 128 0 5 6 1 4 1 5 4 105 0 1 1 42 77 0 2 2 0 97 0 0 0 44 0 78 22 21 27 25 21 30 22 30 34 36 51 34 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 163;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(110,547,ls),
(111,556,o),
(120,556,qs),
(125,556,ls),
(183,556,o),
(171,487,qs),
(126,229,l),
(270,358,ls),
(281,368,o),
(293,368,qs),
(359,368,ls),
(368,368,o),
(362,360,q),
(221,234,l),
(316,9,ls),
(319,0,o),
(310,0,qs),
(255,0,ls),
(242,0,o),
(238,11,qs),
(166,185,l),
(110,135,l),
(88,9,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
15 8 1 3 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 51 52 52 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,107,qs),
(34,117,l),
(109,547,ls),
(111,556,o),
(119,556,qs),
(124,556,ls),
(183,556,o),
(171,487,qs),
(105,111,l),
(104,109,o),
(104,105,q),
(102,96,o),
(102,93,qs),
(102,59,o),
(136,59,qs),
(159,59,o),
(184,83,q),
(189,89,o),
(195,89,qs),
(202,89,o),
(202,81,qs),
(201,44,o),
(144,-9,o),
(105,-9,qs),
(30,-9,o),
(28,74,qs),
(28,84,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
13 1 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 49 0 78 55 35 19 33 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 231;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,376,qs),
(345,376,o),
(367,305,q),
(427,376,o),
(507,376,qs),
(564,376,o),
(628,312,o),
(628,257,qs),
(628,246,o),
(626,227,qs),
(625,218,o),
(625,216,qs),
(588,9,ls),
(587,0,o),
(578,0,qs),
(522,0,ls),
(515,0,o),
(516,9,qs),
(550,203,ls),
(554,225,o),
(554,238,qs),
(554,309,o),
(485,309,qs),
(391,309,o),
(371,199,qs),
(338,9,ls),
(337,0,o),
(329,0,qs),
(271,0,ls),
(264,0,o),
(266,9,qs),
(300,203,l),
(303,229,o),
(303,237,qs),
(303,309,o),
(233,309,qs),
(140,309,o),
(121,199,qs),
(88,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(138,368,o),
(140,319,q),
(186,376,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 2 0 47 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 40 53 35 53 35 51 49 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,377,qs),
(318,377,o),
(382,312,o),
(382,261,qs),
(382,248,o),
(379,224,qs),
(378,216,l),
(342,9,ls),
(341,0,o),
(332,0,qs),
(276,0,ls),
(268,0,o),
(270,9,qs),
(303,204,ls),
(307,228,o),
(307,238,qs),
(307,310,o),
(236,310,qs),
(140,310,o),
(120,199,qs),
(87,9,l),
(87,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(139,368,o),
(139,318,q),
(190,377,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 2 0 11 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
39 53 35 51 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,306,qs),
(149,377,o),
(244,377,qs),
(309,377,o),
(349,339,qs),
(395,296,o),
(395,222,qs),
(395,131,o),
(345,68,qs),
(285,-9,o),
(179,-9,qs),
(115,-9,o),
(74,31,qs),
(28,76,o),
(28,158,qs),
(27,244,o)
);
},
{
closed = 1;
nodes = (
(189,59,qs),
(244,59,o),
(281,103,qs),
(320,148,o),
(320,214,qs),
(319,308,o),
(232,308,qs),
(177,308,o),
(141,265,qs),
(103,220,o),
(103,156,qs),
(103,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 36 38 38 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-160,o),
(47,-160,qs),
(-9,-160,ls),
(-18,-160,o),
(-16,-151,qs),
(75,360,l),
(75,368,o),
(84,368,qs),
(89,368,ls),
(134,368,o),
(136,316,q),
(187,377,o),
(265,377,qs),
(324,377,o),
(361,341,qs),
(405,300,o),
(405,228,qs),
(405,134,o),
(355,68,qs),
(297,-9,o),
(206,-9,qs),
(124,-9,o),
(92,49,q),
(56,-151,l)
);
},
{
closed = 1;
nodes = (
(290,99,qs),
(331,145,o),
(331,213,qs),
(331,308,o),
(241,308,qs),
(191,308,o),
(155,270,qs),
(113,226,o),
(113,159,qs),
(113,112,o),
(160,59,o),
(202,59,qs),
(254,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
17 12 2 5 1 23 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
17 12 2 5 2 23 1 3 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 98 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 98 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 3 134 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 98 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 36 25 36 51 50 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,-9,qs),
(109,-9,o),
(72,26,qs),
(27,68,o),
(27,151,qs),
(27,238,o),
(83,303,qs),
(146,377,o),
(239,377,qs),
(316,377,o),
(345,319,q),
(360,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(420,360,qs),
(329,-151,ls),
(328,-160,o),
(320,-160,qs),
(264,-160,ls),
(255,-160,o),
(257,-151,qs),
(293,52,l),
(243,-9,o)
);
},
{
closed = 1;
nodes = (
(278,98,qs),
(319,144,o),
(319,217,qs),
(319,259,o),
(273,308,o),
(232,308,qs),
(181,308,o),
(144,269,qs),
(103,224,o),
(103,155,qs),
(103,59,o),
(188,59,qs),
(241,59,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 134 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 31 29 24 36 25 36 38 34 51 50 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,368,qs),
(263,368,ls),
(271,368,o),
(270,360,qs),
(260,305,ls),
(258,296,o),
(252,296,qs),
(228,296,ls),
(180,296,o),
(129,245,o),
(118,184,qs),
(88,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(142,368,o),
(140,315,q),
(179,368,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 0 1 76 0 2 2 0 97 3 1 0 0 42 77 0 1 1 40 1 78 52 36 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,315,qs),
(145,315,o),
(108,289,o),
(108,268,qs),
(108,244,o),
(164,221,qs),
(227,195,o),
(268,157,o),
(268,125,qs),
(268,70,o),
(234,34,qs),
(193,-11,o),
(119,-11,qs),
(67,-11,o),
(-4,40,o),
(-4,78,qs),
(-6,106,o),
(10,106,qs),
(13,106,o),
(17,102,qs),
(18,101,ls),
(59,51,o),
(118,51,qs),
(153,51,o),
(195,82,o),
(194,107,qs),
(194,133,o),
(138,156,qs),
(76,183,o),
(35,222,o),
(35,257,qs),
(34,306,o),
(71,339,qs),
(113,377,o),
(181,377,qs),
(231,377,o),
(267,359,qs),
(299,342,o),
(283,304,qs),
(278,292,ls),
(275,285,o),
(270,285,qs),
(268,285,o),
(265,287,qs),
(263,288,o),
(262,288,q),
(217,315,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
30 1 2 3 1 76 0 0 5 3 5 0 3 128 0 3 2 5 3 2 126 0 5 5 1 97 0 1 1 48 77 0 2 2 4 97 0 4 4 46 4 78 42 35 35 42 37 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(33,302,o),
(34,310,qs),
(43,360,ls),
(45,368,o),
(51,368,qs),
(116,368,l),
(139,492,ls),
(140,501,o),
(149,501,qs),
(153,501,ls),
(213,501,o),
(201,431,qs),
(189,368,l),
(264,368,ls),
(271,368,o),
(270,360,qs),
(261,310,ls),
(259,302,o),
(252,302,qs),
(178,302,l),
(126,9,ls),
(125,0,o),
(116,0,qs),
(60,0,ls),
(52,0,o),
(54,9,qs),
(106,302,l),
(40,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 3 2 3 133 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 40 0 78 0 0 0 27 0 26 18 50 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,182,qs),
(73,360,ls),
(75,368,o),
(83,368,qs),
(87,368,ls),
(148,368,o),
(136,299,qs),
(113,168,l),
(112,167,o),
(112,166,qs),
(109,144,o),
(109,133,qs),
(109,57,o),
(182,57,qs),
(266,57,o),
(285,161,qs),
(320,360,ls),
(322,368,o),
(329,368,qs),
(334,368,ls),
(393,368,o),
(382,299,qs),
(358,161,ls),
(343,79,o),
(250,-10,o),
(180,-10,qs),
(112,-10,o),
(37,64,o),
(37,131,qs),
(37,155,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 55 35 52 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(291,368,o),
(302,368,qs),
(359,368,ls),
(367,368,o),
(363,360,qs),
(179,8,ls),
(175,0,o),
(169,0,qs),
(104,0,ls),
(96,0,o),
(94,8,q),
(41,360,ls),
(40,368,o),
(46,368,qs),
(62,368,ls),
(92,368,o),
(118,342,o),
(122,306,qs),
(151,82,l),
(285,357,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 52 36 35 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 353;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,368,o),
(280,368,qs),
(290,368,ls),
(319,368,o),
(344,341,o),
(348,306,qs),
(369,96,l),
(493,357,l),
(497,368,o),
(510,368,qs),
(558,368,ls),
(567,368,o),
(563,360,qs),
(391,8,ls),
(387,0,o),
(379,0,qs),
(325,0,ls),
(317,0,o),
(315,8,q),
(286,269,l),
(156,8,l),
(153,0,o),
(145,0,qs),
(91,0,ls),
(81,0,o),
(80,8,qs),
(42,360,l),
(42,368,o),
(49,368,qs),
(59,368,ls),
(90,368,o),
(117,340,o),
(120,306,qs),
(138,96,l),
(266,359,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
27 14 7 3 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,0,o),
(30,0,qs),
(-27,0,ls),
(-30,0,o),
(-31,6,o),
(-28,9,qs),
(125,198,l),
(49,360,l),
(44,368,o),
(54,368,qs),
(74,368,ls),
(101,368,o),
(126,348,o),
(143,313,qs),
(176,244,l),
(264,357,ls),
(272,368,o),
(286,368,qs),
(337,368,ls),
(346,368,o),
(341,360,q),
(205,187,l),
(288,9,ls),
(292,0,o),
(282,0,qs),
(230,0,ls),
(218,0,o),
(214,11,q),
(152,140,l),
(49,11,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
22 14 7 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 53 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 349;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,368,o),
(35,368,qs),
(48,368,ls),
(79,368,o),
(105,341,o),
(109,306,qs),
(139,84,l),
(276,357,ls),
(282,368,o),
(294,368,qs),
(347,368,ls),
(354,368,o),
(350,360,qs),
(156,-9,ls),
(105,-107,o),
(40,-171,o),
(-5,-171,qs),
(-37,-171,o),
(-78,-131,o),
(-77,-99,q),
(-79,-76,o),
(-64,-76,qs),
(-59,-76,o),
(-55,-81,qs),
(-35,-106,o),
(-10,-106,qs),
(16,-106,o),
(54,-67,o),
(85,-7,q),
(28,360,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
29 22 2 1 3 9 1 0 1 2 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 44 2 78 53 52 35 34 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,66,o),
(266,57,qs),
(258,9,ls),
(256,0,o),
(249,0,qs),
(-1,0,ls),
(-9,0,o),
(-7,9,qs),
(-1,46,ls),
(2,59,o),
(17,76,qs),
(231,302,l),
(57,302,ls),
(50,302,o),
(51,310,qs),
(60,360,ls),
(61,368,o),
(69,368,qs),
(269,368,ls),
(298,368,o),
(317,344,o),
(311,313,qs),
(308,292,o),
(291,276,q),
(93,66,l),
(260,66,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 327;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,303,o),
(68,304,qs),
(113,311,o),
(122,361,qs),
(173,653,ls),
(181,696,o),
(224,696,qs),
(344,696,ls),
(356,696,o),
(353,685,qs),
(352,678,ls),
(345,635,o),
(302,635,qs),
(239,635,ls),
(234,635,o),
(233,629,qs),
(185,360,ls),
(174,299,o),
(136,276,q),
(166,252,o),
(156,192,qs),
(108,-78,l),
(108,-83,o),
(112,-83,qs),
(174,-83,ls),
(219,-83,o),
(211,-126,qs),
(209,-133,ls),
(207,-144,o),
(196,-144,qs),
(76,-144,ls),
(32,-144,o),
(40,-101,qs),
(92,191,ls),
(101,240,o),
(58,248,q),
(52,250,o),
(52,257,q),
(59,295,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
19 0 2 1 2 1 76 0 3 0 2 1 3 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 57 35 54 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 279;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-140,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
2 0 7 5 0 10 2 10 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-36,-83,o),
(8,-83,qs),
(70,-83,ls),
(75,-83,o),
(76,-78,qs),
(124,192,ls),
(135,254,o),
(173,276,q),
(143,297,o),
(154,360,qs),
(202,629,l),
(202,635,o),
(197,635,qs),
(135,635,ls),
(90,635,o),
(97,678,q),
(99,685,ls),
(101,696,o),
(111,696,qs),
(231,696,ls),
(277,696,o),
(269,653,qs),
(217,361,ls),
(209,310,o),
(251,304,qs),
(257,303,o),
(255,295,qs),
(249,257,l),
(249,250,o),
(241,248,qs),
(196,241,o),
(188,191,qs),
(136,-101,ls),
(129,-144,o),
(84,-144,qs),
(-37,-144,ls),
(-48,-144,o),
(-46,-133,qs),
(-44,-126,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
30 10 2 3 2 1 76 0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 42 35 61 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,312,qs),
(355,271,ls),
(355,251,o),
(346,243,qs),
(315,216,o),
(271,216,qs),
(242,216,o),
(201,230,qs),
(151,248,o),
(129,248,qs),
(85,248,o),
(52,217,qs),
(49,214,o),
(43,216,o),
(43,219,qs),
(43,261,ls),
(43,280,o),
(52,288,qs),
(87,316,o),
(129,316,qs),
(156,316,o),
(197,301,qs),
(247,283,o),
(271,283,qs),
(313,283,o),
(347,315,q),
(355,321,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
11 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 398;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-35,-180,qs),
(41,213,ls),
(43,221,o),
(49,221,qs),
(104,221,o),
(93,151,qs),
(40,-180,ls),
(38,-189,o),
(30,-189,qs),
(-29,-189,ls),
(-36,-189,o)
);
},
{
closed = 1;
nodes = (
(43,320,qs),
(43,343,o),
(76,377,o),
(99,377,qs),
(141,377,o),
(141,335,qs),
(141,311,o),
(109,276,o),
(86,276,qs),
(43,276,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 0 2 1 0 128 5 1 2 2 3 97 0 3 3 48 77 4 1 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 2 0 2 1 0 128 4 1 0 0 132 5 1 2 2 3 97 0 3 3 48 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
12 11 2 0 17 15 11 20 12 20 6 5 0 10 2 10 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,-68,o),
(178,-68,qs),
(144,-68,ls),
(135,-68,o),
(136,-59,qs),
(145,-8,l),
(90,-1,o),
(27,82,o),
(27,147,qs),
(27,225,o),
(72,287,qs),
(125,361,o),
(213,374,q),
(223,429,ls),
(225,438,o),
(234,438,qs),
(268,438,ls),
(275,438,o),
(274,429,qs),
(265,376,l),
(296,373,o),
(321,362,qs),
(356,345,o),
(338,307,qs),
(330,287,ls),
(327,279,o),
(323,279,qs),
(319,279,o),
(315,282,qs),
(279,305,o),
(252,307,q),
(208,56,l),
(252,60,o),
(288,91,qs),
(299,101,o),
(304,101,qs),
(313,101,o),
(313,91,qs),
(313,57,o),
(243,-1,o),
(196,-8,q),
(187,-59,ls)
);
},
{
closed = 1;
nodes = (
(157,291,o),
(103,207,o),
(103,151,qs),
(103,74,o),
(158,59,q),
(200,303,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
47 21 10 3 1 2 35 9 2 3 0 2 76 0 2 1 2 133 0 1 0 1 133 0 0 3 0 133 0 3 3 118 59 56 40 20 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,69,o),
(385,26,q),
(381,11,l),
(381,0,o),
(370,0,qs),
(14,0,ls),
(7,0,o),
(9,9,qs),
(18,61,ls),
(19,69,o),
(26,69,qs),
(107,69,l),
(160,158,o),
(160,211,qs),
(160,230,o),
(152,249,q),
(57,249,ls),
(51,249,o),
(52,258,qs),
(61,310,ls),
(63,319,o),
(70,319,qs),
(134,319,l),
(122,352,o),
(122,387,qs),
(122,460,o),
(171,509,qs),
(227,567,o),
(319,567,qs),
(383,567,o),
(433,538,qs),
(457,523,o),
(468,497,o),
(458,478,qs),
(449,461,ls),
(445,452,o),
(440,452,qs),
(436,452,o),
(427,458,qs),
(376,498,o),
(314,498,qs),
(260,498,o),
(197,439,o),
(197,389,qs),
(197,361,o),
(211,319,q),
(345,319,ls),
(389,319,o),
(381,276,qs),
(377,261,l),
(376,249,o),
(365,249,qs),
(226,249,l),
(230,227,o),
(230,214,qs),
(230,162,o),
(177,69,q),
(348,69,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
54 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 39 77 10 9 2 7 7 8 95 0 8 8 40 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 40 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 57 0 56 51 36 35 37 38 34 36 35 36 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,128,o),
(30,137,qs),
(38,178,ls),
(40,187,o),
(46,187,qs),
(188,187,l),
(193,213,l),
(180,251,l),
(57,251,ls),
(50,251,o),
(52,259,qs),
(59,301,ls),
(60,309,o),
(68,309,qs),
(159,309,l),
(76,547,ls),
(73,556,o),
(83,556,qs),
(103,556,ls),
(149,556,o),
(166,506,qs),
(242,286,l),
(420,544,l),
(427,556,o),
(438,556,qs),
(494,556,ls),
(506,556,o),
(498,544,qs),
(333,309,l),
(421,309,ls),
(427,309,o),
(427,301,q),
(420,259,ls),
(418,251,o),
(410,251,qs),
(292,251,l),
(266,213,l),
(261,187,l),
(399,187,ls),
(407,187,o),
(406,178,qs),
(398,137,ls),
(396,128,o),
(389,128,qs),
(251,128,l),
(230,9,ls),
(229,0,o),
(220,0,qs),
(163,0,ls),
(156,0,o),
(157,9,qs),
(178,128,l),
(36,128,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
30 20 2 3 4 45 1 2 3 2 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 52 0 51 47 46 35 34 52 50 35 34 35 34 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,272,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,272,ls),
(129,263,o),
(120,263,qs),
(70,263,ls),
(62,263,o)
);
},
{
closed = 1;
nodes = (
(62,-140,qs),
(62,145,ls),
(62,154,o),
(70,154,qs),
(120,154,ls),
(129,154,o),
(129,145,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 5 1 2 3 2 101 4 1 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 4 1 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 11 2 0 19 16 11 22 13 22 7 5 0 10 2 10 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,252,qs),
(302,284,o),
(234,323,qs),
(215,334,o),
(209,338,q),
(136,294,o),
(136,247,qs),
(136,222,o),
(169,190,o),
(231,154,q),
(302,202,o)
);
},
{
closed = 1;
nodes = (
(153,-38,qs),
(192,-38,o),
(243,0,o),
(243,29,qs),
(243,62,o),
(180,102,qs),
(123,139,o),
(111,149,qs),
(65,187,o),
(65,231,qs),
(65,311,o),
(169,368,q),
(132,405,o),
(132,446,qs),
(132,500,o),
(173,533,qs),
(215,567,o),
(280,567,qs),
(333,567,o),
(369,548,qs),
(401,530,o),
(384,494,qs),
(378,482,ls),
(374,475,o),
(370,475,qs),
(368,475,o),
(364,477,q),
(363,478,o),
(361,479,q),
(324,507,o),
(280,507,qs),
(247,507,o),
(206,477,o),
(206,452,qs),
(206,422,o),
(266,387,qs),
(335,345,o),
(375,302,o),
(375,268,qs),
(375,186,o),
(274,123,q),
(317,87,o),
(317,46,qs),
(317,-14,o),
(274,-54,qs),
(227,-98,o),
(154,-98,qs),
(82,-98,o),
(43,-62,qs),
(12,-33,o),
(31,-1,qs),
(38,11,ls),
(43,21,o),
(51,15,q),
(94,-38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
53 24 5 3 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 0 3 0 101 0 1 1 2 97 0 2 2 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 1 3 2 1 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
65 63 48 46 35 33 19 17 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 411;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,513,o),
(53,513,qs),
(91,513,o),
(91,476,qs),
(91,454,o),
(59,422,o),
(38,422,qs),
(2,422,o),
(1,460,qs),
(1,481,o)
);
},
{
closed = 1;
nodes = (
(164,513,o),
(185,513,qs),
(223,513,o),
(223,476,qs),
(222,454,o),
(192,422,o),
(170,422,qs),
(134,422,o),
(133,460,qs),
(133,481,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 35 35 35 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 223;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o),
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(262,423,qs),
(229,423,o),
(191,378,o),
(191,339,qs),
(191,257,o),
(262,257,qs),
(301,257,o),
(327,289,qs),
(330,293,o),
(334,293,qs),
(340,293,o),
(340,285,qs),
(339,259,o),
(288,219,o),
(256,219,qs),
(206,219,o),
(146,285,o),
(146,340,qs),
(146,394,o),
(211,463,o),
(261,463,qs),
(289,463,o),
(316,451,qs),
(334,443,o),
(333,431,qs),
(331,412,ls),
(329,400,o),
(320,406,qs),
(295,423,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 80 values pushed */
0 6 8 7 8 6 7 128 0 1 0 3 4 1 3 105 0 4 0 8 6 4 8 105 0 7 0 5 2 7 5 105 10 1 2 0 0 2 89 10 1 2 2 0 98 9 1 0 2 0 82 17 16 1 0 60 58 55 53 51 49 46 44 40 38 25 23 16 31 17 31 9 7 0 15 1 15 11 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 505;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,253,o),
(162,253,qs),
(112,253,o),
(49,323,o),
(49,379,qs),
(49,446,o),
(94,498,qs),
(146,558,o),
(219,558,qs),
(282,558,o),
(308,513,q),
(321,551,o),
(360,551,qs),
(365,551,ls),
(371,551,o),
(369,544,q),
(321,266,l),
(319,261,o),
(315,261,qs),
(264,261,ls),
(260,261,o),
(260,266,q),
(266,300,l)
);
},
{
closed = 1;
nodes = (
(286,379,o),
(286,431,qs),
(286,500,o),
(217,500,qs),
(174,500,o),
(114,431,o),
(114,382,qs),
(114,310,o),
(178,310,qs),
(225,310,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 5 1 22 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
24 23 29 27 23 32 24 32 37 34 52 18 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,39,o),
(168,39,qs),
(115,39,ls),
(101,39,o),
(97,49,q),
(25,173,ls),
(19,182,o),
(19,188,qs),
(19,193,o),
(28,202,qs),
(145,328,ls),
(155,338,o),
(167,338,qs),
(221,338,ls),
(232,338,o),
(223,329,qs),
(93,189,l),
(173,48,ls)
);
},
{
closed = 1;
nodes = (
(328,39,o),
(317,39,qs),
(263,39,ls),
(252,39,o),
(246,49,qs),
(174,173,l),
(173,175,ls),
(168,183,o),
(168,188,qs),
(168,192,o),
(177,202,qs),
(295,328,ls),
(305,338,o),
(316,338,qs),
(370,338,ls),
(381,338,o),
(372,329,qs),
(242,189,l),
(322,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 57 52 56 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 379;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,177,qs),
(40,229,ls),
(42,238,o),
(49,238,qs),
(253,238,ls),
(262,238,o),
(261,229,qs),
(251,177,ls),
(249,168,o),
(242,168,qs),
(37,168,ls),
(28,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o),
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(307,343,o),
(307,384,qs),
(307,421,o),
(256,421,qs),
(209,421,l),
(209,343,l),
(253,343,ls)
);
},
{
closed = 1;
nodes = (
(209,224,o),
(206,224,qs),
(171,224,ls),
(168,224,o),
(168,228,qs),
(168,453,ls),
(168,458,o),
(171,458,qs),
(258,458,ls),
(349,458,o),
(349,384,qs),
(349,330,o),
(298,310,q),
(352,228,ls),
(353,227,o),
(351,224,o),
(349,224,qs),
(315,224,ls),
(308,224,o),
(304,229,q),
(257,306,l),
(209,306,l),
(209,228,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 103 values pushed */
55 1 4 8 48 1 6 5 61 56 2 7 6 3 76 9 1 7 6 2 6 7 2 128 0 1 0 3 8 1 3 105 0 8 0 4 5 8 4 105 12 1 5 0 6 7 5 6 103 11 1 2 0 0 2 89 11 1 2 2 0 97 10 1 0 2 0 81 32 32 17 16 1 0 59 58 53 51 44 42 40 39 32 38 32 37 35 33 25 23 16 31 17 31 9 7 0 15 1 15 13 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 505;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,439,qs),
(10,478,ls),
(11,486,o),
(19,486,qs),
(226,486,ls),
(235,486,o),
(234,478,qs),
(226,439,l),
(226,431,o),
(216,431,qs),
(9,431,ls),
(1,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
3 1 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 233;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,429,o),
(23,475,qs),
(23,522,o),
(82,581,o),
(129,581,qs),
(175,581,o),
(234,522,o),
(234,475,qs),
(234,429,o),
(174,369,o),
(129,369,qs),
(82,369,o)
);
},
{
closed = 1;
nodes = (
(183,449,o),
(183,475,qs),
(183,501,o),
(152,534,o),
(129,534,qs),
(105,534,o),
(74,501,o),
(74,475,qs),
(74,449,o),
(105,414,o),
(129,414,qs),
(152,414,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 257;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,267,o),
(37,276,qs),
(37,324,ls),
(37,333,o),
(45,333,qs),
(168,333,l),
(168,470,ls),
(168,479,o),
(176,479,qs),
(235,479,o),
(235,418,qs),
(235,333,l),
(358,333,ls),
(366,333,o),
(366,324,qs),
(366,276,ls),
(366,267,o),
(358,267,qs),
(235,267,l),
(235,130,ls),
(235,122,o),
(227,122,qs),
(176,122,ls),
(168,122,o),
(168,130,qs),
(168,267,l),
(45,267,ls)
);
},
{
closed = 1;
nodes = (
(37,9,qs),
(37,57,ls),
(37,66,o),
(45,66,qs),
(315,66,ls),
(366,66,o),
(366,18,qs),
(366,9,ls),
(366,0,o),
(358,0,qs),
(45,0,ls),
(37,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 105 0 7 7 6 95 9 1 6 6 40 6 78 29 27 0 0 35 32 27 38 29 38 0 26 0 25 34 34 35 34 50 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,286,o),
(266,254,qs),
(262,238,l),
(262,233,o),
(254,233,qs),
(39,233,ls),
(35,233,o),
(35,238,q),
(44,287,o),
(97,351,o),
(157,385,qs),
(208,414,o),
(239,447,o),
(239,473,qs),
(239,510,o),
(189,510,qs),
(149,510,o),
(102,484,qs),
(94,479,o),
(92,487,qs),
(87,503,ls),
(82,527,o),
(111,542,qs),
(154,563,o),
(202,563,qs),
(247,563,o),
(303,518,o),
(303,481,qs),
(303,440,o),
(274,408,qs),
(252,384,o),
(191,349,qs),
(125,311,o),
(116,286,q),
(234,286,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 34 0 33 41 39 40 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 288;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,278,qs),
(231,278,o),
(231,336,qs),
(231,374,o),
(168,374,qs),
(141,374,ls),
(110,374,o),
(116,398,q),
(118,419,l),
(120,426,o),
(126,426,qs),
(178,426,ls),
(247,426,o),
(247,475,qs),
(247,512,o),
(193,512,qs),
(152,512,o),
(107,486,qs),
(98,481,o),
(96,491,qs),
(92,507,ls),
(85,530,o),
(116,544,qs),
(160,563,o),
(202,563,qs),
(303,563,o),
(303,491,qs),
(303,427,o),
(238,403,q),
(287,387,o),
(287,341,qs),
(287,290,o),
(216,227,o),
(157,227,qs),
(113,227,o),
(49,273,o),
(49,305,qs),
(49,325,o),
(62,325,qs),
(65,325,o),
(70,319,q),
(94,278,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
12 1 5 4 1 76 0 0 5 6 5 0 6 128 0 4 0 5 0 4 5 105 0 3 3 2 97 0 2 2 55 77 0 6 6 1 97 0 1 1 56 1 78 34 52 34 39 39 35 33 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,516,o),
(111,516,qs),
(175,516,ls),
(179,516,o),
(181,509,o),
(177,507,q),
(87,441,ls),
(72,431,o),
(57,431,qs),
(6,431,ls),
(1,431,o),
(0,437,o),
(3,439,qs),
(86,506,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 52 50 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 181;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,0,o),
(210,0,qs),
(177,0,ls),
(171,0,o),
(172,8,qs),
(210,221,l),
(141,224,o),
(67,296,o),
(67,360,qs),
(67,444,o),
(119,496,qs),
(178,556,o),
(285,556,qs),
(357,556,ls),
(393,556,o),
(419,522,o),
(413,483,qs),
(328,8,ls),
(327,0,o),
(319,0,qs),
(286,0,ls),
(280,0,o),
(280,8,q),
(368,504,l),
(306,504,l),
(219,8,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 1 3 1 76 0 3 0 1 0 3 1 128 0 0 0 2 95 0 2 2 39 77 4 1 1 1 40 1 78 50 21 52 50 16 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,273,qs),
(35,296,o),
(68,330,o),
(91,330,qs),
(132,330,o),
(132,288,qs),
(132,264,o),
(100,229,o),
(78,229,qs),
(35,229,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 6 4 0 9 1 9 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 146;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(7,-89,qs),
(73,-6,ls),
(83,5,o),
(101,5,qs),
(135,5,ls),
(143,5,o),
(137,-3,qs),
(83,-87,ls),
(76,-98,o),
(58,-98,qs),
(10,-98,ls),
(0,-98,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 134;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,474,o),
(82,481,q),
(90,527,l),
(93,537,o),
(101,539,qs),
(136,551,ls),
(153,556,o),
(166,556,qs),
(190,556,ls),
(220,556,o),
(214,523,qs),
(164,241,ls),
(163,233,o),
(154,233,qs),
(109,233,ls),
(101,233,o),
(103,241,qs),
(148,497,l),
(87,476,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
16 1 0 1 1 76 0 1 1 55 77 0 0 0 56 0 78 51 50 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,322,o),
(49,378,qs),
(49,448,o),
(94,499,qs),
(146,558,o),
(224,558,qs),
(281,558,o),
(347,496,o),
(347,442,qs),
(347,370,o),
(305,317,qs),
(254,253,o),
(171,253,qs),
(116,253,o)
);
},
{
closed = 1;
nodes = (
(283,379,o),
(283,431,qs),
(283,500,o),
(215,500,qs),
(172,500,o),
(114,433,o),
(114,382,qs),
(114,312,o),
(177,312,qs),
(223,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
5 1 2 4 1 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 15 14 1 0 20 18 14 23 15 23 8 6 0 13 1 13 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,338,o),
(201,338,qs),
(255,338,ls),
(268,338,o),
(273,328,qs),
(345,204,l),
(345,203,o),
(346,202,q),
(351,193,o),
(351,189,qs),
(351,184,o),
(341,175,q),
(224,49,ls),
(214,39,o),
(202,39,qs),
(149,39,ls),
(138,39,o),
(147,48,qs),
(276,188,l),
(196,329,l)
);
},
{
closed = 1;
nodes = (
(42,338,o),
(52,338,qs),
(106,338,ls),
(118,338,o),
(124,328,qs),
(195,204,ls),
(201,195,o),
(201,189,qs),
(201,184,o),
(192,175,qs),
(75,49,ls),
(65,39,o),
(54,39,qs),
(0,39,ls),
(-10,39,o),
(-3,48,q),
(127,188,l),
(47,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 56 52 58 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 379;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,475,o),
(82,481,q),
(90,527,l),
(93,537,o),
(101,539,qs),
(136,551,ls),
(152,556,o),
(166,556,qs),
(190,556,ls),
(220,556,o),
(214,523,qs),
(164,241,ls),
(163,233,o),
(154,233,qs),
(109,233,ls),
(101,233,o),
(103,241,qs),
(148,497,l),
(87,476,l)
);
},
{
closed = 1;
nodes = (
(89,9,qs),
(469,547,ls),
(476,556,o),
(484,556,qs),
(493,556,ls),
(516,556,o),
(522,522,o),
(503,496,qs),
(159,9,l),
(154,0,o),
(145,0,qs),
(91,0,ls),
(82,0,o)
);
},
{
closed = 1;
nodes = (
(318,73,o),
(319,79,qs),
(324,106,l),
(327,115,o),
(335,126,q),
(493,312,l),
(501,323,o),
(516,323,qs),
(551,323,ls),
(580,323,o),
(575,295,qs),
(545,124,l),
(566,124,ls),
(593,124,o),
(588,98,qs),
(585,79,l),
(583,73,o),
(577,73,qs),
(536,73,l),
(524,6,ls),
(523,0,o),
(517,0,qs),
(469,0,ls),
(465,0,o),
(465,6,q),
(478,73,l),
(323,73,ls)
);
},
{
closed = 1;
nodes = (
(511,267,l),
(389,124,l),
(486,124,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 15 values pushed */
18 16 2 7 1 60 1 0 7 33 1 2 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 1 0 1 7 0 128 4 10 2 2 5 5 2 113 3 1 1 0 0 6 1 0 105 12 9 2 6 5 5 6 89 12 9 2 6 6 5 96 11 8 2 5 6 5 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 1 0 1 7 0 128 4 10 2 2 5 2 134 3 1 1 0 0 6 1 0 105 12 9 2 6 5 5 6 89 12 9 2 6 6 5 96 11 8 2 5 6 5 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
59 59 32 32 21 19 59 61 59 61 32 58 32 57 51 48 46 44 40 39 36 35 28 25 19 31 21 31 51 50 13 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 648;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,54,o),
(605,22,qs),
(603,6,l),
(601,0,o),
(595,0,qs),
(379,0,ls),
(374,0,o),
(375,6,qs),
(383,54,o),
(437,119,o),
(497,152,qs),
(548,181,o),
(580,215,o),
(580,241,qs),
(580,277,o),
(529,277,qs),
(488,277,o),
(443,252,qs),
(433,246,o),
(431,254,qs),
(428,271,ls),
(422,294,o),
(450,309,qs),
(495,331,o),
(542,331,qs),
(588,331,o),
(643,286,o),
(643,248,qs),
(643,208,o),
(614,175,qs),
(592,151,o),
(531,117,qs),
(464,79,o),
(455,54,q),
(575,54,ls)
);
},
{
closed = 1;
nodes = (
(82,475,o),
(82,481,q),
(90,527,l),
(93,537,o),
(101,539,qs),
(136,551,ls),
(152,556,o),
(166,556,qs),
(190,556,ls),
(220,556,o),
(214,523,qs),
(164,241,ls),
(163,233,o),
(154,233,qs),
(109,233,ls),
(101,233,o),
(103,241,qs),
(148,497,l),
(87,476,l)
);
},
{
closed = 1;
nodes = (
(89,9,qs),
(469,547,ls),
(476,556,o),
(484,556,qs),
(493,556,ls),
(516,556,o),
(522,522,o),
(503,496,qs),
(159,9,l),
(154,0,o),
(145,0,qs),
(91,0,ls),
(82,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 68 values pushed */
53 51 2 0 5 1 76 0 0 0 1 4 0 1 106 7 1 5 0 4 3 5 4 105 8 1 3 2 2 3 87 8 1 3 3 2 97 9 6 2 2 3 2 81 56 54 0 0 63 60 54 66 56 66 46 43 40 37 0 34 0 33 40 39 40 10 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 703;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,9,q),
(538,547,ls),
(544,556,o),
(553,556,qs),
(562,556,ls),
(585,556,o),
(590,522,o),
(572,496,qs),
(228,9,ls),
(222,0,o),
(214,0,qs),
(159,0,ls),
(149,0,o)
);
},
{
closed = 1;
nodes = (
(386,73,o),
(388,79,q),
(393,106,ls),
(395,115,o),
(403,126,q),
(562,312,l),
(569,323,o),
(585,323,qs),
(619,323,ls),
(649,323,o),
(643,295,qs),
(613,124,l),
(634,124,ls),
(660,124,o),
(656,98,qs),
(653,79,ls),
(652,73,o),
(645,73,qs),
(605,73,l),
(592,6,ls),
(591,0,o),
(586,0,qs),
(538,0,ls),
(532,0,o),
(534,6,q),
(546,73,l),
(392,73,ls)
);
},
{
closed = 1;
nodes = (
(154,278,qs),
(231,278,o),
(231,336,qs),
(231,374,o),
(168,374,qs),
(141,374,ls),
(110,374,o),
(116,398,q),
(118,419,l),
(120,426,o),
(126,426,qs),
(178,426,ls),
(247,426,o),
(247,475,qs),
(247,512,o),
(193,512,qs),
(152,512,o),
(107,486,qs),
(98,481,o),
(96,491,qs),
(92,507,ls),
(85,530,o),
(116,544,qs),
(160,563,o),
(202,563,qs),
(303,563,o),
(303,491,qs),
(303,427,o),
(238,403,q),
(287,387,o),
(287,341,qs),
(287,290,o),
(216,227,o),
(157,227,qs),
(113,227,o),
(49,273,o),
(49,305,qs),
(49,325,o),
(62,325,qs),
(65,325,o),
(70,319,q),
(94,278,o)
);
},
{
closed = 1;
nodes = (
(580,267,l),
(457,124,l),
(555,124,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
52 1 12 11 83 1 8 13 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
7 1 5 12 13 12 5 13 128 2 15 2 0 3 3 0 113 9 1 1 0 10 11 1 10 105 0 11 0 12 5 11 12 105 0 13 0 8 4 13 8 105 17 14 2 4 3 3 4 89 17 14 2 4 4 3 98 16 6 2 3 4 3 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
7 1 5 12 13 12 5 13 128 2 15 2 0 3 0 134 9 1 1 0 10 11 1 10 105 0 11 0 12 5 11 12 105 0 13 0 8 4 13 8 105 17 14 2 4 3 3 4 89 17 14 2 4 4 3 98 16 6 2 3 4 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 1 9 10 9 1 10 128 7 1 5 12 13 12 5 13 128 2 15 2 0 3 0 134 0 9 0 10 11 9 10 105 0 11 0 12 5 11 12 105 0 13 0 8 4 13 8 105 17 14 2 4 3 3 4 89 17 14 2 4 4 3 98 16 6 2 3 4 3 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
82 82 13 13 2 0 82 84 82 84 81 79 77 74 70 68 66 64 57 55 48 46 43 41 13 39 13 38 32 29 27 25 22 20 17 15 9 6 0 12 2 12 18 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 717;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,36,qs),
(22,70,o),
(94,120,qs),
(117,136,o),
(124,141,qs),
(146,156,o),
(150,184,qs),
(155,213,ls),
(157,221,o),
(164,221,qs),
(176,221,ls),
(212,221,o),
(212,184,qs),
(212,155,o),
(193,130,qs),
(177,109,o),
(131,75,qs),
(73,33,o),
(33,-22,o),
(33,-59,qs),
(33,-130,o),
(118,-130,qs),
(188,-130,o),
(252,-91,q),
(261,-84,o),
(265,-84,qs),
(270,-84,o),
(272,-93,qs),
(278,-137,ls),
(280,-146,o),
(270,-151,qs),
(187,-200,o),
(110,-200,qs),
(39,-200,o),
(-44,-127,o),
(-44,-64,qs),
(-44,-11,o)
);
},
{
closed = 1;
nodes = (
(158,320,qs),
(158,343,o),
(191,377,o),
(214,377,qs),
(255,377,o),
(255,335,qs),
(255,311,o),
(223,276,o),
(200,276,qs),
(158,276,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
0 3 4 1 4 3 1 128 0 1 2 4 1 2 126 0 2 0 0 2 0 102 6 1 4 4 5 97 0 5 5 48 4 78 38 37 43 41 37 46 38 46 57 34 37 34 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(356,608,o),
(352,608,qs),
(301,608,ls),
(285,608,o),
(275,619,qs),
(208,684,ls),
(205,687,o),
(209,693,o),
(213,693,qs),
(276,693,ls),
(289,693,o),
(298,684,qs),
(358,617,ls),
(360,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
1 1 0 3 1 76 0 5 0 6 3 5 6 105 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 35 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(304,693,o),
(317,693,qs),
(380,693,ls),
(385,693,o),
(386,687,o),
(383,684,q),
(292,619,ls),
(278,608,o),
(262,608,qs),
(211,608,ls),
(207,608,o),
(205,614,o),
(209,617,qs),
(292,684,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 36 33 29 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(235,608,o),
(217,608,qs),
(169,608,ls),
(165,608,o),
(164,615,o),
(167,617,qs),
(245,684,ls),
(256,693,o),
(272,693,qs),
(323,693,ls),
(337,693,o),
(345,684,qs),
(400,617,l),
(406,608,o),
(395,608,qs),
(352,608,ls),
(335,608,o),
(326,620,qs),
(294,663,l),
(247,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
1 1 0 3 1 76 0 6 5 6 133 7 1 5 3 5 133 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 42 39 35 32 29 26 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(329,608,qs),
(310,608,o),
(277,624,qs),
(250,636,o),
(240,636,qs),
(224,636,o),
(218,617,qs),
(215,607,o),
(207,607,qs),
(173,607,ls),
(165,607,o),
(167,616,qs),
(184,691,o),
(240,691,qs),
(260,691,o),
(294,675,qs),
(321,662,o),
(333,662,qs),
(348,662,o),
(356,679,qs),
(360,689,o),
(368,689,qs),
(402,689,ls),
(409,689,o),
(408,681,q),
(388,608,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
1 1 0 3 1 76 7 1 5 0 9 8 5 9 105 0 6 10 1 8 3 6 8 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 49 47 45 43 41 38 36 34 32 30 28 25 22 19 16 13 9 6 4 3 0 2 0 2 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(207,691,o),
(228,691,qs),
(266,691,o),
(266,654,qs),
(266,631,o),
(234,600,o),
(213,600,qs),
(177,600,o),
(176,638,qs),
(176,659,o)
);
},
{
closed = 1;
nodes = (
(339,691,o),
(360,691,qs),
(398,691,o),
(398,654,qs),
(397,631,o),
(367,600,o),
(345,600,qs),
(309,600,o),
(308,638,qs),
(308,659,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 42 40 37 35 32 30 27 25 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,463,l),
(159,221,l),
(330,221,l)
);
},
{
closed = 1;
nodes = (
(43,0,o),
(33,0,qs),
(-27,0,ls),
(-36,0,o),
(-31,9,qs),
(259,548,ls),
(264,556,o),
(272,556,qs),
(291,556,ls),
(320,556,o),
(346,532,o),
(352,500,qs),
(444,9,ls),
(446,0,o),
(436,0,qs),
(381,0,ls),
(369,0,o),
(367,12,qs),
(342,153,l),
(123,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(272,737,o),
(304,737,qs),
(330,737,o),
(364,704,o),
(364,679,qs),
(363,645,o),
(317,597,o),
(285,597,qs),
(258,597,o),
(224,632,o),
(224,659,qs),
(225,691,o)
);
},
{
closed = 1;
nodes = (
(288,633,qs),
(327,633,o),
(326,674,qs),
(326,702,o),
(300,702,qs),
(284,702,o),
(262,678,o),
(262,661,qs),
(262,633,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
1 1 0 3 1 76 0 6 0 7 8 6 7 105 0 8 0 5 3 8 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 44 42 40 38 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,0,o),
(29,0,qs),
(-31,0,ls),
(-41,0,o),
(-34,9,qs),
(343,547,l),
(348,556,o),
(360,556,qs),
(645,556,ls),
(687,556,o),
(679,513,qs),
(676,496,ls),
(675,485,o),
(665,485,qs),
(449,485,l),
(418,312,l),
(580,312,ls),
(625,312,o),
(618,268,qs),
(615,252,ls),
(613,242,o),
(601,242,qs),
(406,242,l),
(375,71,l),
(565,71,ls),
(610,71,o),
(602,27,qs),
(599,11,ls),
(598,0,o),
(585,0,qs),
(297,0,ls),
(289,0,o),
(291,9,qs),
(317,153,l),
(145,153,l),
(49,12,ls)
);
},
{
closed = 1;
nodes = (
(375,486,l),
(191,221,l),
(329,221,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
37 1 5 6 1 76 0 4 0 3 8 4 3 103 9 1 8 0 0 2 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 95 7 1 1 1 40 1 78 36 36 36 38 36 38 51 51 33 35 33 35 50 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(222,-104,o),
(205,-104,qs),
(157,-104,ls),
(148,-104,o),
(155,-96,qs),
(224,-9,l),
(149,1,o),
(105,54,qs),
(54,115,o),
(54,222,qs),
(54,353,o),
(132,452,qs),
(223,567,o),
(361,567,qs),
(422,567,o),
(485,538,qs),
(528,516,o),
(511,477,qs),
(502,456,ls),
(498,446,o),
(491,446,qs),
(486,446,o),
(478,452,qs),
(421,495,o),
(351,495,qs),
(263,495,o),
(201,425,qs),
(131,346,o),
(131,224,qs),
(131,61,o),
(272,61,qs),
(367,61,o),
(435,132,qs),
(445,142,o),
(452,142,qs),
(463,142,o),
(463,128,qs),
(463,96,o),
(424,56,qs),
(369,-1,o),
(285,-10,q),
(231,-92,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
35 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 101 0 2 2 4 97 0 4 4 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 2 3 4 2 105 0 1 5 5 1 89 0 1 1 5 97 0 5 1 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 37 34 36 34 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,71,o),
(340,27,qs),
(337,11,ls),
(334,0,o),
(324,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(381,556,ls),
(424,556,o),
(416,513,qs),
(414,496,ls),
(412,485,o),
(401,485,qs),
(186,485,l),
(155,312,l),
(319,312,ls),
(362,312,o),
(355,268,qs),
(353,252,l),
(350,242,o),
(340,242,qs),
(143,242,l),
(113,71,l),
(304,71,ls)
);
},
{
closed = 1;
nodes = (
(315,608,o),
(311,608,qs),
(260,608,ls),
(244,608,o),
(234,619,qs),
(166,684,l),
(164,687,o),
(168,693,o),
(172,693,qs),
(235,693,ls),
(248,693,o),
(257,684,qs),
(316,617,l),
(319,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 6 0 7 3 6 7 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 39 37 32 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,71,o),
(340,27,qs),
(337,11,ls),
(334,0,o),
(324,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(381,556,ls),
(424,556,o),
(416,513,qs),
(414,496,ls),
(412,485,o),
(401,485,qs),
(186,485,l),
(155,312,l),
(319,312,ls),
(362,312,o),
(355,268,qs),
(353,252,l),
(350,242,o),
(340,242,qs),
(143,242,l),
(113,71,l),
(304,71,ls)
);
},
{
closed = 1;
nodes = (
(283,693,o),
(295,693,qs),
(359,693,ls),
(363,693,o),
(365,687,o),
(361,684,qs),
(271,619,ls),
(257,608,o),
(241,608,qs),
(190,608,ls),
(186,608,o),
(184,614,o),
(188,617,qs),
(270,684,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 40 37 33 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,71,o),
(340,27,qs),
(337,11,ls),
(334,0,o),
(324,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(381,556,ls),
(424,556,o),
(416,513,qs),
(414,496,ls),
(412,485,o),
(401,485,qs),
(186,485,l),
(155,312,l),
(319,312,ls),
(362,312,o),
(355,268,qs),
(353,252,l),
(350,242,o),
(340,242,qs),
(143,242,l),
(113,71,l),
(304,71,ls)
);
},
{
closed = 1;
nodes = (
(202,608,o),
(184,608,qs),
(136,608,ls),
(132,608,o),
(131,615,o),
(134,617,qs),
(213,684,ls),
(223,693,o),
(239,693,qs),
(290,693,ls),
(304,693,o),
(312,684,qs),
(368,617,l),
(374,608,o),
(362,608,qs),
(319,608,ls),
(302,608,o),
(293,620,qs),
(261,663,l),
(214,620,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 7 6 7 133 8 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 46 43 39 36 33 30 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,71,o),
(340,27,qs),
(337,11,ls),
(334,0,o),
(324,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(381,556,ls),
(424,556,o),
(416,513,qs),
(414,496,ls),
(412,485,o),
(401,485,qs),
(186,485,l),
(155,312,l),
(319,312,ls),
(362,312,o),
(355,268,qs),
(353,252,l),
(350,242,o),
(340,242,qs),
(143,242,l),
(113,71,l),
(304,71,ls)
);
},
{
closed = 1;
nodes = (
(179,691,o),
(200,691,qs),
(238,691,o),
(238,654,qs),
(238,631,o),
(207,600,o),
(185,600,qs),
(149,600,o),
(148,638,qs),
(148,659,o)
);
},
{
closed = 1;
nodes = (
(311,691,o),
(332,691,qs),
(370,691,o),
(370,654,qs),
(369,631,o),
(339,600,o),
(317,600,qs),
(281,600,o),
(280,638,qs),
(280,659,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 46 44 41 39 36 34 31 29 0 27 0 26 51 51 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(139,556,ls),
(198,556,o),
(185,485,qs),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o)
);
},
{
closed = 1;
nodes = (
(214,608,o),
(210,608,qs),
(159,608,ls),
(143,608,o),
(133,619,qs),
(65,684,l),
(63,687,o),
(67,693,o),
(71,693,qs),
(134,693,ls),
(146,693,o),
(156,684,q),
(215,617,l),
(218,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 0 3 1 2 3 105 0 1 1 39 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(139,556,ls),
(198,556,o),
(185,485,qs),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o)
);
},
{
closed = 1;
nodes = (
(181,693,o),
(194,693,qs),
(258,693,ls),
(262,693,o),
(263,687,o),
(260,684,q),
(169,619,ls),
(155,608,o),
(139,608,qs),
(88,608,ls),
(84,608,o),
(82,614,o),
(86,617,qs),
(169,684,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 4 1 0 0 40 0 78 2 0 24 21 17 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,9,qs),
(134,547,ls),
(135,556,o),
(143,556,qs),
(150,556,ls),
(209,556,o),
(196,485,qs),
(112,9,ls),
(111,0,o),
(103,0,qs),
(45,0,ls),
(37,0,o)
);
},
{
closed = 1;
nodes = (
(120,608,o),
(101,608,qs),
(54,608,ls),
(50,608,o),
(48,615,o),
(52,617,q),
(130,684,ls),
(141,693,o),
(156,693,qs),
(208,693,ls),
(222,693,o),
(230,684,qs),
(285,617,l),
(291,608,o),
(280,608,qs),
(236,608,ls),
(220,608,o),
(211,620,qs),
(179,663,l),
(131,620,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 2 3 133 4 1 2 1 2 133 0 1 1 39 77 5 1 0 0 40 0 78 2 0 30 27 23 20 17 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(139,556,ls),
(198,556,o),
(185,485,qs),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o)
);
},
{
closed = 1;
nodes = (
(84,691,o),
(105,691,qs),
(144,691,o),
(144,654,qs),
(143,631,o),
(112,600,o),
(90,600,qs),
(55,600,o),
(54,638,qs),
(54,659,o)
);
},
{
closed = 1;
nodes = (
(216,691,o),
(238,691,qs),
(275,691,o),
(275,654,qs),
(275,631,o),
(244,600,o),
(223,600,qs),
(187,600,o),
(186,638,qs),
(186,659,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 6 1 0 0 40 0 78 2 0 30 28 25 23 20 18 15 13 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,244,o),
(26,253,qs),
(35,307,ls),
(36,315,o),
(45,315,qs),
(96,315,l),
(136,547,ls),
(138,556,o),
(146,556,qs),
(297,556,ls),
(396,556,o),
(456,505,qs),
(525,447,o),
(525,339,qs),
(525,199,o),
(454,109,qs),
(368,0,o),
(211,0,qs),
(48,0,ls),
(40,0,o),
(42,9,qs),
(83,244,l),
(32,244,ls)
);
},
{
closed = 1;
nodes = (
(318,71,o),
(378,132,qs),
(447,202,o),
(447,330,qs),
(447,485,o),
(281,485,qs),
(199,485,l),
(169,315,l),
(293,315,ls),
(337,315,o),
(329,272,qs),
(326,256,ls),
(324,244,o),
(313,244,qs),
(157,244,l),
(126,71,l),
(220,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 2 4 8 2 3 7 2 3 105 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 23 23 0 0 23 39 23 38 34 32 31 29 26 24 0 22 0 21 34 54 50 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(440,556,o),
(447,556,qs),
(453,556,ls),
(511,556,o),
(499,485,qs),
(415,9,ls),
(414,0,o),
(406,0,qs),
(358,0,ls),
(344,0,o),
(339,13,qs),
(172,412,l),
(101,9,ls),
(100,0,o),
(92,0,qs),
(34,0,ls),
(26,0,o),
(28,9,qs),
(123,547,ls),
(124,556,o),
(132,556,qs),
(149,556,ls),
(174,556,o),
(198,538,o),
(209,511,qs),
(366,138,l),
(438,547,ls)
);
},
{
closed = 1;
nodes = (
(345,608,qs),
(327,608,o),
(294,624,qs),
(267,636,o),
(256,636,qs),
(241,636,o),
(234,617,qs),
(231,607,o),
(224,607,qs),
(190,607,ls),
(182,607,o),
(184,616,qs),
(201,691,o),
(256,691,qs),
(277,691,o),
(311,675,qs),
(338,662,o),
(350,662,qs),
(365,662,o),
(373,679,q),
(376,689,o),
(385,689,qs),
(419,689,ls),
(426,689,o),
(425,681,q),
(405,608,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
14 1 1 0 1 76 6 1 4 0 8 7 4 8 105 0 5 9 1 7 0 5 7 106 3 1 0 0 39 77 2 1 1 1 40 1 78 52 50 34 50 34 34 51 51 52 51 51 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
},
{
closed = 1;
nodes = (
(416,608,o),
(412,608,qs),
(361,608,ls),
(345,608,o),
(335,619,qs),
(267,684,l),
(265,687,o),
(269,693,o),
(273,693,qs),
(336,693,ls),
(348,693,o),
(358,684,q),
(417,617,l),
(420,615,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 0 5 1 4 5 105 0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 4 0 5 1 4 5 105 0 1 0 2 3 1 2 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 35 36 38 38 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
},
{
closed = 1;
nodes = (
(358,693,o),
(370,693,qs),
(434,693,ls),
(438,693,o),
(440,687,o),
(436,684,qs),
(346,619,ls),
(331,608,o),
(316,608,qs),
(265,608,ls),
(260,608,o),
(259,615,o),
(262,617,qs),
(345,684,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 1 4 133 0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 5 4 5 133 0 4 1 4 133 0 1 0 2 3 1 2 106 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
52 51 36 38 38 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
},
{
closed = 1;
nodes = (
(288,608,o),
(270,608,qs),
(223,608,ls),
(219,608,o),
(217,615,o),
(221,617,q),
(299,684,ls),
(310,693,o),
(325,693,qs),
(377,693,ls),
(390,693,o),
(398,684,qs),
(454,617,l),
(460,608,o),
(448,608,qs),
(405,608,ls),
(388,608,o),
(380,620,qs),
(347,663,l),
(300,620,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 1 0 2 3 1 2 106 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
52 51 51 36 38 38 35 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
},
{
closed = 1;
nodes = (
(385,608,qs),
(366,608,o),
(333,624,qs),
(306,636,o),
(296,636,qs),
(280,636,o),
(273,617,qs),
(270,607,o),
(263,607,qs),
(229,607,ls),
(221,607,o),
(223,616,qs),
(240,691,o),
(296,691,qs),
(316,691,o),
(350,675,qs),
(377,662,o),
(389,662,qs),
(404,662,o),
(412,679,qs),
(416,689,o),
(424,689,qs),
(458,689,ls),
(465,689,o),
(464,681,q),
(444,608,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
6 1 4 0 8 7 4 8 105 0 5 9 1 7 1 5 7 106 0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 1 4 0 8 7 4 8 105 0 5 9 1 7 1 5 7 106 0 1 0 2 3 1 2 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
53 51 34 50 34 34 50 36 38 38 35 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,qs),
(226,567,o),
(357,567,qs),
(442,567,o),
(495,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(487,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o)
);
},
{
closed = 1;
nodes = (
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(265,495,o),
(204,424,qs),
(131,341,o),
(131,219,qs),
(132,62,o)
);
},
{
closed = 1;
nodes = (
(264,691,o),
(285,691,qs),
(323,691,o),
(323,654,qs),
(323,631,o),
(292,600,o),
(270,600,qs),
(234,600,o),
(233,638,qs),
(233,659,o)
);
},
{
closed = 1;
nodes = (
(396,691,o),
(417,691,qs),
(455,691,o),
(455,654,qs),
(455,631,o),
(424,600,o),
(402,600,qs),
(367,600,o),
(366,638,qs),
(366,659,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 1 5 4 105 0 2 2 1 97 0 1 1 39 77 0 3 3 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
7 1 5 6 1 4 1 5 4 105 0 1 0 2 3 1 2 105 0 3 3 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 35 35 34 36 38 38 35 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,392,o),
(48,398,q),
(69,418,o),
(104,416,o),
(127,393,qs),
(204,317,l),
(310,422,ls),
(315,427,o),
(320,422,qs),
(351,392,ls),
(357,386,o),
(351,379,qs),
(247,274,l),
(358,162,ls),
(364,156,o),
(358,150,qs),
(337,129,o),
(303,131,o),
(278,155,qs),
(203,232,l),
(98,126,ls),
(92,120,o),
(86,126,qs),
(55,156,l),
(48,161,o),
(55,168,qs),
(161,274,l),
(49,386,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 14 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 29 25 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,495,o),
(346,495,qs),
(266,495,o),
(204,424,qs),
(132,341,o),
(132,219,qs),
(132,164,o),
(150,127,q),
(425,474,l)
);
},
{
closed = 1;
nodes = (
(218,62,o),
(263,62,qs),
(351,62,o),
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,397,o),
(463,429,q),
(188,82,l)
);
},
{
closed = 1;
nodes = (
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o),
(134,451,qs),
(226,567,o),
(356,567,qs),
(443,567,o),
(496,515,qs),
(557,456,o),
(557,347,qs),
(557,214,o),
(488,114,qs),
(401,-10,o),
(259,-10,qs),
(170,-10,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 8 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
19 18 27 25 18 33 19 33 39 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,47,qs),
(59,112,o),
(78,223,qs),
(135,547,ls),
(137,556,o),
(145,556,qs),
(151,556,ls),
(210,556,o),
(198,485,qs),
(151,221,ls),
(138,145,o),
(189,61,o),
(248,61,qs),
(364,61,o),
(391,213,qs),
(450,547,ls),
(451,556,o),
(459,556,qs),
(466,556,ls),
(524,556,o),
(512,485,qs),
(462,201,ls),
(445,107,o),
(395,52,qs),
(337,-10,o),
(243,-10,qs),
(158,-10,o)
);
},
{
closed = 1;
nodes = (
(374,608,o),
(370,608,qs),
(318,608,ls),
(303,608,o),
(293,619,qs),
(225,684,ls),
(222,687,o),
(226,693,o),
(231,693,qs),
(293,693,ls),
(306,693,o),
(316,684,q),
(375,617,l),
(378,615,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 0 5 1 4 5 105 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 38 36 31 29 21 18 14 12 9 6 0 26 1 26 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,47,qs),
(59,112,o),
(78,223,qs),
(135,547,ls),
(137,556,o),
(145,556,qs),
(151,556,ls),
(210,556,o),
(198,485,qs),
(151,221,ls),
(138,145,o),
(189,61,o),
(248,61,qs),
(364,61,o),
(391,213,qs),
(450,547,ls),
(451,556,o),
(459,556,qs),
(466,556,ls),
(524,556,o),
(512,485,qs),
(462,201,ls),
(445,107,o),
(395,52,qs),
(337,-10,o),
(243,-10,qs),
(158,-10,o)
);
},
{
closed = 1;
nodes = (
(327,693,o),
(340,693,qs),
(403,693,ls),
(408,693,o),
(409,687,o),
(406,684,q),
(315,619,ls),
(301,608,o),
(285,608,qs),
(234,608,ls),
(230,608,o),
(228,614,o),
(232,617,qs),
(315,684,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 39 36 32 29 21 18 14 12 9 6 0 26 1 26 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,47,qs),
(59,112,o),
(78,223,qs),
(135,547,ls),
(137,556,o),
(145,556,qs),
(151,556,ls),
(210,556,o),
(198,485,qs),
(151,221,ls),
(138,145,o),
(189,61,o),
(248,61,qs),
(364,61,o),
(391,213,qs),
(450,547,ls),
(451,556,o),
(459,556,qs),
(466,556,ls),
(524,556,o),
(512,485,qs),
(462,201,ls),
(445,107,o),
(395,52,qs),
(337,-10,o),
(243,-10,qs),
(158,-10,o)
);
},
{
closed = 1;
nodes = (
(262,608,o),
(243,608,qs),
(196,608,ls),
(192,608,o),
(191,615,o),
(194,617,qs),
(272,684,ls),
(283,693,o),
(298,693,qs),
(350,693,ls),
(364,693,o),
(372,684,qs),
(427,617,l),
(433,608,o),
(422,608,qs),
(378,608,ls),
(362,608,o),
(353,620,qs),
(321,663,l),
(273,620,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 45 42 38 35 32 29 21 18 14 12 9 6 0 26 1 26 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,47,qs),
(59,112,o),
(78,223,qs),
(135,547,ls),
(137,556,o),
(145,556,qs),
(151,556,ls),
(210,556,o),
(198,485,qs),
(151,221,ls),
(138,145,o),
(189,61,o),
(248,61,qs),
(364,61,o),
(391,213,qs),
(450,547,ls),
(451,556,o),
(459,556,qs),
(466,556,ls),
(524,556,o),
(512,485,qs),
(462,201,ls),
(445,107,o),
(395,52,qs),
(337,-10,o),
(243,-10,qs),
(158,-10,o)
);
},
{
closed = 1;
nodes = (
(234,691,o),
(255,691,qs),
(293,691,o),
(293,654,qs),
(293,631,o),
(262,600,o),
(240,600,qs),
(204,600,o),
(203,638,qs),
(203,659,o)
);
},
{
closed = 1;
nodes = (
(366,691,o),
(387,691,qs),
(425,691,o),
(425,654,qs),
(425,631,o),
(394,600,o),
(372,600,qs),
(337,600,o),
(336,638,qs),
(336,659,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 98 8 1 0 0 46 0 78 1 0 45 43 40 38 35 33 30 28 21 18 14 12 9 6 0 26 1 26 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,556,o),
(76,556,qs),
(96,556,ls),
(142,556,o),
(159,506,qs),
(235,286,l),
(412,544,l),
(419,556,o),
(431,556,qs),
(488,556,ls),
(499,556,o),
(491,544,qs),
(258,213,l),
(222,9,ls),
(221,0,o),
(213,0,qs),
(156,0,ls),
(148,0,o),
(150,9,qs),
(186,213,l),
(68,547,l)
);
},
{
closed = 1;
nodes = (
(291,693,o),
(304,693,qs),
(368,693,ls),
(372,693,o),
(373,687,o),
(370,684,q),
(279,619,ls),
(265,608,o),
(249,608,qs),
(198,608,ls),
(194,608,o),
(192,614,o),
(196,617,qs),
(279,684,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
14 1 0 1 1 76 0 4 3 4 133 0 3 1 3 133 2 1 1 1 39 77 0 0 0 40 0 78 52 52 52 52 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,0,o),
(90,0,qs),
(33,0,ls),
(26,0,o),
(27,9,qs),
(121,547,ls),
(123,556,o),
(131,556,qs),
(138,556,ls),
(195,556,o),
(184,485,qs),
(179,455,l),
(293,455,ls),
(361,455,o),
(405,422,qs),
(458,382,o),
(458,306,qs),
(458,220,o),
(406,165,qs),
(346,102,o),
(242,102,qs),
(116,102,l),
(100,9,ls)
);
},
{
closed = 1;
nodes = (
(312,173,o),
(383,239,o),
(383,298,qs),
(383,338,o),
(333,384,o),
(291,384,qs),
(166,384,l),
(128,173,l),
(250,173,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 0 4 5 1 4 104 6 1 5 0 0 3 5 0 103 0 2 2 39 77 0 3 3 40 3 78 23 23 23 31 23 30 35 51 50 38 32 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,9,qs),
(85,407,ls),
(97,477,o),
(141,520,qs),
(189,567,o),
(261,567,qs),
(321,567,o),
(395,510,o),
(395,462,qs),
(395,421,o),
(336,360,qs),
(287,310,o),
(287,290,qs),
(287,268,o),
(325,237,qs),
(368,203,o),
(396,160,o),
(396,130,qs),
(396,74,o),
(360,35,qs),
(318,-10,o),
(253,-10,qs),
(205,-10,o),
(140,40,o),
(140,77,qs),
(140,103,o),
(155,103,qs),
(158,103,o),
(162,98,qs),
(198,53,o),
(247,53,qs),
(280,53,o),
(320,87,o),
(320,114,qs),
(320,143,o),
(273,181,qs),
(215,228,o),
(215,271,qs),
(215,312,o),
(262,362,qs),
(301,404,o),
(319,431,o),
(319,451,qs),
(319,501,o),
(253,501,qs),
(217,501,o),
(165,450,o),
(157,404,qs),
(88,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 0 2 2 0 97 4 6 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 1 1 5 97 0 5 5 39 77 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 1 2 1 3 2 128 0 5 0 1 3 5 1 105 6 1 0 0 40 77 0 2 2 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 47 45 31 29 26 24 22 20 8 6 0 52 2 52 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(328,431,o),
(324,431,qs),
(273,431,ls),
(257,431,o),
(247,441,qs),
(179,507,ls),
(177,509,o),
(181,516,o),
(185,516,qs),
(248,516,ls),
(260,516,o),
(270,506,qs),
(329,439,l),
(332,437,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 6 0 7 1 6 7 105 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 0 7 2 6 7 105 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
37 35 36 36 38 34 51 50 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(281,516,o),
(293,516,qs),
(357,516,ls),
(361,516,o),
(363,509,o),
(359,507,q),
(269,441,ls),
(254,431,o),
(239,431,qs),
(188,431,ls),
(183,431,o),
(182,437,o),
(185,439,qs),
(268,506,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 7 6 7 133 0 6 1 6 133 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 51 36 36 38 34 51 50 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(214,431,o),
(195,431,qs),
(148,431,ls),
(144,431,o),
(143,437,o),
(146,439,qs),
(224,506,ls),
(235,516,o),
(250,516,qs),
(302,516,ls),
(316,516,o),
(324,506,qs),
(379,439,ls),
(385,431,o),
(374,431,qs),
(330,431,ls),
(314,431,o),
(305,442,qs),
(273,485,l),
(225,442,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 8 1 6 2 6 133 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 51 51 36 36 38 34 51 50 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(311,431,qs),
(293,431,o),
(260,446,qs),
(233,458,o),
(222,458,qs),
(206,458,o),
(200,439,qs),
(197,429,o),
(189,429,qs),
(155,429,ls),
(148,429,o),
(149,438,q),
(167,513,o),
(222,513,qs),
(243,513,o),
(276,497,qs),
(304,484,o),
(315,484,qs),
(331,484,o),
(338,502,qs),
(342,512,o),
(350,512,qs),
(384,512,ls),
(391,512,o),
(390,503,q),
(370,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 6 0 10 9 6 10 105 0 7 11 1 9 1 7 9 106 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
8 1 6 0 10 9 6 10 105 0 7 11 1 9 2 7 9 106 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
61 59 57 55 53 50 34 34 50 36 36 38 34 51 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(182,513,o),
(203,513,qs),
(241,513,o),
(241,476,qs),
(241,454,o),
(209,422,o),
(188,422,qs),
(152,422,o),
(151,460,qs),
(151,482,o)
);
},
{
closed = 1;
nodes = (
(314,513,o),
(335,513,qs),
(373,513,o),
(373,476,qs),
(372,454,o),
(342,422,o),
(320,422,qs),
(284,422,o),
(283,460,qs),
(283,482,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
9 1 7 8 1 6 1 7 6 105 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 7 8 1 6 2 7 6 105 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
54 52 35 35 34 36 36 38 34 51 50 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,-9,qs),
(106,-9,o),
(69,29,qs),
(27,73,o),
(27,148,qs),
(26,237,o),
(81,302,qs),
(144,377,o),
(234,377,qs),
(314,377,o),
(344,319,q),
(361,368,o),
(408,368,qs),
(413,368,ls),
(421,368,o),
(419,360,qs),
(358,9,ls),
(356,0,o),
(348,0,qs),
(292,0,ls),
(284,0,o),
(285,9,qs),
(293,52,l),
(242,-9,o)
);
},
{
closed = 1;
nodes = (
(183,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,218,qs),
(319,308,o),
(234,308,qs),
(178,308,o),
(141,264,qs),
(101,217,o),
(102,152,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(244,559,o),
(277,559,qs),
(303,559,o),
(337,526,o),
(337,501,qs),
(336,467,o),
(290,419,o),
(258,419,qs),
(230,419,o),
(197,454,o),
(197,481,qs),
(198,514,o)
);
},
{
closed = 1;
nodes = (
(261,455,qs),
(300,455,o),
(299,496,qs),
(299,524,o),
(273,524,qs),
(257,524,o),
(235,500,o),
(235,483,qs),
(235,455,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
12 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 0 6 1 9 6 105 0 8 8 7 97 0 7 7 39 77 0 4 4 1 97 2 1 1 1 42 77 0 5 5 0 97 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 9 0 6 2 9 6 105 0 8 8 7 97 0 7 7 39 77 0 1 1 42 77 0 4 4 2 97 0 2 2 48 77 0 0 0 40 77 0 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
56 54 36 36 35 36 36 38 34 51 50 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(356,0,o),
(348,0,qs),
(294,0,ls),
(286,0,o),
(287,9,qs),
(295,52,l),
(244,-9,o),
(165,-9,qs),
(108,-9,o),
(71,29,qs),
(28,73,o),
(28,148,qs),
(28,237,o),
(83,302,qs),
(146,377,o),
(237,377,qs),
(315,377,o),
(346,319,q),
(362,368,o),
(410,368,qs),
(412,368,ls),
(421,368,o),
(420,360,qs),
(412,318,l),
(465,377,o),
(546,377,qs),
(606,377,o),
(677,307,o),
(677,247,qs),
(677,214,o),
(665,171,qs),
(661,159,o),
(648,159,qs),
(407,159,l),
(401,54,o),
(508,54,qs),
(564,54,o),
(624,93,qs),
(625,94,ls),
(636,101,o),
(639,101,qs),
(647,101,o),
(647,92,qs),
(647,58,o),
(609,28,qs),
(560,-9,o),
(490,-9,qs),
(397,-9,o),
(367,66,q),
(358,9,ls)
);
},
{
closed = 1;
nodes = (
(283,103,qs),
(321,148,o),
(321,218,qs),
(321,308,o),
(236,308,qs),
(180,308,o),
(143,264,qs),
(104,217,o),
(104,152,qs),
(104,108,o),
(147,59,o),
(185,59,qs),
(245,59,o)
);
},
{
closed = 1;
nodes = (
(606,231,o),
(606,239,qs),
(606,313,o),
(535,313,qs),
(446,313,o),
(419,214,q),
(604,214,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
31 25 2 10 4 43 1 0 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
31 25 2 10 5 43 1 8 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
31 25 2 11 5 43 1 8 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 104 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 104 0 5 5 42 77 11 1 10 10 4 97 6 1 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 104 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 7 1 0 0 49 77 0 8 8 40 77 0 2 2 0 97 7 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
63 63 51 50 63 69 63 69 66 64 58 56 50 62 51 62 51 38 34 51 37 33 36 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 713;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,-98,o),
(121,-98,qs),
(74,-98,ls),
(65,-98,o),
(71,-89,qs),
(136,-7,l),
(85,3,o),
(27,84,o),
(27,147,qs),
(27,234,o),
(80,299,qs),
(145,377,o),
(247,377,qs),
(287,377,o),
(321,362,qs),
(356,345,o),
(338,307,qs),
(330,289,ls),
(327,281,o),
(323,281,qs),
(319,281,o),
(315,284,qs),
(276,308,o),
(233,308,qs),
(182,308,o),
(145,269,qs),
(103,223,o),
(103,151,qs),
(103,54,o),
(190,54,qs),
(247,54,o),
(288,91,qs),
(299,101,o),
(304,101,qs),
(313,101,o),
(313,91,qs),
(313,57,o),
(245,-1,o),
(198,-8,q),
(148,-87,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
33 1 5 1 1 76 0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 101 0 2 2 4 97 0 4 4 48 2 78 56 37 34 36 35 20 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,54,qs),
(254,54,o),
(314,93,qs),
(315,94,o),
(317,95,qs),
(326,101,o),
(329,101,qs),
(337,101,o),
(337,92,qs),
(337,58,o),
(298,28,qs),
(250,-9,o),
(179,-9,qs),
(114,-9,o),
(74,27,qs),
(25,70,o),
(27,154,qs),
(28,244,o),
(82,306,qs),
(143,377,o),
(236,377,qs),
(296,377,o),
(367,308,o),
(367,249,qs),
(366,216,o),
(354,171,qs),
(351,159,o),
(338,159,qs),
(98,159,l),
(89,54,o)
);
},
{
closed = 1;
nodes = (
(295,223,o),
(297,239,q),
(297,313,o),
(224,313,qs),
(136,313,o),
(109,214,q),
(293,214,l)
);
},
{
closed = 1;
nodes = (
(315,431,o),
(311,431,qs),
(259,431,ls),
(244,431,o),
(234,441,qs),
(166,507,l),
(163,509,o),
(167,516,o),
(172,516,qs),
(234,516,ls),
(247,516,o),
(257,506,qs),
(316,439,l),
(319,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
34 1 6 5 1 76 0 3 0 4 0 3 4 128 0 7 0 8 1 7 8 105 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 30 30 48 46 41 39 30 36 30 36 34 37 20 38 37 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,54,qs),
(254,54,o),
(314,93,qs),
(315,94,o),
(317,95,qs),
(326,101,o),
(329,101,qs),
(337,101,o),
(337,92,qs),
(337,58,o),
(298,28,qs),
(250,-9,o),
(179,-9,qs),
(114,-9,o),
(74,27,qs),
(25,70,o),
(27,154,qs),
(28,244,o),
(82,306,qs),
(143,377,o),
(236,377,qs),
(296,377,o),
(367,308,o),
(367,249,qs),
(366,216,o),
(354,171,qs),
(351,159,o),
(338,159,qs),
(98,159,l),
(89,54,o)
);
},
{
closed = 1;
nodes = (
(295,223,o),
(297,239,q),
(297,313,o),
(224,313,qs),
(136,313,o),
(109,214,q),
(293,214,l)
);
},
{
closed = 1;
nodes = (
(267,516,o),
(279,516,qs),
(343,516,ls),
(347,516,o),
(349,509,o),
(346,507,qs),
(255,441,ls),
(241,431,o),
(225,431,qs),
(174,431,ls),
(170,431,o),
(168,437,o),
(172,439,q),
(254,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
34 1 6 5 1 76 0 8 7 8 133 0 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 30 30 49 46 42 39 30 36 30 36 34 37 20 38 37 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,54,qs),
(254,54,o),
(314,93,qs),
(315,94,o),
(317,95,qs),
(326,101,o),
(329,101,qs),
(337,101,o),
(337,92,qs),
(337,58,o),
(298,28,qs),
(250,-9,o),
(179,-9,qs),
(114,-9,o),
(74,27,qs),
(25,70,o),
(27,154,qs),
(28,244,o),
(82,306,qs),
(143,377,o),
(236,377,qs),
(296,377,o),
(367,308,o),
(367,249,qs),
(366,216,o),
(354,171,qs),
(351,159,o),
(338,159,qs),
(98,159,l),
(89,54,o)
);
},
{
closed = 1;
nodes = (
(295,223,o),
(297,239,q),
(297,313,o),
(224,313,qs),
(136,313,o),
(109,214,q),
(293,214,l)
);
},
{
closed = 1;
nodes = (
(201,431,o),
(182,431,qs),
(135,431,ls),
(131,431,o),
(129,437,o),
(133,439,q),
(211,506,ls),
(222,516,o),
(237,516,qs),
(289,516,ls),
(302,516,o),
(311,506,qs),
(366,439,ls),
(372,431,o),
(361,431,qs),
(317,431,ls),
(300,431,o),
(292,442,qs),
(259,485,l),
(212,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
34 1 6 5 1 76 0 8 7 8 133 9 1 7 1 7 133 0 3 0 4 0 3 4 128 10 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 30 30 55 52 48 45 42 39 30 36 30 36 34 37 20 38 37 32 11 9 28 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,54,qs),
(254,54,o),
(314,93,qs),
(315,94,o),
(317,95,qs),
(326,101,o),
(329,101,qs),
(337,101,o),
(337,92,qs),
(337,58,o),
(298,28,qs),
(250,-9,o),
(179,-9,qs),
(114,-9,o),
(74,27,qs),
(25,70,o),
(27,154,qs),
(28,244,o),
(82,306,qs),
(143,377,o),
(236,377,qs),
(296,377,o),
(367,308,o),
(367,249,qs),
(366,216,o),
(354,171,qs),
(351,159,o),
(338,159,qs),
(98,159,l),
(89,54,o)
);
},
{
closed = 1;
nodes = (
(295,223,o),
(297,239,q),
(297,313,o),
(224,313,qs),
(136,313,o),
(109,214,q),
(293,214,l)
);
},
{
closed = 1;
nodes = (
(174,513,o),
(196,513,qs),
(234,513,o),
(234,476,qs),
(233,454,o),
(202,422,o),
(181,422,qs),
(145,422,o),
(144,460,qs),
(144,482,o)
);
},
{
closed = 1;
nodes = (
(307,513,o),
(328,513,qs),
(366,513,o),
(366,476,qs),
(365,454,o),
(334,422,o),
(313,422,qs),
(277,422,o),
(276,460,qs),
(276,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
34 1 6 5 1 76 0 3 0 4 0 3 4 128 10 1 8 9 1 7 1 8 7 105 11 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 30 30 55 53 50 48 45 43 40 38 30 36 30 36 34 37 20 38 37 32 12 9 28 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(151,368,o),
(138,299,qs),
(87,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o)
);
},
{
closed = 1;
nodes = (
(186,431,o),
(181,431,qs),
(130,431,ls),
(114,431,o),
(105,441,qs),
(37,507,l),
(34,509,o),
(38,516,o),
(42,516,qs),
(105,516,ls),
(118,516,o),
(127,506,qs),
(187,439,ls),
(189,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 2 0 3 1 2 3 105 0 1 1 42 77 4 1 0 0 40 0 78 2 0 23 21 16 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(151,368,o),
(138,299,qs),
(87,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o)
);
},
{
closed = 1;
nodes = (
(139,516,o),
(152,516,qs),
(216,516,ls),
(220,516,o),
(221,509,o),
(218,507,qs),
(127,441,ls),
(113,431,o),
(97,431,qs),
(46,431,ls),
(42,431,o),
(40,437,o),
(44,439,q),
(127,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 4 1 0 0 40 0 78 2 0 24 21 17 14 8 5 0 11 2 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,9,qs),
(86,360,ls),
(88,368,o),
(95,368,qs),
(100,368,ls),
(160,368,o),
(148,299,qs),
(97,9,ls),
(95,0,o),
(87,0,qs),
(31,0,ls),
(23,0,o)
);
},
{
closed = 1;
nodes = (
(70,431,o),
(52,431,qs),
(5,431,ls),
(1,431,o),
(-1,437,o),
(2,439,qs),
(81,506,ls),
(92,516,o),
(107,516,qs),
(159,516,ls),
(172,516,o),
(180,506,qs),
(236,439,ls),
(242,431,o),
(230,431,qs),
(187,431,ls),
(170,431,o),
(161,442,qs),
(129,485,l),
(82,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 2 3 133 4 1 2 1 2 133 0 1 1 42 77 5 1 0 0 40 0 78 2 0 30 27 23 20 17 14 8 5 0 11 2 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(151,368,o),
(138,299,qs),
(87,9,ls),
(86,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o)
);
},
{
closed = 1;
nodes = (
(50,513,o),
(71,513,qs),
(109,513,o),
(109,476,qs),
(109,454,o),
(77,422,o),
(56,422,qs),
(20,422,o),
(19,460,qs),
(19,482,o)
);
},
{
closed = 1;
nodes = (
(182,513,o),
(203,513,qs),
(241,513,o),
(241,476,qs),
(240,454,o),
(210,422,o),
(188,422,qs),
(152,422,o),
(151,460,qs),
(151,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 42 77 6 1 0 0 40 0 78 2 0 30 28 25 23 20 18 15 13 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,407,l),
(154,405,o),
(150,412,qs),
(139,436,ls),
(135,443,o),
(144,447,qs),
(208,479,l),
(173,547,ls),
(169,556,o),
(180,556,qs),
(200,556,ls),
(229,556,o),
(257,541,o),
(268,522,qs),
(274,511,l),
(329,538,ls),
(336,541,o),
(339,534,qs),
(351,510,l),
(356,503,o),
(348,499,qs),
(294,472,l),
(369,322,ls),
(395,272,o),
(395,222,qs),
(395,132,o),
(343,68,qs),
(281,-9,o),
(179,-9,qs),
(114,-9,o),
(73,31,qs),
(27,75,o),
(27,151,qs),
(27,237,o),
(81,298,qs),
(144,369,o),
(244,369,qs),
(258,369,o),
(265,368,q),
(227,440,l)
);
},
{
closed = 1;
nodes = (
(281,102,qs),
(319,147,o),
(319,214,qs),
(319,300,o),
(232,300,qs),
(177,300,o),
(141,262,qs),
(101,220,o),
(101,156,qs),
(101,111,o),
(148,59,o),
(188,59,qs),
(244,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
39 32 24 17 4 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 97 0 1 1 49 1 78 41 40 48 46 40 52 41 52 30 27 38 33 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,377,qs),
(318,377,o),
(382,312,o),
(382,261,qs),
(382,248,o),
(379,224,qs),
(378,216,l),
(342,9,ls),
(341,0,o),
(332,0,qs),
(276,0,ls),
(268,0,o),
(270,9,qs),
(303,204,ls),
(307,228,o),
(307,238,qs),
(307,310,o),
(236,310,qs),
(140,310,o),
(120,199,qs),
(87,9,l),
(87,0,o),
(78,0,qs),
(21,0,ls),
(13,0,o),
(15,9,qs),
(77,360,ls),
(78,368,o),
(86,368,qs),
(91,368,ls),
(139,368,o),
(139,318,q),
(190,377,o)
);
},
{
closed = 1;
nodes = (
(305,431,qs),
(286,431,o),
(253,446,qs),
(226,458,o),
(216,458,qs),
(200,458,o),
(193,439,qs),
(190,429,o),
(183,429,qs),
(149,429,ls),
(141,429,o),
(143,438,qs),
(160,513,o),
(216,513,qs),
(236,513,o),
(270,497,qs),
(297,484,o),
(309,484,qs),
(324,484,o),
(332,502,qs),
(336,512,o),
(344,512,qs),
(378,512,ls),
(385,512,o),
(384,503,q),
(364,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 2 0 11 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
7 1 5 0 9 8 5 9 105 0 6 10 1 8 0 6 8 106 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
7 1 5 0 9 8 5 9 105 0 6 10 1 8 4 6 8 106 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
58 56 54 52 50 34 34 50 39 53 35 51 49 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,306,qs),
(148,377,o),
(243,377,qs),
(308,377,o),
(348,339,qs),
(394,296,o),
(394,222,qs),
(394,131,o),
(344,68,qs),
(284,-9,o),
(178,-9,qs),
(114,-9,o),
(73,31,qs),
(27,76,o),
(27,158,qs),
(26,244,o)
);
},
{
closed = 1;
nodes = (
(188,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,214,qs),
(318,308,o),
(231,308,qs),
(176,308,o),
(140,265,qs),
(102,220,o),
(102,156,qs),
(102,59,o)
);
},
{
closed = 1;
nodes = (
(336,431,o),
(332,431,qs),
(280,431,ls),
(265,431,o),
(255,441,qs),
(187,507,l),
(184,509,o),
(188,516,o),
(193,516,qs),
(255,516,ls),
(268,516,o),
(278,506,qs),
(337,439,l),
(340,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 4 0 5 1 4 5 105 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 37 35 36 38 38 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,306,qs),
(148,377,o),
(243,377,qs),
(308,377,o),
(348,339,qs),
(394,296,o),
(394,222,qs),
(394,131,o),
(344,68,qs),
(284,-9,o),
(178,-9,qs),
(114,-9,o),
(73,31,qs),
(27,76,o),
(27,158,qs),
(26,244,o)
);
},
{
closed = 1;
nodes = (
(188,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,214,qs),
(318,308,o),
(231,308,qs),
(176,308,o),
(140,265,qs),
(102,220,o),
(102,156,qs),
(102,59,o)
);
},
{
closed = 1;
nodes = (
(278,516,o),
(290,516,qs),
(354,516,ls),
(358,516,o),
(359,509,o),
(356,507,qs),
(265,441,ls),
(251,431,o),
(235,431,qs),
(184,431,ls),
(180,431,o),
(179,437,o),
(182,439,qs),
(265,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 4 1 4 133 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 52 51 36 38 38 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,306,qs),
(148,377,o),
(243,377,qs),
(308,377,o),
(348,339,qs),
(394,296,o),
(394,222,qs),
(394,131,o),
(344,68,qs),
(284,-9,o),
(178,-9,qs),
(114,-9,o),
(73,31,qs),
(27,76,o),
(27,158,qs),
(26,244,o)
);
},
{
closed = 1;
nodes = (
(188,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,214,qs),
(318,308,o),
(231,308,qs),
(176,308,o),
(140,265,qs),
(102,220,o),
(102,156,qs),
(102,59,o)
);
},
{
closed = 1;
nodes = (
(208,431,o),
(190,431,qs),
(143,431,ls),
(139,431,o),
(137,437,o),
(140,439,qs),
(219,506,ls),
(230,516,o),
(245,516,qs),
(297,516,ls),
(310,516,o),
(318,506,qs),
(374,439,ls),
(380,431,o),
(368,431,qs),
(325,431,ls),
(308,431,o),
(299,442,qs),
(267,485,l),
(220,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 52 51 51 36 38 38 35 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,306,qs),
(148,377,o),
(243,377,qs),
(308,377,o),
(348,339,qs),
(394,296,o),
(394,222,qs),
(394,131,o),
(344,68,qs),
(284,-9,o),
(178,-9,qs),
(114,-9,o),
(73,31,qs),
(27,76,o),
(27,158,qs),
(26,244,o)
);
},
{
closed = 1;
nodes = (
(188,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,214,qs),
(318,308,o),
(231,308,qs),
(176,308,o),
(140,265,qs),
(102,220,o),
(102,156,qs),
(102,59,o)
);
},
{
closed = 1;
nodes = (
(304,431,qs),
(286,431,o),
(253,446,qs),
(226,458,o),
(215,458,qs),
(200,458,o),
(193,439,qs),
(190,429,o),
(183,429,qs),
(149,429,ls),
(141,429,o),
(143,438,qs),
(160,513,o),
(215,513,qs),
(236,513,o),
(270,497,qs),
(297,484,o),
(309,484,qs),
(324,484,o),
(332,502,q),
(335,512,o),
(344,512,qs),
(378,512,ls),
(385,512,o),
(384,503,q),
(364,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
6 1 4 0 8 7 4 8 105 0 5 9 1 7 1 5 7 106 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 53 51 34 50 34 34 50 36 38 38 35 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,306,qs),
(148,377,o),
(243,377,qs),
(308,377,o),
(348,339,qs),
(394,296,o),
(394,222,qs),
(394,131,o),
(344,68,qs),
(284,-9,o),
(178,-9,qs),
(114,-9,o),
(73,31,qs),
(27,76,o),
(27,158,qs),
(26,244,o)
);
},
{
closed = 1;
nodes = (
(188,59,qs),
(243,59,o),
(280,103,qs),
(319,148,o),
(319,214,qs),
(318,308,o),
(231,308,qs),
(176,308,o),
(140,265,qs),
(102,220,o),
(102,156,qs),
(102,59,o)
);
},
{
closed = 1;
nodes = (
(184,513,o),
(205,513,qs),
(243,513,o),
(243,476,qs),
(243,454,o),
(212,422,o),
(190,422,qs),
(154,422,o),
(153,460,qs),
(153,482,o)
);
},
{
closed = 1;
nodes = (
(316,513,o),
(337,513,qs),
(375,513,o),
(375,476,qs),
(374,454,o),
(344,422,o),
(322,422,qs),
(286,422,o),
(285,460,qs),
(285,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
7 1 5 6 1 4 1 5 4 105 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 0 0 0 49 0 78 35 35 35 34 36 38 38 35 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 440;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
},
{
closed = 1;
nodes = (
(183,448,o),
(201,448,qs),
(219,448,o),
(244,423,o),
(244,404,qs),
(244,387,o),
(219,362,o),
(201,362,qs),
(183,362,o),
(158,387,o),
(158,404,qs),
(158,423,o)
);
},
{
closed = 1;
nodes = (
(184,181,o),
(201,181,qs),
(219,181,o),
(244,155,o),
(244,137,qs),
(244,119,o),
(219,94,o),
(201,94,qs),
(183,94,o),
(158,120,o),
(158,137,qs),
(158,155,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,31,qs),
(27,75,o),
(27,151,qs),
(27,237,o),
(81,301,qs),
(145,377,o),
(244,377,qs),
(309,377,o),
(349,339,qs),
(395,297,o),
(395,222,qs),
(395,132,o),
(343,68,qs),
(281,-9,o),
(179,-9,qs),
(114,-9,o)
);
},
{
closed = 1;
nodes = (
(258,308,o),
(232,308,qs),
(177,308,o),
(141,266,qs),
(101,221,o),
(101,156,qs),
(101,118,o),
(118,94,q),
(278,298,l)
);
},
{
closed = 1;
nodes = (
(170,59,o),
(188,59,qs),
(244,59,o),
(281,102,qs),
(319,147,o),
(319,214,qs),
(319,242,o),
(311,258,q),
(158,63,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
33 24 2 3 2 1 76 0 2 2 1 97 0 1 1 48 77 0 3 3 0 97 4 1 0 0 49 0 78 1 0 32 30 23 21 9 7 0 15 1 15 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,182,qs),
(73,360,ls),
(75,368,o),
(83,368,qs),
(87,368,ls),
(148,368,o),
(136,299,qs),
(113,168,l),
(112,167,o),
(112,166,qs),
(109,144,o),
(109,133,qs),
(109,57,o),
(182,57,qs),
(266,57,o),
(285,161,qs),
(320,360,ls),
(322,368,o),
(329,368,qs),
(334,368,ls),
(393,368,o),
(382,299,qs),
(358,161,ls),
(343,79,o),
(250,-10,o),
(180,-10,qs),
(112,-10,o),
(37,64,o),
(37,131,qs),
(37,155,o)
);
},
{
closed = 1;
nodes = (
(316,431,o),
(311,431,qs),
(260,431,ls),
(245,431,o),
(235,441,qs),
(167,507,l),
(164,509,o),
(168,516,o),
(173,516,qs),
(235,516,ls),
(248,516,o),
(258,506,qs),
(317,439,l),
(320,437,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 4 0 5 1 4 5 105 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 37 38 55 35 52 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,182,qs),
(73,360,ls),
(75,368,o),
(83,368,qs),
(87,368,ls),
(148,368,o),
(136,299,qs),
(113,168,l),
(112,167,o),
(112,166,qs),
(109,144,o),
(109,133,qs),
(109,57,o),
(182,57,qs),
(266,57,o),
(285,161,qs),
(320,360,ls),
(322,368,o),
(329,368,qs),
(334,368,ls),
(393,368,o),
(382,299,qs),
(358,161,ls),
(343,79,o),
(250,-10,o),
(180,-10,qs),
(112,-10,o),
(37,64,o),
(37,131,qs),
(37,155,o)
);
},
{
closed = 1;
nodes = (
(266,516,o),
(279,516,qs),
(343,516,ls),
(347,516,o),
(348,509,o),
(345,507,qs),
(254,441,ls),
(240,431,o),
(224,431,qs),
(173,431,ls),
(169,431,o),
(167,437,o),
(171,439,q),
(254,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 52 54 55 35 52 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,182,qs),
(73,360,ls),
(75,368,o),
(83,368,qs),
(87,368,ls),
(148,368,o),
(136,299,qs),
(113,168,l),
(112,167,o),
(112,166,qs),
(109,144,o),
(109,133,qs),
(109,57,o),
(182,57,qs),
(266,57,o),
(285,161,qs),
(320,360,ls),
(322,368,o),
(329,368,qs),
(334,368,ls),
(393,368,o),
(382,299,qs),
(358,161,ls),
(343,79,o),
(250,-10,o),
(180,-10,qs),
(112,-10,o),
(37,64,o),
(37,131,qs),
(37,155,o)
);
},
{
closed = 1;
nodes = (
(196,431,o),
(178,431,qs),
(130,431,ls),
(126,431,o),
(125,437,o),
(128,439,qs),
(206,506,ls),
(217,516,o),
(233,516,qs),
(284,516,ls),
(298,516,o),
(306,506,qs),
(361,439,ls),
(367,431,o),
(356,431,qs),
(313,431,ls),
(296,431,o),
(287,442,qs),
(255,485,l),
(208,442,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 52 51 54 55 35 52 34 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,182,qs),
(73,360,ls),
(75,368,o),
(83,368,qs),
(87,368,ls),
(148,368,o),
(136,299,qs),
(113,168,l),
(112,167,o),
(112,166,qs),
(109,144,o),
(109,133,qs),
(109,57,o),
(182,57,qs),
(266,57,o),
(285,161,qs),
(320,360,ls),
(322,368,o),
(329,368,qs),
(334,368,ls),
(393,368,o),
(382,299,qs),
(358,161,ls),
(343,79,o),
(250,-10,o),
(180,-10,qs),
(112,-10,o),
(37,64,o),
(37,131,qs),
(37,155,o)
);
},
{
closed = 1;
nodes = (
(174,513,o),
(195,513,qs),
(234,513,o),
(234,476,qs),
(233,454,o),
(202,422,o),
(180,422,qs),
(145,422,o),
(144,460,qs),
(144,482,o)
);
},
{
closed = 1;
nodes = (
(306,513,o),
(328,513,qs),
(365,513,o),
(365,476,qs),
(365,454,o),
(334,422,o),
(313,422,qs),
(277,422,o),
(276,460,qs),
(276,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 42 77 0 2 2 0 98 0 0 0 46 0 78 35 35 35 37 55 35 52 34 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,368,o),
(33,368,qs),
(46,368,ls),
(77,368,o),
(103,341,o),
(107,306,qs),
(137,84,l),
(274,357,ls),
(280,368,o),
(292,368,qs),
(345,368,ls),
(352,368,o),
(348,360,qs),
(154,-9,ls),
(103,-107,o),
(38,-171,o),
(-7,-171,qs),
(-39,-171,o),
(-80,-131,o),
(-79,-99,q),
(-81,-76,o),
(-66,-76,qs),
(-61,-76,o),
(-57,-81,qs),
(-37,-106,o),
(-12,-106,qs),
(14,-106,o),
(52,-67,o),
(83,-7,q),
(26,360,l)
);
},
{
closed = 1;
nodes = (
(234,516,o),
(247,516,qs),
(311,516,ls),
(315,516,o),
(316,509,o),
(313,507,qs),
(222,441,ls),
(208,431,o),
(192,431,qs),
(141,431,ls),
(137,431,o),
(135,437,o),
(139,439,q),
(222,506,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
29 22 2 1 3 9 1 0 1 2 76 0 6 5 6 133 0 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 44 2 78 52 52 53 52 35 34 34 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-160,o),
(47,-160,qs),
(-9,-160,ls),
(-18,-160,o),
(-16,-151,qs),
(106,547,ls),
(108,556,o),
(116,556,qs),
(121,556,ls),
(180,556,o),
(169,487,qs),
(140,320,l),
(189,377,o),
(265,377,qs),
(324,377,o),
(361,341,qs),
(405,300,o),
(405,228,qs),
(405,134,o),
(355,68,qs),
(297,-9,o),
(206,-9,qs),
(124,-9,o),
(92,49,q),
(56,-151,l)
);
},
{
closed = 1;
nodes = (
(290,99,qs),
(331,145,o),
(331,213,qs),
(331,308,o),
(241,308,qs),
(191,308,o),
(155,270,qs),
(113,226,o),
(113,159,qs),
(113,112,o),
(160,59,o),
(202,59,qs),
(254,59,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 24 1 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 98 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 3 134 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 98 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
26 25 33 31 25 37 26 37 51 51 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,368,o),
(33,368,qs),
(46,368,ls),
(77,368,o),
(103,341,o),
(107,306,qs),
(137,84,l),
(274,357,ls),
(280,368,o),
(292,368,qs),
(345,368,ls),
(352,368,o),
(348,360,qs),
(154,-9,ls),
(103,-107,o),
(38,-171,o),
(-7,-171,qs),
(-39,-171,o),
(-80,-131,o),
(-79,-99,q),
(-81,-76,o),
(-66,-76,qs),
(-61,-76,o),
(-57,-81,qs),
(-37,-106,o),
(-12,-106,qs),
(14,-106,o),
(52,-67,o),
(83,-7,q),
(26,360,l)
);
},
{
closed = 1;
nodes = (
(133,513,o),
(154,513,qs),
(192,513,o),
(192,476,qs),
(192,454,o),
(161,422,o),
(139,422,qs),
(103,422,o),
(102,460,qs),
(102,481,o)
);
},
{
closed = 1;
nodes = (
(265,513,o),
(286,513,qs),
(324,513,o),
(324,476,qs),
(323,454,o),
(293,422,o),
(271,422,qs),
(235,422,o),
(234,460,qs),
(234,481,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
29 22 2 1 3 9 1 0 1 2 76 0 1 3 0 3 1 0 128 8 1 6 7 1 5 3 6 5 105 4 1 3 3 42 77 0 0 0 2 98 0 2 2 44 2 78 35 35 35 35 53 52 35 34 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,9,qs),
(76,360,ls),
(77,368,o),
(85,368,qs),
(90,368,ls),
(150,368,o),
(137,299,qs),
(86,9,ls),
(85,0,o),
(77,0,qs),
(20,0,ls),
(12,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 42 77 2 1 0 0 40 0 78 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 179;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(323,71,o),
(315,27,qs),
(312,11,ls),
(311,0,o),
(299,0,qs),
(40,0,ls),
(32,0,o),
(34,9,qs),
(68,204,l),
(20,180,ls),
(9,175,o),
(11,185,qs),
(20,234,ls),
(22,244,o),
(31,248,qs),
(79,273,l),
(128,547,ls),
(130,556,o),
(138,556,qs),
(144,556,ls),
(203,556,o),
(191,485,qs),
(161,315,l),
(304,388,ls),
(315,393,o),
(312,383,q),
(303,333,ls),
(302,322,o),
(292,318,q),
(149,246,l),
(118,71,l),
(279,71,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
22 8 2 2 0 1 76 0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 31 0 30 59 58 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 372;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,175,o),
(11,185,qs),
(19,233,ls),
(21,242,o),
(31,247,qs),
(74,269,l),
(123,547,ls),
(125,556,o),
(133,556,qs),
(138,556,ls),
(197,556,o),
(186,487,qs),
(154,310,l),
(213,340,ls),
(224,345,o),
(222,335,qs),
(214,286,ls),
(212,277,o),
(202,272,qs),
(142,242,l),
(119,111,ls),
(117,100,o),
(117,93,qs),
(117,59,o),
(150,59,qs),
(174,59,o),
(198,83,qs),
(204,89,o),
(209,89,qs),
(216,89,o),
(216,81,qs),
(216,44,o),
(159,-9,o),
(119,-9,qs),
(43,-9,o),
(43,74,qs),
(43,88,o),
(48,117,qs),
(63,202,l),
(20,180,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
26 1 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 49 0 78 61 35 19 36 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 243;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,71,o),
(738,27,qs),
(735,11,ls),
(733,0,o),
(722,0,qs),
(432,0,ls),
(425,0,o),
(427,9,qs),
(437,67,l),
(364,-10,o),
(259,-10,qs),
(170,-10,o),
(116,42,qs),
(54,103,o),
(54,219,qs),
(54,350,o),
(134,451,qs),
(226,567,o),
(356,567,qs),
(464,567,o),
(511,486,q),
(521,547,ls),
(523,556,o),
(530,556,qs),
(780,556,ls),
(822,556,o),
(815,513,qs),
(812,496,ls),
(810,485,o),
(800,485,qs),
(583,485,l),
(552,312,l),
(717,312,ls),
(762,312,o),
(754,268,qs),
(751,252,ls),
(750,242,o),
(738,242,qs),
(540,242,l),
(510,71,l),
(702,71,ls)
);
},
{
closed = 1;
nodes = (
(411,133,qs),
(480,214,o),
(480,347,qs),
(480,495,o),
(346,495,qs),
(266,495,o),
(204,424,qs),
(132,341,o),
(132,219,qs),
(132,62,o),
(263,62,qs),
(351,62,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 5 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 9 31 1 6 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 9 31 1 8 7 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 3 97 4 1 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 48 46 41 52 42 52 0 40 0 39 51 38 35 51 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 800;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,-9,qs),
(115,-9,o),
(74,31,qs),
(28,76,o),
(28,158,qs),
(27,244,o),
(84,306,qs),
(149,377,o),
(244,377,qs),
(340,377,o),
(371,303,q),
(426,377,o),
(520,377,qs),
(580,377,o),
(651,307,o),
(651,249,qs),
(651,220,o),
(639,171,qs),
(635,159,o),
(623,159,qs),
(383,159,l),
(374,54,o),
(481,54,qs),
(539,54,o),
(598,93,qs),
(599,94,o),
(601,95,qs),
(610,101,o),
(613,101,qs),
(622,101,o),
(621,92,q),
(621,58,o),
(582,28,qs),
(534,-9,o),
(464,-9,qs),
(365,-9,o),
(332,66,q),
(275,-9,o)
);
},
{
closed = 1;
nodes = (
(189,59,qs),
(244,59,o),
(281,103,qs),
(320,148,o),
(320,214,qs),
(319,308,o),
(232,308,qs),
(177,308,o),
(141,265,qs),
(103,220,o),
(103,156,qs),
(103,59,o)
);
},
{
closed = 1;
nodes = (
(581,228,o),
(581,242,qs),
(581,313,o),
(509,313,qs),
(420,313,o),
(393,214,q),
(577,214,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
26 1 10 7 6 1 2 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
26 1 10 7 6 1 8 1 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 3 2 3 1 2 128 11 1 10 0 3 1 10 3 103 9 1 7 7 4 97 5 1 4 4 48 77 8 1 2 2 0 97 6 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 1 3 8 3 1 8 128 11 1 10 0 3 1 10 3 103 0 9 9 4 97 5 1 4 4 48 77 0 7 7 4 97 5 1 4 4 48 77 0 8 8 0 97 6 1 0 0 49 77 0 2 2 0 97 6 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
50 50 50 56 50 56 53 51 36 36 38 34 37 33 37 20 33 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,154,qs),
(26,154,o),
(30,147,qs),
(82,59,o),
(183,59,qs),
(246,59,o),
(318,115,o),
(318,163,qs),
(318,188,o),
(279,225,o),
(229,245,qs),
(152,277,o),
(131,289,qs),
(66,329,o),
(66,394,qs),
(66,466,o),
(118,513,qs),
(177,567,o),
(275,567,qs),
(344,567,o),
(403,538,qs),
(443,518,o),
(429,477,qs),
(423,459,ls),
(419,449,o),
(413,449,qs),
(407,449,o),
(400,455,qs),
(341,498,o),
(264,498,qs),
(213,498,o),
(142,447,o),
(142,411,qs),
(142,381,o),
(168,359,qs),
(190,341,o),
(256,313,qs),
(324,285,o),
(351,265,qs),
(395,231,o),
(395,182,qs),
(395,101,o),
(346,50,qs),
(287,-11,o),
(180,-11,qs),
(107,-11,o),
(2,67,o),
(2,121,qs),
(1,154,o)
);
},
{
closed = 1;
nodes = (
(320,693,o),
(337,693,qs),
(384,693,ls),
(389,693,o),
(390,687,o),
(387,684,qs),
(308,618,ls),
(297,608,o),
(283,608,qs),
(230,608,ls),
(216,608,o),
(208,618,qs),
(154,684,ls),
(151,687,o),
(155,693,o),
(159,693,qs),
(202,693,ls),
(220,693,o),
(228,683,qs),
(260,640,l),
(308,683,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 105 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 105 0 3 0 1 2 3 1 106 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 34 44 37 34 45 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,315,qs),
(145,315,o),
(108,289,o),
(108,268,qs),
(108,244,o),
(164,221,qs),
(227,195,o),
(268,157,o),
(268,125,qs),
(268,70,o),
(234,34,qs),
(193,-11,o),
(119,-11,qs),
(67,-11,o),
(-4,40,o),
(-4,78,qs),
(-6,106,o),
(10,106,qs),
(13,106,o),
(17,102,qs),
(18,101,ls),
(59,51,o),
(118,51,qs),
(153,51,o),
(195,82,o),
(194,107,qs),
(194,133,o),
(138,156,qs),
(76,183,o),
(35,222,o),
(35,257,qs),
(34,306,o),
(71,339,qs),
(113,377,o),
(181,377,qs),
(231,377,o),
(267,359,qs),
(299,342,o),
(283,304,qs),
(278,292,ls),
(275,285,o),
(270,285,qs),
(268,285,o),
(265,287,qs),
(263,288,o),
(262,288,q),
(217,315,o)
);
},
{
closed = 1;
nodes = (
(255,516,o),
(273,516,qs),
(320,516,ls),
(324,516,o),
(326,509,o),
(322,507,q),
(243,440,ls),
(232,431,o),
(218,431,qs),
(166,431,ls),
(152,431,o),
(144,440,qs),
(89,507,ls),
(87,509,o),
(91,516,o),
(94,516,qs),
(138,516,ls),
(156,516,o),
(164,505,qs),
(196,462,l),
(243,505,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
30 1 2 3 1 76 0 3 0 2 0 3 2 128 0 7 1 6 7 89 8 1 6 0 0 3 6 0 105 0 5 5 1 97 0 1 1 48 77 0 2 2 4 97 0 4 4 46 4 78 52 53 35 42 35 35 42 37 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 307;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,556,o),
(76,556,qs),
(96,556,ls),
(142,556,o),
(159,506,qs),
(235,286,l),
(412,544,l),
(419,556,o),
(431,556,qs),
(488,556,ls),
(499,556,o),
(491,544,qs),
(258,213,l),
(222,9,ls),
(221,0,o),
(213,0,qs),
(156,0,ls),
(148,0,o),
(150,9,qs),
(186,213,l),
(68,547,l)
);
},
{
closed = 1;
nodes = (
(187,691,o),
(208,691,qs),
(246,691,o),
(246,654,qs),
(246,631,o),
(215,600,o),
(193,600,qs),
(157,600,o),
(156,638,qs),
(156,659,o)
);
},
{
closed = 1;
nodes = (
(319,691,o),
(340,691,qs),
(378,691,o),
(378,654,qs),
(378,631,o),
(347,600,o),
(325,600,qs),
(290,600,o),
(289,638,qs),
(289,659,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
14 1 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 35 35 35 35 52 52 50 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(375,71,o),
(367,27,qs),
(365,11,ls),
(363,0,o),
(352,0,qs),
(1,0,ls),
(-7,0,o),
(-5,9,qs),
(2,51,ls),
(6,69,o),
(22,88,qs),
(365,485,l),
(93,485,ls),
(86,485,o),
(87,494,qs),
(97,547,ls),
(98,556,o),
(106,556,qs),
(405,556,ls),
(460,556,o),
(451,505,qs),
(448,492,ls),
(446,477,o),
(428,455,qs),
(95,71,l),
(332,71,ls)
);
},
{
closed = 1;
nodes = (
(319,693,o),
(336,693,qs),
(383,693,ls),
(388,693,o),
(389,687,o),
(386,684,qs),
(307,618,ls),
(296,608,o),
(282,608,qs),
(230,608,ls),
(215,608,o),
(207,618,qs),
(153,684,ls),
(151,687,o),
(154,693,o),
(158,693,qs),
(201,693,ls),
(219,693,o),
(227,683,qs),
(260,640,l),
(307,683,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 4 0 5 0 4 5 105 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 432;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,66,o),
(266,57,qs),
(258,9,ls),
(256,0,o),
(249,0,qs),
(-1,0,ls),
(-9,0,o),
(-7,9,qs),
(-1,46,ls),
(2,59,o),
(17,76,qs),
(231,302,l),
(57,302,ls),
(50,302,o),
(51,310,qs),
(60,360,ls),
(61,368,o),
(69,368,qs),
(269,368,ls),
(298,368,o),
(317,344,o),
(311,313,qs),
(308,292,o),
(291,276,q),
(93,66,l),
(260,66,ls)
);
},
{
closed = 1;
nodes = (
(261,516,o),
(279,516,qs),
(326,516,ls),
(330,516,o),
(332,509,o),
(328,507,q),
(249,440,ls),
(238,431,o),
(224,431,qs),
(172,431,ls),
(158,431,o),
(150,440,qs),
(95,507,ls),
(93,509,o),
(96,516,o),
(100,516,qs),
(144,516,ls),
(162,516,o),
(170,505,qs),
(202,462,l),
(249,505,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 4 0 5 0 4 5 105 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 327;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,302,o),
(59,310,qs),
(68,359,ls),
(70,368,o),
(78,368,qs),
(145,368,l),
(157,442,ls),
(167,499,o),
(231,562,o),
(278,562,qs),
(312,562,o),
(355,524,o),
(355,495,qs),
(355,471,o),
(341,471,qs),
(338,471,o),
(334,474,qs),
(306,496,o),
(285,496,qs),
(242,496,o),
(232,437,qs),
(219,368,l),
(310,368,ls),
(318,368,o),
(317,359,qs),
(308,310,ls),
(307,302,o),
(298,302,qs),
(209,302,l),
(145,-52,ls),
(123,-171,o),
(26,-171,qs),
(-9,-171,o),
(-52,-133,o),
(-52,-103,qs),
(-52,-81,o),
(-39,-81,qs),
(-36,-81,o),
(-32,-83,q),
(-31,-83,l),
(-3,-106,o),
(17,-106,qs),
(61,-106,o),
(71,-47,qs),
(133,302,l),
(66,302,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 44 2 78 0 0 0 45 0 44 35 35 34 34 35 34 35 35 34 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,431,o),
(54,431,qs),
(7,431,ls),
(3,431,o),
(1,437,o),
(4,439,qs),
(83,506,ls),
(94,516,o),
(109,516,qs),
(161,516,ls),
(174,516,o),
(182,506,qs),
(238,439,ls),
(244,431,o),
(232,431,qs),
(189,431,ls),
(172,431,o),
(163,442,qs),
(131,485,l),
(84,442,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 52 51 50 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 238;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,516,o),
(186,516,qs),
(233,516,ls),
(238,516,o),
(239,509,o),
(236,507,qs),
(157,440,ls),
(146,431,o),
(132,431,qs),
(79,431,ls),
(65,431,o),
(57,440,qs),
(3,507,l),
(0,509,o),
(4,516,o),
(8,516,qs),
(51,516,ls),
(69,516,o),
(77,505,qs),
(109,462,l),
(157,505,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 238;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,516,qs),
(48,516,ls),
(53,516,o),
(54,508,qs),
(57,470,o),
(98,470,qs),
(140,470,o),
(156,508,qs),
(160,516,o),
(167,516,qs),
(208,516,ls),
(214,516,o),
(211,507,qs),
(182,422,o),
(93,422,qs),
(50,422,o),
(0,468,o),
(0,507,qs),
(0,516,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
50 34 50 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 212;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,460,qs),
(0,481,o),
(31,513,o),
(52,513,qs),
(89,513,o),
(89,476,qs),
(89,453,o),
(58,422,o),
(37,422,qs),
(0,422,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 6 4 0 9 1 9 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 89;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,559,o),
(79,559,qs),
(105,559,o),
(139,526,o),
(139,501,qs),
(139,467,o),
(93,419,o),
(60,419,qs),
(33,419,o),
(-1,454,o),
(0,481,qs),
(0,514,o)
);
},
{
closed = 1;
nodes = (
(63,455,qs),
(102,455,o),
(101,496,qs),
(101,524,o),
(76,524,qs),
(59,524,o),
(37,500,o),
(37,483,qs),
(37,455,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 34 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 140;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,2,qs),
(121,2,ls),
(124,2,o),
(124,1,q),
(125,-1,o),
(121,-3,qs),
(54,-30,o),
(54,-73,qs),
(54,-99,o),
(87,-99,qs),
(100,-99,o),
(114,-96,q),
(124,-92,o),
(121,-101,q),
(116,-127,ls),
(115,-134,o),
(107,-137,qs),
(88,-142,o),
(68,-142,qs),
(37,-142,o),
(0,-110,o),
(0,-83,qs),
(0,-29,o),
(62,0,qs),
(67,2,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 1 2 112 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
53 39 36 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 125;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,431,qs),
(145,431,o),
(112,446,qs),
(85,458,o),
(75,458,qs),
(59,458,o),
(53,439,qs),
(50,429,o),
(42,429,qs),
(8,429,ls),
(0,429,o),
(2,438,qs),
(19,513,o),
(75,513,qs),
(95,513,o),
(129,497,qs),
(156,484,o),
(168,484,qs),
(183,484,o),
(191,502,qs),
(195,512,o),
(203,512,qs),
(237,512,ls),
(244,512,o),
(243,503,q),
(223,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 1 4 3 1 89 2 1 0 0 4 3 0 4 105 0 1 1 3 98 5 1 3 1 3 82 34 34 50 34 34 49 6 9 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 242;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,516,o),
(90,516,qs),
(141,516,ls),
(146,516,o),
(147,510,o),
(144,507,qs),
(78,442,ls),
(68,431,o),
(49,431,qs),
(5,431,ls),
(1,431,o),
(0,437,o),
(3,439,q),
(63,506,ls)
);
},
{
closed = 1;
nodes = (
(135,436,o),
(138,439,qs),
(199,506,ls),
(207,516,o),
(224,516,qs),
(276,516,ls),
(287,516,o),
(280,507,q),
(212,442,ls),
(202,431,o),
(184,431,qs),
(140,431,ls),
(137,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 33 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 4 2 2 0 1 0 81 16 14 22 19 14 26 16 26 52 50 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 281;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-160,o),
(47,-160,qs),
(-9,-160,ls),
(-18,-160,o),
(-16,-151,qs),
(44,182,l),
(75,360,l),
(75,368,o),
(84,368,qs),
(89,368,ls),
(150,368,o),
(137,299,qs),
(114,168,ls),
(114,166,o),
(113,163,q),
(110,143,o),
(110,133,qs),
(110,57,o),
(184,57,qs),
(269,57,o),
(286,161,qs),
(322,360,ls),
(323,368,o),
(331,368,qs),
(336,368,ls),
(395,368,o),
(384,299,qs),
(359,161,ls),
(344,80,o),
(251,-10,o),
(181,-10,qs),
(116,-10,o),
(87,24,q),
(56,-151,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
26 1 2 1 33 1 4 0 2 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 52 55 35 52 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,-11,o),
(171,-11,qs),
(149,-11,o),
(112,22,o),
(108,46,qs),
(93,126,o),
(165,193,qs),
(168,196,o),
(171,193,qs),
(197,172,o),
(178,147,qs),
(162,122,o),
(160,98,q),
(207,91,o),
(215,44,qs),
(219,21,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
6 2 2 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
44 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,208,o),
(136,208,qs),
(114,208,o),
(77,242,o),
(73,266,qs),
(58,346,o),
(130,413,q),
(133,415,o),
(136,412,qs),
(162,391,o),
(143,366,qs),
(127,341,o),
(125,318,q),
(172,311,o),
(180,263,qs),
(184,240,o)
);
},
{
closed = 1;
nodes = (
(197,-11,o),
(175,-11,qs),
(153,-11,o),
(115,21,o),
(111,44,qs),
(107,66,o),
(134,99,o),
(156,99,qs),
(178,99,o),
(215,67,o),
(219,44,qs),
(223,21,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
8 2 2 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 0 133 0 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
36 36 44 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,154,o),
(225,164,qs),
(217,210,ls),
(210,243,o),
(156,278,qs),
(95,318,o),
(51,370,o),
(43,413,qs),
(31,476,o),
(64,515,qs),
(99,559,o),
(171,559,qs),
(215,559,o),
(291,514,o),
(297,483,q),
(303,466,o),
(289,466,qs),
(283,466,o),
(273,470,qs),
(226,488,o),
(190,488,qs),
(151,488,o),
(113,445,o),
(120,409,qs),
(128,371,o),
(198,325,qs),
(248,293,o),
(287,249,o),
(292,218,qs),
(302,164,ls),
(304,154,o),
(294,154,qs),
(237,154,ls)
);
},
{
closed = 1;
nodes = (
(336,67,o),
(340,44,qs),
(344,21,o),
(318,-11,o),
(297,-11,qs),
(274,-11,o),
(236,22,o),
(233,44,qs),
(229,66,o),
(255,99,o),
(277,99,qs),
(299,99,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 33 1 0 40 38 33 44 34 44 21 19 16 14 12 10 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,0,o),
(463,0,qs),
(222,0,ls),
(170,0,o),
(143,-22,qs),
(138,-26,o),
(132,-26,qs),
(126,-26,o),
(121,-18,q),
(104,20,o),
(135,44,q),
(150,58,o),
(176,63,q),
(133,108,o),
(125,176,qs),
(117,248,o),
(149,294,qs),
(186,348,o),
(261,348,qs),
(316,348,o),
(354,319,qs),
(381,299,o),
(385,276,qs),
(388,256,o),
(377,256,qs),
(373,256,o),
(363,261,qs),
(320,282,o),
(279,282,qs),
(233,282,o),
(189,223,o),
(198,174,qs),
(205,129,o),
(273,69,o),
(316,69,qs),
(401,69,ls),
(430,69,o),
(470,39,o),
(473,17,qs),
(473,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
26 1 5 0 1 76 0 2 1 0 1 2 0 128 0 4 5 4 134 0 3 0 1 2 3 1 105 0 0 0 5 95 0 5 5 24 5 78 50 42 36 34 36 50 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,684,qs),
(87,674,o),
(95,674,qs),
(105,674,o),
(113,687,qs),
(114,689,o),
(116,693,qs),
(120,700,o),
(121,701,q),
(124,702,o),
(126,702,qs),
(129,702,o),
(133,698,qs),
(140,689,o),
(143,674,qs),
(146,655,o),
(121,629,o),
(101,631,qs),
(82,632,o),
(41,646,q),
(36,647,o),
(28,650,qs),
(-2,659,o),
(-10,659,qs),
(-20,659,o),
(-29,647,q),
(-29,645,o),
(-31,642,qs),
(-35,634,o),
(-37,633,qs),
(-39,632,o),
(-41,632,qs),
(-45,632,o),
(-49,636,qs),
(-57,646,o),
(-59,660,qs),
(-62,679,o),
(-37,705,o),
(-17,703,qs),
(2,702,o),
(44,688,q),
(49,687,o)
);
},
{
closed = 1;
nodes = (
(117,0,o),
(116,8,qs),
(31,488,ls),
(19,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(96,548,qs),
(181,68,ls),
(193,0,o),
(133,0,qs),
(126,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 0 0 1 2 0 1 105 0 3 0 2 5 3 2 105 0 5 5 23 77 6 1 4 4 24 4 78 43 42 49 46 42 53 43 52 46 20 46 17 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,639,o),
(-11,633,qs),
(-14,632,o),
(-17,630,qs),
(-22,628,o),
(-24,628,qs),
(-28,628,o),
(-31,634,qs),
(-49,675,o),
(-2,682,q),
(-16,699,o),
(-18,723,qs),
(-21,758,o),
(20,803,o),
(54,803,qs),
(105,803,o),
(114,757,qs),
(117,746,o),
(108,747,qs),
(106,747,o),
(102,749,qs),
(97,751,o),
(95,752,qs),
(78,760,o),
(61,759,qs),
(23,757,o),
(29,723,qs),
(32,707,o),
(58,684,o),
(74,684,qs),
(111,684,ls),
(147,684,o),
(151,652,qs),
(152,648,ls),
(153,639,o),
(144,639,qs),
(40,639,ls)
);
},
{
closed = 1;
nodes = (
(204,0,o),
(144,0,qs),
(137,0,ls),
(128,0,o),
(127,8,qs),
(42,488,ls),
(30,556,o),
(90,556,qs),
(97,556,ls),
(105,556,o),
(107,548,qs),
(192,68,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
26 1 0 1 1 76 0 3 0 2 1 3 2 105 0 1 6 1 0 4 1 0 103 0 4 4 23 77 0 5 5 24 5 78 1 0 47 44 41 38 22 20 12 10 7 4 0 36 1 35 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,456,q),
(93,496,o),
(140,503,q),
(125,521,o),
(124,544,qs),
(121,580,o),
(161,624,o),
(196,624,qs),
(247,624,o),
(256,578,qs),
(259,567,o),
(250,568,qs),
(247,568,o),
(243,570,qs),
(239,573,o),
(236,573,q),
(220,581,o),
(203,580,qs),
(165,578,o),
(171,544,qs),
(173,528,o),
(199,505,o),
(215,505,qs),
(253,505,ls),
(288,505,o),
(293,473,qs),
(294,469,ls),
(295,461,o),
(286,461,qs),
(182,461,ls),
(147,461,o),
(130,454,qs),
(128,453,o),
(124,451,qs),
(120,449,o),
(118,449,qs),
(114,449,o)
);
},
{
closed = 1;
nodes = (
(444,-124,qs),
(415,-215,o),
(301,-214,qs),
(254,-214,o),
(176,-176,o),
(163,-147,qs),
(153,-126,o),
(175,-126,qs),
(180,-126,o),
(188,-128,qs),
(236,-143,o),
(283,-143,qs),
(348,-142,o),
(369,-102,qs),
(389,-66,o),
(378,15,q),
(333,-9,o),
(283,-9,qs),
(209,-9,o),
(156,39,qs),
(97,92,o),
(82,182,qs),
(68,265,o),
(105,318,qs),
(144,376,o),
(222,377,qs),
(395,379,o),
(439,130,qs),
(470,-52,o)
);
},
{
closed = 1;
nodes = (
(365,92,q),
(365,103,o),
(362,117,qs),
(329,306,o),
(230,306,qs),
(189,306,o),
(150,239,o),
(160,184,qs),
(170,129,o),
(233,63,o),
(276,63,qs),
(333,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
31 1 1 2 33 1 0 1 76 1 9 10 49 1 5 9 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 11 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 7 5 6 5 7 6 128 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 4 0 10 9 4 10 105 11 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
67 66 73 71 66 77 67 77 35 34 36 38 41 40 35 51 53 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(124,8,qs),
(39,488,ls),
(27,556,o),
(87,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(189,68,ls),
(201,0,o),
(140,0,qs),
(134,0,ls)
);
},
{
closed = 1;
nodes = (
(295,-232,o),
(286,-232,qs),
(182,-232,ls),
(147,-232,o),
(130,-238,qs),
(128,-239,o),
(124,-241,qs),
(120,-243,o),
(118,-243,qs),
(114,-243,o),
(110,-237,q),
(93,-196,o),
(140,-189,q),
(125,-172,o),
(124,-148,qs),
(121,-113,o),
(161,-68,o),
(196,-68,qs),
(247,-68,o),
(256,-114,qs),
(259,-125,o),
(250,-124,qs),
(248,-124,o),
(243,-122,qs),
(239,-120,o),
(237,-119,qs),
(220,-111,o),
(203,-112,qs),
(165,-114,o),
(171,-148,qs),
(174,-165,o),
(199,-187,o),
(215,-187,qs),
(253,-187,ls),
(289,-187,o),
(293,-219,qs),
(294,-223,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
33 1 2 3 35 1 5 2 2 76 0 4 0 3 2 4 3 105 0 2 0 5 2 5 99 0 1 1 23 77 6 1 0 0 24 0 78 1 0 47 44 31 29 21 19 16 13 7 4 0 11 1 10 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,320,o),
(97,313,qs),
(94,312,o),
(91,311,q),
(86,308,o),
(84,308,qs),
(80,308,o),
(77,315,qs),
(59,356,o),
(106,362,q),
(92,380,o),
(90,404,qs),
(87,439,o),
(128,483,o),
(162,483,qs),
(213,483,o),
(222,438,qs),
(225,426,o),
(216,427,q),
(214,428,o),
(210,430,qs),
(205,432,o),
(203,433,qs),
(186,440,o),
(169,439,qs),
(131,437,o),
(137,403,qs),
(140,387,o),
(166,364,o),
(182,364,qs),
(219,364,ls),
(255,364,o),
(259,332,qs),
(260,328,ls),
(261,320,o),
(252,320,qs),
(148,320,ls)
);
},
{
closed = 1;
nodes = (
(512,109,qs),
(600,89,o),
(628,75,qs),
(677,50,o),
(677,1,qs),
(677,-87,o),
(615,-146,qs),
(543,-214,o),
(428,-214,qs),
(296,-214,o),
(212,-147,qs),
(127,-79,o),
(109,41,qs),
(106,63,o),
(106,83,qs),
(106,143,o),
(130,187,qs),
(146,217,o),
(169,233,qs),
(177,238,o),
(184,238,qs),
(199,238,o),
(199,224,qs),
(199,220,o),
(197,215,qs),
(176,162,o),
(176,108,qs),
(176,81,o),
(181,56,qs),
(197,-30,o),
(257,-83,qs),
(325,-143,o),
(425,-143,qs),
(498,-143,o),
(590,-76,o),
(598,-18,q),
(599,-16,o),
(599,-12,qs),
(599,7,o),
(567,26,o),
(515,37,qs),
(486,43,o),
(472,47,qs),
(323,82,o),
(308,202,qs),
(306,215,o),
(306,228,qs),
(306,292,o),
(346,332,qs),
(391,377,o),
(464,377,qs),
(513,377,o),
(589,334,o),
(597,302,qs),
(598,295,o),
(598,292,qs),
(598,274,o),
(585,274,qs),
(579,274,o),
(572,278,qs),
(510,306,o),
(475,306,qs),
(433,306,o),
(383,261,o),
(383,224,qs),
(383,214,o),
(385,203,qs),
(396,136,o),
(492,113,qs),
(500,111,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
26 1 0 1 50 1 5 4 68 1 7 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 0 3 0 2 1 3 2 105 10 1 0 4 1 0 87 6 1 1 0 4 5 1 4 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 0 3 0 2 6 3 2 105 0 1 10 1 0 4 1 0 103 0 6 0 4 5 6 4 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 98 96 86 84 74 72 56 54 49 47 45 43 22 20 12 10 7 4 0 36 1 35 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(124,8,qs),
(39,488,ls),
(27,556,o),
(87,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(189,68,ls),
(201,0,o),
(140,0,qs),
(134,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,73,o),
(82,154,qs),
(76,200,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,286,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
},
{
closed = 1;
nodes = (
(500,-98,o),
(504,-119,qs),
(508,-140,o),
(484,-169,o),
(464,-169,qs),
(443,-169,o),
(409,-140,o),
(406,-119,qs),
(402,-98,o),
(425,-69,o),
(446,-69,qs),
(467,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 0 2 0 133 0 2 1 2 133 6 1 4 0 5 4 5 101 0 1 1 3 96 0 3 3 24 3 78 33 32 39 37 32 43 33 43 55 38 51 49 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,525,o),
(84,525,qs),
(66,525,o),
(36,551,o),
(33,571,qs),
(29,589,o),
(49,615,o),
(68,615,qs),
(87,615,o),
(117,590,o),
(121,571,qs),
(124,551,o)
);
},
{
closed = 1;
nodes = (
(162,551,o),
(159,571,qs),
(155,589,o),
(176,615,o),
(195,615,qs),
(213,615,o),
(243,590,o),
(246,571,qs),
(250,551,o),
(229,525,o),
(211,525,qs),
(192,525,o)
);
},
{
closed = 1;
nodes = (
(401,48,qs),
(362,-9,o),
(279,-9,qs),
(208,-9,o),
(155,32,qs),
(88,83,o),
(76,176,qs),
(68,238,o),
(119,337,o),
(173,366,q),
(158,380,o),
(150,395,qs),
(129,435,o),
(169,455,qs),
(172,457,o),
(177,458,qs),
(182,460,o),
(189,449,qs),
(212,415,o),
(281,366,qs),
(317,341,o),
(331,329,qs),
(412,261,o),
(424,172,qs),
(434,97,o)
);
},
{
closed = 1;
nodes = (
(355,125,o),
(344,177,qs),
(334,227,o),
(293,264,qs),
(270,285,o),
(230,313,q),
(139,267,o),
(155,173,qs),
(162,126,o),
(233,62,o),
(277,62,qs),
(318,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
54 38 2 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
50 49 13 12 49 60 50 60 46 44 19 17 12 23 13 23 36 34 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,403,o),
(256,422,qs),
(252,441,o),
(273,467,o),
(291,467,qs),
(310,467,o),
(340,441,o),
(344,422,qs),
(347,403,o),
(326,377,o),
(307,377,qs),
(289,377,o)
);
},
{
closed = 1;
nodes = (
(385,403,o),
(382,422,qs),
(378,441,o),
(399,467,o),
(418,467,qs),
(436,467,o),
(466,441,o),
(469,422,qs),
(473,403,o),
(452,377,o),
(434,377,qs),
(415,377,o)
);
},
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 4 0 6 0 4 6 128 0 6 5 0 6 5 126 3 1 1 9 2 8 3 0 4 1 0 105 0 5 5 7 96 0 7 7 24 7 78 13 12 1 0 52 49 42 40 34 31 28 25 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,497,o),
(304,516,qs),
(301,535,o),
(322,562,o),
(341,562,qs),
(359,562,o),
(388,536,o),
(392,516,qs),
(396,497,o),
(375,472,o),
(357,472,qs),
(338,472,o)
);
},
{
closed = 1;
nodes = (
(260,402,o),
(257,421,qs),
(253,440,o),
(273,466,o),
(292,466,qs),
(311,466,o),
(341,440,o),
(344,421,qs),
(348,402,o),
(327,376,o),
(308,376,qs),
(289,376,o)
);
},
{
closed = 1;
nodes = (
(400,466,o),
(418,466,qs),
(437,466,o),
(467,440,o),
(470,421,qs),
(473,402,o),
(453,376,o),
(434,376,qs),
(415,376,o),
(386,402,o),
(382,421,qs),
(379,440,o)
);
},
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 6 2 8 2 6 8 128 0 8 7 2 8 7 126 5 1 3 4 11 2 2 6 3 2 105 10 1 0 0 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 13 12 1 0 64 61 54 52 46 43 40 37 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(454,74,l),
(432,92,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(502,116,o),
(530,90,qs),
(545,76,o),
(568,75,qs),
(576,74,o),
(578,66,qs),
(583,35,o),
(552,0,o),
(520,0,qs),
(295,0,ls)
);
},
{
closed = 1;
nodes = (
(406,-99,o),
(410,-121,qs),
(414,-141,o),
(391,-171,o),
(370,-171,qs),
(349,-171,o),
(316,-142,o),
(312,-121,qs),
(308,-99,o),
(332,-71,o),
(352,-71,qs),
(373,-71,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 11 1 8 0 9 7 8 9 105 0 7 0 6 7 6 101 5 1 1 1 0 95 10 1 0 0 24 0 78 53 52 1 0 59 57 52 63 53 63 44 42 34 32 26 24 21 19 17 15 12 10 6 5 0 51 1 50 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 593;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(454,74,l),
(432,92,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(502,116,o),
(530,90,qs),
(545,76,o),
(568,75,qs),
(576,74,o),
(578,66,qs),
(583,35,o),
(552,0,o),
(520,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 0 7 0 6 7 6 101 5 1 1 1 0 95 8 1 0 0 24 0 78 1 0 44 42 34 32 26 24 21 19 17 15 12 10 6 5 0 51 1 50 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 593;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,511,o),
(269,489,qs),
(273,469,o),
(250,439,o),
(229,439,qs),
(208,439,o),
(175,468,o),
(171,489,qs),
(167,511,o),
(190,539,o),
(211,539,qs),
(232,539,o)
);
},
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(454,74,l),
(432,92,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(502,116,o),
(530,90,qs),
(545,76,o),
(568,75,qs),
(576,74,o),
(578,66,qs),
(583,35,o),
(552,0,o),
(520,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 6 3 6 5 3 128 0 4 0 6 5 4 6 105 0 9 0 8 9 8 101 0 1 1 0 97 10 1 0 0 23 77 7 1 3 3 2 95 11 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 3 6 5 3 128 10 1 0 0 1 4 0 1 105 0 4 0 6 5 4 6 105 0 9 0 8 9 8 101 7 1 3 3 2 95 11 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
13 12 1 0 56 54 46 44 38 36 33 31 29 27 24 22 18 17 12 63 13 62 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 593;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(131,74,o),
(161,74,qs),
(241,74,ls),
(283,74,o),
(322,134,o),
(314,183,qs),
(304,240,o),
(241,306,o),
(195,306,qs),
(168,306,o),
(136,293,q),
(135,292,o),
(133,291,qs),
(127,288,o),
(123,288,qs),
(111,288,o),
(109,307,qs),
(105,335,o),
(161,377,o),
(201,377,qs),
(273,377,o),
(321,336,qs),
(378,289,o),
(392,196,qs),
(405,118,o),
(372,64,qs),
(334,0,o),
(256,0,qs),
(120,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 27 24 20 18 13 12 9 7 0 32 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,504,o),
(179,483,qs),
(183,462,o),
(160,433,o),
(139,433,qs),
(119,433,o),
(85,462,o),
(81,483,qs),
(77,505,o),
(101,533,o),
(122,533,qs),
(142,533,o)
);
},
{
closed = 1;
nodes = (
(107,0,o),
(105,12,qs),
(104,19,ls),
(100,44,o),
(132,74,o),
(162,74,qs),
(242,74,ls),
(284,74,o),
(323,134,o),
(314,183,qs),
(304,240,o),
(242,306,o),
(196,306,qs),
(169,306,o),
(137,293,q),
(136,292,o),
(134,291,qs),
(128,288,o),
(124,288,qs),
(112,288,o),
(109,307,qs),
(106,335,o),
(162,377,o),
(202,377,qs),
(274,377,o),
(322,336,qs),
(379,289,o),
(393,196,qs),
(406,118,o),
(373,64,qs),
(335,0,o),
(257,0,qs),
(121,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 39 36 32 30 25 24 21 19 12 44 13 43 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 1 3 133 0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 98 0 2 0 2 82 51 35 34 35 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(176,499,o),
(180,478,qs),
(184,457,o),
(160,428,o),
(140,428,qs),
(119,428,o),
(85,457,o),
(82,478,qs),
(78,500,o),
(101,528,o),
(122,528,qs),
(143,528,o)
);
},
{
closed = 1;
nodes = (
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 0 2 4 4 2 89 0 2 2 4 98 0 4 2 4 82 1 0 32 29 26 24 21 19 17 15 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1072,84,o),
(1043,41,qs),
(1010,-9,o),
(932,-9,qs),
(848,-9,o),
(802,36,q),
(768,-9,o),
(694,-9,qs),
(643,-9,o),
(607,8,q),
(609,-91,o),
(552,-151,qs),
(492,-214,o),
(390,-214,qs),
(283,-214,o),
(208,-155,qs),
(121,-86,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(545,-47,o),
(525,58,qs),
(490,251,ls),
(478,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(555,311,qs),
(562,272,o),
(573,216,qs),
(580,175,o),
(583,158,q),
(584,159,l),
(592,115,o),
(643,66,o),
(680,66,qs),
(724,66,o),
(754,110,o),
(745,162,qs),
(725,271,ls),
(713,338,o),
(773,338,qs),
(780,338,ls),
(789,338,o),
(790,331,qs),
(820,162,ls),
(828,117,o),
(881,66,o),
(918,66,qs),
(962,66,o),
(991,108,o),
(982,159,qs),
(959,291,ls),
(947,358,o),
(1008,358,qs),
(1014,358,ls),
(1023,358,o),
(1025,350,qs),
(1059,158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
67 63 2 8 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 102 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 106 0 5 7 7 5 89 0 5 5 7 98 0 7 5 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
70 68 36 40 24 37 56 36 52 36 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1100;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,535,o),
(670,554,qs),
(666,574,o),
(687,600,o),
(706,600,qs),
(724,600,o),
(754,574,o),
(758,554,qs),
(761,535,o),
(741,510,o),
(722,510,qs),
(703,510,o)
);
},
{
closed = 1;
nodes = (
(625,440,o),
(622,459,qs),
(619,478,o),
(639,504,o),
(657,504,qs),
(676,504,o),
(707,478,o),
(710,459,qs),
(713,440,o),
(692,414,o),
(673,414,qs),
(655,414,o)
);
},
{
closed = 1;
nodes = (
(765,504,o),
(784,504,qs),
(802,504,o),
(832,478,o),
(835,459,qs),
(839,440,o),
(818,414,o),
(800,414,qs),
(781,414,o),
(751,440,o),
(748,459,qs),
(744,478,o)
);
},
{
closed = 1;
nodes = (
(1072,84,o),
(1043,41,qs),
(1010,-9,o),
(932,-9,qs),
(848,-9,o),
(802,36,q),
(768,-9,o),
(694,-9,qs),
(643,-9,o),
(607,8,q),
(609,-91,o),
(552,-151,qs),
(492,-214,o),
(390,-214,qs),
(283,-214,o),
(208,-155,qs),
(121,-86,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(545,-47,o),
(525,58,qs),
(490,251,ls),
(478,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(555,311,qs),
(562,272,o),
(573,216,qs),
(580,175,o),
(583,158,q),
(584,159,l),
(592,115,o),
(643,66,o),
(680,66,qs),
(724,66,o),
(754,110,o),
(745,162,qs),
(725,271,ls),
(713,338,o),
(773,338,qs),
(780,338,ls),
(789,338,o),
(790,331,qs),
(820,162,ls),
(828,117,o),
(881,66,o),
(918,66,qs),
(962,66,o),
(991,108,o),
(982,159,qs),
(959,291,ls),
(947,358,o),
(1008,358,qs),
(1014,358,ls),
(1023,358,o),
(1025,350,qs),
(1059,158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
103 99 2 14 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 102 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 106 0 11 13 13 11 89 0 11 11 13 98 0 13 11 13 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
13 12 1 0 106 104 102 100 96 94 86 85 77 75 70 67 59 57 53 50 46 44 40 37 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1100;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1180,54,qs),
(1144,0,o),
(1068,0,qs),
(692,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(686,74,l),
(695,195,o),
(758,276,qs),
(837,377,o),
(970,377,qs),
(1061,377,o),
(1123,331,qs),
(1196,277,o),
(1205,182,qs),
(1213,102,o)
);
},
{
closed = 1;
nodes = (
(1097,74,o),
(1135,133,o),
(1125,186,qs),
(1115,238,o),
(1033,305,o),
(978,306,qs),
(894,308,o),
(837,248,qs),
(775,184,o),
(764,74,q),
(1054,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
46 1 6 1 1 76 0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 0 0 0 7 4 0 7 105 0 3 0 5 3 5 102 9 8 2 1 1 6 95 0 6 6 24 6 78 53 53 53 63 53 62 38 52 40 24 37 52 35 35 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 1240;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(864,468,o),
(860,489,qs),
(857,510,o),
(880,539,o),
(901,539,qs),
(922,539,o),
(955,510,o),
(959,489,qs),
(963,468,o),
(939,439,o),
(919,439,qs),
(898,439,o)
);
},
{
closed = 1;
nodes = (
(1180,54,qs),
(1144,0,o),
(1068,0,qs),
(692,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(686,74,l),
(695,195,o),
(758,276,qs),
(837,377,o),
(970,377,qs),
(1061,377,o),
(1123,331,qs),
(1196,277,o),
(1205,182,qs),
(1213,102,o)
);
},
{
closed = 1;
nodes = (
(1097,74,o),
(1135,133,o),
(1125,186,qs),
(1115,238,o),
(1033,305,o),
(978,306,qs),
(894,308,o),
(837,248,qs),
(775,184,o),
(764,74,q),
(1054,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
58 1 8 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 2 0 9 6 2 9 105 0 5 0 7 5 7 102 11 1 0 0 1 97 0 1 1 23 77 12 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 0 2 0 9 6 2 9 105 0 5 0 7 5 7 102 12 10 2 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
65 65 1 0 65 75 65 74 70 68 62 59 55 53 45 44 36 34 29 26 22 20 17 15 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1240;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(697,54,qs),
(661,0,o),
(585,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(130,74,o),
(160,74,qs),
(203,74,l),
(130,488,ls),
(118,556,o),
(179,556,qs),
(186,556,ls),
(194,556,o),
(195,548,qs),
(250,238,l),
(329,377,o),
(487,377,qs),
(578,377,o),
(640,331,qs),
(713,277,o),
(722,182,qs),
(730,102,o)
);
},
{
closed = 1;
nodes = (
(614,74,o),
(652,133,o),
(642,186,qs),
(632,238,o),
(550,305,o),
(495,306,qs),
(411,308,o),
(354,248,qs),
(292,184,o),
(281,74,q),
(571,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
6 1 2 4 1 76 0 0 0 4 2 0 4 105 0 1 1 23 77 6 5 2 2 2 3 96 0 3 3 24 3 78 25 25 25 35 25 34 38 52 34 51 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(697,54,qs),
(661,0,o),
(585,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(130,74,o),
(160,74,qs),
(203,74,l),
(130,488,ls),
(118,556,o),
(179,556,qs),
(186,556,ls),
(194,556,o),
(195,548,qs),
(250,238,l),
(329,377,o),
(487,377,qs),
(578,377,o),
(640,331,qs),
(713,277,o),
(722,182,qs),
(730,102,o)
);
},
{
closed = 1;
nodes = (
(390,468,o),
(386,489,qs),
(383,510,o),
(406,539,o),
(427,539,qs),
(448,539,o),
(481,510,o),
(485,489,qs),
(488,468,o),
(465,439,o),
(445,439,qs),
(424,439,o)
);
},
{
closed = 1;
nodes = (
(614,74,o),
(652,133,o),
(642,186,qs),
(632,238,o),
(550,305,o),
(495,306,qs),
(411,308,o),
(354,248,qs),
(292,184,o),
(281,74,q),
(571,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 6 2 0 6 105 0 1 1 23 77 8 1 4 4 5 97 0 5 5 23 77 9 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 8 1 4 0 5 4 105 0 0 0 6 2 0 6 105 0 1 1 23 77 9 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
37 37 26 25 37 47 37 46 42 40 32 30 25 36 26 36 52 34 51 35 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,-226,o),
(536,-238,qs),
(524,-279,o),
(426,-332,o),
(362,-331,qs),
(263,-330,o),
(195,-277,qs),
(121,-220,o),
(108,-127,qs),
(100,-70,o),
(139,22,o),
(183,48,q),
(101,91,o),
(91,188,qs),
(82,268,o),
(124,320,qs),
(171,377,o),
(256,377,qs),
(306,377,o),
(385,333,o),
(393,302,qs),
(397,285,o),
(382,271,o),
(368,278,qs),
(306,306,o),
(271,306,qs),
(214,306,o),
(159,243,o),
(168,188,qs),
(176,141,o),
(255,74,o),
(302,74,qs),
(420,74,ls),
(449,74,o),
(492,43,o),
(496,18,qs),
(497,12,ls),
(499,0,o),
(486,0,qs),
(299,0,ls),
(238,0,o),
(209,-35,qs),
(180,-72,o),
(191,-130,qs),
(199,-179,o),
(237,-215,qs),
(285,-258,o),
(359,-260,qs),
(412,-261,o),
(454,-248,qs),
(478,-241,o),
(512,-221,qs),
(523,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
40 1 1 2 1 76 0 4 0 3 2 4 3 105 0 0 0 5 0 5 101 0 2 2 1 95 0 1 1 24 1 78 43 38 36 52 54 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(173,468,o),
(170,489,qs),
(166,511,o),
(189,539,o),
(210,539,qs),
(231,539,o),
(264,511,o),
(268,489,qs),
(272,469,o),
(248,439,o),
(228,439,qs),
(207,439,o)
);
},
{
closed = 1;
nodes = (
(539,-226,o),
(536,-238,qs),
(524,-279,o),
(426,-332,o),
(362,-331,qs),
(263,-330,o),
(195,-277,qs),
(121,-220,o),
(108,-127,qs),
(100,-70,o),
(139,22,o),
(183,48,q),
(101,91,o),
(91,188,qs),
(82,268,o),
(124,320,qs),
(171,377,o),
(256,377,qs),
(306,377,o),
(385,333,o),
(393,302,qs),
(397,285,o),
(382,271,o),
(368,278,qs),
(306,306,o),
(271,306,qs),
(214,306,o),
(159,243,o),
(168,188,qs),
(176,141,o),
(255,74,o),
(302,74,qs),
(420,74,ls),
(449,74,o),
(492,43,o),
(496,18,qs),
(497,12,ls),
(499,0,o),
(486,0,qs),
(299,0,ls),
(238,0,o),
(209,-35,qs),
(180,-72,o),
(191,-130,qs),
(199,-179,o),
(237,-215,qs),
(285,-258,o),
(359,-260,qs),
(412,-261,o),
(454,-248,qs),
(478,-241,o),
(512,-221,qs),
(523,-214,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
52 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 5 4 6 5 105 0 2 0 7 2 7 101 8 1 0 0 1 97 0 1 1 23 77 0 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 8 1 0 6 1 0 105 0 6 0 5 4 6 5 105 0 2 0 7 2 7 101 0 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 60 58 47 45 39 37 33 30 26 23 17 15 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,0,l),
(6,0,l),
(-7,74,l),
(109,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 97;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(572,468,o),
(568,489,qs),
(564,511,o),
(587,539,o),
(608,539,qs),
(629,539,o),
(662,511,o),
(666,489,qs),
(670,469,o),
(647,439,o),
(626,439,qs),
(605,439,o)
);
},
{
closed = 1;
nodes = (
(820,59,qs),
(782,0,o),
(705,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(545,74,l),
(502,118,o),
(494,188,qs),
(484,266,o),
(517,318,qs),
(555,377,o),
(634,377,qs),
(703,377,o),
(759,331,qs),
(823,277,o),
(838,188,qs),
(852,111,o)
);
},
{
closed = 1;
nodes = (
(761,190,qs),
(752,238,o),
(683,306,o),
(642,306,qs),
(602,306,o),
(565,242,o),
(574,190,qs),
(582,141,o),
(649,74,o),
(689,74,qs),
(781,74,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 7 3 7 4 3 128 0 2 0 7 4 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 7 3 7 4 3 128 0 1 8 1 0 2 1 0 105 0 2 0 7 4 2 7 105 9 6 2 3 3 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
46 45 1 0 52 50 45 55 46 55 42 39 32 30 24 22 17 15 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 876;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(318,470,o),
(316,489,qs),
(313,508,o),
(334,534,o),
(353,534,qs),
(371,534,o),
(401,508,o),
(404,489,qs),
(406,470,o),
(384,444,o),
(365,444,qs),
(347,444,o)
);
},
{
closed = 1;
nodes = (
(444,470,o),
(441,489,qs),
(439,508,o),
(460,534,o),
(479,534,qs),
(498,534,o),
(526,508,o),
(529,489,qs),
(532,470,o),
(510,444,o),
(492,444,qs),
(473,444,o)
);
},
{
closed = 1;
nodes = (
(630,-128,qs),
(565,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(592,-143,o),
(598,12,q),
(556,-9,o),
(509,-9,qs),
(435,-9,o),
(382,39,qs),
(323,92,o),
(308,182,qs),
(295,265,o),
(331,318,qs),
(370,376,o),
(448,377,qs),
(636,379,o),
(671,82,qs),
(687,-51,o)
);
},
{
closed = 1;
nodes = (
(591,92,q),
(591,104,o),
(588,117,qs),
(555,306,o),
(456,306,qs),
(415,306,o),
(376,239,o),
(386,184,qs),
(396,129,o),
(459,63,o),
(503,63,qs),
(559,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
72 1 9 7 36 1 5 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 13 1 9 0 5 6 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
63 62 13 12 1 0 69 67 62 73 63 73 59 57 49 47 39 37 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(584,488,ls),
(572,556,o),
(633,556,qs),
(640,556,ls),
(648,556,o),
(649,548,qs),
(718,168,ls)
);
},
{
closed = 1;
nodes = (
(318,313,q),
(298,336,o),
(294,362,qs),
(287,399,o),
(329,449,o),
(367,449,qs),
(395,449,o),
(438,421,o),
(444,401,q),
(446,387,o),
(437,387,qs),
(433,387,o),
(426,391,qs),
(419,394,ls),
(402,402,o),
(382,402,qs),
(337,402,o),
(344,361,qs),
(348,342,o),
(378,317,o),
(398,317,qs),
(443,317,ls),
(462,317,o),
(487,298,o),
(487,283,qs),
(487,279,ls),
(487,270,o),
(479,270,qs),
(364,270,ls),
(330,270,o),
(311,262,q),
(309,262,o),
(308,261,q),
(307,261,l),
(303,259,o),
(300,259,qs),
(290,259,o),
(289,268,qs),
(283,302,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
69 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 6 7 8 6 128 0 2 6 4 6 2 4 128 0 9 0 7 8 9 7 105 0 6 5 1 4 1 6 4 105 0 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 8 7 6 7 8 6 128 0 2 6 5 6 2 5 128 0 4 5 1 5 4 1 128 0 9 0 7 8 9 7 105 0 6 0 5 4 6 5 103 0 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
65 63 35 35 52 54 21 55 38 51 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(600,64,ls),
(622,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 2 3 2 0 3 128 0 3 0 1 3 1 101 0 2 2 23 2 78 37 53 40 21 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,38,qs),
(532,-9,o),
(457,-9,qs),
(364,-9,o),
(261,42,q),
(250,42,ls),
(178,37,o),
(194,-54,qs),
(224,-221,ls),
(236,-288,o),
(175,-288,qs),
(168,-288,ls),
(160,-288,o),
(158,-280,qs),
(118,-53,ls),
(92,96,o),
(211,114,q),
(219,130,o),
(231,173,qs),
(260,270,o),
(280,306,qs),
(319,377,o),
(388,377,qs),
(465,377,o),
(519,318,qs),
(572,260,o),
(587,163,qs),
(600,83,o)
);
},
{
closed = 1;
nodes = (
(518,110,o),
(508,164,qs),
(498,225,o),
(435,306,o),
(398,306,qs),
(372,306,o),
(333,240,o),
(311,153,qs),
(302,119,o),
(296,104,q),
(379,62,o),
(447,63,qs),
(490,63,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 0 0 0 5 4 0 5 105 6 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 0 0 0 5 4 0 5 105 6 1 4 2 3 4 89 6 1 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
29 28 36 34 28 40 29 40 33 35 57 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,401,o),
(345,380,qs),
(349,359,o),
(325,330,o),
(305,330,qs),
(284,330,o),
(250,359,o),
(247,380,qs),
(243,401,o),
(266,430,o),
(287,430,qs),
(308,430,o)
);
},
{
closed = 1;
nodes = (
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(600,64,ls),
(623,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 98 7 1 2 4 2 82 13 12 1 0 37 36 28 26 21 18 12 45 13 45 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,48,qs),
(366,-9,o),
(282,-9,qs),
(211,-9,o),
(158,32,qs),
(91,83,o),
(79,176,qs),
(71,238,o),
(122,337,o),
(176,366,q),
(161,380,o),
(153,395,qs),
(132,435,o),
(172,455,qs),
(175,457,o),
(180,458,qs),
(185,460,o),
(192,449,qs),
(215,415,o),
(285,366,qs),
(320,341,o),
(334,329,qs),
(415,261,o),
(427,172,qs),
(437,97,o)
);
},
{
closed = 1;
nodes = (
(358,125,o),
(347,177,qs),
(337,227,o),
(296,264,qs),
(273,285,o),
(233,313,q),
(142,267,o),
(158,173,qs),
(165,126,o),
(236,62,o),
(280,62,qs),
(321,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
30 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
26 25 25 36 26 36 22 20 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,-124,qs),
(415,-215,o),
(301,-214,qs),
(254,-214,o),
(176,-176,o),
(163,-147,qs),
(153,-126,o),
(175,-126,qs),
(180,-126,o),
(188,-128,qs),
(236,-143,o),
(283,-143,qs),
(348,-142,o),
(369,-102,qs),
(389,-66,o),
(378,15,q),
(333,-9,o),
(283,-9,qs),
(209,-9,o),
(156,39,qs),
(97,92,o),
(82,182,qs),
(68,265,o),
(105,318,qs),
(144,376,o),
(222,377,qs),
(395,379,o),
(439,130,qs),
(470,-52,o)
);
},
{
closed = 1;
nodes = (
(365,92,q),
(365,103,o),
(362,117,qs),
(329,306,o),
(230,306,qs),
(189,306,o),
(150,239,o),
(160,184,qs),
(170,129,o),
(233,63,o),
(276,63,qs),
(333,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
39 1 5 6 12 1 1 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 7 1 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
30 29 36 34 29 40 30 40 35 34 36 38 33 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,-83,qs),
(312,-143,o),
(412,-143,qs),
(485,-143,o),
(577,-76,o),
(585,-18,q),
(586,-16,o),
(586,-12,qs),
(586,7,o),
(554,26,o),
(502,37,qs),
(473,43,o),
(459,47,qs),
(310,82,o),
(295,202,qs),
(293,215,o),
(293,228,qs),
(293,292,o),
(333,332,qs),
(378,377,o),
(451,377,qs),
(500,377,o),
(576,334,o),
(584,302,qs),
(585,295,o),
(585,292,qs),
(585,274,o),
(572,274,qs),
(566,274,o),
(559,278,qs),
(497,306,o),
(462,306,qs),
(420,306,o),
(370,261,o),
(370,224,qs),
(370,214,o),
(372,203,qs),
(383,136,o),
(479,113,qs),
(487,111,o),
(499,109,qs),
(587,89,o),
(615,75,qs),
(664,50,o),
(664,1,qs),
(664,-87,o),
(602,-146,qs),
(530,-214,o),
(415,-214,qs),
(283,-214,o),
(199,-147,qs),
(114,-79,o),
(96,41,qs),
(93,63,o),
(93,83,qs),
(93,143,o),
(117,187,qs),
(133,217,o),
(156,233,qs),
(164,238,o),
(171,238,qs),
(186,238,o),
(186,224,qs),
(186,220,o),
(184,215,qs),
(163,162,o),
(163,108,qs),
(163,81,o),
(168,56,qs),
(184,-30,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
43 1 3 2 61 1 5 0 2 76 0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 67 65 37 34 47 42 39 6 7 27 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,-83,qs),
(312,-143,o),
(412,-143,qs),
(485,-143,o),
(577,-76,o),
(585,-18,q),
(586,-16,o),
(586,-12,qs),
(586,7,o),
(554,26,o),
(502,37,qs),
(472,43,o),
(459,47,qs),
(310,82,o),
(295,202,qs),
(293,215,o),
(293,228,qs),
(293,292,o),
(333,332,qs),
(378,377,o),
(451,377,qs),
(500,377,o),
(576,334,o),
(584,302,qs),
(585,295,o),
(585,292,qs),
(585,274,o),
(572,274,qs),
(566,274,o),
(559,278,qs),
(497,306,o),
(462,306,qs),
(420,306,o),
(370,261,o),
(370,224,qs),
(370,214,o),
(372,203,qs),
(383,136,o),
(479,113,qs),
(487,111,o),
(499,109,qs),
(587,89,o),
(615,75,qs),
(664,50,o),
(664,1,qs),
(664,-87,o),
(602,-146,qs),
(530,-214,o),
(415,-214,qs),
(283,-214,o),
(199,-147,qs),
(114,-79,o),
(96,41,qs),
(93,63,o),
(93,83,qs),
(93,143,o),
(117,187,qs),
(133,217,o),
(156,233,qs),
(164,238,o),
(171,238,qs),
(186,238,o),
(186,224,qs),
(186,220,o),
(184,215,qs),
(163,162,o),
(163,108,qs),
(163,81,o),
(168,56,qs),
(184,-30,o)
);
},
{
closed = 1;
nodes = (
(340,-343,o),
(337,-323,qs),
(333,-304,o),
(353,-279,o),
(372,-279,qs),
(391,-279,o),
(421,-304,o),
(425,-323,qs),
(428,-343,o),
(407,-369,o),
(388,-369,qs),
(370,-369,o)
);
},
{
closed = 1;
nodes = (
(466,-343,o),
(462,-323,qs),
(459,-304,o),
(479,-279,o),
(499,-279,qs),
(517,-279,o),
(546,-304,o),
(550,-323,qs),
(554,-343,o),
(533,-369,o),
(515,-369,qs),
(496,-369,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
43 1 3 2 61 1 5 0 2 76 0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 0 1 7 5 1 105 9 1 7 6 6 7 89 9 1 7 7 6 97 11 8 10 3 6 7 6 81 83 82 71 70 89 87 82 93 83 93 77 75 70 81 71 81 67 65 37 34 47 42 39 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,758,o),
(165,726,qs),
(166,722,ls),
(167,713,o),
(158,713,qs),
(54,713,ls),
(20,713,o),
(3,707,qs),
(0,706,o),
(-3,704,qs),
(-8,702,o),
(-10,702,qs),
(-14,702,o),
(-17,708,qs),
(-26,730,o),
(-3,757,o),
(25,757,qs),
(125,758,ls)
);
},
{
closed = 1;
nodes = (
(177,665,o),
(181,633,qs),
(182,629,ls),
(184,621,o),
(174,621,qs),
(70,621,ls),
(36,621,o),
(19,614,qs),
(16,613,o),
(13,611,qs),
(8,609,o),
(6,609,qs),
(2,609,o),
(-1,616,qs),
(-10,637,o),
(14,664,o),
(41,664,qs),
(141,665,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 31 28 18 35 19 34 13 10 0 17 1 16 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,609,o),
(225,579,qs),
(223,549,o),
(196,523,q),
(215,504,o),
(196,487,qs),
(190,482,o),
(184,488,qs),
(170,499,l),
(145,479,ls),
(133,468,o),
(118,468,qs),
(104,468,o),
(73,489,q),
(71,491,o),
(69,493,qs),
(57,502,o),
(52,502,qs),
(45,502,o),
(39,487,qs),
(34,474,o),
(30,474,qs),
(24,474,o),
(20,481,qs),
(6,502,o),
(22,544,o),
(44,544,qs),
(61,544,o),
(94,521,qs),
(108,511,o),
(113,511,qs),
(118,511,o),
(123,516,qs),
(134,527,l),
(97,554,o),
(94,582,qs),
(91,610,o),
(126,647,o),
(156,647,qs),
(188,647,o)
);
},
{
closed = 1;
nodes = (
(185,583,qs),
(186,611,o),
(159,611,qs),
(129,611,o),
(134,583,qs),
(138,568,o),
(164,549,q),
(184,565,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 11 values pushed */
35 5 2 1 2 30 1 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 1 3 3 4 114 7 1 0 0 6 2 0 6 105 0 2 1 3 2 90 0 1 4 3 1 90 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 1 3 3 4 114 7 1 0 0 6 2 0 6 105 0 1 4 5 1 89 0 2 0 3 5 2 3 105 0 1 1 5 97 0 5 1 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 1 3 1 4 3 128 7 1 0 0 6 2 0 6 105 0 1 4 5 1 89 0 2 0 3 5 2 3 105 0 1 1 5 97 0 5 1 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 45 43 28 26 21 20 18 16 13 11 9 7 0 39 1 39 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,-72,o),
(185,-104,qs),
(186,-108,ls),
(187,-116,o),
(178,-116,qs),
(74,-116,ls),
(40,-116,o),
(23,-123,qs),
(20,-124,o),
(17,-125,q),
(12,-128,o),
(10,-128,qs),
(6,-128,o),
(3,-121,qs),
(-6,-100,o),
(17,-72,o),
(45,-72,qs),
(145,-72,ls)
);
},
{
closed = 1;
nodes = (
(197,-164,o),
(201,-197,qs),
(202,-201,ls),
(204,-209,o),
(194,-209,qs),
(90,-209,ls),
(56,-209,o),
(39,-216,q),
(36,-216,o),
(33,-218,qs),
(28,-221,o),
(26,-221,qs),
(22,-221,o),
(19,-214,qs),
(10,-193,o),
(34,-165,o),
(61,-165,qs),
(161,-164,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 31 28 18 35 19 34 13 10 0 17 1 16 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,665,o),
(182,633,qs),
(183,629,ls),
(184,621,o),
(175,621,qs),
(71,621,ls),
(36,621,o),
(20,614,qs),
(17,613,o),
(14,611,qs),
(9,609,o),
(7,609,qs),
(3,609,o),
(0,616,qs),
(-9,637,o),
(14,664,o),
(42,664,qs),
(142,665,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 17 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,479,o),
(74,474,q),
(73,474,o),
(72,473,qs),
(58,464,o),
(49,464,qs),
(31,464,o),
(21,476,qs),
(17,481,ls),
(13,485,o),
(17,488,qs),
(48,507,o),
(81,534,q),
(45,561,o),
(41,589,qs),
(38,618,o),
(73,654,o),
(103,654,qs),
(135,654,o),
(174,616,o),
(172,587,qs),
(170,556,o),
(143,531,q),
(162,511,o),
(143,494,qs),
(138,489,o),
(131,495,qs),
(117,507,l)
);
},
{
closed = 1;
nodes = (
(132,591,qs),
(133,618,o),
(106,618,qs),
(76,618,o),
(81,591,qs),
(85,575,o),
(111,557,q),
(131,572,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
27 14 4 3 1 2 1 76 0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 41 42 40 3 7 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,-72,o),
(185,-104,qs),
(186,-108,ls),
(187,-116,o),
(178,-116,qs),
(74,-116,ls),
(39,-116,o),
(23,-123,qs),
(20,-124,o),
(17,-126,qs),
(12,-128,o),
(10,-128,qs),
(6,-128,o),
(3,-121,qs),
(-6,-100,o),
(17,-72,o),
(45,-72,qs),
(145,-72,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 17 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,512,o),
(225,466,o),
(189,466,qs),
(153,466,o),
(130,486,q),
(113,466,o),
(80,466,qs),
(3,466,o),
(-14,552,qs),
(-19,582,ls),
(-28,629,o),
(8,629,qs),
(15,629,ls),
(21,629,o),
(22,623,qs),
(36,547,ls),
(42,510,o),
(72,510,qs),
(101,510,o),
(94,547,qs),
(88,582,ls),
(80,629,o),
(117,629,qs),
(123,629,ls),
(130,629,o),
(131,623,qs),
(144,547,ls),
(151,510,o),
(181,510,qs),
(209,510,o),
(203,547,qs),
(197,582,ls),
(189,629,o),
(224,629,qs),
(232,629,ls),
(238,629,o),
(239,623,qs),
(252,552,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
32 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 2 2 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 2 2 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
34 35 51 35 51 35 49 7 7 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,596,o),
(42,596,qs),
(70,596,o),
(112,560,o),
(118,531,qs),
(123,502,o),
(94,465,o),
(65,465,qs),
(37,465,o),
(-6,501,o),
(-11,531,qs),
(-16,560,o)
);
},
{
closed = 1;
nodes = (
(48,561,qs),
(23,561,o),
(28,531,qs),
(33,501,o),
(59,501,qs),
(85,501,o),
(80,531,qs),
(75,561,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 3 2 1 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 34 35 36 34 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,675,q),
(160,666,o),
(168,666,qs),
(178,666,o),
(186,678,qs),
(187,680,o),
(189,684,qs),
(193,691,o),
(194,692,q),
(197,693,o),
(199,693,qs),
(202,693,o),
(206,689,qs),
(213,680,o),
(216,665,qs),
(219,646,o),
(194,620,o),
(174,622,qs),
(154,624,o),
(114,637,qs),
(109,638,o),
(101,641,qs),
(71,651,o),
(63,651,qs),
(53,651,o),
(44,638,q),
(44,636,o),
(42,633,qs),
(38,625,o),
(36,624,qs),
(33,623,o),
(32,623,qs),
(28,623,o),
(24,627,q),
(16,638,o),
(14,651,qs),
(11,670,o),
(36,696,o),
(56,694,qs),
(75,693,o),
(117,679,q),
(122,678,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 128 0 0 2 1 0 89 0 0 0 1 97 0 1 0 1 81 39 37 46 17 3 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,617,o),
(236,617,qs),
(132,617,ls),
(97,617,o),
(81,611,qs),
(78,610,o),
(75,608,qs),
(70,606,o),
(68,606,qs),
(64,606,o),
(61,612,qs),
(43,653,o),
(90,659,q),
(76,677,o),
(74,701,qs),
(71,736,o),
(112,781,o),
(146,781,qs),
(197,781,o),
(206,735,qs),
(209,724,o),
(200,724,q),
(198,725,o),
(193,727,qs),
(189,729,o),
(187,730,qs),
(170,738,o),
(153,737,qs),
(115,735,o),
(121,701,qs),
(124,684,o),
(150,662,o),
(166,662,qs),
(203,662,ls),
(239,662,o),
(243,629,q),
(244,626,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
23 1 3 0 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 95 0 3 0 3 79 61 40 35 49 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,-234,o),
(201,-234,qs),
(97,-234,ls),
(62,-234,o),
(46,-241,qs),
(43,-242,o),
(40,-244,qs),
(35,-246,o),
(33,-246,qs),
(29,-246,o),
(26,-239,qs),
(8,-199,o),
(55,-192,q),
(41,-175,o),
(39,-151,qs),
(36,-115,o),
(77,-71,o),
(111,-71,qs),
(162,-71,o),
(171,-117,qs),
(174,-128,o),
(165,-127,qs),
(163,-127,o),
(158,-124,q),
(154,-123,o),
(152,-122,qs),
(135,-114,o),
(118,-115,qs),
(80,-117,o),
(86,-151,qs),
(89,-167,o),
(115,-190,o),
(131,-190,qs),
(168,-190,ls),
(204,-190,o),
(208,-222,qs),
(209,-226,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
23 1 3 0 1 76 0 2 0 1 0 2 1 105 0 0 3 3 0 89 0 0 0 3 95 0 3 0 3 79 61 40 35 49 4 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,472,qs),
(229,355,ls),
(226,344,o),
(215,344,qs),
(182,344,ls),
(170,344,o),
(164,355,qs),
(95,472,ls),
(89,483,o),
(109,483,qs),
(144,483,o),
(163,451,qs),
(191,404,l),
(202,451,ls),
(210,483,o),
(245,483,qs),
(259,483,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
3 1 2 0 1 76 1 3 2 0 2 2 0 89 1 3 2 0 0 2 97 0 2 0 2 81 1 0 13 10 7 5 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,194,qs),
(378,321,o),
(337,403,qs),
(290,496,o),
(208,496,qs),
(106,496,o),
(106,365,qs),
(106,246,o),
(149,160,qs),
(200,59,o),
(280,59,qs),
(378,59,o)
);
},
{
closed = 1;
nodes = (
(111,81,qs),
(30,187,o),
(30,362,qs),
(30,452,o),
(71,506,qs),
(117,567,o),
(203,567,qs),
(308,567,o),
(376,478,qs),
(455,375,o),
(455,194,qs),
(455,106,o),
(417,52,qs),
(371,-11,o),
(285,-11,qs),
(181,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,449,ls),
(15,446,o),
(13,455,qs),
(2,510,ls),
(1,519,o),
(10,524,q),
(67,547,ls),
(90,556,o),
(113,556,qs),
(129,556,ls),
(178,556,o),
(188,501,qs),
(264,69,l),
(329,69,ls),
(373,69,o),
(380,26,q),
(384,11,l),
(385,0,o),
(375,0,qs),
(99,0,ls),
(91,0,o),
(89,9,qs),
(80,61,ls),
(79,69,o),
(88,69,qs),
(188,69,l),
(114,486,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,69,o),
(438,27,qs),
(441,11,ls),
(443,0,o),
(432,0,qs),
(90,0,ls),
(80,0,o),
(80,9,q),
(75,29,o),
(75,59,qs),
(75,126,o),
(113,177,qs),
(136,209,o),
(195,254,qs),
(254,301,o),
(293,356,o),
(293,393,qs),
(293,443,o),
(231,498,o),
(176,498,qs),
(105,498,o),
(43,454,q),
(38,449,o),
(32,449,qs),
(26,449,o),
(23,457,qs),
(13,477,ls),
(-6,515,o),
(38,537,qs),
(103,567,o),
(167,567,qs),
(254,567,o),
(307,529,qs),
(371,483,o),
(371,393,qs),
(371,332,o),
(332,281,qs),
(309,251,o),
(250,204,qs),
(192,159,o),
(155,104,o),
(158,69,q),
(386,69,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 60 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,197,o),
(430,139,qs),
(430,79,o),
(395,41,qs),
(349,-10,o),
(254,-10,qs),
(177,-10,o),
(119,29,qs),
(58,71,o),
(58,122,qs),
(58,139,o),
(69,139,qs),
(76,139,o),
(85,129,qs),
(155,58,o),
(244,58,qs),
(353,58,o),
(353,144,qs),
(353,195,o),
(278,254,o),
(215,254,qs),
(158,254,ls),
(115,254,o),
(108,294,qs),
(105,311,ls),
(103,324,o),
(114,324,qs),
(201,324,ls),
(292,324,o),
(292,399,qs),
(292,499,o),
(171,499,qs),
(100,499,o),
(43,456,q),
(42,456,o),
(41,455,qs),
(34,450,o),
(31,450,qs),
(26,450,o),
(21,458,qs),
(11,478,ls),
(-7,516,o),
(37,538,qs),
(96,567,o),
(171,567,qs),
(254,567,o),
(306,527,qs),
(366,482,o),
(366,401,qs),
(366,324,o),
(295,293,q),
(355,283,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 51 50 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,128,o),
(33,136,qs),
(26,177,ls),
(23,192,o),
(30,208,qs),
(190,537,ls),
(199,556,o),
(221,556,qs),
(250,556,ls),
(298,556,o),
(305,508,qs),
(360,197,l),
(397,197,ls),
(442,197,o),
(450,154,q),
(451,138,l),
(453,128,o),
(442,128,qs),
(372,128,l),
(393,9,ls),
(395,0,o),
(388,0,qs),
(329,0,ls),
(320,0,o),
(319,9,qs),
(297,128,l),
(42,128,ls)
);
},
{
closed = 1;
nodes = (
(236,481,l),
(98,197,l),
(286,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 11 10 2 1 2 2 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,353,o),
(211,353,qs),
(302,353,o),
(359,303,qs),
(424,248,o),
(424,153,qs),
(424,84,o),
(380,40,qs),
(331,-10,o),
(245,-10,qs),
(171,-10,o),
(53,70,o),
(53,120,qs),
(53,137,o),
(65,137,qs),
(72,137,o),
(81,128,qs),
(150,58,o),
(233,58,qs),
(347,58,o),
(347,156,qs),
(347,215,o),
(313,249,qs),
(276,286,o),
(205,286,qs),
(137,286,o),
(67,259,qs),
(55,254,o),
(53,268,qs),
(4,547,ls),
(2,556,o),
(10,556,qs),
(276,556,ls),
(321,556,o),
(329,513,qs),
(332,497,ls),
(333,486,o),
(324,486,qs),
(86,486,l),
(112,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,362,qs),
(319,362,o),
(373,312,qs),
(434,256,o),
(434,164,qs),
(434,96,o),
(391,48,qs),
(338,-10,o),
(247,-10,qs),
(163,-10,o),
(107,42,qs),
(43,101,o),
(43,197,qs),
(43,265,o),
(80,353,qs),
(168,557,ls),
(173,567,o),
(181,567,qs),
(208,567,o),
(228,513,o),
(213,479,qs),
(153,341,l),
(194,362,o)
);
},
{
closed = 1;
nodes = (
(359,117,o),
(359,164,qs),
(359,223,o),
(287,296,o),
(228,296,qs),
(176,296,o),
(119,240,o),
(119,190,qs),
(119,132,o),
(190,59,o),
(247,59,qs),
(297,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 34 24 34 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,486,o),
(-5,495,qs),
(-14,547,ls),
(-16,556,o),
(-8,556,qs),
(296,556,ls),
(342,556,o),
(350,513,qs),
(352,502,ls),
(356,480,o),
(349,456,qs),
(219,12,l),
(214,0,o),
(204,0,qs),
(148,0,ls),
(137,0,o),
(140,9,qs),
(281,486,l),
(5,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,89,qs),
(196,54,o),
(257,54,qs),
(365,54,o),
(365,139,qs),
(365,191,o),
(327,225,qs),
(287,261,o),
(224,261,qs),
(178,261,o),
(120,211,o),
(120,171,qs),
(120,121,o)
);
},
{
closed = 1;
nodes = (
(161,324,o),
(214,324,qs),
(256,324,o),
(305,364,o),
(305,399,qs),
(305,446,o),
(237,503,o),
(182,503,qs),
(139,503,o),
(87,459,o),
(87,423,qs),
(87,382,o)
);
},
{
closed = 1;
nodes = (
(16,431,qs),
(16,485,o),
(55,522,qs),
(101,567,o),
(182,567,qs),
(260,567,o),
(314,526,qs),
(377,479,o),
(377,404,qs),
(377,369,o),
(340,309,o),
(309,294,q),
(441,252,o),
(441,136,qs),
(441,77,o),
(402,38,qs),
(354,-11,o),
(260,-11,qs),
(174,-11,o),
(114,34,qs),
(45,87,o),
(45,171,qs),
(45,255,o),
(133,290,q),
(16,330,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,194,qs),
(122,194,o),
(68,245,qs),
(6,302,o),
(6,392,qs),
(6,463,o),
(50,510,qs),
(101,567,o),
(188,567,qs),
(274,567,o),
(331,517,qs),
(397,460,o),
(397,362,qs),
(397,291,o),
(360,204,qs),
(272,1,ls),
(267,-10,o),
(258,-10,qs),
(231,-10,o),
(212,44,o),
(227,77,qs),
(286,214,l),
(255,194,o)
);
},
{
closed = 1;
nodes = (
(322,319,o),
(322,369,qs),
(322,420,o),
(290,456,qs),
(252,498,o),
(190,498,qs),
(141,498,o),
(82,440,o),
(82,392,qs),
(82,333,o),
(152,261,o),
(209,261,qs),
(261,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 35 24 35 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,314,qs),
(280,358,o),
(280,434,qs),
(280,513,o),
(222,513,qs),
(181,513,o),
(153,474,qs),
(121,428,o),
(121,355,qs),
(121,276,o),
(180,276,qs),
(221,276,o)
);
},
{
closed = 1;
nodes = (
(156,9,qs),
(537,547,ls),
(544,556,o),
(551,556,qs),
(563,556,ls),
(586,556,o),
(593,522,o),
(575,496,qs),
(229,9,ls),
(223,0,o),
(215,0,qs),
(157,0,ls),
(149,0,o)
);
},
{
closed = 1;
nodes = (
(63,295,o),
(63,355,qs),
(63,438,o),
(105,497,qs),
(155,567,o),
(232,567,qs),
(281,567,o),
(339,496,o),
(339,436,qs),
(339,350,o),
(299,291,qs),
(253,223,o),
(173,223,qs),
(123,223,o)
);
},
{
closed = 1;
nodes = (
(613,83,qs),
(645,127,o),
(645,203,qs),
(645,281,o),
(586,281,qs),
(546,281,o),
(518,242,qs),
(486,197,o),
(486,123,qs),
(486,45,o),
(545,45,qs),
(586,45,o)
);
},
{
closed = 1;
nodes = (
(427,63,o),
(427,123,qs),
(427,206,o),
(470,266,qs),
(519,335,o),
(596,335,qs),
(646,335,o),
(704,264,o),
(704,205,qs),
(704,118,o),
(664,60,qs),
(617,-9,o),
(538,-9,qs),
(488,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 1 1 3 97 5 1 3 3 23 77 13 1 6 6 2 97 14 8 11 3 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 13 1 6 6 2 97 14 8 11 3 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 11 1 2 2 24 77 13 1 6 6 8 97 14 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 1 9 5 1 105 0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 11 1 2 2 24 77 13 1 6 6 8 97 14 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 1 9 5 1 105 0 9 0 7 0 9 7 106 10 1 0 12 1 4 6 0 4 105 13 1 6 14 1 8 6 8 101 0 3 3 23 77 11 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
52 51 40 39 26 25 14 12 1 0 59 57 51 64 52 64 46 44 39 50 40 50 33 31 25 38 26 38 21 18 12 24 14 24 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 747;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-106,qs),
(147,-108,o),
(143,-105,qs),
(117,-84,o),
(136,-59,qs),
(153,-34,o),
(155,-11,q),
(107,-3,o),
(99,44,qs),
(95,67,o),
(121,99,o),
(143,99,qs),
(165,99,o),
(202,66,o),
(207,42,qs),
(221,-38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 34 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,-9,q),
(130,-12,o),
(126,-9,qs),
(100,12,o),
(119,37,qs),
(136,62,o),
(138,86,q),
(90,93,o),
(82,140,qs),
(78,163,o),
(104,195,o),
(126,195,qs),
(148,195,o),
(185,162,o),
(190,138,qs),
(204,58,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
8 1 0 73 0 0 0 118 34 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,403,o),
(8,413,qs),
(16,463,ls),
(18,471,o),
(25,468,qs),
(120,431,l),
(96,531,l),
(95,539,o),
(103,539,qs),
(160,539,ls),
(169,539,o),
(170,531,qs),
(180,431,l),
(263,468,ls),
(271,471,o),
(275,463,qs),
(298,417,ls),
(303,407,o),
(295,406,q),
(202,379,l),
(282,300,ls),
(289,294,o),
(282,289,qs),
(244,261,l),
(237,257,o),
(233,262,qs),
(164,348,l),
(126,257,l),
(124,250,o),
(115,256,qs),
(66,283,l),
(59,288,o),
(63,294,qs),
(113,377,l),
(15,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 1 3 96 0 3 3 24 3 78 55 38 51 49 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,469,qs),
(15,472,o),
(15,473,qs),
(8,510,o),
(-13,550,qs),
(-16,557,o),
(-19,568,qs),
(-22,587,o),
(-8,597,qs),
(-4,600,o),
(0,601,qs),
(7,604,o),
(12,598,qs),
(24,585,o),
(33,555,qs),
(51,493,o),
(34,466,qs),
(29,458,o),
(23,458,qs),
(19,458,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
1 1 0 0 118 1 0 0 19 1 19 2 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-38,644,q),
(-38,642,o),
(-40,639,qs),
(-44,632,o),
(-46,630,q),
(-49,629,o),
(-50,629,qs),
(-54,629,o),
(-58,633,q),
(-66,644,o),
(-68,657,qs),
(-71,676,o),
(-46,702,o),
(-26,701,qs),
(-16,700,o),
(-7,697,qs),
(-4,696,o),
(-2,696,qs),
(1,696,o),
(2,698,q),
(2,699,l),
(30,758,o),
(83,758,qs),
(113,758,o),
(150,725,o),
(151,698,qs),
(153,668,o),
(117,630,o),
(87,630,qs),
(66,630,o),
(25,645,qs),
(-8,657,o),
(-19,657,qs),
(-30,657,o)
);
},
{
closed = 1;
nodes = (
(109,701,qs),
(105,719,o),
(84,719,qs),
(60,719,o),
(43,683,q),
(66,673,o),
(85,673,qs),
(114,673,o)
);
},
{
closed = 1;
nodes = (
(117,0,o),
(116,8,qs),
(31,488,ls),
(19,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(96,548,qs),
(181,68,ls),
(193,0,o),
(132,0,qs),
(126,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
36 15 2 4 3 1 76 0 2 0 5 3 2 5 105 0 3 8 1 0 1 3 0 105 9 1 4 0 1 7 4 1 105 0 7 7 23 77 10 1 6 6 24 6 78 43 42 35 34 1 0 49 46 42 53 43 52 39 37 34 41 35 41 20 19 11 9 5 3 0 33 1 33 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,431,o),
(317,431,qs),
(321,431,l),
(297,562,ls),
(288,611,o),
(325,611,qs),
(328,611,ls),
(336,611,o),
(337,603,qs),
(347,552,l),
(384,552,ls),
(473,552,o),
(486,478,qs),
(494,435,o),
(452,384,o),
(409,384,qs),
(291,384,ls),
(282,384,o),
(280,392,qs),
(279,397,ls)
);
},
{
closed = 1;
nodes = (
(362,468,l),
(368,431,l),
(413,431,ls),
(443,431,o),
(436,468,qs),
(430,506,o),
(396,506,qs),
(355,506,l)
);
},
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 2 1 2 133 0 6 0 8 0 6 8 128 0 8 7 0 8 7 126 5 1 3 0 0 6 3 0 104 10 1 4 4 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 21 20 56 53 46 44 38 35 32 29 25 23 20 27 21 27 34 50 35 49 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(731,94,o),
(701,50,qs),
(668,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls)
);
},
{
closed = 1;
nodes = (
(419,-165,o),
(400,-165,qs),
(382,-165,o),
(352,-139,o),
(348,-119,qs),
(345,-100,o),
(365,-75,o),
(384,-75,qs),
(403,-75,o),
(433,-100,o),
(436,-119,qs),
(440,-139,o)
);
},
{
closed = 1;
nodes = (
(558,-100,o),
(562,-119,qs),
(565,-139,o),
(545,-165,o),
(527,-165,qs),
(508,-165,o),
(478,-139,o),
(474,-119,qs),
(471,-100,o),
(492,-75,o),
(511,-75,qs),
(529,-75,o)
);
},
{
closed = 1;
nodes = (
(514,-196,o),
(518,-215,qs),
(521,-234,o),
(501,-261,o),
(482,-261,qs),
(463,-261,o),
(433,-234,o),
(430,-215,qs),
(426,-196,o),
(447,-171,o),
(466,-171,qs),
(485,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 0 2 0 133 0 2 1 2 133 10 6 2 4 7 1 5 8 4 5 105 11 1 8 0 9 8 9 101 0 1 1 3 96 0 3 3 24 3 78 57 56 45 44 63 61 56 67 57 67 51 49 44 55 45 55 36 38 55 38 51 49 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 763;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(454,74,l),
(432,92,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(502,116,o),
(530,90,qs),
(545,76,o),
(568,75,qs),
(576,74,o),
(578,66,qs),
(583,35,o),
(552,0,o),
(520,0,qs),
(295,0,ls)
);
},
{
closed = 1;
nodes = (
(304,-101,qs),
(302,-89,o),
(316,-72,o),
(327,-72,qs),
(356,-72,o),
(361,-101,qs),
(366,-129,o),
(337,-129,qs),
(309,-129,o)
);
},
{
closed = 1;
nodes = (
(386,-101,qs),
(384,-89,o),
(398,-72,o),
(410,-72,qs),
(438,-72,o),
(443,-101,qs),
(448,-130,o),
(420,-130,qs),
(391,-130,o)
);
},
{
closed = 1;
nodes = (
(357,-166,qs),
(355,-154,o),
(368,-137,o),
(381,-137,qs),
(409,-137,o),
(415,-166,qs),
(417,-178,o),
(403,-194,o),
(391,-194,qs),
(362,-194,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 11 1 9 16 10 15 3 8 13 9 8 105 0 13 17 1 12 7 13 12 105 0 7 0 6 7 6 101 5 1 1 1 0 95 14 1 0 0 24 0 78 71 70 62 61 53 52 1 0 76 74 70 79 71 79 66 64 61 69 62 69 57 55 52 60 53 60 44 42 34 32 26 24 21 19 17 15 12 10 6 5 0 51 1 50 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,458,o),
(215,458,qs),
(97,458,ls),
(88,458,o),
(86,466,qs),
(85,470,ls),
(78,504,o),
(123,504,qs),
(127,504,l),
(103,635,ls),
(94,684,o),
(131,684,qs),
(134,684,ls),
(142,684,o),
(143,676,qs),
(153,625,l),
(190,625,ls),
(279,625,o),
(292,551,qs),
(300,508,o)
);
},
{
closed = 1;
nodes = (
(168,541,l),
(174,504,l),
(219,504,ls),
(249,504,o),
(242,541,qs),
(236,579,o),
(202,579,qs),
(161,579,l)
);
},
{
closed = 1;
nodes = (
(376,64,qs),
(338,0,o),
(260,0,qs),
(124,0,ls),
(110,0,o),
(108,12,qs),
(107,19,ls),
(103,44,o),
(135,74,o),
(165,74,qs),
(245,74,ls),
(287,74,o),
(327,134,o),
(318,183,qs),
(308,240,o),
(245,306,o),
(199,306,qs),
(172,306,o),
(140,293,q),
(139,292,o),
(137,291,qs),
(131,288,o),
(127,288,qs),
(115,288,o),
(113,307,qs),
(109,335,o),
(165,377,o),
(205,377,qs),
(277,377,o),
(326,336,qs),
(382,289,o),
(397,196,qs),
(409,118,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 0 1 133 0 7 8 9 8 7 9 128 0 0 11 1 4 2 0 4 105 5 1 2 0 3 6 2 3 104 0 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 21 20 58 55 51 48 44 42 37 36 33 31 25 23 20 27 21 27 51 34 50 33 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,490,o),
(57,490,qs),
(61,490,l),
(37,621,ls),
(28,670,o),
(65,670,qs),
(69,670,ls),
(76,670,o),
(78,662,qs),
(87,611,l),
(124,611,ls),
(213,611,o),
(227,537,qs),
(234,494,o),
(193,444,o),
(149,444,qs),
(31,444,ls),
(22,444,o),
(20,452,q),
(20,456,l)
);
},
{
closed = 1;
nodes = (
(102,527,l),
(109,490,l),
(153,490,ls),
(184,490,o),
(177,527,qs),
(170,565,o),
(136,565,qs),
(95,565,l)
);
},
{
closed = 1;
nodes = (
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
0 2 1 2 133 0 6 0 8 0 6 8 128 0 8 7 0 8 7 126 0 1 10 1 4 3 1 4 105 5 1 3 0 0 6 3 0 104 0 7 9 9 7 89 0 7 7 9 98 0 9 7 9 82 21 20 48 46 43 41 39 37 32 29 25 23 20 27 21 27 34 50 35 49 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,584,o),
(49,584,qs),
(84,584,o),
(103,552,qs),
(131,504,l),
(142,552,ls),
(150,584,o),
(185,584,qs),
(199,584,o),
(196,573,qs),
(169,456,ls),
(166,444,o),
(155,444,qs),
(122,444,ls),
(110,444,o),
(104,456,qs),
(35,573,ls)
);
},
{
closed = 1;
nodes = (
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
11 1 0 1 1 76 0 3 0 5 0 3 5 128 0 5 4 0 5 4 126 2 1 1 0 0 3 1 0 105 0 4 6 6 4 89 0 4 4 6 98 0 6 4 6 82 35 34 37 51 36 35 49 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls)
);
},
{
closed = 1;
nodes = (
(218,-306,o),
(222,-327,qs),
(225,-348,o),
(202,-377,o),
(182,-377,qs),
(161,-377,o),
(127,-348,o),
(123,-327,qs),
(119,-305,o),
(143,-277,o),
(164,-277,qs),
(184,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 1 3 133 0 1 0 1 133 0 0 0 2 4 0 2 106 6 1 4 5 5 4 89 6 1 4 4 5 97 0 5 4 5 81 23 22 29 27 22 33 23 33 51 35 34 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls)
);
},
{
closed = 1;
nodes = (
(239,-288,qs),
(212,-405,ls),
(209,-416,o),
(198,-416,qs),
(165,-416,ls),
(154,-416,o),
(147,-405,qs),
(79,-288,ls),
(73,-277,o),
(92,-277,qs),
(127,-277,o),
(146,-309,qs),
(174,-356,l),
(185,-309,ls),
(193,-277,o),
(228,-277,qs),
(242,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
25 1 6 4 1 76 0 0 2 0 133 0 2 1 2 133 0 1 0 3 4 1 3 106 5 7 2 4 6 6 4 89 5 7 2 4 4 6 97 0 6 4 6 81 23 22 35 32 29 27 22 38 23 38 35 34 37 49 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,555,o),
(75,574,qs),
(71,593,o),
(92,619,o),
(111,619,qs),
(129,619,o),
(159,593,o),
(163,574,qs),
(166,555,o),
(146,529,o),
(127,529,qs),
(108,529,o)
);
},
{
closed = 1;
nodes = (
(30,459,o),
(27,478,qs),
(24,498,o),
(44,524,o),
(62,524,qs),
(81,524,o),
(112,498,o),
(115,478,qs),
(118,459,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(170,524,o),
(189,524,qs),
(207,524,o),
(237,498,o),
(240,478,qs),
(244,459,o),
(223,434,o),
(205,434,qs),
(186,434,o),
(156,459,o),
(153,478,qs),
(149,498,o)
);
},
{
closed = 1;
nodes = (
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(255,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
0 6 2 8 2 6 8 128 0 8 7 2 8 7 126 0 1 10 1 0 3 1 0 105 5 1 3 4 11 2 2 6 3 2 105 0 7 9 9 7 89 0 7 7 9 98 0 9 7 9 82 13 12 1 0 56 54 51 49 47 45 40 37 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(820,59,qs),
(782,0,o),
(705,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(545,74,l),
(502,118,o),
(494,188,qs),
(484,266,o),
(517,318,qs),
(555,377,o),
(634,377,qs),
(703,377,o),
(759,331,qs),
(823,277,o),
(838,188,qs),
(852,111,o)
);
},
{
closed = 1;
nodes = (
(761,190,qs),
(752,238,o),
(683,306,o),
(642,306,qs),
(602,306,o),
(565,242,o),
(574,190,qs),
(582,141,o),
(649,74,o),
(689,74,qs),
(781,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 2 5 1 5 2 1 128 0 0 0 5 2 0 5 105 6 4 2 1 1 3 95 0 3 3 24 3 78 34 33 40 38 33 43 34 43 55 38 37 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 876;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,566,o),
(556,584,qs),
(552,604,o),
(573,630,o),
(592,630,qs),
(610,630,o),
(640,604,o),
(643,584,qs),
(647,565,o),
(626,540,o),
(608,540,qs),
(589,540,o)
);
},
{
closed = 1;
nodes = (
(511,470,o),
(508,489,qs),
(504,508,o),
(524,534,o),
(543,534,qs),
(562,534,o),
(592,508,o),
(596,489,qs),
(599,470,o),
(578,444,o),
(559,444,qs),
(540,444,o)
);
},
{
closed = 1;
nodes = (
(651,534,o),
(669,534,qs),
(688,534,o),
(718,508,o),
(721,489,qs),
(724,470,o),
(704,444,o),
(686,444,qs),
(667,444,o),
(637,470,o),
(633,489,qs),
(630,508,o)
);
},
{
closed = 1;
nodes = (
(820,59,qs),
(782,0,o),
(705,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(545,74,l),
(502,118,o),
(494,188,qs),
(484,266,o),
(517,318,qs),
(555,377,o),
(634,377,qs),
(703,377,o),
(759,331,qs),
(823,277,o),
(838,188,qs),
(852,111,o)
);
},
{
closed = 1;
nodes = (
(761,190,qs),
(752,238,o),
(683,306,o),
(642,306,qs),
(602,306,o),
(565,242,o),
(574,190,qs),
(582,141,o),
(649,74,o),
(689,74,qs),
(781,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
0 8 11 7 11 8 7 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 8 6 11 105 14 10 2 7 7 9 95 0 9 9 24 9 78 70 69 13 12 1 0 76 74 69 79 70 79 66 63 56 54 48 46 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 876;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(587,74,ls),
(678,74,o),
(659,181,qs),
(650,228,o),
(587,287,o),
(546,287,qs),
(353,287,ls),
(301,287,o),
(293,329,qs),
(290,347,ls),
(285,376,o),
(302,388,qs),
(513,553,ls),
(518,557,o),
(522,555,qs),
(545,541,o),
(550,493,o),
(531,478,qs),
(382,362,l),
(378,358,o),
(383,358,qs),
(536,358,ls),
(602,358,o),
(655,322,qs),
(724,273,o),
(737,177,qs),
(748,95,o),
(711,48,qs),
(673,0,o),
(598,0,qs),
(287,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
15 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 3 1 2 103 0 3 3 0 95 5 1 0 0 24 0 78 1 0 39 37 31 28 25 22 9 7 0 47 1 46 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,479,o),
(263,498,qs),
(262,502,o),
(260,516,qs),
(258,531,o),
(272,541,qs),
(435,669,ls),
(440,673,o),
(444,669,qs),
(457,658,o),
(459,646,qs),
(461,631,o),
(443,616,qs),
(285,493,ls)
);
},
{
closed = 1;
nodes = (
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(587,74,ls),
(678,74,o),
(659,181,qs),
(650,228,o),
(587,287,o),
(546,287,qs),
(353,287,ls),
(301,287,o),
(293,329,qs),
(290,347,ls),
(285,376,o),
(302,388,qs),
(513,553,ls),
(518,557,o),
(522,555,qs),
(545,541,o),
(550,493,o),
(531,478,qs),
(382,362,l),
(378,358,o),
(383,358,qs),
(536,358,ls),
(602,358,o),
(655,322,qs),
(724,273,o),
(737,177,qs),
(748,95,o),
(711,48,qs),
(673,0,o),
(598,0,qs),
(287,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
29 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 3 1 2 103 0 3 3 0 95 5 1 0 0 24 0 78 15 14 53 51 45 42 39 36 23 21 14 61 15 60 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,782,o),
(350,782,qs),
(385,782,o),
(404,749,qs),
(433,702,l),
(444,749,ls),
(452,782,o),
(487,782,qs),
(501,782,o),
(498,771,qs),
(470,653,ls),
(468,642,o),
(457,642,qs),
(424,642,ls),
(412,642,o),
(405,653,qs),
(337,771,ls)
);
},
{
closed = 1;
nodes = (
(622,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(600,64,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
11 1 0 1 1 76 0 5 3 4 3 5 4 128 2 1 1 0 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 3 78 40 24 37 51 36 35 49 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,697,o),
(498,676,qs),
(502,655,o),
(479,626,o),
(458,626,qs),
(437,626,o),
(404,655,o),
(400,676,qs),
(396,697,o),
(420,726,o),
(440,726,qs),
(461,726,o)
);
},
{
closed = 1;
nodes = (
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(600,64,ls),
(622,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
0 2 4 5 4 2 5 128 6 1 0 0 1 4 0 1 105 0 5 0 3 5 3 101 0 4 4 23 4 78 1 0 43 41 36 33 28 26 18 17 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,752,o),
(393,771,qs),
(389,790,o),
(410,817,o),
(429,817,qs),
(447,817,o),
(477,791,o),
(480,771,qs),
(484,752,o),
(463,727,o),
(445,727,qs),
(426,727,o)
);
},
{
closed = 1;
nodes = (
(348,657,o),
(345,676,qs),
(342,695,o),
(362,721,o),
(380,721,qs),
(399,721,o),
(429,695,o),
(433,676,qs),
(436,657,o),
(415,631,o),
(396,631,qs),
(377,631,o)
);
},
{
closed = 1;
nodes = (
(488,721,o),
(507,721,qs),
(525,721,o),
(555,695,o),
(558,676,qs),
(562,657,o),
(541,631,o),
(523,631,qs),
(504,631,o),
(474,657,o),
(470,676,qs),
(467,695,o)
);
},
{
closed = 1;
nodes = (
(622,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(600,64,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 8 6 7 6 8 7 128 0 1 10 1 0 3 1 0 105 5 1 3 4 11 2 2 6 3 2 105 0 7 0 9 7 9 101 0 6 6 23 6 78 13 12 1 0 66 64 56 55 47 45 40 37 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(600,64,ls),
(623,-60,o),
(566,-135,qs),
(506,-214,o),
(384,-214,qs),
(285,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 98 4 1 0 2 0 82 1 0 25 24 16 14 9 6 0 33 1 33 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,48,qs),
(366,-9,o),
(282,-9,qs),
(211,-9,o),
(158,32,qs),
(91,83,o),
(79,176,qs),
(71,238,o),
(122,337,o),
(176,366,q),
(161,380,o),
(153,395,qs),
(132,435,o),
(172,455,qs),
(175,457,o),
(180,458,qs),
(185,460,o),
(192,449,qs),
(215,415,o),
(285,366,qs),
(320,341,o),
(334,329,qs),
(415,261,o),
(427,172,qs),
(437,97,o)
);
},
{
closed = 1;
nodes = (
(358,125,o),
(347,177,qs),
(337,227,o),
(296,264,qs),
(273,285,o),
(233,313,q),
(142,267,o),
(158,173,qs),
(165,126,o),
(236,62,o),
(280,62,qs),
(321,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
30 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
26 25 25 36 26 36 22 20 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,539,o),
(89,532,qs),
(86,531,o),
(83,529,qs),
(78,527,o),
(76,527,qs),
(72,527,o),
(69,534,qs),
(51,575,o),
(98,581,q),
(84,599,o),
(82,623,qs),
(79,658,o),
(120,702,o),
(154,702,qs),
(205,702,o),
(214,657,qs),
(217,645,o),
(208,646,q),
(206,647,o),
(201,649,qs),
(197,651,o),
(195,652,qs),
(178,659,o),
(161,658,qs),
(123,656,o),
(129,622,qs),
(132,606,o),
(158,583,o),
(174,583,qs),
(211,583,ls),
(247,583,o),
(251,551,qs),
(252,547,ls),
(253,539,o),
(244,539,qs),
(140,539,ls)
);
},
{
closed = 1;
nodes = (
(412,48,qs),
(373,-9,o),
(290,-9,qs),
(219,-9,o),
(165,32,qs),
(98,83,o),
(86,176,qs),
(78,238,o),
(129,337,o),
(184,366,q),
(168,380,o),
(160,395,qs),
(139,435,o),
(179,455,qs),
(183,457,o),
(187,458,qs),
(193,460,o),
(200,449,qs),
(223,415,o),
(292,366,qs),
(327,341,o),
(342,329,qs),
(422,261,o),
(435,172,qs),
(445,97,o)
);
},
{
closed = 1;
nodes = (
(365,125,o),
(355,177,qs),
(345,227,o),
(304,264,qs),
(281,285,o),
(241,313,q),
(149,267,o),
(165,173,qs),
(173,126,o),
(244,62,o),
(287,62,qs),
(328,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 1 0 1 67 51 2 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
63 62 1 0 62 73 63 73 59 57 22 20 12 10 7 4 0 36 1 35 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,48,qs),
(366,-9,o),
(282,-9,qs),
(211,-9,o),
(158,32,qs),
(91,83,o),
(79,176,qs),
(71,238,o),
(122,337,o),
(176,366,q),
(161,380,o),
(153,395,qs),
(132,435,o),
(172,455,qs),
(175,457,o),
(180,458,qs),
(185,460,o),
(192,449,qs),
(215,415,o),
(285,366,qs),
(320,341,o),
(334,329,qs),
(415,261,o),
(427,172,qs),
(437,97,o)
);
},
{
closed = 1;
nodes = (
(358,125,o),
(347,177,qs),
(337,227,o),
(296,264,qs),
(273,285,o),
(233,313,q),
(142,267,o),
(158,173,qs),
(165,126,o),
(236,62,o),
(280,62,qs),
(321,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
30 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
26 25 25 36 26 36 22 20 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,539,o),
(89,532,qs),
(86,531,o),
(83,529,qs),
(78,527,o),
(76,527,qs),
(72,527,o),
(69,534,qs),
(51,575,o),
(98,581,q),
(84,599,o),
(82,623,qs),
(79,658,o),
(120,702,o),
(154,702,qs),
(205,702,o),
(214,657,qs),
(217,645,o),
(208,646,q),
(206,647,o),
(201,649,qs),
(197,651,o),
(195,652,qs),
(178,659,o),
(161,658,qs),
(123,656,o),
(129,622,qs),
(132,606,o),
(158,583,o),
(174,583,qs),
(211,583,ls),
(247,583,o),
(251,551,qs),
(252,547,ls),
(253,539,o),
(244,539,qs),
(140,539,ls)
);
},
{
closed = 1;
nodes = (
(412,48,qs),
(373,-9,o),
(290,-9,qs),
(219,-9,o),
(165,32,qs),
(98,83,o),
(86,176,qs),
(78,238,o),
(129,337,o),
(184,366,q),
(168,380,o),
(160,395,qs),
(139,435,o),
(179,455,qs),
(183,457,o),
(187,458,qs),
(193,460,o),
(200,449,qs),
(223,415,o),
(292,366,qs),
(327,341,o),
(342,329,qs),
(422,261,o),
(435,172,qs),
(445,97,o)
);
},
{
closed = 1;
nodes = (
(365,125,o),
(355,177,qs),
(345,227,o),
(304,264,qs),
(281,285,o),
(241,313,q),
(149,267,o),
(165,173,qs),
(173,126,o),
(244,62,o),
(287,62,qs),
(328,62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
26 1 0 1 67 51 2 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
63 62 1 0 62 73 63 73 59 57 22 20 12 10 7 4 0 36 1 35 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,525,o),
(84,525,qs),
(66,525,o),
(36,551,o),
(33,571,qs),
(29,589,o),
(49,615,o),
(68,615,qs),
(87,615,o),
(117,590,o),
(121,571,qs),
(124,551,o)
);
},
{
closed = 1;
nodes = (
(162,551,o),
(159,571,qs),
(155,589,o),
(176,615,o),
(195,615,qs),
(213,615,o),
(243,590,o),
(246,571,qs),
(250,551,o),
(229,525,o),
(211,525,qs),
(192,525,o)
);
},
{
closed = 1;
nodes = (
(401,48,qs),
(362,-9,o),
(279,-9,qs),
(208,-9,o),
(155,32,qs),
(88,83,o),
(76,176,qs),
(68,238,o),
(119,337,o),
(173,366,q),
(158,380,o),
(150,395,qs),
(129,435,o),
(169,455,qs),
(172,457,o),
(177,458,qs),
(182,460,o),
(189,449,qs),
(212,415,o),
(281,366,qs),
(317,341,o),
(331,329,qs),
(412,261,o),
(424,172,qs),
(434,97,o)
);
},
{
closed = 1;
nodes = (
(355,125,o),
(344,177,qs),
(334,227,o),
(293,264,qs),
(270,285,o),
(230,313,q),
(139,267,o),
(155,173,qs),
(162,126,o),
(233,62,o),
(277,62,qs),
(318,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
54 38 2 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
3 1 0 6 2 2 1 5 0 1 105 7 1 5 4 4 5 89 7 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
50 49 13 12 49 60 50 60 46 44 19 17 12 23 13 23 36 34 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,601,o),
(113,601,qs),
(148,601,o),
(166,568,qs),
(195,521,l),
(206,568,ls),
(214,601,o),
(249,601,qs),
(263,601,o),
(260,589,qs),
(233,472,ls),
(230,461,o),
(219,461,qs),
(186,461,ls),
(174,461,o),
(168,472,qs),
(99,589,ls)
);
},
{
closed = 1;
nodes = (
(444,-124,qs),
(415,-215,o),
(301,-214,qs),
(254,-214,o),
(176,-176,o),
(163,-147,qs),
(153,-126,o),
(175,-126,qs),
(180,-126,o),
(188,-128,qs),
(236,-143,o),
(283,-143,qs),
(348,-142,o),
(369,-102,qs),
(389,-66,o),
(378,15,q),
(333,-9,o),
(283,-9,qs),
(209,-9,o),
(156,39,qs),
(97,92,o),
(82,182,qs),
(68,265,o),
(105,318,qs),
(144,376,o),
(222,377,qs),
(395,379,o),
(439,130,qs),
(470,-52,o)
);
},
{
closed = 1;
nodes = (
(365,92,q),
(365,103,o),
(362,117,qs),
(329,306,o),
(230,306,qs),
(189,306,o),
(150,239,o),
(160,184,qs),
(170,129,o),
(233,63,o),
(276,63,qs),
(333,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 56 1 8 9 29 1 4 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 4 5 4 6 5 128 2 1 1 0 0 3 1 0 105 0 3 0 9 8 3 9 105 0 5 0 7 5 7 101 10 1 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 6 4 5 4 6 5 128 2 1 1 0 0 3 1 0 105 0 3 0 9 8 3 9 105 10 1 8 0 4 6 8 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
47 46 53 51 46 57 47 57 35 34 36 38 35 36 35 49 11 7 30 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,470,o),
(89,489,qs),
(86,508,o),
(107,534,o),
(126,534,qs),
(145,534,o),
(174,508,o),
(177,489,qs),
(179,470,o),
(158,444,o),
(139,444,qs),
(120,444,o)
);
},
{
closed = 1;
nodes = (
(217,470,o),
(215,489,qs),
(212,508,o),
(234,534,o),
(253,534,qs),
(271,534,o),
(300,508,o),
(303,489,qs),
(305,470,o),
(284,444,o),
(265,444,qs),
(246,444,o)
);
},
{
closed = 1;
nodes = (
(444,-124,qs),
(415,-215,o),
(301,-214,qs),
(254,-214,o),
(176,-176,o),
(163,-147,qs),
(153,-126,o),
(175,-126,qs),
(180,-126,o),
(188,-128,qs),
(236,-143,o),
(283,-143,qs),
(348,-142,o),
(369,-102,qs),
(389,-66,o),
(378,15,q),
(333,-9,o),
(283,-9,qs),
(209,-9,o),
(156,39,qs),
(97,92,o),
(82,182,qs),
(68,265,o),
(105,318,qs),
(144,376,o),
(222,377,qs),
(395,379,o),
(439,130,qs),
(470,-52,o)
);
},
{
closed = 1;
nodes = (
(365,92,q),
(365,103,o),
(362,117,qs),
(329,306,o),
(230,306,qs),
(189,306,o),
(150,239,o),
(160,184,qs),
(170,129,o),
(233,63,o),
(276,63,qs),
(333,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
63 1 9 10 36 1 5 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 13 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
54 53 13 12 1 0 60 58 53 64 54 64 50 48 45 43 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,109,qs),
(587,89,o),
(615,75,qs),
(664,50,o),
(664,1,qs),
(664,-87,o),
(602,-146,qs),
(530,-214,o),
(415,-214,qs),
(283,-214,o),
(199,-147,qs),
(114,-79,o),
(96,41,qs),
(93,63,o),
(93,83,qs),
(93,143,o),
(117,187,qs),
(133,217,o),
(156,233,qs),
(164,238,o),
(171,238,qs),
(186,238,o),
(186,224,qs),
(186,220,o),
(184,215,qs),
(163,162,o),
(163,108,qs),
(163,81,o),
(168,56,qs),
(184,-30,o),
(244,-83,qs),
(312,-143,o),
(412,-143,qs),
(485,-143,o),
(577,-76,o),
(585,-18,q),
(586,-16,o),
(586,-12,qs),
(586,7,o),
(554,26,o),
(502,37,qs),
(473,43,o),
(459,47,qs),
(310,82,o),
(295,202,qs),
(293,215,o),
(293,228,qs),
(293,292,o),
(333,332,qs),
(378,377,o),
(451,377,qs),
(500,377,o),
(576,334,o),
(584,302,qs),
(585,295,o),
(585,292,qs),
(585,274,o),
(572,274,qs),
(566,274,o),
(559,278,qs),
(497,306,o),
(462,306,qs),
(420,306,o),
(370,261,o),
(370,224,qs),
(370,214,o),
(372,203,qs),
(383,136,o),
(479,113,qs),
(487,111,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
13 1 1 0 31 1 3 4 2 76 0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 61 59 49 47 37 35 37 34 38 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,319,o),
(126,331,qs),
(57,448,ls),
(51,459,o),
(71,459,qs),
(106,459,o),
(125,427,qs),
(153,379,l),
(164,427,ls),
(172,459,o),
(207,459,qs),
(221,459,o),
(218,448,qs),
(191,331,ls),
(188,319,o),
(177,319,qs),
(144,319,ls)
);
},
{
closed = 1;
nodes = (
(504,109,qs),
(592,89,o),
(620,75,qs),
(669,50,o),
(669,1,qs),
(669,-87,o),
(607,-146,qs),
(535,-214,o),
(420,-214,qs),
(288,-214,o),
(204,-147,qs),
(119,-79,o),
(101,41,qs),
(98,63,o),
(98,83,qs),
(98,143,o),
(122,187,qs),
(138,217,o),
(161,233,qs),
(169,238,o),
(176,238,qs),
(191,238,o),
(191,224,qs),
(191,220,o),
(189,215,qs),
(168,162,o),
(168,108,qs),
(168,81,o),
(173,56,qs),
(189,-30,o),
(249,-83,qs),
(317,-143,o),
(417,-143,qs),
(490,-143,o),
(582,-76,o),
(590,-18,q),
(591,-16,o),
(591,-12,qs),
(591,7,o),
(559,26,o),
(507,37,qs),
(478,43,o),
(464,47,qs),
(315,82,o),
(300,202,qs),
(298,215,o),
(298,228,qs),
(298,292,o),
(338,332,qs),
(383,377,o),
(456,377,qs),
(505,377,o),
(581,334,o),
(589,302,qs),
(590,295,o),
(590,292,qs),
(590,274,o),
(577,274,qs),
(571,274,o),
(564,278,qs),
(502,306,o),
(467,306,qs),
(425,306,o),
(375,261,o),
(375,224,qs),
(375,214,o),
(377,203,qs),
(388,136,o),
(484,113,qs),
(492,111,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
8 1 5 1 30 1 4 0 48 1 6 7 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
8 1 5 1 30 1 4 3 48 1 6 7 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 0 7 0 4 7 128 0 7 6 0 7 6 126 2 1 1 5 0 1 89 0 5 3 9 2 0 4 5 0 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 7 3 4 7 128 0 7 6 3 7 6 126 2 1 1 9 1 0 3 1 0 105 0 5 0 3 4 5 3 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 78 76 66 64 54 52 36 34 29 27 25 23 12 10 6 4 0 16 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,0,o),
(80,177,qs),
(71,256,o),
(108,305,qs),
(147,358,o),
(219,358,qs),
(283,358,ls),
(293,358,o),
(292,368,qs),
(292,369,l),
(291,379,ls),
(283,460,o),
(313,507,qs),
(351,564,o),
(438,564,qs),
(507,564,o),
(557,523,qs),
(609,478,o),
(619,409,qs),
(629,342,o),
(578,342,qs),
(569,342,ls),
(557,342,o),
(555,355,qs),
(555,356,o),
(554,357,q),
(553,367,o),
(552,370,q),
(546,423,o),
(486,493,o),
(446,493,qs),
(353,493,o),
(370,372,qs),
(374,345,ls),
(382,287,o),
(324,287,qs),
(234,287,ls),
(195,287,o),
(154,230,o),
(158,181,qs),
(162,135,o),
(225,74,o),
(270,74,qs),
(664,74,ls),
(727,74,o),
(741,19,qs),
(743,12,ls),
(746,0,o),
(730,0,qs),
(274,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 6 4 2 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 6 2 6 4 2 128 0 5 0 3 6 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 44 41 35 33 29 26 19 17 14 11 7 4 0 49 1 48 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(79,443,o),
(63,437,qs),
(60,436,o),
(57,434,qs),
(52,432,o),
(50,432,qs),
(46,432,o),
(43,438,qs),
(25,479,o),
(72,486,q),
(58,503,o),
(56,527,qs),
(53,562,o),
(94,607,o),
(128,607,qs),
(179,607,o),
(188,561,qs),
(191,550,o),
(182,551,qs),
(180,551,o),
(175,554,q),
(171,555,o),
(169,556,qs),
(152,564,o),
(135,563,qs),
(97,561,o),
(103,527,qs),
(106,510,o),
(132,488,o),
(148,488,qs),
(185,488,ls),
(221,488,o),
(225,456,qs),
(226,452,ls),
(227,443,o),
(218,443,qs),
(114,443,ls)
);
},
{
closed = 1;
nodes = (
(752,0,o),
(736,0,qs),
(280,0,ls),
(108,0,o),
(86,177,qs),
(77,256,o),
(114,305,qs),
(153,358,o),
(225,358,qs),
(289,358,ls),
(299,358,o),
(298,368,qs),
(298,369,l),
(297,379,ls),
(289,460,o),
(319,507,qs),
(357,564,o),
(444,564,qs),
(513,564,o),
(563,523,qs),
(615,478,o),
(625,409,qs),
(635,342,o),
(584,342,qs),
(575,342,ls),
(563,342,o),
(561,355,qs),
(561,356,o),
(560,357,q),
(559,367,o),
(558,370,q),
(552,423,o),
(492,493,o),
(452,493,qs),
(359,493,o),
(376,372,qs),
(380,345,ls),
(388,287,o),
(330,287,qs),
(240,287,ls),
(201,287,o),
(160,230,o),
(164,181,qs),
(168,135,o),
(231,74,o),
(276,74,qs),
(670,74,ls),
(733,74,o),
(747,19,qs),
(749,12,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 9 5 9 7 5 128 0 3 0 2 6 3 2 105 0 1 11 1 0 9 1 0 103 0 9 0 5 4 9 5 103 0 6 6 8 97 0 8 8 23 77 0 4 4 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 9 5 9 7 5 128 0 3 0 2 6 3 2 105 0 8 0 6 1 8 6 105 0 1 11 1 0 9 1 0 103 0 9 0 5 4 9 5 103 0 4 4 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 85 82 78 75 69 67 63 60 53 51 48 45 41 38 22 20 12 10 7 4 0 36 1 35 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,48,qs),
(366,-9,o),
(282,-9,qs),
(211,-9,o),
(158,32,qs),
(91,83,o),
(79,176,qs),
(71,238,o),
(122,337,o),
(176,366,q),
(161,380,o),
(153,395,qs),
(132,435,o),
(172,455,qs),
(175,457,o),
(180,458,qs),
(185,460,o),
(192,449,qs),
(215,415,o),
(285,366,qs),
(320,341,o),
(334,329,qs),
(415,261,o),
(427,172,qs),
(437,97,o)
);
},
{
closed = 1;
nodes = (
(358,125,o),
(347,177,qs),
(337,227,o),
(296,264,qs),
(273,285,o),
(233,313,q),
(142,267,o),
(158,173,qs),
(165,126,o),
(236,62,o),
(280,62,qs),
(321,62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
30 14 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
26 25 25 36 26 36 22 20 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 461;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,530,o),
(127,530,qs),
(108,530,o),
(79,556,o),
(75,574,qs),
(72,594,o),
(92,620,o),
(111,620,qs),
(130,620,o),
(159,594,o),
(163,574,qs),
(166,555,o)
);
},
{
closed = 1;
nodes = (
(112,498,o),
(115,479,qs),
(119,460,o),
(98,434,o),
(79,434,qs),
(60,434,o),
(31,460,o),
(27,479,qs),
(24,498,o),
(44,524,o),
(62,524,qs),
(82,524,o)
);
},
{
closed = 1;
nodes = (
(224,434,o),
(205,434,qs),
(186,434,o),
(156,460,o),
(153,479,qs),
(150,498,o),
(170,524,o),
(189,524,qs),
(208,524,o),
(237,498,o),
(241,479,qs),
(244,460,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 0 0 1 2 0 1 105 4 6 2 2 3 3 2 89 4 6 2 2 2 3 97 5 1 3 2 3 81 13 12 34 32 28 26 19 17 12 23 13 23 36 34 7 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,194,qs),
(378,321,o),
(337,403,qs),
(290,496,o),
(208,496,qs),
(106,496,o),
(106,365,qs),
(106,246,o),
(149,160,qs),
(200,59,o),
(280,59,qs),
(378,59,o)
);
},
{
closed = 1;
nodes = (
(111,81,qs),
(30,187,o),
(30,362,qs),
(30,452,o),
(71,506,qs),
(117,567,o),
(203,567,qs),
(308,567,o),
(376,478,qs),
(455,375,o),
(455,194,qs),
(455,106,o),
(417,52,qs),
(371,-11,o),
(285,-11,qs),
(181,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,449,ls),
(15,446,o),
(13,455,qs),
(2,510,ls),
(1,519,o),
(10,524,q),
(67,547,ls),
(90,556,o),
(113,556,qs),
(129,556,ls),
(178,556,o),
(188,501,qs),
(264,69,l),
(329,69,ls),
(373,69,o),
(380,26,q),
(384,11,l),
(385,0,o),
(375,0,qs),
(99,0,ls),
(91,0,o),
(89,9,qs),
(80,61,ls),
(79,69,o),
(88,69,qs),
(188,69,l),
(114,486,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,69,o),
(438,27,qs),
(441,11,ls),
(443,0,o),
(432,0,qs),
(90,0,ls),
(80,0,o),
(80,9,q),
(75,29,o),
(75,59,qs),
(75,126,o),
(113,177,qs),
(136,209,o),
(195,254,qs),
(254,301,o),
(293,356,o),
(293,393,qs),
(293,443,o),
(231,498,o),
(176,498,qs),
(105,498,o),
(43,454,q),
(38,449,o),
(32,449,qs),
(26,449,o),
(23,457,qs),
(13,477,ls),
(-6,515,o),
(38,537,qs),
(103,567,o),
(167,567,qs),
(254,567,o),
(307,529,qs),
(371,483,o),
(371,393,qs),
(371,332,o),
(332,281,qs),
(309,251,o),
(250,204,qs),
(192,159,o),
(155,104,o),
(158,69,q),
(386,69,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 60 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,197,o),
(430,139,qs),
(430,79,o),
(395,41,qs),
(349,-10,o),
(254,-10,qs),
(177,-10,o),
(119,29,qs),
(58,71,o),
(58,122,qs),
(58,139,o),
(69,139,qs),
(76,139,o),
(85,129,qs),
(155,58,o),
(244,58,qs),
(353,58,o),
(353,144,qs),
(353,195,o),
(278,254,o),
(215,254,qs),
(158,254,ls),
(115,254,o),
(108,294,qs),
(105,311,ls),
(103,324,o),
(114,324,qs),
(201,324,ls),
(292,324,o),
(292,399,qs),
(292,499,o),
(171,499,qs),
(100,499,o),
(43,456,q),
(42,456,o),
(41,455,qs),
(34,450,o),
(31,450,qs),
(26,450,o),
(21,458,qs),
(11,478,ls),
(-7,516,o),
(37,538,qs),
(96,567,o),
(171,567,qs),
(254,567,o),
(306,527,qs),
(366,482,o),
(366,401,qs),
(366,324,o),
(295,293,q),
(355,283,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 51 50 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,128,o),
(33,136,qs),
(26,177,ls),
(23,192,o),
(30,208,qs),
(190,537,ls),
(199,556,o),
(221,556,qs),
(250,556,ls),
(298,556,o),
(305,508,qs),
(360,197,l),
(397,197,ls),
(442,197,o),
(450,154,q),
(451,138,l),
(453,128,o),
(442,128,qs),
(372,128,l),
(393,9,ls),
(395,0,o),
(388,0,qs),
(329,0,ls),
(320,0,o),
(319,9,qs),
(297,128,l),
(42,128,ls)
);
},
{
closed = 1;
nodes = (
(236,481,l),
(98,197,l),
(286,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 11 10 2 1 2 2 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,353,o),
(211,353,qs),
(302,353,o),
(359,303,qs),
(424,248,o),
(424,153,qs),
(424,84,o),
(380,40,qs),
(331,-10,o),
(245,-10,qs),
(171,-10,o),
(53,70,o),
(53,120,qs),
(53,137,o),
(65,137,qs),
(72,137,o),
(81,128,qs),
(150,58,o),
(233,58,qs),
(347,58,o),
(347,156,qs),
(347,215,o),
(313,249,qs),
(276,286,o),
(205,286,qs),
(137,286,o),
(67,259,qs),
(55,254,o),
(53,268,qs),
(4,547,ls),
(2,556,o),
(10,556,qs),
(276,556,ls),
(321,556,o),
(329,513,qs),
(332,497,ls),
(333,486,o),
(324,486,qs),
(86,486,l),
(112,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,362,qs),
(319,362,o),
(373,312,qs),
(434,256,o),
(434,164,qs),
(434,96,o),
(391,48,qs),
(338,-10,o),
(247,-10,qs),
(163,-10,o),
(107,42,qs),
(43,101,o),
(43,197,qs),
(43,265,o),
(80,353,qs),
(168,557,ls),
(173,567,o),
(181,567,qs),
(208,567,o),
(228,513,o),
(213,479,qs),
(153,341,l),
(194,362,o)
);
},
{
closed = 1;
nodes = (
(359,117,o),
(359,164,qs),
(359,223,o),
(287,296,o),
(228,296,qs),
(176,296,o),
(119,240,o),
(119,190,qs),
(119,132,o),
(190,59,o),
(247,59,qs),
(297,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 34 24 34 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,486,o),
(-5,495,qs),
(-14,547,ls),
(-16,556,o),
(-8,556,qs),
(296,556,ls),
(342,556,o),
(350,513,qs),
(352,502,ls),
(356,480,o),
(349,456,qs),
(219,12,l),
(214,0,o),
(204,0,qs),
(148,0,ls),
(137,0,o),
(140,9,qs),
(281,486,l),
(5,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,89,qs),
(196,54,o),
(257,54,qs),
(365,54,o),
(365,139,qs),
(365,191,o),
(327,225,qs),
(287,261,o),
(224,261,qs),
(178,261,o),
(120,211,o),
(120,171,qs),
(120,121,o)
);
},
{
closed = 1;
nodes = (
(161,324,o),
(214,324,qs),
(256,324,o),
(305,364,o),
(305,399,qs),
(305,446,o),
(237,503,o),
(182,503,qs),
(139,503,o),
(87,459,o),
(87,423,qs),
(87,382,o)
);
},
{
closed = 1;
nodes = (
(16,431,qs),
(16,485,o),
(55,522,qs),
(101,567,o),
(182,567,qs),
(260,567,o),
(314,526,qs),
(377,479,o),
(377,404,qs),
(377,369,o),
(340,309,o),
(309,294,q),
(441,252,o),
(441,136,qs),
(441,77,o),
(402,38,qs),
(354,-11,o),
(260,-11,qs),
(174,-11,o),
(114,34,qs),
(45,87,o),
(45,171,qs),
(45,255,o),
(133,290,q),
(16,330,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,194,qs),
(122,194,o),
(68,245,qs),
(6,302,o),
(6,392,qs),
(6,463,o),
(50,510,qs),
(101,567,o),
(188,567,qs),
(274,567,o),
(331,517,qs),
(397,460,o),
(397,362,qs),
(397,291,o),
(360,204,qs),
(272,1,ls),
(267,-10,o),
(258,-10,qs),
(231,-10,o),
(212,44,o),
(227,77,qs),
(286,214,l),
(255,194,o)
);
},
{
closed = 1;
nodes = (
(322,319,o),
(322,369,qs),
(322,420,o),
(290,456,qs),
(252,498,o),
(190,498,qs),
(141,498,o),
(82,440,o),
(82,392,qs),
(82,333,o),
(152,261,o),
(209,261,qs),
(261,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 35 24 35 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,178,qs),
(2,227,ls),
(4,236,o),
(12,236,qs),
(322,236,ls),
(330,236,o),
(328,227,qs),
(319,178,ls),
(318,170,o),
(309,170,qs),
(-1,170,ls),
(-9,170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,178,qs),
(2,227,ls),
(4,236,o),
(12,236,qs),
(636,236,ls),
(644,236,o),
(642,227,qs),
(633,178,ls),
(631,170,o),
(623,170,qs),
(-1,170,ls),
(-9,170,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,442,qs),
(157,418,o),
(127,386,o),
(105,386,qs),
(61,386,o),
(61,433,qs),
(61,499,o),
(150,561,qs),
(157,565,o),
(159,561,q),
(176,541,o),
(155,525,qs),
(133,506,o),
(125,484,q),
(157,477,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 39 0 78 35 36 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 130;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,424,qs),
(105,444,o),
(112,465,q),
(81,471,o),
(81,507,qs),
(81,531,o),
(111,563,o),
(132,563,qs),
(176,563,o),
(176,516,qs),
(176,450,o),
(87,388,qs),
(80,384,o),
(77,388,qs),
(62,408,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 73 0 0 0 39 0 78 37 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 130;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-11,-48,qs),
(11,-30,o),
(20,-7,q),
(-12,0,o),
(-12,35,qs),
(-12,59,o),
(18,92,o),
(39,92,qs),
(83,92,o),
(83,44,qs),
(83,-21,o),
(-6,-83,q),
(-12,-89,o),
(-15,-83,q),
(-31,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 73 0 0 0 118 37 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,442,qs),
(157,418,o),
(127,386,o),
(105,386,qs),
(61,386,o),
(61,433,qs),
(61,499,o),
(150,561,qs),
(157,565,o),
(159,561,q),
(176,541,o),
(155,525,qs),
(133,506,o),
(125,484,q),
(157,477,o)
);
},
{
closed = 1;
nodes = (
(288,442,qs),
(288,418,o),
(258,386,o),
(236,386,qs),
(192,386,o),
(192,433,qs),
(192,499,o),
(282,561,qs),
(289,566,o),
(290,561,q),
(307,541,o),
(287,525,qs),
(264,506,o),
(256,484,q),
(288,477,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 0 1 134 2 1 0 0 39 0 78 35 40 35 36 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 261;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,424,qs),
(235,444,o),
(243,465,q),
(211,471,o),
(211,507,qs),
(211,531,o),
(241,563,o),
(263,563,qs),
(306,563,o),
(306,516,qs),
(306,450,o),
(217,388,qs),
(211,384,o),
(208,388,qs),
(192,408,o)
);
},
{
closed = 1;
nodes = (
(81,424,qs),
(104,444,o),
(111,465,q),
(80,471,o),
(80,507,qs),
(80,531,o),
(110,563,o),
(131,563,qs),
(175,563,o),
(175,516,qs),
(175,450,o),
(86,388,qs),
(79,383,o),
(77,388,q),
(61,408,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
26 11 2 0 73 1 1 0 0 39 0 78 45 37 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 261;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-48,qs),
(146,-28,o),
(154,-7,q),
(122,0,o),
(122,35,qs),
(122,59,o),
(152,92,o),
(174,92,qs),
(217,92,o),
(217,44,qs),
(217,-21,o),
(128,-83,q),
(122,-89,o),
(119,-83,q),
(103,-64,o)
);
},
{
closed = 1;
nodes = (
(-8,-48,qs),
(15,-28,o),
(22,-7,q),
(-9,0,o),
(-9,35,qs),
(-9,59,o),
(21,92,o),
(42,92,qs),
(86,92,o),
(86,44,qs),
(86,-21,o),
(-3,-83,q),
(-10,-90,o),
(-12,-83,q),
(-28,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
26 11 2 0 73 1 1 0 0 118 45 37 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,295,o),
(52,304,qs),
(60,351,ls),
(61,359,o),
(70,359,qs),
(157,359,l),
(189,547,l),
(191,554,o),
(198,554,qs),
(256,554,o),
(243,486,qs),
(221,359,l),
(308,359,ls),
(316,359,o),
(314,351,qs),
(305,304,l),
(305,295,o),
(296,295,qs),
(209,295,l),
(131,-151,ls),
(129,-160,o),
(122,-160,qs),
(73,-160,ls),
(64,-160,o),
(66,-151,qs),
(145,295,l),
(58,295,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
10 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 1 0 134 0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 4 1 2 6 5 2 1 0 2 1 104 0 3 3 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 26 0 25 34 34 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,103,o),
(14,111,qs),
(22,159,ls),
(23,167,o),
(32,167,qs),
(119,167,l),
(140,295,l),
(54,295,ls),
(46,295,o),
(48,304,qs),
(56,351,ls),
(58,359,o),
(66,359,qs),
(152,359,l),
(185,547,l),
(187,554,o),
(194,554,qs),
(250,554,o),
(239,486,qs),
(217,359,l),
(304,359,ls),
(311,359,o),
(309,351,qs),
(301,304,ls),
(300,295,o),
(291,295,qs),
(205,295,l),
(183,167,l),
(270,167,ls),
(277,167,o),
(276,159,qs),
(267,111,ls),
(266,103,o),
(257,103,qs),
(171,103,l),
(126,-151,ls),
(125,-160,o),
(117,-160,qs),
(69,-160,ls),
(60,-160,o),
(62,-151,qs),
(106,103,l),
(20,103,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 0 134 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 42 0 41 33 35 34 34 35 33 35 34 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,378,o),
(168,378,qs),
(207,378,o),
(252,334,o),
(252,297,qs),
(252,246,o),
(189,180,o),
(141,180,qs),
(103,180,o),
(59,222,o),
(59,259,qs),
(59,312,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 48 0 78 36 34 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(22,34,qs),
(22,57,o),
(55,91,o),
(78,91,qs),
(120,91,o),
(120,49,qs),
(120,24,o),
(88,-10,o),
(65,-10,qs),
(22,-10,o)
);
},
{
closed = 1;
nodes = (
(210,34,qs),
(210,57,o),
(243,91,o),
(266,91,qs),
(308,91,o),
(308,49,qs),
(308,24,o),
(275,-10,o),
(253,-10,qs),
(210,-10,o)
);
},
{
closed = 1;
nodes = (
(398,34,qs),
(398,57,o),
(431,91,o),
(454,91,qs),
(495,91,o),
(495,49,qs),
(495,24,o),
(463,-10,o),
(440,-10,qs),
(398,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 21 20 11 10 1 0 26 24 20 29 21 29 16 14 10 19 11 19 6 4 0 9 1 9 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,9,qs),
(537,547,ls),
(544,556,o),
(551,556,qs),
(563,556,ls),
(586,556,o),
(593,522,o),
(575,496,qs),
(229,9,ls),
(223,0,o),
(215,0,qs),
(157,0,ls),
(149,0,o)
);
},
{
closed = 1;
nodes = (
(427,63,o),
(427,123,qs),
(427,206,o),
(470,266,qs),
(519,335,o),
(596,335,qs),
(646,335,o),
(704,264,o),
(704,205,qs),
(704,118,o),
(664,60,qs),
(617,-9,o),
(538,-9,qs),
(488,-9,o)
);
},
{
closed = 1;
nodes = (
(746,63,o),
(746,123,qs),
(746,206,o),
(788,266,qs),
(837,335,o),
(915,335,qs),
(964,335,o),
(1022,265,o),
(1022,205,qs),
(1022,118,o),
(982,60,qs),
(935,-9,o),
(856,-9,qs),
(806,-9,o)
);
},
{
closed = 1;
nodes = (
(63,295,o),
(63,355,qs),
(63,438,o),
(105,497,qs),
(155,567,o),
(232,567,qs),
(281,567,o),
(339,496,o),
(339,436,qs),
(339,350,o),
(299,291,qs),
(253,223,o),
(173,223,qs),
(123,223,o)
);
},
{
closed = 1;
nodes = (
(613,83,qs),
(645,127,o),
(645,203,qs),
(645,281,o),
(586,281,qs),
(546,281,o),
(518,242,qs),
(486,197,o),
(486,123,qs),
(486,45,o),
(545,45,qs),
(586,45,o)
);
},
{
closed = 1;
nodes = (
(931,83,qs),
(963,127,o),
(963,203,qs),
(963,281,o),
(905,281,qs),
(864,281,o),
(836,242,qs),
(804,197,o),
(804,123,qs),
(804,45,o),
(863,45,qs),
(904,45,o)
);
},
{
closed = 1;
nodes = (
(248,314,qs),
(280,358,o),
(280,434,qs),
(280,513,o),
(222,513,qs),
(181,513,o),
(153,474,qs),
(121,428,o),
(121,355,qs),
(121,276,o),
(180,276,qs),
(221,276,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
5 1 3 11 1 9 12 3 9 106 20 1 12 17 1 6 8 12 6 105 0 13 13 1 97 7 1 1 1 39 77 19 10 18 3 8 8 0 97 16 4 15 2 14 5 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
5 1 3 11 1 9 12 3 9 106 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 0 13 13 7 97 0 7 7 39 77 19 10 18 3 8 8 0 97 16 4 15 2 14 5 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
5 1 3 11 1 9 12 3 9 106 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 0 13 13 7 97 0 7 7 39 77 14 1 0 0 40 77 19 10 18 3 8 8 2 97 16 4 15 3 2 2 49 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 7 0 13 3 7 13 105 5 1 3 11 1 9 12 3 9 106 20 1 12 17 1 6 8 12 6 105 0 1 1 39 77 14 1 0 0 40 77 19 10 18 3 8 8 2 97 16 4 15 3 2 2 49 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
80 79 68 67 56 55 42 41 28 27 14 13 2 0 86 84 79 90 80 90 74 72 67 78 68 78 62 60 55 66 56 66 49 47 41 54 42 54 35 33 27 40 28 40 21 19 13 26 14 26 9 6 0 12 2 12 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1066;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,39,o),
(168,39,qs),
(115,39,ls),
(101,39,o),
(97,49,q),
(25,173,ls),
(19,182,o),
(19,188,qs),
(19,193,o),
(28,202,qs),
(145,328,ls),
(155,338,o),
(167,338,qs),
(221,338,ls),
(232,338,o),
(223,329,qs),
(93,189,l),
(173,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 56 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 229;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,338,o),
(52,338,qs),
(106,338,ls),
(118,338,o),
(124,328,qs),
(195,204,ls),
(201,195,o),
(201,189,qs),
(201,184,o),
(192,175,qs),
(75,49,ls),
(65,39,o),
(54,39,qs),
(0,39,ls),
(-10,39,o),
(-3,48,q),
(127,188,l),
(47,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 56 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 231;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-36,9,qs),
(345,547,ls),
(351,556,o),
(359,556,qs),
(368,556,ls),
(390,556,o),
(396,522,o),
(378,496,qs),
(34,9,l),
(29,0,o),
(21,0,qs),
(-34,0,ls),
(-43,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 330;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-5,182,o),
(0,190,qs),
(24,233,l),
(31,242,o),
(37,242,qs),
(88,242,l),
(91,277,o),
(99,305,q),
(36,305,ls),
(28,305,o),
(33,314,qs),
(58,357,ls),
(63,365,o),
(70,365,qs),
(118,365,l),
(152,450,o),
(218,504,qs),
(294,567,o),
(384,567,qs),
(453,567,o),
(504,539,qs),
(545,517,o),
(533,489,qs),
(519,458,ls),
(515,450,o),
(509,450,qs),
(504,450,o),
(495,457,qs),
(445,498,o),
(384,498,qs),
(322,498,o),
(222,428,o),
(195,365,q),
(452,365,ls),
(459,365,o),
(455,357,qs),
(430,314,ls),
(424,305,o),
(417,305,qs),
(173,305,l),
(167,288,o),
(162,242,q),
(386,242,ls),
(395,242,o),
(389,233,qs),
(365,190,ls),
(360,182,o),
(352,182,qs),
(161,182,l),
(174,57,o),
(301,57,qs),
(348,57,o),
(419,89,o),
(458,128,qs),
(459,129,ls),
(468,138,o),
(474,138,qs),
(484,138,o),
(484,125,qs),
(484,83,o),
(436,42,qs),
(374,-11,o),
(287,-11,qs),
(206,-11,o),
(153,35,qs),
(93,88,o),
(87,182,q),
(3,182,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 12 1 4 14 13 2 3 1 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 12 1 4 14 13 2 3 1 4 3 103 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 67 0 66 62 61 59 57 54 52 49 47 34 34 35 34 35 33 37 20 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,552,ls),
(31,556,o),
(35,556,qs),
(226,556,ls),
(250,556,o),
(250,534,qs),
(250,514,ls),
(250,508,o),
(244,508,qs),
(165,508,l),
(165,276,ls),
(165,272,o),
(163,272,qs),
(118,272,ls),
(114,272,o),
(114,276,qs),
(114,508,l),
(35,508,ls)
);
},
{
closed = 1;
nodes = (
(497,556,o),
(502,556,qs),
(537,556,ls),
(565,556,o),
(567,528,qs),
(582,276,ls),
(582,272,o),
(578,272,qs),
(535,272,ls),
(530,272,o),
(530,277,qs),
(519,473,l),
(453,276,l),
(450,272,o),
(447,272,qs),
(414,272,ls),
(409,272,o),
(408,276,qs),
(345,471,l),
(333,276,ls),
(333,272,o),
(329,272,qs),
(287,272,ls),
(283,272,o),
(283,276,qs),
(299,552,ls),
(299,556,o),
(304,556,qs),
(337,556,ls),
(366,556,o),
(373,533,qs),
(431,355,l),
(497,551,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
47 26 17 16 10 5 1 2 46 41 40 33 32 27 1 7 0 1 2 76 7 6 5 3 0 1 0 134 8 4 2 2 1 1 2 89 8 4 2 2 2 1 95 9 3 2 1 2 1 79 0 0 50 48 44 43 37 36 30 29 24 22 0 19 0 19 36 19 19 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 642;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,148,o),
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(135,214,l),
(197,325,l),
(45,325,ls),
(37,325,o),
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(234,391,l),
(285,484,ls),
(290,493,o),
(299,493,qs),
(303,493,ls),
(326,493,o),
(338,460,o),
(324,433,qs),
(300,391,l),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(265,325,l),
(203,214,l),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(166,148,l),
(121,67,l),
(117,58,o),
(110,58,qs),
(58,58,ls),
(48,58,o),
(54,67,qs),
(99,148,l),
(45,148,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 5 133 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 43 33 35 34 51 35 33 35 34 50 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,66,o),
(45,66,qs),
(399,66,ls),
(407,66,o),
(407,58,qs),
(407,8,ls),
(407,0,o),
(399,0,qs),
(45,0,ls),
(37,0,o),
(37,8,qs),
(37,58,ls)
);
},
{
closed = 1;
nodes = (
(407,181,o),
(407,122,qs),
(407,117,ls),
(407,108,o),
(399,111,qs),
(45,261,l),
(37,263,o),
(37,273,qs),
(37,313,ls),
(37,322,o),
(45,326,qs),
(397,474,ls),
(407,478,o),
(407,468,qs),
(407,418,ls),
(407,405,o),
(393,399,qs),
(133,293,l),
(354,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,406,o),
(43,418,qs),
(43,468,ls),
(43,478,o),
(53,474,qs),
(406,326,ls),
(414,322,o),
(414,313,qs),
(414,273,ls),
(414,263,o),
(406,261,q),
(52,111,ls),
(43,108,o),
(43,117,qs),
(43,122,ls),
(43,182,o),
(96,203,qs),
(318,293,l),
(57,399,l)
);
},
{
closed = 1;
nodes = (
(43,66,o),
(51,66,qs),
(405,66,ls),
(412,66,o),
(412,58,qs),
(412,8,ls),
(412,0,o),
(405,0,qs),
(51,0,ls),
(43,0,o),
(43,8,qs),
(43,58,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 29 26 23 20 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,525,o),
(304,513,qs),
(304,500,o),
(285,482,o),
(272,482,qs),
(260,482,o),
(242,500,o),
(242,513,qs),
(242,525,o),
(260,544,o),
(272,544,qs),
(285,544,o)
);
},
{
closed = 1;
nodes = (
(390,500,o),
(390,488,qs),
(390,475,o),
(372,457,o),
(359,457,qs),
(346,457,o),
(328,475,o),
(328,488,qs),
(328,500,o),
(347,519,o),
(359,519,qs),
(371,519,o)
);
},
{
closed = 1;
nodes = (
(109,330,o),
(109,317,qs),
(109,304,o),
(91,286,o),
(78,286,qs),
(66,286,o),
(47,305,o),
(47,317,qs),
(47,330,o),
(66,349,o),
(78,349,qs),
(90,349,o)
);
},
{
closed = 1;
nodes = (
(498,330,o),
(498,317,qs),
(498,305,o),
(480,286,o),
(467,286,qs),
(454,286,o),
(436,304,o),
(436,317,qs),
(436,330,o),
(455,349,o),
(467,349,qs),
(479,349,o)
);
},
{
closed = 1;
nodes = (
(242,109,o),
(242,121,qs),
(242,134,o),
(260,152,o),
(272,152,qs),
(285,152,o),
(304,134,o),
(304,121,qs),
(304,109,o),
(285,90,o),
(272,90,qs),
(260,90,o)
);
},
{
closed = 1;
nodes = (
(464,434,o),
(464,421,qs),
(464,409,o),
(445,390,o),
(432,390,qs),
(420,390,o),
(402,408,o),
(402,421,qs),
(402,434,o),
(420,453,o),
(432,453,qs),
(445,453,o)
);
},
{
closed = 1;
nodes = (
(148,501,o),
(148,489,qs),
(148,476,o),
(167,457,o),
(180,457,qs),
(192,457,o),
(210,476,o),
(210,489,qs),
(210,501,o),
(192,520,o),
(180,520,qs),
(167,520,o)
);
},
{
closed = 1;
nodes = (
(74,425,o),
(74,413,qs),
(74,400,o),
(93,381,o),
(106,381,qs),
(118,381,o),
(136,400,o),
(136,413,qs),
(136,425,o),
(118,444,o),
(106,444,qs),
(93,444,o)
);
},
{
closed = 1;
nodes = (
(404,142,o),
(404,155,qs),
(404,167,o),
(385,186,o),
(372,186,qs),
(360,186,o),
(342,168,o),
(342,155,qs),
(342,142,o),
(360,123,o),
(372,123,qs),
(385,123,o)
);
},
{
closed = 1;
nodes = (
(470,209,o),
(470,221,qs),
(470,234,o),
(452,253,o),
(439,253,qs),
(426,253,o),
(408,234,o),
(408,221,qs),
(408,209,o),
(427,190,o),
(439,190,qs),
(451,190,o)
);
},
{
closed = 1;
nodes = (
(148,142,o),
(148,155,qs),
(148,167,o),
(166,186,o),
(179,186,qs),
(192,186,o),
(210,168,o),
(210,155,qs),
(210,142,o),
(191,123,o),
(179,123,qs),
(167,123,o)
);
},
{
closed = 1;
nodes = (
(68,209,o),
(68,221,qs),
(68,234,o),
(87,253,o),
(100,253,qs),
(112,253,o),
(130,234,o),
(130,221,qs),
(130,209,o),
(112,190,o),
(100,190,qs),
(87,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 240 values pushed */
30 1 12 0 2 0 12 2 128 0 13 3 10 3 13 10 128 31 1 14 10 11 10 14 11 128 0 15 11 4 11 15 4 128 0 19 5 23 5 19 23 128 33 1 18 22 17 22 18 17 128 0 17 21 22 17 21 126 32 1 16 20 8 20 16 8 128 24 1 0 0 1 3 0 1 105 25 1 2 0 3 13 2 3 105 29 1 10 0 11 15 10 11 105 27 6 26 3 4 7 1 5 19 4 5 105 0 23 35 1 22 18 23 22 106 0 9 20 8 9 89 0 21 34 1 20 16 21 20 105 0 9 9 8 97 28 1 8 9 8 81 133 132 121 120 109 108 97 96 85 84 73 72 61 60 49 48 37 36 25 24 13 12 1 0 139 137 132 143 133 143 127 125 120 131 121 131 115 113 108 119 109 119 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 67 65 60 71 61 71 55 53 48 59 49 59 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 36 6 22 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,138,qs),
(379,228,o),
(379,363,qs),
(379,496,o),
(289,496,qs),
(224,496,o),
(173,417,qs),
(113,324,o),
(113,195,qs),
(113,61,o),
(205,61,qs),
(271,61,o)
);
},
{
closed = 1;
nodes = (
(85,38,qs),
(40,91,o),
(40,192,qs),
(40,334,o),
(108,442,qs),
(186,567,o),
(298,567,qs),
(453,567,o),
(453,366,qs),
(453,219,o),
(387,113,qs),
(310,-10,o),
(194,-10,qs),
(126,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 25 13 25 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,437,ls),
(121,434,o),
(123,443,qs),
(134,501,ls),
(136,510,o),
(146,515,q),
(236,547,ls),
(260,556,o),
(284,556,qs),
(298,556,ls),
(344,556,o),
(335,501,qs),
(258,69,l),
(371,69,ls),
(416,69,o),
(408,26,qs),
(404,11,l),
(404,0,o),
(392,0,qs),
(47,0,ls),
(39,0,o),
(41,9,qs),
(50,61,ls),
(51,69,o),
(59,69,qs),
(187,69,l),
(261,484,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
26 1 0 3 9 1 1 0 2 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,69,o),
(389,27,qs),
(386,11,ls),
(384,0,o),
(373,0,qs),
(29,0,ls),
(21,0,o),
(23,9,qs),
(40,102,o),
(106,168,qs),
(145,209,o),
(235,262,qs),
(322,313,o),
(379,378,o),
(379,426,qs),
(379,498,o),
(279,498,qs),
(215,498,o),
(142,455,qs),
(132,450,o),
(128,450,qs),
(122,450,o),
(121,458,qs),
(119,478,ls),
(115,519,o),
(162,538,qs),
(232,567,o),
(294,567,qs),
(368,567,o),
(455,497,o),
(455,438,qs),
(455,364,o),
(402,305,qs),
(366,266,o),
(285,217,qs),
(186,157,o),
(128,106,o),
(118,69,q),
(352,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 38 0 37 57 34 37 41 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,186,qs),
(411,108,o),
(359,54,qs),
(298,-10,o),
(200,-10,qs),
(129,-10,o),
(33,60,o),
(33,112,qs),
(33,144,o),
(52,144,qs),
(58,144,o),
(64,134,qs),
(105,58,o),
(197,58,qs),
(259,58,o),
(335,125,o),
(335,180,qs),
(335,254,o),
(235,254,qs),
(178,254,ls),
(137,254,o),
(144,294,qs),
(146,314,ls),
(148,324,o),
(158,324,qs),
(249,324,ls),
(302,324,o),
(365,380,o),
(365,428,qs),
(365,499,o),
(275,499,qs),
(208,499,o),
(136,456,qs),
(134,455,o),
(131,453,qs),
(125,450,o),
(122,450,qs),
(117,450,o),
(116,458,qs),
(114,478,ls),
(110,515,o),
(156,539,qs),
(215,567,o),
(285,567,qs),
(355,567,o),
(439,498,o),
(439,440,qs),
(439,334,o),
(328,291,q),
(411,266,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 35 51 51 36 37 36 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,128,o),
(27,136,qs),
(34,177,ls),
(37,194,o),
(49,208,qs),
(317,537,ls),
(332,556,o),
(355,556,qs),
(384,556,ls),
(428,556,o),
(419,508,qs),
(365,197,l),
(400,197,ls),
(443,197,o),
(437,154,qs),
(434,138,ls),
(432,128,o),
(422,128,qs),
(353,128,l),
(332,9,ls),
(330,0,o),
(324,0,qs),
(265,0,ls),
(259,0,o),
(260,9,qs),
(281,128,l),
(33,128,ls)
);
},
{
closed = 1;
nodes = (
(342,476,l),
(114,197,l),
(293,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 35 34 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,353,o),
(259,353,qs),
(329,353,o),
(370,318,qs),
(417,279,o),
(417,208,qs),
(417,120,o),
(361,60,qs),
(298,-10,o),
(196,-10,qs),
(125,-10,o),
(30,57,o),
(30,106,qs),
(30,140,o),
(49,140,qs),
(57,140,o),
(63,131,qs),
(109,58,o),
(190,58,qs),
(251,58,o),
(292,91,qs),
(341,131,o),
(341,199,qs),
(341,286,o),
(242,286,qs),
(171,286,o),
(94,259,qs),
(83,256,o),
(84,268,q),
(133,547,ls),
(135,556,o),
(143,556,qs),
(403,556,ls),
(448,556,o),
(440,513,qs),
(437,497,ls),
(436,486,o),
(424,486,qs),
(194,486,l),
(168,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,361,qs),
(343,361,o),
(384,324,qs),
(431,282,o),
(431,214,qs),
(431,126,o),
(375,63,qs),
(311,-10,o),
(212,-10,qs),
(143,-10,o),
(99,28,qs),
(49,71,o),
(49,145,qs),
(49,195,o),
(86,272,o),
(147,353,qs),
(303,557,ls),
(311,567,o),
(320,567,qs),
(344,567,o),
(349,544,qs),
(354,516,o),
(326,479,qs),
(228,352,l),
(253,361,o)
);
},
{
closed = 1;
nodes = (
(220,59,qs),
(273,59,o),
(311,95,qs),
(355,138,o),
(355,204,qs),
(355,296,o),
(261,296,qs),
(206,296,o),
(166,258,qs),
(121,214,o),
(121,151,qs),
(121,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 4 2 3 106 0 0 0 23 77 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 4 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 106 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 36 38 40 36 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,486,o),
(111,495,q),
(121,547,ls),
(122,556,o),
(130,556,qs),
(449,556,ls),
(492,556,o),
(484,513,qs),
(483,502,ls),
(478,477,o),
(464,456,qs),
(176,12,ls),
(168,0,o),
(158,0,qs),
(99,0,ls),
(88,0,o),
(95,9,q),
(404,486,l),
(118,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
16 1 2 1 1 76 3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,53,o),
(208,53,qs),
(267,53,o),
(345,122,o),
(345,175,qs),
(345,214,o),
(290,261,o),
(243,261,qs),
(193,261,o),
(155,232,qs),
(107,196,o),
(107,139,qs),
(107,99,o)
);
},
{
closed = 1;
nodes = (
(215,324,o),
(255,324,qs),
(305,324,o),
(376,386,o),
(376,429,qs),
(376,503,o),
(282,503,qs),
(232,503,o),
(166,443,o),
(166,397,qs),
(166,364,o)
);
},
{
closed = 1;
nodes = (
(96,398,qs),
(96,463,o),
(144,511,qs),
(200,567,o),
(288,567,qs),
(359,567,o),
(446,497,o),
(446,441,qs),
(446,338,o),
(337,294,q),
(418,264,o),
(418,183,qs),
(418,101,o),
(361,47,qs),
(299,-11,o),
(204,-11,qs),
(131,-11,o),
(85,24,qs),
(34,63,o),
(34,132,qs),
(34,245,o),
(162,294,q),
(96,326,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
41 39 35 36 36 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,195,qs),
(157,195,o),
(117,233,qs),
(73,275,o),
(73,342,qs),
(73,429,o),
(130,492,qs),
(197,567,o),
(300,567,qs),
(365,567,o),
(407,530,qs),
(455,488,o),
(455,414,qs),
(455,366,o),
(413,277,o),
(356,204,qs),
(201,1,ls),
(193,-10,o),
(184,-10,qs),
(158,-10,o),
(151,42,o),
(172,71,qs),
(275,205,l),
(247,195,o)
);
},
{
closed = 1;
nodes = (
(240,259,qs),
(296,259,o),
(336,299,qs),
(382,343,o),
(382,407,qs),
(382,498,o),
(285,498,qs),
(231,498,o),
(191,460,qs),
(146,416,o),
(146,351,qs),
(146,259,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 2 0 4 2 105 0 3 3 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 4 1 3 105 0 4 0 2 0 4 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 134 0 1 0 3 4 1 3 105 0 4 2 2 4 89 0 4 4 2 97 0 2 4 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
36 36 38 40 35 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,415,o),
(147,417,qs),
(146,422,o),
(150,422,qs),
(204,422,l),
(208,521,o),
(288,668,o),
(352,697,q),
(361,700,o),
(363,691,qs),
(363,690,o),
(363,689,qs),
(364,677,o),
(365,671,qs),
(367,637,o),
(351,619,qs),
(348,616,o),
(347,614,q),
(281,536,o),
(274,422,q),
(314,422,ls),
(319,422,o),
(320,417,qs),
(320,416,l),
(321,414,o),
(319,413,q),
(280,354,l),
(263,365,o),
(243,365,qs),
(221,365,o),
(209,354,q),
(149,413,ls)
);
},
{
closed = 1;
nodes = (
(164,298,o),
(168,277,qs),
(172,257,o),
(185,241,q),
(135,192,ls),
(133,190,o),
(132,190,qs),
(126,190,o),
(125,196,qs),
(118,240,l),
(68,258,ls),
(61,260,o),
(60,267,qs),
(57,286,ls),
(56,292,o),
(62,295,qs),
(105,313,l),
(97,358,ls),
(96,363,o),
(100,363,qs),
(102,363,o),
(105,361,qs),
(172,313,l)
);
},
{
closed = 1;
nodes = (
(332,312,q),
(382,361,ls),
(383,362,o),
(386,362,qs),
(391,362,o),
(392,357,qs),
(399,313,l),
(449,294,ls),
(456,291,o),
(457,286,qs),
(460,267,ls),
(461,260,o),
(455,258,qs),
(412,239,l),
(420,194,ls),
(421,189,o),
(416,189,qs),
(414,189,o),
(412,191,qs),
(345,241,l),
(352,258,o),
(349,277,qs),
(345,297,o)
);
},
{
closed = 1;
nodes = (
(297,294,o),
(300,276,qs),
(303,258,o),
(283,234,o),
(265,234,qs),
(248,234,o),
(219,258,o),
(216,276,qs),
(213,294,o),
(233,318,o),
(250,318,qs),
(268,318,o)
);
},
{
closed = 1;
nodes = (
(500,-144,qs),
(331,-88,o),
(252,131,q),
(202,131,ls),
(197,131,o),
(196,136,qs),
(196,138,o),
(197,140,qs),
(237,198,l),
(254,188,o),
(275,188,qs),
(294,188,o),
(307,198,q),
(368,140,ls),
(370,138,o),
(370,136,qs),
(371,131,o),
(366,131,qs),
(326,131,l),
(373,15,o),
(465,-61,qs),
(492,-83,o),
(504,-118,q),
(505,-123,o),
(507,-133,qs),
(508,-137,o),
(509,-138,q),
(510,-147,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 0 1 73 36 34 4 4 4 0 76 63 57 54 50 37 6 5 4 108 104 2 3 5 109 101 2 6 7 5 76 17 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
2 1 1 0 4 1 112 0 0 4 0 133 0 3 5 7 5 3 7 128 0 7 6 5 7 6 126 8 1 6 5 6 111 9 1 4 5 5 4 89 9 1 4 4 5 98 0 5 4 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 3 5 7 5 3 7 128 0 7 6 5 7 6 126 8 1 6 6 132 9 1 4 5 5 4 89 9 1 4 4 5 98 0 5 4 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
79 78 114 112 107 105 99 98 85 83 78 89 79 89 48 46 31 38 33 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,532,o),
(56,612,qs),
(39,627,o),
(28,647,o),
(23,671,qs),
(22,674,o),
(21,679,qs),
(19,688,o),
(19,691,q),
(17,700,o),
(27,697,qs),
(196,632,o),
(273,422,q),
(324,422,ls),
(329,422,o),
(330,417,qs),
(330,414,o),
(329,413,qs),
(289,354,l),
(273,365,o),
(251,365,qs),
(232,365,o),
(219,354,q),
(158,413,ls),
(156,415,o),
(156,417,qs),
(155,422,o),
(160,422,qs),
(198,422,l)
);
},
{
closed = 1;
nodes = (
(470,260,o),
(464,258,qs),
(421,240,l),
(429,196,ls),
(430,190,o),
(425,190,qs),
(423,190,o),
(420,192,qs),
(354,241,l),
(360,257,o),
(357,277,qs),
(353,298,o),
(341,313,q),
(391,361,l),
(392,363,o),
(395,363,qs),
(399,363,o),
(400,358,qs),
(408,313,l),
(458,295,l),
(464,292,o),
(465,286,qs),
(469,267,ls)
);
},
{
closed = 1;
nodes = (
(194,241,q),
(145,191,l),
(142,189,o),
(140,189,qs),
(136,189,o),
(135,194,qs),
(126,239,l),
(76,258,ls),
(70,260,o),
(69,267,qs),
(66,286,ls),
(65,292,o),
(70,294,qs),
(114,313,l),
(106,357,ls),
(105,362,o),
(109,362,qs),
(112,362,o),
(114,361,qs),
(181,312,l),
(173,296,o),
(176,277,qs),
(180,257,o)
);
},
{
closed = 1;
nodes = (
(307,294,o),
(310,276,qs),
(313,258,o),
(293,234,o),
(275,234,qs),
(258,234,o),
(229,258,o),
(226,276,qs),
(223,294,o),
(243,318,o),
(260,318,qs),
(278,318,o)
);
},
{
closed = 1;
nodes = (
(379,137,o),
(379,136,q),
(381,131,o),
(375,131,qs),
(321,131,l),
(316,32,o),
(237,-116,o),
(173,-144,qs),
(164,-148,o),
(163,-138,q),
(162,-137,l),
(161,-124,o),
(160,-118,qs),
(157,-85,o),
(172,-68,qs),
(178,-62,o),
(178,-61,q),
(245,17,o),
(250,131,q),
(211,131,ls),
(207,131,o),
(205,136,q),
(205,139,o),
(206,140,qs),
(246,198,l),
(264,188,o),
(283,188,qs),
(304,188,o),
(316,198,q),
(377,140,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
10 2 2 0 1 35 9 5 3 3 0 73 60 54 48 42 38 6 4 3 91 70 47 45 4 5 4 114 1 6 5 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 2 2 1 0 3 1 112 0 0 3 0 133 0 5 4 6 4 5 6 128 7 1 6 4 6 111 9 1 3 4 4 3 89 9 1 3 3 4 98 0 4 3 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
8 2 2 1 0 1 133 0 0 3 0 133 0 5 4 6 4 5 6 128 7 1 6 6 132 9 1 3 4 4 3 89 9 1 3 3 4 98 0 4 3 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
76 75 0 0 112 111 97 95 90 88 82 80 75 86 76 86 0 28 0 28 37 38 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(25,74,ls),
(101,74,o),
(85,169,qs),
(45,398,ls),
(34,467,o),
(64,511,qs),
(101,564,o),
(186,564,qs),
(258,564,o),
(307,523,qs),
(359,478,o),
(373,398,qs),
(430,68,ls),
(442,0,o),
(381,0,qs),
(375,0,ls),
(367,0,o),
(365,8,qs),
(296,401,ls),
(289,442,o),
(231,494,o),
(192,494,qs),
(152,494,o),
(114,446,o),
(121,404,qs),
(161,168,ls),
(174,94,o),
(145,50,qs),
(111,0,o),
(32,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 30 28 23 21 16 13 9 7 0 31 1 31 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,154,o),
(101,168,qs),
(39,488,ls),
(27,556,o),
(88,556,qs),
(95,556,ls),
(103,556,o),
(105,548,qs),
(167,168,ls),
(169,154,o),
(156,154,qs),
(117,154,ls)
);
},
{
closed = 1;
nodes = (
(189,-11,o),
(167,-11,qs),
(145,-11,o),
(107,21,o),
(103,44,qs),
(99,66,o),
(126,99,o),
(148,99,qs),
(169,99,o),
(207,67,o),
(211,44,qs),
(215,21,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 0 1 2 1 0 2 128 0 1 1 23 77 0 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 0 1 2 1 0 2 128 0 2 0 3 2 3 101 0 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 22 20 16 14 7 4 0 11 1 10 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 214;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,0,o),
(162,14,qs),
(79,486,ls),
(69,545,o),
(111,553,qs),
(122,556,o),
(145,556,qs),
(233,556,o),
(289,498,qs),
(292,495,o),
(293,498,q),
(323,556,o),
(409,556,qs),
(460,556,ls),
(467,556,o),
(469,548,qs),
(470,542,ls),
(479,496,o),
(436,488,qs),
(435,488,o),
(428,487,qs),
(414,486,o),
(410,486,qs),
(377,482,o),
(338,443,o),
(322,398,qs),
(318,386,o),
(312,386,qs),
(305,386,o),
(296,398,qs),
(246,467,o),
(181,483,qs),
(169,486,o),
(159,485,qs),
(155,484,o),
(156,481,q),
(238,14,ls),
(240,0,o),
(227,0,qs),
(178,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
28 1 2 3 1 76 0 1 2 0 2 1 0 128 0 2 2 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 33 31 27 24 18 16 11 10 0 39 1 38 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,556,o),
(361,556,qs),
(366,556,o),
(370,548,qs),
(398,482,o),
(353,446,q),
(197,297,l),
(135,231,o),
(145,168,qs),
(153,125,o),
(219,71,o),
(265,71,qs),
(539,71,ls),
(567,71,o),
(608,42,o),
(612,18,qs),
(613,12,ls),
(616,0,o),
(602,0,qs),
(272,0,ls),
(203,0,o),
(150,35,qs),
(83,80,o),
(69,164,qs),
(59,220,o),
(100,313,o),
(161,373,qs),
(352,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 40 52 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(113,532,o),
(102,532,qs),
(69,532,ls),
(57,532,o),
(51,543,qs),
(-18,661,ls),
(-24,672,o),
(-4,672,qs),
(31,672,o),
(50,639,qs),
(78,592,l),
(89,639,ls),
(97,672,o),
(132,672,qs),
(146,672,o),
(143,661,qs),
(116,543,ls)
);
},
{
closed = 1;
nodes = (
(488,94,o),
(459,50,qs),
(426,0,o),
(346,0,qs),
(123,0,ls),
(109,0,o),
(107,12,qs),
(106,19,ls),
(101,44,o),
(129,74,o),
(156,74,qs),
(244,74,l),
(98,363,ls),
(65,429,o),
(124,447,qs),
(129,448,ls),
(135,450,o),
(139,443,qs),
(326,74,l),
(345,74,ls),
(415,74,o),
(399,169,qs),
(342,488,ls),
(330,556,o),
(392,556,qs),
(399,556,ls),
(406,556,o),
(408,548,qs),
(475,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 1 3 0 1 76 1 1 0 0 2 4 0 2 105 0 3 3 23 77 5 1 4 4 6 96 0 6 6 24 6 78 52 39 35 51 51 36 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,532,o),
(101,532,qs),
(68,532,ls),
(56,532,o),
(50,543,qs),
(-19,661,l),
(-24,672,o),
(-5,672,qs),
(30,672,o),
(49,639,qs),
(77,592,l),
(88,639,ls),
(96,672,o),
(131,672,qs),
(145,672,o),
(142,661,qs),
(115,543,ls)
);
},
{
closed = 1;
nodes = (
(640,0,l),
(585,0,ls),
(502,-1,o),
(455,46,q),
(421,0,o),
(345,0,qs),
(122,0,ls),
(108,0,o),
(106,12,qs),
(105,19,ls),
(100,44,o),
(128,74,o),
(155,74,qs),
(243,74,l),
(97,363,ls),
(64,429,o),
(123,447,qs),
(128,448,ls),
(134,450,o),
(138,443,qs),
(325,74,l),
(344,74,ls),
(414,74,o),
(398,169,qs),
(341,488,ls),
(329,556,o),
(391,556,qs),
(398,556,ls),
(405,556,o),
(407,548,qs),
(474,168,ls),
(482,124,o),
(534,74,o),
(571,74,qs),
(627,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
5 1 4 0 47 1 7 3 2 76 1 1 0 0 2 3 0 2 105 0 4 4 23 77 6 5 9 3 3 3 7 98 8 1 7 7 24 7 78 18 17 50 48 46 43 39 37 30 28 25 22 17 51 18 51 51 36 33 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,655,o),
(408,676,qs),
(404,697,o),
(428,726,o),
(449,726,qs),
(469,726,o),
(503,697,o),
(507,676,qs),
(510,655,o),
(487,626,o),
(467,626,qs),
(446,626,o)
);
},
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(611,-87,o),
(554,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(583,164,ls),
(591,122,o),
(643,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
50 1 7 2 1 76 0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 77 0 2 2 7 95 0 7 7 24 7 78 1 0 53 51 47 45 37 36 28 26 21 18 14 12 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,697,o),
(80,676,qs),
(84,655,o),
(61,626,o),
(40,626,qs),
(20,626,o),
(-14,655,o),
(-18,676,qs),
(-22,697,o),
(2,726,o),
(23,726,qs),
(43,726,o)
);
},
{
closed = 1;
nodes = (
(-3,74,l),
(35,74,ls),
(105,74,o),
(88,169,qs),
(31,488,ls),
(19,556,o),
(80,556,qs),
(87,556,ls),
(95,556,o),
(96,548,qs),
(165,168,ls),
(178,94,o),
(148,50,qs),
(115,0,o),
(35,0,qs),
(10,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-14,655,o),
(-18,676,qs),
(-22,697,o),
(2,726,o),
(23,726,qs),
(43,726,o),
(77,697,o),
(80,676,qs),
(84,655,o),
(61,626,o),
(40,626,qs),
(20,626,o)
);
},
{
closed = 1;
nodes = (
(330,0,l),
(275,0,ls),
(192,-1,o),
(146,46,q),
(112,0,o),
(35,0,qs),
(10,0,l),
(-3,74,l),
(35,74,ls),
(105,74,o),
(88,169,qs),
(31,488,ls),
(19,556,o),
(80,556,qs),
(87,556,ls),
(95,556,o),
(96,548,qs),
(165,168,ls),
(173,124,o),
(224,74,o),
(262,74,qs),
(318,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
29 1 5 2 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 17 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,752,o),
(393,771,qs),
(389,790,o),
(410,817,o),
(429,817,qs),
(447,817,o),
(477,791,o),
(480,771,qs),
(484,752,o),
(463,727,o),
(445,727,qs),
(426,727,o)
);
},
{
closed = 1;
nodes = (
(348,657,o),
(345,676,qs),
(342,695,o),
(362,721,o),
(380,721,qs),
(399,721,o),
(429,695,o),
(433,676,qs),
(436,657,o),
(415,631,o),
(396,631,qs),
(377,631,o)
);
},
{
closed = 1;
nodes = (
(488,721,o),
(507,721,qs),
(525,721,o),
(555,695,o),
(558,676,qs),
(562,657,o),
(541,631,o),
(523,631,qs),
(504,631,o),
(474,657,o),
(470,676,qs),
(467,695,o)
);
},
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(611,-87,o),
(554,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(583,164,ls),
(591,122,o),
(643,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
74 1 11 6 1 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 0 6 6 11 95 0 11 11 24 11 78 13 12 1 0 77 75 71 69 61 60 52 50 45 42 38 36 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-22,752,o),
(-26,771,qs),
(-30,790,o),
(-9,817,o),
(10,817,qs),
(29,817,o),
(58,791,o),
(62,771,qs),
(65,752,o),
(45,727,o),
(26,727,qs),
(7,727,o)
);
},
{
closed = 1;
nodes = (
(-3,631,o),
(-22,631,qs),
(-41,631,o),
(-70,657,o),
(-74,676,qs),
(-77,695,o),
(-57,721,o),
(-39,721,qs),
(-19,721,o),
(11,695,o),
(14,676,qs),
(18,657,o)
);
},
{
closed = 1;
nodes = (
(69,721,o),
(88,721,qs),
(107,721,o),
(136,695,o),
(140,676,qs),
(143,657,o),
(123,631,o),
(104,631,qs),
(85,631,o),
(55,657,o),
(52,676,qs),
(49,695,o)
);
},
{
closed = 1;
nodes = (
(177,94,o),
(147,50,qs),
(114,0,o),
(34,0,qs),
(9,0,l),
(-4,74,l),
(34,74,ls),
(104,74,o),
(87,169,qs),
(30,488,ls),
(18,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(95,548,qs),
(164,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 1 9 1 0 2 1 0 105 5 1 2 4 1 3 6 2 3 105 0 6 6 23 77 0 7 7 8 98 0 8 8 24 8 78 1 0 48 46 45 43 40 37 34 32 28 26 22 20 16 14 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-22,752,o),
(-26,771,qs),
(-29,790,o),
(-9,817,o),
(10,817,qs),
(29,817,o),
(58,791,o),
(62,771,qs),
(65,752,o),
(45,727,o),
(26,727,qs),
(7,727,o)
);
},
{
closed = 1;
nodes = (
(-3,631,o),
(-22,631,qs),
(-41,631,o),
(-70,657,o),
(-74,676,qs),
(-77,695,o),
(-57,721,o),
(-39,721,qs),
(-19,721,o),
(11,695,o),
(14,676,qs),
(18,657,o)
);
},
{
closed = 1;
nodes = (
(69,721,o),
(88,721,qs),
(107,721,o),
(136,695,o),
(140,676,qs),
(143,657,o),
(123,631,o),
(104,631,qs),
(85,631,o),
(55,657,o),
(52,676,qs),
(49,695,o)
);
},
{
closed = 1;
nodes = (
(329,0,l),
(274,0,ls),
(191,-1,o),
(145,46,q),
(111,0,o),
(34,0,qs),
(9,0,l),
(-4,74,l),
(34,74,ls),
(104,74,o),
(87,169,qs),
(30,488,ls),
(18,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(95,548,qs),
(164,168,ls),
(172,124,o),
(223,74,o),
(261,74,qs),
(316,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
53 1 9 6 1 76 0 1 11 1 0 2 1 0 105 5 1 2 4 1 3 7 2 3 105 0 7 7 23 77 8 12 2 6 6 9 98 10 1 9 9 24 9 78 37 36 1 0 56 54 52 50 49 47 44 41 36 57 37 57 34 32 28 26 22 20 16 14 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,782,o),
(350,782,qs),
(385,782,o),
(404,749,qs),
(433,702,l),
(444,749,ls),
(452,782,o),
(487,782,qs),
(501,782,o),
(498,771,qs),
(470,653,ls),
(468,642,o),
(457,642,qs),
(424,642,ls),
(412,642,o),
(405,653,qs),
(337,771,ls)
);
},
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(611,-87,o),
(554,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(583,164,ls),
(591,122,o),
(643,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
11 1 0 1 55 1 8 3 2 76 0 6 4 3 4 6 3 128 2 1 1 0 0 4 1 0 105 0 5 0 7 5 7 101 0 4 4 23 77 0 3 3 8 95 0 8 8 24 8 78 36 40 24 37 52 34 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 705;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,642,o),
(7,653,qs),
(-62,770,ls),
(-68,781,o),
(-48,781,qs),
(-13,781,o),
(6,749,qs),
(34,702,l),
(45,749,ls),
(53,781,o),
(88,781,qs),
(102,781,o),
(99,770,qs),
(72,653,ls),
(69,642,o),
(58,642,qs),
(25,642,ls)
);
},
{
closed = 1;
nodes = (
(180,94,o),
(150,50,qs),
(117,0,o),
(37,0,qs),
(12,0,l),
(-1,74,l),
(37,74,ls),
(107,74,o),
(90,169,qs),
(33,488,ls),
(21,556,o),
(82,556,qs),
(89,556,ls),
(97,556,o),
(98,548,qs),
(167,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
8 1 0 1 1 76 2 1 1 6 1 0 3 1 0 105 0 3 3 23 77 0 4 4 5 98 0 5 5 24 5 78 1 0 29 27 26 24 21 18 12 10 6 4 0 16 1 15 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,642,o),
(7,653,qs),
(-62,770,ls),
(-68,781,o),
(-48,781,qs),
(-13,781,o),
(6,749,qs),
(34,702,l),
(45,749,ls),
(53,781,o),
(88,781,qs),
(102,781,o),
(99,770,qs),
(72,653,ls),
(69,642,o),
(58,642,qs),
(25,642,ls)
);
},
{
closed = 1;
nodes = (
(332,0,l),
(277,0,ls),
(194,-1,o),
(148,46,q),
(114,0,o),
(37,0,qs),
(12,0,l),
(-1,74,l),
(37,74,ls),
(107,74,o),
(90,169,qs),
(33,488,ls),
(21,556,o),
(82,556,qs),
(89,556,ls),
(97,556,o),
(98,548,qs),
(167,168,ls),
(175,124,o),
(226,74,o),
(264,74,qs),
(320,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
8 1 0 1 34 1 6 3 2 76 2 1 1 8 1 0 4 1 0 105 0 4 4 23 77 5 9 2 3 3 6 98 7 1 6 6 24 6 78 18 17 1 0 37 35 33 31 30 28 25 22 17 38 18 38 12 10 6 4 0 16 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,0,o),
(92,9,q),
(281,520,ls),
(294,555,o),
(319,556,qs),
(356,556,ls),
(368,556,o),
(364,544,qs),
(165,6,ls),
(163,0,o),
(156,0,qs),
(100,0,ls)
);
},
{
closed = 1;
nodes = (
(159,493,o),
(162,472,qs),
(166,451,o),
(143,422,o),
(122,422,qs),
(102,422,o),
(68,451,o),
(64,472,qs),
(60,493,o),
(84,522,o),
(105,522,qs),
(125,522,o)
);
},
{
closed = 1;
nodes = (
(375,60,o),
(378,39,qs),
(382,18,o),
(359,-11,o),
(338,-11,qs),
(318,-11,o),
(284,18,o),
(280,39,qs),
(276,60,o),
(300,89,o),
(321,89,qs),
(341,89,o)
);
},
{
closed = 1;
nodes = (
(556,60,o),
(560,39,qs),
(564,18,o),
(541,-11,o),
(520,-11,qs),
(499,-11,o),
(466,18,o),
(462,39,qs),
(458,60,o),
(481,89,o),
(502,89,qs),
(523,89,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 1 2 1 133 8 1 0 4 5 4 0 5 128 9 1 2 0 3 4 2 3 105 11 6 10 3 4 0 5 4 89 11 6 10 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 1 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 7 4 0 11 1 10 12 6 22 
CALL[ ]	/* CallFunction */";
};
width = 570;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
},
{
closed = 1;
nodes = (
(218,-306,o),
(222,-327,qs),
(225,-348,o),
(202,-377,o),
(182,-377,qs),
(161,-377,o),
(127,-348,o),
(123,-327,qs),
(119,-305,o),
(143,-277,o),
(164,-277,qs),
(184,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
26 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 106 8 1 6 0 7 6 7 101 0 0 0 5 95 0 5 5 24 5 78 32 31 38 36 31 42 32 42 35 35 34 37 52 32 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,584,o),
(49,584,qs),
(84,584,o),
(103,552,qs),
(131,504,l),
(142,552,ls),
(150,584,o),
(185,584,qs),
(199,584,o),
(196,573,qs),
(169,456,ls),
(166,444,o),
(155,444,qs),
(122,444,ls),
(110,444,o),
(104,456,qs),
(35,573,ls)
);
},
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
11 1 0 1 43 1 8 3 2 76 0 4 0 3 0 4 3 128 0 6 8 5 8 6 5 128 2 1 1 0 0 4 1 0 105 0 5 0 7 5 7 102 0 3 3 8 95 0 8 8 24 8 78 35 35 34 37 52 34 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
},
{
closed = 1;
nodes = (
(239,-288,qs),
(212,-405,ls),
(209,-416,o),
(198,-416,qs),
(165,-416,ls),
(154,-416,o),
(147,-405,qs),
(79,-288,ls),
(73,-277,o),
(92,-277,qs),
(127,-277,o),
(146,-309,qs),
(174,-356,l),
(185,-309,ls),
(193,-277,o),
(228,-277,qs),
(242,-277,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
26 1 5 0 34 1 8 6 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 106 7 9 2 6 0 8 6 8 101 0 0 0 5 95 0 5 5 24 5 78 32 31 44 41 38 36 31 47 32 47 35 35 34 37 52 32 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,402,o),
(171,402,qs),
(53,402,ls),
(44,402,o),
(42,410,qs),
(41,414,ls),
(34,448,o),
(79,448,qs),
(83,448,l),
(59,579,ls),
(50,628,o),
(87,628,qs),
(90,628,ls),
(98,628,o),
(99,621,qs),
(109,569,l),
(146,569,ls),
(235,569,o),
(248,496,qs),
(256,453,o)
);
},
{
closed = 1;
nodes = (
(206,448,o),
(198,486,qs),
(192,523,o),
(158,523,qs),
(117,523,l),
(124,486,l),
(130,448,l),
(175,448,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 133 0 0 0 4 2 0 4 105 6 5 2 2 3 3 2 89 6 5 2 2 2 3 95 0 3 2 3 79 20 20 20 27 20 26 36 51 34 50 33 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,-165,o),
(62,-165,qs),
(44,-165,o),
(14,-139,o),
(10,-119,qs),
(7,-100,o),
(27,-75,o),
(46,-75,qs),
(65,-75,o),
(95,-100,o),
(98,-119,qs),
(102,-139,o)
);
},
{
closed = 1;
nodes = (
(207,-165,o),
(189,-165,qs),
(170,-165,o),
(140,-139,o),
(136,-119,qs),
(133,-100,o),
(154,-75,o),
(173,-75,qs),
(191,-75,o),
(220,-100,o),
(224,-119,qs),
(228,-139,o)
);
},
{
closed = 1;
nodes = (
(176,-196,o),
(180,-215,qs),
(183,-234,o),
(163,-261,o),
(144,-261,qs),
(125,-261,o),
(95,-234,o),
(92,-215,qs),
(88,-196,o),
(109,-171,o),
(128,-171,qs),
(147,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
2 1 0 3 1 1 4 0 1 105 6 1 4 5 5 4 89 6 1 4 4 5 97 0 5 4 5 81 25 24 31 29 24 35 25 35 36 36 36 34 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,460,o),
(28,479,qs),
(24,498,o),
(44,524,o),
(63,524,qs),
(82,524,o),
(112,498,o),
(116,479,qs),
(119,460,o),
(98,434,o),
(79,434,qs),
(61,434,o)
);
},
{
closed = 1;
nodes = (
(157,460,o),
(154,479,qs),
(150,498,o),
(171,524,o),
(190,524,qs),
(208,524,o),
(238,499,o),
(241,479,qs),
(245,460,o),
(224,434,o),
(206,434,qs),
(187,434,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,-139,o),
(28,-119,qs),
(24,-101,o),
(44,-75,o),
(63,-75,qs),
(82,-75,o),
(112,-100,o),
(116,-119,qs),
(119,-139,o),
(98,-165,o),
(79,-165,qs),
(61,-165,o)
);
},
{
closed = 1;
nodes = (
(157,-139,o),
(154,-119,qs),
(150,-101,o),
(171,-75,o),
(190,-75,qs),
(208,-75,o),
(238,-100,o),
(241,-119,qs),
(245,-139,o),
(224,-165,o),
(206,-165,qs),
(187,-165,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,534,q),
(1,532,o),
(-1,529,qs),
(-5,522,o),
(-7,520,q),
(-10,519,o),
(-11,519,qs),
(-15,519,o),
(-19,523,q),
(-27,534,o),
(-29,547,qs),
(-32,566,o),
(-7,592,o),
(13,591,qs),
(23,590,o),
(32,587,qs),
(35,586,o),
(37,586,qs),
(40,586,o),
(41,588,q),
(41,589,l),
(69,648,o),
(122,648,qs),
(152,648,o),
(189,615,o),
(190,588,qs),
(192,558,o),
(156,520,o),
(126,520,qs),
(105,520,o),
(64,535,qs),
(31,547,o),
(20,547,qs),
(9,547,o)
);
},
{
closed = 1;
nodes = (
(148,591,qs),
(144,609,o),
(123,609,qs),
(99,609,o),
(82,573,q),
(105,563,o),
(124,563,qs),
(153,563,o)
);
},
{
closed = 1;
nodes = (
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(127,74,o),
(154,74,qs),
(241,74,l),
(95,363,ls),
(62,429,o),
(121,447,qs),
(126,448,ls),
(132,450,o),
(136,443,qs),
(323,74,l),
(343,74,ls),
(412,74,o),
(396,169,qs),
(340,488,ls),
(328,556,o),
(389,556,qs),
(396,556,ls),
(404,556,o),
(405,548,qs),
(473,168,ls),
(486,94,o),
(457,50,qs),
(423,0,o),
(344,0,qs),
(120,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 15 2 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 0 5 3 2 5 105 0 3 10 1 0 1 3 0 105 0 1 1 4 97 7 11 2 4 4 23 77 9 1 8 8 6 96 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 2 0 5 3 2 5 105 0 3 10 1 0 1 3 0 105 0 7 7 23 77 0 1 1 4 97 11 1 4 4 23 77 9 1 8 8 6 96 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
43 42 35 34 1 0 65 63 56 54 51 48 42 70 43 69 39 37 34 41 35 41 20 19 11 9 5 3 0 33 1 33 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,520,o),
(126,520,qs),
(105,520,o),
(64,535,qs),
(31,547,o),
(20,547,qs),
(9,547,o),
(1,534,q),
(1,532,o),
(-1,529,qs),
(-5,522,o),
(-7,520,q),
(-10,519,o),
(-11,519,qs),
(-15,519,o),
(-19,523,q),
(-27,534,o),
(-29,547,qs),
(-32,566,o),
(-7,593,o),
(13,591,qs),
(24,589,o),
(32,587,qs),
(35,586,o),
(37,586,qs),
(40,586,o),
(41,588,q),
(41,589,l),
(69,648,o),
(122,648,qs),
(152,648,o),
(189,615,o),
(190,588,qs),
(192,558,o)
);
},
{
closed = 1;
nodes = (
(124,563,qs),
(153,563,o),
(148,591,qs),
(144,609,o),
(123,609,qs),
(99,609,o),
(82,573,q),
(105,563,o)
);
},
{
closed = 1;
nodes = (
(638,0,l),
(583,0,ls),
(501,-1,o),
(454,46,q),
(420,0,o),
(344,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(127,74,o),
(154,74,qs),
(241,74,l),
(95,363,ls),
(62,429,o),
(121,447,qs),
(126,448,ls),
(132,450,o),
(136,443,qs),
(323,74,l),
(343,74,ls),
(412,74,o),
(396,169,qs),
(340,488,ls),
(328,556,o),
(389,556,qs),
(396,556,ls),
(404,556,o),
(405,548,qs),
(473,168,ls),
(481,124,o),
(532,74,o),
(570,74,qs),
(625,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 4 3 72 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 1 4 2 4 1 2 128 0 0 0 3 4 0 3 105 0 2 2 4 97 6 1 4 4 23 77 8 7 11 3 5 5 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 1 6 2 6 1 2 128 0 0 0 3 4 0 3 105 0 6 6 23 77 0 2 2 4 97 0 4 4 23 77 8 7 11 3 5 5 9 98 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
43 42 75 73 71 68 64 62 55 53 50 47 42 76 43 76 41 39 37 35 32 30 28 26 34 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-14,788,qs),
(-23,810,o),
(1,837,o),
(28,837,qs),
(128,838,ls),
(164,838,o),
(169,806,q),
(169,802,l),
(171,793,o),
(162,793,qs),
(58,793,ls),
(23,793,o),
(6,787,qs),
(4,786,o),
(0,784,qs),
(-4,782,o),
(-6,782,qs),
(-11,782,o)
);
},
{
closed = 1;
nodes = (
(180,745,o),
(185,713,qs),
(186,709,ls),
(187,701,o),
(178,701,qs),
(74,701,ls),
(39,701,o),
(22,694,qs),
(20,693,o),
(16,691,qs),
(12,689,o),
(10,689,qs),
(6,689,o),
(2,696,qs),
(-7,717,o),
(17,744,o),
(44,744,qs),
(144,745,ls)
);
},
{
closed = 1;
nodes = (
(259,513,o),
(225,466,o),
(189,466,qs),
(153,466,o),
(130,486,q),
(113,466,o),
(80,466,qs),
(3,466,o),
(-14,553,qs),
(-19,583,ls),
(-28,630,o),
(8,630,qs),
(15,630,ls),
(21,630,o),
(22,623,qs),
(36,548,ls),
(42,511,o),
(72,511,qs),
(101,511,o),
(94,548,qs),
(88,583,ls),
(80,630,o),
(117,630,qs),
(123,630,ls),
(130,630,o),
(131,623,qs),
(144,548,ls),
(151,511,o),
(181,511,qs),
(209,511,o),
(203,548,qs),
(197,583,ls),
(189,630,o),
(224,630,qs),
(232,630,ls),
(238,630,o),
(239,623,qs),
(252,553,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
68 1 10 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 7 2 5 4 6 6 5 114 0 2 1 12 2 0 3 2 0 105 13 1 3 0 4 5 3 4 103 8 1 6 10 10 6 89 8 1 6 6 10 98 11 1 10 6 10 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
9 7 2 5 4 6 4 5 6 128 0 2 1 12 2 0 3 2 0 105 13 1 3 0 4 5 3 4 103 8 1 6 10 10 6 89 8 1 6 6 10 98 11 1 10 6 10 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 0 1 3 1 0 3 128 9 7 2 5 4 6 4 5 6 128 0 2 0 1 0 2 1 103 13 1 3 0 4 5 3 4 103 8 1 6 10 10 6 89 8 1 6 6 10 98 11 1 10 6 10 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
19 18 1 0 71 69 67 65 62 59 56 54 51 48 45 43 40 37 31 28 18 35 19 34 14 11 8 5 0 17 1 17 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,728,o),
(24,754,qs),
(20,782,o),
(48,817,o),
(76,817,qs),
(103,817,o),
(144,782,o),
(148,754,qs),
(153,727,o),
(125,693,o),
(98,693,qs),
(70,693,o)
);
},
{
closed = 1;
nodes = (
(61,754,qs),
(66,726,o),
(92,726,qs),
(117,726,o),
(112,754,qs),
(107,784,o),
(82,784,qs),
(56,784,o)
);
},
{
closed = 1;
nodes = (
(259,512,o),
(225,466,o),
(189,466,qs),
(153,466,o),
(130,486,q),
(113,466,o),
(80,466,qs),
(3,466,o),
(-14,552,qs),
(-19,582,ls),
(-28,629,o),
(8,629,qs),
(15,629,ls),
(21,629,o),
(22,623,qs),
(36,547,ls),
(42,510,o),
(72,510,qs),
(101,510,o),
(94,547,qs),
(88,582,ls),
(80,629,o),
(117,629,qs),
(123,629,ls),
(130,629,o),
(131,623,qs),
(144,547,ls),
(151,510,o),
(181,510,qs),
(209,510,o),
(203,547,qs),
(197,582,ls),
(189,629,o),
(224,629,qs),
(232,629,ls),
(238,629,o),
(239,623,qs),
(252,552,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
52 1 9 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
8 6 2 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 6 2 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 55 53 51 49 46 43 40 38 35 32 29 27 24 21 17 15 12 19 13 19 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,247,o),
(382,241,qs),
(383,235,o),
(380,231,qs),
(325,163,ls),
(321,159,o),
(316,159,qs),
(311,159,o),
(306,163,qs),
(225,231,ls),
(220,236,o),
(220,241,qs),
(219,246,o),
(222,250,qs),
(278,317,ls),
(282,322,o),
(287,322,qs),
(293,322,o),
(297,318,qs),
(376,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,0,o),
(313,10,qs),
(229,488,ls),
(217,556,o),
(278,556,qs),
(285,556,ls),
(293,556,o),
(294,548,qs),
(389,10,ls),
(391,0,o),
(381,0,qs),
(325,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(262,0,o),
(260,10,qs),
(196,372,ls),
(164,556,o),
(330,556,qs),
(421,556,ls),
(428,556,o),
(429,548,qs),
(433,528,o),
(429,513,qs),
(422,486,o),
(380,486,qs),
(342,486,ls),
(295,486,o),
(261,433,o),
(271,376,qs),
(336,10,ls),
(338,0,o),
(327,0,qs),
(271,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 15 12 8 5 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(566,359,o),
(538,311,qs),
(505,256,o),
(428,256,qs),
(351,256,o),
(300,314,q),
(270,256,o),
(193,256,qs),
(146,256,o),
(107,277,q),
(154,10,ls),
(156,0,o),
(147,0,qs),
(90,0,ls),
(80,0,o),
(78,10,qs),
(-6,488,ls),
(-18,556,o),
(43,556,qs),
(49,556,ls),
(57,556,o),
(59,548,qs),
(78,442,ls),
(97,331,o),
(179,331,qs),
(219,331,o),
(253,389,o),
(243,442,qs),
(234,492,ls),
(229,520,o),
(252,556,o),
(275,556,qs),
(282,556,ls),
(289,556,o),
(291,549,q),
(310,442,ls),
(330,331,o),
(412,331,qs),
(452,331,o),
(486,388,o),
(477,440,qs),
(468,489,ls),
(456,557,o),
(516,557,qs),
(523,557,ls),
(531,557,o),
(533,549,qs),
(552,439,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 51 37 51 36 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,0,o),
(523,0,qs),
(404,0,ls),
(337,0,o),
(287,29,qs),
(215,71,o),
(198,163,qs),
(184,239,o),
(244,280,q),
(177,319,o),
(163,398,qs),
(151,469,o),
(184,514,qs),
(222,566,o),
(302,564,qs),
(348,564,o),
(420,522,o),
(427,491,qs),
(431,474,o),
(419,474,qs),
(415,474,o),
(408,476,q),
(406,476,o),
(404,477,qs),
(356,494,o),
(320,494,qs),
(226,494,o),
(240,402,qs),
(246,361,o),
(313,313,o),
(362,313,qs),
(416,313,ls),
(445,313,o),
(485,283,o),
(490,259,qs),
(491,253,ls),
(493,242,o),
(480,242,qs),
(358,242,ls),
(316,243,o),
(269,195,o),
(276,159,qs),
(284,118,o),
(347,71,o),
(397,71,qs),
(459,71,ls),
(487,71,o),
(528,42,o),
(533,18,qs),
(534,12,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 2 0 1 0 2 1 103 0 3 3 5 97 0 5 5 23 77 0 0 0 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 0 0 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
58 35 36 35 52 52 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(369,523,qs),
(425,476,o),
(447,384,qs),
(482,232,o),
(492,181,qs),
(493,178,l),
(507,97,o),
(475,47,qs),
(438,-10,o),
(353,-10,qs),
(278,-10,o),
(224,34,qs),
(162,85,o),
(145,178,qs),
(145,179,o),
(144,191,qs),
(135,263,o),
(120,383,qs),
(111,463,o),
(140,510,qs),
(174,564,o),
(252,564,qs),
(320,564,o)
);
},
{
closed = 1;
nodes = (
(199,378,qs),
(223,181,ls),
(242,61,o),
(340,61,qs),
(437,61,o),
(414,181,qs),
(370,378,ls),
(345,493,o),
(265,493,qs),
(185,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
24 23 1 0 29 27 23 32 24 32 13 11 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,0,o),
(375,10,qs),
(311,376,ls),
(292,486,o),
(201,486,qs),
(163,486,ls),
(121,486,o),
(104,513,qs),
(95,525,o),
(93,542,qs),
(92,548,ls),
(91,556,o),
(98,556,qs),
(192,556,ls),
(355,556,o),
(387,372,qs),
(451,10,ls),
(453,0,o),
(443,0,qs),
(387,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 7 4 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,116,q),
(381,543,ls),
(381,556,o),
(390,556,qs),
(394,556,ls),
(421,556,o),
(457,515,o),
(457,485,qs),
(461,129,ls),
(463,-8,o),
(357,-8,qs),
(253,-8,o),
(205,129,qs),
(83,485,ls),
(73,515,o),
(95,556,o),
(122,556,qs),
(126,556,ls),
(136,556,o),
(140,543,qs),
(286,116,ls),
(305,66,o),
(345,66,qs),
(383,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,0,o),
(150,17,qs),
(147,427,ls),
(146,564,o),
(250,564,qs),
(356,564,o),
(403,427,qs),
(542,17,ls),
(547,0,o),
(533,0,qs),
(484,0,ls),
(471,0,o),
(466,15,qs),
(323,441,l),
(303,491,o),
(263,491,qs),
(225,491,o),
(222,441,q),
(227,15,ls),
(227,0,o),
(213,0,qs),
(165,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,521,qs),
(433,470,o),
(449,378,qs),
(513,10,ls),
(515,0,o),
(505,0,qs),
(449,0,ls),
(438,0,o),
(436,10,qs),
(405,193,l),
(312,193,ls),
(244,193,o),
(189,237,qs),
(124,288,o),
(108,378,qs),
(94,456,o),
(133,508,qs),
(175,564,o),
(255,564,qs),
(322,564,o)
);
},
{
closed = 1;
nodes = (
(177,430,o),
(186,378,qs),
(195,329,o),
(259,264,o),
(299,264,qs),
(392,264,l),
(372,379,ls),
(364,430,o),
(301,493,o),
(259,493,qs),
(217,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 96 5 1 4 4 24 4 78 1 0 36 34 32 29 22 20 14 11 8 5 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1003,-1,l),
(775,-1,ls),
(722,-1,o),
(697,17,q),
(678,-1,o),
(626,-1,qs),
(434,-1,l),
(434,0,l),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(562,74,l),
(536,95,o),
(497,165,o),
(492,200,qs),
(484,267,o),
(516,316,qs),
(556,377,o),
(638,377,qs),
(705,377,o),
(758,337,qs),
(816,294,o),
(832,226,qs),
(842,184,o),
(820,99,o),
(793,74,q),
(990,74,l)
);
},
{
closed = 1;
nodes = (
(766,163,o),
(758,201,qs),
(750,247,o),
(687,306,o),
(646,306,qs),
(605,306,o),
(563,247,o),
(571,201,qs),
(576,163,o),
(643,93,o),
(686,82,q),
(723,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
37 1 3 1 1 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 7 5 2 1 1 3 95 4 1 3 3 24 3 78 0 0 49 47 0 41 0 41 34 87 38 38 38 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 973;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,59,qs),
(356,0,o),
(279,0,qs),
(6,0,l),
(-7,74,l),
(119,74,l),
(75,119,o),
(67,188,qs),
(58,266,o),
(91,318,qs),
(129,377,o),
(207,377,qs),
(277,377,o),
(332,331,qs),
(396,277,o),
(412,188,qs),
(425,111,o)
);
},
{
closed = 1;
nodes = (
(335,190,qs),
(326,238,o),
(256,306,o),
(215,306,qs),
(176,306,o),
(138,242,o),
(147,190,qs),
(156,141,o),
(222,74,o),
(263,74,qs),
(354,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 0 0 4 1 0 4 105 5 3 2 1 1 2 95 0 2 2 24 2 78 18 17 24 22 17 27 18 27 33 21 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,0,l),
(347,0,ls),
(295,0,o),
(269,18,q),
(251,0,o),
(198,0,qs),
(6,0,l),
(-7,74,l),
(135,74,l),
(109,95,o),
(69,165,o),
(65,201,qs),
(57,268,o),
(89,317,qs),
(128,377,o),
(210,377,qs),
(278,377,o),
(331,338,qs),
(388,295,o),
(405,226,qs),
(414,185,o),
(393,100,o),
(366,74,q),
(562,74,l)
);
},
{
closed = 1;
nodes = (
(338,163,o),
(331,201,qs),
(322,247,o),
(259,306,o),
(219,306,qs),
(178,306,o),
(135,247,o),
(143,201,qs),
(149,163,o),
(216,94,o),
(258,82,q),
(296,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 31 29 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,502,o),
(95,521,qs),
(92,540,o),
(112,566,o),
(130,566,qs),
(149,566,o),
(179,540,o),
(183,521,qs),
(187,502,o),
(165,476,o),
(147,476,qs),
(128,476,o)
);
},
{
closed = 1;
nodes = (
(224,502,o),
(221,521,qs),
(217,540,o),
(238,566,o),
(257,566,qs),
(276,566,o),
(305,540,o),
(309,521,qs),
(312,502,o),
(292,476,o),
(273,476,qs),
(254,476,o)
);
},
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
44 1 7 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
44 1 8 9 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 6 6 5 114 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 8 95 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 104 13 1 4 4 8 95 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 104 14 1 9 0 7 9 7 101 13 1 4 4 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
50 49 25 24 13 12 1 0 55 53 49 58 50 58 47 45 43 41 35 33 31 28 24 48 25 48 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,247,o),
(382,241,qs),
(383,236,o),
(380,232,qs),
(325,163,l),
(321,159,o),
(316,159,qs),
(310,159,o),
(306,163,qs),
(225,232,ls),
(220,236,o),
(220,242,qs),
(219,247,o),
(222,251,qs),
(278,318,ls),
(281,322,o),
(287,322,qs),
(292,322,o),
(297,318,qs),
(376,251,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,0,o),
(313,10,qs),
(229,488,ls),
(217,556,o),
(278,556,qs),
(285,556,ls),
(293,556,o),
(294,548,qs),
(389,10,ls),
(391,0,o),
(381,0,qs),
(325,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(262,0,o),
(260,10,qs),
(196,372,ls),
(164,556,o),
(330,556,qs),
(421,556,ls),
(428,556,o),
(429,548,qs),
(433,528,o),
(429,513,qs),
(422,486,o),
(380,486,qs),
(342,486,ls),
(295,486,o),
(261,433,o),
(271,376,qs),
(336,10,ls),
(338,0,o),
(327,0,qs),
(271,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 15 12 8 5 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,359,o),
(536,311,qs),
(504,256,o),
(426,256,qs),
(349,256,o),
(298,314,q),
(268,256,o),
(191,256,qs),
(144,256,o),
(105,277,q),
(153,10,ls),
(155,0,o),
(145,0,qs),
(88,0,ls),
(79,0,o),
(77,10,qs),
(-8,488,l),
(-17,556,o),
(41,556,qs),
(48,556,ls),
(56,556,o),
(57,548,qs),
(76,442,ls),
(96,331,o),
(178,331,qs),
(218,331,o),
(251,389,o),
(242,442,qs),
(233,492,ls),
(228,520,o),
(251,556,o),
(274,556,qs),
(280,556,ls),
(289,556,o),
(289,549,q),
(308,442,ls),
(328,331,o),
(410,331,qs),
(450,331,o),
(484,388,o),
(475,440,qs),
(466,489,ls),
(454,557,o),
(514,557,qs),
(521,557,ls),
(529,557,o),
(531,549,qs),
(550,439,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
12 1 1 0 41 37 2 6 1 2 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 51 37 51 36 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,317,qs),
(467,280,o),
(408,235,o),
(359,236,qs),
(293,236,o),
(238,266,q),
(283,14,ls),
(285,0,o),
(272,0,qs),
(223,0,ls),
(209,0,o),
(207,14,qs),
(124,488,ls),
(116,533,o),
(142,548,qs),
(156,556,o),
(172,556,qs),
(179,556,ls),
(187,556,o),
(188,548,qs),
(195,513,l),
(234,564,o),
(297,564,qs),
(338,564,o),
(405,522,o),
(412,491,qs),
(416,473,o),
(403,473,qs),
(401,473,o),
(395,475,qs),
(391,476,o),
(390,477,q),
(339,494,o),
(308,494,qs),
(267,494,o),
(212,434,o),
(216,394,qs),
(216,393,o),
(217,390,qs),
(218,387,o),
(218,386,qs),
(224,352,o),
(302,304,o),
(351,303,qs),
(393,302,o),
(436,324,q),
(437,324,o),
(438,325,q),
(450,330,o),
(455,331,q),
(467,331,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
29 1 1 3 44 1 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
29 1 1 4 44 1 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 35 36 40 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,147,qs),
(146,149,o),
(144,169,qs),
(134,260,o),
(120,382,qs),
(111,462,o),
(141,510,qs),
(175,564,o),
(251,564,qs),
(319,564,o),
(368,522,qs),
(424,474,o),
(447,382,qs),
(490,206,o),
(501,152,qs),
(502,148,o),
(502,147,qs),
(519,65,o),
(480,-10,o),
(422,-10,qs),
(380,-10,o),
(349,19,qs),
(347,21,o),
(345,19,qs),
(324,-10,o),
(282,-10,qs),
(169,-10,o)
);
},
{
closed = 1;
nodes = (
(321,107,q),
(322,121,o),
(329,121,qs),
(337,121,o),
(341,107,qs),
(356,63,o),
(391,63,qs),
(441,63,o),
(424,149,qs),
(414,204,o),
(372,376,qs),
(343,494,o),
(264,494,qs),
(185,494,o),
(197,376,qs),
(221,163,o),
(223,149,qs),
(237,63,o),
(285,63,qs),
(322,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
45 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 44 42 40 38 34 32 27 46 28 46 18 16 7 5 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,277,o),
(460,265,q),
(372,232,o),
(255,113,o),
(208,9,q),
(205,0,o),
(195,0,qs),
(137,0,ls),
(127,0,o),
(130,11,qs),
(162,140,o),
(265,234,q),
(212,249,o),
(152,338,o),
(152,399,qs),
(152,470,o),
(193,515,qs),
(238,564,o),
(314,564,qs),
(358,564,o),
(421,522,o),
(422,490,qs),
(423,473,o),
(411,473,qs),
(407,473,o),
(397,477,qs),
(354,494,o),
(324,493,qs),
(282,493,o),
(228,438,o),
(228,394,qs),
(228,352,o),
(282,290,o),
(326,282,q),
(402,331,o),
(483,351,q),
(494,355,o),
(498,343,qs),
(507,321,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 35 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(386,116,q),
(381,543,ls),
(381,556,o),
(390,556,qs),
(394,556,ls),
(421,556,o),
(457,515,o),
(457,485,qs),
(461,129,ls),
(463,-8,o),
(357,-8,qs),
(253,-8,o),
(205,129,qs),
(83,485,ls),
(73,515,o),
(95,556,o),
(122,556,qs),
(126,556,ls),
(136,556,o),
(140,543,qs),
(286,116,ls),
(305,66,o),
(345,66,qs),
(383,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,0,o),
(150,17,qs),
(147,427,ls),
(146,564,o),
(250,564,qs),
(356,564,o),
(403,427,qs),
(542,17,ls),
(547,0,o),
(533,0,qs),
(484,0,ls),
(471,0,o),
(466,15,qs),
(323,441,l),
(303,491,o),
(263,491,qs),
(225,491,o),
(222,441,q),
(227,15,ls),
(227,0,o),
(213,0,qs),
(165,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(373,521,qs),
(433,470,o),
(449,378,qs),
(513,10,ls),
(515,0,o),
(505,0,qs),
(449,0,ls),
(438,0,o),
(436,10,qs),
(405,193,l),
(312,193,ls),
(244,193,o),
(189,237,qs),
(124,288,o),
(108,378,qs),
(94,456,o),
(133,508,qs),
(175,564,o),
(255,564,qs),
(322,564,o)
);
},
{
closed = 1;
nodes = (
(177,430,o),
(186,378,qs),
(195,329,o),
(259,264,o),
(299,264,qs),
(392,264,l),
(372,379,ls),
(364,430,o),
(301,493,o),
(259,493,qs),
(217,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(295,314,o),
(278,307,qs),
(275,306,o),
(272,305,q),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls),
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 111 values pushed */
33 1 0 1 1 76 0 9 0 6 0 9 6 128 0 3 0 2 1 3 2 105 5 1 1 0 0 9 1 0 103 13 1 11 14 1 12 15 11 12 105 0 8 0 10 16 8 10 105 18 1 15 0 16 15 16 101 0 6 6 4 96 7 17 2 4 4 24 4 78 110 109 38 37 116 114 109 120 110 120 107 105 101 99 95 93 89 87 81 79 71 69 61 59 58 56 52 49 46 43 37 84 38 84 40 35 51 53 19 7 26 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls),
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
0 1 5 1 133 0 5 2 5 133 9 1 7 10 1 8 11 7 8 105 0 4 0 6 12 4 6 105 14 1 11 0 12 11 12 101 0 2 2 0 96 3 13 2 0 0 24 0 78 73 72 1 0 79 77 72 83 73 83 70 68 64 62 58 56 52 50 44 42 34 32 24 22 21 19 15 12 9 6 0 47 1 47 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls),
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
0 1 5 1 133 0 5 2 5 133 9 1 7 10 1 8 11 7 8 105 0 4 0 6 12 4 6 105 18 1 11 0 12 13 11 12 105 20 15 19 3 13 16 1 14 13 14 101 0 2 2 0 96 3 17 2 0 0 24 0 78 97 96 85 84 73 72 1 0 103 101 96 107 97 107 91 89 84 95 85 95 79 77 72 83 73 83 70 68 64 62 58 56 52 50 44 42 34 32 24 22 21 19 15 12 9 6 0 47 1 47 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
49 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 96 8 7 2 3 3 24 3 78 79 78 67 66 1 0 85 83 78 89 79 89 73 71 66 77 67 77 64 62 58 56 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
49 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 21 1 13 0 14 15 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 96 8 7 2 3 3 24 3 78 103 102 91 90 79 78 67 66 1 0 109 107 102 113 103 113 97 95 90 101 91 101 85 83 78 89 79 89 73 71 66 77 67 77 64 62 58 56 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(857,20,qs),
(839,-4,o),
(829,-19,qs),
(809,-46,o),
(807,-70,q),
(848,-78,o),
(855,-119,qs),
(858,-140,o),
(835,-169,o),
(815,-169,qs),
(794,-169,o),
(761,-141,o),
(756,-119,qs),
(745,-62,o),
(788,1,q),
(776,0,o),
(768,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(767,74,ls),
(837,74,o),
(820,169,qs),
(798,291,ls),
(786,358,o),
(846,358,qs),
(854,358,ls),
(861,358,o),
(863,350,qs),
(897,168,ls),
(914,76,o),
(865,32,q),
(863,28,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
33 1 0 1 85 1 6 5 95 1 7 6 3 76 0 8 0 5 0 8 5 128 0 11 7 9 7 11 9 128 0 3 0 2 1 3 2 105 4 1 1 0 0 8 1 0 103 0 7 0 9 7 9 101 0 5 5 6 96 10 1 6 6 24 6 78 91 89 84 82 79 77 40 33 36 51 60 40 35 51 53 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(857,20,qs),
(839,-4,o),
(829,-19,qs),
(809,-46,o),
(807,-70,q),
(848,-78,o),
(855,-119,qs),
(858,-140,o),
(835,-169,o),
(815,-169,qs),
(794,-169,o),
(761,-141,o),
(756,-119,qs),
(745,-62,o),
(788,1,q),
(776,0,o),
(768,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(767,74,ls),
(837,74,o),
(820,169,qs),
(798,291,ls),
(786,358,o),
(846,358,qs),
(854,358,ls),
(861,358,o),
(863,350,qs),
(897,168,ls),
(914,76,o),
(865,32,q),
(863,28,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
48 1 2 1 58 1 3 2 2 76 0 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 3 5 101 0 1 1 2 96 6 1 2 2 24 2 78 37 35 40 40 33 36 51 52 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(857,20,qs),
(839,-4,o),
(829,-19,qs),
(809,-46,o),
(807,-70,q),
(848,-78,o),
(855,-119,qs),
(858,-139,o),
(835,-169,o),
(815,-169,qs),
(794,-169,o),
(761,-141,o),
(756,-119,qs),
(745,-62,o),
(788,1,q),
(774,0,o),
(768,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(767,74,ls),
(837,74,o),
(820,169,qs),
(798,291,ls),
(786,358,o),
(846,358,qs),
(854,358,ls),
(861,358,o),
(863,350,qs),
(897,168,ls),
(914,76,o),
(865,32,q),
(863,28,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
58 1 3 2 1 76 0 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 8 3 5 105 13 10 12 3 8 11 1 9 8 9 101 0 1 1 2 96 6 1 2 2 24 2 78 77 76 65 64 83 81 76 87 77 87 71 69 64 75 65 75 36 51 40 40 33 36 51 52 14 7 30 
CALL[ ]	/* CallFunction */";
};
width = 938;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls),
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
0 1 5 1 133 0 5 2 5 133 9 1 7 10 1 8 6 7 8 105 0 4 0 6 4 6 101 0 2 2 0 96 3 11 2 0 0 24 0 78 1 0 70 68 64 62 58 56 52 50 44 42 34 32 24 22 21 19 15 12 9 6 0 47 1 47 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
49 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 67 66 1 0 73 71 66 77 67 77 64 62 58 56 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(904,94,o),
(875,50,qs),
(841,0,o),
(761,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(750,74,ls),
(788,74,o),
(822,124,o),
(814,169,qs),
(793,291,ls),
(781,358,o),
(841,358,qs),
(849,358,ls),
(857,358,o),
(859,350,qs),
(891,168,ls)
);
},
{
closed = 1;
nodes = (
(842,-97,o),
(846,-118,qs),
(850,-139,o),
(826,-168,o),
(806,-168,qs),
(785,-168,o),
(751,-139,o),
(748,-118,qs),
(744,-97,o),
(767,-68,o),
(788,-68,qs),
(809,-68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
33 1 0 1 1 76 0 8 0 5 0 8 5 128 0 3 0 2 1 3 2 105 4 1 1 0 0 8 1 0 103 13 1 11 0 12 9 11 12 105 0 7 0 9 7 9 101 0 5 5 6 96 10 1 6 6 24 6 78 87 86 93 91 86 97 87 97 82 80 77 75 40 33 36 52 57 40 35 51 53 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
33 1 0 1 1 76 0 8 0 5 0 8 5 128 0 3 0 2 1 3 2 105 4 1 1 0 0 8 1 0 103 13 15 2 11 14 1 12 9 11 12 105 0 7 0 9 7 9 101 0 5 5 6 96 10 1 6 6 24 6 78 86 85 107 105 101 99 92 90 85 96 86 96 81 79 76 74 40 33 36 51 57 40 35 51 53 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
33 1 0 1 86 1 7 4 2 76 0 9 0 4 0 9 4 128 0 3 0 2 1 3 2 105 5 1 1 0 0 9 1 0 103 19 15 18 3 13 16 1 14 10 13 14 105 0 8 0 10 8 10 101 6 17 2 4 4 7 96 12 11 2 7 7 24 7 78 104 103 92 91 38 37 110 108 103 114 104 114 98 96 91 102 92 102 89 87 85 83 80 78 70 68 60 58 57 55 51 48 45 42 37 90 38 90 40 35 51 53 20 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,634,q),
(44,632,o),
(42,629,qs),
(38,622,o),
(36,620,q),
(34,619,o),
(32,619,qs),
(28,619,o),
(24,623,q),
(16,634,o),
(14,647,qs),
(11,666,o),
(36,692,o),
(56,691,qs),
(66,690,o),
(75,687,qs),
(79,686,o),
(80,686,qs),
(83,686,o),
(84,688,q),
(84,689,l),
(112,748,o),
(165,748,qs),
(195,748,o),
(232,715,o),
(233,688,qs),
(235,658,o),
(199,620,o),
(169,620,qs),
(147,620,o),
(107,635,qs),
(74,647,o),
(63,647,qs),
(52,647,o)
);
},
{
closed = 1;
nodes = (
(191,691,qs),
(187,709,o),
(166,709,qs),
(142,709,o),
(125,673,q),
(148,663,o),
(167,663,qs),
(196,663,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
36 15 2 4 3 1 76 0 2 0 5 3 2 5 105 7 1 4 0 1 4 89 0 3 6 1 0 1 3 0 105 7 1 4 4 1 97 0 1 4 1 81 35 34 1 0 39 37 34 41 35 41 20 19 11 9 5 3 0 33 1 33 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,470,o),
(89,489,qs),
(86,508,o),
(107,534,o),
(126,534,qs),
(145,534,o),
(174,508,o),
(177,489,qs),
(179,470,o),
(158,444,o),
(139,444,qs),
(120,444,o)
);
},
{
closed = 1;
nodes = (
(217,470,o),
(215,489,qs),
(212,508,o),
(234,534,o),
(253,534,qs),
(271,534,o),
(300,508,o),
(303,489,qs),
(305,470,o),
(284,444,o),
(265,444,qs),
(246,444,o)
);
},
{
closed = 1;
nodes = (
(453,0,l),
(460,-81,o),
(444,-124,qs),
(415,-215,o),
(300,-214,qs),
(253,-214,o),
(176,-176,o),
(162,-147,qs),
(153,-126,o),
(174,-126,qs),
(179,-126,o),
(188,-128,qs),
(235,-143,o),
(283,-143,qs),
(344,-142,o),
(366,-106,qs),
(386,-74,o),
(377,0,q),
(292,0,ls),
(211,0,o),
(156,46,qs),
(95,96,o),
(81,182,qs),
(68,265,o),
(105,318,qs),
(145,376,o),
(224,377,qs),
(411,379,o),
(445,74,q),
(580,74,l),
(594,0,l)
);
},
{
closed = 1;
nodes = (
(367,80,o),
(365,93,qs),
(336,306,o),
(229,306,qs),
(188,306,o),
(149,239,o),
(159,184,qs),
(168,137,o),
(239,74,o),
(285,74,qs),
(366,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 8 6 7 6 8 7 128 3 1 1 14 2 13 3 0 5 1 0 105 0 5 0 12 4 5 12 105 0 7 0 9 7 9 101 15 11 2 4 4 6 95 10 1 6 6 24 6 78 56 55 13 12 1 0 62 60 55 65 56 65 54 53 50 48 45 43 41 39 36 34 28 26 25 24 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,601,o),
(112,601,qs),
(147,601,o),
(166,568,qs),
(194,521,l),
(205,568,ls),
(213,601,o),
(248,601,qs),
(262,601,o),
(259,589,qs),
(232,472,ls),
(229,461,o),
(218,461,qs),
(185,461,ls),
(173,461,o),
(167,472,qs),
(99,589,ls)
);
},
{
closed = 1;
nodes = (
(453,0,l),
(460,-81,o),
(444,-124,qs),
(415,-215,o),
(300,-214,qs),
(253,-214,o),
(176,-176,o),
(162,-147,qs),
(153,-126,o),
(174,-126,qs),
(179,-126,o),
(188,-128,qs),
(235,-143,o),
(283,-143,qs),
(344,-142,o),
(366,-106,qs),
(386,-74,o),
(377,0,q),
(292,0,ls),
(211,0,o),
(156,46,qs),
(95,96,o),
(81,182,qs),
(68,265,o),
(105,318,qs),
(145,376,o),
(224,377,qs),
(411,379,o),
(445,74,q),
(580,74,l),
(594,0,l)
);
},
{
closed = 1;
nodes = (
(367,80,o),
(365,93,qs),
(336,306,o),
(229,306,qs),
(188,306,o),
(149,239,o),
(159,184,qs),
(168,137,o),
(239,74,o),
(285,74,qs),
(366,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
11 1 0 1 1 76 0 7 5 6 5 7 6 128 2 1 1 0 0 4 1 0 105 0 4 0 11 3 4 11 105 0 6 0 8 6 8 101 12 10 2 3 3 5 95 9 1 5 5 24 5 78 49 48 55 53 48 58 49 58 47 46 35 34 35 38 33 18 36 35 49 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,584,o),
(708,584,qs),
(743,584,o),
(762,552,qs),
(790,504,l),
(801,552,ls),
(809,584,o),
(844,584,qs),
(858,584,o),
(855,573,qs),
(828,456,ls),
(825,444,o),
(814,444,qs),
(781,444,ls),
(770,444,o),
(763,456,qs),
(695,573,ls)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
11 1 0 1 1 76 0 3 0 7 0 3 7 128 0 7 4 0 7 4 126 2 1 1 0 0 3 1 0 105 0 4 9 1 5 10 4 5 103 0 6 11 8 6 89 12 14 2 10 13 1 11 8 10 11 105 0 6 6 8 97 0 8 6 8 81 66 65 87 85 81 79 72 70 65 76 66 76 61 59 40 40 33 36 51 51 36 35 49 15 6 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,584,o),
(690,584,qs),
(725,584,o),
(744,552,qs),
(772,504,l),
(783,552,ls),
(791,584,o),
(826,584,qs),
(840,584,o),
(837,573,qs),
(810,456,ls),
(807,444,o),
(796,444,qs),
(763,444,ls),
(751,444,o),
(745,456,qs),
(676,573,l)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
11 1 0 1 66 1 6 3 2 76 0 4 0 8 0 4 8 128 0 8 3 0 8 3 126 2 1 1 0 0 4 1 0 105 18 14 17 3 12 15 1 13 9 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 96 11 10 2 6 6 24 6 78 84 83 72 71 18 17 90 88 83 94 84 94 78 76 71 82 72 82 69 67 65 63 60 58 50 48 40 38 37 35 31 28 25 22 17 70 18 70 36 35 49 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,584,o),
(708,584,qs),
(743,584,o),
(762,552,qs),
(790,504,l),
(801,552,ls),
(809,584,o),
(844,584,qs),
(858,584,o),
(855,573,qs),
(828,456,ls),
(825,444,o),
(814,444,qs),
(781,444,ls),
(770,444,o),
(763,456,qs),
(695,573,ls)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(415,-369,o),
(396,-369,qs),
(377,-369,o),
(348,-343,o),
(344,-323,qs),
(341,-304,o),
(361,-279,o),
(380,-279,qs),
(399,-279,o),
(429,-304,o),
(432,-323,qs),
(436,-343,o)
);
},
{
closed = 1;
nodes = (
(554,-304,o),
(558,-323,qs),
(561,-343,o),
(541,-369,o),
(523,-369,qs),
(504,-369,o),
(474,-343,o),
(470,-323,qs),
(466,-304,o),
(487,-279,o),
(506,-279,qs),
(525,-279,o)
);
},
{
closed = 1;
nodes = (
(510,-400,o),
(514,-419,qs),
(517,-438,o),
(497,-464,o),
(478,-464,qs),
(459,-464,o),
(429,-438,o),
(426,-419,qs),
(422,-400,o),
(443,-374,o),
(462,-374,qs),
(480,-374,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 126 values pushed */
11 1 0 1 1 76 0 3 0 7 0 3 7 128 0 7 4 0 7 4 126 2 1 1 0 0 3 1 0 105 12 20 2 10 13 1 11 8 10 11 105 0 6 0 8 14 6 8 105 21 16 2 14 17 1 15 18 14 15 105 22 1 18 0 19 18 19 101 0 4 4 5 96 9 1 5 5 24 5 78 114 113 102 101 66 65 120 118 113 124 114 124 108 106 101 112 102 112 99 97 93 91 87 85 81 79 72 70 65 76 66 76 61 59 40 40 33 36 51 51 36 35 49 23 7 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670,584,o),
(690,584,qs),
(725,584,o),
(744,552,qs),
(772,504,l),
(783,552,ls),
(791,584,o),
(826,584,qs),
(840,584,o),
(837,573,qs),
(810,456,ls),
(807,444,o),
(796,444,qs),
(763,444,ls),
(751,444,o),
(745,456,qs),
(676,573,ls)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(415,-369,o),
(396,-369,qs),
(377,-369,o),
(348,-343,o),
(344,-323,qs),
(341,-304,o),
(361,-279,o),
(380,-279,qs),
(399,-279,o),
(429,-304,o),
(432,-323,qs),
(436,-343,o)
);
},
{
closed = 1;
nodes = (
(554,-304,o),
(558,-323,qs),
(561,-343,o),
(541,-369,o),
(523,-369,qs),
(504,-369,o),
(474,-343,o),
(470,-323,qs),
(466,-304,o),
(487,-279,o),
(506,-279,qs),
(525,-279,o)
);
},
{
closed = 1;
nodes = (
(510,-400,o),
(514,-419,qs),
(517,-438,o),
(497,-464,o),
(478,-464,qs),
(459,-464,o),
(429,-438,o),
(426,-419,qs),
(422,-400,o),
(443,-374,o),
(462,-374,qs),
(480,-374,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 152 values pushed */
11 1 0 1 66 1 6 3 2 76 0 4 0 8 0 4 8 128 0 8 3 0 8 3 126 2 1 1 0 0 4 1 0 105 24 14 23 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 96 11 10 2 6 6 24 6 78 120 119 108 107 84 83 72 71 18 17 126 124 119 130 120 130 114 112 107 118 108 118 105 103 99 97 90 88 83 94 84 94 78 76 71 82 72 82 69 67 65 63 60 58 50 48 40 38 37 35 31 28 25 22 17 70 18 70 36 35 49 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,584,o),
(708,584,qs),
(743,584,o),
(762,552,qs),
(790,504,l),
(801,552,ls),
(809,584,o),
(844,584,qs),
(858,584,o),
(855,573,qs),
(828,456,ls),
(825,444,o),
(814,444,qs),
(781,444,ls),
(770,444,o),
(763,456,qs),
(695,573,ls)
);
},
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
11 1 6 1 50 1 3 4 2 76 0 11 3 8 3 11 8 128 2 1 1 0 0 5 1 0 105 0 6 0 5 4 6 5 105 7 1 4 0 3 11 4 3 103 0 8 13 1 9 14 8 9 103 0 10 15 12 10 89 16 18 2 14 17 1 15 12 14 15 105 0 10 10 12 97 0 12 10 12 81 103 102 124 122 118 116 109 107 102 113 103 113 98 96 93 91 83 81 73 71 70 68 51 57 40 35 51 55 36 35 49 19 6 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,584,o),
(690,584,qs),
(725,584,o),
(744,552,qs),
(772,504,l),
(783,552,ls),
(791,584,o),
(826,584,qs),
(840,584,o),
(837,573,qs),
(810,456,ls),
(807,444,o),
(796,444,qs),
(763,444,ls),
(751,444,o),
(745,456,qs),
(676,573,l)
);
},
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 6 1 50 1 3 4 103 1 10 7 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 12 3 7 3 12 7 128 2 1 1 6 0 1 89 0 6 5 1 0 4 6 0 105 8 1 4 0 3 12 4 3 103 22 18 21 3 16 19 1 17 13 16 17 105 0 11 0 13 11 13 101 9 20 2 7 7 10 96 15 14 2 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 12 3 7 3 12 7 128 2 1 1 0 0 5 1 0 105 0 6 0 5 4 6 5 105 8 1 4 0 3 12 4 3 103 22 18 21 3 16 19 1 17 13 16 17 105 0 11 0 13 11 13 101 9 20 2 7 7 10 96 15 14 2 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 48 values pushed */
121 120 109 108 55 54 127 125 120 131 121 131 115 113 108 119 109 119 106 104 102 100 97 95 87 85 77 75 74 72 68 65 62 59 54 107 55 107 40 35 51 55 36 35 49 23 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,584,o),
(708,584,qs),
(743,584,o),
(762,552,qs),
(790,504,l),
(801,552,ls),
(809,584,o),
(844,584,qs),
(858,584,o),
(855,573,qs),
(828,456,ls),
(825,444,o),
(814,444,qs),
(781,444,ls),
(770,444,o),
(763,456,qs),
(695,573,ls)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 123 values pushed */
11 1 0 1 1 76 0 3 0 7 0 3 7 128 0 7 4 0 7 4 126 2 1 1 0 0 3 1 0 105 0 4 9 1 5 10 4 5 103 12 18 2 10 13 1 11 8 10 11 105 0 6 0 8 14 6 8 105 20 16 19 3 14 15 15 14 89 20 16 19 3 14 14 15 97 17 1 15 14 15 81 102 101 90 89 66 65 108 106 101 112 102 112 96 94 89 100 90 100 87 85 81 79 72 70 65 76 66 76 61 59 40 40 33 36 51 51 36 35 49 21 6 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(670,584,o),
(690,584,qs),
(725,584,o),
(744,552,qs),
(772,504,l),
(783,552,ls),
(791,584,o),
(826,584,qs),
(840,584,o),
(837,573,qs),
(810,456,ls),
(807,444,o),
(796,444,qs),
(763,444,ls),
(751,444,o),
(745,456,qs),
(676,573,ls)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 140 values pushed */
11 1 0 1 66 1 6 3 2 76 0 4 0 8 0 4 8 128 0 8 3 0 8 3 126 2 1 1 0 0 4 1 0 105 22 14 21 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 96 11 10 2 6 6 24 6 78 108 107 96 95 84 83 72 71 18 17 114 112 107 118 108 118 102 100 95 106 96 106 90 88 83 94 84 94 78 76 71 82 72 82 69 67 65 63 60 58 50 48 40 38 37 35 31 28 25 22 17 70 18 70 36 35 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,584,o),
(708,584,qs),
(743,584,o),
(762,552,qs),
(790,504,l),
(801,552,ls),
(809,584,o),
(844,584,qs),
(858,584,o),
(855,573,qs),
(828,456,ls),
(825,444,o),
(814,444,qs),
(781,444,ls),
(770,444,o),
(763,456,qs),
(695,573,ls)
);
},
{
closed = 1;
nodes = (
(239,453,o),
(259,453,qs),
(294,453,o),
(313,421,qs),
(341,374,l),
(352,421,ls),
(360,453,o),
(395,453,qs),
(409,453,o),
(406,442,qs),
(379,325,ls),
(376,314,o),
(365,314,qs),
(332,314,ls),
(320,314,o),
(314,325,qs),
(245,442,ls)
);
},
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
11 1 4 1 28 1 6 0 2 76 0 6 0 3 0 6 3 128 0 10 3 7 3 10 7 128 2 1 1 0 0 6 1 0 105 5 1 4 0 3 10 4 3 105 0 7 12 1 8 13 7 8 103 0 9 14 11 9 89 15 17 2 13 16 1 14 11 13 14 105 0 9 9 11 97 0 11 9 11 81 83 82 104 102 98 96 89 87 82 93 83 93 78 76 73 71 63 61 53 51 36 51 51 36 35 51 36 35 49 18 6 31 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,584,o),
(690,584,qs),
(725,584,o),
(744,552,qs),
(772,504,l),
(783,552,ls),
(791,584,o),
(826,584,qs),
(840,584,o),
(837,573,qs),
(810,456,ls),
(807,444,o),
(796,444,qs),
(763,444,ls),
(751,444,o),
(745,456,qs),
(676,573,l)
);
},
{
closed = 1;
nodes = (
(239,453,o),
(259,453,qs),
(294,453,o),
(313,421,qs),
(341,374,l),
(352,421,ls),
(360,453,o),
(395,453,qs),
(409,453,o),
(406,442,qs),
(379,325,ls),
(376,314,o),
(365,314,qs),
(332,314,ls),
(320,314,o),
(314,325,qs),
(245,442,ls)
);
},
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 129 values pushed */
11 1 4 1 28 1 7 0 83 1 9 6 3 76 0 7 0 3 0 7 3 128 0 11 3 6 3 11 6 128 2 1 1 0 0 7 1 0 105 5 1 4 0 3 11 4 3 105 21 17 20 3 15 18 1 16 12 15 16 105 0 10 0 12 10 12 102 8 19 2 6 6 9 96 14 13 2 9 9 24 9 78 101 100 89 88 35 34 107 105 100 111 101 111 95 93 88 99 89 99 86 84 82 80 77 75 67 65 57 55 54 52 48 45 42 39 34 87 35 87 36 35 51 36 35 49 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,453,o),
(259,453,qs),
(294,453,o),
(313,421,qs),
(341,374,l),
(352,421,ls),
(360,453,o),
(395,453,qs),
(409,453,o),
(406,442,qs),
(379,325,ls),
(376,314,o),
(365,314,qs),
(332,314,ls),
(320,314,o),
(314,325,qs),
(245,442,ls)
);
},
{
closed = 1;
nodes = (
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(690,74,l),
(703,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
11 1 0 1 1 76 0 6 0 3 0 6 3 128 2 1 1 0 0 6 1 0 105 0 5 0 7 5 7 102 0 3 3 4 95 8 1 4 4 24 4 78 19 40 40 33 36 34 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,444,o),
(41,456,qs),
(-28,573,l),
(-33,584,o),
(-14,584,qs),
(21,584,o),
(40,552,qs),
(68,504,l),
(79,552,ls),
(87,584,o),
(122,584,qs),
(136,584,o),
(133,573,qs),
(106,456,ls),
(103,444,o),
(92,444,qs),
(59,444,ls)
);
},
{
closed = 1;
nodes = (
(178,94,o),
(149,50,qs),
(115,0,o),
(36,0,qs),
(10,0,l),
(-3,74,l),
(35,74,ls),
(105,74,o),
(89,169,qs),
(67,291,ls),
(55,358,o),
(116,358,qs),
(124,358,ls),
(131,358,o),
(133,350,qs),
(165,168,ls)
);
},
{
closed = 1;
nodes = (
(105,-100,o),
(109,-119,qs),
(112,-139,o),
(91,-165,o),
(72,-165,qs),
(54,-165,o),
(25,-139,o),
(21,-119,qs),
(18,-101,o),
(38,-75,o),
(56,-75,qs),
(75,-75,o)
);
},
{
closed = 1;
nodes = (
(218,-165,o),
(199,-165,qs),
(180,-165,o),
(150,-139,o),
(147,-119,qs),
(143,-101,o),
(164,-75,o),
(183,-75,qs),
(201,-75,o),
(231,-100,o),
(235,-119,qs),
(238,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
8 1 0 1 1 76 0 3 0 4 0 3 4 128 2 1 1 10 1 0 3 1 0 105 8 11 2 6 9 1 7 6 7 101 0 4 4 5 98 0 5 5 24 5 78 34 33 1 0 55 53 49 47 40 38 33 44 34 44 29 27 26 24 21 18 12 10 6 4 0 16 1 15 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,444,o),
(41,456,qs),
(-28,573,l),
(-33,584,o),
(-14,584,qs),
(21,584,o),
(40,552,qs),
(68,504,l),
(79,552,ls),
(87,584,o),
(122,584,qs),
(136,584,o),
(133,573,qs),
(106,456,ls),
(103,444,o),
(92,444,qs),
(59,444,ls)
);
},
{
closed = 1;
nodes = (
(336,0,l),
(276,0,ls),
(192,-1,o),
(146,46,q),
(112,0,o),
(36,0,qs),
(10,0,l),
(-3,74,l),
(35,74,ls),
(105,74,o),
(89,169,qs),
(67,291,ls),
(55,358,o),
(116,358,qs),
(124,358,ls),
(131,358,o),
(133,350,qs),
(165,168,ls),
(173,124,o),
(225,74,o),
(262,74,qs),
(324,74,l)
);
},
{
closed = 1;
nodes = (
(124,-100,o),
(127,-119,qs),
(131,-139,o),
(110,-165,o),
(91,-165,qs),
(72,-165,o),
(43,-139,o),
(40,-119,qs),
(36,-101,o),
(56,-75,o),
(75,-75,qs),
(94,-75,o)
);
},
{
closed = 1;
nodes = (
(249,-100,o),
(253,-119,qs),
(256,-139,o),
(236,-165,o),
(217,-165,qs),
(199,-165,o),
(169,-139,o),
(165,-119,qs),
(162,-101,o),
(182,-75,o),
(201,-75,qs),
(220,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
8 1 0 1 34 1 6 3 2 76 0 4 0 3 0 4 3 128 2 1 1 12 1 0 4 1 0 105 15 10 14 3 8 11 1 9 8 9 101 5 13 2 3 3 6 98 7 1 6 6 24 6 78 52 51 40 39 18 17 1 0 58 56 51 62 52 62 46 44 39 50 40 50 37 35 33 31 30 28 25 22 17 38 18 38 12 10 6 4 0 16 1 15 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,773,qs),
(556,792,o),
(570,802,qs),
(574,805,o),
(578,807,qs),
(585,809,o),
(590,803,qs),
(602,791,o),
(612,761,qs),
(629,698,o),
(612,673,qs),
(607,666,o),
(602,666,qs),
(596,666,o),
(593,681,qs),
(584,719,o),
(565,756,qs),
(561,763,o)
);
},
{
closed = 1;
nodes = (
(480,631,o),
(516,631,qs),
(523,631,ls),
(529,631,o),
(530,624,qs),
(539,572,ls),
(546,534,o),
(576,534,qs),
(603,534,o),
(598,572,qs),
(596,583,ls),
(589,631,o),
(624,631,qs),
(630,631,ls),
(637,631,o),
(638,624,qs),
(647,572,ls),
(654,534,o),
(683,534,qs),
(711,534,o),
(706,572,qs),
(704,583,ls),
(697,631,o),
(732,631,qs),
(739,631,ls),
(746,631,o),
(747,624,qs),
(755,577,ls),
(762,538,o),
(727,490,o),
(692,490,qs),
(657,490,o),
(634,511,q),
(617,490,o),
(584,490,qs),
(509,490,o),
(489,577,qs),
(488,583,ls)
);
},
{
closed = 1;
nodes = (
(1055,94,o),
(1026,50,qs),
(992,0,o),
(913,0,qs),
(843,0,ls),
(760,-1,o),
(714,46,q),
(680,0,o),
(603,0,qs),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(603,74,ls),
(673,74,o),
(656,169,qs),
(622,363,ls),
(610,431,o),
(670,431,qs),
(677,431,ls),
(686,431,o),
(687,423,qs),
(733,168,ls),
(741,124,o),
(792,74,o),
(830,74,qs),
(912,74,ls),
(982,74,o),
(965,169,qs),
(932,363,ls),
(920,431,o),
(980,431,qs),
(987,431,ls),
(996,431,o),
(997,423,qs),
(1042,168,ls)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
22 1 1 4 103 98 2 14 9 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
22 1 1 4 103 98 2 15 17 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 0 3 0 133 7 5 2 3 4 4 3 112 12 10 2 8 1 13 13 8 114 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 19 17 11 3 9 9 14 96 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 13 8 114 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 19 17 11 3 9 9 14 96 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 19 17 11 3 9 9 14 96 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 11 1 9 9 15 96 0 15 15 24 77 19 1 17 17 14 97 16 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 11 1 9 9 15 96 16 1 15 15 24 77 19 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 19 1 17 0 14 17 14 101 11 1 9 9 15 96 16 1 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
112 111 117 115 111 120 112 120 107 104 102 99 97 95 89 87 85 82 79 76 73 70 66 63 51 51 35 51 35 52 34 46 35 20 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1084;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o),
(828,-100,o),
(831,-119,qs),
(835,-139,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(909,-196,o),
(913,-215,qs),
(916,-234,o),
(896,-261,o),
(878,-261,qs),
(859,-261,o),
(829,-234,o),
(825,-215,qs),
(822,-196,o),
(842,-171,o),
(861,-171,qs),
(880,-171,o)
);
},
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 130 values pushed */
123 1 15 1 49 1 3 0 2 76 0 5 15 0 15 5 0 128 0 18 0 17 1 18 17 105 16 1 1 0 15 5 1 15 103 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 21 1 13 0 14 13 14 101 2 19 2 0 0 3 96 8 7 2 3 3 24 3 78 79 78 67 66 1 0 119 117 109 107 104 101 98 95 85 83 78 89 79 89 73 71 66 77 67 77 64 62 58 56 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
20 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
20 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 2 1 112 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 7 1 0 0 4 95 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 1 5 0 3 5 3 101 7 1 0 0 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 31 29 25 34 26 34 23 21 19 17 11 9 7 4 0 24 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = quotedbl.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-24,556,o),
(-15,556,qs),
(-3,556,ls),
(30,556,o),
(60,525,o),
(64,488,qs),
(75,379,l),
(75,371,o),
(68,371,qs),
(33,371,ls),
(27,371,o),
(24,379,q),
(-21,547,ls)
);
},
{
closed = 1;
nodes = (
(98,556,o),
(108,556,qs),
(120,556,ls),
(153,556,o),
(182,525,o),
(186,488,qs),
(197,379,ls),
(198,371,o),
(190,371,qs),
(155,371,ls),
(149,371,o),
(146,379,q),
(101,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
5 1 0 1 1 76 2 1 0 0 1 97 3 1 1 1 23 0 78 52 51 52 49 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = quotedbl.arabic;
unicode = 57856;
},
{
glyphname = numbersign.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,151,o),
(82,159,qs),
(70,198,ls),
(68,207,o),
(78,207,qs),
(146,207,l),
(108,347,l),
(40,347,ls),
(32,347,o),
(29,356,qs),
(18,394,ls),
(15,403,o),
(24,403,qs),
(93,403,l),
(53,547,ls),
(50,556,o),
(57,556,qs),
(74,556,ls),
(123,556,o),
(137,502,qs),
(164,403,l),
(308,403,l),
(268,547,ls),
(266,556,o),
(273,556,qs),
(289,556,ls),
(338,556,o),
(353,502,qs),
(380,403,l),
(447,403,ls),
(456,403,o),
(458,394,qs),
(469,356,ls),
(472,347,o),
(463,347,qs),
(395,347,l),
(433,207,l),
(501,207,ls),
(509,207,o),
(512,198,qs),
(523,159,ls),
(525,151,o),
(517,151,qs),
(448,151,l),
(487,9,ls),
(490,0,o),
(484,0,qs),
(427,0,ls),
(417,0,o),
(415,9,qs),
(376,151,l),
(233,151,l),
(272,9,ls),
(274,0,o),
(268,0,qs),
(211,0,ls),
(202,0,o),
(200,9,qs),
(160,151,l),
(93,151,ls)
);
},
{
closed = 1;
nodes = (
(323,347,l),
(180,347,l),
(218,207,l),
(361,207,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
10 8 2 6 14 11 2 5 4 6 5 104 17 15 12 3 4 16 13 3 3 1 0 4 1 103 9 1 7 7 23 77 2 1 0 0 24 0 78 60 60 0 0 60 63 60 63 62 61 0 59 0 58 55 53 52 50 47 45 43 40 18 50 35 33 35 35 34 19 34 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 548;
}
);
note = numbersign.arabic;
unicode = 57857;
},
{
glyphname = dollar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,283,o),
(8,365,o),
(8,429,qs),
(8,545,o),
(150,566,q),
(141,612,ls),
(140,621,o),
(149,621,qs),
(180,621,ls),
(187,621,o),
(189,612,qs),
(198,566,l),
(261,561,o),
(311,539,qs),
(364,518,o),
(360,479,qs),
(358,461,ls),
(356,451,o),
(351,451,qs),
(348,451,o),
(341,454,qs),
(338,455,o),
(336,456,qs),
(273,491,o),
(210,497,q),
(242,313,l),
(348,283,o),
(436,201,o),
(436,131,qs),
(436,74,o),
(362,-1,o),
(299,-8,q),
(307,-56,ls),
(309,-64,o),
(300,-64,qs),
(269,-64,ls),
(261,-64,o),
(260,-56,qs),
(252,-11,l),
(171,-9,o),
(110,32,qs),
(45,76,o),
(45,127,qs),
(45,141,o),
(55,141,qs),
(61,141,o),
(69,133,qs),
(146,60,o),
(240,57,q),
(206,248,l)
);
},
{
closed = 1;
nodes = (
(364,71,o),
(364,134,qs),
(364,172,o),
(315,219,o),
(256,237,q),
(286,59,l)
);
},
{
closed = 1;
nodes = (
(82,495,o),
(82,431,qs),
(82,359,o),
(193,325,q),
(162,499,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 6 5 55 1 0 1 17 1 2 0 3 76 24 1 6 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 6 1 6 4 1 128 0 1 0 6 1 0 126 0 3 2 3 134 0 5 0 6 4 5 6 105 0 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 6 1 6 4 1 128 0 1 0 6 1 0 126 0 3 2 3 134 0 5 0 6 4 5 6 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
60 59 56 46 50 20 34 16 7 7 28 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = dollar.arabic;
unicode = 57858;
},
{
glyphname = percent.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,349,qs),
(223,422,o),
(166,513,o),
(120,513,qs),
(61,513,o),
(61,433,qs),
(61,363,o),
(117,276,o),
(164,276,qs),
(223,276,o)
);
},
{
closed = 1;
nodes = (
(233,9,qs),
(433,547,ls),
(437,556,o),
(443,556,qs),
(450,556,ls),
(474,556,o),
(494,522,o),
(484,496,qs),
(301,9,ls),
(298,0,o),
(291,0,qs),
(238,0,ls),
(229,0,o)
);
},
{
closed = 1;
nodes = (
(54,278,qs),
(0,340,o),
(0,437,qs),
(0,495,o),
(65,567,o),
(117,567,qs),
(183,567,o),
(230,512,qs),
(284,449,o),
(284,355,qs),
(284,293,o),
(222,223,o),
(166,223,qs),
(101,223,o)
);
},
{
closed = 1;
nodes = (
(676,117,qs),
(676,191,o),
(619,281,o),
(573,281,qs),
(514,281,o),
(514,202,qs),
(514,131,o),
(571,45,o),
(617,45,qs),
(676,45,o)
);
},
{
closed = 1;
nodes = (
(507,46,qs),
(453,109,o),
(453,206,qs),
(453,264,o),
(518,335,o),
(571,335,qs),
(636,335,o),
(683,280,qs),
(737,218,o),
(737,123,qs),
(737,61,o),
(675,-9,o),
(619,-9,qs),
(554,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 9 0 7 0 9 7 105 10 1 0 12 1 4 6 0 4 105 0 1 1 3 97 5 1 3 3 23 77 13 1 6 6 2 97 14 8 11 3 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 0 7 0 9 7 105 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 13 1 6 6 2 97 14 8 11 3 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 9 0 7 0 9 7 105 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 11 1 2 2 24 77 13 1 6 6 8 97 14 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 0 1 9 5 1 105 0 9 0 7 0 9 7 105 10 1 0 12 1 4 6 0 4 105 0 3 3 23 77 11 1 2 2 24 77 13 1 6 6 8 97 14 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 0 1 9 5 1 105 0 9 0 7 0 9 7 105 10 1 0 12 1 4 6 0 4 105 13 1 6 14 1 8 6 8 101 0 3 3 23 77 11 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
48 47 38 37 24 23 12 10 1 0 55 53 47 60 48 60 43 41 37 46 38 46 31 29 23 36 24 36 18 16 10 22 12 22 6 4 0 9 1 9 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = percent.arabic;
unicode = 57859;
},
{
glyphname = ampersand.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,279,ls),
(421,290,o),
(434,290,qs),
(485,290,ls),
(494,290,o),
(492,281,q),
(420,133,l),
(545,10,ls),
(548,7,o),
(547,0,o),
(543,0,qs),
(494,0,ls),
(463,0,o),
(440,22,qs),
(390,72,l),
(336,-7,o),
(232,-7,qs),
(155,-7,o),
(104,37,qs),
(46,87,o),
(46,168,qs),
(46,251,o),
(149,306,q),
(93,355,o),
(54,413,o),
(54,450,qs),
(54,496,o),
(88,528,qs),
(127,567,o),
(194,567,qs),
(268,567,o),
(357,497,o),
(357,440,qs),
(357,401,o),
(300,322,o),
(252,293,q),
(371,180,l)
);
},
{
closed = 1;
nodes = (
(285,440,qs),
(285,469,o),
(239,506,o),
(203,506,qs),
(171,506,o),
(132,474,o),
(132,447,qs),
(132,421,o),
(162,377,o),
(207,339,q),
(285,383,o)
);
},
{
closed = 1;
nodes = (
(122,221,o),
(122,162,qs),
(122,114,o),
(181,57,o),
(232,57,qs),
(310,57,o),
(343,118,q),
(198,258,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
13 1 3 4 55 36 29 21 4 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 23 77 0 3 3 1 97 2 1 1 1 24 77 0 5 5 1 97 2 1 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 23 77 0 3 3 2 97 0 2 2 24 77 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 97 0 2 2 24 77 0 5 5 1 97 0 1 1 24 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
37 40 54 35 43 37 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 532;
}
);
note = ampersand.arabic;
unicode = 57860;
},
{
glyphname = quotesingle.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-24,556,o),
(-15,556,qs),
(-3,556,ls),
(30,556,o),
(60,525,o),
(64,488,qs),
(75,379,l),
(75,371,o),
(68,371,qs),
(33,371,ls),
(27,371,o),
(24,379,q),
(-21,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
5 1 0 1 1 76 0 0 0 1 97 0 1 1 23 0 78 52 49 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 133;
}
);
note = quotesingle.arabic;
unicode = 57861;
},
{
glyphname = parenleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,545,qs),
(134,659,o),
(220,697,q),
(229,700,o),
(231,691,qs),
(232,680,o),
(233,671,qs),
(236,637,o),
(219,619,qs),
(216,616,o),
(215,614,q),
(117,497,o),
(154,277,qs),
(191,59,o),
(334,-61,qs),
(361,-83,o),
(372,-118,qs),
(376,-131,o),
(377,-138,qs),
(378,-147,o),
(369,-144,qs),
(270,-111,o),
(199,-19,qs),
(114,93,o),
(83,277,qs),
(56,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
21 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 394;
}
);
note = parenleft.arabic;
unicode = 57862;
},
{
glyphname = parenright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(277,7,qs),
(237,-106,o),
(151,-144,qs),
(142,-148,o),
(141,-138,q),
(140,-137,l),
(139,-124,o),
(138,-118,qs),
(135,-85,o),
(150,-68,qs),
(156,-62,o),
(156,-61,q),
(258,59,o),
(217,277,qs),
(181,490,o),
(34,612,qs),
(17,627,o),
(6,647,o),
(1,671,qs),
(0,674,o),
(-1,679,qs),
(-3,688,o),
(-3,691,q),
(-5,700,o),
(5,697,qs),
(103,660,o),
(171,570,qs),
(257,458,o),
(288,277,qs),
(316,122,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
25 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = parenright.arabic;
unicode = 57863;
},
{
glyphname = asterisk.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,403,o),
(8,413,qs),
(16,463,ls),
(18,471,o),
(25,468,qs),
(120,431,l),
(96,531,l),
(95,539,o),
(103,539,qs),
(160,539,ls),
(169,539,o),
(170,531,qs),
(180,431,l),
(263,468,ls),
(271,471,o),
(275,463,qs),
(298,417,ls),
(303,407,o),
(295,406,q),
(202,379,l),
(282,300,ls),
(289,294,o),
(282,289,qs),
(244,261,l),
(237,257,o),
(233,262,qs),
(164,348,l),
(126,257,l),
(124,250,o),
(115,256,qs),
(66,283,l),
(59,288,o),
(63,294,qs),
(113,377,l),
(15,402,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 366;
}
);
note = asterisk.arabic;
unicode = 57864;
},
{
glyphname = plus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,238,o),
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(168,304,l),
(168,441,ls),
(168,450,o),
(176,450,qs),
(235,450,o),
(235,389,qs),
(235,304,l),
(358,304,ls),
(366,304,o),
(366,295,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(235,238,l),
(235,101,ls),
(235,92,o),
(227,92,qs),
(176,92,ls),
(168,92,o),
(168,101,qs),
(168,238,l),
(45,238,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 97 0 0 3 0 81 0 0 0 26 0 25 34 34 35 34 50 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plus.arabic;
unicode = 57865;
},
{
glyphname = hyphen.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,168,qs),
(58,168,ls),
(51,168,o),
(49,177,qs),
(39,229,ls),
(37,238,o),
(46,238,qs),
(258,238,ls),
(265,238,o),
(267,229,qs),
(277,177,ls),
(278,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 51 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = hyphen.arabic;
unicode = 57866;
},
{
glyphname = period.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,21,o),
(100,44,qs),
(95,66,o),
(122,99,o),
(144,99,qs),
(166,99,o),
(203,67,o),
(207,44,qs),
(211,21,o),
(185,-11,o),
(163,-11,qs),
(141,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 1 1 0 97 2 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = period.arabic;
unicode = 57867;
},
{
glyphname = slash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,9,qs),
(135,547,ls),
(138,556,o),
(146,556,qs),
(150,556,ls),
(174,556,o),
(196,520,o),
(190,493,qs),
(70,9,ls),
(68,0,o),
(60,0,qs),
(9,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 2 0 9 6 0 12 2 12 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 207;
}
);
note = slash.arabic;
unicode = 57868;
},
{
glyphname = zero.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,194,qs),
(378,321,o),
(337,403,qs),
(290,496,o),
(208,496,qs),
(106,496,o),
(106,365,qs),
(106,246,o),
(149,160,qs),
(200,59,o),
(280,59,qs),
(378,59,o)
);
},
{
closed = 1;
nodes = (
(111,81,qs),
(30,187,o),
(30,362,qs),
(30,452,o),
(71,506,qs),
(117,567,o),
(203,567,qs),
(308,567,o),
(376,478,qs),
(455,375,o),
(455,194,qs),
(455,106,o),
(417,52,qs),
(371,-11,o),
(285,-11,qs),
(181,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = zero.arabic;
unicode = 57869;
},
{
glyphname = one.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,449,ls),
(15,446,o),
(13,455,qs),
(2,510,ls),
(1,519,o),
(10,524,q),
(67,547,ls),
(90,556,o),
(113,556,qs),
(129,556,ls),
(178,556,o),
(188,501,qs),
(264,69,l),
(329,69,ls),
(373,69,o),
(380,26,q),
(384,11,l),
(385,0,o),
(375,0,qs),
(99,0,ls),
(91,0,o),
(89,9,qs),
(80,61,ls),
(79,69,o),
(88,69,qs),
(188,69,l),
(114,486,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 358;
}
);
note = one.arabic;
unicode = 57870;
},
{
glyphname = two.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,69,o),
(438,27,qs),
(441,11,ls),
(443,0,o),
(432,0,qs),
(90,0,ls),
(80,0,o),
(80,9,q),
(75,29,o),
(75,59,qs),
(75,126,o),
(113,177,qs),
(136,209,o),
(195,254,qs),
(254,301,o),
(293,356,o),
(293,393,qs),
(293,443,o),
(231,498,o),
(176,498,qs),
(105,498,o),
(43,454,q),
(38,449,o),
(32,449,qs),
(26,449,o),
(23,457,qs),
(13,477,ls),
(-6,515,o),
(38,537,qs),
(103,567,o),
(167,567,qs),
(254,567,o),
(307,529,qs),
(371,483,o),
(371,393,qs),
(371,332,o),
(332,281,qs),
(309,251,o),
(250,204,qs),
(192,159,o),
(155,104,o),
(158,69,q),
(386,69,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 60 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = two.arabic;
unicode = 57871;
},
{
glyphname = three.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,197,o),
(430,139,qs),
(430,79,o),
(395,41,qs),
(349,-10,o),
(254,-10,qs),
(177,-10,o),
(119,29,qs),
(58,71,o),
(58,122,qs),
(58,139,o),
(69,139,qs),
(76,139,o),
(85,129,qs),
(155,58,o),
(244,58,qs),
(353,58,o),
(353,144,qs),
(353,195,o),
(278,254,o),
(215,254,qs),
(158,254,ls),
(115,254,o),
(108,294,qs),
(105,311,ls),
(103,324,o),
(114,324,qs),
(201,324,ls),
(292,324,o),
(292,399,qs),
(292,499,o),
(171,499,qs),
(100,499,o),
(43,456,q),
(42,456,o),
(41,455,qs),
(34,450,o),
(31,450,qs),
(26,450,o),
(21,458,qs),
(11,478,ls),
(-7,516,o),
(37,538,qs),
(96,567,o),
(171,567,qs),
(254,567,o),
(306,527,qs),
(366,482,o),
(366,401,qs),
(366,324,o),
(295,293,q),
(355,283,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 51 50 36 37 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = three.arabic;
unicode = 57872;
},
{
glyphname = four.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,128,o),
(33,136,qs),
(26,177,ls),
(23,192,o),
(30,208,qs),
(190,537,ls),
(199,556,o),
(221,556,qs),
(250,556,ls),
(298,556,o),
(305,508,qs),
(360,197,l),
(397,197,ls),
(442,197,o),
(450,154,q),
(451,138,l),
(453,128,o),
(442,128,qs),
(372,128,l),
(393,9,ls),
(395,0,o),
(388,0,qs),
(329,0,ls),
(320,0,o),
(319,9,qs),
(297,128,l),
(42,128,ls)
);
},
{
closed = 1;
nodes = (
(236,481,l),
(98,197,l),
(286,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
28 1 2 3 11 10 2 1 2 2 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = four.arabic;
unicode = 57873;
},
{
glyphname = five.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,353,o),
(211,353,qs),
(302,353,o),
(359,303,qs),
(424,248,o),
(424,153,qs),
(424,84,o),
(380,40,qs),
(331,-10,o),
(245,-10,qs),
(171,-10,o),
(53,70,o),
(53,120,qs),
(53,137,o),
(65,137,qs),
(72,137,o),
(81,128,qs),
(150,58,o),
(233,58,qs),
(347,58,o),
(347,156,qs),
(347,215,o),
(313,249,qs),
(276,286,o),
(205,286,qs),
(137,286,o),
(67,259,qs),
(55,254,o),
(53,268,qs),
(4,547,ls),
(2,556,o),
(10,556,qs),
(276,556,ls),
(321,556,o),
(329,513,qs),
(332,497,ls),
(333,486,o),
(324,486,qs),
(86,486,l),
(112,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = five.arabic;
unicode = 57874;
},
{
glyphname = six.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,362,qs),
(319,362,o),
(373,312,qs),
(434,256,o),
(434,164,qs),
(434,96,o),
(391,48,qs),
(338,-10,o),
(247,-10,qs),
(163,-10,o),
(107,42,qs),
(43,101,o),
(43,197,qs),
(43,265,o),
(80,353,qs),
(168,557,ls),
(173,567,o),
(181,567,qs),
(208,567,o),
(228,513,o),
(213,479,qs),
(153,341,l),
(194,362,o)
);
},
{
closed = 1;
nodes = (
(359,117,o),
(359,164,qs),
(359,223,o),
(287,296,o),
(228,296,qs),
(176,296,o),
(119,240,o),
(119,190,qs),
(119,132,o),
(190,59,o),
(247,59,qs),
(297,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 34 24 34 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = six.arabic;
unicode = 57875;
},
{
glyphname = seven.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,486,o),
(-5,495,qs),
(-14,547,ls),
(-16,556,o),
(-8,556,qs),
(296,556,ls),
(342,556,o),
(350,513,qs),
(352,502,ls),
(356,480,o),
(349,456,qs),
(219,12,l),
(214,0,o),
(204,0,qs),
(148,0,ls),
(137,0,o),
(140,9,qs),
(281,486,l),
(5,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 428;
}
);
note = seven.arabic;
unicode = 57876;
},
{
glyphname = eight.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,89,qs),
(196,54,o),
(257,54,qs),
(365,54,o),
(365,139,qs),
(365,191,o),
(327,225,qs),
(287,261,o),
(224,261,qs),
(178,261,o),
(120,211,o),
(120,171,qs),
(120,121,o)
);
},
{
closed = 1;
nodes = (
(161,324,o),
(214,324,qs),
(256,324,o),
(305,364,o),
(305,399,qs),
(305,446,o),
(237,503,o),
(182,503,qs),
(139,503,o),
(87,459,o),
(87,423,qs),
(87,382,o)
);
},
{
closed = 1;
nodes = (
(16,431,qs),
(16,485,o),
(55,522,qs),
(101,567,o),
(182,567,qs),
(260,567,o),
(314,526,qs),
(377,479,o),
(377,404,qs),
(377,369,o),
(340,309,o),
(309,294,q),
(441,252,o),
(441,136,qs),
(441,77,o),
(402,38,qs),
(354,-11,o),
(260,-11,qs),
(174,-11,o),
(114,34,qs),
(45,87,o),
(45,171,qs),
(45,255,o),
(133,290,q),
(16,330,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = eight.arabic;
unicode = 57877;
},
{
glyphname = nine.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,194,qs),
(122,194,o),
(68,245,qs),
(6,302,o),
(6,392,qs),
(6,463,o),
(50,510,qs),
(101,567,o),
(188,567,qs),
(274,567,o),
(331,517,qs),
(397,460,o),
(397,362,qs),
(397,291,o),
(360,204,qs),
(272,1,ls),
(267,-10,o),
(258,-10,qs),
(231,-10,o),
(212,44,o),
(227,77,qs),
(286,214,l),
(255,194,o)
);
},
{
closed = 1;
nodes = (
(322,319,o),
(322,369,qs),
(322,420,o),
(290,456,qs),
(252,498,o),
(190,498,qs),
(141,498,o),
(82,440,o),
(82,392,qs),
(82,333,o),
(152,261,o),
(209,261,qs),
(261,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 35 24 35 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = nine.arabic;
unicode = 57878;
},
{
glyphname = colon.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,286,o),
(171,263,qs),
(175,241,o),
(149,208,o),
(127,208,qs),
(105,208,o),
(67,241,o),
(64,263,qs),
(59,286,o),
(86,319,o),
(108,319,qs),
(130,319,o)
);
},
{
closed = 1;
nodes = (
(206,67,o),
(210,44,qs),
(214,21,o),
(188,-11,o),
(166,-11,qs),
(144,-11,o),
(106,21,o),
(102,44,qs),
(98,66,o),
(125,99,o),
(147,99,qs),
(169,99,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 3 3 2 89 5 1 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = colon.arabic;
unicode = 57879;
},
{
glyphname = less.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,158,o),
(407,99,qs),
(407,94,ls),
(407,86,o),
(399,88,q),
(45,238,l),
(37,240,o),
(37,251,qs),
(37,290,ls),
(37,299,o),
(45,303,qs),
(397,451,ls),
(407,455,o),
(407,445,qs),
(407,396,ls),
(407,382,o),
(393,377,qs),
(133,271,l),
(354,180,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = less.arabic;
unicode = 57880;
},
{
glyphname = equal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(45,325,ls),
(37,325,o)
);
},
{
closed = 1;
nodes = (
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(45,148,ls),
(37,148,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 1 4 1 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 5 1 2 3 2 79 14 12 2 0 20 17 12 23 14 23 8 5 0 11 2 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = equal.arabic;
unicode = 57881;
},
{
glyphname = greater.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,383,o),
(44,396,qs),
(44,445,ls),
(44,456,o),
(54,451,qs),
(407,303,ls),
(415,299,o),
(415,290,qs),
(415,251,ls),
(415,240,o),
(407,238,q),
(53,88,ls),
(44,85,o),
(44,94,qs),
(44,99,ls),
(44,159,o),
(97,180,qs),
(319,271,l),
(58,377,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = greater.arabic;
unicode = 57882;
},
{
glyphname = at.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,158,o),
(480,209,qs),
(480,271,o),
(414,344,o),
(358,344,qs),
(316,344,o),
(269,284,o),
(269,231,qs),
(269,173,o),
(329,101,o),
(377,101,qs),
(425,101,o)
);
},
{
closed = 1;
nodes = (
(375,34,qs),
(306,34,o),
(254,84,qs),
(194,142,o),
(194,231,qs),
(194,300,o),
(232,351,qs),
(276,409,o),
(346,409,qs),
(431,409,o),
(470,352,q),
(472,403,o),
(520,403,qs),
(526,403,ls),
(534,403,o),
(534,393,q),
(554,154,ls),
(557,121,o),
(574,96,o),
(592,96,qs),
(656,96,o),
(656,211,qs),
(656,332,o),
(585,413,qs),
(503,507,o),
(363,507,qs),
(248,507,o),
(182,442,qs),
(110,372,o),
(110,246,qs),
(110,114,o),
(187,29,qs),
(276,-69,o),
(429,-69,qs),
(580,-69,o),
(654,-7,q),
(656,-6,o),
(657,-4,q),
(665,2,o),
(669,2,qs),
(678,2,o),
(678,-15,qs),
(678,-48,o),
(623,-83,qs),
(546,-131,o),
(429,-131,qs),
(268,-131,o),
(161,-36,qs),
(38,72,o),
(38,252,qs),
(38,377,o),
(112,464,qs),
(202,568,o),
(358,568,qs),
(506,568,o),
(606,482,qs),
(722,382,o),
(722,219,qs),
(722,144,o),
(692,95,qs),
(655,35,o),
(587,35,qs),
(554,35,o),
(503,72,o),
(495,103,q),
(463,34,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
66 61 2 1 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
10 1 9 0 1 0 9 1 105 8 12 2 0 11 1 2 5 0 2 105 0 6 0 4 6 4 102 0 7 7 3 97 0 3 3 23 77 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 10 1 10 9 1 128 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 105 0 6 0 4 6 4 102 0 7 7 3 97 0 3 3 23 77 0 5 5 25 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 9 10 1 10 9 1 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 105 0 6 0 4 6 4 102 0 5 5 25 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 9 10 1 10 9 1 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 12 1 0 8 2 0 89 0 8 11 1 2 5 8 2 105 0 6 0 4 6 4 102 0 5 5 25 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 77 75 69 67 65 62 58 56 52 50 44 42 37 36 32 30 24 22 16 14 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 766;
}
);
note = at.arabic;
unicode = 57883;
},
{
glyphname = bracketleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,-144,o),
(138,-110,o),
(133,-82,qs),
(7,633,ls),
(2,662,o),
(30,696,o),
(59,696,qs),
(166,696,ls),
(179,696,o),
(181,683,qs),
(182,678,ls),
(190,632,o),
(139,632,qs),
(93,632,ls),
(76,632,o),
(79,614,qs),
(198,-62,ls),
(201,-80,o),
(219,-80,qs),
(265,-80,ls),
(316,-80,o),
(324,-126,qs),
(325,-131,ls),
(327,-144,o),
(314,-144,qs),
(208,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 1 0 19 16 13 10 7 4 0 25 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = bracketleft.arabic;
unicode = 57884;
},
{
glyphname = backslash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-81,556,o),
(-72,556,qs),
(-57,556,ls),
(-28,556,o),
(8,532,o),
(27,502,qs),
(323,9,ls),
(328,0,o),
(319,0,qs),
(260,0,ls),
(251,0,o),
(245,9,qs),
(-76,547,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 23 77 0 0 0 24 0 78 52 49 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 254;
}
);
note = backslash.arabic;
unicode = 57885;
},
{
glyphname = bracketright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,-144,o),
(141,-131,q),
(139,-126,l),
(135,-105,o),
(158,-80,o),
(182,-80,qs),
(228,-80,ls),
(246,-80,o),
(243,-62,qs),
(123,614,ls),
(120,632,o),
(103,632,qs),
(57,632,ls),
(8,632,o),
(-2,678,qs),
(-3,683,ls),
(-6,696,o),
(8,696,qs),
(114,696,ls),
(143,696,o),
(185,662,o),
(189,633,qs),
(316,-82,ls),
(321,-110,o),
(292,-144,o),
(262,-144,qs),
(156,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 1 0 21 18 15 12 9 6 0 26 1 25 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = bracketright.arabic;
unicode = 57886;
},
{
glyphname = asciicircum.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(98,271,o),
(86,271,qs),
(36,271,ls),
(26,271,o),
(30,279,qs),
(171,544,l),
(176,556,o),
(190,556,qs),
(235,556,o),
(259,512,qs),
(384,279,ls),
(389,271,o),
(377,271,qs),
(327,271,ls),
(316,271,o),
(309,282,q),
(207,477,l),
(104,282,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 1 0 134 0 1 1 23 1 78 51 35 50 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 407;
}
);
note = asciicircum.arabic;
unicode = 57887;
},
{
glyphname = braceleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,-144,o),
(180,-110,o),
(175,-82,qs),
(126,196,ls),
(118,240,o),
(79,245,qs),
(67,247,o),
(65,258,qs),
(58,294,ls),
(56,306,o),
(68,307,qs),
(106,313,o),
(98,357,qs),
(50,633,ls),
(45,662,o),
(74,696,o),
(103,696,qs),
(209,696,ls),
(223,696,o),
(225,683,qs),
(225,678,l),
(231,632,o),
(182,632,qs),
(136,632,ls),
(120,632,o),
(122,614,q),
(169,352,ls),
(177,302,o),
(152,276,q),
(186,252,o),
(195,199,qs),
(241,-62,ls),
(244,-80,o),
(262,-80,qs),
(308,-80,ls),
(332,-80,o),
(365,-106,o),
(367,-126,qs),
(368,-131,ls),
(370,-144,o),
(357,-144,qs),
(251,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
12 1 1 2 1 76 0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 1 0 25 22 19 16 8 5 0 41 1 40 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 399;
}
);
note = braceleft.arabic;
unicode = 57888;
},
{
glyphname = bar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,-140,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
2 0 7 5 0 10 2 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = bar.arabic;
unicode = 57889;
},
{
glyphname = braceright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(143,-144,o),
(141,-131,q),
(139,-126,l),
(135,-105,o),
(158,-80,o),
(182,-80,qs),
(228,-80,ls),
(246,-80,o),
(243,-62,qs),
(197,199,ls),
(188,252,o),
(212,276,q),
(178,302,o),
(169,352,qs),
(123,614,ls),
(120,632,o),
(103,632,qs),
(57,632,ls),
(8,632,o),
(-2,678,qs),
(-3,683,ls),
(-6,696,o),
(8,696,qs),
(114,696,ls),
(143,696,o),
(185,662,o),
(189,633,qs),
(238,357,ls),
(246,313,o),
(286,307,qs),
(299,306,o),
(301,294,qs),
(307,258,ls),
(308,247,o),
(297,245,qs),
(259,240,o),
(267,196,qs),
(316,-82,ls),
(321,-110,o),
(292,-144,o),
(262,-144,qs),
(156,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
29 1 3 2 1 76 0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 95 4 1 0 3 0 79 1 0 36 33 25 22 19 16 0 41 1 40 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = braceright.arabic;
unicode = 57890;
},
{
glyphname = asciitilde.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,312,qs),
(355,271,ls),
(355,251,o),
(346,243,qs),
(315,216,o),
(271,216,qs),
(242,216,o),
(201,230,qs),
(151,248,o),
(129,248,qs),
(85,248,o),
(52,217,qs),
(49,214,o),
(43,216,o),
(43,219,qs),
(43,261,ls),
(43,280,o),
(52,288,qs),
(87,316,o),
(129,316,qs),
(156,316,o),
(197,301,qs),
(247,283,o),
(271,283,qs),
(313,283,o),
(347,315,q),
(355,321,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
11 1 3 2 1 76 0 0 2 3 0 89 0 1 0 2 3 1 2 105 0 0 0 3 97 0 3 0 3 81 34 40 34 33 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 398;
}
);
note = asciitilde.arabic;
unicode = 57891;
},
{
glyphname = cent.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,-68,o),
(286,-68,qs),
(252,-68,ls),
(242,-68,o),
(242,-59,q),
(233,-9,l),
(150,0,o),
(98,55,qs),
(40,116,o),
(40,209,qs),
(40,275,o),
(106,363,o),
(165,374,q),
(155,429,ls),
(153,438,o),
(162,438,qs),
(197,438,ls),
(205,438,o),
(207,429,qs),
(216,376,l),
(247,373,o),
(277,362,qs),
(317,347,o),
(315,307,qs),
(314,289,ls),
(314,282,o),
(308,282,qs),
(306,282,o),
(301,284,qs),
(263,303,o),
(228,307,q),
(272,57,l),
(317,60,o),
(344,92,q),
(344,93,o),
(345,94,qs),
(350,99,o),
(354,99,qs),
(368,99,o),
(368,74,qs),
(368,45,o),
(321,-1,o),
(283,-7,q),
(293,-59,ls)
);
},
{
closed = 1;
nodes = (
(116,290,o),
(116,209,qs),
(116,152,o),
(172,72,o),
(219,61,q),
(177,304,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
49 30 12 3 2 3 38 1 4 1 2 76 0 3 2 3 133 0 2 0 2 133 0 0 1 0 133 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 59 56 36 21 20 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 363;
}
);
note = cent.arabic;
unicode = 57892;
},
{
glyphname = sterling.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(462,69,o),
(470,26,qs),
(473,11,ls),
(475,0,o),
(465,0,qs),
(98,0,ls),
(90,0,o),
(88,9,qs),
(79,61,l),
(79,69,o),
(87,69,qs),
(170,69,l),
(182,109,o),
(182,151,qs),
(182,204,o),
(152,249,q),
(55,249,ls),
(47,249,o),
(45,258,qs),
(36,310,ls),
(34,319,o),
(42,319,qs),
(107,319,l),
(63,381,o),
(63,432,qs),
(63,489,o),
(98,525,qs),
(139,567,o),
(214,567,qs),
(282,567,o),
(338,539,qs),
(368,524,o),
(389,499,o),
(386,480,qs),
(382,459,ls),
(380,450,o),
(374,450,qs),
(368,450,o),
(359,456,qs),
(288,498,o),
(226,498,qs),
(139,498,o),
(139,427,qs),
(139,389,o),
(187,319,q),
(324,319,ls),
(369,319,o),
(377,276,qs),
(380,261,ls),
(381,249,o),
(371,249,qs),
(229,249,l),
(254,197,o),
(254,153,qs),
(254,119,o),
(242,69,q),
(418,69,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
47 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 23 77 10 9 2 7 7 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 56 0 55 51 36 35 37 38 34 35 35 36 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = sterling.arabic;
unicode = 57893;
},
{
glyphname = Euro.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,182,o),
(13,190,q),
(24,233,ls),
(27,242,o),
(33,242,qs),
(85,242,l),
(76,276,o),
(74,305,q),
(10,305,ls),
(0,305,o),
(3,314,qs),
(14,357,l),
(17,365,o),
(23,365,qs),
(73,365,l),
(79,450,o),
(129,504,qs),
(188,567,o),
(282,567,qs),
(351,567,o),
(408,539,qs),
(459,512,o),
(454,482,qs),
(450,458,ls),
(449,448,o),
(442,448,qs),
(437,448,o),
(428,454,qs),
(356,498,o),
(288,498,qs),
(160,498,o),
(148,365,q),
(417,365,ls),
(425,365,o),
(423,357,qs),
(413,314,l),
(409,305,o),
(403,305,qs),
(150,305,l),
(151,278,o),
(162,242,q),
(393,242,ls),
(403,242,o),
(400,233,qs),
(389,190,l),
(386,182,o),
(380,182,qs),
(183,182,l),
(207,123,o),
(306,57,o),
(371,57,qs),
(465,57,o),
(508,128,q),
(508,129,o),
(509,129,q),
(514,138,o),
(520,138,qs),
(539,138,o),
(539,106,qs),
(539,68,o),
(504,35,qs),
(456,-11,o),
(371,-11,qs),
(178,-11,o),
(103,182,q),
(20,182,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 10 1 6 11 1 5 4 6 5 103 12 1 4 14 13 2 3 1 4 3 103 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 0 0 0 65 0 64 60 59 57 55 51 50 47 45 34 33 36 18 36 18 37 20 33 15 6 31 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = Euro.arabic;
unicode = 57894;
},
{
glyphname = yen.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,128,o),
(71,137,qs),
(63,178,ls),
(61,187,o),
(69,187,qs),
(218,187,l),
(211,213,l),
(186,251,l),
(59,251,ls),
(51,251,o),
(49,259,qs),
(42,301,ls),
(40,309,o),
(48,309,qs),
(143,309,l),
(-27,547,ls),
(-34,556,o),
(-23,556,qs),
(3,556,ls),
(51,556,o),
(86,506,qs),
(238,291,l),
(329,544,ls),
(334,556,o),
(345,556,qs),
(393,556,ls),
(407,556,o),
(403,544,qs),
(315,309,l),
(409,309,ls),
(418,309,o),
(419,301,qs),
(426,259,ls),
(428,251,o),
(421,251,qs),
(295,251,l),
(284,214,l),
(287,187,l),
(431,187,ls),
(439,187,o),
(441,178,qs),
(448,137,ls),
(450,128,o),
(441,128,qs),
(297,128,l),
(318,9,ls),
(320,0,o),
(312,0,qs),
(259,0,ls),
(250,0,o),
(248,9,qs),
(228,128,l),
(79,128,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
30 1 3 4 15 1 2 3 2 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 23 77 0 0 0 24 0 78 0 0 0 52 0 51 48 46 35 34 52 50 35 34 35 34 50 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = yen.arabic;
unicode = 57895;
},
{
glyphname = brokenbar.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,272,qs),
(62,558,ls),
(62,567,o),
(70,567,qs),
(129,567,o),
(129,498,qs),
(129,272,ls),
(129,263,o),
(120,263,qs),
(70,263,ls),
(62,263,o)
);
},
{
closed = 1;
nodes = (
(62,-140,qs),
(62,145,ls),
(62,154,o),
(70,154,qs),
(120,154,ls),
(129,154,o),
(129,145,qs),
(129,-140,ls),
(129,-149,o),
(120,-149,qs),
(70,-149,ls),
(62,-149,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 5 1 2 3 2 101 4 1 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 1 4 1 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 97 5 1 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 11 2 0 19 16 11 22 13 22 7 5 0 10 2 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 190;
}
);
note = brokenbar.arabic;
unicode = 57896;
},
{
glyphname = section.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,229,qs),
(253,281,o),
(154,324,qs),
(126,337,o),
(123,338,q),
(78,306,o),
(78,268,qs),
(78,238,o),
(130,191,o),
(193,163,qs),
(208,156,o),
(213,154,q),
(253,192,o)
);
},
{
closed = 1;
nodes = (
(347,46,o),
(347,11,qs),
(347,-39,o),
(274,-98,o),
(213,-98,qs),
(148,-98,o),
(96,-62,qs),
(53,-32,o),
(61,-1,qs),
(63,11,ls),
(66,22,o),
(74,15,qs),
(139,-38,o),
(203,-38,qs),
(271,-38,o),
(271,15,qs),
(271,54,o),
(178,100,qs),
(100,139,o),
(75,156,qs),
(7,204,o),
(7,268,qs),
(7,325,o),
(72,368,q),
(30,396,o),
(0,441,o),
(0,472,qs),
(0,514,o),
(66,567,o),
(118,567,qs),
(175,567,o),
(213,548,qs),
(252,529,o),
(247,494,q),
(244,482,ls),
(244,481,o),
(244,480,qs),
(243,475,o),
(241,475,qs),
(237,475,o),
(231,479,qs),
(182,507,o),
(132,507,qs),
(77,507,o),
(77,469,qs),
(77,432,o),
(164,390,qs),
(237,354,o),
(261,338,qs),
(325,294,o),
(325,234,qs),
(325,164,o),
(267,123,q),
(311,96,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
42 7 2 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 101 0 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 2 1 0 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
62 60 53 51 37 35 24 22 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = section.arabic;
unicode = 57897;
},
{
glyphname = copyright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o),
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(262,423,qs),
(229,423,o),
(191,378,o),
(191,339,qs),
(191,257,o),
(262,257,qs),
(301,257,o),
(327,289,qs),
(330,293,o),
(334,293,qs),
(340,293,o),
(340,285,qs),
(339,259,o),
(288,219,o),
(256,219,qs),
(206,219,o),
(146,285,o),
(146,340,qs),
(146,394,o),
(211,463,o),
(261,463,qs),
(289,463,o),
(316,451,qs),
(334,443,o),
(333,431,qs),
(331,412,ls),
(329,400,o),
(320,406,qs),
(295,423,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
0 6 8 7 8 6 7 128 0 4 0 8 6 4 8 105 0 7 0 5 2 7 5 105 10 1 2 9 1 0 2 0 102 0 3 3 1 97 0 1 1 23 3 78 17 16 1 0 60 58 55 53 51 49 46 44 40 38 25 23 16 31 17 31 9 7 0 15 1 15 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = copyright.arabic;
unicode = 57898;
},
{
glyphname = guillemotleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,39,o),
(392,39,qs),
(334,39,ls),
(322,39,o),
(313,49,qs),
(197,173,l),
(189,183,o),
(189,189,qs),
(189,195,o),
(194,203,qs),
(270,328,ls),
(277,338,o),
(288,338,qs),
(339,338,ls),
(351,338,o),
(347,329,q),
(261,191,l),
(396,48,l)
);
},
{
closed = 1;
nodes = (
(252,39,o),
(239,39,qs),
(182,39,ls),
(169,39,o),
(159,49,qs),
(44,173,l),
(44,174,l),
(36,183,o),
(36,189,qs),
(36,194,o),
(41,203,qs),
(117,328,ls),
(123,338,o),
(135,338,qs),
(187,338,ls),
(198,338,o),
(193,329,qs),
(108,191,l),
(243,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 95 3 1 1 0 1 79 57 52 56 50 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = guillemotleft.arabic;
unicode = 57899;
},
{
glyphname = uni00AD.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,168,qs),
(58,168,ls),
(51,168,o),
(49,177,qs),
(39,229,ls),
(37,238,o),
(46,238,qs),
(258,238,ls),
(265,238,o),
(267,229,qs),
(277,177,ls),
(278,168,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 51 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = uni00AD.arabic;
unicode = 57900;
},
{
glyphname = registered.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,170,qs),
(30,232,o),
(30,340,qs),
(30,434,o),
(83,494,qs),
(145,563,o),
(252,563,qs),
(345,563,o),
(406,509,qs),
(475,447,o),
(475,340,qs),
(475,246,o),
(421,186,qs),
(359,116,o),
(252,116,qs),
(159,116,o)
);
},
{
closed = 1;
nodes = (
(376,202,qs),
(431,252,o),
(431,340,qs),
(431,416,o),
(388,464,qs),
(339,521,o),
(252,521,qs),
(177,521,o),
(129,477,qs),
(73,427,o),
(73,340,qs),
(73,264,o),
(116,215,qs),
(165,159,o),
(252,159,qs),
(328,159,o)
);
},
{
closed = 1;
nodes = (
(307,343,o),
(307,384,qs),
(307,421,o),
(256,421,qs),
(209,421,l),
(209,343,l),
(253,343,ls)
);
},
{
closed = 1;
nodes = (
(209,224,o),
(206,224,qs),
(171,224,ls),
(168,224,o),
(168,228,qs),
(168,453,ls),
(168,458,o),
(171,458,qs),
(258,458,ls),
(349,458,o),
(349,384,qs),
(349,330,o),
(298,310,q),
(352,228,ls),
(353,227,o),
(351,224,o),
(349,224,qs),
(315,224,ls),
(308,224,o),
(304,229,q),
(257,306,l),
(209,306,l),
(209,228,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
55 1 4 8 48 1 6 5 61 56 2 7 6 3 76 9 1 7 6 2 6 7 2 128 0 8 0 4 5 8 4 105 12 1 5 0 6 7 5 6 103 11 1 2 10 1 0 2 0 101 0 3 3 1 97 0 1 1 23 3 78 32 32 17 16 1 0 59 58 53 51 44 42 40 39 32 38 32 37 35 33 25 23 16 31 17 31 9 7 0 15 1 15 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = registered.arabic;
unicode = 57901;
},
{
glyphname = degree.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,429,o),
(23,475,qs),
(23,522,o),
(82,581,o),
(129,581,qs),
(175,581,o),
(234,522,o),
(234,475,qs),
(234,429,o),
(174,369,o),
(129,369,qs),
(82,369,o)
);
},
{
closed = 1;
nodes = (
(183,449,o),
(183,475,qs),
(183,501,o),
(152,534,o),
(129,534,qs),
(105,534,o),
(74,501,o),
(74,475,qs),
(74,449,o),
(105,414,o),
(129,414,qs),
(152,414,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = degree.arabic;
unicode = 57902;
},
{
glyphname = plusminus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,267,o),
(37,276,qs),
(37,324,ls),
(37,333,o),
(45,333,qs),
(168,333,l),
(168,470,ls),
(168,479,o),
(176,479,qs),
(235,479,o),
(235,418,qs),
(235,333,l),
(358,333,ls),
(366,333,o),
(366,324,qs),
(366,276,ls),
(366,267,o),
(358,267,qs),
(235,267,l),
(235,130,ls),
(235,122,o),
(227,122,qs),
(176,122,ls),
(168,122,o),
(168,130,qs),
(168,267,l),
(45,267,ls)
);
},
{
closed = 1;
nodes = (
(37,9,qs),
(37,57,ls),
(37,66,o),
(45,66,qs),
(315,66,ls),
(366,66,o),
(366,18,qs),
(366,9,ls),
(366,0,o),
(358,0,qs),
(45,0,ls),
(37,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 105 0 7 7 6 95 9 1 6 6 24 6 78 29 27 0 0 35 32 27 38 29 38 0 26 0 25 34 34 35 34 50 10 7 27 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = plusminus.arabic;
unicode = 57903;
},
{
glyphname = twosuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,286,o),
(269,254,qs),
(273,238,l),
(273,233,o),
(266,233,qs),
(44,233,ls),
(38,233,o),
(38,238,q),
(35,255,o),
(35,269,qs),
(35,305,o),
(67,356,o),
(108,384,qs),
(146,410,o),
(168,436,o),
(168,454,qs),
(168,510,o),
(98,510,qs),
(49,510,o),
(19,483,q),
(13,480,o),
(7,486,q),
(-3,502,ls),
(-17,526,o),
(9,542,qs),
(45,563,o),
(96,563,qs),
(159,563,o),
(231,507,o),
(231,458,qs),
(231,404,o),
(158,351,qs),
(121,325,o),
(101,301,o),
(103,286,q),
(226,286,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
4 1 3 0 2 3 2 99 0 1 1 0 97 0 0 0 23 1 78 0 0 0 35 0 34 43 39 39 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 297;
}
);
note = twosuperior.arabic;
unicode = 57904;
},
{
glyphname = threesuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,426,qs),
(120,426,ls),
(174,426,o),
(174,466,qs),
(174,512,o),
(105,512,qs),
(66,512,o),
(28,485,qs),
(19,479,o),
(13,490,qs),
(3,506,ls),
(-12,529,o),
(17,544,qs),
(57,563,o),
(105,563,qs),
(163,563,o),
(233,513,o),
(233,471,qs),
(233,423,o),
(189,404,q),
(227,399,o),
(271,354,o),
(271,320,qs),
(271,276,o),
(211,227,o),
(157,227,qs),
(110,227,o),
(30,283,o),
(30,316,qs),
(30,325,o),
(36,325,qs),
(40,325,o),
(46,319,qs),
(86,278,o),
(144,278,qs),
(210,278,o),
(210,326,qs),
(210,374,o),
(134,374,qs),
(101,374,ls),
(71,374,o),
(66,398,qs),
(63,419,l),
(61,426,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
23 0 2 0 6 1 76 0 2 0 1 0 2 1 128 0 6 0 0 2 6 0 105 0 1 0 3 1 3 101 0 5 5 4 97 0 4 4 23 5 78 34 39 41 35 34 34 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = threesuperior.arabic;
unicode = 57905;
},
{
glyphname = paragraph.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,221,o),
(65,264,qs),
(3,315,o),
(3,407,qs),
(3,465,o),
(37,504,qs),
(81,556,o),
(168,556,qs),
(239,556,ls),
(314,556,o),
(327,478,qs),
(411,8,ls),
(412,0,o),
(404,0,qs),
(370,0,ls),
(364,0,o),
(362,8,qs),
(275,504,l),
(211,504,l),
(299,8,ls),
(300,0,o),
(291,0,qs),
(257,0,ls),
(251,0,o),
(250,8,qs),
(212,221,l),
(203,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
5 1 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 23 77 2 1 0 0 24 0 78 0 0 0 26 0 25 51 50 18 50 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = paragraph.arabic;
unicode = 57906;
},
{
glyphname = onesuperior.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,477,o),
(-8,484,qs),
(-17,526,ls),
(-19,535,o),
(-12,538,qs),
(22,551,ls),
(35,556,o),
(51,556,qs),
(75,556,ls),
(107,556,o),
(113,523,qs),
(162,241,ls),
(164,233,o),
(156,233,qs),
(108,233,ls),
(100,233,o),
(99,241,qs),
(54,500,l),
(-1,479,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 23 0 78 51 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 214;
}
);
note = onesuperior.arabic;
unicode = 57907;
},
{
glyphname = guillemotright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,338,o),
(22,338,qs),
(80,338,ls),
(92,338,o),
(102,328,qs),
(217,204,ls),
(225,194,o),
(225,188,qs),
(225,181,o),
(220,174,qs),
(144,49,ls),
(138,39,o),
(126,39,qs),
(75,39,ls),
(62,39,o),
(68,48,qs),
(153,186,l),
(18,329,l)
);
},
{
closed = 1;
nodes = (
(162,338,o),
(175,338,qs),
(233,338,ls),
(245,338,o),
(255,328,qs),
(370,204,ls),
(378,194,o),
(378,188,qs),
(378,183,o),
(373,174,qs),
(297,49,ls),
(290,39,o),
(280,39,qs),
(228,39,ls),
(216,39,o),
(221,48,qs),
(306,186,l),
(171,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
9 1 0 1 1 76 3 1 1 0 0 1 87 3 1 1 1 0 97 2 1 0 1 0 81 56 52 56 50 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = guillemotright.arabic;
unicode = 57908;
},
{
glyphname = onequarter.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,73,o),
(371,79,qs),
(366,106,ls),
(364,115,o),
(369,123,qs),
(468,312,ls),
(474,323,o),
(487,323,qs),
(523,323,ls),
(552,323,o),
(558,295,qs),
(588,124,l),
(609,124,ls),
(638,124,o),
(642,98,qs),
(645,79,ls),
(646,73,o),
(639,73,qs),
(596,73,l),
(608,6,ls),
(609,0,o),
(603,0,qs),
(555,0,ls),
(548,0,o),
(548,6,q),
(536,73,l),
(378,73,ls)
);
},
{
closed = 1;
nodes = (
(221,0,qs),
(173,0,ls),
(163,0,o),
(167,9,qs),
(368,547,ls),
(371,556,o),
(379,556,qs),
(402,556,o),
(421,522,o),
(411,496,qs),
(230,9,l),
(228,0,o)
);
},
{
closed = 1;
nodes = (
(502,267,l),
(426,124,l),
(527,124,l)
);
},
{
closed = 1;
nodes = (
(-6,477,o),
(-8,484,qs),
(-17,526,ls),
(-19,535,o),
(-12,538,qs),
(22,551,ls),
(35,556,o),
(51,556,qs),
(75,556,ls),
(106,556,o),
(113,523,qs),
(162,241,ls),
(164,233,o),
(156,233,qs),
(108,233,ls),
(99,233,o),
(99,241,q),
(54,500,l),
(-1,479,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
43 40 2 8 3 6 1 0 1 2 76 0 3 5 8 5 3 8 128 11 7 2 2 10 4 2 1 0 2 1 106 0 8 8 5 97 9 1 5 5 23 77 6 1 0 0 24 0 78 39 39 0 0 53 50 47 44 39 41 39 41 38 35 32 30 0 26 0 25 50 35 35 19 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = onequarter.arabic;
unicode = 57909;
},
{
glyphname = onehalf.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,0,qs),
(173,0,ls),
(163,0,o),
(167,9,qs),
(368,547,ls),
(371,556,o),
(379,556,qs),
(402,556,o),
(421,522,o),
(411,496,qs),
(230,9,l),
(228,0,o)
);
},
{
closed = 1;
nodes = (
(-6,477,o),
(-8,484,qs),
(-17,526,ls),
(-19,535,o),
(-12,538,qs),
(22,551,ls),
(35,556,o),
(51,556,qs),
(75,556,ls),
(106,556,o),
(113,523,qs),
(162,241,ls),
(164,233,o),
(156,233,qs),
(108,233,ls),
(99,233,o),
(99,241,q),
(54,500,l),
(-1,479,ls)
);
},
{
closed = 1;
nodes = (
(681,54,o),
(688,22,qs),
(691,6,ls),
(692,0,o),
(685,0,qs),
(462,0,ls),
(457,0,o),
(456,6,qs),
(456,10,o),
(455,17,qs),
(453,30,o),
(453,37,qs),
(453,72,o),
(486,123,o),
(526,151,qs),
(564,177,o),
(586,203,o),
(586,222,qs),
(586,277,o),
(516,277,qs),
(467,277,o),
(438,251,q),
(431,246,o),
(425,253,q),
(415,269,ls),
(401,293,o),
(428,309,qs),
(464,331,o),
(515,331,qs),
(577,331,o),
(649,275,o),
(649,226,qs),
(649,172,o),
(577,119,qs),
(540,92,o),
(519,69,o),
(521,54,q),
(644,54,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
13 1 2 5 1 76 0 4 0 5 2 4 5 105 0 2 2 0 97 3 1 0 0 23 77 8 1 7 7 1 97 6 1 1 1 24 1 78 31 31 31 68 31 67 60 39 47 51 51 51 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 707;
}
);
note = onehalf.arabic;
unicode = 57910;
},
{
glyphname = threequarters.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,73,o),
(451,79,q),
(446,106,ls),
(445,115,o),
(449,123,qs),
(549,312,l),
(556,323,o),
(567,323,qs),
(604,323,ls),
(633,323,o),
(638,295,qs),
(668,124,l),
(690,124,ls),
(718,124,o),
(722,98,qs),
(726,79,ls),
(727,73,o),
(720,73,qs),
(677,73,l),
(689,6,ls),
(690,0,o),
(684,0,qs),
(635,0,ls),
(629,0,o),
(628,6,qs),
(616,73,l),
(459,73,ls)
);
},
{
closed = 1;
nodes = (
(459,556,qs),
(483,556,o),
(502,522,o),
(492,496,qs),
(311,9,ls),
(308,0,o),
(301,0,qs),
(254,0,ls),
(245,0,o),
(247,9,q),
(449,547,l),
(451,556,o)
);
},
{
closed = 1;
nodes = (
(582,267,l),
(507,124,l),
(607,124,l)
);
},
{
closed = 1;
nodes = (
(67,426,qs),
(120,426,ls),
(174,426,o),
(174,466,qs),
(174,512,o),
(105,512,qs),
(66,512,o),
(28,485,qs),
(19,479,o),
(13,490,qs),
(3,506,ls),
(-12,529,o),
(17,544,qs),
(55,563,o),
(105,563,qs),
(163,563,o),
(233,513,o),
(233,471,qs),
(233,423,o),
(189,404,q),
(227,399,o),
(271,354,o),
(271,320,qs),
(271,276,o),
(211,227,o),
(157,227,qs),
(110,227,o),
(30,283,o),
(30,316,qs),
(30,325,o),
(36,325,qs),
(40,325,o),
(46,319,qs),
(86,278,o),
(144,278,qs),
(210,278,o),
(210,326,qs),
(210,374,o),
(134,374,qs),
(101,374,ls),
(69,374,o),
(66,398,qs),
(63,419,l),
(61,426,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
65 42 2 8 14 40 1 11 9 6 1 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
10 1 3 8 9 8 3 9 128 0 14 0 8 3 14 8 105 0 9 0 11 2 9 11 105 16 7 2 2 15 4 2 1 0 2 1 106 0 13 13 6 97 12 1 6 6 23 77 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
10 1 3 8 9 8 3 9 128 0 14 0 8 3 14 8 105 0 9 0 11 2 9 11 105 16 7 2 2 15 4 2 1 0 2 1 106 0 6 6 23 77 0 13 13 12 97 0 12 12 23 77 5 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
39 39 0 0 84 82 80 78 71 69 60 58 55 53 51 49 47 44 39 41 39 41 38 36 32 29 0 26 0 25 50 35 35 34 17 7 26 
CALL[ ]	/* CallFunction */";
};
width = 733;
}
);
note = threequarters.arabic;
unicode = 57911;
},
{
glyphname = multiply.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,392,o),
(48,398,q),
(69,418,o),
(104,416,o),
(127,393,qs),
(204,317,l),
(310,422,ls),
(315,427,o),
(320,422,qs),
(351,392,ls),
(357,386,o),
(351,379,qs),
(247,274,l),
(358,162,ls),
(364,156,o),
(358,150,qs),
(337,129,o),
(303,131,o),
(278,155,qs),
(203,232,l),
(98,126,ls),
(92,120,o),
(86,126,qs),
(55,156,l),
(48,161,o),
(55,168,qs),
(161,274,l),
(49,386,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 14 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 29 25 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = multiply.arabic;
unicode = 57912;
},
{
glyphname = divide.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
},
{
closed = 1;
nodes = (
(183,448,o),
(201,448,qs),
(219,448,o),
(244,423,o),
(244,404,qs),
(244,387,o),
(219,362,o),
(201,362,qs),
(183,362,o),
(158,387,o),
(158,404,qs),
(158,423,o)
);
},
{
closed = 1;
nodes = (
(184,181,o),
(201,181,qs),
(219,181,o),
(244,155,o),
(244,137,qs),
(244,119,o),
(219,94,o),
(201,94,qs),
(183,94,o),
(158,120,o),
(158,137,qs),
(158,155,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 0 2 1 3 2 105 0 1 6 1 0 5 1 0 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 2 0 34 32 28 26 22 20 16 14 8 5 0 11 2 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = divide.arabic;
unicode = 57913;
},
{
glyphname = endash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,236,o),
(4,236,qs),
(324,236,ls),
(333,236,o),
(334,227,qs),
(342,178,ls),
(344,170,o),
(336,170,qs),
(16,170,ls),
(8,170,o),
(6,178,qs),
(-2,227,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 336;
}
);
note = endash.arabic;
unicode = 57914;
},
{
glyphname = emdash.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,236,o),
(4,236,qs),
(648,236,ls),
(656,236,o),
(658,227,qs),
(666,178,ls),
(668,170,o),
(660,170,qs),
(16,170,ls),
(8,170,o),
(6,178,qs),
(-2,227,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 660;
}
);
note = emdash.arabic;
unicode = 57915;
},
{
glyphname = quoteleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,358,o),
(106,358,qs),
(84,358,o),
(47,392,o),
(43,416,qs),
(28,496,o),
(100,563,q),
(103,565,o),
(106,562,qs),
(132,541,o),
(113,516,qs),
(97,491,o),
(95,468,q),
(142,461,o),
(150,413,qs),
(154,390,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
8 2 2 0 74 0 0 0 118 44 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = quoteleft.arabic;
unicode = 57916;
},
{
glyphname = quoteright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,360,qs),
(65,358,o),
(61,361,qs),
(35,381,o),
(54,407,qs),
(71,432,o),
(73,455,q),
(25,462,o),
(17,509,qs),
(13,532,o),
(39,564,o),
(61,564,qs),
(83,564,o),
(120,531,o),
(125,507,qs),
(139,427,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 1 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
34 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 217;
}
);
note = quoteright.arabic;
unicode = 57917;
},
{
glyphname = quotesinglbase.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-11,-48,qs),
(11,-30,o),
(20,-7,q),
(-12,0,o),
(-12,35,qs),
(-12,59,o),
(18,92,o),
(39,92,qs),
(83,92,o),
(83,44,qs),
(83,-21,o),
(-6,-83,q),
(-12,-89,o),
(-15,-83,q),
(-31,-65,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
11 1 0 73 0 0 0 118 37 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 135;
}
);
note = quotesinglbase.arabic;
unicode = 57918;
},
{
glyphname = quotedblleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,413,qs),
(154,390,o),
(129,358,o),
(106,358,qs),
(84,358,o),
(47,392,o),
(43,416,qs),
(28,496,o),
(100,563,q),
(103,565,o),
(106,562,qs),
(132,541,o),
(113,516,qs),
(97,491,o),
(95,468,q),
(142,461,o)
);
},
{
closed = 1;
nodes = (
(297,358,o),
(275,358,qs),
(253,358,o),
(216,392,o),
(211,416,qs),
(197,496,o),
(269,563,q),
(272,565,o),
(275,562,qs),
(301,541,o),
(282,516,qs),
(266,491,o),
(264,468,q),
(311,461,o),
(319,413,qs),
(323,390,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
24 18 6 3 0 74 1 1 0 0 118 30 28 42 2 7 23 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = quotedblleft.arabic;
unicode = 57919;
},
{
glyphname = quotedblright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,531,o),
(125,507,qs),
(139,427,o),
(67,360,qs),
(65,358,o),
(61,361,qs),
(35,381,o),
(54,407,qs),
(71,432,o),
(73,455,q),
(25,462,o),
(17,509,qs),
(13,532,o),
(39,564,o),
(61,564,qs),
(83,564,o)
);
},
{
closed = 1;
nodes = (
(236,360,q),
(233,358,o),
(230,361,qs),
(204,381,o),
(223,407,qs),
(240,432,o),
(241,455,q),
(194,462,o),
(186,509,qs),
(182,532,o),
(208,564,o),
(230,564,qs),
(252,564,o),
(289,531,o),
(294,507,qs),
(308,427,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 24 5 3 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
1 2 2 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
1 2 2 0 0 118 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
1 0 20 18 0 15 1 15 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = quotedblright.arabic;
unicode = 57920;
},
{
glyphname = quotedblbase.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-48,qs),
(146,-28,o),
(154,-7,q),
(122,0,o),
(122,35,qs),
(122,59,o),
(152,92,o),
(174,92,qs),
(217,92,o),
(217,44,qs),
(217,-21,o),
(128,-83,q),
(122,-89,o),
(119,-83,q),
(103,-64,o)
);
},
{
closed = 1;
nodes = (
(-8,-48,qs),
(15,-28,o),
(22,-7,q),
(-9,0,o),
(-9,35,qs),
(-9,59,o),
(21,92,o),
(42,92,qs),
(86,92,o),
(86,44,qs),
(86,-21,o),
(-3,-83,q),
(-10,-90,o),
(-12,-83,q),
(-28,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
26 11 2 0 73 1 1 0 0 118 45 37 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = quotedblbase.arabic;
unicode = 57921;
},
{
glyphname = dagger.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-16,295,o),
(-18,304,qs),
(-26,351,ls),
(-28,359,o),
(-20,359,qs),
(70,359,l),
(37,547,ls),
(36,554,o),
(44,554,qs),
(101,554,o),
(114,486,qs),
(136,359,l),
(226,359,ls),
(234,359,o),
(235,351,qs),
(244,304,l),
(244,295,o),
(237,295,qs),
(148,295,l),
(226,-151,ls),
(228,-160,o),
(220,-160,qs),
(169,-160,ls),
(161,-160,o),
(160,-151,qs),
(81,295,l),
(-8,295,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
10 1 1 2 1 76 0 0 1 0 134 4 1 2 6 5 2 1 0 2 1 104 0 3 3 23 3 78 0 0 0 26 0 25 34 34 35 34 50 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = dagger.arabic;
unicode = 57922;
},
{
glyphname = daggerdbl.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,103,o),
(16,111,qs),
(8,159,ls),
(6,167,o),
(14,167,qs),
(103,167,l),
(81,295,l),
(-8,295,ls),
(-16,295,o),
(-18,304,qs),
(-26,351,ls),
(-28,359,o),
(-20,359,qs),
(70,359,l),
(37,547,ls),
(36,554,o),
(44,554,qs),
(102,554,o),
(114,486,qs),
(136,359,l),
(226,359,ls),
(234,359,o),
(235,351,qs),
(244,304,l),
(244,295,o),
(237,295,qs),
(148,295,l),
(170,167,l),
(259,167,ls),
(268,167,o),
(269,159,qs),
(277,111,ls),
(278,103,o),
(271,103,qs),
(182,103,l),
(226,-151,ls),
(228,-160,o),
(220,-160,qs),
(169,-160,ls),
(161,-160,o),
(160,-151,qs),
(115,103,l),
(26,103,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
18 1 3 4 1 76 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 10 9 2 1 0 2 1 103 0 5 5 23 5 78 0 0 0 42 0 41 33 35 34 34 35 33 35 34 50 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = daggerdbl.arabic;
unicode = 57923;
},
{
glyphname = bullet.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,243,o),
(45,294,qs),
(45,331,o),
(93,378,o),
(131,378,qs),
(183,378,o),
(243,316,o),
(243,263,qs),
(243,227,o),
(195,180,o),
(157,180,qs),
(106,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 89 0 1 1 0 97 2 1 0 1 0 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 288;
}
);
note = bullet.arabic;
unicode = 57924;
},
{
glyphname = ellipsis.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,21,o),
(100,44,qs),
(95,66,o),
(122,99,o),
(144,99,qs),
(166,99,o),
(203,67,o),
(207,44,qs),
(211,21,o),
(185,-11,o),
(163,-11,qs),
(141,-11,o)
);
},
{
closed = 1;
nodes = (
(303,21,o),
(300,44,qs),
(295,66,o),
(321,99,o),
(343,99,qs),
(365,99,o),
(403,67,o),
(407,44,qs),
(411,21,o),
(385,-11,o),
(363,-11,qs),
(341,-11,o)
);
},
{
closed = 1;
nodes = (
(502,21,o),
(498,44,qs),
(494,66,o),
(520,99,o),
(542,99,qs),
(564,99,o),
(602,66,o),
(606,44,qs),
(610,21,o),
(584,-11,o),
(562,-11,qs),
(540,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
5 3 2 1 0 0 1 89 5 3 2 1 1 0 97 8 4 7 2 6 5 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 616;
}
);
note = ellipsis.arabic;
unicode = 57925;
},
{
glyphname = perthousand.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,349,qs),
(223,422,o),
(166,513,o),
(120,513,qs),
(61,513,o),
(61,433,qs),
(61,363,o),
(117,276,o),
(164,276,qs),
(223,276,o)
);
},
{
closed = 1;
nodes = (
(233,9,qs),
(433,547,ls),
(437,556,o),
(443,556,qs),
(450,556,ls),
(474,556,o),
(494,522,o),
(484,496,qs),
(301,9,ls),
(298,0,o),
(291,0,qs),
(238,0,ls),
(229,0,o)
);
},
{
closed = 1;
nodes = (
(54,278,qs),
(0,340,o),
(0,437,qs),
(0,495,o),
(65,567,o),
(117,567,qs),
(183,567,o),
(230,512,qs),
(284,449,o),
(284,355,qs),
(284,293,o),
(222,223,o),
(166,223,qs),
(101,223,o)
);
},
{
closed = 1;
nodes = (
(676,117,qs),
(676,191,o),
(619,281,o),
(573,281,qs),
(514,281,o),
(514,202,qs),
(514,131,o),
(571,45,o),
(617,45,qs),
(676,45,o)
);
},
{
closed = 1;
nodes = (
(507,46,qs),
(453,109,o),
(453,206,qs),
(453,264,o),
(518,335,o),
(571,335,qs),
(636,335,o),
(683,280,qs),
(737,218,o),
(737,123,qs),
(737,61,o),
(675,-9,o),
(619,-9,qs),
(554,-9,o)
);
},
{
closed = 1;
nodes = (
(1007,117,qs),
(1007,191,o),
(950,281,o),
(904,281,qs),
(845,281,o),
(845,202,qs),
(845,131,o),
(902,45,o),
(948,45,qs),
(1007,45,o)
);
},
{
closed = 1;
nodes = (
(838,46,qs),
(784,109,o),
(784,206,qs),
(784,264,o),
(848,335,o),
(902,335,qs),
(967,335,o),
(1014,280,qs),
(1068,217,o),
(1068,123,qs),
(1068,61,o),
(1006,-9,o),
(950,-9,qs),
(884,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
13 1 9 11 1 7 0 9 7 105 14 1 0 16 1 4 6 0 4 105 0 1 1 3 97 5 1 3 3 23 77 19 10 17 3 6 6 2 97 20 12 18 8 15 5 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
13 1 9 11 1 7 0 9 7 105 14 1 0 16 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 19 10 17 3 6 6 2 97 20 12 18 8 15 5 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
13 1 9 11 1 7 0 9 7 105 14 1 0 16 1 4 6 0 4 105 0 3 3 23 77 0 1 1 5 97 0 5 5 23 77 15 1 2 2 24 77 19 10 17 3 6 6 8 97 20 12 18 3 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 0 1 9 5 1 105 13 1 9 11 1 7 0 9 7 105 14 1 0 16 1 4 6 0 4 105 0 3 3 23 77 15 1 2 2 24 77 19 10 17 3 6 6 8 97 20 12 18 3 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 1 9 5 1 105 13 1 9 11 1 7 0 9 7 105 14 1 0 16 1 4 6 0 4 105 19 10 17 3 6 20 12 18 3 8 6 8 101 0 3 3 23 77 15 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
72 71 62 61 48 47 38 37 24 23 12 10 1 0 79 77 71 84 72 84 67 65 61 70 62 70 55 53 47 60 48 60 43 41 37 46 38 46 31 29 23 36 24 36 18 16 10 22 12 22 6 4 0 9 1 9 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1092;
}
);
note = perthousand.arabic;
unicode = 57926;
},
{
glyphname = guilsinglleft.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,39,o),
(239,39,qs),
(182,39,ls),
(169,39,o),
(159,49,qs),
(44,173,l),
(44,174,l),
(36,183,o),
(36,189,qs),
(36,194,o),
(41,203,qs),
(117,328,ls),
(123,338,o),
(135,338,qs),
(187,338,ls),
(198,338,o),
(193,329,qs),
(108,191,l),
(243,48,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 95 0 1 0 1 79 57 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = guilsinglleft.arabic;
unicode = 57927;
},
{
glyphname = guilsinglright.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,338,o),
(23,338,qs),
(81,338,ls),
(93,338,o),
(103,328,qs),
(218,204,ls),
(226,194,o),
(226,188,qs),
(226,181,o),
(221,174,qs),
(145,49,ls),
(139,39,o),
(127,39,qs),
(76,39,ls),
(63,39,o),
(69,48,qs),
(155,186,l),
(19,329,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
9 1 0 1 1 76 0 1 0 0 1 87 0 1 1 0 97 0 0 1 0 81 56 50 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = guilsinglright.arabic;
unicode = 57928;
},
{
glyphname = fraction.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,9,qs),
(205,547,ls),
(208,556,o),
(216,556,qs),
(240,556,o),
(258,522,o),
(249,496,qs),
(68,9,ls),
(64,0,o),
(58,0,qs),
(10,0,ls),
(0,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 8 6 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = fraction.arabic;
unicode = 57929;
},
{
glyphname = uni20AC.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,182,o),
(13,190,q),
(24,233,ls),
(27,242,o),
(33,242,qs),
(85,242,l),
(76,276,o),
(74,305,q),
(10,305,ls),
(0,305,o),
(3,314,qs),
(14,357,l),
(17,365,o),
(23,365,qs),
(73,365,l),
(79,450,o),
(129,504,qs),
(188,567,o),
(282,567,qs),
(351,567,o),
(408,539,qs),
(459,512,o),
(454,482,qs),
(450,458,ls),
(449,448,o),
(442,448,qs),
(437,448,o),
(428,454,qs),
(356,498,o),
(288,498,qs),
(160,498,o),
(148,365,q),
(417,365,ls),
(425,365,o),
(423,357,qs),
(413,314,l),
(409,305,o),
(403,305,qs),
(150,305,l),
(151,278,o),
(162,242,q),
(393,242,ls),
(403,242,o),
(400,233,qs),
(389,190,l),
(386,182,o),
(380,182,qs),
(183,182,l),
(207,123,o),
(306,57,o),
(371,57,qs),
(465,57,o),
(508,128,q),
(508,129,o),
(509,129,q),
(514,138,o),
(520,138,qs),
(539,138,o),
(539,106,qs),
(539,68,o),
(504,35,qs),
(456,-11,o),
(371,-11,qs),
(178,-11,o),
(103,182,q),
(20,182,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 10 1 6 11 1 5 4 6 5 103 12 1 4 14 13 2 3 1 4 3 103 0 7 7 9 97 0 9 9 23 77 0 2 2 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 10 1 6 11 1 5 4 6 5 103 12 1 4 14 13 2 3 1 4 3 103 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 65 0 64 60 59 57 55 51 50 47 45 34 33 36 18 36 18 37 20 33 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uni20AC.arabic;
unicode = 57930;
},
{
glyphname = trademark.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,512,qs),
(31,552,ls),
(31,556,o),
(35,556,qs),
(226,556,ls),
(250,556,o),
(250,534,qs),
(250,514,ls),
(250,508,o),
(244,508,qs),
(165,508,l),
(165,276,ls),
(165,272,o),
(163,272,qs),
(118,272,ls),
(114,272,o),
(114,276,qs),
(114,508,l),
(35,508,ls)
);
},
{
closed = 1;
nodes = (
(497,556,o),
(502,556,qs),
(537,556,ls),
(565,556,o),
(567,528,qs),
(582,276,ls),
(582,272,o),
(578,272,qs),
(535,272,ls),
(530,272,o),
(530,277,qs),
(519,473,l),
(453,276,l),
(450,272,o),
(447,272,qs),
(414,272,ls),
(409,272,o),
(408,276,qs),
(345,471,l),
(333,276,ls),
(333,272,o),
(329,272,qs),
(287,272,ls),
(283,272,o),
(283,276,qs),
(299,552,ls),
(299,556,o),
(304,556,qs),
(337,556,ls),
(366,556,o),
(373,533,qs),
(431,355,l),
(497,551,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
47 26 17 16 10 5 1 2 46 41 40 33 32 27 1 7 0 1 2 76 9 3 2 1 1 2 97 8 4 2 2 2 23 77 7 6 5 3 0 0 2 97 8 4 2 2 2 23 0 78 0 0 50 48 44 43 37 36 30 29 24 22 0 19 0 19 36 19 19 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 642;
}
);
note = trademark.arabic;
unicode = 57931;
},
{
glyphname = minus.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,247,qs),
(37,295,ls),
(37,304,o),
(45,304,qs),
(315,304,ls),
(366,304,o),
(366,257,qs),
(366,247,ls),
(366,238,o),
(358,238,qs),
(45,238,ls),
(37,238,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = minus.arabic;
unicode = 57932;
},
{
glyphname = notequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,148,o),
(37,157,qs),
(37,205,ls),
(37,214,o),
(45,214,qs),
(135,214,l),
(197,325,l),
(45,325,ls),
(37,325,o),
(37,334,qs),
(37,382,ls),
(37,391,o),
(45,391,qs),
(234,391,l),
(285,484,ls),
(290,493,o),
(299,493,qs),
(303,493,ls),
(326,493,o),
(338,460,o),
(324,433,qs),
(300,391,l),
(315,391,ls),
(366,391,o),
(366,343,qs),
(366,334,ls),
(366,325,o),
(358,325,qs),
(265,325,l),
(203,214,l),
(315,214,ls),
(366,214,o),
(366,166,qs),
(366,157,ls),
(366,148,o),
(358,148,qs),
(166,148,l),
(121,67,l),
(117,58,o),
(110,58,qs),
(58,58,ls),
(48,58,o),
(54,67,qs),
(99,148,l),
(45,148,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 5 133 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 43 33 35 34 51 35 33 35 34 50 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 403;
}
);
note = notequal.arabic;
unicode = 57933;
},
{
glyphname = lessequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,66,o),
(45,66,qs),
(399,66,ls),
(407,66,o),
(407,58,qs),
(407,8,ls),
(407,0,o),
(399,0,qs),
(45,0,ls),
(37,0,o),
(37,8,qs),
(37,58,ls)
);
},
{
closed = 1;
nodes = (
(407,181,o),
(407,122,qs),
(407,117,ls),
(407,108,o),
(399,111,qs),
(45,261,l),
(37,263,o),
(37,273,qs),
(37,313,ls),
(37,322,o),
(45,326,qs),
(397,474,ls),
(407,478,o),
(407,468,qs),
(407,418,ls),
(407,405,o),
(393,399,qs),
(133,293,l),
(354,203,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 24 0 78 51 49 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = lessequal.arabic;
unicode = 57934;
},
{
glyphname = greaterequal.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,406,o),
(43,418,qs),
(43,468,ls),
(43,478,o),
(53,474,qs),
(406,326,ls),
(414,322,o),
(414,313,qs),
(414,273,ls),
(414,263,o),
(406,261,q),
(52,111,ls),
(43,108,o),
(43,117,qs),
(43,122,ls),
(43,182,o),
(96,203,qs),
(318,293,l),
(57,399,l)
);
},
{
closed = 1;
nodes = (
(43,66,o),
(51,66,qs),
(405,66,ls),
(412,66,o),
(412,58,qs),
(412,8,ls),
(412,0,o),
(405,0,qs),
(51,0,ls),
(43,0,o),
(43,8,qs),
(43,58,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
0 1 1 0 95 0 0 0 24 0 78 29 26 23 20 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 450;
}
);
note = greaterequal.arabic;
unicode = 57935;
},
{
glyphname = zero.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,194,qs),
(381,321,o),
(340,403,qs),
(293,496,o),
(211,496,qs),
(109,496,o),
(109,365,qs),
(109,246,o),
(152,160,qs),
(203,59,o),
(284,59,qs),
(381,59,o)
);
},
{
closed = 1;
nodes = (
(114,81,qs),
(33,187,o),
(33,362,qs),
(33,452,o),
(74,506,qs),
(121,567,o),
(206,567,qs),
(311,567,o),
(379,478,qs),
(459,375,o),
(459,194,qs),
(459,106,o),
(420,52,qs),
(375,-11,o),
(289,-11,qs),
(184,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 21 19 12 27 13 27 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = zero.tab.arabic;
unicode = 57936;
},
{
glyphname = one.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,441,ls),
(59,438,o),
(57,447,qs),
(46,502,l),
(45,512,o),
(54,516,qs),
(130,547,ls),
(153,556,o),
(177,556,qs),
(193,556,ls),
(242,556,o),
(252,501,qs),
(328,69,l),
(432,69,ls),
(474,69,o),
(484,26,qs),
(487,11,ls),
(488,0,o),
(478,0,qs),
(128,0,ls),
(120,0,o),
(118,9,qs),
(109,61,ls),
(108,69,o),
(116,69,qs),
(252,69,l),
(178,486,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = one.tab.arabic;
unicode = 57937;
},
{
glyphname = two.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,69,o),
(481,27,qs),
(483,11,ls),
(485,0,o),
(474,0,qs),
(121,0,ls),
(112,0,o),
(111,9,qs),
(106,32,o),
(106,59,qs),
(106,126,o),
(146,177,qs),
(170,209,o),
(231,254,qs),
(293,301,o),
(334,356,o),
(334,393,qs),
(334,443,o),
(269,498,o),
(210,498,qs),
(136,498,o),
(75,454,qs),
(69,449,o),
(63,449,qs),
(58,449,o),
(54,457,qs),
(44,477,ls),
(25,515,o),
(70,537,qs),
(134,567,o),
(201,567,qs),
(289,567,o),
(344,529,qs),
(412,483,o),
(412,393,qs),
(412,332,o),
(371,281,qs),
(347,251,o),
(285,204,qs),
(225,159,o),
(186,104,o),
(189,69,q),
(429,69,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 60 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = two.tab.arabic;
unicode = 57938;
},
{
glyphname = three.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,324,qs),
(233,324,ls),
(324,324,o),
(324,399,qs),
(324,499,o),
(202,499,qs),
(131,499,o),
(74,456,qs),
(66,450,o),
(62,450,qs),
(57,450,o),
(52,458,qs),
(42,478,ls),
(24,516,o),
(68,538,qs),
(128,567,o),
(202,567,qs),
(285,567,o),
(337,527,qs),
(397,482,o),
(397,401,qs),
(397,324,o),
(326,293,q),
(386,283,o),
(461,197,o),
(461,139,qs),
(461,79,o),
(426,41,qs),
(380,-10,o),
(286,-10,qs),
(209,-10,o),
(151,29,qs),
(89,71,o),
(89,122,qs),
(89,139,o),
(100,139,qs),
(107,139,o),
(117,129,qs),
(187,58,o),
(275,58,qs),
(384,58,o),
(384,144,qs),
(384,194,o),
(309,254,o),
(246,254,qs),
(189,254,ls),
(147,254,o),
(140,294,qs),
(136,311,l),
(135,324,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 0 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 6 7 6 5 7 128 0 2 0 1 0 2 1 128 0 7 0 0 2 7 0 103 0 6 6 4 97 0 4 4 23 77 0 1 1 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 6 7 6 5 7 128 0 2 0 1 0 2 1 128 0 4 0 6 5 4 6 105 0 7 0 0 2 7 0 103 0 1 1 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 6 7 6 5 7 128 0 2 0 1 0 2 1 128 0 4 0 6 5 4 6 105 0 7 0 0 2 7 0 103 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
50 34 37 43 36 34 35 50 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = three.tab.arabic;
unicode = 57939;
},
{
glyphname = four.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,128,o),
(55,136,qs),
(48,177,ls),
(46,194,o),
(52,208,qs),
(212,537,ls),
(220,556,o),
(243,556,qs),
(272,556,ls),
(319,556,o),
(327,508,qs),
(382,197,l),
(418,197,ls),
(465,197,o),
(471,154,qs),
(473,138,ls),
(475,128,o),
(464,128,qs),
(394,128,l),
(414,9,ls),
(416,0,o),
(409,0,qs),
(350,0,ls),
(342,0,o),
(340,9,qs),
(319,128,l),
(64,128,ls)
);
},
{
closed = 1;
nodes = (
(258,481,l),
(119,197,l),
(307,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
28 1 2 3 1 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 25 50 35 34 50 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = four.tab.arabic;
unicode = 57940;
},
{
glyphname = five.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(181,353,o),
(240,353,qs),
(331,353,o),
(388,303,qs),
(452,248,o),
(452,153,qs),
(452,84,o),
(410,40,qs),
(361,-10,o),
(273,-10,qs),
(198,-10,o),
(76,71,o),
(76,120,qs),
(76,137,o),
(89,137,qs),
(95,137,o),
(104,128,qs),
(173,58,o),
(261,58,qs),
(376,58,o),
(376,156,qs),
(376,215,o),
(342,249,qs),
(304,286,o),
(234,286,qs),
(161,286,o),
(90,259,qs),
(78,254,o),
(76,268,qs),
(28,547,ls),
(26,556,o),
(34,556,qs),
(304,556,ls),
(350,556,o),
(358,513,qs),
(361,497,ls),
(363,486,o),
(352,486,qs),
(109,486,l),
(135,340,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 35 34 36 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = five.tab.arabic;
unicode = 57941;
},
{
glyphname = six.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,362,qs),
(333,362,o),
(387,312,qs),
(449,256,o),
(449,164,qs),
(449,96,o),
(406,48,qs),
(353,-10,o),
(261,-10,qs),
(178,-10,o),
(122,42,qs),
(58,101,o),
(58,197,qs),
(58,265,o),
(95,353,qs),
(183,557,ls),
(188,567,o),
(196,567,qs),
(223,567,o),
(243,513,o),
(228,479,qs),
(168,341,l),
(208,362,o)
);
},
{
closed = 1;
nodes = (
(374,117,o),
(374,164,qs),
(374,223,o),
(302,296,o),
(242,296,qs),
(191,296,o),
(134,240,o),
(134,190,qs),
(134,132,o),
(205,59,o),
(261,59,qs),
(312,59,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 34 24 34 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = six.tab.arabic;
unicode = 57942;
},
{
glyphname = seven.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,486,o),
(40,495,qs),
(31,547,ls),
(29,556,o),
(37,556,qs),
(365,556,ls),
(411,556,o),
(418,513,q),
(421,502,l),
(425,475,o),
(418,456,qs),
(242,12,ls),
(237,0,o),
(227,0,qs),
(171,0,ls),
(160,0,o),
(163,9,qs),
(350,486,l),
(50,486,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 17 54 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = seven.tab.arabic;
unicode = 57943;
},
{
glyphname = eight.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,89,qs),
(211,54,o),
(272,54,qs),
(381,54,o),
(381,139,qs),
(381,191,o),
(343,225,qs),
(302,261,o),
(240,261,qs),
(194,261,o),
(135,211,o),
(135,171,qs),
(135,121,o)
);
},
{
closed = 1;
nodes = (
(176,324,o),
(229,324,qs),
(272,324,o),
(320,364,o),
(320,399,qs),
(320,446,o),
(253,503,o),
(197,503,qs),
(155,503,o),
(103,459,o),
(103,423,qs),
(103,382,o)
);
},
{
closed = 1;
nodes = (
(31,431,qs),
(31,485,o),
(70,522,qs),
(117,567,o),
(197,567,qs),
(276,567,o),
(330,526,qs),
(392,479,o),
(392,404,qs),
(392,369,o),
(355,309,o),
(324,294,q),
(457,252,o),
(457,136,qs),
(457,77,o),
(418,38,qs),
(369,-11,o),
(276,-11,qs),
(190,-11,o),
(130,34,qs),
(60,87,o),
(60,171,qs),
(60,255,o),
(149,290,q),
(31,330,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
37 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 39 36 37 36 34 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = eight.tab.arabic;
unicode = 57944;
},
{
glyphname = nine.tab.arabic;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,194,qs),
(159,194,o),
(104,245,qs),
(42,303,o),
(42,392,qs),
(42,462,o),
(86,510,qs),
(137,567,o),
(224,567,qs),
(310,567,o),
(367,517,qs),
(433,460,o),
(433,362,qs),
(433,291,o),
(396,204,qs),
(309,1,l),
(303,-10,o),
(295,-10,qs),
(268,-10,o),
(248,43,o),
(263,77,qs),
(323,214,l),
(290,194,o)
);
},
{
closed = 1;
nodes = (
(358,319,o),
(358,369,qs),
(358,420,o),
(326,456,qs),
(288,498,o),
(227,498,qs),
(177,498,o),
(118,440,o),
(118,392,qs),
(118,333,o),
(188,261,o),
(245,261,qs),
(297,261,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
24 23 30 28 23 35 24 35 38 39 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = nine.tab.arabic;
unicode = 57945;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,566,o),
(155,585,qs),
(151,604,o),
(172,631,o),
(191,631,qs),
(209,631,o),
(239,605,o),
(242,585,qs),
(246,566,o),
(225,541,o),
(207,541,qs),
(188,541,o)
);
},
{
closed = 1;
nodes = (
(110,470,o),
(107,489,qs),
(104,509,o),
(124,535,o),
(142,535,qs),
(161,535,o),
(191,509,o),
(195,489,qs),
(198,470,o),
(177,445,o),
(158,445,qs),
(139,445,o)
);
},
{
closed = 1;
nodes = (
(250,535,o),
(269,535,qs),
(287,535,o),
(317,509,o),
(320,489,qs),
(324,470,o),
(303,445,o),
(285,445,qs),
(266,445,o),
(236,471,o),
(232,489,qs),
(229,509,o)
);
},
{
closed = 1;
nodes = (
(539,-226,o),
(536,-238,qs),
(524,-279,o),
(426,-332,o),
(362,-331,qs),
(263,-330,o),
(195,-277,qs),
(121,-220,o),
(108,-127,qs),
(100,-70,o),
(139,22,o),
(183,48,q),
(101,91,o),
(91,188,qs),
(82,268,o),
(124,320,qs),
(171,377,o),
(256,377,qs),
(306,377,o),
(385,333,o),
(393,302,qs),
(397,285,o),
(382,271,o),
(368,278,qs),
(306,306,o),
(271,306,qs),
(214,306,o),
(159,243,o),
(168,188,qs),
(176,141,o),
(255,74,o),
(302,74,qs),
(420,74,ls),
(449,74,o),
(492,43,o),
(496,18,qs),
(497,12,ls),
(499,0,o),
(486,0,qs),
(299,0,ls),
(238,0,o),
(209,-35,qs),
(180,-72,o),
(191,-130,qs),
(199,-179,o),
(237,-215,qs),
(285,-258,o),
(359,-260,qs),
(412,-261,o),
(454,-248,qs),
(478,-241,o),
(512,-221,qs),
(523,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
76 1 7 8 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 10 3 2 105 0 10 0 9 8 10 9 105 0 8 0 7 6 8 7 103 0 6 11 11 6 89 0 6 6 11 97 0 11 6 11 81 13 12 1 0 84 82 71 69 63 61 57 54 50 47 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 6 22 
CALL[ ]	/* CallFunction */";
};
width = 504;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,565,o),
(188,584,qs),
(184,604,o),
(205,630,o),
(224,630,qs),
(242,630,o),
(272,604,o),
(275,584,qs),
(279,565,o),
(258,540,o),
(240,540,qs),
(221,540,o)
);
},
{
closed = 1;
nodes = (
(143,470,o),
(140,489,qs),
(137,508,o),
(157,534,o),
(175,534,qs),
(194,534,o),
(224,508,o),
(228,489,qs),
(231,470,o),
(210,444,o),
(191,444,qs),
(172,444,o)
);
},
{
closed = 1;
nodes = (
(283,534,o),
(302,534,qs),
(320,534,o),
(350,508,o),
(353,489,qs),
(357,470,o),
(336,444,o),
(318,444,qs),
(299,444,o),
(269,470,o),
(265,489,qs),
(262,508,o)
);
},
{
closed = 1;
nodes = (
(544,-226,o),
(540,-238,qs),
(529,-279,o),
(431,-332,o),
(367,-331,qs),
(268,-330,o),
(200,-277,qs),
(126,-220,o),
(113,-127,qs),
(103,-62,o),
(131,-11,qs),
(163,47,o),
(234,67,q),
(123,184,ls),
(101,207,o),
(95,231,qs),
(79,288,o),
(133,331,qs),
(192,377,o),
(284,377,qs),
(355,377,o),
(414,346,qs),
(487,308,o),
(495,249,qs),
(500,218,o),
(484,192,qs),
(414,74,l),
(652,74,l),
(665,0,l),
(397,0,ls),
(353,0,o),
(328,16,q),
(313,2,o),
(281,-2,qs),
(232,-8,o),
(186,-76,o),
(195,-130,qs),
(204,-179,o),
(242,-215,qs),
(290,-258,o),
(364,-260,qs),
(417,-261,o),
(459,-248,qs),
(483,-241,o),
(517,-221,qs),
(528,-214,o)
);
},
{
closed = 1;
nodes = (
(207,206,qs),
(210,203,o),
(211,202,qs),
(318,89,ls),
(325,81,o),
(330,89,qs),
(397,202,ls),
(411,225,o),
(408,239,qs),
(403,267,o),
(331,306,o),
(285,306,qs),
(237,306,o),
(179,268,o),
(184,239,qs),
(186,227,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
68 49 2 7 8 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 11 8 9 11 105 0 8 0 7 6 8 7 103 0 6 10 10 6 89 0 6 6 10 97 0 10 6 10 81 13 12 1 0 86 84 77 75 62 60 54 53 52 50 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 6 22 
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,566,o),
(128,585,qs),
(124,604,o),
(145,631,o),
(164,631,qs),
(183,631,o),
(212,605,o),
(216,585,qs),
(219,566,o),
(199,541,o),
(180,541,qs),
(161,541,o)
);
},
{
closed = 1;
nodes = (
(84,470,o),
(80,489,qs),
(77,509,o),
(97,535,o),
(115,535,qs),
(134,535,o),
(165,509,o),
(168,489,qs),
(171,470,o),
(150,445,o),
(131,445,qs),
(113,445,o)
);
},
{
closed = 1;
nodes = (
(223,535,o),
(242,535,qs),
(260,535,o),
(290,509,o),
(294,489,qs),
(297,470,o),
(277,445,o),
(258,445,qs),
(239,445,o),
(209,470,o),
(206,489,qs),
(202,509,o)
);
},
{
closed = 1;
nodes = (
(479,0,o),
(466,0,qs),
(6,0,l),
(-7,74,l),
(125,74,l),
(78,119,o),
(70,188,qs),
(62,268,o),
(104,320,qs),
(150,377,o),
(235,377,qs),
(285,377,o),
(365,333,o),
(372,302,qs),
(376,285,o),
(362,271,o),
(347,278,qs),
(286,306,o),
(250,306,qs),
(194,306,o),
(138,243,o),
(147,188,qs),
(156,141,o),
(234,74,o),
(282,74,qs),
(399,74,ls),
(429,74,o),
(471,43,o),
(476,18,qs),
(477,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 8 3 2 105 0 8 0 7 6 8 7 105 9 1 6 10 10 6 87 9 1 6 6 10 95 0 10 6 10 79 13 12 1 0 64 62 61 60 55 53 47 45 41 38 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 13 6 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,565,o),
(157,584,qs),
(154,604,o),
(175,630,o),
(194,630,qs),
(212,630,o),
(241,604,o),
(245,584,qs),
(249,565,o),
(228,540,o),
(210,540,qs),
(191,540,o)
);
},
{
closed = 1;
nodes = (
(113,470,o),
(110,489,qs),
(106,508,o),
(126,534,o),
(145,534,qs),
(164,534,o),
(194,508,o),
(197,489,qs),
(201,470,o),
(180,444,o),
(161,444,qs),
(142,444,o)
);
},
{
closed = 1;
nodes = (
(253,534,o),
(271,534,qs),
(290,534,o),
(320,508,o),
(323,489,qs),
(326,470,o),
(306,444,o),
(287,444,qs),
(268,444,o),
(239,470,o),
(235,489,qs),
(232,508,o)
);
},
{
closed = 1;
nodes = (
(628,0,l),
(359,0,ls),
(314,0,o),
(290,16,q),
(274,1,o),
(241,0,qs),
(6,0,l),
(-7,74,l),
(190,74,l),
(86,184,ls),
(64,207,o),
(58,231,qs),
(42,288,o),
(97,331,qs),
(156,377,o),
(247,377,qs),
(318,377,o),
(377,346,qs),
(450,308,o),
(458,249,qs),
(463,218,o),
(447,192,qs),
(377,74,l),
(615,74,l)
);
},
{
closed = 1;
nodes = (
(374,225,o),
(371,239,qs),
(367,267,o),
(294,306,o),
(249,306,qs),
(200,306,o),
(142,268,o),
(147,239,qs),
(149,227,o),
(170,206,qs),
(173,203,o),
(174,202,qs),
(281,89,ls),
(288,81,o),
(293,89,qs),
(360,202,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
55 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 8 8 7 87 14 10 2 7 7 8 95 9 1 8 7 8 79 36 36 13 12 1 0 71 69 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,0,o),
(120,14,qs),
(37,486,ls),
(27,545,o),
(69,553,qs),
(80,556,o),
(103,556,qs),
(191,556,o),
(247,498,qs),
(250,495,o),
(251,498,q),
(281,556,o),
(367,556,qs),
(418,556,ls),
(425,556,o),
(427,548,qs),
(428,542,ls),
(437,496,o),
(394,488,qs),
(393,488,o),
(386,487,qs),
(372,486,o),
(368,486,qs),
(335,482,o),
(296,443,o),
(280,398,qs),
(276,386,o),
(270,386,qs),
(263,386,o),
(254,398,qs),
(204,467,o),
(139,483,qs),
(127,486,o),
(117,485,qs),
(113,484,o),
(114,481,q),
(196,14,ls),
(198,0,o),
(185,0,qs),
(136,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
28 1 2 3 1 76 0 1 2 0 2 1 0 128 0 2 2 3 97 4 1 3 3 23 77 5 1 0 0 24 0 78 1 0 33 31 27 24 18 16 11 10 0 39 1 38 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,556,o),
(353,556,qs),
(358,556,o),
(362,548,qs),
(390,482,o),
(345,446,q),
(189,297,l),
(127,231,o),
(137,168,qs),
(145,125,o),
(211,71,o),
(257,71,qs),
(531,71,ls),
(559,71,o),
(600,42,o),
(604,18,qs),
(605,12,ls),
(608,0,o),
(594,0,qs),
(264,0,ls),
(195,0,o),
(142,35,qs),
(75,80,o),
(61,164,qs),
(51,220,o),
(92,313,o),
(153,373,qs),
(344,551,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 40 52 54 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 613;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,302,o),
(28,310,qs),
(36,360,ls),
(38,368,o),
(45,368,qs),
(104,368,l),
(116,442,ls),
(138,562,o),
(234,562,qs),
(266,562,o),
(307,522,o),
(307,490,q),
(308,484,o),
(300,471,o),
(295,471,qs),
(290,471,o),
(284,477,qs),
(263,498,o),
(240,498,qs),
(199,498,o),
(189,438,qs),
(176,368,l),
(264,368,ls),
(271,368,o),
(269,360,qs),
(260,310,ls),
(259,302,o),
(252,302,qs),
(165,302,l),
(113,9,ls),
(111,0,o),
(104,0,qs),
(46,0,ls),
(39,0,o),
(40,9,qs),
(92,302,l),
(33,302,ls)
);
},
{
closed = 1;
nodes = (
(293,9,qs),
(355,360,ls),
(356,368,o),
(364,368,qs),
(369,368,ls),
(429,368,o),
(416,299,qs),
(365,9,ls),
(364,0,o),
(356,0,qs),
(299,0,ls),
(291,0,o)
);
},
{
closed = 1;
nodes = (
(390,513,o),
(411,513,qs),
(450,513,o),
(450,476,qs),
(449,454,o),
(419,422,o),
(397,422,qs),
(360,422,o),
(360,460,qs),
(360,482,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
24 1 4 3 1 76 0 4 3 10 3 4 10 128 0 11 0 10 2 11 10 105 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 9 6 2 2 2 42 77 13 8 2 0 0 40 0 78 39 37 0 0 57 55 52 50 45 42 37 48 39 48 0 36 0 35 34 36 34 34 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,302,o),
(28,310,qs),
(36,360,ls),
(38,368,o),
(45,368,qs),
(104,368,l),
(116,442,ls),
(138,562,o),
(234,562,qs),
(266,562,o),
(307,522,o),
(307,490,q),
(308,484,o),
(300,471,o),
(295,471,qs),
(290,471,o),
(284,477,qs),
(263,498,o),
(240,498,qs),
(199,498,o),
(189,438,qs),
(176,368,l),
(264,368,ls),
(271,368,o),
(269,360,qs),
(260,310,ls),
(259,302,o),
(252,302,qs),
(165,302,l),
(113,9,ls),
(111,0,o),
(104,0,qs),
(46,0,ls),
(39,0,o),
(40,9,qs),
(92,302,l),
(33,302,ls)
);
},
{
closed = 1;
nodes = (
(309,107,qs),
(311,117,l),
(386,547,ls),
(388,556,o),
(396,556,qs),
(401,556,ls),
(460,556,o),
(449,487,qs),
(382,111,ls),
(382,109,o),
(381,105,qs),
(380,96,o),
(380,93,qs),
(380,59,o),
(414,59,qs),
(436,59,o),
(461,83,qs),
(467,89,o),
(472,89,qs),
(479,89,o),
(479,81,qs),
(479,44,o),
(422,-9,o),
(382,-9,qs),
(307,-9,o),
(305,74,qs),
(305,84,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
24 1 4 3 50 1 9 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 10 10 0 98 8 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 0 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 11 11 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 0 8 8 49 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 59 56 49 47 44 43 40 38 0 36 0 35 34 36 34 34 35 34 50 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-38,644,q),
(-38,642,o),
(-40,639,qs),
(-44,632,o),
(-46,630,q),
(-49,629,o),
(-50,629,qs),
(-54,629,o),
(-58,633,q),
(-66,644,o),
(-68,657,qs),
(-71,676,o),
(-46,702,o),
(-26,701,qs),
(-16,700,o),
(-7,697,qs),
(-4,696,o),
(-2,696,qs),
(1,696,o),
(2,698,q),
(2,699,l),
(30,758,o),
(83,758,qs),
(113,758,o),
(150,725,o),
(151,698,qs),
(153,668,o),
(117,630,o),
(87,630,qs),
(66,630,o),
(25,645,qs),
(-8,657,o),
(-19,657,qs),
(-30,657,o)
);
},
{
closed = 1;
nodes = (
(109,701,qs),
(105,719,o),
(84,719,qs),
(60,719,o),
(43,683,q),
(66,673,o),
(85,673,qs),
(114,673,o)
);
},
{
closed = 1;
nodes = (
(118,0,o),
(88,168,qs),
(31,488,ls),
(19,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(96,548,qs),
(164,169,ls),
(180,74,o),
(261,74,qs),
(322,74,l),
(335,0,l),
(274,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
36 15 2 4 3 1 76 0 2 0 5 3 2 5 105 0 3 9 1 0 1 3 0 105 10 1 4 0 1 7 4 1 105 0 7 7 23 77 0 6 6 8 95 11 1 8 8 24 8 78 42 42 35 34 1 0 42 55 42 54 51 48 45 43 39 37 34 41 35 41 20 19 11 9 5 3 0 33 1 33 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
},
{
closed = 1;
nodes = (
(419,-165,o),
(400,-165,qs),
(382,-165,o),
(352,-139,o),
(348,-119,qs),
(345,-100,o),
(365,-75,o),
(384,-75,qs),
(403,-75,o),
(433,-100,o),
(436,-119,qs),
(440,-139,o)
);
},
{
closed = 1;
nodes = (
(558,-100,o),
(562,-119,qs),
(565,-139,o),
(545,-165,o),
(527,-165,qs),
(508,-165,o),
(478,-139,o),
(474,-119,qs),
(471,-100,o),
(492,-75,o),
(511,-75,qs),
(529,-75,o)
);
},
{
closed = 1;
nodes = (
(514,-196,o),
(518,-215,qs),
(521,-234,o),
(501,-261,o),
(482,-261,qs),
(463,-261,o),
(433,-234,o),
(430,-215,qs),
(426,-196,o),
(447,-171,o),
(466,-171,qs),
(485,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 96 5 1 4 4 24 4 78 63 62 51 50 1 0 69 67 62 73 63 73 57 55 50 61 51 61 48 46 42 40 36 34 32 29 22 20 14 11 8 5 0 37 1 37 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls)
);
},
{
closed = 1;
nodes = (
(88,-165,o),
(69,-165,qs),
(50,-165,o),
(21,-139,o),
(17,-119,qs),
(14,-100,o),
(34,-75,o),
(52,-75,qs),
(71,-75,o),
(101,-100,o),
(105,-119,qs),
(108,-139,o)
);
},
{
closed = 1;
nodes = (
(214,-165,o),
(195,-165,qs),
(176,-165,o),
(146,-139,o),
(142,-119,qs),
(139,-100,o),
(160,-75,o),
(179,-75,qs),
(198,-75,o),
(227,-100,o),
(230,-119,qs),
(234,-139,o)
);
},
{
closed = 1;
nodes = (
(183,-196,o),
(186,-215,qs),
(190,-234,o),
(169,-261,o),
(151,-261,qs),
(132,-261,o),
(102,-234,o),
(99,-215,qs),
(95,-196,o),
(116,-171,o),
(135,-171,qs),
(153,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 0 1 0 133 5 1 3 6 1 4 7 3 4 105 9 1 7 0 8 7 8 101 0 1 1 2 98 0 2 2 24 2 78 41 40 47 45 40 51 41 51 36 36 36 38 33 35 49 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
},
{
closed = 1;
nodes = (
(104,-165,o),
(85,-165,qs),
(67,-165,o),
(37,-139,o),
(34,-119,qs),
(30,-100,o),
(51,-75,o),
(69,-75,qs),
(88,-75,o),
(118,-100,o),
(121,-119,qs),
(125,-139,o)
);
},
{
closed = 1;
nodes = (
(244,-100,o),
(247,-119,qs),
(251,-139,o),
(230,-165,o),
(212,-165,qs),
(193,-165,o),
(163,-139,o),
(159,-119,qs),
(156,-100,o),
(177,-75,o),
(196,-75,qs),
(214,-75,o)
);
},
{
closed = 1;
nodes = (
(199,-196,o),
(203,-215,qs),
(206,-234,o),
(186,-261,o),
(167,-261,qs),
(149,-261,o),
(119,-234,o),
(115,-215,qs),
(112,-196,o),
(132,-171,o),
(151,-171,qs),
(170,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
17 1 3 0 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 98 4 1 3 3 24 3 78 47 46 35 34 1 0 53 51 46 57 47 57 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 5 0 21 1 21 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,431,o),
(317,431,qs),
(321,431,l),
(297,562,ls),
(288,611,o),
(325,611,qs),
(328,611,ls),
(336,611,o),
(337,603,qs),
(347,552,l),
(384,552,ls),
(473,552,o),
(486,478,qs),
(494,435,o),
(452,384,o),
(409,384,qs),
(291,384,ls),
(282,384,o),
(280,392,qs),
(279,397,ls)
);
},
{
closed = 1;
nodes = (
(362,468,l),
(368,431,l),
(413,431,ls),
(444,431,o),
(436,468,qs),
(430,506,o),
(396,506,qs),
(355,506,l)
);
},
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
61 1 10 6 1 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 5 1 3 0 0 7 3 0 104 12 1 4 4 1 97 0 1 1 23 77 8 13 2 6 6 10 96 11 1 10 10 24 10 78 29 28 21 20 64 62 60 57 50 48 42 39 36 33 28 65 29 65 25 23 20 27 21 27 34 50 35 49 14 7 26 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,444,o),
(90,444,qs),
(-28,444,ls),
(-37,444,o),
(-39,452,qs),
(-40,456,ls),
(-47,490,o),
(-2,490,qs),
(2,490,l),
(-22,621,ls),
(-31,670,o),
(6,670,qs),
(9,670,ls),
(17,670,o),
(18,662,qs),
(28,611,l),
(65,611,ls),
(154,611,o),
(167,537,qs),
(175,494,o)
);
},
{
closed = 1;
nodes = (
(43,527,l),
(49,490,l),
(94,490,ls),
(125,490,o),
(117,527,qs),
(111,565,o),
(77,565,qs),
(36,565,l)
);
},
{
closed = 1;
nodes = (
(181,94,o),
(151,50,qs),
(118,0,o),
(38,0,qs),
(13,0,l),
(0,74,l),
(38,74,ls),
(108,74,o),
(91,169,qs),
(70,291,ls),
(58,358,o),
(118,358,qs),
(126,358,ls),
(134,358,o),
(135,350,qs),
(168,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 1 0 1 133 0 6 3 7 3 6 7 128 0 0 9 1 4 2 0 4 105 5 1 2 0 3 6 2 3 104 0 7 7 8 98 0 8 8 24 8 78 21 20 40 38 37 35 32 29 25 23 20 27 21 27 51 34 50 33 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,444,o),
(90,444,qs),
(-28,444,ls),
(-37,444,o),
(-39,452,qs),
(-40,456,ls),
(-47,490,o),
(-2,490,qs),
(2,490,l),
(-22,621,ls),
(-31,670,o),
(6,670,qs),
(9,670,ls),
(17,670,o),
(18,662,qs),
(28,611,l),
(65,611,ls),
(154,611,o),
(167,537,qs),
(175,494,o)
);
},
{
closed = 1;
nodes = (
(43,527,l),
(49,490,l),
(94,490,ls),
(124,490,o),
(117,527,qs),
(111,565,o),
(77,565,qs),
(36,565,l)
);
},
{
closed = 1;
nodes = (
(339,0,l),
(278,0,ls),
(195,-1,o),
(149,46,q),
(115,0,o),
(38,0,qs),
(13,0,l),
(0,74,l),
(38,74,ls),
(108,74,o),
(91,169,qs),
(70,291,ls),
(58,358,o),
(118,358,qs),
(126,358,ls),
(134,358,o),
(135,350,qs),
(168,168,ls),
(176,124,o),
(227,74,o),
(265,74,qs),
(326,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
45 1 9 6 1 76 0 1 0 1 133 0 7 3 6 3 7 6 128 0 0 11 1 4 2 0 4 105 5 1 2 0 3 7 2 3 104 8 12 2 6 6 9 98 10 1 9 9 24 9 78 29 28 21 20 48 46 44 42 41 39 36 33 28 49 29 49 25 23 20 27 21 27 51 34 50 33 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,566,o),
(544,585,qs),
(541,604,o),
(562,631,o),
(581,631,qs),
(599,631,o),
(628,605,o),
(632,585,qs),
(636,566,o),
(615,541,o),
(597,541,qs),
(578,541,o)
);
},
{
closed = 1;
nodes = (
(500,470,o),
(497,489,qs),
(493,509,o),
(513,535,o),
(532,535,qs),
(551,535,o),
(581,509,o),
(584,489,qs),
(588,470,o),
(567,445,o),
(548,445,qs),
(529,445,o)
);
},
{
closed = 1;
nodes = (
(640,535,o),
(658,535,qs),
(677,535,o),
(707,509,o),
(710,489,qs),
(713,470,o),
(693,445,o),
(674,445,qs),
(655,445,o),
(626,471,o),
(622,489,qs),
(619,509,o)
);
},
{
closed = 1;
nodes = (
(1003,-1,l),
(775,-1,ls),
(722,-1,o),
(697,17,q),
(678,-1,o),
(626,-1,qs),
(434,-1,l),
(434,0,l),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(562,74,l),
(536,95,o),
(497,165,o),
(492,200,qs),
(484,267,o),
(516,316,qs),
(556,377,o),
(638,377,qs),
(705,377,o),
(758,337,qs),
(816,294,o),
(832,226,qs),
(842,184,o),
(820,99,o),
(793,74,q),
(990,74,l)
);
},
{
closed = 1;
nodes = (
(766,163,o),
(758,201,qs),
(750,247,o),
(687,306,o),
(646,306,qs),
(605,306,o),
(563,247,o),
(571,201,qs),
(576,163,o),
(643,93,o),
(686,82,q),
(723,93,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
73 1 9 7 1 76 0 8 12 7 12 8 7 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 8 6 12 105 15 11 2 7 7 9 95 10 1 9 9 24 9 78 36 36 13 12 1 0 85 83 36 77 36 77 76 74 72 67 60 58 52 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 973;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,566,o),
(129,584,qs),
(125,604,o),
(146,630,o),
(165,630,qs),
(184,630,o),
(213,604,o),
(217,584,qs),
(220,565,o),
(200,540,o),
(181,540,qs),
(162,540,o)
);
},
{
closed = 1;
nodes = (
(85,470,o),
(81,489,qs),
(78,508,o),
(98,534,o),
(116,534,qs),
(135,534,o),
(166,508,o),
(169,489,qs),
(172,470,o),
(151,444,o),
(132,444,qs),
(114,444,o)
);
},
{
closed = 1;
nodes = (
(224,534,o),
(243,534,qs),
(262,534,o),
(291,508,o),
(295,489,qs),
(298,470,o),
(278,444,o),
(259,444,qs),
(240,444,o),
(210,470,o),
(207,489,qs),
(204,508,o)
);
},
{
closed = 1;
nodes = (
(393,59,qs),
(356,0,o),
(279,0,qs),
(6,0,l),
(-7,74,l),
(119,74,l),
(75,119,o),
(67,188,qs),
(58,266,o),
(91,318,qs),
(129,377,o),
(207,377,qs),
(277,377,o),
(332,331,qs),
(396,277,o),
(412,188,qs),
(425,111,o)
);
},
{
closed = 1;
nodes = (
(335,190,qs),
(326,238,o),
(256,306,o),
(215,306,qs),
(176,306,o),
(138,242,o),
(147,190,qs),
(156,141,o),
(222,74,o),
(263,74,qs),
(354,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 0 6 0 10 7 6 10 105 13 9 2 7 7 8 95 0 8 8 24 8 78 54 53 13 12 1 0 60 58 53 63 54 63 50 48 47 46 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,565,o),
(116,584,qs),
(112,604,o),
(133,630,o),
(152,630,qs),
(170,630,o),
(200,604,o),
(204,584,qs),
(207,565,o),
(187,540,o),
(168,540,qs),
(149,540,o)
);
},
{
closed = 1;
nodes = (
(71,470,o),
(68,489,qs),
(65,508,o),
(85,534,o),
(103,534,qs),
(122,534,o),
(152,508,o),
(156,489,qs),
(159,470,o),
(138,444,o),
(119,444,qs),
(101,444,o)
);
},
{
closed = 1;
nodes = (
(211,534,o),
(230,534,qs),
(248,534,o),
(278,508,o),
(281,489,qs),
(285,470,o),
(264,444,o),
(246,444,qs),
(227,444,o),
(197,470,o),
(194,489,qs),
(190,508,o)
);
},
{
closed = 1;
nodes = (
(576,0,l),
(347,0,ls),
(295,0,o),
(269,18,q),
(251,0,o),
(198,0,qs),
(6,0,l),
(-7,74,l),
(135,74,l),
(109,95,o),
(69,165,o),
(65,201,qs),
(57,268,o),
(89,317,qs),
(128,377,o),
(210,377,qs),
(278,377,o),
(331,338,qs),
(388,295,o),
(405,226,qs),
(414,185,o),
(393,100,o),
(366,74,q),
(562,74,l)
);
},
{
closed = 1;
nodes = (
(338,163,o),
(331,201,qs),
(322,247,o),
(259,306,o),
(219,306,qs),
(178,306,o),
(135,247,o),
(143,201,qs),
(149,163,o),
(216,94,o),
(258,82,q),
(296,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
55 1 8 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 67 65 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,0,o),
(488,37,q),
(445,0,o),
(359,0,qs),
(295,0,ls),
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(349,74,ls),
(405,74,o),
(435,99,q),
(414,126,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(489,144,o),
(516,101,o),
(534,89,qs),
(558,74,o),
(584,74,qs),
(636,74,l),
(649,0,l),
(589,0,ls)
);
},
{
closed = 1;
nodes = (
(361,-101,qs),
(366,-129,o),
(337,-129,qs),
(309,-129,o),
(304,-101,qs),
(302,-89,o),
(316,-72,o),
(327,-72,qs),
(356,-72,o)
);
},
{
closed = 1;
nodes = (
(420,-130,qs),
(391,-130,o),
(386,-101,qs),
(384,-89,o),
(398,-72,o),
(410,-72,qs),
(438,-72,o),
(443,-101,qs),
(448,-130,o)
);
},
{
closed = 1;
nodes = (
(357,-166,qs),
(355,-154,o),
(368,-137,o),
(381,-137,qs),
(409,-137,o),
(415,-166,qs),
(417,-178,o),
(403,-194,o),
(391,-194,qs),
(362,-194,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
22 1 0 2 54 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 11 16 2 9 12 1 10 14 9 10 105 0 14 17 1 13 6 14 13 105 0 6 0 5 6 5 101 4 1 0 0 7 95 15 8 2 7 7 24 7 78 76 75 58 57 0 0 81 79 75 84 76 84 74 72 69 67 63 61 57 65 58 65 0 56 0 55 54 40 38 52 34 35 37 33 18 7 30 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(499,0,o),
(466,0,qs),
(6,0,l),
(-7,74,l),
(401,74,l),
(379,92,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(448,115,o),
(477,90,qs),
(492,76,o),
(515,75,qs),
(523,74,o),
(525,66,qs),
(530,35,o)
);
},
{
closed = 1;
nodes = (
(229,-165,o),
(210,-165,qs),
(192,-165,o),
(162,-139,o),
(159,-119,qs),
(155,-100,o),
(176,-75,o),
(194,-75,qs),
(213,-75,o),
(243,-100,o),
(246,-119,qs),
(250,-139,o)
);
},
{
closed = 1;
nodes = (
(369,-100,o),
(372,-119,qs),
(376,-139,o),
(355,-165,o),
(337,-165,qs),
(318,-165,o),
(288,-139,o),
(284,-119,qs),
(281,-100,o),
(302,-75,o),
(321,-75,qs),
(339,-75,o)
);
},
{
closed = 1;
nodes = (
(324,-196,o),
(328,-215,qs),
(331,-234,o),
(311,-261,o),
(292,-261,qs),
(274,-261,o),
(244,-234,o),
(240,-215,qs),
(237,-196,o),
(257,-171,o),
(276,-171,qs),
(295,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 12 8 2 6 9 1 7 10 6 7 105 13 1 10 0 11 10 11 101 4 1 0 0 5 95 0 5 5 24 5 78 52 51 40 39 58 56 51 62 52 62 46 44 39 50 40 50 36 36 33 19 34 35 36 18 14 7 30 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,0,ls),
(476,0,o),
(435,37,q),
(392,0,o),
(305,0,qs),
(6,0,l),
(-7,74,l),
(296,74,ls),
(352,74,o),
(381,99,q),
(360,129,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(436,144,o),
(463,101,o),
(481,89,qs),
(504,74,o),
(531,74,qs),
(582,74,l),
(596,0,l)
);
},
{
closed = 1;
nodes = (
(229,-165,o),
(210,-165,qs),
(192,-165,o),
(162,-139,o),
(159,-119,qs),
(155,-100,o),
(176,-75,o),
(194,-75,qs),
(213,-75,o),
(243,-100,o),
(246,-119,qs),
(250,-139,o)
);
},
{
closed = 1;
nodes = (
(369,-100,o),
(372,-119,qs),
(376,-139,o),
(355,-165,o),
(337,-165,qs),
(318,-165,o),
(288,-139,o),
(284,-119,qs),
(281,-100,o),
(302,-75,o),
(321,-75,qs),
(339,-75,o)
);
},
{
closed = 1;
nodes = (
(324,-196,o),
(328,-215,qs),
(331,-234,o),
(311,-261,o),
(292,-261,qs),
(274,-261,o),
(244,-234,o),
(240,-215,qs),
(237,-196,o),
(257,-171,o),
(276,-171,qs),
(295,-171,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
21 1 0 2 28 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 13 9 2 7 10 1 8 11 7 8 105 14 1 11 0 12 11 12 101 4 1 0 0 5 95 6 1 5 5 24 5 78 57 56 45 44 63 61 56 67 57 67 51 49 44 55 45 55 36 35 34 33 36 34 35 37 32 15 7 31 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,458,o),
(215,458,qs),
(97,458,ls),
(88,458,o),
(86,466,qs),
(85,470,ls),
(78,504,o),
(123,504,qs),
(127,504,l),
(103,635,ls),
(94,684,o),
(131,684,qs),
(134,684,ls),
(142,684,o),
(143,676,qs),
(153,625,l),
(190,625,ls),
(279,625,o),
(292,551,qs),
(300,508,o)
);
},
{
closed = 1;
nodes = (
(168,541,l),
(174,504,l),
(219,504,ls),
(250,504,o),
(242,541,qs),
(236,579,o),
(202,579,qs),
(161,579,l)
);
},
{
closed = 1;
nodes = (
(565,0,l),
(510,0,ls),
(419,-1,o),
(372,56,q),
(333,0,o),
(260,0,qs),
(124,0,ls),
(110,0,o),
(108,12,qs),
(107,19,ls),
(103,44,o),
(135,74,o),
(165,74,qs),
(245,74,ls),
(287,74,o),
(327,134,o),
(318,183,qs),
(308,240,o),
(245,306,o),
(199,306,qs),
(172,306,o),
(140,293,q),
(139,292,o),
(137,291,qs),
(131,288,o),
(127,288,qs),
(115,288,o),
(113,307,qs),
(109,335,o),
(165,377,o),
(205,377,qs),
(277,377,o),
(326,336,qs),
(382,289,o),
(397,196,q),
(397,192,o),
(398,182,q),
(399,179,l),
(399,174,ls),
(404,129,o),
(458,74,o),
(497,74,qs),
(552,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
66 1 11 6 1 76 0 1 0 1 133 0 8 9 6 9 8 6 128 0 0 13 1 4 2 0 4 105 5 1 2 0 3 7 2 3 104 0 7 0 9 8 7 9 105 10 14 2 6 6 11 97 12 1 11 11 24 11 78 29 28 21 20 69 67 65 62 58 55 51 49 44 43 40 38 28 70 29 70 25 23 20 27 21 27 51 34 50 33 15 7 26 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,555,o),
(75,574,qs),
(71,593,o),
(92,619,o),
(111,619,qs),
(129,619,o),
(159,593,o),
(163,574,qs),
(166,555,o),
(146,529,o),
(127,529,qs),
(108,529,o)
);
},
{
closed = 1;
nodes = (
(30,459,o),
(27,478,qs),
(24,498,o),
(44,524,o),
(62,524,qs),
(81,524,o),
(112,498,o),
(115,478,qs),
(118,459,o),
(97,434,o),
(78,434,qs),
(60,434,o)
);
},
{
closed = 1;
nodes = (
(170,524,o),
(189,524,qs),
(207,524,o),
(237,498,o),
(240,478,qs),
(244,459,o),
(223,434,o),
(205,434,qs),
(186,434,o),
(156,459,o),
(153,478,qs),
(149,498,o)
);
},
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
62 1 11 6 1 76 0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 102 0 6 6 11 95 0 11 11 24 11 78 13 12 1 0 66 64 61 59 56 54 52 50 45 42 38 36 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,490,o),
(57,490,qs),
(61,490,l),
(37,621,ls),
(28,670,o),
(65,670,qs),
(69,670,ls),
(76,670,o),
(78,662,qs),
(87,611,l),
(124,611,ls),
(213,611,o),
(227,537,qs),
(234,494,o),
(193,444,o),
(149,444,qs),
(31,444,ls),
(22,444,o),
(20,452,q),
(20,456,l)
);
},
{
closed = 1;
nodes = (
(102,527,l),
(109,490,l),
(153,490,ls),
(184,490,o),
(177,527,qs),
(170,565,o),
(136,565,qs),
(95,565,l)
);
},
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
54 1 11 6 1 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 4 3 1 4 105 5 1 3 0 0 7 3 0 104 0 8 0 10 8 10 102 0 6 6 11 95 0 11 11 24 11 78 21 20 58 56 53 51 48 46 44 42 37 34 30 28 25 23 20 27 21 27 34 50 35 49 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,0,l),
(848,0,ls),
(760,-1,o),
(713,51,q),
(676,0,o),
(598,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(587,74,ls),
(678,74,o),
(659,181,qs),
(650,228,o),
(587,287,o),
(546,287,qs),
(353,287,ls),
(301,287,o),
(293,329,qs),
(290,347,ls),
(285,376,o),
(302,388,qs),
(513,553,ls),
(518,557,o),
(522,555,qs),
(545,541,o),
(550,493,o),
(531,478,qs),
(382,362,l),
(378,358,o),
(383,358,qs),
(536,358,ls),
(602,358,o),
(654,322,qs),
(723,274,o),
(737,180,qs),
(738,174,ls),
(745,128,o),
(798,74,o),
(836,74,qs),
(890,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
50 1 5 0 1 76 15 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 53 51 49 46 39 37 31 28 25 22 9 7 0 54 1 54 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 873;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(343,358,o),
(395,322,qs),
(465,273,o),
(477,177,qs),
(488,95,o),
(451,48,qs),
(413,0,o),
(339,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 30 28 25 22 9 7 0 31 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(643,0,l),
(588,0,ls),
(500,-1,o),
(454,51,q),
(416,0,o),
(339,0,qs),
(6,0,l),
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(254,554,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(342,358,o),
(394,322,qs),
(463,274,o),
(477,180,qs),
(478,174,ls),
(486,128,o),
(538,74,o),
(576,74,qs),
(630,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
35 1 4 0 1 76 15 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 38 36 34 32 31 29 26 23 9 7 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,514,qs),
(260,516,ls),
(258,531,o),
(272,541,qs),
(435,669,ls),
(440,673,o),
(444,669,qs),
(457,658,o),
(459,646,qs),
(461,631,o),
(443,616,qs),
(285,493,ls),
(266,479,o),
(263,498,qs),
(262,502,o)
);
},
{
closed = 1;
nodes = (
(903,0,l),
(848,0,ls),
(760,-1,o),
(713,51,q),
(676,0,o),
(598,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(587,74,ls),
(678,74,o),
(659,181,qs),
(650,228,o),
(587,287,o),
(546,287,qs),
(353,287,ls),
(301,287,o),
(293,329,qs),
(290,347,ls),
(285,376,o),
(302,388,qs),
(513,553,ls),
(518,557,o),
(522,555,qs),
(545,541,o),
(550,493,o),
(531,478,qs),
(382,362,l),
(378,358,o),
(383,358,qs),
(536,358,ls),
(602,358,o),
(654,322,qs),
(723,274,o),
(737,180,qs),
(738,174,ls),
(745,128,o),
(798,74,o),
(836,74,qs),
(890,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
65 1 5 0 1 76 30 1 1 74 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 97 6 1 5 5 24 5 78 16 15 68 66 64 61 54 52 46 43 40 37 24 22 15 69 16 69 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 881;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,478,o),
(4,498,q),
(2,502,o),
(1,513,q),
(0,515,o),
(0,516,qs),
(-2,531,o),
(12,541,qs),
(175,669,ls),
(180,673,o),
(184,669,qs),
(197,658,o),
(199,646,qs),
(201,631,o),
(183,616,qs),
(25,493,ls)
);
},
{
closed = 1;
nodes = (
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(343,358,o),
(395,322,qs),
(465,273,o),
(477,177,qs),
(488,95,o),
(451,48,qs),
(413,0,o),
(339,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
31 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 17 16 46 44 41 38 25 23 16 47 17 47 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,513,q),
(0,515,o),
(0,516,qs),
(-2,531,o),
(12,541,qs),
(175,669,ls),
(180,673,o),
(184,669,qs),
(197,658,o),
(199,646,qs),
(201,631,o),
(183,616,qs),
(25,493,ls),
(6,478,o),
(4,498,q),
(2,502,o)
);
},
{
closed = 1;
nodes = (
(643,0,l),
(588,0,ls),
(500,-1,o),
(454,51,q),
(416,0,o),
(339,0,qs),
(6,0,l),
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(254,554,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(342,358,o),
(394,322,qs),
(463,274,o),
(477,180,qs),
(478,174,ls),
(486,128,o),
(538,74,o),
(576,74,qs),
(630,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
51 1 4 0 1 76 31 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 17 16 54 52 50 48 47 45 42 39 25 23 16 55 17 55 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,166,l),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
39 1 5 0 1 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 102 0 0 0 5 95 0 5 5 24 5 78 36 40 24 37 53 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,477,qs),
(93,518,o),
(139,524,q),
(125,542,o),
(123,566,qs),
(121,601,o),
(161,645,o),
(195,645,qs),
(246,645,o),
(255,599,qs),
(258,588,o),
(249,589,q),
(247,590,o),
(243,591,q),
(238,594,o),
(236,594,q),
(219,602,o),
(202,601,qs),
(165,599,o),
(170,565,qs),
(173,549,o),
(199,526,o),
(215,526,qs),
(252,526,ls),
(288,526,o),
(293,494,q),
(293,490,l),
(295,482,o),
(285,482,qs),
(182,482,ls),
(147,482,o),
(130,475,qs),
(127,474,o),
(124,472,qs),
(120,470,o),
(118,470,qs),
(113,470,o)
);
},
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
31 1 2 3 33 1 0 2 57 1 8 5 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
31 1 2 3 33 1 1 2 57 1 8 5 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
31 1 2 3 33 1 1 2 57 1 9 10 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 7 7 6 114 0 4 0 3 2 4 3 105 0 2 1 12 2 0 6 2 0 105 0 7 0 11 5 7 11 104 14 10 13 3 5 5 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 0 7 0 6 7 128 0 4 0 3 2 4 3 105 0 2 1 12 2 0 6 2 0 105 0 7 0 11 5 7 11 104 14 10 13 3 5 5 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
12 1 0 1 6 1 0 6 128 0 6 7 1 6 7 126 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 7 0 11 5 7 11 104 14 10 13 3 5 5 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
12 1 0 1 6 1 0 6 128 0 6 7 1 6 7 126 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 7 0 11 5 7 11 104 13 1 5 5 9 95 0 9 9 24 77 14 1 10 10 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
12 1 0 1 6 1 0 6 128 0 6 7 1 6 7 126 0 4 0 3 2 4 3 105 0 2 0 1 0 2 1 103 0 7 0 11 5 7 11 104 14 1 10 0 8 10 8 101 13 1 5 5 9 95 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
63 62 38 37 1 0 68 66 62 71 63 71 60 58 56 54 48 46 44 41 37 61 38 61 29 27 19 17 14 11 8 5 0 36 1 36 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
20 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
20 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 2 1 112 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 7 1 0 0 4 95 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 1 5 0 3 5 3 101 7 1 0 0 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 31 29 25 34 26 34 23 21 19 17 11 9 7 4 0 24 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,21,qs),
(105,-2,o),
(92,-20,qs),
(73,-47,o),
(71,-71,q),
(112,-79,o),
(119,-119,qs),
(122,-140,o),
(98,-169,o),
(79,-169,qs),
(58,-169,o),
(25,-141,o),
(20,-119,qs),
(9,-63,o),
(52,1,q),
(39,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(177,78,o),
(131,34,q),
(128,30,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
16 1 2 1 26 1 3 2 2 76 0 0 1 0 133 0 3 2 3 134 0 1 1 2 98 0 2 2 24 2 78 37 33 35 52 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,-119,qs),
(596,-140,o),
(572,-169,o),
(552,-169,qs),
(532,-169,o),
(499,-141,o),
(494,-119,qs),
(483,-63,o),
(525,0,q),
(398,0,ls),
(384,0,o),
(387,-22,q),
(389,-29,l),
(399,-104,o),
(374,-145,q),
(342,-214,o),
(250,-214,qs),
(175,-214,o),
(122,-166,qs),
(66,-119,o),
(51,-31,qs),
(51,-30,o),
(50,-29,q),
(47,-10,o),
(46,0,q),
(6,0,l),
(-7,74,l),
(32,74,ls),
(60,74,o),
(79,97,qs),
(87,106,o),
(89,108,qs),
(97,117,o),
(104,117,qs),
(124,117,o),
(122,84,qs),
(120,42,o),
(123,11,qs),
(130,-60,o),
(191,-143,o),
(236,-143,qs),
(330,-143,o),
(310,-23,qs),
(301,34,o),
(319,74,o),
(355,74,qs),
(672,74,l),
(686,0,l),
(580,0,l),
(566,-19,ls),
(547,-46,o),
(545,-70,q),
(586,-78,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 3 1 3 133 0 8 2 6 2 8 6 128 0 2 0 6 2 6 101 4 1 1 1 0 95 7 5 2 0 0 24 0 78 36 37 39 17 36 37 35 33 19 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(860,0,l),
(805,0,ls),
(718,-1,o),
(670,52,q),
(636,0,o),
(560,0,qs),
(416,0,ls),
(366,0,o),
(342,16,q),
(325,0,o),
(275,0,qs),
(119,0,ls),
(105,0,o),
(103,12,qs),
(102,19,ls),
(98,44,o),
(130,74,o),
(160,74,qs),
(222,74,l),
(165,115,o),
(154,197,qs),
(142,273,o),
(181,320,q),
(109,329,o),
(95,390,qs),
(94,396,ls),
(92,406,o),
(105,402,qs),
(135,394,o),
(164,389,qs),
(212,382,o),
(275,380,qs),
(359,378,o),
(449,377,qs),
(545,375,o),
(608,332,qs),
(684,280,o),
(694,182,qs),
(695,173,ls),
(700,129,o),
(754,74,o),
(793,74,qs),
(847,74,l)
);
},
{
closed = 1;
nodes = (
(636,74,o),
(617,183,qs),
(595,303,o),
(456,307,qs),
(450,307,o),
(437,308,qs),
(422,308,o),
(415,308,q),
(455,265,o),
(465,197,qs),
(475,121,o),
(429,74,q),
(550,74,ls)
);
},
{
closed = 1;
nodes = (
(215,246,o),
(223,201,qs),
(230,159,o),
(290,94,o),
(330,84,q),
(366,94,o),
(402,158,o),
(395,201,qs),
(387,246,o),
(328,306,o),
(291,306,qs),
(254,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
19 1 6 1 62 1 0 6 38 33 2 3 0 3 76 0 1 12 9 7 3 6 0 1 6 105 11 8 2 10 4 0 0 3 95 5 4 2 3 3 24 3 78 57 56 43 43 1 0 56 67 57 67 43 55 43 54 52 50 49 47 41 39 37 34 32 29 25 23 11 7 0 42 1 42 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 834;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,55,qs),
(552,0,o),
(474,0,qs),
(330,0,ls),
(281,0,o),
(257,16,q),
(239,0,o),
(189,0,qs),
(6,0,l),
(-7,74,l),
(136,74,l),
(79,115,o),
(68,197,qs),
(57,273,o),
(96,320,q),
(23,329,o),
(9,390,qs),
(8,396,ls),
(7,406,o),
(19,402,qs),
(51,393,o),
(79,389,qs),
(126,382,o),
(190,380,qs),
(271,378,o),
(363,377,qs),
(459,375,o),
(523,332,qs),
(598,280,o),
(608,182,qs),
(616,102,o)
);
},
{
closed = 1;
nodes = (
(550,74,o),
(531,183,qs),
(510,303,o),
(370,307,qs),
(364,307,o),
(351,307,qs),
(336,308,o),
(329,308,q),
(370,265,o),
(379,197,qs),
(389,121,o),
(344,74,q),
(465,74,ls)
);
},
{
closed = 1;
nodes = (
(130,246,o),
(137,201,qs),
(145,159,o),
(204,94,o),
(244,84,q),
(281,94,o),
(317,158,o),
(309,201,qs),
(301,246,o),
(243,306,o),
(205,306,qs),
(168,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
15 1 4 0 50 1 1 4 24 1 2 1 3 76 0 0 8 6 2 4 1 0 4 105 7 5 2 1 1 2 95 3 1 2 2 24 2 78 45 44 31 31 44 55 45 55 31 43 31 42 87 50 33 28 67 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(775,0,l),
(720,0,ls),
(632,-1,o),
(585,52,q),
(550,0,o),
(474,0,qs),
(330,0,ls),
(281,0,o),
(257,16,q),
(239,0,o),
(189,0,qs),
(6,0,l),
(-7,74,l),
(136,74,l),
(79,115,o),
(68,197,qs),
(57,273,o),
(96,320,q),
(23,329,o),
(9,390,qs),
(8,396,ls),
(7,406,o),
(19,402,qs),
(50,394,o),
(79,389,qs),
(126,382,o),
(190,380,qs),
(274,378,o),
(363,377,qs),
(459,375,o),
(523,332,qs),
(598,280,o),
(608,182,qs),
(609,173,ls),
(614,129,o),
(668,74,o),
(707,74,qs),
(762,74,l)
);
},
{
closed = 1;
nodes = (
(550,74,o),
(531,183,qs),
(510,303,o),
(370,307,qs),
(364,307,o),
(351,308,qs),
(336,308,o),
(329,308,q),
(370,265,o),
(379,197,qs),
(389,121,o),
(344,74,q),
(465,74,ls)
);
},
{
closed = 1;
nodes = (
(130,246,o),
(137,201,qs),
(145,159,o),
(204,94,o),
(244,84,q),
(281,94,o),
(317,158,o),
(309,201,qs),
(301,246,o),
(242,306,o),
(205,306,qs),
(168,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
19 1 6 1 57 1 0 6 33 28 2 3 0 3 76 0 1 12 9 7 3 6 0 1 6 105 11 8 2 10 4 0 0 3 95 5 4 2 3 3 24 3 78 52 51 38 38 1 0 51 62 52 62 38 50 38 49 47 45 44 42 36 34 32 29 27 25 24 23 11 7 0 37 1 37 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(587,0,l),
(304,0,ls),
(243,0,o),
(214,-35,qs),
(185,-72,o),
(196,-130,qs),
(204,-179,o),
(243,-215,qs),
(290,-258,o),
(364,-260,qs),
(417,-261,o),
(459,-248,qs),
(483,-241,o),
(517,-221,qs),
(528,-214,o),
(544,-226,o),
(541,-238,qs),
(529,-279,o),
(431,-332,o),
(367,-331,qs),
(269,-330,o),
(200,-277,qs),
(126,-220,o),
(113,-127,qs),
(102,-46,o),
(143,8,qs),
(193,74,o),
(300,74,qs),
(574,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 2 0 1 2 1 101 4 1 0 0 3 95 0 3 3 24 3 78 1 0 27 25 19 17 9 7 0 28 1 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,154,qs),
(171,195,o),
(218,202,q),
(204,219,o),
(202,243,qs),
(199,278,o),
(240,323,o),
(274,323,qs),
(325,323,o),
(334,277,qs),
(337,266,o),
(328,267,qs),
(326,267,o),
(321,270,q),
(317,271,o),
(315,272,qs),
(298,280,o),
(281,279,qs),
(244,277,o),
(249,243,qs),
(252,227,o),
(278,204,o),
(294,204,qs),
(331,204,ls),
(367,204,o),
(371,172,qs),
(372,168,ls),
(374,159,o),
(364,159,qs),
(260,159,ls),
(226,159,o),
(209,153,qs),
(206,152,o),
(203,150,qs),
(198,148,o),
(196,148,qs),
(192,148,o)
);
},
{
closed = 1;
nodes = (
(544,-226,o),
(541,-238,qs),
(529,-279,o),
(431,-332,o),
(367,-331,qs),
(269,-330,o),
(200,-277,qs),
(126,-220,o),
(113,-127,qs),
(102,-46,o),
(143,8,qs),
(193,74,o),
(300,74,qs),
(574,74,l),
(587,0,l),
(304,0,ls),
(243,0,o),
(214,-35,qs),
(185,-72,o),
(196,-130,qs),
(204,-179,o),
(243,-215,qs),
(290,-258,o),
(364,-260,qs),
(417,-261,o),
(459,-248,qs),
(483,-241,o),
(517,-221,qs),
(528,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
33 1 0 1 1 76 0 3 0 2 1 3 2 105 0 1 0 0 6 1 0 103 0 4 0 7 4 7 101 0 6 6 5 95 0 5 5 24 5 78 38 33 38 43 40 35 51 53 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 554;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,501,o),
(197,479,qs),
(201,459,o),
(178,429,o),
(157,429,qs),
(137,429,o),
(103,458,o),
(99,479,qs),
(95,501,o),
(119,529,o),
(140,529,qs),
(160,529,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,-98,o),
(136,-119,qs),
(140,-140,o),
(117,-169,o),
(96,-169,qs),
(76,-169,o),
(42,-140,o),
(38,-119,qs),
(34,-98,o),
(58,-69,o),
(79,-69,qs),
(99,-69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(690,74,l),
(703,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 0 0 0 1 95 5 1 1 1 24 1 78 19 40 40 33 36 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls)
);
},
{
closed = 1;
nodes = (
(88,-165,o),
(69,-165,qs),
(50,-165,o),
(21,-139,o),
(17,-119,qs),
(14,-100,o),
(34,-75,o),
(52,-75,qs),
(71,-75,o),
(101,-100,o),
(105,-119,qs),
(108,-139,o)
);
},
{
closed = 1;
nodes = (
(214,-165,o),
(195,-165,qs),
(176,-165,o),
(146,-139,o),
(142,-119,qs),
(139,-100,o),
(160,-75,o),
(179,-75,qs),
(198,-75,o),
(227,-100,o),
(230,-119,qs),
(234,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 0 1 0 133 5 1 3 6 1 4 3 4 101 0 1 1 2 98 0 2 2 24 2 78 36 36 36 38 33 35 49 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
},
{
closed = 1;
nodes = (
(104,-165,o),
(85,-165,qs),
(67,-165,o),
(37,-139,o),
(34,-119,qs),
(30,-100,o),
(51,-75,o),
(69,-75,qs),
(88,-75,o),
(118,-100,o),
(121,-119,qs),
(125,-139,o)
);
},
{
closed = 1;
nodes = (
(244,-100,o),
(247,-119,qs),
(251,-139,o),
(230,-165,o),
(212,-165,qs),
(193,-165,o),
(163,-139,o),
(159,-119,qs),
(156,-100,o),
(177,-75,o),
(196,-75,qs),
(214,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
17 1 3 0 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 1 0 41 39 34 45 35 45 32 30 26 24 20 18 16 14 13 11 8 5 0 21 1 21 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,94,o),
(875,50,qs),
(841,0,o),
(761,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(750,74,ls),
(788,74,o),
(822,124,o),
(814,169,qs),
(793,291,ls),
(781,358,o),
(841,358,qs),
(849,358,ls),
(857,358,o),
(859,350,qs),
(891,168,ls)
);
},
{
closed = 1;
nodes = (
(842,-97,o),
(846,-118,qs),
(850,-139,o),
(826,-168,o),
(806,-168,qs),
(785,-168,o),
(751,-139,o),
(748,-118,qs),
(744,-97,o),
(767,-68,o),
(788,-68,qs),
(809,-68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 0 4 0 133 0 4 1 4 133 9 1 7 0 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 96 6 1 2 2 24 2 78 50 49 56 54 49 60 50 60 35 40 40 33 36 52 49 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,94,o),
(875,50,qs),
(841,0,o),
(761,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(750,74,ls),
(788,74,o),
(822,124,o),
(814,169,qs),
(793,291,ls),
(781,358,o),
(841,358,qs),
(849,358,ls),
(857,358,o),
(859,350,qs),
(891,168,ls)
);
},
{
closed = 1;
nodes = (
(842,-97,o),
(846,-118,qs),
(850,-139,o),
(826,-168,o),
(806,-168,qs),
(785,-168,o),
(751,-139,o),
(748,-118,qs),
(744,-97,o),
(767,-68,o),
(788,-68,qs),
(809,-68,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
0 0 4 0 133 0 4 1 4 133 13 1 7 0 8 5 7 8 105 0 3 0 5 9 3 5 105 15 11 14 3 9 12 1 10 9 10 101 0 1 1 2 96 6 1 2 2 24 2 78 74 73 62 61 50 49 80 78 73 84 74 84 68 66 61 72 62 72 56 54 49 60 50 60 35 40 40 33 36 52 49 16 7 29 
CALL[ ]	/* CallFunction */";
};
width = 932;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(759,468,o),
(755,489,qs),
(752,511,o),
(775,539,o),
(796,539,qs),
(817,539,o),
(850,510,o),
(854,489,qs),
(857,469,o),
(834,439,o),
(814,439,qs),
(793,439,o)
);
},
{
closed = 1;
nodes = (
(1007,59,qs),
(969,0,o),
(892,0,qs),
(703,0,l),
(703,-1,l),
(674,-1,l),
(666,-98,o),
(608,-153,qs),
(543,-215,o),
(423,-215,qs),
(290,-215,o),
(207,-147,qs),
(123,-79,o),
(105,40,qs),
(93,126,o),
(126,187,qs),
(142,216,o),
(165,232,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,214,qs),
(161,135,o),
(177,55,qs),
(193,-31,o),
(253,-84,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,-1,q),
(488,-1,ls),
(473,-1,o),
(471,12,qs),
(470,18,ls),
(466,43,o),
(498,74,o),
(528,74,qs),
(606,74,l),
(732,74,l),
(689,118,o),
(681,188,qs),
(671,266,o),
(704,317,qs),
(742,377,o),
(821,377,qs),
(890,377,o),
(946,331,qs),
(1010,277,o),
(1025,188,qs),
(1039,111,o)
);
},
{
closed = 1;
nodes = (
(948,190,qs),
(939,238,o),
(870,306,o),
(829,306,qs),
(789,306,o),
(752,242,o),
(761,190,qs),
(769,141,o),
(836,74,o),
(876,74,qs),
(968,74,o)
);
},
{
closed = 1;
nodes = (
(430,-305,o),
(434,-324,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-324,qs),
(342,-305,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-305,o),
(559,-324,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-324,qs),
(468,-305,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 6 10 3 10 6 3 128 0 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 18 13 17 3 11 14 1 12 11 12 101 15 1 0 0 1 97 0 1 1 23 77 16 9 2 3 3 4 95 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 0 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 18 13 17 3 11 14 1 12 11 12 101 16 9 2 3 3 4 95 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
88 87 76 75 65 64 1 0 94 92 87 98 88 98 82 80 75 86 76 86 71 69 64 74 65 74 61 57 54 52 44 42 34 32 31 29 25 22 17 15 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1059;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 0 4 0 133 0 4 1 4 133 9 11 2 7 10 1 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 96 6 1 2 2 24 2 78 49 48 70 68 64 62 55 53 48 59 49 59 35 40 40 33 36 51 49 12 7 29 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(901,94,o),
(871,50,qs),
(838,0,o),
(758,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(758,74,ls),
(828,74,o),
(811,169,qs),
(790,291,ls),
(778,358,o),
(838,358,qs),
(846,358,ls),
(854,358,o),
(855,350,qs),
(888,168,ls)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o),
(953,-100,o),
(957,-119,qs),
(960,-139,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 0 4 0 133 0 4 1 4 133 9 15 2 7 10 1 8 5 7 8 105 0 3 0 5 11 3 5 105 17 13 16 3 11 14 1 12 11 12 101 0 1 1 2 96 6 1 2 2 24 2 78 85 84 73 72 49 48 91 89 84 95 85 95 79 77 72 83 73 83 70 68 64 62 55 53 48 59 49 59 35 40 40 33 36 51 49 18 7 29 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-14,706,qs),
(-28,727,o),
(-12,769,o),
(10,769,qs),
(27,769,o),
(60,746,qs),
(74,736,o),
(79,736,qs),
(84,736,o),
(89,741,qs),
(100,752,l),
(63,779,o),
(60,807,qs),
(57,835,o),
(92,872,o),
(122,872,qs),
(154,872,o),
(192,834,o),
(191,804,qs),
(189,774,o),
(162,748,q),
(181,729,o),
(162,712,qs),
(157,707,o),
(150,713,qs),
(136,724,l),
(111,704,ls),
(99,693,o),
(84,693,qs),
(70,693,o),
(39,714,q),
(37,716,o),
(35,718,qs),
(23,727,o),
(18,727,qs),
(11,727,o),
(5,712,qs),
(0,699,o),
(-4,699,qs),
(-10,699,o)
);
},
{
closed = 1;
nodes = (
(100,808,qs),
(104,793,o),
(130,774,q),
(150,790,o),
(151,808,qs),
(152,836,o),
(125,836,qs),
(95,836,o)
);
},
{
closed = 1;
nodes = (
(258,512,o),
(224,466,o),
(188,466,qs),
(152,466,o),
(129,486,q),
(112,466,o),
(79,466,qs),
(2,466,o),
(-15,552,qs),
(-20,582,ls),
(-29,629,o),
(7,629,qs),
(14,629,ls),
(20,629,o),
(21,623,qs),
(35,547,ls),
(41,510,o),
(71,510,qs),
(100,510,o),
(93,547,qs),
(87,582,ls),
(79,629,o),
(116,629,qs),
(122,629,ls),
(129,629,o),
(130,623,qs),
(143,547,ls),
(150,510,o),
(180,510,qs),
(208,510,o),
(202,547,qs),
(196,582,ls),
(188,629,o),
(223,629,qs),
(231,629,ls),
(237,629,o),
(238,623,qs),
(251,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 5 6 28 18 2 4 5 13 1 0 1 80 1 12 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 1 4 0 0 1 114 11 9 2 7 0 8 8 7 114 0 3 15 1 6 5 3 6 105 0 5 4 0 5 90 0 4 2 14 2 0 7 4 0 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 1 4 0 0 1 114 11 9 2 7 0 8 0 7 8 128 0 3 15 1 6 5 3 6 105 0 5 4 0 5 90 0 4 2 14 2 0 7 4 0 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 1 4 0 0 1 114 11 9 2 7 2 8 2 7 8 128 0 3 15 1 6 5 3 6 105 0 5 14 1 0 2 5 0 105 0 4 0 2 7 4 2 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 4 0 4 1 0 128 11 9 2 7 2 8 2 7 8 128 0 3 15 1 6 5 3 6 105 0 5 14 1 0 2 5 0 105 0 4 0 2 7 4 2 105 10 1 8 12 12 8 89 10 1 8 8 12 98 13 1 12 8 12 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
41 40 1 0 83 81 79 77 74 71 68 66 63 60 57 55 52 49 40 47 41 47 36 34 32 30 24 22 11 9 4 3 0 39 1 39 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,677,qs),
(-2,677,o),
(-19,763,qs),
(-24,793,ls),
(-33,841,o),
(3,841,qs),
(10,841,ls),
(16,841,o),
(17,834,qs),
(31,758,ls),
(37,721,o),
(67,721,qs),
(96,721,o),
(89,758,qs),
(83,793,ls),
(75,841,o),
(112,841,qs),
(118,841,ls),
(125,841,o),
(126,834,qs),
(139,758,ls),
(146,721,o),
(176,721,qs),
(205,721,o),
(198,758,qs),
(192,793,ls),
(184,841,o),
(219,841,qs),
(227,841,ls),
(233,841,o),
(234,834,qs),
(247,763,ls),
(254,723,o),
(220,677,o),
(184,677,qs),
(148,677,o),
(125,697,q),
(108,677,o)
);
},
{
closed = 1;
nodes = (
(97,563,o),
(80,557,qs),
(77,556,o),
(74,554,qs),
(70,552,o),
(68,552,qs),
(63,552,o),
(60,558,qs),
(51,580,o),
(75,607,o),
(102,607,qs),
(202,608,ls),
(238,608,o),
(243,576,q),
(243,572,l),
(245,563,o),
(236,563,qs),
(132,563,ls)
);
},
{
closed = 1;
nodes = (
(261,471,o),
(252,471,qs),
(148,471,ls),
(113,471,o),
(96,464,qs),
(94,463,o),
(90,461,qs),
(86,459,o),
(84,459,qs),
(79,459,o),
(76,466,qs),
(67,487,o),
(91,514,o),
(118,514,qs),
(218,515,ls),
(254,515,o),
(259,483,q),
(259,479,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 2 2 1 112 4 1 2 6 1 0 8 2 0 106 0 8 9 13 2 7 10 8 7 105 0 10 11 11 10 87 0 10 10 11 97 12 1 11 10 11 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
5 3 2 1 2 1 133 4 1 2 6 1 0 8 2 0 106 0 8 9 13 2 7 10 8 7 105 0 10 11 11 10 87 0 10 10 11 97 12 1 11 10 11 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
5 3 2 1 2 1 133 0 11 12 11 134 4 1 2 6 1 0 8 2 0 106 0 8 9 13 2 7 10 8 7 105 0 10 12 12 10 87 0 10 10 12 95 0 12 10 12 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
5 3 2 1 2 1 133 0 9 7 10 7 9 10 128 0 11 12 11 134 4 1 2 6 1 0 8 2 0 106 0 8 13 1 7 9 8 7 103 0 10 12 12 10 87 0 10 10 12 95 0 12 10 12 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
39 38 72 69 65 63 60 57 50 48 45 42 38 55 39 54 35 51 35 51 35 52 33 14 7 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,696,qs),
(-5,717,o),
(19,744,o),
(47,744,qs),
(147,745,ls),
(183,745,o),
(187,713,qs),
(188,709,ls),
(189,701,o),
(180,701,qs),
(76,701,ls),
(41,701,o),
(24,694,qs),
(22,693,o),
(18,691,qs),
(14,689,o),
(12,689,qs),
(8,689,o)
);
},
{
closed = 1;
nodes = (
(259,512,o),
(225,466,o),
(189,466,qs),
(153,466,o),
(130,486,q),
(113,466,o),
(80,466,qs),
(3,466,o),
(-14,552,qs),
(-19,582,ls),
(-28,629,o),
(8,629,qs),
(15,629,ls),
(21,629,o),
(22,623,qs),
(36,547,ls),
(42,510,o),
(72,510,qs),
(101,510,o),
(94,547,qs),
(88,582,ls),
(80,629,o),
(117,629,qs),
(123,629,ls),
(130,629,o),
(131,623,qs),
(144,547,ls),
(151,510,o),
(181,510,qs),
(209,510,o),
(203,547,qs),
(197,582,ls),
(189,629,o),
(224,629,qs),
(232,629,ls),
(238,629,o),
(239,623,qs),
(252,552,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 1 7 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 4 2 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
6 4 2 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 35 51 35 51 35 53 51 53 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,712,o),
(7,714,q),
(38,734,o),
(71,761,q),
(37,786,o),
(31,816,qs),
(25,844,o),
(55,881,o),
(85,881,qs),
(116,881,o),
(158,846,o),
(162,818,qs),
(166,788,o),
(133,757,q),
(152,738,o),
(133,721,qs),
(127,715,o),
(121,722,q),
(107,733,l),
(74,706,o),
(64,701,q),
(63,701,o),
(60,699,qs),
(48,691,o),
(39,691,qs),
(23,691,o),
(11,703,qs),
(7,707,ls)
);
},
{
closed = 1;
nodes = (
(71,817,qs),
(75,801,o),
(101,783,q),
(123,801,o),
(122,817,qs),
(118,844,o),
(93,844,qs),
(65,844,o)
);
},
{
closed = 1;
nodes = (
(259,512,o),
(225,466,o),
(189,466,qs),
(153,466,o),
(130,486,q),
(113,466,o),
(80,466,qs),
(3,466,o),
(-14,552,qs),
(-19,582,ls),
(-28,629,o),
(8,629,qs),
(15,629,ls),
(21,629,o),
(22,623,qs),
(36,547,ls),
(42,510,o),
(72,510,qs),
(101,510,o),
(94,547,qs),
(88,582,ls),
(80,629,o),
(117,629,qs),
(123,629,ls),
(130,629,o),
(131,623,qs),
(144,547,ls),
(151,510,o),
(181,510,qs),
(209,510,o),
(203,547,qs),
(197,582,ls),
(189,629,o),
(224,629,qs),
(232,629,ls),
(238,629,o),
(239,623,qs),
(252,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
32 30 23 13 8 5 0 2 68 1 8 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 0 2 3 2 0 3 128 7 5 2 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 2 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
29 28 71 69 67 65 62 59 56 54 51 48 45 43 40 37 28 35 29 35 46 33 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,585,qs),
(0,585,o),
(-17,672,qs),
(-22,702,ls),
(-31,749,o),
(5,749,qs),
(12,749,ls),
(18,749,o),
(19,742,qs),
(33,667,ls),
(39,629,o),
(69,629,qs),
(98,629,o),
(91,667,qs),
(85,702,ls),
(77,749,o),
(114,749,qs),
(120,749,ls),
(127,749,o),
(128,742,qs),
(141,667,ls),
(148,629,o),
(178,629,qs),
(206,629,o),
(200,667,qs),
(194,702,ls),
(186,749,o),
(221,749,qs),
(229,749,ls),
(235,749,o),
(236,742,qs),
(249,672,ls),
(256,632,o),
(222,585,o),
(186,585,qs),
(150,585,o),
(127,605,q),
(110,585,o)
);
},
{
closed = 1;
nodes = (
(253,470,o),
(242,470,qs),
(128,470,ls),
(94,470,o),
(76,463,q),
(75,463,l),
(73,462,o),
(71,461,qs),
(66,458,o),
(64,458,qs),
(60,458,o),
(56,465,qs),
(54,469,o),
(53,476,qs),
(53,477,o),
(53,478,qs),
(46,514,o),
(107,514,qs),
(209,514,ls),
(240,514,o),
(249,482,qs),
(250,478,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
5 3 2 1 2 2 1 112 4 1 2 6 1 0 7 2 0 106 0 7 8 8 7 87 0 7 7 8 95 0 8 7 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
5 3 2 1 2 1 133 4 1 2 6 1 0 7 2 0 106 0 7 8 8 7 87 0 7 7 8 95 0 8 7 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
61 50 35 51 35 51 35 52 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,749,qs),
(52,768,o),
(66,778,qs),
(70,781,o),
(73,782,qs),
(80,785,o),
(86,779,qs),
(98,766,o),
(107,736,qs),
(125,674,o),
(108,649,qs),
(103,641,o),
(97,641,qs),
(92,641,o),
(88,657,qs),
(80,694,o),
(61,731,qs),
(57,738,o)
);
},
{
closed = 1;
nodes = (
(257,514,o),
(222,466,o),
(187,466,qs),
(153,466,o),
(130,486,q),
(112,466,o),
(80,466,qs),
(4,466,o),
(-15,552,qs),
(-16,559,ls),
(-24,606,o),
(12,606,qs),
(18,606,ls),
(25,606,o),
(26,599,qs),
(35,547,ls),
(41,510,o),
(72,510,qs),
(99,510,o),
(93,547,qs),
(92,559,ls),
(85,606,o),
(120,606,qs),
(126,606,ls),
(133,606,o),
(134,599,qs),
(143,547,ls),
(150,510,o),
(179,510,qs),
(207,510,o),
(202,547,qs),
(200,559,ls),
(193,606,o),
(228,606,qs),
(235,606,ls),
(242,606,o),
(242,599,q),
(251,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
18 1 2 1 50 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 5 3 2 1 2 2 1 112 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 0 133 5 3 2 1 2 1 133 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 35 51 35 51 35 62 35 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-101,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
49 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 67 66 55 54 1 0 73 71 66 77 67 77 61 59 54 65 55 65 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1040,0,l),
(980,0,ls),
(896,-1,o),
(850,46,q),
(816,0,o),
(740,0,qs),
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(739,74,ls),
(809,74,o),
(793,169,qs),
(771,291,ls),
(759,358,o),
(820,358,qs),
(828,358,ls),
(835,358,o),
(837,350,qs),
(869,168,ls),
(877,124,o),
(929,74,o),
(966,74,qs),
(1028,74,l)
);
},
{
closed = 1;
nodes = (
(828,-100,o),
(831,-119,qs),
(835,-139,o),
(814,-165,o),
(795,-165,qs),
(776,-165,o),
(747,-139,o),
(744,-119,qs),
(740,-100,o),
(760,-75,o),
(779,-75,qs),
(798,-75,o)
);
},
{
closed = 1;
nodes = (
(953,-100,o),
(957,-119,qs),
(960,-139,o),
(940,-165,o),
(921,-165,qs),
(903,-165,o),
(873,-139,o),
(869,-119,qs),
(866,-101,o),
(886,-75,o),
(905,-75,qs),
(924,-75,o)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
49 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 6 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 96 8 7 2 3 3 24 3 78 91 90 79 78 67 66 55 54 1 0 97 95 90 101 91 101 85 83 78 89 79 89 73 71 66 77 67 77 61 59 54 65 55 65 52 50 48 46 43 41 33 31 23 21 20 18 14 11 8 5 0 53 1 53 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1007;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(559,773,qs),
(556,792,o),
(570,802,qs),
(574,805,o),
(578,807,qs),
(585,809,o),
(590,803,qs),
(602,791,o),
(612,761,qs),
(629,698,o),
(612,673,qs),
(607,666,o),
(602,666,qs),
(596,666,o),
(593,681,qs),
(584,719,o),
(565,756,qs),
(561,763,o)
);
},
{
closed = 1;
nodes = (
(480,631,o),
(516,631,qs),
(523,631,ls),
(529,631,o),
(530,624,qs),
(539,572,ls),
(546,534,o),
(576,534,qs),
(603,534,o),
(598,572,qs),
(596,583,ls),
(589,631,o),
(624,631,qs),
(630,631,ls),
(637,631,o),
(638,624,qs),
(647,572,ls),
(654,534,o),
(683,534,qs),
(711,534,o),
(706,572,qs),
(704,583,ls),
(697,631,o),
(732,631,qs),
(739,631,ls),
(746,631,o),
(747,624,qs),
(755,577,ls),
(762,538,o),
(727,490,o),
(692,490,qs),
(657,490,o),
(634,511,q),
(617,490,o),
(584,490,qs),
(509,490,o),
(489,577,qs),
(488,583,ls)
);
},
{
closed = 1;
nodes = (
(1055,94,o),
(1026,50,qs),
(992,0,o),
(913,0,qs),
(843,0,ls),
(760,-1,o),
(714,46,q),
(680,0,o),
(603,0,qs),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(603,74,ls),
(673,74,o),
(656,169,qs),
(622,363,ls),
(610,431,o),
(670,431,qs),
(677,431,ls),
(686,431,o),
(687,423,qs),
(733,168,ls),
(741,124,o),
(792,74,o),
(830,74,qs),
(912,74,ls),
(982,74,o),
(965,169,qs),
(932,363,ls),
(920,431,o),
(980,431,qs),
(987,431,ls),
(996,431,o),
(997,423,qs),
(1042,168,ls)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
},
{
closed = 1;
nodes = (
(1201,0,o),
(1200,8,qs),
(1115,488,ls),
(1103,556,o),
(1163,556,qs),
(1170,556,ls),
(1178,556,o),
(1180,548,qs),
(1265,68,ls),
(1278,0,o),
(1217,0,qs),
(1210,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
22 1 1 4 103 98 2 14 9 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
22 1 1 4 103 98 2 15 17 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 0 3 0 133 7 5 2 3 20 4 3 112 12 10 2 8 1 13 13 8 114 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 0 20 20 23 77 21 17 11 3 9 9 14 98 22 19 16 15 4 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 13 8 114 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 0 20 20 23 77 21 17 11 3 9 9 14 98 22 19 16 15 4 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 0 20 20 23 77 21 17 11 3 9 9 14 98 22 19 16 15 4 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 0 20 20 23 77 11 1 9 9 15 98 22 19 2 15 15 24 77 21 1 17 17 14 97 16 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 0 20 20 23 77 11 1 9 9 15 96 22 19 16 3 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 0 3 0 133 7 5 2 3 20 3 133 12 10 2 8 1 13 1 8 13 128 6 1 4 2 1 1 8 4 1 106 0 13 0 18 9 13 18 104 21 1 17 0 14 17 14 101 0 20 20 23 77 11 1 9 9 15 96 22 19 16 3 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
122 121 112 111 128 125 121 132 122 131 117 115 111 120 112 120 107 104 102 99 97 95 89 87 85 82 79 76 73 70 66 63 51 51 35 51 35 52 34 46 35 23 7 31 
CALL[ ]	/* CallFunction */";
};
width = 1296;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,12,o),
(321,35,qs),
(341,63,ls),
(351,78,o),
(351,91,qs),
(351,193,l),
(426,209,l),
(426,56,l),
(665,107,l),
(681,139,o),
(687,188,q),
(500,148,l),
(500,224,l),
(666,260,l),
(682,299,o),
(687,341,q),
(500,301,l),
(500,575,l),
(459,551,o),
(426,510,q),
(426,285,l),
(351,269,l),
(351,612,l),
(315,593,o),
(277,548,q),
(277,253,l),
(110,218,l),
(93,178,o),
(88,137,q),
(277,177,l),
(277,81,l),
(74,38,l),
(58,-3,o),
(53,-43,q),
(279,6,ls)
);
},
{
closed = 1;
nodes = (
(426,-96,q),
(666,-45,l),
(682,-5,o),
(687,35,q),
(448,-16,l),
(432,-54,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,684,qs),
(87,674,o),
(95,674,qs),
(105,674,o),
(113,687,qs),
(114,689,o),
(116,693,qs),
(120,700,o),
(121,701,q),
(124,702,o),
(126,702,qs),
(129,702,o),
(133,698,qs),
(140,689,o),
(143,674,qs),
(146,655,o),
(121,629,o),
(101,631,qs),
(82,632,o),
(41,646,q),
(36,647,o),
(28,650,qs),
(-2,659,o),
(-10,659,qs),
(-20,659,o),
(-29,647,q),
(-29,645,o),
(-31,642,qs),
(-35,634,o),
(-37,633,qs),
(-39,632,o),
(-41,632,qs),
(-45,632,o),
(-49,636,qs),
(-57,646,o),
(-59,660,qs),
(-62,679,o),
(-37,705,o),
(-17,703,qs),
(2,702,o),
(44,688,q),
(49,687,o)
);
},
{
closed = 1;
nodes = (
(118,0,o),
(88,168,qs),
(31,488,ls),
(19,556,o),
(79,556,qs),
(86,556,ls),
(94,556,o),
(96,548,qs),
(164,169,ls),
(181,74,o),
(261,74,qs),
(322,74,l),
(335,0,l),
(274,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 0 1 2 0 1 105 0 3 0 2 5 3 2 105 0 5 5 23 77 0 4 4 6 95 7 1 6 6 24 6 78 42 42 42 55 42 54 51 36 46 20 46 17 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,639,o),
(-11,633,qs),
(-14,632,o),
(-17,630,qs),
(-22,628,o),
(-24,628,qs),
(-28,628,o),
(-31,634,qs),
(-49,675,o),
(-2,682,q),
(-16,699,o),
(-18,723,qs),
(-21,758,o),
(20,803,o),
(54,803,qs),
(105,803,o),
(114,757,qs),
(117,746,o),
(108,747,qs),
(106,747,o),
(102,749,qs),
(97,751,o),
(95,752,qs),
(78,760,o),
(61,759,qs),
(23,757,o),
(29,723,qs),
(32,707,o),
(58,684,o),
(74,684,qs),
(111,684,ls),
(147,684,o),
(151,652,qs),
(152,648,ls),
(153,639,o),
(144,639,qs),
(40,639,ls)
);
},
{
closed = 1;
nodes = (
(346,0,l),
(285,0,ls),
(129,0,o),
(99,168,qs),
(42,488,ls),
(30,556,o),
(90,556,qs),
(97,556,ls),
(105,556,o),
(107,548,qs),
(175,169,ls),
(192,74,o),
(272,74,qs),
(333,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
26 1 0 1 1 76 0 3 0 2 1 3 2 105 0 1 7 1 0 5 1 0 103 0 5 5 23 77 8 1 4 4 6 95 0 6 6 24 6 78 38 37 1 0 49 47 44 41 37 50 38 50 22 20 12 10 7 4 0 36 1 35 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,456,qs),
(92,496,o),
(139,503,q),
(125,521,o),
(123,544,qs),
(121,580,o),
(161,624,o),
(195,624,qs),
(246,624,o),
(255,578,qs),
(258,567,o),
(249,568,qs),
(247,568,o),
(243,570,qs),
(238,572,o),
(236,573,qs),
(219,581,o),
(202,580,qs),
(165,578,o),
(170,544,qs),
(173,528,o),
(199,505,o),
(215,505,qs),
(252,505,ls),
(288,505,o),
(293,473,q),
(293,469,l),
(295,461,o),
(285,461,qs),
(181,461,ls),
(147,461,o),
(130,454,qs),
(127,453,o),
(124,451,qs),
(119,449,o),
(118,449,qs),
(113,449,o)
);
},
{
closed = 1;
nodes = (
(453,0,l),
(460,-81,o),
(444,-124,qs),
(415,-215,o),
(300,-214,qs),
(253,-214,o),
(176,-176,o),
(162,-147,qs),
(153,-126,o),
(174,-126,qs),
(179,-126,o),
(188,-128,qs),
(235,-143,o),
(283,-143,qs),
(344,-142,o),
(366,-106,qs),
(386,-74,o),
(377,0,q),
(292,0,ls),
(211,0,o),
(156,46,qs),
(95,96,o),
(81,182,qs),
(68,265,o),
(105,318,qs),
(145,376,o),
(224,377,qs),
(411,379,o),
(445,74,q),
(580,74,l),
(594,0,l)
);
},
{
closed = 1;
nodes = (
(367,80,o),
(365,93,qs),
(336,306,o),
(229,306,qs),
(188,306,o),
(149,239,o),
(159,184,qs),
(168,137,o),
(239,74,o),
(285,74,qs),
(366,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
31 1 1 2 33 1 0 1 2 76 0 8 6 7 6 8 7 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 5 0 12 4 5 12 105 0 7 0 9 7 9 101 13 11 2 4 4 6 95 10 1 6 6 24 6 78 69 68 75 73 68 78 69 78 67 66 63 61 34 35 38 33 24 40 35 51 53 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,0,o),
(96,168,qs),
(39,488,ls),
(27,556,o),
(87,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(172,169,ls),
(188,74,o),
(269,74,qs),
(330,74,l),
(343,0,l),
(282,0,ls)
);
},
{
closed = 1;
nodes = (
(315,-232,o),
(306,-232,qs),
(202,-232,ls),
(167,-232,o),
(150,-239,qs),
(148,-240,o),
(144,-242,qs),
(140,-244,o),
(138,-244,qs),
(134,-244,o),
(130,-237,q),
(113,-196,o),
(160,-190,q),
(145,-172,o),
(144,-148,qs),
(141,-113,o),
(181,-69,o),
(216,-69,qs),
(267,-69,o),
(276,-114,qs),
(279,-126,o),
(270,-125,q),
(268,-124,o),
(263,-122,qs),
(259,-120,o),
(257,-119,qs),
(240,-112,o),
(223,-113,qs),
(185,-115,o),
(191,-149,qs),
(194,-165,o),
(219,-188,o),
(235,-188,qs),
(273,-188,ls),
(309,-188,o),
(313,-220,qs),
(314,-224,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
35 1 3 4 37 1 6 3 2 76 0 5 0 4 3 5 4 105 0 3 0 6 3 6 99 0 1 1 23 77 0 0 0 2 95 7 1 2 2 24 2 78 0 0 49 46 33 31 23 21 18 15 0 13 0 12 51 33 8 7 24 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,309,qs),
(240,350,o),
(287,356,q),
(273,374,o),
(271,398,qs),
(268,433,o),
(309,477,o),
(343,477,qs),
(394,477,o),
(403,432,qs),
(406,420,o),
(397,421,q),
(395,422,o),
(391,424,qs),
(386,426,o),
(384,427,qs),
(367,434,o),
(350,433,qs),
(312,431,o),
(318,397,qs),
(321,381,o),
(347,358,o),
(363,358,qs),
(400,358,ls),
(436,358,o),
(440,326,qs),
(441,322,ls),
(442,314,o),
(433,314,qs),
(329,314,ls),
(294,314,o),
(278,307,qs),
(275,306,o),
(272,304,qs),
(267,302,o),
(265,302,qs),
(261,302,o)
);
},
{
closed = 1;
nodes = (
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(690,74,l),
(703,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
33 1 0 1 1 76 0 7 0 4 0 7 4 128 0 3 0 2 1 3 2 105 0 1 0 0 7 1 0 103 0 6 0 8 6 8 101 0 4 4 5 95 9 1 5 5 24 5 78 72 71 40 40 33 36 40 40 35 51 53 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,444,o),
(11,438,qs),
(8,437,o),
(5,435,qs),
(0,433,o),
(-2,433,qs),
(-6,433,o),
(-9,439,qs),
(-27,480,o),
(20,487,q),
(6,504,o),
(4,528,qs),
(1,563,o),
(42,608,o),
(76,608,qs),
(127,608,o),
(136,562,qs),
(139,551,o),
(130,552,qs),
(128,552,o),
(124,554,qs),
(119,556,o),
(117,557,qs),
(100,565,o),
(83,564,qs),
(45,562,o),
(51,528,qs),
(54,512,o),
(80,489,o),
(96,489,qs),
(133,489,ls),
(169,489,o),
(173,457,qs),
(174,453,ls),
(175,444,o),
(166,444,qs),
(62,444,ls)
);
},
{
closed = 1;
nodes = (
(188,94,o),
(159,50,qs),
(125,0,o),
(46,0,qs),
(20,0,l),
(7,74,l),
(45,74,ls),
(115,74,o),
(98,169,qs),
(77,291,ls),
(65,358,o),
(126,358,qs),
(133,358,ls),
(141,358,o),
(143,350,qs),
(175,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
26 1 0 1 1 76 0 4 0 5 0 4 5 128 0 3 0 2 1 3 2 105 0 1 7 1 0 4 1 0 103 0 5 5 6 98 0 6 6 24 6 78 1 0 49 47 46 44 41 38 22 20 12 10 7 4 0 36 1 35 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,444,o),
(11,438,qs),
(8,437,o),
(5,435,qs),
(0,433,o),
(-2,433,qs),
(-6,433,o),
(-9,439,qs),
(-27,480,o),
(20,487,q),
(6,504,o),
(4,528,qs),
(1,563,o),
(42,608,o),
(76,608,qs),
(127,608,o),
(136,562,qs),
(139,551,o),
(130,552,qs),
(128,552,o),
(123,555,q),
(119,556,o),
(117,557,qs),
(100,565,o),
(83,564,qs),
(45,562,o),
(51,528,qs),
(54,512,o),
(80,489,o),
(96,489,qs),
(133,489,ls),
(169,489,o),
(173,457,qs),
(174,453,ls),
(175,444,o),
(166,444,qs),
(62,444,ls)
);
},
{
closed = 1;
nodes = (
(346,0,l),
(286,0,ls),
(202,-1,o),
(156,46,q),
(122,0,o),
(46,0,qs),
(20,0,l),
(7,74,l),
(45,74,ls),
(115,74,o),
(98,169,qs),
(77,291,ls),
(65,358,o),
(126,358,qs),
(133,358,ls),
(141,358,o),
(143,350,qs),
(175,168,ls),
(183,124,o),
(235,74,o),
(272,74,qs),
(333,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
26 1 0 1 54 1 7 4 2 76 0 5 0 4 0 5 4 128 0 3 0 2 1 3 2 105 0 1 9 1 0 5 1 0 103 6 10 2 4 4 7 98 8 1 7 7 24 7 78 38 37 1 0 57 55 53 51 50 48 45 42 37 58 38 58 22 20 12 10 7 4 0 36 1 35 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,0,o),
(96,168,qs),
(39,488,ls),
(27,556,o),
(87,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(172,169,ls),
(188,74,o),
(269,74,qs),
(330,74,l),
(343,0,l),
(282,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 95 3 1 2 2 24 2 78 0 0 0 13 0 12 51 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,73,o),
(82,154,qs),
(76,200,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,286,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
},
{
closed = 1;
nodes = (
(500,-98,o),
(504,-119,qs),
(508,-140,o),
(484,-169,o),
(464,-169,qs),
(443,-169,o),
(409,-140,o),
(406,-119,qs),
(402,-98,o),
(425,-69,o),
(446,-69,qs),
(467,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 96 5 1 4 4 24 4 78 39 38 1 0 45 43 38 49 39 49 36 34 32 29 22 20 14 11 8 5 0 37 1 37 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
},
{
closed = 1;
nodes = (
(115,-98,o),
(119,-119,qs),
(122,-140,o),
(99,-169,o),
(79,-169,qs),
(58,-169,o),
(24,-140,o),
(20,-119,qs),
(16,-98,o),
(40,-69,o),
(61,-69,qs),
(81,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 98 5 1 0 0 24 0 78 17 16 1 0 23 21 16 27 17 27 14 12 9 6 0 15 1 15 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(221,-119,qs),
(225,-140,o),
(202,-169,o),
(181,-169,qs),
(161,-169,o),
(127,-140,o),
(123,-119,qs),
(119,-98,o),
(143,-69,o),
(164,-69,qs),
(184,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
17 1 3 0 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 98 4 1 3 3 24 3 78 23 22 1 0 29 27 22 33 23 33 20 18 16 14 13 11 8 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,502,o),
(95,521,qs),
(92,540,o),
(112,566,o),
(130,566,qs),
(149,566,o),
(179,540,o),
(183,521,qs),
(187,502,o),
(165,476,o),
(147,476,qs),
(128,476,o)
);
},
{
closed = 1;
nodes = (
(224,502,o),
(221,521,qs),
(217,540,o),
(238,566,o),
(257,566,qs),
(276,566,o),
(305,540,o),
(309,521,qs),
(312,502,o),
(292,476,o),
(273,476,qs),
(254,476,o)
);
},
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
44 1 7 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
44 1 8 9 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 0 6 6 5 114 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 14 9 13 3 4 4 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 5 0 6 0 5 6 128 0 6 0 10 4 6 10 104 12 2 11 3 0 0 1 97 3 1 1 1 23 77 13 1 4 4 8 95 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 104 13 1 4 4 8 95 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 104 14 1 9 0 7 9 7 101 13 1 4 4 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
50 49 25 24 13 12 1 0 55 53 49 58 50 58 47 45 43 41 35 33 31 28 24 48 25 48 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,403,o),
(256,422,qs),
(252,441,o),
(273,467,o),
(291,467,qs),
(310,467,o),
(340,441,o),
(344,422,qs),
(347,403,o),
(326,377,o),
(307,377,qs),
(289,377,o)
);
},
{
closed = 1;
nodes = (
(385,403,o),
(382,422,qs),
(378,441,o),
(399,467,o),
(418,467,qs),
(436,467,o),
(466,441,o),
(469,422,qs),
(473,403,o),
(452,377,o),
(434,377,qs),
(415,377,o)
);
},
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
57 1 8 4 1 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 96 9 1 8 8 24 8 78 25 24 13 12 1 0 60 58 56 53 46 44 38 35 32 29 24 61 25 61 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-34,460,o),
(-37,479,qs),
(-41,498,o),
(-21,524,o),
(-2,524,qs),
(17,524,o),
(47,498,o),
(51,479,qs),
(54,460,o),
(33,434,o),
(14,434,qs),
(-4,434,o)
);
},
{
closed = 1;
nodes = (
(92,460,o),
(89,479,qs),
(85,498,o),
(106,524,o),
(125,524,qs),
(143,524,o),
(173,499,o),
(176,479,qs),
(180,460,o),
(159,434,o),
(141,434,qs),
(122,434,o)
);
},
{
closed = 1;
nodes = (
(-4,74,l),
(34,74,ls),
(104,74,o),
(87,169,qs),
(66,291,ls),
(54,358,o),
(115,358,qs),
(122,358,ls),
(130,358,o),
(132,350,qs),
(164,168,ls),
(177,94,o),
(148,50,qs),
(114,0,o),
(35,0,qs),
(9,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 98 9 1 4 4 24 4 78 25 24 13 12 1 0 38 36 33 30 24 39 25 39 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,434,o),
(13,434,qs),
(-5,434,o),
(-35,460,o),
(-38,479,qs),
(-42,498,o),
(-22,524,o),
(-3,524,qs),
(16,524,o),
(46,499,o),
(50,479,qs),
(53,460,o)
);
},
{
closed = 1;
nodes = (
(91,460,o),
(88,479,qs),
(84,498,o),
(105,524,o),
(124,524,qs),
(142,524,o),
(172,499,o),
(175,479,qs),
(179,460,o),
(158,434,o),
(140,434,qs),
(121,434,o)
);
},
{
closed = 1;
nodes = (
(336,0,l),
(275,0,ls),
(192,-1,o),
(146,46,q),
(112,0,o),
(35,0,qs),
(10,0,l),
(-3,74,l),
(35,74,ls),
(105,74,o),
(88,169,qs),
(67,291,ls),
(55,358,o),
(115,358,qs),
(123,358,ls),
(131,358,o),
(133,350,qs),
(165,168,ls),
(173,124,o),
(224,74,o),
(262,74,qs),
(323,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
41 1 7 4 1 76 0 5 1 4 1 5 4 128 3 1 0 9 2 2 1 5 0 1 105 6 10 2 4 4 7 98 8 1 7 7 24 7 78 25 24 13 12 44 42 40 38 37 35 32 29 24 45 25 45 19 17 12 23 13 23 36 34 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,497,o),
(304,516,qs),
(301,535,o),
(322,562,o),
(341,562,qs),
(359,562,o),
(388,536,o),
(392,516,qs),
(396,497,o),
(375,472,o),
(357,472,qs),
(338,472,o)
);
},
{
closed = 1;
nodes = (
(260,402,o),
(257,421,qs),
(253,440,o),
(273,466,o),
(292,466,qs),
(311,466,o),
(341,440,o),
(344,421,qs),
(348,402,o),
(327,376,o),
(308,376,qs),
(289,376,o)
);
},
{
closed = 1;
nodes = (
(400,466,o),
(418,466,qs),
(437,466,o),
(467,440,o),
(470,421,qs),
(473,402,o),
(453,376,o),
(434,376,qs),
(415,376,o),
(386,402,o),
(382,421,qs),
(379,440,o)
);
},
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(620,291,ls),
(608,358,o),
(668,358,qs),
(676,358,ls),
(684,358,o),
(686,350,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
69 1 10 6 1 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 5 1 3 4 13 2 2 7 3 2 105 12 1 0 0 1 97 0 1 1 23 77 8 14 2 6 6 10 96 11 1 10 10 24 10 78 37 36 13 12 1 0 72 70 68 65 58 56 50 47 44 41 36 73 37 73 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,555,o),
(10,574,qs),
(6,593,o),
(27,619,o),
(46,619,qs),
(65,619,o),
(94,593,o),
(98,574,qs),
(101,555,o),
(81,529,o),
(62,529,qs),
(43,529,o)
);
},
{
closed = 1;
nodes = (
(32,434,o),
(14,434,qs),
(-5,434,o),
(-34,459,o),
(-38,478,qs),
(-41,498,o),
(-21,524,o),
(-3,524,qs),
(17,524,o),
(47,498,o),
(50,478,qs),
(54,459,o)
);
},
{
closed = 1;
nodes = (
(105,524,o),
(124,524,qs),
(143,524,o),
(172,498,o),
(176,478,qs),
(179,459,o),
(159,434,o),
(140,434,qs),
(121,434,o),
(91,459,o),
(88,478,qs),
(85,498,o)
);
},
{
closed = 1;
nodes = (
(177,94,o),
(147,50,qs),
(114,0,o),
(34,0,qs),
(9,0,l),
(-4,74,l),
(34,74,ls),
(104,74,o),
(87,169,qs),
(66,291,ls),
(54,358,o),
(114,358,qs),
(122,358,ls),
(130,358,o),
(131,350,qs),
(164,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 6 3 7 3 6 7 128 0 1 9 1 0 2 1 0 105 5 1 2 4 1 3 6 2 3 105 0 7 7 8 98 0 8 8 24 8 78 1 0 48 46 45 43 40 37 34 32 28 26 22 20 16 14 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(15,555,o),
(11,574,qs),
(7,593,o),
(28,619,o),
(47,619,qs),
(66,619,o),
(95,593,o),
(99,574,qs),
(102,555,o),
(82,529,o),
(63,529,qs),
(44,529,o)
);
},
{
closed = 1;
nodes = (
(34,434,o),
(15,434,qs),
(-4,434,o),
(-33,459,o),
(-37,478,qs),
(-40,498,o),
(-20,524,o),
(-2,524,qs),
(18,524,o),
(48,498,o),
(51,478,qs),
(55,459,o)
);
},
{
closed = 1;
nodes = (
(106,524,o),
(125,524,qs),
(144,524,o),
(173,498,o),
(177,478,qs),
(180,459,o),
(160,434,o),
(141,434,qs),
(122,434,o),
(92,459,o),
(89,478,qs),
(86,498,o)
);
},
{
closed = 1;
nodes = (
(335,0,l),
(275,0,ls),
(191,-1,o),
(145,46,q),
(111,0,o),
(35,0,qs),
(9,0,l),
(-4,74,l),
(34,74,ls),
(104,74,o),
(87,169,qs),
(66,291,ls),
(54,358,o),
(115,358,qs),
(122,358,ls),
(130,358,o),
(132,350,qs),
(164,168,ls),
(172,124,o),
(224,74,o),
(261,74,qs),
(322,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
53 1 9 6 1 76 0 7 3 6 3 7 6 128 0 1 11 1 0 2 1 0 105 5 1 2 4 1 3 7 2 3 105 8 12 2 6 6 9 98 10 1 9 9 24 9 78 37 36 1 0 56 54 52 50 49 47 44 41 36 57 37 57 34 32 28 26 22 20 16 14 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(530,0,o),
(488,37,q),
(445,0,o),
(359,0,qs),
(295,0,ls),
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(349,74,ls),
(405,74,o),
(435,99,q),
(414,126,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(489,144,o),
(516,101,o),
(534,89,qs),
(558,74,o),
(584,74,qs),
(636,74,l),
(649,0,l),
(589,0,ls)
);
},
{
closed = 1;
nodes = (
(406,-107,o),
(410,-128,qs),
(414,-149,o),
(391,-178,o),
(370,-178,qs),
(350,-178,o),
(316,-149,o),
(312,-128,qs),
(308,-107,o),
(332,-78,o),
(352,-78,qs),
(373,-78,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
22 1 0 2 54 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 12 1 9 0 10 6 9 10 105 0 6 0 5 6 5 101 4 1 0 0 7 95 11 8 2 7 7 24 7 78 58 57 0 0 64 62 57 68 58 68 0 56 0 55 54 40 38 52 34 35 37 33 13 7 30 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(401,74,l),
(379,92,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(448,116,o),
(477,90,qs),
(492,76,o),
(515,75,q),
(524,73,o),
(525,66,qs),
(530,35,o),
(499,0,o),
(466,0,qs),
(6,0,l)
);
},
{
closed = 1;
nodes = (
(302,-98,o),
(306,-119,qs),
(310,-140,o),
(286,-169,o),
(266,-169,qs),
(245,-169,o),
(211,-140,o),
(207,-119,qs),
(204,-98,o),
(227,-69,o),
(248,-69,qs),
(269,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 9 1 6 0 7 6 7 101 5 1 1 1 0 95 8 1 0 0 24 0 78 28 27 1 0 34 32 27 38 28 38 25 24 21 19 17 15 12 10 6 5 0 26 1 26 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,0,ls),
(476,0,o),
(435,37,q),
(392,0,o),
(305,0,qs),
(6,0,l),
(-7,74,l),
(296,74,ls),
(352,74,o),
(381,99,q),
(360,130,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(436,144,o),
(463,101,o),
(481,89,qs),
(504,74,o),
(531,74,qs),
(582,74,l),
(596,0,l)
);
},
{
closed = 1;
nodes = (
(302,-98,o),
(306,-119,qs),
(310,-140,o),
(286,-169,o),
(266,-169,qs),
(245,-169,o),
(211,-140,o),
(207,-119,qs),
(204,-98,o),
(227,-69,o),
(248,-69,qs),
(269,-69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
21 1 0 2 28 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 9 1 7 0 8 7 8 101 4 1 0 0 5 95 6 1 5 5 24 5 78 33 32 39 37 32 43 33 43 34 33 36 34 35 37 32 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(349,74,ls),
(405,74,o),
(435,99,q),
(414,126,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(489,144,o),
(516,101,o),
(534,89,qs),
(558,74,o),
(584,74,qs),
(636,74,l),
(649,0,l),
(589,0,ls),
(530,0,o),
(488,37,q),
(445,0,o),
(359,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
27 1 2 4 2 1 0 2 2 76 0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 0 8 0 7 8 7 101 6 1 2 2 0 95 1 9 2 0 0 24 0 78 1 0 49 47 39 37 31 28 24 22 20 18 15 13 8 6 5 3 0 56 1 55 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(401,74,l),
(379,92,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(448,115,o),
(477,90,qs),
(492,76,o),
(515,75,q),
(524,73,o),
(525,66,qs),
(530,35,o),
(499,0,o),
(466,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 3 4 1 4 3 1 128 0 2 0 4 3 2 4 105 5 1 1 1 0 95 6 1 0 0 24 0 78 1 0 25 24 21 19 17 15 12 10 6 5 0 26 1 26 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,0,ls),
(476,0,o),
(435,37,q),
(392,0,o),
(305,0,qs),
(6,0,l),
(-7,74,l),
(296,74,ls),
(352,74,o),
(381,99,q),
(360,130,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(436,144,o),
(463,101,o),
(481,89,qs),
(504,74,o),
(531,74,qs),
(582,74,l),
(596,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
21 1 0 2 28 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 1 0 0 5 95 6 1 5 5 24 5 78 34 33 36 34 35 37 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,468,o),
(171,489,qs),
(167,511,o),
(190,539,o),
(211,539,qs),
(232,539,o),
(265,511,o),
(269,489,qs),
(273,469,o),
(250,439,o),
(229,439,qs),
(208,439,o)
);
},
{
closed = 1;
nodes = (
(234,0,o),
(205,-35,qs),
(176,-72,o),
(187,-130,qs),
(195,-179,o),
(234,-215,qs),
(281,-258,o),
(355,-260,qs),
(408,-261,o),
(450,-248,qs),
(474,-241,o),
(508,-221,qs),
(519,-214,o),
(535,-226,o),
(532,-238,qs),
(520,-279,o),
(422,-332,o),
(358,-331,qs),
(260,-330,o),
(191,-277,qs),
(117,-220,o),
(104,-127,qs),
(93,-46,o),
(134,8,qs),
(184,74,o),
(291,74,qs),
(349,74,ls),
(405,74,o),
(435,99,q),
(414,126,o),
(381,194,qs),
(325,306,o),
(237,306,qs),
(178,306,o),
(132,258,qs),
(120,245,o),
(111,245,qs),
(92,245,o),
(96,276,qs),
(104,320,o),
(186,378,o),
(242,377,qs),
(378,376,o),
(459,207,qs),
(489,144,o),
(516,101,o),
(534,89,qs),
(558,74,o),
(584,74,qs),
(636,74,l),
(649,0,l),
(589,0,ls),
(530,0,o),
(488,37,q),
(445,0,o),
(359,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
39 1 4 6 14 1 2 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 7 4 7 6 4 128 0 5 0 7 6 5 7 105 0 10 0 9 10 9 101 11 1 0 0 1 97 0 1 1 23 77 8 1 4 4 2 95 3 12 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 7 4 7 6 4 128 0 1 11 1 0 5 1 0 105 0 5 0 7 6 5 7 105 0 10 0 9 10 9 101 8 1 4 4 2 95 3 12 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 61 59 51 49 43 40 36 34 32 30 27 25 20 18 17 15 12 68 13 67 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,511,o),
(216,489,qs),
(220,469,o),
(197,439,o),
(176,439,qs),
(156,439,o),
(122,468,o),
(118,489,qs),
(114,511,o),
(138,539,o),
(159,539,qs),
(179,539,o)
);
},
{
closed = 1;
nodes = (
(-7,74,l),
(401,74,l),
(379,92,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(448,115,o),
(477,90,qs),
(492,76,o),
(515,75,q),
(524,73,o),
(525,66,qs),
(530,35,o),
(499,0,o),
(466,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 6 3 6 5 3 128 0 4 0 6 5 4 6 105 0 1 1 0 97 8 1 0 0 23 77 7 1 3 3 2 95 9 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 5 6 3 6 5 3 128 8 1 0 0 1 4 0 1 105 0 4 0 6 5 4 6 105 7 1 3 3 2 95 9 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 37 36 33 31 29 27 24 22 18 17 12 38 13 38 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(122,468,o),
(118,489,qs),
(114,511,o),
(138,539,o),
(159,539,qs),
(179,539,o),
(213,511,o),
(216,489,qs),
(220,469,o),
(197,439,o),
(176,439,qs),
(156,439,o)
);
},
{
closed = 1;
nodes = (
(536,0,ls),
(476,0,o),
(435,37,q),
(392,0,o),
(305,0,qs),
(6,0,l),
(-7,74,l),
(296,74,ls),
(352,74,o),
(381,99,q),
(360,130,o),
(328,194,qs),
(272,306,o),
(184,306,qs),
(124,306,o),
(79,258,qs),
(67,245,o),
(57,245,qs),
(39,245,o),
(43,276,qs),
(50,320,o),
(133,378,o),
(189,377,qs),
(325,376,o),
(405,207,qs),
(436,144,o),
(463,101,o),
(481,89,qs),
(504,74,o),
(531,74,qs),
(582,74,l),
(596,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 2 4 40 1 7 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 1 2 2 7 95 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 1 2 2 7 95 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 43 41 39 37 36 34 30 28 26 24 21 19 14 12 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(561,0,l),
(506,0,ls),
(415,-1,o),
(367,56,q),
(329,0,o),
(256,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(131,74,o),
(161,74,qs),
(241,74,ls),
(283,74,o),
(322,134,o),
(314,183,qs),
(304,240,o),
(241,306,o),
(195,306,qs),
(168,306,o),
(136,293,q),
(135,292,o),
(133,291,qs),
(127,288,o),
(123,288,qs),
(111,288,o),
(109,307,qs),
(105,335,o),
(161,377,o),
(201,377,qs),
(273,377,o),
(321,336,qs),
(378,289,o),
(392,196,q),
(394,191,o),
(395,179,qs),
(395,174,ls),
(400,129,o),
(454,74,o),
(493,74,qs),
(548,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
3 1 0 2 37 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 40 38 36 33 29 26 22 20 15 14 11 9 0 41 1 41 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,433,o),
(139,433,qs),
(119,433,o),
(85,462,o),
(81,483,qs),
(77,505,o),
(101,533,o),
(122,533,qs),
(142,533,o),
(176,504,o),
(179,483,qs),
(183,463,o)
);
},
{
closed = 1;
nodes = (
(562,0,l),
(507,0,ls),
(416,-1,o),
(368,56,q),
(330,0,o),
(257,0,qs),
(121,0,ls),
(107,0,o),
(105,12,qs),
(104,19,ls),
(100,44,o),
(132,74,o),
(162,74,qs),
(242,74,ls),
(284,74,o),
(323,134,o),
(314,183,qs),
(304,240,o),
(242,306,o),
(196,306,qs),
(168,306,o),
(137,293,q),
(136,292,o),
(134,291,qs),
(128,288,o),
(124,288,qs),
(112,288,o),
(109,307,qs),
(106,335,o),
(162,377,o),
(202,377,qs),
(274,377,o),
(322,336,qs),
(379,289,o),
(393,196,qs),
(394,192,o),
(395,182,qs),
(395,179,l),
(396,174,ls),
(401,129,o),
(455,74,o),
(494,74,qs),
(549,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
50 1 7 2 1 76 0 4 5 2 5 4 2 128 0 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 6 9 2 2 2 7 97 8 1 7 7 24 7 78 13 12 53 51 49 46 42 39 35 33 28 27 24 22 12 54 13 54 36 34 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
26 1 5 0 1 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 102 0 0 0 5 95 0 5 5 24 5 78 35 35 34 37 52 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,457,o),
(82,478,qs),
(78,500,o),
(101,528,o),
(122,528,qs),
(143,528,o),
(176,499,o),
(180,478,qs),
(184,457,o),
(160,428,o),
(140,428,qs),
(119,428,o)
);
},
{
closed = 1;
nodes = (
(339,0,ls),
(291,0,o),
(255,15,q),
(255,13,ls),
(296,-216,o),
(133,-214,qs),
(90,-214,o),
(13,-174,o),
(1,-146,qs),
(-8,-125,o),
(13,-125,qs),
(18,-125,o),
(27,-128,qs),
(74,-143,o),
(108,-143,qs),
(165,-142,o),
(182,-109,qs),
(196,-81,o),
(183,-4,qs),
(130,291,ls),
(118,358,o),
(179,358,qs),
(185,358,ls),
(194,358,o),
(196,350,qs),
(228,168,ls),
(236,124,o),
(288,74,o),
(325,74,qs),
(387,74,l),
(399,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
38 1 7 2 1 76 0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 102 0 2 2 7 95 0 7 7 24 7 78 1 0 42 40 37 35 32 30 28 26 21 18 14 12 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 367;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1228,0,l),
(1168,0,ls),
(1090,-1,o),
(1043,41,q),
(1011,-9,o),
(932,-9,qs),
(848,-9,o),
(802,36,q),
(768,-9,o),
(694,-9,qs),
(643,-9,o),
(607,8,q),
(609,-91,o),
(552,-151,qs),
(492,-214,o),
(390,-214,qs),
(283,-214,o),
(208,-155,qs),
(121,-86,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(545,-47,o),
(525,58,qs),
(490,251,ls),
(478,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(555,311,qs),
(562,272,o),
(573,216,qs),
(580,175,o),
(583,158,q),
(584,159,l),
(592,115,o),
(643,66,o),
(680,66,qs),
(724,66,o),
(754,110,o),
(745,162,qs),
(725,271,ls),
(713,338,o),
(773,338,qs),
(780,338,ls),
(789,338,o),
(790,331,qs),
(820,162,ls),
(828,117,o),
(881,66,o),
(918,66,qs),
(962,66,o),
(991,108,o),
(982,159,qs),
(959,291,ls),
(947,358,o),
(1008,358,qs),
(1014,358,ls),
(1023,358,o),
(1025,350,qs),
(1057,167,ls),
(1074,74,o),
(1154,74,qs),
(1215,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
74 70 66 3 9 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
74 70 66 3 11 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 12 1 0 0 11 95 0 11 11 24 77 4 1 2 2 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 106 0 6 0 8 6 8 102 12 1 0 0 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 77 75 73 71 69 67 63 61 53 52 44 42 37 34 26 24 20 17 13 11 7 4 0 78 1 78 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1197;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(650,85,o),
(622,41,qs),
(589,-9,o),
(510,-9,qs),
(426,-9,o),
(381,36,q),
(346,-9,o),
(272,-9,qs),
(186,-10,o),
(139,42,q),
(103,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(69,254,ls),
(57,322,o),
(117,322,qs),
(125,322,ls),
(132,322,o),
(134,313,qs),
(161,168,l),
(162,159,ls),
(171,115,o),
(222,66,o),
(259,66,qs),
(303,66,o),
(333,110,o),
(324,162,qs),
(304,271,ls),
(292,338,o),
(352,338,qs),
(359,338,ls),
(368,338,o),
(369,331,qs),
(399,162,ls),
(407,117,o),
(459,66,o),
(497,66,qs),
(541,66,o),
(570,108,o),
(561,159,qs),
(538,291,ls),
(526,358,o),
(586,358,qs),
(593,358,ls),
(602,358,o),
(604,350,qs),
(637,158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 40 2 6 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 98 0 6 6 24 77 5 3 2 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 98 0 6 6 24 77 3 1 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 102 0 5 5 6 98 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
34 34 33 35 53 36 52 36 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(746,0,ls),
(668,-1,o),
(622,41,q),
(589,-9,o),
(510,-9,qs),
(426,-9,o),
(381,36,q),
(346,-9,o),
(272,-9,qs),
(186,-10,o),
(139,42,q),
(103,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(69,254,ls),
(57,322,o),
(117,322,qs),
(125,322,ls),
(132,322,o),
(134,313,qs),
(161,168,l),
(162,159,ls),
(171,115,o),
(222,66,o),
(259,66,qs),
(303,66,o),
(333,110,o),
(324,162,qs),
(304,271,ls),
(292,338,o),
(352,338,qs),
(359,338,ls),
(368,338,o),
(369,331,qs),
(399,162,ls),
(407,117,o),
(459,66,o),
(497,66,qs),
(541,66,o),
(570,108,o),
(561,159,qs),
(538,291,ls),
(526,358,o),
(586,358,qs),
(593,358,ls),
(602,358,o),
(604,350,qs),
(636,167,ls),
(654,74,o),
(733,74,qs),
(794,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
51 47 43 3 7 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
51 47 43 3 7 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 0 7 7 24 77 6 4 2 11 4 0 0 8 98 10 9 2 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 1 7 7 24 77 6 4 2 11 4 0 0 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 98 10 1 7 7 24 77 4 1 2 2 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 102 6 11 2 0 0 7 98 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 54 52 50 48 46 44 42 40 39 37 34 31 26 24 20 17 13 11 7 4 0 55 1 55 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 783;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(673,535,o),
(670,554,qs),
(666,574,o),
(687,600,o),
(706,600,qs),
(724,600,o),
(754,574,o),
(758,554,qs),
(761,535,o),
(741,510,o),
(722,510,qs),
(703,510,o)
);
},
{
closed = 1;
nodes = (
(625,440,o),
(622,459,qs),
(619,478,o),
(639,504,o),
(657,504,qs),
(676,504,o),
(707,478,o),
(710,459,qs),
(713,440,o),
(692,414,o),
(673,414,qs),
(655,414,o)
);
},
{
closed = 1;
nodes = (
(765,504,o),
(784,504,qs),
(802,504,o),
(832,478,o),
(835,459,qs),
(839,440,o),
(818,414,o),
(800,414,qs),
(781,414,o),
(751,440,o),
(748,459,qs),
(744,478,o)
);
},
{
closed = 1;
nodes = (
(1228,0,l),
(1168,0,ls),
(1090,-1,o),
(1043,41,q),
(1011,-9,o),
(932,-9,qs),
(848,-9,o),
(802,36,q),
(768,-9,o),
(694,-9,qs),
(643,-9,o),
(607,8,q),
(609,-91,o),
(552,-151,qs),
(492,-214,o),
(390,-214,qs),
(283,-214,o),
(208,-155,qs),
(121,-86,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(545,-47,o),
(525,58,qs),
(490,251,ls),
(478,319,o),
(539,319,qs),
(546,319,ls),
(554,319,o),
(555,311,qs),
(562,272,o),
(573,216,qs),
(580,175,o),
(583,158,q),
(584,159,l),
(592,115,o),
(643,66,o),
(680,66,qs),
(724,66,o),
(754,110,o),
(745,162,qs),
(725,271,ls),
(713,338,o),
(773,338,qs),
(780,338,ls),
(789,338,o),
(790,331,qs),
(820,162,ls),
(828,117,o),
(881,66,o),
(918,66,qs),
(962,66,o),
(991,108,o),
(982,159,qs),
(959,291,ls),
(947,358,o),
(1008,358,qs),
(1014,358,ls),
(1023,358,o),
(1025,350,qs),
(1057,167,ls),
(1074,74,o),
(1154,74,qs),
(1215,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
110 106 102 3 15 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
110 106 102 3 17 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 20 1 6 6 17 95 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 106 0 12 0 14 12 14 102 20 1 6 6 17 95 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 113 111 109 107 105 103 99 97 89 88 80 78 73 70 62 60 56 53 49 47 43 40 36 114 37 114 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1197;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,535,o),
(248,554,qs),
(244,574,o),
(265,600,o),
(284,600,qs),
(303,600,o),
(332,574,o),
(336,554,qs),
(339,535,o),
(319,510,o),
(300,510,qs),
(281,510,o)
);
},
{
closed = 1;
nodes = (
(204,440,o),
(200,459,qs),
(197,478,o),
(217,504,o),
(235,504,qs),
(254,504,o),
(285,478,o),
(288,459,qs),
(291,440,o),
(270,414,o),
(251,414,qs),
(233,414,o)
);
},
{
closed = 1;
nodes = (
(343,504,o),
(362,504,qs),
(381,504,o),
(410,478,o),
(414,459,qs),
(417,440,o),
(397,414,o),
(378,414,qs),
(359,414,o),
(329,440,o),
(326,459,qs),
(322,478,o)
);
},
{
closed = 1;
nodes = (
(650,85,o),
(622,41,qs),
(589,-9,o),
(510,-9,qs),
(426,-9,o),
(381,36,q),
(346,-9,o),
(272,-9,qs),
(186,-10,o),
(139,42,q),
(103,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(69,254,ls),
(57,322,o),
(117,322,qs),
(125,322,ls),
(132,322,o),
(134,313,qs),
(161,168,l),
(162,159,ls),
(171,115,o),
(222,66,o),
(259,66,qs),
(303,66,o),
(333,110,o),
(324,162,qs),
(304,271,ls),
(292,338,o),
(352,338,qs),
(359,338,ls),
(368,338,o),
(369,331,qs),
(399,162,ls),
(407,117,o),
(459,66,o),
(497,66,qs),
(541,66,o),
(570,108,o),
(561,159,qs),
(538,291,ls),
(526,358,o),
(586,358,qs),
(593,358,ls),
(602,358,o),
(604,350,qs),
(637,158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
80 76 2 12 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 0 12 12 24 77 11 9 2 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 98 0 12 12 24 77 9 1 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 102 0 11 11 12 98 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
13 12 1 0 83 81 79 77 75 73 72 70 67 64 59 57 53 50 46 44 40 37 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,535,o),
(248,554,qs),
(244,574,o),
(265,600,o),
(284,600,qs),
(303,600,o),
(332,574,o),
(336,554,qs),
(339,535,o),
(319,510,o),
(300,510,qs),
(281,510,o)
);
},
{
closed = 1;
nodes = (
(204,440,o),
(200,459,qs),
(197,478,o),
(217,504,o),
(235,504,qs),
(254,504,o),
(285,478,o),
(288,459,qs),
(291,440,o),
(270,414,o),
(251,414,qs),
(233,414,o)
);
},
{
closed = 1;
nodes = (
(343,504,o),
(362,504,qs),
(381,504,o),
(410,478,o),
(414,459,qs),
(417,440,o),
(397,414,o),
(378,414,qs),
(359,414,o),
(329,440,o),
(326,459,qs),
(322,478,o)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(746,0,ls),
(668,-1,o),
(622,41,q),
(589,-9,o),
(510,-9,qs),
(426,-9,o),
(381,36,q),
(346,-9,o),
(272,-9,qs),
(186,-10,o),
(139,42,q),
(103,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(69,254,ls),
(57,322,o),
(117,322,qs),
(125,322,ls),
(132,322,o),
(134,313,qs),
(161,168,l),
(162,159,ls),
(171,115,o),
(222,66,o),
(259,66,qs),
(303,66,o),
(333,110,o),
(324,162,qs),
(304,271,ls),
(292,338,o),
(352,338,qs),
(359,338,ls),
(368,338,o),
(369,331,qs),
(399,162,ls),
(407,117,o),
(459,66,o),
(497,66,qs),
(541,66,o),
(570,108,o),
(561,159,qs),
(538,291,ls),
(526,358,o),
(586,358,qs),
(593,358,ls),
(602,358,o),
(604,350,qs),
(636,167,ls),
(654,74,o),
(733,74,qs),
(794,74,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
87 83 79 3 13 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
87 83 79 3 13 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 0 13 13 24 77 12 10 8 19 4 6 6 14 98 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 1 13 13 24 77 12 10 8 19 4 6 6 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 98 16 1 13 13 24 77 10 1 8 8 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 102 12 19 2 6 6 13 98 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 90 88 86 84 82 80 78 76 75 73 70 67 62 60 56 53 49 47 43 40 36 91 37 91 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 783;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1372,0,l),
(1317,0,ls),
(1228,-1,o),
(1180,54,q),
(1143,0,o),
(1068,0,qs),
(692,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(686,74,l),
(695,195,o),
(758,276,qs),
(837,377,o),
(970,377,qs),
(1060,377,o),
(1122,332,qs),
(1195,279,o),
(1204,185,q),
(1206,174,ls),
(1212,128,o),
(1265,74,o),
(1304,74,qs),
(1359,74,l)
);
},
{
closed = 1;
nodes = (
(1097,74,o),
(1135,133,o),
(1125,186,qs),
(1115,238,o),
(1033,305,o),
(978,306,qs),
(894,308,o),
(837,248,qs),
(775,184,o),
(764,74,q),
(1054,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
55 50 2 7 0 1 76 0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 102 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 60 60 1 0 60 70 60 69 65 63 58 56 54 51 47 45 37 36 28 26 21 18 14 12 9 7 0 59 1 59 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1340;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(759,54,qs),
(723,0,o),
(647,0,qs),
(266,0,ls),
(188,0,o),
(141,45,q),
(106,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(73,232,ls),
(61,299,o),
(121,299,qs),
(129,299,ls),
(136,299,o),
(138,292,qs),
(161,168,l),
(162,162,ls),
(170,121,o),
(221,74,o),
(258,74,qs),
(265,74,l),
(274,195,o),
(338,276,qs),
(417,377,o),
(549,377,qs),
(640,377,o),
(702,331,qs),
(775,277,o),
(784,182,qs),
(792,102,o)
);
},
{
closed = 1;
nodes = (
(677,74,o),
(714,133,o),
(704,186,qs),
(694,238,o),
(612,305,o),
(557,306,qs),
(473,308,o),
(416,248,qs),
(354,184,o),
(343,74,q),
(634,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
27 1 4 1 1 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 8 7 3 3 1 1 4 98 5 1 4 4 24 4 78 34 34 34 44 34 43 38 50 33 35 53 35 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 827;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(951,0,l),
(896,0,ls),
(807,-1,o),
(759,54,q),
(722,0,o),
(647,0,qs),
(266,0,ls),
(188,0,o),
(141,45,q),
(106,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(73,232,ls),
(61,299,o),
(121,299,qs),
(129,299,ls),
(136,299,o),
(138,292,qs),
(161,168,l),
(162,162,ls),
(170,121,o),
(221,74,o),
(258,74,qs),
(265,74,l),
(274,195,o),
(338,276,qs),
(417,377,o),
(549,377,qs),
(639,377,o),
(701,332,qs),
(774,279,o),
(784,185,qs),
(785,174,ls),
(791,128,o),
(844,74,o),
(883,74,qs),
(938,74,l)
);
},
{
closed = 1;
nodes = (
(677,74,o),
(714,133,o),
(704,186,qs),
(694,238,o),
(612,305,o),
(557,306,qs),
(473,308,o),
(416,248,qs),
(354,184,o),
(343,74,q),
(634,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
36 31 2 5 0 1 76 0 3 8 0 8 3 0 128 0 1 0 8 3 1 8 105 11 9 4 2 10 5 0 0 5 98 7 6 2 5 5 24 5 78 41 41 1 0 41 51 41 50 46 44 39 37 35 32 30 28 27 25 22 19 14 12 9 7 0 40 1 40 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 927;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(864,468,o),
(860,489,qs),
(857,510,o),
(880,539,o),
(901,539,qs),
(922,539,o),
(955,510,o),
(959,489,qs),
(963,468,o),
(939,439,o),
(919,439,qs),
(898,439,o)
);
},
{
closed = 1;
nodes = (
(1372,0,l),
(1317,0,ls),
(1228,-1,o),
(1180,54,q),
(1143,0,o),
(1068,0,qs),
(692,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(686,74,l),
(695,195,o),
(758,276,qs),
(837,377,o),
(970,377,qs),
(1060,377,o),
(1122,332,qs),
(1195,279,o),
(1204,185,q),
(1206,174,ls),
(1212,128,o),
(1265,74,o),
(1304,74,qs),
(1359,74,l)
);
},
{
closed = 1;
nodes = (
(1097,74,o),
(1135,133,o),
(1125,186,qs),
(1115,238,o),
(1033,305,o),
(978,306,qs),
(894,308,o),
(837,248,qs),
(775,184,o),
(764,74,q),
(1054,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
67 62 2 9 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 3 0 11 7 3 11 105 0 6 0 8 6 8 102 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 102 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
72 72 13 12 1 0 72 82 72 81 77 75 70 68 66 63 59 57 49 48 40 38 33 30 26 24 21 19 12 71 13 71 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1340;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,468,o),
(449,489,qs),
(445,510,o),
(468,539,o),
(489,539,qs),
(510,539,o),
(543,510,o),
(547,489,qs),
(551,468,o),
(527,439,o),
(507,439,qs),
(486,439,o)
);
},
{
closed = 1;
nodes = (
(759,54,qs),
(723,0,o),
(647,0,qs),
(266,0,ls),
(188,0,o),
(141,45,q),
(106,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(73,232,ls),
(61,299,o),
(121,299,qs),
(129,299,ls),
(136,299,o),
(138,292,qs),
(161,168,l),
(162,162,ls),
(170,121,o),
(221,74,o),
(258,74,qs),
(265,74,l),
(274,195,o),
(338,276,qs),
(417,377,o),
(549,377,qs),
(640,377,o),
(702,331,qs),
(775,277,o),
(784,182,qs),
(792,102,o)
);
},
{
closed = 1;
nodes = (
(677,74,o),
(714,133,o),
(704,186,qs),
(694,238,o),
(612,305,o),
(557,306,qs),
(473,308,o),
(416,248,qs),
(354,184,o),
(343,74,q),
(634,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 6 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 8 3 8 4 3 128 0 2 0 8 4 2 8 105 10 1 0 0 1 97 0 1 1 23 77 11 9 5 3 3 3 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 4 8 3 8 4 3 128 0 1 10 1 0 2 1 0 105 0 2 0 8 4 2 8 105 11 9 5 3 3 3 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
46 46 1 0 46 56 46 55 51 49 43 40 38 36 35 33 30 27 22 20 17 15 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 827;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,468,o),
(449,489,qs),
(445,510,o),
(468,539,o),
(489,539,qs),
(510,539,o),
(543,510,o),
(547,489,qs),
(551,468,o),
(527,439,o),
(507,439,qs),
(486,439,o)
);
},
{
closed = 1;
nodes = (
(951,0,l),
(896,0,ls),
(807,-1,o),
(759,54,q),
(722,0,o),
(647,0,qs),
(266,0,ls),
(188,0,o),
(141,45,q),
(106,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(73,232,ls),
(61,299,o),
(121,299,qs),
(129,299,ls),
(136,299,o),
(138,292,qs),
(161,168,l),
(162,162,ls),
(170,121,o),
(221,74,o),
(258,74,qs),
(265,74,l),
(274,195,o),
(338,276,qs),
(417,377,o),
(549,377,qs),
(639,377,o),
(701,332,qs),
(774,279,o),
(784,185,qs),
(785,174,ls),
(791,128,o),
(844,74,o),
(883,74,qs),
(938,74,l)
);
},
{
closed = 1;
nodes = (
(677,74,o),
(714,133,o),
(704,186,qs),
(694,238,o),
(612,305,o),
(557,306,qs),
(473,308,o),
(416,248,qs),
(354,184,o),
(343,74,q),
(634,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
48 43 2 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 10 2 10 5 2 128 0 3 0 10 5 3 10 105 12 1 0 0 1 97 0 1 1 23 77 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 10 2 10 5 2 128 0 1 12 1 0 3 1 0 105 0 3 0 10 5 3 10 105 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
53 53 13 12 1 0 53 63 53 62 58 56 51 49 47 44 42 40 39 37 34 31 26 24 21 19 12 52 13 52 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 927;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(834,0,ls),
(745,-1,o),
(697,54,q),
(660,0,o),
(585,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(130,74,o),
(160,74,qs),
(203,74,l),
(130,488,ls),
(118,556,o),
(179,556,qs),
(186,556,ls),
(194,556,o),
(195,548,qs),
(250,238,l),
(329,377,o),
(487,377,qs),
(577,377,o),
(639,332,qs),
(712,279,o),
(721,185,q),
(723,174,ls),
(729,128,o),
(782,74,o),
(821,74,qs),
(876,74,l)
);
},
{
closed = 1;
nodes = (
(614,74,o),
(652,133,o),
(642,186,qs),
(632,238,o),
(550,305,o),
(495,306,qs),
(411,308,o),
(354,248,qs),
(292,184,o),
(281,74,q),
(571,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 0 6 27 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 32 32 1 0 32 42 32 41 37 35 30 28 26 23 19 17 15 12 9 7 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,54,qs),
(558,0,o),
(482,0,qs),
(6,0,l),
(-7,74,l),
(101,74,l),
(101,76,l),
(28,488,ls),
(16,556,o),
(77,556,qs),
(84,556,ls),
(93,556,o),
(94,548,qs),
(149,239,l),
(226,377,o),
(385,377,qs),
(475,377,o),
(538,331,qs),
(611,277,o),
(620,182,qs),
(627,102,o)
);
},
{
closed = 1;
nodes = (
(512,74,o),
(549,133,o),
(540,186,qs),
(530,238,o),
(448,305,o),
(393,306,qs),
(309,308,o),
(252,248,qs),
(190,184,o),
(179,74,q),
(469,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
6 1 2 4 1 76 0 0 0 4 2 0 4 105 0 1 1 23 77 6 5 2 2 2 3 96 0 3 3 24 3 78 21 21 21 31 21 30 38 33 34 51 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(786,0,l),
(731,0,ls),
(643,-1,o),
(595,54,q),
(558,0,o),
(482,0,qs),
(6,0,l),
(-7,74,l),
(101,74,l),
(101,76,l),
(28,488,ls),
(16,556,o),
(77,556,qs),
(84,556,ls),
(93,556,o),
(94,548,qs),
(149,239,l),
(227,377,o),
(385,377,qs),
(474,377,o),
(537,332,qs),
(609,279,o),
(619,185,qs),
(621,174,ls),
(627,128,o),
(680,74,o),
(719,74,qs),
(774,74,l)
);
},
{
closed = 1;
nodes = (
(512,74,o),
(549,133,o),
(540,186,qs),
(530,238,o),
(448,305,o),
(393,306,qs),
(309,308,o),
(252,248,qs),
(190,184,o),
(179,74,q),
(469,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 0 6 23 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 28 28 1 0 28 38 28 37 33 31 26 24 22 20 19 17 15 12 9 7 0 27 1 27 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 762;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(834,0,ls),
(745,-1,o),
(697,54,q),
(660,0,o),
(585,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(130,74,o),
(160,74,qs),
(203,74,l),
(130,488,ls),
(118,556,o),
(179,556,qs),
(186,556,ls),
(194,556,o),
(195,548,qs),
(250,238,l),
(329,377,o),
(487,377,qs),
(577,377,o),
(639,332,qs),
(712,279,o),
(721,185,q),
(723,174,ls),
(729,128,o),
(782,74,o),
(821,74,qs),
(876,74,l)
);
},
{
closed = 1;
nodes = (
(390,468,o),
(386,489,qs),
(383,510,o),
(406,539,o),
(427,539,qs),
(448,539,o),
(481,510,o),
(485,489,qs),
(488,468,o),
(465,439,o),
(445,439,qs),
(424,439,o)
);
},
{
closed = 1;
nodes = (
(614,74,o),
(652,133,o),
(642,186,qs),
(632,238,o),
(550,305,o),
(495,306,qs),
(411,308,o),
(354,248,qs),
(292,184,o),
(281,74,q),
(571,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 0 8 27 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
44 44 33 32 1 0 44 54 44 53 49 47 39 37 32 43 33 43 30 28 26 23 19 17 15 12 9 7 0 31 1 31 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 861;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,54,qs),
(558,0,o),
(482,0,qs),
(6,0,l),
(-7,74,l),
(101,74,l),
(101,76,l),
(28,488,ls),
(16,556,o),
(77,556,qs),
(84,556,ls),
(93,556,o),
(94,548,qs),
(149,239,l),
(226,377,o),
(385,377,qs),
(475,377,o),
(538,331,qs),
(611,277,o),
(620,182,qs),
(627,102,o)
);
},
{
closed = 1;
nodes = (
(288,468,o),
(284,489,qs),
(280,510,o),
(304,539,o),
(325,539,qs),
(345,539,o),
(379,510,o),
(382,489,qs),
(386,468,o),
(363,439,o),
(342,439,qs),
(322,439,o)
);
},
{
closed = 1;
nodes = (
(512,74,o),
(549,133,o),
(540,186,qs),
(530,238,o),
(448,305,o),
(393,306,qs),
(309,308,o),
(252,248,qs),
(190,184,o),
(179,74,q),
(469,74,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 6 2 0 6 105 0 1 1 23 77 8 1 4 4 5 97 0 5 5 23 77 9 7 2 2 2 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 8 1 4 0 5 4 105 0 0 0 6 2 0 6 105 0 1 1 23 77 9 7 2 2 2 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
33 33 22 21 33 43 33 42 38 36 28 26 21 32 22 32 33 34 51 35 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(786,0,l),
(731,0,ls),
(643,-1,o),
(595,54,q),
(558,0,o),
(482,0,qs),
(6,0,l),
(-7,74,l),
(101,74,l),
(101,76,l),
(28,488,ls),
(16,556,o),
(77,556,qs),
(84,556,ls),
(93,556,o),
(94,548,qs),
(149,239,l),
(227,377,o),
(385,377,qs),
(474,377,o),
(537,332,qs),
(609,279,o),
(619,185,qs),
(621,174,ls),
(627,128,o),
(680,74,o),
(719,74,qs),
(774,74,l)
);
},
{
closed = 1;
nodes = (
(288,468,o),
(284,489,qs),
(280,510,o),
(304,539,o),
(325,539,qs),
(345,539,o),
(379,510,o),
(382,489,qs),
(386,468,o),
(363,439,o),
(342,439,qs),
(322,439,o)
);
},
{
closed = 1;
nodes = (
(512,74,o),
(549,133,o),
(540,186,qs),
(530,238,o),
(448,305,o),
(393,306,qs),
(309,308,o),
(252,248,qs),
(190,184,o),
(179,74,q),
(469,74,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 0 8 23 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 8 0 1 8 105 0 2 2 23 77 11 1 6 6 7 97 0 7 7 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
40 40 29 28 1 0 40 50 40 49 45 43 35 33 28 39 29 39 26 24 22 20 19 17 15 12 9 7 0 27 1 27 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 762;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(544,-226,o),
(540,-238,qs),
(529,-279,o),
(431,-332,o),
(367,-331,qs),
(268,-330,o),
(200,-277,qs),
(126,-220,o),
(113,-127,qs),
(103,-62,o),
(131,-11,qs),
(163,47,o),
(234,67,q),
(123,184,ls),
(101,207,o),
(95,231,qs),
(79,288,o),
(133,331,qs),
(192,377,o),
(284,377,qs),
(355,377,o),
(414,346,qs),
(487,308,o),
(495,249,qs),
(500,218,o),
(484,192,qs),
(414,74,l),
(652,74,l),
(665,0,l),
(397,0,ls),
(353,0,o),
(328,16,q),
(313,2,o),
(281,-2,qs),
(232,-8,o),
(186,-76,o),
(195,-130,qs),
(204,-179,o),
(242,-215,qs),
(290,-258,o),
(364,-260,qs),
(417,-261,o),
(459,-248,qs),
(483,-241,o),
(517,-221,qs),
(528,-214,o)
);
},
{
closed = 1;
nodes = (
(207,206,qs),
(210,203,o),
(211,202,qs),
(318,89,ls),
(325,81,o),
(330,89,qs),
(397,202,ls),
(411,225,o),
(408,239,qs),
(403,267,o),
(331,306,o),
(285,306,qs),
(237,306,o),
(179,268,o),
(184,239,qs),
(186,227,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
32 13 2 1 2 1 76 0 3 0 5 2 3 5 105 0 0 0 4 0 4 101 0 2 2 1 95 0 1 1 24 1 78 39 45 38 17 41 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,0,o),
(466,0,qs),
(6,0,l),
(-7,74,l),
(125,74,l),
(78,119,o),
(70,188,qs),
(62,268,o),
(104,320,qs),
(150,377,o),
(235,377,qs),
(285,377,o),
(365,333,o),
(372,302,qs),
(376,285,o),
(362,271,o),
(347,278,qs),
(286,306,o),
(250,306,qs),
(194,306,o),
(138,243,o),
(147,188,qs),
(156,141,o),
(234,74,o),
(282,74,qs),
(399,74,ls),
(429,74,o),
(471,43,o),
(476,18,qs),
(477,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 2 0 1 0 2 1 105 3 1 0 0 4 95 0 4 4 24 4 78 33 21 38 36 50 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,0,l),
(359,0,ls),
(314,0,o),
(290,16,q),
(274,1,o),
(241,0,qs),
(6,0,l),
(-7,74,l),
(190,74,l),
(86,184,ls),
(64,207,o),
(58,231,qs),
(42,288,o),
(97,331,qs),
(156,377,o),
(247,377,qs),
(318,377,o),
(377,346,qs),
(450,308,o),
(458,249,qs),
(463,218,o),
(447,192,qs),
(377,74,l),
(615,74,l)
);
},
{
closed = 1;
nodes = (
(374,225,o),
(371,239,qs),
(367,267,o),
(294,306,o),
(249,306,qs),
(200,306,o),
(142,268,o),
(147,239,qs),
(149,227,o),
(170,206,qs),
(173,203,o),
(174,202,qs),
(281,89,ls),
(288,81,o),
(293,89,qs),
(360,202,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
19 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 35 33 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,469,o),
(205,490,qs),
(201,511,o),
(225,540,o),
(245,540,qs),
(266,540,o),
(299,511,o),
(303,490,qs),
(307,469,o),
(284,440,o),
(263,440,qs),
(243,440,o)
);
},
{
closed = 1;
nodes = (
(544,-226,o),
(540,-238,qs),
(529,-279,o),
(431,-332,o),
(367,-331,qs),
(268,-330,o),
(200,-277,qs),
(126,-220,o),
(113,-127,qs),
(103,-62,o),
(131,-11,qs),
(163,47,o),
(234,67,q),
(123,184,ls),
(101,207,o),
(95,231,qs),
(79,288,o),
(133,331,qs),
(192,377,o),
(284,377,qs),
(355,377,o),
(414,346,qs),
(487,308,o),
(495,249,qs),
(500,218,o),
(484,192,qs),
(414,74,l),
(652,74,l),
(665,0,l),
(397,0,ls),
(353,0,o),
(328,16,q),
(313,2,o),
(281,-2,qs),
(232,-8,o),
(186,-76,o),
(195,-130,qs),
(204,-179,o),
(242,-215,qs),
(290,-258,o),
(364,-260,qs),
(417,-261,o),
(459,-248,qs),
(483,-241,o),
(517,-221,qs),
(528,-214,o)
);
},
{
closed = 1;
nodes = (
(207,206,qs),
(210,203,o),
(211,202,qs),
(318,89,ls),
(325,81,o),
(330,89,qs),
(397,202,ls),
(411,225,o),
(408,239,qs),
(403,267,o),
(331,306,o),
(285,306,qs),
(237,306,o),
(179,268,o),
(184,239,qs),
(186,227,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 25 2 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 0 7 4 5 7 105 0 2 0 6 2 6 101 8 1 0 0 1 97 0 1 1 23 77 0 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 8 1 0 5 1 0 105 0 5 0 7 4 5 7 105 0 2 0 6 2 6 101 0 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 62 60 53 51 38 36 30 29 28 26 17 15 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,468,o),
(151,489,qs),
(147,511,o),
(170,539,o),
(191,539,qs),
(212,539,o),
(245,511,o),
(249,489,qs),
(253,469,o),
(230,439,o),
(209,439,qs),
(188,439,o)
);
},
{
closed = 1;
nodes = (
(479,0,o),
(466,0,qs),
(6,0,l),
(-7,74,l),
(125,74,l),
(78,119,o),
(70,188,qs),
(62,268,o),
(104,320,qs),
(150,377,o),
(235,377,qs),
(285,377,o),
(365,333,o),
(372,302,qs),
(376,285,o),
(362,271,o),
(347,278,qs),
(286,306,o),
(250,306,qs),
(194,306,o),
(138,243,o),
(147,188,qs),
(156,141,o),
(234,74,o),
(282,74,qs),
(399,74,ls),
(429,74,o),
(471,43,o),
(476,18,qs),
(477,12,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 0 3 2 4 3 105 7 1 0 0 1 97 0 1 1 23 77 5 1 2 2 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 7 1 0 4 1 0 105 0 4 0 3 2 4 3 105 5 1 2 2 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 40 38 37 36 31 29 23 21 17 14 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 491;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(171,469,o),
(167,490,qs),
(164,511,o),
(187,540,o),
(208,540,qs),
(229,540,o),
(262,511,o),
(266,490,qs),
(270,469,o),
(246,440,o),
(226,440,qs),
(205,440,o)
);
},
{
closed = 1;
nodes = (
(628,0,l),
(359,0,ls),
(314,0,o),
(290,16,q),
(274,1,o),
(241,0,qs),
(6,0,l),
(-7,74,l),
(190,74,l),
(86,184,ls),
(64,207,o),
(58,231,qs),
(42,288,o),
(97,331,qs),
(156,377,o),
(247,377,qs),
(318,377,o),
(377,346,qs),
(450,308,o),
(458,249,qs),
(463,218,o),
(447,192,qs),
(377,74,l),
(615,74,l)
);
},
{
closed = 1;
nodes = (
(374,225,o),
(371,239,qs),
(367,267,o),
(294,306,o),
(249,306,qs),
(200,306,o),
(142,268,o),
(147,239,qs),
(149,227,o),
(170,206,qs),
(173,203,o),
(174,202,qs),
(281,89,ls),
(288,81,o),
(293,89,qs),
(360,202,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
12 12 1 0 47 45 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,468,o),
(569,489,qs),
(566,510,o),
(589,539,o),
(610,539,qs),
(631,539,o),
(664,510,o),
(668,489,qs),
(672,468,o),
(648,439,o),
(628,439,qs),
(607,439,o)
);
},
{
closed = 1;
nodes = (
(1003,-1,l),
(775,-1,ls),
(722,-1,o),
(697,17,q),
(678,-1,o),
(626,-1,qs),
(434,-1,l),
(434,0,l),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(562,74,l),
(536,95,o),
(497,165,o),
(492,200,qs),
(484,267,o),
(516,316,qs),
(556,377,o),
(638,377,qs),
(705,377,o),
(758,337,qs),
(816,294,o),
(832,226,qs),
(842,184,o),
(820,99,o),
(793,74,q),
(990,74,l)
);
},
{
closed = 1;
nodes = (
(766,163,o),
(758,201,qs),
(750,247,o),
(687,306,o),
(646,306,qs),
(605,306,o),
(563,247,o),
(571,201,qs),
(576,163,o),
(643,93,o),
(686,82,q),
(723,93,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 5 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 8 3 8 4 3 128 0 2 0 8 4 2 8 105 9 1 0 0 1 97 0 1 1 23 77 10 7 2 3 3 5 95 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 8 3 8 4 3 128 0 1 9 1 0 2 1 0 105 0 2 0 8 4 2 8 105 10 7 2 3 3 5 95 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
12 12 1 0 61 59 12 53 12 53 52 50 48 43 36 34 28 26 20 18 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 973;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,468,o),
(142,489,qs),
(138,511,o),
(162,539,o),
(182,539,qs),
(203,539,o),
(236,511,o),
(240,489,qs),
(244,469,o),
(221,439,o),
(200,439,qs),
(179,439,o)
);
},
{
closed = 1;
nodes = (
(393,59,qs),
(356,0,o),
(279,0,qs),
(6,0,l),
(-7,74,l),
(119,74,l),
(75,119,o),
(67,188,qs),
(58,266,o),
(91,318,qs),
(129,377,o),
(207,377,qs),
(277,377,o),
(332,331,qs),
(396,277,o),
(412,188,qs),
(425,111,o)
);
},
{
closed = 1;
nodes = (
(335,190,qs),
(326,238,o),
(256,306,o),
(215,306,qs),
(176,306,o),
(138,242,o),
(147,190,qs),
(156,141,o),
(222,74,o),
(263,74,qs),
(354,74,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 6 3 2 6 105 7 1 0 0 1 97 0 1 1 23 77 8 5 2 3 3 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 7 1 0 2 1 0 105 0 2 0 6 3 2 6 105 8 5 2 3 3 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
30 29 1 0 36 34 29 39 30 39 26 24 23 22 17 15 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,468,o),
(141,489,qs),
(138,511,o),
(161,539,o),
(182,539,qs),
(203,539,o),
(236,511,o),
(240,489,qs),
(243,469,o),
(220,439,o),
(200,439,qs),
(179,439,o)
);
},
{
closed = 1;
nodes = (
(576,0,l),
(347,0,ls),
(295,0,o),
(269,18,q),
(251,0,o),
(198,0,qs),
(6,0,l),
(-7,74,l),
(135,74,l),
(109,95,o),
(69,165,o),
(65,201,qs),
(57,268,o),
(89,317,qs),
(128,377,o),
(210,377,qs),
(278,377,o),
(331,338,qs),
(388,295,o),
(405,226,qs),
(414,185,o),
(393,100,o),
(366,74,q),
(562,74,l)
);
},
{
closed = 1;
nodes = (
(338,163,o),
(331,201,qs),
(322,247,o),
(259,306,o),
(219,306,qs),
(178,306,o),
(135,247,o),
(143,201,qs),
(149,163,o),
(216,94,o),
(258,82,q),
(296,94,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
12 12 1 0 43 41 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,470,o),
(317,489,qs),
(314,508,o),
(335,534,o),
(354,534,qs),
(373,534,o),
(402,508,o),
(405,489,qs),
(407,470,o),
(385,444,o),
(366,444,qs),
(348,444,o)
);
},
{
closed = 1;
nodes = (
(445,470,o),
(443,489,qs),
(440,508,o),
(461,534,o),
(480,534,qs),
(499,534,o),
(527,508,o),
(530,489,qs),
(533,470,o),
(512,444,o),
(493,444,qs),
(474,444,o)
);
},
{
closed = 1;
nodes = (
(253,-83,qs),
(321,-143,o),
(420,-143,qs),
(502,-143,o),
(594,-69,o),
(597,0,q),
(518,0,ls),
(437,0,o),
(382,46,qs),
(321,96,o),
(308,182,qs),
(294,265,o),
(331,318,qs),
(371,376,o),
(450,377,qs),
(637,379,o),
(671,74,q),
(806,74,l),
(820,0,l),
(671,0,l),
(667,-97,o),
(608,-152,qs),
(541,-215,o),
(421,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o)
);
},
{
closed = 1;
nodes = (
(593,80,o),
(591,93,qs),
(562,306,o),
(455,306,qs),
(414,306,o),
(376,239,o),
(385,184,qs),
(394,137,o),
(465,74,o),
(511,74,qs),
(593,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
0 4 12 7 12 4 7 128 3 1 1 14 2 13 3 0 8 1 0 105 0 8 0 12 4 8 12 105 0 10 0 5 10 5 101 11 1 7 7 6 95 9 1 6 6 24 6 78 13 12 1 0 72 70 66 65 62 60 58 56 50 48 47 46 45 44 41 39 31 29 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,470,o),
(82,489,qs),
(78,508,o),
(98,534,o),
(117,534,qs),
(136,534,o),
(166,509,o),
(170,489,qs),
(173,470,o),
(152,444,o),
(133,444,qs),
(114,444,o)
);
},
{
closed = 1;
nodes = (
(211,470,o),
(207,489,qs),
(204,508,o),
(225,534,o),
(244,534,qs),
(262,534,o),
(291,509,o),
(295,489,qs),
(299,470,o),
(278,444,o),
(260,444,qs),
(241,444,o)
);
},
{
closed = 1;
nodes = (
(393,59,qs),
(356,0,o),
(279,0,qs),
(6,0,l),
(-7,74,l),
(119,74,l),
(75,119,o),
(67,188,qs),
(58,266,o),
(91,318,qs),
(129,377,o),
(207,377,qs),
(277,377,o),
(332,331,qs),
(396,277,o),
(412,188,qs),
(425,111,o)
);
},
{
closed = 1;
nodes = (
(335,190,qs),
(326,238,o),
(256,306,o),
(215,306,qs),
(176,306,o),
(138,242,o),
(147,190,qs),
(156,141,o),
(222,74,o),
(263,74,qs),
(354,74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 0 4 0 8 5 4 8 105 11 7 2 5 5 6 95 0 6 6 24 6 78 42 41 13 12 1 0 48 46 41 51 42 51 38 36 35 34 29 27 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,471,o),
(68,490,qs),
(64,509,o),
(84,534,o),
(103,534,qs),
(122,534,o),
(152,509,o),
(156,490,qs),
(159,471,o),
(138,444,o),
(119,444,qs),
(101,444,o)
);
},
{
closed = 1;
nodes = (
(197,471,o),
(194,490,qs),
(190,509,o),
(211,534,o),
(230,534,qs),
(248,534,o),
(278,509,o),
(281,490,qs),
(285,471,o),
(264,444,o),
(246,444,qs),
(227,444,o)
);
},
{
closed = 1;
nodes = (
(576,0,l),
(347,0,ls),
(295,0,o),
(269,18,q),
(251,0,o),
(198,0,qs),
(6,0,l),
(-7,74,l),
(135,74,l),
(109,95,o),
(69,165,o),
(65,201,qs),
(57,268,o),
(89,317,qs),
(128,377,o),
(210,377,qs),
(278,377,o),
(331,338,qs),
(388,295,o),
(405,226,qs),
(414,185,o),
(393,100,o),
(366,74,q),
(562,74,l)
);
},
{
closed = 1;
nodes = (
(338,163,o),
(331,201,qs),
(322,247,o),
(259,306,o),
(219,306,qs),
(178,306,o),
(135,247,o),
(143,201,qs),
(149,163,o),
(216,94,o),
(258,82,q),
(296,94,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
43 1 6 5 1 76 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 55 53 24 47 24 47 46 44 42 40 39 38 32 30 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(889,0,l),
(828,0,ls),
(745,-1,o),
(699,46,q),
(665,0,o),
(588,0,qs),
(287,0,ls),
(208,0,o),
(155,33,qs),
(91,74,o),
(82,154,qs),
(76,201,o),
(108,278,o),
(140,298,qs),
(149,303,o),
(156,303,qs),
(166,303,o),
(172,287,o),
(165,276,qs),
(138,230,o),
(144,177,qs),
(150,128,o),
(224,74,o),
(286,74,qs),
(588,74,ls),
(658,74,o),
(641,169,qs),
(584,488,ls),
(572,556,o),
(633,556,qs),
(640,556,ls),
(648,556,o),
(649,548,qs),
(718,168,ls),
(726,124,o),
(777,74,o),
(815,74,qs),
(876,74,l)
);
},
{
closed = 1;
nodes = (
(318,313,q),
(298,336,o),
(294,362,qs),
(287,399,o),
(329,449,o),
(367,449,qs),
(395,449,o),
(438,421,o),
(444,401,q),
(446,387,o),
(437,387,qs),
(433,387,o),
(426,391,qs),
(419,394,ls),
(402,402,o),
(382,402,qs),
(337,402,o),
(344,361,qs),
(348,342,o),
(378,317,o),
(398,317,qs),
(443,317,ls),
(462,317,o),
(487,298,o),
(487,283,qs),
(487,279,ls),
(487,270,o),
(479,270,qs),
(364,270,ls),
(330,270,o),
(311,262,q),
(309,262,o),
(308,261,q),
(303,259,o),
(300,259,qs),
(290,259,o),
(289,268,qs),
(283,302,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
74 1 3 8 33 1 4 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 9 8 9 10 8 128 0 3 8 6 8 3 6 128 0 11 0 9 10 11 9 105 0 8 7 1 6 0 8 6 105 0 1 1 23 77 2 12 2 0 0 4 96 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 10 9 8 9 10 8 128 0 3 8 7 8 3 7 128 0 6 7 0 7 6 0 128 0 11 0 9 10 11 9 105 0 8 0 7 6 8 7 103 0 1 1 23 77 2 12 2 0 0 4 96 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 70 68 65 63 60 58 55 52 48 45 40 39 36 34 32 29 22 20 14 11 8 5 0 37 1 37 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 859;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(343,358,o),
(395,322,qs),
(465,273,o),
(477,177,qs),
(488,95,o),
(451,48,qs),
(413,0,o),
(339,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
15 1 1 74 0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 30 28 25 22 9 7 0 31 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(643,0,l),
(588,0,ls),
(500,-1,o),
(454,51,q),
(416,0,o),
(339,0,qs),
(6,0,l),
(-7,74,l),
(327,74,ls),
(418,74,o),
(399,181,qs),
(391,228,o),
(327,287,o),
(286,287,qs),
(94,287,ls),
(41,287,o),
(34,329,qs),
(30,347,ls),
(25,376,o),
(42,388,qs),
(254,553,l),
(254,554,l),
(258,557,o),
(262,555,qs),
(285,541,o),
(291,493,o),
(271,478,qs),
(122,362,l),
(119,358,o),
(124,358,qs),
(276,358,ls),
(342,358,o),
(394,322,qs),
(463,274,o),
(477,180,qs),
(478,174,ls),
(486,128,o),
(538,74,o),
(576,74,qs),
(630,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
35 1 4 0 1 76 15 1 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 38 36 34 32 31 29 26 23 9 7 0 39 1 39 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(611,-87,o),
(554,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(449,488,ls),
(437,556,o),
(498,556,qs),
(504,556,ls),
(513,556,o),
(514,548,qs),
(583,164,ls),
(591,122,o),
(643,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
38 1 5 0 1 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 0 0 0 5 95 0 5 5 24 5 78 36 40 24 37 52 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(27,488,ls),
(15,556,o),
(76,556,qs),
(83,556,ls),
(91,556,o),
(92,548,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(27,488,ls),
(15,556,o),
(76,556,qs),
(83,556,ls),
(91,556,o),
(92,548,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(314,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 1 3 0 1 76 0 1 1 23 77 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 20 18 16 14 13 11 8 5 0 21 1 21 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(699,0,ls),
(624,0,o),
(572,47,q),
(540,-9,o),
(457,-9,qs),
(364,-9,o),
(261,42,q),
(250,42,ls),
(178,37,o),
(194,-54,qs),
(224,-221,ls),
(236,-288,o),
(175,-288,qs),
(168,-288,ls),
(160,-288,o),
(158,-280,qs),
(118,-53,ls),
(92,96,o),
(211,114,q),
(219,130,o),
(231,173,qs),
(260,270,o),
(280,306,qs),
(319,377,o),
(388,377,qs),
(464,377,o),
(518,319,qs),
(571,261,o),
(587,166,qs),
(587,164,l),
(595,123,o),
(647,74,o),
(683,74,qs),
(738,74,l),
(751,0,l)
);
},
{
closed = 1;
nodes = (
(518,110,o),
(508,164,qs),
(498,225,o),
(435,306,o),
(398,306,qs),
(372,306,o),
(333,240,o),
(311,153,qs),
(302,119,o),
(296,104,q),
(379,62,o),
(447,63,qs),
(490,63,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
37 1 0 7 31 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
37 1 0 7 31 1 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 4 0 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 6 2 0 0 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 3 6 4 6 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 0 0 0 4 97 5 1 4 4 24 77 8 1 6 6 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 0 0 0 5 97 0 5 5 24 77 8 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 6 0 4 2 6 4 105 0 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
36 35 43 41 35 47 36 47 34 33 35 57 38 32 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 704;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,38,qs),
(394,-9,o),
(318,-9,qs),
(226,-9,o),
(127,40,q),
(110,17,o),
(62,0,o),
(16,0,qs),
(6,0,l),
(-7,74,l),
(1,74,ls),
(43,74,o),
(75,109,o),
(92,173,qs),
(121,270,o),
(141,306,qs),
(181,377,o),
(249,377,qs),
(326,377,o),
(380,318,qs),
(434,260,o),
(449,163,qs),
(461,83,o)
);
},
{
closed = 1;
nodes = (
(379,110,o),
(370,164,qs),
(359,225,o),
(296,306,o),
(260,306,qs),
(233,306,o),
(195,240,o),
(172,153,qs),
(163,119,o),
(157,104,q),
(240,62,o),
(308,63,qs),
(351,63,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 1 5 17 1 2 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
25 1 1 5 17 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 5 1 0 5 105 6 4 2 1 1 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 0 5 1 0 5 105 0 1 1 2 97 3 1 2 2 24 77 6 1 4 4 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 6 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 5 1 0 5 105 6 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
24 23 31 29 23 35 24 35 35 33 37 35 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,0,ls),
(485,0,o),
(434,47,q),
(401,-9,o),
(318,-9,qs),
(226,-9,o),
(127,40,q),
(110,17,o),
(62,0,o),
(16,0,qs),
(6,0,l),
(-7,74,l),
(1,74,ls),
(43,74,o),
(75,109,o),
(92,173,qs),
(121,270,o),
(141,306,qs),
(181,377,o),
(249,377,qs),
(326,377,o),
(379,319,qs),
(433,261,o),
(448,166,q),
(449,164,l),
(457,123,o),
(508,74,o),
(545,74,qs),
(599,74,l),
(612,0,l)
);
},
{
closed = 1;
nodes = (
(379,110,o),
(370,164,qs),
(359,225,o),
(296,306,o),
(260,306,qs),
(233,306,o),
(195,240,o),
(172,153,qs),
(163,119,o),
(157,104,q),
(240,62,o),
(308,63,qs),
(351,63,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
32 1 0 7 26 22 2 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
32 1 0 7 26 22 2 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 7 0 1 7 105 8 6 2 3 0 0 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 7 0 1 7 105 2 1 0 0 3 97 5 4 2 3 3 24 77 8 1 6 6 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 7 0 1 7 105 2 1 0 0 3 97 5 1 3 3 24 77 8 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 7 0 1 7 105 8 1 6 0 4 6 4 101 2 1 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
31 30 38 36 30 42 31 42 34 35 33 37 38 32 9 7 28 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,359,o),
(247,380,qs),
(243,401,o),
(266,430,o),
(287,430,qs),
(308,430,o),
(341,401,o),
(345,380,qs),
(349,359,o),
(325,330,o),
(305,330,qs),
(284,330,o)
);
},
{
closed = 1;
nodes = (
(693,0,ls),
(643,0,o),
(606,16,q),
(612,-87,o),
(555,-149,qs),
(494,-214,o),
(384,-214,qs),
(285,-214,o),
(210,-155,qs),
(121,-84,o),
(103,40,qs),
(94,102,o),
(131,207,o),
(170,232,q),
(178,236,o),
(184,236,qs),
(199,236,o),
(199,222,qs),
(199,218,o),
(197,213,qs),
(162,134,o),
(175,55,qs),
(190,-35,o),
(248,-88,qs),
(307,-143,o),
(387,-143,qs),
(458,-143,o),
(496,-100,qs),
(544,-47,o),
(525,58,qs),
(484,291,ls),
(472,358,o),
(533,358,qs),
(540,358,ls),
(548,358,o),
(549,350,qs),
(582,166,l),
(582,167,ls),
(590,124,o),
(642,74,o),
(679,74,qs),
(740,74,l),
(753,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
51 1 7 2 1 76 0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 102 0 2 2 7 95 0 7 7 24 7 78 1 0 54 52 48 46 38 37 29 27 22 19 14 12 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,499,o),
(112,478,qs),
(116,457,o),
(92,428,o),
(72,428,qs),
(51,428,o),
(17,457,o),
(14,478,qs),
(10,500,o),
(33,528,o),
(54,528,qs),
(75,528,o)
);
},
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,457,o),
(14,478,qs),
(10,500,o),
(33,528,o),
(54,528,qs),
(75,528,o),
(108,499,o),
(112,478,qs),
(116,457,o),
(92,428,o),
(72,428,qs),
(51,428,o)
);
},
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
29 1 5 2 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 32 30 28 26 25 23 20 17 12 33 13 33 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,0,l),
(537,0,ls),
(450,0,o),
(403,48,q),
(364,-9,o),
(277,-9,qs),
(205,-9,o),
(153,34,qs),
(93,86,o),
(80,179,qs),
(70,250,o),
(104,299,qs),
(144,358,o),
(228,358,qs),
(315,358,l),
(314,364,ls),
(303,432,o),
(362,432,qs),
(369,432,ls),
(377,432,o),
(379,424,qs),
(424,169,ls),
(441,74,o),
(521,74,qs),
(582,74,l)
);
},
{
closed = 1;
nodes = (
(356,123,o),
(347,174,qs),
(327,287,l),
(244,287,ls),
(145,287,o),
(157,179,qs),
(162,132,o),
(231,65,o),
(275,65,qs),
(318,65,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
20 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
20 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 2 2 1 112 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 5 7 3 0 0 3 97 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 7 1 0 0 4 95 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 104 8 1 5 0 3 5 3 101 7 1 0 0 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 31 29 25 34 26 34 23 21 19 17 11 9 7 4 0 24 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 562;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(586,55,qs),
(552,0,o),
(474,0,qs),
(330,0,ls),
(281,0,o),
(257,16,q),
(239,0,o),
(189,0,qs),
(6,0,l),
(-7,74,l),
(136,74,l),
(79,115,o),
(68,197,qs),
(57,273,o),
(96,320,q),
(23,329,o),
(9,390,qs),
(8,396,ls),
(7,406,o),
(19,402,qs),
(51,393,o),
(79,389,qs),
(126,382,o),
(190,380,qs),
(271,378,o),
(363,377,qs),
(459,375,o),
(523,332,qs),
(598,280,o),
(608,182,qs),
(616,102,o)
);
},
{
closed = 1;
nodes = (
(550,74,o),
(531,183,qs),
(510,303,o),
(370,307,qs),
(364,307,o),
(351,307,qs),
(336,308,o),
(329,308,q),
(370,265,o),
(379,197,qs),
(389,121,o),
(344,74,q),
(465,74,ls)
);
},
{
closed = 1;
nodes = (
(130,246,o),
(137,201,qs),
(145,159,o),
(204,94,o),
(244,84,q),
(281,94,o),
(317,158,o),
(309,201,qs),
(301,246,o),
(243,306,o),
(205,306,qs),
(168,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
15 1 4 0 50 1 1 4 24 1 2 1 3 76 0 0 8 6 2 4 1 0 4 105 7 5 2 1 1 2 95 3 1 2 2 24 2 78 45 44 31 31 44 55 45 55 31 43 31 42 87 50 33 28 67 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(775,0,l),
(720,0,ls),
(632,-1,o),
(585,52,q),
(550,0,o),
(474,0,qs),
(330,0,ls),
(281,0,o),
(257,16,q),
(239,0,o),
(189,0,qs),
(6,0,l),
(-7,74,l),
(136,74,l),
(79,115,o),
(68,197,qs),
(57,273,o),
(96,320,q),
(23,329,o),
(9,390,qs),
(8,396,ls),
(7,406,o),
(19,402,qs),
(50,394,o),
(79,389,qs),
(126,382,o),
(190,380,qs),
(274,378,o),
(363,377,qs),
(459,375,o),
(523,332,qs),
(598,280,o),
(608,182,qs),
(609,173,ls),
(614,129,o),
(668,74,o),
(707,74,qs),
(762,74,l)
);
},
{
closed = 1;
nodes = (
(550,74,o),
(531,183,qs),
(510,303,o),
(370,307,qs),
(364,307,o),
(351,308,qs),
(336,308,o),
(329,308,q),
(370,265,o),
(379,197,qs),
(389,121,o),
(344,74,q),
(465,74,ls)
);
},
{
closed = 1;
nodes = (
(130,246,o),
(137,201,qs),
(145,159,o),
(204,94,o),
(244,84,q),
(281,94,o),
(317,158,o),
(309,201,qs),
(301,246,o),
(242,306,o),
(205,306,qs),
(168,306,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
19 1 6 1 57 1 0 6 33 28 2 3 0 3 76 0 1 12 9 7 3 6 0 1 6 105 11 8 2 10 4 0 0 3 95 5 4 2 3 3 24 3 78 52 51 38 38 1 0 51 62 52 62 38 50 38 49 47 45 44 42 36 34 32 29 27 25 24 23 11 7 0 37 1 37 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,0,l),
(460,-81,o),
(444,-124,qs),
(415,-215,o),
(300,-214,qs),
(253,-214,o),
(176,-176,o),
(162,-147,qs),
(153,-126,o),
(174,-126,qs),
(179,-126,o),
(188,-128,qs),
(235,-143,o),
(283,-143,qs),
(344,-142,o),
(366,-106,qs),
(386,-74,o),
(377,0,q),
(292,0,ls),
(211,0,o),
(156,46,qs),
(95,96,o),
(81,182,qs),
(68,265,o),
(105,318,qs),
(145,376,o),
(224,377,qs),
(411,379,o),
(445,74,q),
(580,74,l),
(594,0,l)
);
},
{
closed = 1;
nodes = (
(367,80,o),
(365,93,qs),
(336,306,o),
(229,306,qs),
(188,306,o),
(149,239,o),
(159,184,qs),
(168,137,o),
(239,74,o),
(285,74,qs),
(366,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 4 2 3 2 4 3 128 0 1 0 8 0 1 8 105 0 3 0 5 3 5 101 9 7 2 0 0 2 95 6 1 2 2 24 2 78 32 31 38 36 31 41 32 41 19 35 34 35 38 33 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(690,74,l),
(703,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 0 0 0 1 95 5 1 1 1 24 1 78 19 40 40 33 36 32 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,0,l),
(666,-97,o),
(608,-152,qs),
(543,-215,o),
(423,-214,qs),
(290,-214,o),
(207,-147,qs),
(123,-78,o),
(105,41,qs),
(93,126,o),
(126,187,qs),
(142,217,o),
(165,233,qs),
(173,238,o),
(180,238,qs),
(195,238,o),
(195,224,qs),
(195,220,o),
(193,215,qs),
(161,136,o),
(177,56,qs),
(193,-30,o),
(253,-83,qs),
(321,-143,o),
(421,-143,qs),
(586,-143,o),
(597,0,q),
(488,0,ls),
(473,0,o),
(471,12,qs),
(470,19,ls),
(466,44,o),
(498,74,o),
(528,74,qs),
(690,74,l),
(703,0,l)
);
},
{
closed = 1;
nodes = (
(430,-304,o),
(434,-323,qs),
(437,-343,o),
(416,-369,o),
(397,-369,qs),
(379,-369,o),
(349,-343,o),
(346,-323,qs),
(342,-304,o),
(362,-279,o),
(381,-279,qs),
(400,-279,o)
);
},
{
closed = 1;
nodes = (
(555,-304,o),
(559,-323,qs),
(563,-343,o),
(542,-369,o),
(524,-369,qs),
(505,-369,o),
(475,-343,o),
(471,-323,qs),
(468,-304,o),
(488,-279,o),
(508,-279,qs),
(526,-279,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 3 0 3 133 0 2 0 4 6 2 4 105 11 8 10 3 6 9 1 7 6 7 101 0 0 0 1 95 5 1 1 1 24 1 78 49 48 37 36 55 53 48 59 49 59 43 41 36 47 37 47 19 40 40 33 36 32 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(174,94,o),
(144,50,qs),
(111,0,o),
(31,0,qs),
(6,0,l)
);
},
{
closed = 1;
nodes = (
(20,-139,o),
(17,-119,qs),
(13,-101,o),
(33,-75,o),
(52,-75,qs),
(71,-75,o),
(101,-100,o),
(105,-119,qs),
(108,-139,o),
(87,-165,o),
(68,-165,qs),
(50,-165,o)
);
},
{
closed = 1;
nodes = (
(146,-139,o),
(142,-119,qs),
(139,-101,o),
(159,-75,o),
(179,-75,qs),
(197,-75,o),
(226,-100,o),
(230,-119,qs),
(234,-139,o),
(213,-165,o),
(195,-165,qs),
(176,-165,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 6 1 4 9 5 8 3 3 4 3 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,0,l),
(271,0,ls),
(188,-1,o),
(142,46,q),
(108,0,o),
(31,0,qs),
(6,0,l),
(-7,74,l),
(31,74,ls),
(101,74,o),
(84,169,qs),
(63,291,ls),
(51,358,o),
(111,358,qs),
(119,358,ls),
(127,358,o),
(129,350,qs),
(161,168,ls),
(169,124,o),
(220,74,o),
(258,74,qs),
(319,74,l)
);
},
{
closed = 1;
nodes = (
(119,-100,o),
(123,-119,qs),
(126,-139,o),
(105,-165,o),
(86,-165,qs),
(68,-165,o),
(39,-139,o),
(35,-119,qs),
(32,-101,o),
(52,-75,o),
(70,-75,qs),
(89,-75,o)
);
},
{
closed = 1;
nodes = (
(245,-100,o),
(249,-119,qs),
(252,-139,o),
(231,-165,o),
(213,-165,qs),
(194,-165,o),
(164,-139,o),
(161,-119,qs),
(157,-101,o),
(178,-75,o),
(197,-75,qs),
(215,-75,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
17 1 3 0 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 35 34 23 22 1 0 41 39 34 45 35 45 29 27 22 33 23 33 20 18 16 14 13 11 8 5 0 21 1 21 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 308;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,576,qs),
(134,566,o),
(142,566,qs),
(152,566,o),
(160,579,qs),
(161,581,o),
(163,584,qs),
(167,591,o),
(168,593,q),
(171,594,o),
(173,594,qs),
(176,594,o),
(180,589,qs),
(187,581,o),
(190,566,qs),
(193,547,o),
(168,520,o),
(148,522,qs),
(129,524,o),
(88,537,qs),
(83,539,o),
(75,541,qs),
(45,551,o),
(37,551,qs),
(27,551,o),
(18,538,q),
(18,537,o),
(16,534,qs),
(12,526,o),
(10,524,q),
(8,523,o),
(6,523,qs),
(2,523,o),
(-2,528,qs),
(-10,538,o),
(-12,552,qs),
(-15,570,o),
(10,597,o),
(30,595,qs),
(49,593,o),
(91,580,qs),
(96,578,o)
);
},
{
closed = 1;
nodes = (
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(127,74,o),
(153,74,qs),
(241,74,l),
(95,363,ls),
(62,429,o),
(121,447,qs),
(126,448,ls),
(132,450,o),
(136,443,qs),
(323,74,l),
(342,74,ls),
(412,74,o),
(396,169,qs),
(340,488,ls),
(328,556,o),
(389,556,qs),
(396,556,ls),
(404,556,o),
(405,548,qs),
(472,168,ls),
(485,94,o),
(456,50,qs),
(423,0,o),
(343,0,qs),
(120,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 4 1 0 4 128 3 1 1 1 23 77 5 1 4 4 2 96 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 3 4 3 0 4 128 0 1 1 23 77 0 3 3 23 77 5 1 4 4 2 96 6 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 3 1 133 0 0 3 4 3 0 4 128 0 3 3 23 77 5 1 4 4 2 96 6 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
43 42 65 63 56 54 51 48 42 70 43 69 39 37 18 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,537,qs),
(83,539,o),
(75,541,qs),
(45,551,o),
(37,551,qs),
(27,551,o),
(18,538,q),
(18,537,o),
(16,534,qs),
(12,526,o),
(10,524,q),
(7,523,o),
(6,523,qs),
(2,523,o),
(-2,528,qs),
(-10,538,o),
(-12,552,qs),
(-15,570,o),
(10,597,o),
(30,595,qs),
(49,593,o),
(91,580,qs),
(96,578,o),
(103,576,qs),
(134,566,o),
(142,566,qs),
(152,566,o),
(160,579,qs),
(161,581,o),
(163,584,qs),
(167,591,o),
(168,593,q),
(171,594,o),
(173,594,qs),
(176,594,o),
(180,589,qs),
(187,581,o),
(190,566,qs),
(193,547,o),
(168,520,o),
(148,522,qs),
(128,524,o)
);
},
{
closed = 1;
nodes = (
(638,0,l),
(583,0,ls),
(500,-1,o),
(453,46,q),
(419,0,o),
(343,0,qs),
(120,0,ls),
(106,0,o),
(104,12,qs),
(103,19,ls),
(99,44,o),
(127,74,o),
(153,74,qs),
(241,74,l),
(95,363,ls),
(62,429,o),
(121,447,qs),
(126,448,ls),
(132,450,o),
(136,443,qs),
(323,74,l),
(342,74,ls),
(412,74,o),
(396,169,qs),
(340,488,ls),
(328,556,o),
(389,556,qs),
(396,556,ls),
(404,556,o),
(405,548,qs),
(472,168,ls),
(480,124,o),
(532,74,o),
(570,74,qs),
(625,74,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
72 1 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 2 0 1 2 128 3 1 0 0 23 77 5 4 8 3 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 2 3 1 2 128 0 0 0 23 77 0 3 3 23 77 5 4 8 3 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 3 0 133 0 1 3 2 3 1 2 128 0 3 3 23 77 5 4 8 3 2 2 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
43 42 75 73 71 68 64 62 55 53 50 47 42 76 43 76 37 35 46 9 7 23 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,529,o),
(186,529,qs),
(82,529,ls),
(48,529,o),
(31,523,qs),
(28,522,o),
(25,520,qs),
(20,518,o),
(18,518,qs),
(14,518,o),
(11,524,qs),
(-7,565,o),
(40,572,q),
(26,589,o),
(24,613,qs),
(21,648,o),
(62,693,o),
(96,693,qs),
(147,693,o),
(156,647,qs),
(159,636,o),
(150,637,qs),
(148,637,o),
(144,639,qs),
(139,641,o),
(137,642,qs),
(120,650,o),
(103,649,qs),
(65,647,o),
(71,613,qs),
(74,597,o),
(100,574,o),
(116,574,qs),
(153,574,ls),
(189,574,o),
(193,542,qs),
(194,538,ls)
);
},
{
closed = 1;
nodes = (
(496,94,o),
(467,50,qs),
(433,0,o),
(354,0,qs),
(131,0,ls),
(117,0,o),
(114,12,qs),
(113,19,ls),
(109,44,o),
(137,74,o),
(164,74,qs),
(252,74,l),
(106,363,ls),
(72,429,o),
(131,447,q),
(137,448,ls),
(143,450,o),
(146,443,qs),
(333,74,l),
(353,74,ls),
(422,74,o),
(406,169,qs),
(350,488,ls),
(338,556,o),
(399,556,qs),
(406,556,ls),
(414,556,o),
(416,548,qs),
(483,168,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
23 1 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 1 0 2 1 105 0 4 4 23 77 0 3 3 0 97 0 0 0 23 77 6 1 5 5 7 96 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 1 0 2 1 105 0 0 0 3 5 0 3 103 0 4 4 23 77 6 1 5 5 7 96 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
52 39 35 51 61 40 35 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,529,o),
(186,529,qs),
(82,529,ls),
(47,529,o),
(31,523,qs),
(28,522,o),
(25,520,qs),
(20,518,o),
(18,518,qs),
(14,518,o),
(11,524,qs),
(-7,565,o),
(40,572,q),
(26,589,o),
(24,613,qs),
(21,648,o),
(62,693,o),
(96,693,qs),
(147,693,o),
(156,647,qs),
(159,636,o),
(150,637,qs),
(148,637,o),
(143,640,q),
(139,641,o),
(137,642,qs),
(120,650,o),
(103,649,qs),
(65,647,o),
(71,613,qs),
(74,597,o),
(100,574,o),
(116,574,qs),
(153,574,ls),
(189,574,o),
(193,542,qs),
(194,538,ls)
);
},
{
closed = 1;
nodes = (
(648,0,l),
(593,0,ls),
(511,-1,o),
(464,46,q),
(430,0,o),
(354,0,qs),
(131,0,ls),
(117,0,o),
(114,12,qs),
(113,19,ls),
(109,44,o),
(137,74,o),
(164,74,qs),
(252,74,l),
(106,363,ls),
(72,429,o),
(131,447,q),
(137,448,ls),
(143,450,o),
(146,443,qs),
(333,74,l),
(353,74,ls),
(422,74,o),
(406,169,qs),
(350,488,ls),
(338,556,o),
(399,556,qs),
(406,556,ls),
(414,556,o),
(416,548,qs),
(483,168,ls),
(491,124,o),
(542,74,o),
(580,74,qs),
(636,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 5 0 67 1 8 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 1 0 2 1 105 0 5 5 23 77 0 3 3 0 97 0 0 0 23 77 7 6 10 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 1 0 2 1 105 0 0 0 3 4 0 3 103 0 5 5 23 77 7 6 10 3 4 4 8 98 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
38 37 70 68 66 63 59 57 50 48 45 42 37 71 38 71 61 40 35 49 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,94,o),
(476,50,qs),
(442,0,o),
(363,0,qs),
(140,0,ls),
(126,0,o),
(123,12,qs),
(122,19,ls),
(118,44,o),
(146,74,o),
(173,74,qs),
(261,74,l),
(115,363,ls),
(81,429,o),
(140,447,q),
(146,448,ls),
(152,450,o),
(155,443,qs),
(342,74,l),
(362,74,ls),
(431,74,o),
(415,169,qs),
(359,488,ls),
(347,556,o),
(408,556,qs),
(415,556,ls),
(423,556,o),
(425,548,qs),
(492,168,ls)
);
},
{
closed = 1;
nodes = (
(471,-232,o),
(461,-232,qs),
(357,-232,ls),
(323,-232,o),
(306,-239,qs),
(303,-240,o),
(300,-242,qs),
(295,-244,o),
(293,-244,qs),
(289,-244,o),
(286,-237,qs),
(268,-196,o),
(315,-190,q),
(301,-172,o),
(299,-148,qs),
(296,-113,o),
(337,-69,o),
(371,-69,qs),
(422,-69,o),
(431,-114,qs),
(434,-126,o),
(425,-125,q),
(423,-124,o),
(418,-122,qs),
(414,-120,o),
(412,-119,qs),
(395,-112,o),
(378,-113,qs),
(341,-115,o),
(346,-149,qs),
(349,-165,o),
(375,-188,o),
(391,-188,qs),
(428,-188,ls),
(464,-188,o),
(468,-220,qs),
(469,-224,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
52 1 7 4 1 76 0 6 0 5 4 6 5 105 0 4 0 7 4 7 99 0 0 0 23 77 2 1 1 1 3 96 0 3 3 24 3 78 61 40 35 53 52 39 35 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(657,0,l),
(602,0,ls),
(520,-1,o),
(473,46,q),
(439,0,o),
(363,0,qs),
(140,0,ls),
(126,0,o),
(123,12,qs),
(122,19,ls),
(118,44,o),
(146,74,o),
(173,74,qs),
(261,74,l),
(115,363,ls),
(81,429,o),
(140,447,q),
(146,448,ls),
(152,450,o),
(155,443,qs),
(342,74,l),
(362,74,ls),
(431,74,o),
(415,169,qs),
(359,488,ls),
(347,556,o),
(408,556,qs),
(415,556,ls),
(423,556,o),
(425,548,qs),
(492,168,ls),
(500,124,o),
(551,74,o),
(589,74,qs),
(645,74,l)
);
},
{
closed = 1;
nodes = (
(471,-232,o),
(461,-232,qs),
(357,-232,ls),
(323,-232,o),
(306,-239,qs),
(303,-240,o),
(300,-242,qs),
(295,-244,o),
(293,-244,qs),
(289,-244,o),
(286,-237,qs),
(268,-196,o),
(315,-190,q),
(301,-172,o),
(299,-148,qs),
(296,-113,o),
(337,-69,o),
(371,-69,qs),
(422,-69,o),
(431,-114,qs),
(434,-126,o),
(425,-125,q),
(423,-124,o),
(418,-122,qs),
(414,-120,o),
(412,-119,qs),
(395,-112,o),
(378,-113,qs),
(341,-115,o),
(346,-149,qs),
(349,-165,o),
(375,-188,o),
(391,-188,qs),
(428,-188,ls),
(464,-188,o),
(468,-220,qs),
(469,-224,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
30 1 4 0 58 1 9 6 2 76 0 8 0 7 6 8 7 105 0 6 0 9 6 9 99 0 1 1 23 77 3 2 10 3 0 0 4 98 5 1 4 4 24 4 78 1 0 70 67 54 52 44 42 39 36 33 31 29 26 22 20 13 11 8 5 0 34 1 34 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,0,o),
(123,12,qs),
(122,19,ls),
(118,44,o),
(146,74,o),
(173,74,qs),
(261,74,l),
(115,363,ls),
(81,429,o),
(140,447,q),
(146,448,ls),
(152,450,o),
(155,443,qs),
(342,74,l),
(362,74,ls),
(431,74,o),
(415,169,qs),
(359,488,ls),
(347,556,o),
(408,556,qs),
(415,556,ls),
(423,556,o),
(425,548,qs),
(492,168,ls),
(505,94,o),
(476,50,qs),
(442,0,o),
(363,0,qs),
(140,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 1 1 23 77 3 1 2 2 0 96 4 1 0 0 24 0 78 1 0 23 21 14 12 9 6 0 28 1 27 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 519;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(657,0,l),
(602,0,ls),
(520,-1,o),
(473,46,q),
(439,0,o),
(363,0,qs),
(140,0,ls),
(126,0,o),
(123,12,qs),
(122,19,ls),
(118,44,o),
(146,74,o),
(173,74,qs),
(261,74,l),
(115,363,ls),
(81,429,o),
(140,447,q),
(146,448,ls),
(152,450,o),
(155,443,qs),
(342,74,l),
(362,74,ls),
(431,74,o),
(415,169,qs),
(359,488,ls),
(347,556,o),
(408,556,qs),
(415,556,ls),
(423,556,o),
(425,548,qs),
(492,168,ls),
(500,124,o),
(551,74,o),
(589,74,qs),
(645,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
30 1 4 0 1 76 0 1 1 23 77 3 2 6 3 0 0 4 98 5 1 4 4 24 4 78 1 0 33 31 29 26 22 20 13 11 8 5 0 34 1 34 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(378,317,qs),
(378,280,o),
(319,235,o),
(270,236,qs),
(204,236,o),
(149,266,q),
(194,14,ls),
(196,0,o),
(183,0,qs),
(134,0,ls),
(120,0,o),
(118,14,qs),
(35,488,ls),
(27,533,o),
(53,548,qs),
(67,556,o),
(83,556,qs),
(90,556,ls),
(98,556,o),
(99,548,qs),
(106,513,l),
(145,564,o),
(208,564,qs),
(249,564,o),
(316,522,o),
(323,491,qs),
(327,473,o),
(314,473,qs),
(312,473,o),
(306,475,qs),
(302,476,o),
(301,477,q),
(250,494,o),
(219,494,qs),
(178,494,o),
(123,434,o),
(127,394,qs),
(127,393,o),
(128,390,qs),
(129,387,o),
(129,386,qs),
(135,352,o),
(213,304,o),
(262,303,qs),
(304,302,o),
(347,324,q),
(348,324,o),
(349,325,q),
(361,330,o),
(366,331,q),
(378,331,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
29 1 1 3 44 1 6 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
29 1 1 4 44 1 6 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 35 36 40 37 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,147,qs),
(84,149,o),
(82,169,qs),
(72,260,o),
(58,382,qs),
(49,462,o),
(79,510,qs),
(113,564,o),
(189,564,qs),
(257,564,o),
(306,522,qs),
(362,474,o),
(385,382,qs),
(428,206,o),
(439,152,qs),
(440,148,o),
(440,147,qs),
(457,65,o),
(418,-10,o),
(360,-10,qs),
(318,-10,o),
(287,19,qs),
(285,21,o),
(283,19,qs),
(262,-10,o),
(220,-10,qs),
(107,-10,o)
);
},
{
closed = 1;
nodes = (
(259,107,q),
(260,121,o),
(267,121,qs),
(275,121,o),
(279,107,qs),
(294,63,o),
(329,63,qs),
(379,63,o),
(362,149,qs),
(352,204,o),
(310,376,qs),
(281,494,o),
(202,494,qs),
(123,494,o),
(135,376,qs),
(159,163,o),
(161,149,qs),
(175,63,o),
(223,63,qs),
(260,63,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
45 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 44 42 40 38 34 32 27 46 28 46 18 16 7 5 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 480;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,277,o),
(389,265,q),
(301,232,o),
(184,113,o),
(137,9,q),
(134,0,o),
(124,0,qs),
(66,0,ls),
(56,0,o),
(59,11,qs),
(91,140,o),
(194,234,q),
(141,249,o),
(81,338,o),
(81,399,qs),
(81,470,o),
(122,515,qs),
(167,564,o),
(243,564,qs),
(287,564,o),
(350,522,o),
(351,490,qs),
(352,473,o),
(340,473,qs),
(336,473,o),
(326,477,qs),
(318,480,o),
(313,485,qs),
(305,494,o),
(286,494,qs),
(236,494,o),
(157,433,o),
(157,394,qs),
(157,352,o),
(211,290,o),
(255,282,q),
(331,331,o),
(412,351,q),
(423,355,o),
(427,343,qs),
(436,321,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 35 36 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = uni06F6;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,246,o),
(224,240,qs),
(225,235,o),
(222,231,qs),
(167,162,l),
(163,158,o),
(158,158,qs),
(152,158,o),
(148,162,qs),
(67,231,l),
(62,234,o),
(62,241,q),
(61,245,o),
(64,249,qs),
(120,317,ls),
(124,321,o),
(129,321,qs),
(135,321,o),
(139,317,qs),
(218,249,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = uni0660;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,0,o),
(74,17,qs),
(71,427,ls),
(70,564,o),
(174,564,qs),
(280,564,o),
(327,427,qs),
(466,17,ls),
(471,0,o),
(457,0,qs),
(408,0,ls),
(395,0,o),
(390,15,qs),
(247,441,l),
(227,491,o),
(187,491,qs),
(149,491,o),
(146,441,q),
(151,15,ls),
(151,0,o),
(137,0,qs),
(89,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,521,qs),
(372,470,o),
(388,378,qs),
(452,10,ls),
(454,0,o),
(444,0,qs),
(388,0,ls),
(377,0,o),
(375,10,qs),
(344,193,l),
(251,193,ls),
(183,193,o),
(128,237,qs),
(63,288,o),
(47,378,qs),
(33,456,o),
(72,508,qs),
(114,564,o),
(194,564,qs),
(261,564,o)
);
},
{
closed = 1;
nodes = (
(116,430,o),
(125,378,qs),
(134,329,o),
(198,264,o),
(238,264,qs),
(331,264,l),
(311,379,ls),
(303,430,o),
(240,493,o),
(198,493,qs),
(156,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = uni06F9;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,116,q),
(295,543,ls),
(295,556,o),
(304,556,qs),
(308,556,ls),
(335,556,o),
(371,515,o),
(371,485,qs),
(375,129,ls),
(377,-8,o),
(271,-8,qs),
(167,-8,o),
(119,129,qs),
(-3,485,ls),
(-13,515,o),
(9,556,o),
(36,556,qs),
(40,556,ls),
(50,556,o),
(54,543,qs),
(200,116,ls),
(219,66,o),
(259,66,qs),
(297,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06F7;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(123,10,qs),
(39,488,ls),
(27,556,o),
(88,556,qs),
(95,556,ls),
(103,556,o),
(104,548,qs),
(199,10,ls),
(201,0,o),
(191,0,qs),
(135,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni0661;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,0,o),
(140,10,qs),
(76,372,ls),
(44,556,o),
(210,556,qs),
(301,556,ls),
(308,556,o),
(309,548,qs),
(313,528,o),
(309,513,qs),
(302,486,o),
(260,486,qs),
(222,486,ls),
(175,486,o),
(141,433,o),
(151,376,qs),
(216,10,ls),
(218,0,o),
(207,0,qs),
(151,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 15 12 8 5 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 385;
}
);
note = uni0662;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,359,o),
(583,311,qs),
(550,256,o),
(473,256,qs),
(396,256,o),
(345,314,q),
(315,256,o),
(238,256,qs),
(191,256,o),
(152,277,q),
(199,10,ls),
(201,0,o),
(192,0,qs),
(135,0,ls),
(125,0,o),
(123,10,qs),
(39,488,ls),
(27,556,o),
(88,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(123,442,ls),
(142,331,o),
(224,331,qs),
(264,331,o),
(298,389,o),
(288,442,qs),
(279,492,ls),
(274,520,o),
(297,556,o),
(320,556,qs),
(327,556,ls),
(334,556,o),
(336,549,q),
(355,442,ls),
(375,331,o),
(457,331,qs),
(497,331,o),
(531,388,o),
(522,440,qs),
(513,489,ls),
(501,557,o),
(561,557,qs),
(568,557,ls),
(576,557,o),
(578,549,qs),
(597,439,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 51 37 51 36 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = uni0663;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,0,o),
(409,0,qs),
(290,0,ls),
(223,0,o),
(173,29,qs),
(101,71,o),
(84,163,qs),
(70,239,o),
(130,280,q),
(63,319,o),
(49,398,qs),
(37,469,o),
(70,514,qs),
(108,566,o),
(188,564,qs),
(234,564,o),
(306,522,o),
(313,491,qs),
(317,474,o),
(305,474,qs),
(301,474,o),
(294,476,q),
(292,476,o),
(290,477,qs),
(242,494,o),
(206,494,qs),
(112,494,o),
(126,402,qs),
(132,361,o),
(199,313,o),
(248,313,qs),
(302,313,ls),
(331,313,o),
(371,283,o),
(376,259,qs),
(377,253,ls),
(379,242,o),
(366,242,qs),
(244,242,ls),
(202,243,o),
(155,195,o),
(162,159,qs),
(170,118,o),
(233,71,o),
(283,71,qs),
(345,71,ls),
(373,71,o),
(414,42,o),
(419,18,qs),
(420,12,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 2 0 1 0 2 1 103 0 3 3 5 97 0 5 5 23 77 0 0 0 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 0 0 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
58 35 36 35 52 52 50 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 419;
}
);
note = uni0664;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,523,qs),
(362,476,o),
(384,384,qs),
(419,232,o),
(430,181,q),
(430,178,l),
(444,97,o),
(412,47,qs),
(375,-10,o),
(288,-10,qs),
(213,-10,o),
(158,34,qs),
(96,85,o),
(79,178,qs),
(79,179,o),
(78,191,qs),
(69,263,o),
(54,383,qs),
(45,463,o),
(74,510,qs),
(108,564,o),
(188,564,qs),
(257,564,o)
);
},
{
closed = 1;
nodes = (
(133,378,qs),
(157,181,ls),
(176,61,o),
(275,61,qs),
(374,61,o),
(352,181,q),
(308,378,ls),
(282,493,o),
(200,493,qs),
(119,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
24 23 1 0 29 27 23 32 24 32 13 11 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = uni0665;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,0,o),
(292,10,qs),
(229,376,ls),
(210,486,o),
(119,486,qs),
(81,486,ls),
(39,486,o),
(21,513,qs),
(14,524,o),
(10,542,qs),
(9,548,ls),
(7,556,o),
(15,556,qs),
(110,556,ls),
(273,556,o),
(305,372,qs),
(369,10,ls),
(371,0,o),
(360,0,qs),
(304,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 7 4 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = uni0666;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,116,q),
(295,543,ls),
(295,556,o),
(304,556,qs),
(308,556,ls),
(335,556,o),
(371,515,o),
(371,485,qs),
(375,129,ls),
(377,-8,o),
(271,-8,qs),
(167,-8,o),
(119,129,qs),
(-3,485,ls),
(-13,515,o),
(9,556,o),
(36,556,qs),
(40,556,ls),
(50,556,o),
(54,543,qs),
(200,116,ls),
(219,66,o),
(259,66,qs),
(297,66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 4 1 0 0 2 98 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
4 1 0 0 2 0 2 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0667;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(74,0,o),
(74,17,qs),
(71,427,ls),
(70,564,o),
(174,564,qs),
(280,564,o),
(327,427,qs),
(466,17,ls),
(471,0,o),
(457,0,qs),
(408,0,ls),
(395,0,o),
(390,15,qs),
(247,441,l),
(227,491,o),
(187,491,qs),
(149,491,o),
(146,441,q),
(151,15,ls),
(151,0,o),
(137,0,qs),
(89,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uni0668;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,521,qs),
(372,470,o),
(388,378,qs),
(452,10,ls),
(454,0,o),
(444,0,qs),
(388,0,ls),
(377,0,o),
(375,10,qs),
(344,193,l),
(251,193,ls),
(183,193,o),
(128,237,qs),
(63,288,o),
(47,378,qs),
(33,456,o),
(72,508,qs),
(114,564,o),
(194,564,qs),
(261,564,o)
);
},
{
closed = 1;
nodes = (
(116,430,o),
(125,378,qs),
(134,329,o),
(198,264,o),
(238,264,qs),
(331,264,l),
(311,379,ls),
(303,430,o),
(240,493,o),
(198,493,qs),
(156,493,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 465;
}
);
note = uni0669;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(223,247,o),
(224,241,qs),
(225,235,o),
(222,231,qs),
(167,163,ls),
(163,159,o),
(158,159,qs),
(153,159,o),
(148,163,qs),
(67,231,ls),
(62,236,o),
(62,241,qs),
(61,246,o),
(64,250,qs),
(120,317,ls),
(124,322,o),
(129,322,qs),
(135,322,o),
(139,318,qs),
(218,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,0,o),
(123,10,qs),
(39,488,ls),
(27,556,o),
(88,556,qs),
(95,556,ls),
(103,556,o),
(104,548,qs),
(199,10,ls),
(201,0,o),
(191,0,qs),
(135,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,0,o),
(140,10,qs),
(76,372,ls),
(44,556,o),
(210,556,qs),
(301,556,ls),
(308,556,o),
(309,548,qs),
(313,528,o),
(309,513,qs),
(302,486,o),
(260,486,qs),
(222,486,ls),
(175,486,o),
(141,433,o),
(151,376,qs),
(216,10,ls),
(218,0,o),
(207,0,qs),
(151,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 15 12 8 5 0 19 1 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 385;
}
);
note = uni06F2;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,359,o),
(583,311,qs),
(550,256,o),
(473,256,qs),
(396,256,o),
(345,314,q),
(315,256,o),
(238,256,qs),
(191,256,o),
(152,277,q),
(199,10,ls),
(201,0,o),
(192,0,qs),
(135,0,ls),
(125,0,o),
(123,10,qs),
(39,488,ls),
(27,556,o),
(88,556,qs),
(94,556,ls),
(102,556,o),
(104,548,qs),
(123,442,ls),
(142,331,o),
(224,331,qs),
(264,331,o),
(298,389,o),
(288,442,qs),
(279,492,ls),
(274,520,o),
(297,556,o),
(320,556,qs),
(327,556,ls),
(334,556,o),
(336,549,q),
(355,442,ls),
(375,331,o),
(457,331,qs),
(497,331,o),
(531,388,o),
(522,440,qs),
(513,489,ls),
(501,557,o),
(561,557,qs),
(568,557,ls),
(576,557,o),
(578,549,qs),
(597,439,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
41 37 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 2 0 0 23 77 0 5 5 24 5 78 34 35 51 51 37 51 36 49 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = uni06F3;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
isItalic = 1;
name = Italic;
properties = (
{
key = postscriptFullName;
value = "Zain Italic";
},
{
key = postscriptFontName;
value = "Zain-Italic";
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -21;
"@MMK_R_O" = -21;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -28;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -6;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -21;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -18;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -6;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -21;
"@MMK_R_C" = -10;
"@MMK_R_O" = -10;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_c" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
};
"@MMK_L_e" = {
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_u" = -6;
"@MMK_R_y" = -13;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -9;
};
"@MMK_L_u" = {
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -6;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -4;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -5;
"@MMK_R_c" = -8;
"@MMK_R_e" = -6;
"@MMK_R_o" = -6;
};
A = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -21;
J = 11;
Q = -21;
T = -35;
V = -26;
W = -19;
comma = 8;
d = -7;
g = -6;
l = -6;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -13;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
a = 4;
aacute = 4;
acircumflex = 4;
adieresis = 4;
ae = 4;
agrave = 4;
aring = 4;
atilde = 4;
e = 4;
eacute = 4;
ecircumflex = 4;
edieresis = 4;
egrave = 4;
o = 4;
oacute = 4;
ocircumflex = 4;
odieresis = 4;
oe = 4;
ograve = 4;
oslash = 4;
otilde = 4;
y = -3;
yacute = -3;
ydieresis = -3;
};
C = {
G = -8;
Q = -6;
T = 4;
comma = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -6;
T = 4;
comma = 4;
question = 7;
};
D = {
A = -17;
AE = -29;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
J = -18;
M = -4;
T = -26;
V = -16;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
question = -12;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = 29;
uni0622 = 29;
uni0623 = 33;
uni0625 = 0;
uni0627 = 0;
uni0631 = 29;
uni0632 = 29;
uni0671 = 22;
uni0691 = 29;
uni0694 = 29;
uni0695 = 29;
uni0698 = 29;
};
E = {
Ccedilla = -10;
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
F = {
A = -17;
AE = -38;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 6;
V = 4;
W = 4;
X = -6;
a = -5;
aacute = -5;
acircumflex = -5;
adieresis = -5;
ae = -5;
agrave = -5;
aring = -5;
atilde = -5;
c = -5;
ccedilla = -5;
comma = -29;
d = -5;
dotlessi = -6;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -5;
m = -6;
n = -6;
ntilde = -6;
o = -5;
oacute = -5;
ocircumflex = -5;
odieresis = -5;
oe = -5;
ograve = -5;
oslash = -5;
otilde = -5;
p = -6;
q = -5;
question = 6;
r = -6;
s = -4;
scaron = -4;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -12;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -11;
Scaron = -11;
T = -6;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
q = -16;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -43;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -31;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -15;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
q = -11;
question = -27;
semicolon = 4;
t = -22;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
o = -3;
oacute = -3;
ocircumflex = -3;
odieresis = -3;
oe = -3;
ograve = -3;
oslash = -3;
otilde = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -29;
J = -19;
M = -4;
T = -22;
V = -11;
W = -8;
X = -17;
comma = -16;
d = -3;
g = -3;
q = -3;
question = -12;
x = -11;
};
P = {
A = -28;
AE = -52;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
J = -32;
M = -3;
T = -5;
X = -18;
Y = -5;
Yacute = -5;
Ydieresis = -5;
Z = -9;
Zcaron = -9;
a = -5;
aacute = -5;
acircumflex = -5;
adieresis = -5;
ae = -5;
agrave = -5;
aring = -5;
atilde = -5;
c = -5;
ccedilla = -5;
comma = -29;
d = -6;
e = -6;
eacute = -6;
ecircumflex = -6;
edieresis = -6;
egrave = -6;
g = -6;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
q = -11;
s = -4;
scaron = -4;
z = -5;
zcaron = -5;
};
Q = {
A = -18;
AE = -12;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -18;
Yacute = -18;
Ydieresis = -18;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -2;
ccedilla = -2;
d = -2;
e = -2;
eacute = -2;
ecircumflex = -2;
edieresis = -2;
egrave = -2;
g = -2;
s = -2;
scaron = -2;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -7;
aacute = -7;
acircumflex = -7;
adieresis = -7;
ae = -7;
agrave = -7;
aring = -7;
atilde = -7;
c = -7;
ccedilla = -7;
d = -7;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
q = -7;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
y = 4;
yacute = 4;
ydieresis = 4;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -26;
AE = -51;
Aacute = -26;
Acircumflex = -26;
Adieresis = -26;
Agrave = -26;
Aring = -26;
Atilde = -26;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 6;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
q = -44;
question = 15;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
};
V = {
A = -19;
AE = -36;
Aacute = -19;
Acircumflex = -19;
Adieresis = -19;
Agrave = -19;
Aring = -19;
Atilde = -19;
C = -7;
Ccedilla = -7;
G = -8;
J = -23;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -28;
aacute = -28;
acircumflex = -28;
adieresis = -28;
ae = -28;
agrave = -28;
aring = -28;
atilde = -28;
c = -29;
ccedilla = -29;
comma = -24;
d = -28;
dotlessi = -11;
e = -28;
eacute = -28;
ecircumflex = -28;
edieresis = -28;
egrave = -28;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -28;
m = -11;
n = -11;
ntilde = -11;
o = -29;
oacute = -29;
ocircumflex = -29;
odieresis = -29;
oe = -29;
ograve = -29;
oslash = -29;
otilde = -29;
p = -11;
q = -28;
question = 10;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -14;
AE = -31;
Aacute = -14;
Acircumflex = -14;
Adieresis = -14;
Agrave = -14;
Aring = -14;
Atilde = -14;
C = -3;
Ccedilla = -3;
G = -3;
J = -18;
O = -3;
OE = -3;
Oacute = -3;
Ocircumflex = -3;
Odieresis = -3;
Ograve = -3;
Oslash = -3;
Otilde = -3;
Q = -3;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
q = -23;
question = 7;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -18;
OE = -18;
Oacute = -18;
Ocircumflex = -18;
Odieresis = -18;
Ograve = -18;
Oslash = -18;
Otilde = -18;
Q = -18;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -48;
G = -10;
J = -29;
Q = -10;
T = 6;
V = 9;
W = 4;
comma = -22;
d = -42;
exclam = 6;
g = -42;
m = -26;
p = -26;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -48;
G = -10;
J = -29;
Q = -10;
T = 6;
V = 9;
W = 4;
comma = -22;
d = -42;
exclam = 6;
g = -42;
m = -26;
p = -26;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -48;
G = -10;
J = -29;
Q = -10;
T = 6;
V = 9;
W = 4;
comma = -22;
d = -42;
exclam = 6;
g = -42;
m = -26;
p = -26;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
};
aacute = {
question = -11;
};
acircumflex = {
question = -11;
};
adieresis = {
question = -11;
};
ae = {
question = -22;
t = -4;
v = -6;
x = -10;
};
agrave = {
question = -11;
};
aring = {
question = -11;
};
atilde = {
question = -11;
};
b = {
Thorn = 1;
comma = -7;
f = -4;
fi = -4;
fl = -4;
question = -32;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceright = {
rehvabovear = -33;
uni0622 = 44;
uni0623 = 39;
uni0625 = 17;
uni0631 = -33;
uni0632 = -33;
uni0671 = 44;
uni0691 = -33;
uni0694 = -33;
uni0698 = -33;
};
bracketright = {
rehvabovear = -33;
uni0622 = 44;
uni0623 = 39;
uni0625 = 17;
uni0631 = -33;
uni0632 = -33;
uni0671 = 44;
uni0691 = -33;
uni0694 = -33;
uni0698 = -33;
};
c = {
comma = 7;
d = -4;
g = -4;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
q = -4;
question = -13;
t = 3;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -6;
x = -10;
};
eacute = {
question = -22;
t = -4;
v = -6;
x = -10;
};
ecircumflex = {
question = -22;
t = -4;
v = -6;
x = -10;
};
edieresis = {
question = -22;
t = -4;
v = -6;
x = -10;
};
egrave = {
question = -22;
t = -4;
v = -6;
x = -10;
};
eight.ar = {
eight = 5;
four.ar = 7;
seven.ar = -11;
two.ar = -10;
};
eight.farsi = {
eight = 5;
four.farsi = 7;
seven.farsi = -11;
two.farsi = -10;
};
exclamdown = {
j = 44;
y = 5;
yacute = 5;
ydieresis = 5;
};
f = {
a = -15;
aacute = -15;
acircumflex = -15;
adieresis = -15;
ae = -15;
agrave = -15;
aring = -15;
atilde = -15;
c = -14;
ccedilla = -14;
comma = -21;
d = -15;
e = -15;
eacute = -15;
ecircumflex = -15;
edieresis = -15;
egrave = -15;
exclam = 6;
g = -14;
o = -15;
oacute = -15;
ocircumflex = -15;
odieresis = -15;
oe = -15;
ograve = -15;
oslash = -15;
otilde = -15;
q = -15;
question = 12;
};
fi = {
v = -5;
w = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
comma = 11;
d = -6;
g = -4;
l = -4;
q = -4;
question = -17;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
four.ar = {
four = 6;
nine.ar = -13;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -10;
};
four.farsi = {
four = 6;
nine.farsi = -13;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -10;
};
g = {
j = 31;
question = -12;
v = -4;
y = 7;
yacute = 7;
ydieresis = 7;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
question = -6;
s = -4;
scaron = -4;
};
l = {
comma = 11;
d = -6;
g = -4;
l = -4;
q = -4;
question = -17;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
lam_alefvabovear = {
lamthreedotsabovear = 38;
lamthreedotsabovear.init = 38;
uni0621 = 22;
uni0622 = 50;
uni0623 = 56;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 0;
uni0671 = 50;
uni0686 = 22;
uni0691 = 22;
uni0698 = 0;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 22;
uniFB7C = 22;
uniFE9B = 0;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
lam_alefvabovear.fina = {
lamthreedotsabovear = 38;
lamthreedotsabovear.init = 38;
uni0621 = 22;
uni0622 = 50;
uni0623 = 56;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 0;
uni0671 = 50;
uni0686 = 22;
uni0691 = 22;
uni0698 = 0;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine.ar = {
comma = -27;
five.ar = -3;
four.ar = -8;
seven.ar = -12;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
comma = -27;
five.farsi = -3;
four.farsi = -8;
seven.farsi = -12;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
oacute = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
ocircumflex = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
odieresis = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
oe = {
question = -22;
t = -4;
v = -6;
x = -10;
};
ograve = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -16;
nine.ar = -28;
seven.ar = -21;
six.ar = -16;
three.ar = -8;
zero.ar = -24;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -16;
nine.farsi = -28;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -8;
zero.farsi = -24;
};
oslash = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
otilde = {
comma = -6;
question = -26;
t = -9;
v = -6;
w = -3;
x = -14;
};
p = {
comma = -6;
f = -7;
fi = -7;
fl = -7;
question = -27;
t = -8;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -6;
zcaron = -6;
};
parenright = {
rehvabovear = -33;
uni0622 = 44;
uni0623 = 50;
uni0625 = 11;
uni0631 = -33;
uni0632 = -33;
uni0671 = 44;
uni0691 = -22;
uni0694 = -33;
uni0698 = -33;
};
q = {
j = 34;
};
questiondown = {
j = 78;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblright = {
uni0691 = 50;
uni0698 = 39;
uniFB68 = 39;
uniFE97 = 39;
uniFE9B = 39;
};
quoteright = {
uni0691 = 50;
uni0698 = 39;
uniFB68 = 39;
uniFE97 = 39;
uniFE9B = 39;
};
r = {
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -11;
ccedilla = -11;
comma = -15;
d = -11;
e = -11;
eacute = -11;
ecircumflex = -11;
edieresis = -11;
egrave = -11;
f = 4;
fi = 4;
fl = 4;
g = -11;
o = -11;
oacute = -11;
ocircumflex = -11;
odieresis = -11;
oe = -11;
ograve = -11;
oslash = -11;
otilde = -11;
q = -11;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
space = 69;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvabovear = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 76;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvabovear.fina = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
rehvbelowar.fina = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
s = {
comma = 5;
question = -18;
};
scaron = {
comma = 5;
question = -18;
};
seven.ar = {
comma = -35;
eight.ar = -6;
four.ar = -19;
one.ar = 5;
six.ar = -18;
two.ar = -12;
zero.ar = -11;
};
seven.farsi = {
comma = -35;
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
six.farsi = -18;
two.farsi = -12;
zero.farsi = -11;
};
six.ar = {
comma = -4;
four.ar = 7;
nine.ar = -14;
one.ar = -7;
seven.ar = -23;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
comma = -4;
four.farsi = 7;
nine.farsi = -14;
one.farsi = -7;
seven.farsi = -23;
two.farsi = -11;
zero.farsi = -4;
};
t = {
a = -10;
aacute = -10;
acircumflex = -10;
adieresis = -10;
ae = -10;
agrave = -10;
aring = -10;
atilde = -10;
c = -9;
ccedilla = -9;
comma = -18;
d = -10;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
f = 4;
fi = 4;
fl = 4;
g = -9;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
q = -11;
question = -6;
t = 3;
x = -6;
};
three.ar = {
comma = -7;
four.ar = 9;
one.ar = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
comma = -7;
four.farsi = 9;
one.farsi = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -5;
four.ar = -13;
nine.ar = -4;
seven.ar = -5;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -5;
four.farsi = -13;
nine.farsi = -4;
seven.farsi = -5;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
question = -19;
v = -5;
x = -9;
};
uacute = {
comma = -5;
question = -19;
v = -5;
x = -9;
};
ucircumflex = {
comma = -5;
question = -19;
v = -5;
x = -9;
};
udieresis = {
comma = -5;
question = -19;
v = -5;
x = -9;
};
ugrave = {
comma = -5;
question = -19;
v = -5;
x = -9;
};
uni0622 = {
Decoratedbracketleft = 0;
braceleft = 11;
bracketleft = 11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 11;
rehvabovear = 13;
uni0621 = 0;
uni0622 = 66;
uni0623 = 59;
uni062C = 11;
uni062D = 11;
uni062E = 9;
uni0632 = 44;
uni0639 = 0;
uni063A = 0;
uni0671 = 67;
uni0686 = 9;
uni0691 = 44;
uni0698 = 33;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 44;
uniFE91 = 0;
uniFE97 = 44;
uniFE9B = 33;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 0;
uniFECF = 0;
uniFEE7 = 44;
};
uni0623 = {
Decoratedbracketleft = -11;
braceleft = -11;
bracketleft = -11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 0;
uni0621 = 0;
uni0622 = 55;
uni0623 = 57;
uni062C = 11;
uni062D = 11;
uni062E = 9;
uni0632 = 67;
uni0639 = 0;
uni063A = 0;
uni0671 = 58;
uni0686 = 9;
uni0691 = 44;
uni0698 = 33;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 44;
uniFE97 = 67;
uniFE9B = 33;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 0;
uniFECF = 0;
uniFEE7 = 67;
};
uni0625 = {
Decoratedbracketleft = -39;
braceleft = -33;
bracketleft = -33;
parenleft = -22;
uni0621 = 0;
uni0625 = 57;
uni062C = 11;
uni062D = 11;
uni062E = 6;
uni0632 = 17;
uni0639 = 22;
uni063A = 22;
uni0686 = 6;
uni0691 = 22;
uni0698 = 22;
uniEECD = 22;
uniFB68 = 22;
uniFB7C = 11;
uniFE8B = 22;
uniFE91 = 0;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 0;
uniFECF = 0;
uniFEE7 = 17;
};
uni0627 = {
Decoratedbracketleft = -44;
braceleft = -44;
bracketleft = -44;
parenleft = -44;
uni0621 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 9;
uni0632 = 17;
uni0639 = 0;
uni063A = 0;
uni0686 = 9;
uni0691 = 22;
uni0698 = 22;
uniFB68 = 22;
uniFB7C = 11;
uniFE8B = 17;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 0;
uniFECF = 0;
uniFEE7 = 17;
};
uni062F = {
uni0621 = 11;
uni0622 = 0;
uni0623 = 0;
uni0624 = 31;
uni0625 = 0;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 0;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 0;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uni0630 = {
uni0621 = 11;
uni0622 = 11;
uni0623 = 11;
uni0624 = 31;
uni0625 = 6;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 11;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 11;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uni0631 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 76;
uni0621 = 33;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0661 = 48;
uni0662 = -44;
uni0663 = -32;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 38;
uniFECB = 47;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0632 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -38;
uni0663 = -26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F3 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 38;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0637 = {
uni0621 = 11;
};
uni0638 = {
uni0621 = 11;
};
uni06440671 = {
lamdotabovear = 28;
lamdotabovear.init = 22;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 17;
lamvabovear = 28;
lamvabovear.init = 22;
rehvabovear = 44;
uni0621 = 22;
uni0622 = 22;
uni0623 = 33;
uni0625 = 33;
uni0627 = 44;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 28;
uni0644 = 28;
uni0671 = 22;
uni0686 = 22;
uni0691 = 83;
uni0698 = 61;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 83;
uniFB7C = 22;
uniFE8B = 56;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 28;
yehvabove_alefMaksuraar = 50;
yehvabove_pehar = 50;
yehvabove_yehHamzaabovear = 50;
yehvabove_yehar = 50;
yehvabove_yehvar = 50;
yehvabovear.init = 50;
};
uni06440671.fina = {
lamdotabovear = 28;
lamdotabovear.init = 22;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 17;
lamvabovear = 28;
lamvabovear.init = 22;
rehvabovear = 44;
uni0621 = 22;
uni0622 = 22;
uni0623 = 33;
uni0625 = 33;
uni0627 = 44;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 28;
uni0644 = 28;
uni0671 = 22;
uni0686 = 22;
uni0691 = 83;
uni0698 = 61;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 83;
uniFB7C = 22;
uniFE8B = 56;
uniFE97 = 61;
uniFE9B = 61;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 28;
yehvabove_alefMaksuraar = 50;
yehvabove_pehar = 50;
yehvabove_yehHamzaabovear = 50;
yehvabove_yehar = 50;
yehvabove_yehvar = 50;
yehvabovear.init = 50;
};
uni0660 = {
uni0662 = 0;
uni0666 = -139;
uni0667 = 11;
uni0668 = 11;
uni0669 = -28;
};
uni0661 = {
uni0660 = -11;
uni0667 = 28;
uni0668 = 11;
uni0691 = 11;
uni0698 = 11;
uni06F7 = 28;
uni06F8 = 39;
uniF806 = 56;
};
uni0662 = {
braceleft = 11;
uni0660 = -133;
uni0661 = 0;
uni0662 = -28;
uni0663 = 0;
uni0664 = -22;
uni0665 = -28;
uni0666 = 0;
uni0667 = 22;
uni0668 = -40;
uni0669 = -28;
uni06F7 = 22;
uni06F9 = -3;
};
uni0663 = {
uni0660 = -56;
uni0664 = -28;
uni0665 = -6;
uni0666 = -17;
uni0667 = 0;
uni0668 = -28;
};
uni0664 = {
uni0660 = 0;
uni0666 = -17;
uni0667 = 44;
uni0668 = 28;
};
uni0665 = {
uni0660 = 0;
uni0663 = 9;
uni0666 = -44;
uni0667 = 17;
uni0668 = 5;
};
uni0666 = {
uni0660 = 0;
uni0666 = -44;
uni0667 = 0;
uni0668 = 22;
uni0669 = -17;
uni0691 = 38;
uni0695 = -24;
uni0698 = 9;
uniFB8B = 0;
uniFB8D = 8;
};
uni0667 = {
uni0632 = 8;
uni0660 = -39;
uni0661 = 22;
uni0662 = -17;
uni0663 = 6;
uni0664 = 8;
uni0665 = -11;
uni0666 = 17;
uni0667 = 22;
uni0668 = -17;
uni0669 = 14;
uni0691 = 51;
uni0694 = 8;
uni0695 = 8;
uni0698 = 21;
uni06F3 = 2;
};
uni0668 = {
uni0631 = 8;
uni0632 = 8;
uni0660 = 6;
uni0661 = 0;
uni0662 = 6;
uni0663 = 8;
uni0664 = 17;
uni0665 = 5;
uni0666 = -50;
uni0667 = 0;
uni0668 = 51;
uni0669 = -17;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06F7 = -4;
};
uni0669 = {
uni0660 = -11;
uni0666 = -28;
uni0667 = 33;
uni0668 = 0;
};
uni0671 = {
Decoratedbracketleft = -11;
braceleft = 11;
bracketleft = 11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 89;
lamthreedotsabovear.init = 89;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 11;
uni0621 = 0;
uni0622 = 68;
uni0623 = 49;
uni062C = 11;
uni062D = 11;
uni062E = 9;
uni0632 = 44;
uni0639 = 0;
uni063A = 0;
uni0671 = 68;
uni0686 = 9;
uni0691 = 44;
uni0698 = 33;
uniFB68 = 44;
uniFB7C = 11;
uniFE8B = 44;
uniFE91 = 0;
uniFE97 = 44;
uniFE9B = 33;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 0;
uniFECF = 0;
uniFEE7 = 56;
};
uni0688 = {
uni0621 = 11;
uni0622 = 0;
uni0623 = 0;
uni0624 = 31;
uni0625 = 0;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 11;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 0;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uni0691 = {
Decoratedbracketleft = 72;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0667 = 26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 11;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 24;
uniFB7C = 0;
uniFB8D = 38;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 21;
uniFE91 = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0694 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0695 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0666 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni0698 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0661 = 11;
uni0662 = -12;
uni0667 = 8;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 25;
uniFB7C = 0;
uniFB8B = 38;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 7;
uniFE91 = 0;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uni06F0 = {
uni06F2 = 0;
uni06F4 = -17;
uni06F6 = -39;
uni06F7 = 0;
uni06F9 = 0;
uniF805 = -28;
uniF806 = 28;
};
uni06F1 = {
uni0691 = 11;
uni0698 = 8;
uni06F6 = 17;
uni06F7 = 44;
uni06F8 = 17;
uniF806 = 39;
};
uni06F2 = {
uni0660 = -14;
uni0666 = 13;
uni0667 = 2;
uni06F0 = -133;
uni06F2 = -28;
uni06F3 = 0;
uni06F5 = -28;
uni06F6 = -89;
uni06F7 = 39;
uni06F8 = -40;
uni06F9 = -28;
uniF806 = -100;
};
uni06F3 = {
uni0632 = 8;
uni0664 = -2;
uni0698 = 13;
uni06F0 = -56;
uni06F4 = 0;
uni06F5 = -28;
uni06F6 = -67;
uni06F7 = 22;
uni06F8 = -22;
uni06F9 = 0;
uniF806 = -39;
};
uni06F4 = {
uni0632 = 8;
uni0691 = 13;
uni0698 = 13;
uni06F0 = -17;
uni06F1 = 0;
uni06F2 = 11;
uni06F3 = 0;
uni06F4 = 28;
uni06F5 = 0;
uni06F6 = -39;
uni06F7 = 22;
uni06F8 = -11;
uni06F9 = 0;
uniF805 = 17;
uniF806 = 0;
};
uni06F5 = {
uni06F4 = 0;
uni06F5 = 5;
uni06F6 = 0;
uni06F7 = 33;
uni06F8 = 14;
uniF805 = -22;
uniF806 = 39;
};
uni06F6 = {
uni0668 = -3;
uni06F0 = -11;
uni06F1 = -17;
uni06F2 = 0;
uni06F3 = 0;
uni06F4 = -11;
uni06F6 = -39;
uni06F7 = 22;
uni06F8 = -2;
uniF805 = -11;
uniF806 = 0;
};
uni06F7 = {
uni0631 = 8;
uni0632 = 8;
uni0661 = 3;
uni0691 = 13;
uni0694 = 8;
uni0695 = 8;
uni0698 = 21;
uni06F0 = -17;
uni06F1 = 6;
uni06F2 = -17;
uni06F3 = 0;
uni06F4 = 0;
uni06F5 = 8;
uni06F6 = 11;
uni06F7 = 56;
uni06F8 = -17;
uni06F9 = 14;
uniF805 = 0;
uniF806 = 0;
};
uni06F8 = {
uni0631 = 8;
uni0632 = 8;
uni0667 = -3;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06F1 = 17;
uni06F2 = 6;
uni06F3 = 17;
uni06F4 = 0;
uni06F5 = 14;
uni06F6 = 56;
uni06F7 = 22;
uni06F8 = 51;
uni06F9 = -17;
uniF806 = 56;
};
uni06F9 = {
uni06F5 = 0;
uni06F6 = 28;
uni06F7 = 33;
uni06F8 = 17;
uniF805 = -22;
uniF806 = 33;
};
uniF805 = {
uni0660 = -83;
uni06F0 = -139;
uni06F2 = -50;
uni06F3 = 0;
uni06F4 = 1;
uni06F5 = -56;
uni06F6 = -111;
uni06F7 = 22;
uni06F8 = -50;
uni06F9 = -39;
uniF806 = -194;
};
uniF806 = {
uni0661 = 28;
uni06F0 = -44;
uni06F1 = 0;
uni06F2 = -22;
uni06F3 = -22;
uni06F4 = -33;
uni06F5 = -11;
uni06F6 = 28;
uni06F7 = -39;
uni06F8 = 39;
uni06F9 = -167;
};
uniFB51 = {
Decoratedbracketleft = 0;
braceleft = 11;
bracketleft = 11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 89;
lamthreedotsabovear.init = 89;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 11;
uni0621 = -33;
uni0622 = 70;
uni0623 = 71;
uni0632 = 44;
uni0639 = -22;
uni063A = -22;
uni0671 = 67;
uni0691 = 44;
uni0698 = 33;
uniEECD = -22;
uniEECF = -22;
uniFB68 = 44;
uniFE8B = 44;
uniFE91 = 0;
uniFE97 = 44;
uniFE9B = 33;
uniFECB = -22;
uniFECF = -22;
uniFEE7 = 56;
};
uniFB89 = {
uni0621 = 11;
uni0622 = 0;
uni0623 = 0;
uni0624 = 31;
uni0625 = 0;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 11;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 0;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uniFB8B = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
space = 32;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 83;
uni0625 = 144;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -12;
uni0663 = -12;
uni0666 = -12;
uni0667 = 8;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 78;
uni0695 = 78;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 25;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 7;
uniFE91 = 0;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFB8D = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0667 = 26;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F7 = 11;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB68 = 24;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE8B = 21;
uniFE91 = 0;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFE82 = {
Decoratedbracketleft = 0;
braceleft = 11;
bracketleft = 11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 33;
lamvabovear.init = 33;
parenleft = 11;
uni0621 = -33;
uni0622 = 66;
uni0623 = 39;
uni0632 = 44;
uni0639 = -22;
uni063A = -22;
uni0671 = 67;
uni0691 = 44;
uni0698 = 33;
uniEECD = -22;
uniEECF = -22;
uniFB68 = 44;
uniFE8B = 44;
uniFE91 = 0;
uniFE97 = 44;
uniFE9B = 33;
uniFECB = -22;
uniFECF = -22;
uniFEE7 = 44;
};
uniFE84 = {
Decoratedbracketleft = 0;
braceleft = 11;
bracketleft = 11;
lamdotabovear = 33;
lamdotabovear.init = 33;
lamthreedotsabovear = 78;
lamthreedotsabovear.init = 78;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 11;
uni0621 = -33;
uni0622 = 55;
uni0623 = 57;
uni0632 = 67;
uni0639 = -22;
uni063A = -22;
uni0671 = 59;
uni0691 = 44;
uni0698 = 33;
uniEECD = -22;
uniEECF = -22;
uniFB68 = 44;
uniFE8B = 44;
uniFE91 = 0;
uniFE97 = 67;
uniFE9B = 33;
uniFECB = -22;
uniFECF = -22;
uniFEE7 = 67;
};
uniFE88 = {
Decoratedbracketleft = -39;
braceleft = -33;
bracketleft = -33;
parenleft = -22;
uni0621 = -33;
uni0625 = 57;
uni0632 = 17;
uni0639 = 22;
uni063A = 22;
uni0691 = 22;
uni0698 = 22;
uniEECD = 22;
uniEECF = -22;
uniFB68 = 22;
uniFE8B = 22;
uniFE91 = 0;
uniFE97 = 22;
uniFE9B = 22;
uniFECB = -22;
uniFECF = -22;
uniFEE7 = 17;
};
uniFE8E = {
Decoratedbracketleft = -44;
braceleft = -44;
bracketleft = -44;
parenleft = -44;
uni0621 = -33;
uni0632 = 17;
uni0639 = -22;
uni063A = -22;
uni0691 = 22;
uni0698 = 22;
uniEECD = -22;
uniEECF = -22;
uniFB68 = 22;
uniFE8B = 17;
uniFE97 = 22;
uniFE9B = 22;
uniFECB = -22;
uniFECF = -22;
uniFEE7 = 17;
};
uniFE91 = {
uniFB51 = 0;
uniFE82 = 0;
uniFEAE = 2;
uniFEB0 = 2;
};
uniFEAA = {
uni0621 = 11;
uni0622 = 11;
uni0623 = 11;
uni0624 = 31;
uni0625 = 6;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 11;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 11;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uniFEAC = {
uni0621 = 11;
uni0622 = 0;
uni0623 = 0;
uni0624 = 31;
uni0625 = 0;
uni0626 = 18;
uni0627 = 0;
uni062C = 11;
uni062D = 11;
uni062E = 11;
uni0631 = 11;
uni0632 = 11;
uni0639 = 11;
uni063A = 11;
uni0642 = 18;
uni0644 = 11;
uni0646 = 11;
uni0648 = 31;
uni0649 = 18;
uni064A = 18;
uni0671 = 0;
uni0686 = 11;
uni0691 = 11;
uni0698 = 11;
uni06CC = 18;
uni06D2 = 11;
uni06D3 = 11;
uniEECD = 11;
uniEECF = 11;
uniFB7C = 11;
uniFE9F = 11;
uniFEA3 = 11;
uniFEA7 = 11;
uniFECB = 11;
uniFECF = 11;
};
uniFEAE = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0623 = 0;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -44;
uni0663 = -32;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFEB0 = {
Decoratedbracketleft = 72;
Decoratedbracketright = -26;
braceleft = 89;
bracketleft = 89;
lamdotabovear = 55;
lamthreedotsabovear = 55;
lamvabovear = 55;
parenleft = 89;
rehvabovear = 80;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 83;
uni0625 = 133;
uni0626 = 72;
uni0627 = 0;
uni062C = 27;
uni062D = 12;
uni062E = 12;
uni0631 = 80;
uni0632 = 80;
uni0639 = 72;
uni063A = 72;
uni0642 = 61;
uni0644 = 58;
uni0646 = 58;
uni0648 = 83;
uni0649 = 72;
uni064A = 72;
uni0660 = -8;
uni0662 = -38;
uni0663 = -26;
uni0671 = 0;
uni0686 = 27;
uni0691 = 80;
uni0694 = 80;
uni0695 = 80;
uni0698 = 80;
uni06CC = 71;
uni06F0 = -8;
uni06F2 = -21;
uni06F3 = -8;
uniEECD = 72;
uniEECF = 17;
uniFB58 = 111;
uniFB58FE8A = 111;
uniFB58FEF0 = 111;
uniFB58FEF2 = 111;
uniFB7C = 0;
uniFBA8 = 0;
uniFBA8FE8A = 0;
uniFBA8FEF0 = 0;
uniFBA8FEF2 = 0;
uniFBFE = 111;
uniFBFEFBFD = 111;
uniFC59 = 111;
uniFC5A = 111;
uniFE91 = 0;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 17;
uniFECF = 17;
uniFEF3 = 111;
uniFEF3FE8A = 111;
wawtwodotsabovear = 83;
wawvabovear = 83;
yehvabove_alefMaksuraar = 111;
yehvabove_pehar = 111;
yehvabove_yehHamzaabovear = 111;
yehvabove_yehar = 111;
yehvabove_yehvar = 111;
yehvabovear = 72;
yehvabovear.init = 111;
};
uniFEC2 = {
uni0621 = 11;
};
uniFEC6 = {
uni0621 = 11;
};
uniFEF5 = {
lamdotabovear = 22;
lamdotabovear.init = 11;
lamthreedotsabovear = 11;
lamthreedotsabovear.init = 11;
lamvabovear = 22;
lamvabovear.init = 11;
rehvabovear = 33;
uni0621 = 22;
uni0622 = 17;
uni0623 = 22;
uni0625 = 17;
uni0627 = 28;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 22;
uni0644 = 11;
uni0671 = 17;
uni0686 = 22;
uni0691 = 72;
uni0698 = 50;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 72;
uniFB7C = 22;
uniFE8B = 56;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 22;
yehvabove_alefMaksuraar = 39;
yehvabove_pehar = 39;
yehvabove_yehHamzaabovear = 39;
yehvabove_yehar = 39;
yehvabove_yehvar = 39;
yehvabovear.init = 39;
};
uniFEF6 = {
lamdotabovear = 22;
lamdotabovear.init = 11;
lamthreedotsabovear = 11;
lamthreedotsabovear.init = 11;
lamvabovear = 22;
lamvabovear.init = 11;
rehvabovear = 33;
uni0621 = 22;
uni0622 = 17;
uni0623 = 22;
uni0625 = 17;
uni0627 = 28;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 22;
uni0644 = 22;
uni0671 = 17;
uni0686 = 22;
uni0691 = 72;
uni0698 = 50;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 72;
uniFB7C = 22;
uniFE8B = 56;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 22;
yehvabove_alefMaksuraar = 39;
yehvabove_pehar = 39;
yehvabove_yehHamzaabovear = 39;
yehvabove_yehar = 39;
yehvabove_yehvar = 39;
yehvabovear.init = 39;
};
uniFEF7 = {
lamdotabovear = 11;
lamvabovear = 11;
rehvabovear = 17;
uni0621 = 22;
uni0622 = 17;
uni0623 = 33;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 11;
uni0644 = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 61;
uni0698 = 50;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 61;
uniFB7C = 22;
uniFE8B = 44;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 11;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
uniFEF8 = {
lamdotabovear = 11;
lamvabovear = 11;
rehvabovear = 17;
uni0621 = 22;
uni0622 = 17;
uni0623 = 33;
uni0627 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0643 = 11;
uni0644 = 22;
uni0671 = 22;
uni0686 = 22;
uni0691 = 61;
uni0698 = 50;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB68 = 61;
uniFB7C = 22;
uniFE8B = 44;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
uniFEDF = 11;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
uniFEF9 = {
uni0621 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 11;
uni0686 = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
uniFEFA = {
uni0621 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 11;
uni0686 = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
uniFEFB = {
uni0621 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 22;
uni0686 = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
uniFEFC = {
uni0621 = 22;
uni062C = 22;
uni062D = 22;
uni062E = 22;
uni0639 = 22;
uni063A = 22;
uni0644 = 22;
uni0686 = 22;
uni06D2 = 22;
uni06D3 = 22;
uniEECD = 22;
uniEECF = 22;
uniFB7C = 22;
uniFE9F = 22;
uniFEA3 = 22;
uniFEA7 = 22;
uniFECB = 22;
uniFECF = 22;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -3;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
question = -6;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -12;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -12;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
q = -13;
question = -12;
t = -4;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
g = -3;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
z = {
comma = 4;
d = -6;
g = -6;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -6;
g = -6;
q = -4;
question = -11;
};
zero.ar = {
five.ar = -4;
four.ar = 3;
one.ar = -8;
seven.ar = -24;
six.ar = -5;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
five.farsi = -4;
four.farsi = 3;
one.farsi = -8;
seven.farsi = -24;
six.farsi = -5;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
