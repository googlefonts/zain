{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:48:27 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    112,\012    112,\012    108,\012    108,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    118,\012    118,\012    108,\012    108,\012    556,\012    0,\012    556,\012    382,\012    0,\012    \"-160\",\012    556,\012    \"-10\",\012    556,\012    393,\012    \"-10\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    566,\012    223,\012    566,\012    216\012)";
}
);
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = ExtraBold;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,-85,o),
(250,-85,qs),
(273,-85,o),
(304,-53,o),
(304,-29,qs),
(304,-5,o),
(273,27,o),
(250,27,qs),
(226,27,o),
(194,-5,o),
(194,-29,qs),
(194,-53,o)
);
},
{
closed = 1;
nodes = (
(220,54,qs),
(276,54,ls),
(286,54,o),
(286,64,qs),
(286,75,ls),
(286,90,o),
(301,100,qs),
(364,147,o),
(412,216,o),
(412,261,qs),
(412,313,o),
(373,343,qs),
(332,376,o),
(259,376,qs),
(210,376,o),
(162,357,qs),
(112,337,o),
(128,288,qs),
(134,267,l),
(137,260,o),
(142,260,qs),
(146,260,o),
(153,263,qs),
(210,292,o),
(257,292,qs),
(315,292,o),
(315,245,qs),
(315,215,o),
(268,176,qs),
(233,147,o),
(210,111,o),
(210,88,qs),
(210,64,ls),
(210,54,o)
);
},
{
closed = 1;
nodes = (
(506,-266,l),
(506,555,l),
(21,555,l),
(21,-266,l)
);
},
{
closed = 1;
nodes = (
(432,-192,l),
(95,-192,l),
(95,481,l),
(432,481,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 3 2 5 2 3 5 128 0 5 0 2 5 0 126 0 6 10 1 9 4 6 9 103 0 4 0 2 3 4 2 105 0 0 0 1 8 0 1 105 0 8 7 7 8 87 0 8 8 7 95 0 7 8 7 79 50 50 50 53 50 53 18 17 17 58 37 34 41 36 34 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 527;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 248;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 140;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,130,o),
(94,130,qs),
(123,130,o),
(161,90,o),
(161,60,qs),
(161,29,o),
(123,-10,o),
(94,-10,qs),
(64,-10,o),
(24,30,o),
(24,60,qs),
(24,90,o)
);
},
{
closed = 1;
nodes = (
(33,556,o),
(46,556,qs),
(56,556,ls),
(106,556,o),
(152,507,o),
(150,455,qs),
(141,176,ls),
(141,163,o),
(128,163,qs),
(59,163,ls),
(46,163,o),
(46,176,qs),
(33,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 2 2 3 97 0 3 3 39 77 0 1 1 0 97 0 0 0 46 0 78 52 51 36 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 189;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,556,o),
(37,556,qs),
(58,556,ls),
(108,556,o),
(139,517,o),
(133,462,qs),
(123,366,ls),
(122,353,o),
(110,353,qs),
(55,353,ls),
(43,353,o),
(42,366,qs),
(24,543,ls)
);
},
{
closed = 1;
nodes = (
(184,556,o),
(198,556,qs),
(219,556,ls),
(269,556,o),
(300,517,o),
(294,462,qs),
(284,366,ls),
(283,353,o),
(271,353,qs),
(216,353,ls),
(204,353,o),
(203,366,qs),
(185,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
2 1 0 0 1 97 3 1 1 1 39 0 78 52 51 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,339,l),
(247,339,l),
(215,212,l),
(336,212,l)
);
},
{
closed = 1;
nodes = (
(19,137,o),
(22,150,qs),
(35,199,ls),
(38,212,o),
(51,212,qs),
(109,212,l),
(141,339,l),
(82,339,ls),
(69,339,o),
(72,352,qs),
(85,401,l),
(87,413,o),
(100,413,qs),
(159,413,l),
(190,543,ls),
(193,556,o),
(207,556,qs),
(235,556,ls),
(299,556,o),
(282,488,qs),
(264,413,l),
(386,413,l),
(417,543,l),
(419,556,o),
(433,556,qs),
(461,556,ls),
(525,556,o),
(509,488,qs),
(491,413,l),
(551,413,ls),
(563,413,o),
(561,401,q),
(548,352,ls),
(545,339,o),
(532,339,qs),
(473,339,l),
(441,212,l),
(501,212,ls),
(514,212,o),
(511,199,qs),
(498,150,ls),
(495,137,o),
(482,137,qs),
(423,137,l),
(395,13,l),
(391,0,o),
(381,0,qs),
(298,0,ls),
(286,0,o),
(289,13,qs),
(318,137,l),
(197,137,l),
(167,13,ls),
(164,0,o),
(153,0,qs),
(71,0,ls),
(58,0,o),
(62,13,qs),
(92,137,l),
(32,137,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
12 10 2 8 13 7 2 0 1 8 0 104 14 6 16 3 1 17 15 5 3 3 2 1 3 103 11 1 9 9 39 77 4 1 2 2 40 2 78 4 4 0 0 4 63 4 62 59 57 56 54 51 49 47 44 42 41 39 36 34 32 29 27 26 24 21 19 17 14 12 11 9 6 0 3 0 3 17 18 9 23 
CALL[ ]	/* CallFunction */";
};
width = 578;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,456,o),
(153,409,qs),
(153,373,o),
(214,350,q),
(214,463,l)
);
},
{
closed = 1;
nodes = (
(330,112,o),
(330,155,qs),
(330,189,o),
(273,213,q),
(273,97,l)
);
},
{
closed = 1;
nodes = (
(138,258,o),
(104,282,qs),
(41,326,o),
(41,403,qs),
(41,469,o),
(86,512,qs),
(133,558,o),
(214,565,q),
(214,608,ls),
(214,621,o),
(227,621,qs),
(261,621,ls),
(273,621,o),
(273,608,qs),
(273,565,l),
(326,563,o),
(374,547,qs),
(407,535,o),
(427,495,o),
(418,461,qs),
(412,439,ls),
(409,426,o),
(400,426,qs),
(393,426,o),
(383,431,qs),
(329,457,o),
(273,462,q),
(273,330,l),
(348,307,o),
(382,284,qs),
(443,241,o),
(443,166,qs),
(443,103,o),
(403,57,qs),
(357,5,o),
(273,-7,q),
(273,-52,ls),
(273,-65,o),
(261,-65,qs),
(227,-65,ls),
(214,-65,o),
(214,-52,qs),
(214,-10,l),
(127,-7,o),
(75,34,qs),
(22,76,o),
(22,140,qs),
(22,163,o),
(37,163,qs),
(43,163,o),
(47,159,qs),
(119,94,o),
(214,91,q),
(214,234,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
55 1 5 6 36 4 2 4 5 63 35 5 0 4 1 4 9 1 0 1 27 1 2 0 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 6 0 3 6 3 101 0 5 5 39 77 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 6 4 6 5 4 128 0 4 1 6 4 1 126 0 1 0 6 1 0 126 0 6 0 3 6 3 101 0 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
50 22 46 50 20 34 26 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 469;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,13,qs),
(501,543,ls),
(509,556,o),
(521,556,qs),
(545,556,ls),
(577,556,o),
(600,514,o),
(584,484,qs),
(324,13,ls),
(317,0,o),
(305,0,qs),
(217,0,ls),
(203,0,o)
);
},
{
closed = 1;
nodes = (
(715,162,qs),
(715,205,o),
(679,254,o),
(647,254,qs),
(616,254,o),
(582,206,o),
(582,162,qs),
(582,72,o),
(647,72,qs),
(715,72,o)
);
},
{
closed = 1;
nodes = (
(248,394,qs),
(248,437,o),
(212,486,o),
(180,486,qs),
(149,486,o),
(114,437,o),
(114,394,qs),
(114,303,o),
(180,303,qs),
(248,303,o)
);
},
{
closed = 1;
nodes = (
(542,33,qs),
(495,81,o),
(495,164,qs),
(495,235,o),
(532,281,qs),
(574,335,o),
(647,335,qs),
(711,335,o),
(753,293,qs),
(801,245,o),
(801,164,qs),
(801,93,o),
(764,45,qs),
(721,-9,o),
(647,-9,qs),
(584,-9,o)
);
},
{
closed = 1;
nodes = (
(75,265,qs),
(28,313,o),
(28,396,qs),
(28,467,o),
(65,513,qs),
(107,566,o),
(180,566,qs),
(244,566,o),
(286,525,qs),
(334,477,o),
(334,396,qs),
(334,324,o),
(297,277,qs),
(253,223,o),
(180,223,qs),
(116,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 5 5 1 97 9 1 1 1 39 77 11 1 2 2 0 97 13 6 10 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 39 77 0 5 5 9 97 0 9 9 39 77 11 1 2 2 0 97 13 6 10 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 39 77 0 5 5 9 97 0 9 9 39 77 10 1 0 0 40 77 11 1 2 2 6 97 13 1 6 6 46 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 5 7 9 5 105 0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 39 77 10 1 0 0 40 77 11 1 2 2 6 97 13 1 6 6 46 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
50 49 34 33 24 23 14 13 2 0 58 56 49 64 50 64 42 40 33 48 34 48 29 27 23 32 24 32 19 17 13 22 14 22 9 6 0 12 2 12 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 829;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,277,ls),
(428,290,o),
(443,290,qs),
(527,290,ls),
(532,290,o),
(536,282,o),
(533,277,qs),
(431,142,l),
(535,13,ls),
(538,9,o),
(534,0,o),
(529,0,qs),
(466,0,ls),
(401,0,o),
(369,42,qs),
(359,55,l),
(308,-8,o),
(212,-8,qs),
(136,-8,o),
(87,33,qs),
(32,78,o),
(32,152,qs),
(32,202,o),
(87,273,o),
(150,303,q),
(93,366,o),
(93,426,qs),
(93,485,o),
(135,523,qs),
(183,566,o),
(267,566,qs),
(344,566,o),
(390,535,qs),
(443,500,o),
(443,431,qs),
(443,352,o),
(314,279,q),
(370,214,l)
);
},
{
closed = 1;
nodes = (
(332,426,qs),
(332,451,o),
(297,481,o),
(270,481,qs),
(244,481,o),
(212,450,o),
(212,425,qs),
(212,390,o),
(259,347,q),
(332,384,o)
);
},
{
closed = 1;
nodes = (
(151,197,o),
(151,153,qs),
(151,124,o),
(192,85,o),
(223,85,qs),
(247,85,o),
(280,102,o),
(302,125,q),
(213,233,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
12 1 3 4 56 37 29 3 5 3 21 1 1 5 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
12 1 3 4 56 37 29 3 5 3 21 1 2 5 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 46 77 0 5 5 1 97 2 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 2 95 0 2 2 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 95 0 2 2 40 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 39 55 35 43 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 555;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,556,o),
(37,556,qs),
(58,556,ls),
(108,556,o),
(139,517,o),
(133,462,qs),
(123,366,ls),
(122,353,o),
(110,353,qs),
(55,353,ls),
(43,353,o),
(42,366,qs),
(24,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 1 97 0 1 1 39 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 160;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,569,qs),
(181,680,o),
(281,693,qs),
(286,694,o),
(286,688,qs),
(286,678,ls),
(286,644,o),
(275,608,o),
(259,592,qs),
(251,585,o),
(248,581,qs),
(144,461,o),
(144,274,qs),
(144,87,o),
(248,-32,qs),
(251,-35,o),
(255,-40,q),
(275,-59,o),
(286,-93,o),
(286,-129,qs),
(286,-139,ls),
(286,-145,o),
(281,-144,qs),
(196,-133,o),
(131,-48,qs),
(40,70,o),
(40,274,qs),
(40,454,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
23 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 332;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,-21,qs),
(162,-131,o),
(62,-144,qs),
(57,-145,o),
(57,-139,qs),
(57,-129,ls),
(57,-95,o),
(68,-59,o),
(84,-43,qs),
(92,-36,o),
(96,-32,qs),
(199,87,o),
(199,274,qs),
(199,461,o),
(96,581,qs),
(93,584,o),
(88,589,qs),
(69,608,o),
(57,641,o),
(57,678,qs),
(57,688,ls),
(57,694,o),
(62,693,qs),
(147,682,o),
(212,597,qs),
(303,478,o),
(303,274,qs),
(303,94,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
23 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 348;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,384,o),
(30,399,qs),
(50,459,ls),
(54,471,o),
(66,467,qs),
(155,430,l),
(148,526,ls),
(147,539,o),
(161,539,qs),
(225,539,ls),
(239,539,o),
(238,526,qs),
(231,430,l),
(320,467,ls),
(331,471,o),
(336,459,qs),
(356,399,ls),
(361,384,o),
(348,382,q),
(256,359,l),
(318,284,ls),
(325,276,o),
(315,267,q),
(264,230,ls),
(252,222,o),
(246,233,qs),
(193,316,l),
(142,233,ls),
(135,221,o),
(124,230,qs),
(73,267,ls),
(62,275,o),
(70,284,qs),
(132,359,l),
(38,382,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,223,o),
(30,236,qs),
(30,305,ls),
(30,318,o),
(43,318,qs),
(165,318,l),
(165,449,ls),
(165,462,o),
(178,462,qs),
(226,462,o),
(267,424,o),
(267,379,qs),
(267,318,l),
(389,318,ls),
(402,318,o),
(402,305,qs),
(402,236,ls),
(402,223,o),
(389,223,qs),
(267,223,l),
(267,91,ls),
(267,79,o),
(254,79,qs),
(178,79,ls),
(165,79,o),
(165,91,qs),
(165,223,l),
(43,223,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 95 0 0 3 0 79 0 0 0 27 0 26 34 35 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,34,o),
(20,60,qs),
(20,90,o),
(60,130,o),
(90,130,qs),
(120,130,o),
(157,91,o),
(157,60,qs),
(157,-31,o),
(62,-106,qs),
(54,-113,o),
(48,-106,qs),
(25,-80,o),
(48,-57,qs),
(73,-32,o),
(77,-9,q),
(51,-4,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 177;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,162,qs),
(30,244,ls),
(30,257,o),
(43,257,qs),
(252,257,ls),
(265,257,o),
(265,244,qs),
(265,162,ls),
(265,149,o),
(252,149,qs),
(43,149,ls),
(30,149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,29,o),
(28,58,qs),
(28,87,o),
(68,127,o),
(96,127,qs),
(124,127,o),
(164,87,o),
(164,58,qs),
(164,29,o),
(124,-12,o),
(96,-12,qs),
(68,-12,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 0 97 2 1 0 0 46 0 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 198;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(8,13,qs),
(232,543,ls),
(237,556,o),
(252,556,qs),
(266,556,ls),
(300,556,o),
(325,509,o),
(310,474,qs),
(115,13,ls),
(110,0,o),
(95,0,qs),
(16,0,ls),
(2,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,135,qs),
(338,174,o),
(338,277,qs),
(338,367,o),
(320,408,qs),
(299,457,o),
(244,457,qs),
(195,457,o),
(174,421,qs),
(150,381,o),
(150,277,qs),
(150,186,o),
(167,147,qs),
(188,99,o),
(244,99,qs),
(293,99,o)
);
},
{
closed = 1;
nodes = (
(31,277,qs),
(31,408,o),
(78,481,qs),
(132,566,o),
(244,566,qs),
(341,566,o),
(395,501,qs),
(457,426,o),
(457,277,qs),
(457,147,o),
(410,74,qs),
(356,-10,o),
(244,-10,qs),
(31,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 29 17 29 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,409,ls),
(28,404,o),
(28,418,qs),
(28,506,ls),
(28,520,o),
(43,526,qs),
(99,546,ls),
(127,556,o),
(151,556,qs),
(176,556,ls),
(246,556,o),
(246,489,qs),
(246,106,l),
(287,106,ls),
(357,106,o),
(357,40,qs),
(357,17,ls),
(357,0,o),
(341,0,qs),
(40,0,ls),
(27,0,o),
(27,13,qs),
(27,93,ls),
(27,106,o),
(40,106,qs),
(130,106,l),
(130,441,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 39 77 2 1 0 0 1 96 0 1 1 40 1 78 50 35 51 32 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,106,o),
(428,42,qs),
(428,17,ls),
(428,0,o),
(412,0,qs),
(41,0,ls),
(28,0,o),
(28,13,qs),
(28,110,o),
(76,175,qs),
(108,219,o),
(178,264,qs),
(241,304,o),
(253,314,qs),
(300,352,o),
(300,400,qs),
(300,429,o),
(258,463,o),
(220,463,qs),
(155,463,o),
(85,427,qs),
(78,423,o),
(72,423,qs),
(65,423,o),
(62,432,qs),
(53,459,ls),
(32,523,o),
(97,545,qs),
(162,566,o),
(229,566,qs),
(309,566,o),
(358,533,qs),
(420,491,o),
(420,406,qs),
(420,341,o),
(379,289,qs),
(347,248,o),
(266,196,qs),
(213,160,o),
(177,126,o),
(173,106,q),
(358,106,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 59 35 21 42 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,166,qs),
(420,94,o),
(372,46,qs),
(314,-10,o),
(212,-10,qs),
(124,-10,o),
(70,34,qs),
(18,76,o),
(18,135,qs),
(18,161,o),
(36,161,qs),
(42,161,o),
(53,152,qs),
(123,92,o),
(203,92,qs),
(250,92,o),
(303,134,o),
(303,171,qs),
(303,230,o),
(225,230,qs),
(162,230,ls),
(127,230,o),
(97,256,o),
(97,287,qs),
(97,317,ls),
(97,336,o),
(112,336,qs),
(208,336,ls),
(284,336,o),
(284,401,qs),
(284,431,o),
(242,465,o),
(205,465,qs),
(141,465,o),
(73,429,qs),
(64,424,o),
(58,424,qs),
(51,424,o),
(48,433,qs),
(39,459,ls),
(18,523,o),
(83,545,qs),
(148,566,o),
(213,566,qs),
(289,566,o),
(339,534,qs),
(402,493,o),
(402,413,qs),
(402,375,o),
(360,310,o),
(323,291,q),
(420,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 51 35 21 38 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,426,l),
(137,216,l),
(273,216,l)
);
},
{
closed = 1;
nodes = (
(11,109,o),
(11,122,qs),
(11,186,ls),
(11,200,o),
(21,217,qs),
(218,531,ls),
(234,556,o),
(262,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,216,l),
(414,216,ls),
(484,216,o),
(484,149,qs),
(484,126,ls),
(484,109,o),
(468,109,qs),
(389,109,l),
(388,13,ls),
(388,0,o),
(376,0,qs),
(286,0,ls),
(273,0,o),
(273,13,qs),
(273,109,l),
(24,109,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 0 4 1 76 3 6 2 0 7 5 2 2 1 0 2 104 0 4 4 39 77 0 1 1 40 1 78 3 3 0 0 3 29 3 28 22 19 17 15 12 10 8 5 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,368,o),
(238,368,qs),
(322,368,o),
(373,326,qs),
(430,278,o),
(430,190,qs),
(430,105,o),
(375,50,qs),
(314,-10,o),
(219,-10,qs),
(137,-10,o),
(82,28,qs),
(22,70,o),
(22,130,qs),
(22,157,o),
(40,157,qs),
(47,157,o),
(58,148,qs),
(122,92,o),
(206,92,qs),
(314,92,o),
(314,187,qs),
(314,223,o),
(256,266,o),
(207,266,qs),
(135,266,o),
(62,243,qs),
(46,239,o),
(46,254,qs),
(46,543,ls),
(46,556,o),
(59,556,qs),
(330,556,ls),
(400,556,o),
(400,489,qs),
(400,466,ls),
(400,449,o),
(384,449,qs),
(157,449,l),
(157,359,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,93,o),
(249,93,qs),
(290,93,o),
(344,147,o),
(344,189,qs),
(344,232,o),
(289,288,o),
(247,288,qs),
(205,288,o),
(149,232,o),
(149,189,qs),
(149,147,o)
);
},
{
closed = 1;
nodes = (
(269,386,qs),
(349,386,o),
(402,334,qs),
(459,279,o),
(459,199,qs),
(459,115,o),
(410,58,qs),
(351,-10,o),
(250,-10,qs),
(161,-10,o),
(101,38,qs),
(32,94,o),
(32,186,qs),
(32,225,o),
(64,308,o),
(105,374,qs),
(216,555,ls),
(223,566,o),
(236,566,qs),
(274,566,o),
(289,535,qs),
(307,497,o),
(278,449,qs),
(238,383,l),
(254,386,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 2 39 77 0 0 0 4 97 0 4 4 42 77 0 1 1 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 2 4 2 133 0 0 0 4 97 0 4 4 42 77 0 1 1 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 40 38 36 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,449,o),
(20,462,qs),
(20,543,ls),
(20,556,o),
(33,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,476,ls),
(389,448,o),
(376,419,qs),
(195,13,ls),
(189,0,o),
(176,0,qs),
(79,0,ls),
(73,0,o),
(68,8,o),
(71,13,q),
(266,449,l),
(33,449,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 19 0 18 54 51 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,83,o),
(245,83,qs),
(289,83,o),
(345,126,o),
(345,160,qs),
(345,240,o),
(245,240,qs),
(144,240,o),
(144,160,qs),
(144,126,o)
);
},
{
closed = 1;
nodes = (
(203,333,o),
(245,333,qs),
(287,333,o),
(335,371,o),
(335,403,qs),
(335,436,o),
(286,474,o),
(245,474,qs),
(203,474,o),
(154,436,o),
(154,403,qs),
(154,371,o)
);
},
{
closed = 1;
nodes = (
(40,417,qs),
(40,481,o),
(90,521,qs),
(146,566,o),
(245,566,qs),
(330,566,o),
(385,532,qs),
(449,491,o),
(449,417,qs),
(449,329,o),
(366,290,q),
(462,256,o),
(462,159,qs),
(462,90,o),
(413,45,qs),
(354,-10,o),
(245,-10,qs),
(149,-10,o),
(91,33,qs),
(27,80,o),
(27,159,qs),
(27,256,o),
(123,290,q),
(40,329,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 39 77 0 1 1 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 1 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 36 35 33 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,324,o),
(337,367,qs),
(337,409,o),
(281,462,o),
(238,462,qs),
(196,462,o),
(142,408,o),
(142,367,qs),
(142,322,o),
(195,267,o),
(240,267,qs),
(282,267,o)
);
},
{
closed = 1;
nodes = (
(213,170,qs),
(134,170,o),
(82,221,qs),
(27,275,o),
(27,353,qs),
(27,440,o),
(79,498,qs),
(139,565,o),
(240,565,qs),
(329,565,o),
(387,518,qs),
(454,463,o),
(454,370,qs),
(454,331,o),
(423,248,o),
(383,183,qs),
(272,3,ls),
(264,-10,o),
(251,-10,qs),
(212,-10,o),
(198,23,qs),
(180,61,o),
(209,107,qs),
(250,174,l),
(230,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 39 77 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 3 0 1 0 3 1 105 5 1 0 0 4 2 0 4 105 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 36 34 28 26 18 16 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,211,o),
(101,211,qs),
(72,211,o),
(34,251,o),
(34,280,qs),
(34,311,o),
(71,349,o),
(101,349,qs),
(130,349,o),
(169,311,o),
(169,280,qs),
(169,251,o)
);
},
{
closed = 1;
nodes = (
(33,29,o),
(33,58,qs),
(33,87,o),
(73,127,o),
(101,127,qs),
(129,127,o),
(169,87,o),
(169,58,qs),
(169,29,o),
(129,-12,o),
(101,-12,qs),
(73,-12,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 0 0 1 3 0 1 105 0 3 3 2 97 4 1 2 2 46 2 78 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 209;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,359,o),
(100,359,qs),
(129,359,o),
(167,319,o),
(167,288,qs),
(167,258,o),
(129,219,o),
(100,219,qs),
(70,219,o),
(30,258,o),
(30,288,qs),
(30,318,o)
);
},
{
closed = 1;
nodes = (
(30,34,o),
(30,60,qs),
(30,90,o),
(70,130,o),
(100,130,qs),
(130,130,o),
(167,91,o),
(167,60,qs),
(167,-31,o),
(72,-106,qs),
(64,-113,o),
(58,-106,qs),
(35,-80,o),
(58,-57,qs),
(83,-32,o),
(87,-9,q),
(61,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 44 36 34 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 198;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,179,o),
(418,125,o),
(418,74,qs),
(418,72,ls),
(418,59,o),
(406,65,qs),
(43,224,ls),
(30,229,o),
(30,244,qs),
(30,296,ls),
(30,309,o),
(43,315,qs),
(403,473,l),
(408,476,o),
(418,472,o),
(418,466,qs),
(418,393,ls),
(418,376,o),
(403,370,qs),
(167,269,l),
(337,198,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,408,o),
(43,408,qs),
(332,408,ls),
(402,408,o),
(402,342,qs),
(402,326,ls),
(402,313,o),
(389,313,qs),
(43,313,ls),
(30,313,o),
(30,326,qs),
(30,396,ls)
);
},
{
closed = 1;
nodes = (
(30,228,o),
(43,228,qs),
(332,228,ls),
(402,228,o),
(402,161,qs),
(402,145,ls),
(402,132,o),
(389,132,qs),
(43,132,ls),
(30,132,o),
(30,145,qs),
(30,215,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 51 51 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,376,o),
(35,393,qs),
(35,466,ls),
(35,472,o),
(44,476,o),
(50,473,qs),
(410,315,ls),
(423,309,o),
(423,296,qs),
(423,244,ls),
(423,229,o),
(410,224,qs),
(47,65,ls),
(35,59,o),
(35,72,qs),
(35,74,ls),
(35,125,o),
(70,179,o),
(115,198,qs),
(285,269,l),
(50,370,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
15 6 1 50 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,130,o),
(176,130,qs),
(205,130,o),
(244,90,o),
(244,60,qs),
(244,29,o),
(205,-10,o),
(176,-10,qs),
(146,-10,o),
(106,30,o),
(106,60,qs),
(106,90,o)
);
},
{
closed = 1;
nodes = (
(126,255,o),
(185,305,qs),
(234,346,o),
(257,378,o),
(257,402,qs),
(257,461,o),
(185,461,qs),
(126,461,o),
(55,425,qs),
(47,421,o),
(42,421,qs),
(35,421,o),
(32,430,qs),
(24,456,ls),
(13,489,o),
(33,529,o),
(67,543,qs),
(125,566,o),
(188,566,qs),
(266,566,o),
(317,535,qs),
(379,496,o),
(379,422,qs),
(379,365,o),
(346,319,qs),
(317,279,o),
(240,222,qs),
(222,208,o),
(222,190,qs),
(222,176,ls),
(222,163,o),
(209,163,qs),
(139,163,ls),
(126,163,o),
(126,176,qs),
(126,206,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 5 5 3 97 0 3 3 39 77 0 1 1 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 5 2 5 4 2 128 0 2 1 5 2 1 126 0 3 0 5 4 3 5 105 0 1 1 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
35 22 43 51 36 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 402;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,29,qs),
(276,29,o),
(236,72,qs),
(187,124,o),
(187,214,qs),
(187,287,o),
(230,341,qs),
(281,405,o),
(360,405,qs),
(395,405,o),
(452,373,o),
(463,347,q),
(482,400,o),
(550,400,qs),
(551,400,ls),
(563,400,o),
(562,386,qs),
(540,164,ls),
(538,148,o),
(538,138,qs),
(538,117,o),
(555,117,qs),
(583,117,o),
(603,147,qs),
(630,186,o),
(630,256,qs),
(630,358,o),
(572,417,qs),
(509,482,o),
(392,482,qs),
(288,482,o),
(216,416,qs),
(134,340,o),
(134,221,qs),
(134,98,o),
(202,25,qs),
(276,-56,o),
(408,-56,qs),
(535,-56,o),
(624,9,qs),
(635,17,o),
(642,17,qs),
(651,17,o),
(651,5,qs),
(651,-36,o),
(597,-80,qs),
(521,-142,o),
(399,-142,qs),
(245,-142,o),
(147,-56,qs),
(35,43,o),
(35,218,qs),
(35,355,o),
(128,455,qs),
(234,568,o),
(394,568,qs),
(520,568,o),
(611,499,qs),
(725,413,o),
(725,261,qs),
(725,174,o),
(675,107,qs),
(616,29,o),
(530,29,qs),
(499,29,o),
(453,67,o),
(450,94,q),
(411,29,o)
);
},
{
closed = 1;
nodes = (
(443,186,o),
(443,236,qs),
(443,269,o),
(408,307,o),
(377,307,qs),
(342,307,o),
(297,252,o),
(297,209,qs),
(297,172,o),
(335,127,o),
(365,127,qs),
(401,127,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
55 1 11 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 0 3 4 128 12 10 2 6 9 1 0 3 6 0 106 0 5 5 1 97 0 1 1 39 77 0 11 11 7 97 8 1 7 7 48 77 0 4 4 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 4 0 3 4 128 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 5 5 1 97 0 1 1 39 77 0 11 11 7 97 8 1 7 7 48 77 0 4 4 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 5 5 1 97 0 1 1 39 77 0 11 11 7 97 8 1 7 7 48 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 3 0 4 0 3 4 128 0 1 0 5 7 1 5 105 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 11 11 7 97 8 1 7 7 48 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 0 1 0 5 8 1 5 105 0 8 0 11 10 8 11 105 12 1 10 6 0 10 89 0 6 9 1 0 3 6 0 106 0 4 0 2 4 2 101 0 7 7 48 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
69 68 75 73 68 79 69 79 67 65 35 53 38 38 34 36 38 38 34 13 9 31 
CALL[ ]	/* CallFunction */";
};
width = 759;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 22 19 16 13 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,101,o),
(341,133,o),
(341,170,qs),
(341,202,o),
(299,240,o),
(263,240,qs),
(168,240,l),
(168,101,l),
(262,101,ls)
);
},
{
closed = 1;
nodes = (
(325,338,o),
(325,398,qs),
(325,454,o),
(261,454,qs),
(168,454,l),
(168,338,l),
(265,338,ls)
);
},
{
closed = 1;
nodes = (
(462,203,o),
(462,157,qs),
(462,0,o),
(276,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(257,556,ls),
(341,556,o),
(388,522,qs),
(443,484,o),
(443,407,qs),
(443,323,o),
(358,287,q),
(406,273,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
7 1 3 0 0 1 3 0 103 0 2 2 4 95 0 4 4 39 77 6 1 1 1 5 95 0 5 5 40 5 78 9 9 0 0 30 27 24 21 9 15 9 14 12 10 0 8 0 7 33 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,57,qs),
(39,135,o),
(39,275,qs),
(39,400,o),
(106,478,qs),
(180,566,o),
(307,566,qs),
(377,566,o),
(434,544,qs),
(465,531,o),
(484,492,o),
(476,457,qs),
(469,428,ls),
(466,415,o),
(456,415,qs),
(450,415,o),
(440,420,qs),
(399,440,o),
(347,454,o),
(311,454,qs),
(247,454,o),
(208,417,qs),
(160,370,o),
(160,275,qs),
(160,196,o),
(199,150,qs),
(241,101,o),
(316,101,qs),
(395,101,o),
(459,160,qs),
(468,169,o),
(477,169,qs),
(495,169,o),
(495,142,qs),
(495,96,o),
(458,53,qs),
(404,-10,o),
(301,-10,qs),
(190,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 5 0 3 4 5 3 105 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 32 30 24 22 19 17 11 9 7 5 0 38 1 38 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 510;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,108,o),
(349,146,qs),
(399,191,o),
(399,282,qs),
(399,447,o),
(231,447,qs),
(168,447,l),
(168,108,l),
(235,108,ls)
);
},
{
closed = 1;
nodes = (
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(231,556,ls),
(346,556,o),
(418,508,qs),
(521,441,o),
(521,286,qs),
(521,0,o),
(223,0,qs),
(64,0,ls),
(51,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 5 1 2 2 40 2 78 11 9 0 0 18 15 9 21 11 21 0 8 0 7 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 560;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,108,o),
(401,42,qs),
(401,17,ls),
(401,0,o),
(385,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,334,l),
(303,334,ls),
(373,334,o),
(373,267,qs),
(373,242,ls),
(373,226,o),
(357,226,qs),
(168,226,l),
(168,108,l),
(331,108,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 51 51 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,329,l),
(299,329,ls),
(369,329,o),
(369,262,qs),
(369,238,ls),
(369,221,o),
(353,221,qs),
(168,221,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 51 51 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 410;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(356,205,ls),
(286,205,o),
(286,271,qs),
(286,296,ls),
(286,313,o),
(302,313,qs),
(506,313,ls),
(522,313,o),
(522,296,qs),
(522,91,ls),
(522,64,o),
(499,48,qs),
(454,16,o),
(371,-10,o),
(315,-10,qs),
(203,-10,o),
(132,46,qs),
(39,120,o),
(39,280,qs),
(39,404,o),
(105,480,qs),
(181,566,o),
(320,566,qs),
(392,566,o),
(451,547,qs),
(484,536,o),
(504,496,o),
(495,461,qs),
(488,433,ls),
(485,420,o),
(475,420,qs),
(469,420,o),
(459,425,qs),
(393,455,o),
(330,455,qs),
(163,455,o),
(163,272,qs),
(163,196,o),
(197,151,qs),
(237,100,o),
(313,100,qs),
(366,100,o),
(410,126,q),
(410,205,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 105 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 105 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 54 38 38 34 36 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 560;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(74,556,ls),
(124,556,o),
(168,508,o),
(168,455,qs),
(168,329,l),
(365,329,l),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,13,ls),
(482,0,o),
(469,0,qs),
(378,0,ls),
(365,0,o),
(365,13,qs),
(365,221,l),
(168,221,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 3 0 0 1 3 0 103 4 1 2 2 39 77 5 1 1 1 40 1 78 51 51 18 52 50 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 533;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,556,o),
(64,556,qs),
(74,556,ls),
(124,556,o),
(168,508,o),
(168,455,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(18,112,qs),
(22,112,o),
(27,109,qs),
(59,87,o),
(87,87,qs),
(151,87,o),
(151,151,qs),
(151,543,ls),
(151,556,o),
(164,556,qs),
(174,556,ls),
(224,556,o),
(268,508,o),
(268,455,qs),
(268,147,ls),
(268,76,o),
(235,36,qs),
(197,-10,o),
(122,-10,qs),
(75,-10,o),
(42,15,qs),
(4,44,o),
(4,91,qs),
(4,112,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 98 0 0 0 46 0 78 34 35 54 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 317;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(74,556,ls),
(124,556,o),
(168,508,o),
(168,455,qs),
(168,329,l),
(346,543,ls),
(358,556,o),
(369,556,qs),
(468,556,ls),
(474,556,o),
(478,547,o),
(474,543,qs),
(307,344,l),
(503,13,ls),
(510,0,o),
(496,0,qs),
(389,0,ls),
(374,0,o),
(367,13,qs),
(227,248,l),
(168,179,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
16 8 1 0 4 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 53 53 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(370,108,o),
(370,42,qs),
(370,17,ls),
(370,0,o),
(354,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(74,556,ls),
(124,556,o),
(168,508,o),
(168,455,qs),
(168,108,l),
(300,108,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 0 39 77 3 1 2 2 1 96 0 1 1 40 1 78 0 0 0 16 0 15 51 51 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,556,o),
(440,556,qs),
(521,556,ls),
(554,556,o),
(598,518,o),
(599,488,qs),
(625,13,ls),
(625,0,o),
(615,0,qs),
(522,0,ls),
(510,0,o),
(510,13,qs),
(490,387,l),
(389,13,ls),
(386,0,o),
(373,0,qs),
(283,0,ls),
(272,0,o),
(269,13,qs),
(170,388,l),
(150,13,ls),
(150,0,o),
(139,0,qs),
(45,0,ls),
(34,0,o),
(34,13,qs),
(65,543,ls),
(65,556,o),
(77,556,qs),
(156,556,ls),
(197,556,o),
(238,532,o),
(245,504,qs),
(329,179,l),
(425,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
21 14 2 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 52 52 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(104,556,ls),
(137,556,o),
(177,533,o),
(195,504,qs),
(371,218,l),
(371,543,ls),
(371,556,o),
(384,556,qs),
(394,556,ls),
(444,556,o),
(488,508,o),
(488,455,qs),
(488,13,ls),
(488,0,o),
(475,0,qs),
(389,0,ls),
(375,0,o),
(367,13,qs),
(168,336,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
14 0 2 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 51 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
9 8 1 0 17 15 8 23 9 23 5 3 0 7 1 7 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,292,o),
(352,372,qs),
(352,407,o),
(308,447,o),
(268,447,qs),
(168,447,l),
(168,292,l),
(268,292,ls)
);
},
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(258,556,ls),
(359,556,o),
(413,511,qs),
(469,464,o),
(469,373,qs),
(469,295,o),
(424,244,qs),
(369,184,o),
(274,184,qs),
(168,184,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
5 1 1 0 2 4 1 2 103 0 0 0 3 95 0 3 3 39 77 0 4 4 40 4 78 0 0 25 22 19 16 10 8 0 7 0 6 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,69,qs),
(39,145,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,183,o),
(538,115,qs),
(496,38,o),
(414,8,q),
(440,-20,o),
(477,-20,qs),
(509,-20,o),
(538,-1,qs),
(542,2,o),
(547,2,qs),
(560,2,o),
(560,-19,qs),
(560,-52,o),
(532,-81,qs),
(497,-117,o),
(440,-117,qs),
(327,-117,o),
(271,-8,q),
(168,2,o)
);
},
{
closed = 1;
nodes = (
(452,277,qs),
(452,364,o),
(415,409,qs),
(378,455,o),
(306,455,qs),
(244,455,o),
(208,420,qs),
(160,376,o),
(160,277,qs),
(160,101,o),
(306,101,qs),
(452,101,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 4 5 1 2 4 114 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 0 2 0 102 0 5 5 3 97 0 3 3 39 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
6 1 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 3 0 5 4 3 5 105 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
31 30 37 35 30 41 31 41 40 35 20 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,292,o),
(352,372,qs),
(352,407,o),
(308,447,o),
(268,447,qs),
(168,447,l),
(168,292,l),
(268,292,ls)
);
},
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(257,556,ls),
(358,556,o),
(412,511,qs),
(469,464,o),
(469,373,qs),
(469,312,o),
(411,221,o),
(359,200,q),
(472,13,l),
(476,8,o),
(471,0,o),
(465,0,qs),
(362,0,ls),
(344,0,o),
(337,13,qs),
(244,184,l),
(168,184,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
17 1 2 1 1 76 6 1 1 0 2 3 1 2 103 0 0 0 4 95 0 4 4 39 77 5 1 3 3 40 3 78 0 0 32 29 26 23 13 11 9 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,170,qs),
(36,170,o),
(40,166,qs),
(116,98,o),
(215,98,qs),
(315,98,o),
(315,157,qs),
(315,179,o),
(275,206,o),
(216,225,qs),
(139,249,o),
(106,270,qs),
(33,316,o),
(33,403,qs),
(33,476,o),
(85,520,qs),
(141,566,o),
(234,566,qs),
(307,566,o),
(367,547,qs),
(399,536,o),
(419,496,o),
(411,461,qs),
(405,437,ls),
(402,424,o),
(393,424,qs),
(386,424,o),
(376,429,qs),
(309,461,o),
(237,461,qs),
(154,461,o),
(154,409,qs),
(154,386,o),
(195,357,o),
(254,339,qs),
(332,315,o),
(364,296,qs),
(437,252,o),
(437,166,qs),
(437,91,o),
(389,44,qs),
(333,-10,o),
(228,-10,qs),
(132,-10,o),
(74,34,qs),
(15,79,o),
(15,147,qs),
(15,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 43 38 34 43 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,447,o),
(10,460,qs),
(10,543,ls),
(10,556,o),
(23,556,qs),
(384,556,ls),
(453,556,o),
(453,489,qs),
(453,464,ls),
(453,447,o),
(437,447,qs),
(288,447,l),
(288,13,ls),
(288,0,o),
(275,0,qs),
(184,0,ls),
(171,0,o),
(171,13,qs),
(171,447,l),
(23,447,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 18 51 34 50 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,63,qs),
(48,119,o),
(48,207,qs),
(48,543,ls),
(48,556,o),
(61,556,qs),
(71,556,ls),
(121,556,o),
(165,508,o),
(165,455,qs),
(165,231,ls),
(165,100,o),
(264,100,qs),
(365,100,o),
(365,230,qs),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,207,ls),
(482,134,o),
(451,81,qs),
(397,-10,o),
(264,-10,qs),
(146,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 39 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 22 19 15 13 10 7 0 27 1 27 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(394,556,o),
(409,556,qs),
(498,556,ls),
(512,556,o),
(508,543,qs),
(332,13,ls),
(328,0,o),
(316,0,qs),
(204,0,ls),
(191,0,o),
(186,13,qs),
(10,543,ls),
(6,556,o),
(18,556,qs),
(57,556,ls),
(103,556,o),
(148,518,o),
(164,466,qs),
(263,140,l),
(390,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(314,556,o),
(326,556,qs),
(363,556,ls),
(412,556,o),
(459,516,o),
(470,466,qs),
(539,148,l),
(623,543,ls),
(626,556,o),
(639,556,qs),
(736,556,ls),
(748,556,o),
(744,543,qs),
(614,13,ls),
(611,0,o),
(598,0,qs),
(491,0,ls),
(478,0,o),
(475,13,qs),
(379,394,l),
(283,13,ls),
(280,0,o),
(267,0,qs),
(159,0,ls),
(145,0,o),
(142,13,qs),
(19,543,l),
(17,556,o),
(29,556,qs),
(52,556,ls),
(102,556,o),
(149,516,o),
(159,466,qs),
(221,148,l),
(311,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,0,o),
(119,0,qs),
(18,0,ls),
(12,0,o),
(7,8,o),
(10,13,qs),
(170,289,l),
(21,543,ls),
(18,547,o),
(23,556,o),
(28,556,qs),
(75,556,ls),
(121,556,o),
(159,531,o),
(187,484,qs),
(251,373,l),
(351,543,ls),
(359,556,o),
(372,556,qs),
(471,556,ls),
(485,556,o),
(478,543,qs),
(336,298,l),
(505,13,ls),
(508,8,o),
(503,0,o),
(497,0,qs),
(396,0,ls),
(381,0,o),
(374,13,qs),
(255,214,l),
(138,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 15 8 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 55 37 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 512;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,556,o),
(15,556,qs),
(64,556,ls),
(100,556,o),
(146,528,o),
(163,495,qs),
(250,322,l),
(362,543,l),
(367,556,o),
(382,556,qs),
(478,556,ls),
(492,556,o),
(486,543,qs),
(304,200,l),
(304,13,ls),
(304,0,o),
(291,0,qs),
(200,0,ls),
(187,0,o),
(187,13,qs),
(187,203,l),
(7,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
14 7 0 3 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 53 52 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,108,o),
(426,42,qs),
(426,17,ls),
(426,0,o),
(410,0,qs),
(39,0,ls),
(26,0,o),
(26,13,qs),
(26,85,ls),
(26,107,o),
(41,127,qs),
(276,447,l),
(45,447,ls),
(32,447,o),
(32,460,qs),
(32,543,ls),
(32,556,o),
(45,556,qs),
(356,556,ls),
(426,556,o),
(426,489,qs),
(426,473,ls),
(426,455,o),
(411,435,qs),
(170,108,l),
(356,108,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-51,o),
(151,-51,qs),
(180,-51,ls),
(250,-51,o),
(250,-118,qs),
(250,-126,ls),
(250,-144,o),
(234,-144,qs),
(115,-144,ls),
(46,-144,o),
(46,-77,qs),
(46,626,ls),
(46,692,o),
(115,692,qs),
(234,692,ls),
(250,692,o),
(250,675,qs),
(250,666,ls),
(250,600,o),
(180,600,qs),
(151,600,ls),
(145,600,o),
(145,594,qs),
(145,-45,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 0 2 3 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 3 1 0 105 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 51 51 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,556,o),
(15,556,qs),
(37,556,ls),
(79,556,o),
(121,527,o),
(138,485,qs),
(338,13,l),
(342,0,o),
(330,0,qs),
(250,0,ls),
(236,0,o),
(231,13,qs),
(7,543,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 339;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,600,o),
(146,600,qs),
(117,600,ls),
(47,600,o),
(47,666,qs),
(47,675,ls),
(47,692,o),
(63,692,qs),
(182,692,ls),
(251,692,o),
(251,626,qs),
(251,-77,ls),
(251,-144,o),
(182,-144,qs),
(63,-144,ls),
(47,-144,o),
(47,-126,qs),
(47,-118,ls),
(47,-51,o),
(117,-51,qs),
(146,-51,ls),
(152,-51,o),
(152,-45,qs),
(152,594,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 0 2 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 105 0 0 0 1 95 0 1 1 44 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 105 0 0 1 1 0 89 0 0 0 1 95 0 1 0 1 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 51 51 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 300;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,266,o),
(110,266,qs),
(32,266,ls),
(26,266,o),
(21,275,o),
(23,279,qs),
(163,543,ls),
(170,556,o),
(186,556,qs),
(219,556,o),
(258,532,o),
(273,505,qs),
(394,279,ls),
(396,275,o),
(390,266,o),
(385,266,qs),
(306,266,ls),
(292,266,o),
(285,280,qs),
(209,432,l),
(131,280,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 52 38 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 414;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-6,-192,qs),
(-6,-117,ls),
(-6,-104,o),
(7,-104,qs),
(460,-104,ls),
(473,-104,o),
(473,-117,qs),
(473,-192,ls),
(473,-205,o),
(460,-205,qs),
(7,-205,ls),
(-6,-205,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 467;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,540,o),
(10,540,qs),
(101,540,ls),
(118,540,o),
(131,528,qs),
(223,445,ls),
(227,441,o),
(223,430,o),
(217,430,qs),
(138,430,ls),
(116,430,o),
(102,442,qs),
(5,524,ls),
(0,528,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 53 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 225;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 1 3 97 4 1 3 3 42 77 6 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 6 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 6 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 34 32 26 24 22 19 16 13 6 4 0 10 1 10 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(285,113,qs),
(321,136,o),
(321,193,qs),
(321,283,o),
(237,283,qs),
(155,283,o),
(155,193,qs),
(155,149,o),
(199,98,o),
(237,98,qs),
(264,98,o)
);
},
{
closed = 1;
nodes = (
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,543,ls),
(41,556,o),
(54,556,qs),
(59,556,ls),
(109,556,o),
(155,509,o),
(155,458,qs),
(155,339,l),
(192,394,o),
(267,394,qs),
(341,394,o),
(387,347,qs),
(440,293,o),
(440,194,qs),
(440,112,o),
(402,58,qs),
(355,-9,o),
(268,-9,qs),
(197,-9,o),
(155,43,q),
(155,13,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 5 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 39 77 0 1 1 3 97 0 3 3 48 77 0 5 5 40 77 6 1 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 35 32 29 26 22 20 14 12 6 4 0 10 1 10 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,37,qs),
(29,91,o),
(29,192,qs),
(29,280,o),
(76,333,qs),
(129,393,o),
(225,393,qs),
(265,393,o),
(299,381,qs),
(328,370,o),
(346,331,o),
(338,296,qs),
(332,271,ls),
(329,261,o),
(323,261,qs),
(318,261,o),
(312,264,qs),
(269,285,o),
(232,285,qs),
(193,285,o),
(147,233,o),
(147,189,qs),
(147,88,o),
(245,88,qs),
(284,88,o),
(327,114,qs),
(336,120,o),
(341,120,qs),
(352,120,o),
(352,104,qs),
(352,66,o),
(328,36,qs),
(291,-10,o),
(212,-10,qs),
(135,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 48 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 28 26 20 18 16 14 11 9 6 5 0 34 1 34 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 365;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(313,556,o),
(326,556,qs),
(331,556,ls),
(382,556,o),
(428,509,o),
(428,458,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o),
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,275,o),
(69,328,qs),
(117,394,o),
(208,394,qs),
(280,394,o),
(313,344,q),
(313,543,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
11 1 1 2 23 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
11 1 1 2 23 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 39 77 0 1 1 2 97 0 2 2 48 77 6 1 0 0 3 97 4 1 3 3 46 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 5 39 77 0 1 1 2 97 0 2 2 48 77 0 4 4 40 77 6 1 0 0 3 97 0 3 3 46 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 35 32 28 25 22 20 14 12 6 4 0 10 1 10 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,258,o),
(251,295,o),
(221,295,qs),
(152,295,o),
(148,231,q),
(282,231,l)
);
},
{
closed = 1;
nodes = (
(246,86,qs),
(304,86,o),
(359,110,qs),
(371,115,o),
(376,115,qs),
(388,115,o),
(388,100,qs),
(388,64,o),
(359,34,qs),
(316,-10,o),
(230,-10,qs),
(145,-10,o),
(91,38,qs),
(29,93,o),
(29,193,qs),
(29,275,o),
(73,329,qs),
(126,393,o),
(221,393,qs),
(301,393,o),
(348,345,qs),
(396,297,o),
(396,220,qs),
(396,190,o),
(394,166,qs),
(392,151,o),
(375,151,qs),
(147,151,l),
(159,86,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 5 2 6 2 5 6 128 7 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 0 0 34 32 29 28 24 22 16 14 8 6 0 5 0 5 33 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,280,o),
(10,293,qs),
(10,369,ls),
(10,382,o),
(23,382,qs),
(77,382,l),
(77,407,ls),
(77,479,o),
(106,519,qs),
(138,561,o),
(199,561,qs),
(247,561,o),
(309,509,o),
(309,468,qs),
(309,448,o),
(296,448,qs),
(293,448,o),
(287,450,qs),
(255,464,o),
(236,464,qs),
(211,464,o),
(191,435,o),
(191,401,qs),
(191,382,l),
(285,382,ls),
(298,382,o),
(298,369,qs),
(298,293,ls),
(298,280,o),
(285,280,qs),
(191,280,l),
(191,13,ls),
(191,0,o),
(178,0,qs),
(90,0,ls),
(77,0,o),
(77,13,qs),
(77,280,l),
(23,280,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
4 1 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 38 0 37 36 35 34 35 35 34 50 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 324;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,0,qs),
(123,0,o),
(78,48,qs),
(29,101,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(280,394,o),
(325,343,q),
(346,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,20,ls),
(428,-63,o),
(384,-112,qs),
(333,-171,o),
(229,-171,qs),
(154,-171,o),
(103,-137,qs),
(49,-100,o),
(49,-47,qs),
(49,-24,o),
(63,-24,qs),
(68,-24,o),
(77,-31,qs),
(127,-67,o),
(201,-67,qs),
(313,-67,o),
(313,19,qs),
(313,52,l),
(271,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 1 5 11 1 7 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 7 2 7 3 2 128 0 1 1 5 97 6 1 5 5 42 77 8 1 0 0 7 97 0 7 7 40 77 0 2 2 4 97 0 4 4 50 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 7 2 7 3 2 128 0 5 5 42 77 0 1 1 6 97 0 6 6 48 77 8 1 0 0 7 97 0 7 7 40 77 0 2 2 4 97 0 4 4 50 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 45 43 37 35 33 30 25 23 19 17 15 13 6 4 0 10 1 10 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,394,qs),
(320,394,o),
(360,357,qs),
(409,311,o),
(409,220,qs),
(409,13,ls),
(409,0,o),
(396,0,qs),
(307,0,ls),
(294,0,o),
(294,13,qs),
(294,210,ls),
(294,288,o),
(224,288,qs),
(155,288,o),
(155,209,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,543,ls),
(41,556,o),
(54,556,qs),
(59,556,ls),
(109,556,o),
(155,509,o),
(155,458,qs),
(155,348,l),
(190,394,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 1 2 4 1 76 0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 37 51 35 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,546,o),
(99,546,qs),
(125,546,o),
(160,509,o),
(160,481,qs),
(160,454,o),
(125,417,o),
(99,417,qs),
(71,417,o),
(35,454,o),
(35,481,qs),
(35,508,o)
);
},
{
closed = 1;
nodes = (
(41,382,o),
(54,382,qs),
(59,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 97 0 1 1 39 77 0 3 3 42 77 0 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 3 1 0 105 0 3 3 42 77 0 2 2 40 2 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
52 51 36 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-65,-58,qs),
(-62,-58,o),
(-56,-60,qs),
(-24,-74,o),
(-4,-74,qs),
(20,-74,o),
(40,-45,o),
(40,-10,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,-17,ls),
(155,-171,o),
(34,-171,qs),
(-14,-171,o),
(-78,-118,o),
(-78,-78,qs),
(-78,-58,o)
);
},
{
closed = 1;
nodes = (
(71,546,o),
(98,546,qs),
(124,546,o),
(160,508,o),
(160,481,qs),
(160,454,o),
(124,417,o),
(98,417,qs),
(71,417,o),
(34,454,o),
(34,481,qs),
(34,508,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 4 5 97 0 5 5 39 77 0 1 1 42 77 3 1 2 2 0 98 0 0 0 50 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 4 4 5 97 0 5 5 39 77 0 1 1 42 77 0 2 2 0 98 0 0 0 50 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 1 2 1 3 2 128 0 5 0 4 1 5 4 105 0 1 1 42 77 0 2 2 0 98 0 0 0 50 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 35 34 36 52 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,543,ls),
(41,556,o),
(54,556,qs),
(59,556,ls),
(109,556,o),
(155,509,o),
(155,458,qs),
(155,253,l),
(257,369,ls),
(268,382,o),
(281,382,qs),
(382,382,ls),
(387,382,o),
(391,373,o),
(387,369,qs),
(273,242,l),
(401,13,l),
(403,8,o),
(399,0,o),
(394,0,qs),
(294,0,ls),
(277,0,o),
(271,13,qs),
(195,157,l),
(155,113,l),
(155,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
17 9 1 0 4 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 51 53 55 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 410;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,131,qs),
(41,543,ls),
(41,556,o),
(54,556,qs),
(59,556,ls),
(109,556,o),
(155,509,o),
(155,458,qs),
(155,144,ls),
(155,90,o),
(193,90,qs),
(212,90,o),
(234,105,qs),
(241,110,o),
(246,110,qs),
(257,110,o),
(257,95,qs),
(257,48,o),
(201,-8,o),
(153,-8,qs),
(41,-8,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 3 39 77 2 1 1 1 0 98 4 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 4 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 14 10 8 5 4 0 20 1 20 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 256;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,391,qs),
(338,391,o),
(376,326,q),
(424,391,o),
(495,391,qs),
(646,391,o),
(646,217,qs),
(646,13,ls),
(646,0,o),
(633,0,qs),
(545,0,ls),
(532,0,o),
(532,13,qs),
(532,207,ls),
(532,287,o),
(468,287,qs),
(437,287,o),
(401,244,o),
(401,208,qs),
(401,13,ls),
(401,0,o),
(388,0,qs),
(299,0,ls),
(286,0,o),
(286,13,qs),
(286,207,ls),
(286,287,o),
(223,287,qs),
(192,287,o),
(155,244,o),
(155,208,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(127,382,o),
(146,338,q),
(189,391,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 35 51 36 51 36 51 49 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,391,qs),
(409,391,o),
(409,217,qs),
(409,13,ls),
(409,0,o),
(396,0,qs),
(307,0,ls),
(294,0,o),
(294,13,qs),
(294,205,ls),
(294,285,o),
(224,285,qs),
(155,285,o),
(155,206,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(129,382,o),
(147,335,q),
(189,391,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
35 51 35 51 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 1 3 97 0 3 3 48 77 4 1 0 0 2 97 5 1 2 2 46 2 78 11 10 1 0 19 17 10 25 11 25 6 4 0 9 1 9 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(285,113,qs),
(321,136,o),
(321,193,qs),
(321,283,o),
(237,283,qs),
(155,283,o),
(155,193,qs),
(155,149,o),
(199,98,o),
(237,98,qs),
(264,98,o)
);
},
{
closed = 1;
nodes = (
(155,-160,o),
(142,-160,qs),
(54,-160,ls),
(41,-160,o),
(41,-147,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(127,382,o),
(146,338,q),
(188,393,o),
(258,393,qs),
(340,393,o),
(388,342,qs),
(440,288,o),
(440,194,qs),
(440,112,o),
(402,58,qs),
(355,-9,o),
(268,-9,qs),
(195,-9,o),
(155,40,q),
(155,-147,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 4 11 1 2 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 3 97 4 1 3 3 48 77 6 1 0 0 2 97 0 2 2 46 77 0 5 5 44 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 42 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 0 2 2 46 77 0 5 5 44 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 33 30 27 24 22 20 14 12 6 4 0 10 1 10 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,-147,ls),
(428,-160,o),
(415,-160,qs),
(326,-160,ls),
(313,-160,o),
(313,-147,qs),
(313,43,l),
(271,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 5 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 1 3 97 4 1 3 3 42 77 6 1 0 0 5 97 0 5 5 46 77 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 6 1 0 0 5 97 0 5 5 46 77 0 2 2 44 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 34 32 26 24 22 19 16 13 6 4 0 10 1 10 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,382,o),
(254,382,qs),
(266,382,ls),
(279,382,o),
(279,369,qs),
(279,288,ls),
(279,275,o),
(266,275,qs),
(237,275,ls),
(189,275,o),
(171,250,qs),
(155,229,o),
(155,170,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(134,382,o),
(150,327,q),
(169,359,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
0 2 2 0 97 3 1 0 0 42 77 0 1 1 40 1 78 51 53 51 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,81,qs),
(200,81,o),
(200,112,qs),
(200,130,o),
(155,146,qs),
(92,169,o),
(73,183,qs),
(28,214,o),
(28,268,qs),
(28,328,o),
(71,361,qs),
(113,393,o),
(183,393,qs),
(225,393,o),
(257,379,qs),
(288,365,o),
(306,327,o),
(296,294,qs),
(293,284,ls),
(291,276,o),
(284,276,qs),
(280,276,o),
(273,279,qs),
(271,280,o),
(270,280,q),
(222,302,o),
(180,302,qs),
(143,302,o),
(143,275,qs),
(143,256,o),
(188,239,qs),
(253,214,o),
(271,202,qs),
(315,172,o),
(315,122,qs),
(315,67,o),
(279,31,qs),
(238,-10,o),
(165,-10,qs),
(105,-10,o),
(64,18,qs),
(16,51,o),
(16,102,qs),
(16,123,o),
(29,123,qs),
(31,123,o),
(36,121,q),
(37,120,o),
(37,120,q),
(93,81,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 2 2 4 97 0 4 4 48 77 0 5 5 1 97 0 1 1 46 1 78 42 38 36 42 36 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,280,o),
(12,293,qs),
(12,369,ls),
(12,382,o),
(25,382,qs),
(91,382,l),
(91,503,ls),
(91,516,o),
(103,516,qs),
(108,516,ls),
(159,516,o),
(205,469,o),
(205,418,qs),
(205,382,l),
(287,382,ls),
(300,382,o),
(300,369,qs),
(300,293,ls),
(300,280,o),
(287,280,qs),
(205,280,l),
(205,13,ls),
(205,0,o),
(192,0,qs),
(103,0,ls),
(91,0,o),
(91,13,qs),
(91,280,l),
(25,280,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 5 2 1 1 2 95 4 1 2 2 42 77 0 3 3 0 95 0 0 0 40 0 78 0 0 0 28 0 27 34 51 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,192,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,176,ls),
(154,96,o),
(223,96,qs),
(293,96,o),
(293,175,qs),
(293,369,ls),
(293,382,o),
(306,382,qs),
(311,382,ls),
(362,382,o),
(408,335,o),
(408,284,qs),
(408,185,ls),
(408,-10,o),
(223,-10,qs),
(40,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 42 77 0 2 2 0 98 4 1 0 0 46 0 78 1 0 20 17 13 11 8 5 0 23 1 23 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,382,o),
(301,382,qs),
(393,382,ls),
(405,382,o),
(402,369,q),
(279,13,ls),
(275,0,o),
(262,0,qs),
(150,0,ls),
(136,0,o),
(132,13,qs),
(11,369,ls),
(6,382,o),
(18,382,qs),
(37,382,ls),
(90,382,o),
(137,342,o),
(154,284,qs),
(207,104,l),
(285,369,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 51 51 51 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,382,o),
(272,382,qs),
(284,382,ls),
(338,382,o),
(385,342,o),
(400,284,qs),
(436,133,l),
(502,369,ls),
(506,382,o),
(520,382,qs),
(596,382,ls),
(609,382,o),
(605,369,qs),
(501,13,ls),
(497,0,o),
(484,0,qs),
(392,0,ls),
(379,0,o),
(375,13,qs),
(312,236,l),
(251,13,l),
(249,0,o),
(236,0,qs),
(141,0,ls),
(128,0,o),
(123,13,qs),
(13,369,ls),
(9,382,o),
(22,382,qs),
(39,382,ls),
(92,382,o),
(139,342,o),
(154,284,qs),
(193,135,l),
(254,369,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
27 14 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 53 51 52 51 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,0,o),
(108,0,qs),
(19,0,ls),
(14,0,o),
(10,8,o),
(13,13,qs),
(129,200,l),
(25,369,ls),
(22,374,o),
(25,382,o),
(31,382,qs),
(73,382,ls),
(116,382,o),
(155,357,o),
(183,310,qs),
(203,277,l),
(260,369,ls),
(269,382,o),
(283,382,qs),
(367,382,ls),
(381,382,o),
(374,369,qs),
(276,207,l),
(395,13,ls),
(398,9,o),
(393,0,o),
(388,0,qs),
(295,0,ls),
(279,0,o),
(271,13,qs),
(200,132,l),
(129,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
24 15 8 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 55 37 54 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,382,o),
(16,382,qs),
(40,382,ls),
(90,382,o),
(136,344,o),
(157,284,qs),
(211,128,l),
(292,369,ls),
(296,382,o),
(308,382,qs),
(398,382,ls),
(410,382,o),
(404,369,q),
(276,7,ls),
(242,-91,o),
(166,-171,o),
(106,-171,qs),
(60,-171,o),
(-2,-115,o),
(-2,-73,qs),
(-2,-52,o),
(11,-52,qs),
(15,-52,o),
(20,-55,qs),
(49,-74,o),
(76,-74,qs),
(124,-74,o),
(148,-10,q),
(9,369,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
21 1 1 3 1 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 53 52 35 34 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,101,o),
(337,88,qs),
(337,13,ls),
(337,0,o),
(324,0,qs),
(37,0,ls),
(24,0,o),
(24,13,qs),
(24,62,ls),
(24,81,o),
(37,97,qs),
(186,280,l),
(45,280,ls),
(32,280,o),
(32,293,qs),
(32,369,ls),
(32,382,o),
(45,382,qs),
(265,382,ls),
(303,382,o),
(331,351,o),
(331,309,qs),
(331,293,o),
(318,276,qs),
(173,101,l),
(324,101,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 53 35 53 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,157,qs),
(197,-45,ls),
(197,-51,o),
(203,-51,qs),
(233,-51,ls),
(302,-51,o),
(302,-118,qs),
(302,-126,ls),
(302,-144,o),
(286,-144,qs),
(168,-144,ls),
(99,-144,o),
(99,-77,qs),
(99,149,ls),
(99,222,o),
(50,232,q),
(40,233,o),
(40,243,qs),
(40,305,ls),
(40,316,o),
(50,317,q),
(99,327,o),
(99,399,qs),
(99,626,ls),
(99,692,o),
(168,692,qs),
(286,692,ls),
(302,692,o),
(302,675,qs),
(302,666,ls),
(302,600,o),
(233,600,qs),
(203,600,ls),
(197,600,o),
(197,594,qs),
(197,393,ls),
(197,304,o),
(151,275,q),
(197,243,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 3 2 3 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 0 0 3 1 0 105 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 61 51 37 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 352;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,566,o),
(63,566,qs),
(150,566,o),
(150,469,qs),
(150,-136,ls),
(150,-149,o),
(137,-149,qs),
(63,-149,ls),
(50,-149,o),
(50,-136,qs),
(50,554,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 39 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 95 0 0 1 0 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
35 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,393,qs),
(152,594,ls),
(152,600,o),
(146,600,qs),
(117,600,ls),
(47,600,o),
(47,666,qs),
(47,675,ls),
(47,692,o),
(63,692,qs),
(182,692,ls),
(251,692,o),
(251,626,qs),
(251,399,ls),
(251,327,o),
(299,317,q),
(309,316,o),
(309,305,qs),
(309,243,ls),
(309,233,o),
(299,232,q),
(251,222,o),
(251,149,qs),
(251,-77,ls),
(251,-144,o),
(182,-144,qs),
(63,-144,ls),
(47,-144,o),
(47,-126,qs),
(47,-118,ls),
(47,-51,o),
(117,-51,qs),
(146,-51,ls),
(152,-51,o),
(152,-45,qs),
(152,157,ls),
(152,243,o),
(198,275,q),
(152,304,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 3 2 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 2 0 3 0 2 3 105 0 0 0 1 95 0 1 1 44 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 3 0 2 3 105 0 0 1 1 0 89 0 0 0 1 95 0 1 0 1 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
35 61 51 37 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 353;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,222,o),
(35,228,qs),
(35,298,ls),
(35,317,o),
(45,327,qs),
(83,361,o),
(131,361,qs),
(169,361,o),
(223,340,qs),
(288,314,o),
(316,314,qs),
(369,314,o),
(402,351,qs),
(406,355,o),
(413,352,o),
(413,347,qs),
(413,276,ls),
(413,256,o),
(403,247,qs),
(366,214,o),
(316,214,qs),
(277,214,o),
(224,235,qs),
(159,260,o),
(131,260,qs),
(80,260,o),
(46,224,q),
(43,219,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 41 values pushed */
11 1 2 3 25 1 1 0 2 76 0 2 0 1 2 89 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 34 40 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 447;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,293,o),
(28,323,qs),
(28,353,o),
(66,393,o),
(96,393,qs),
(125,393,o),
(165,353,o),
(165,323,qs),
(165,293,o),
(125,252,o),
(96,252,qs),
(66,252,o)
);
},
{
closed = 1;
nodes = (
(48,220,o),
(61,220,qs),
(142,220,o),
(146,119,qs),
(156,-160,ls),
(156,-173,o),
(143,-173,qs),
(49,-173,ls),
(36,-173,o),
(36,-160,qs),
(48,207,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 0 0 1 97 0 1 1 48 77 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
0 3 0 2 3 2 99 4 1 0 0 1 97 0 1 1 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 21 19 16 13 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,264,o),
(144,189,qs),
(144,113,o),
(202,92,q),
(202,283,l)
);
},
{
closed = 1;
nodes = (
(262,-65,o),
(249,-65,qs),
(215,-65,ls),
(202,-65,o),
(202,-52,qs),
(202,-10,l),
(129,-6,o),
(83,41,qs),
(29,96,o),
(29,192,qs),
(29,273,o),
(71,325,qs),
(118,384,o),
(202,392,q),
(202,444,ls),
(202,457,o),
(215,457,qs),
(249,457,ls),
(262,457,o),
(262,444,qs),
(262,390,l),
(282,386,o),
(299,381,qs),
(355,361,o),
(338,296,qs),
(333,275,ls),
(331,265,o),
(324,265,qs),
(319,265,o),
(313,268,qs),
(283,283,o),
(262,287,q),
(262,86,l),
(294,91,o),
(327,111,qs),
(336,117,o),
(341,117,qs),
(352,117,o),
(352,101,qs),
(352,65,o),
(302,6,o),
(262,-4,q),
(262,-52,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
33 26 15 4 4 1 2 14 5 0 3 3 0 2 76 0 1 2 0 2 1 0 128 0 0 3 2 0 3 126 0 2 0 4 2 4 101 0 3 3 46 3 78 50 25 56 40 25 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(435,106,o),
(435,40,qs),
(435,17,ls),
(435,0,o),
(419,0,qs),
(50,0,ls),
(37,0,o),
(37,13,qs),
(37,93,ls),
(37,106,o),
(50,106,qs),
(134,106,l),
(152,156,o),
(152,193,qs),
(152,210,o),
(147,230,q),
(50,230,ls),
(37,230,o),
(37,242,qs),
(37,323,ls),
(37,336,o),
(50,336,qs),
(104,336,l),
(87,375,o),
(87,406,qs),
(87,480,o),
(134,522,qs),
(184,566,o),
(277,566,qs),
(332,566,o),
(384,547,qs),
(418,533,o),
(438,494,o),
(428,461,qs),
(420,436,ls),
(417,427,o),
(410,427,qs),
(405,427,o),
(395,432,qs),
(336,463,o),
(278,463,qs),
(244,463,o),
(206,429,o),
(206,400,qs),
(206,377,o),
(223,336,q),
(316,336,ls),
(386,336,o),
(386,269,qs),
(386,246,ls),
(386,230,o),
(370,230,qs),
(261,230,l),
(265,214,o),
(265,193,qs),
(265,151,o),
(247,106,q),
(365,106,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 39 77 10 9 2 7 7 8 95 0 8 8 40 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 40 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 57 0 56 51 36 35 37 38 34 36 35 36 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 467;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,120,o),
(54,133,qs),
(54,189,ls),
(54,202,o),
(67,202,qs),
(199,202,l),
(199,203,l),
(173,251,l),
(67,251,ls),
(54,251,o),
(54,264,qs),
(54,320,ls),
(54,333,o),
(67,333,qs),
(130,333,l),
(19,543,ls),
(13,556,o),
(27,556,qs),
(76,556,ls),
(112,556,o),
(158,528,o),
(175,495,qs),
(262,322,l),
(374,543,l),
(379,556,o),
(394,556,qs),
(490,556,ls),
(504,556,o),
(498,543,qs),
(387,333,l),
(448,333,ls),
(461,333,o),
(461,320,qs),
(461,264,ls),
(461,251,o),
(448,251,qs),
(344,251,l),
(317,202,l),
(448,202,ls),
(461,202,o),
(461,189,qs),
(461,133,ls),
(461,120,o),
(448,120,qs),
(316,120,l),
(316,13,ls),
(316,0,o),
(303,0,qs),
(212,0,ls),
(199,0,o),
(199,13,qs),
(199,120,l),
(67,120,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
29 1 3 4 1 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 52 0 51 48 45 35 34 53 50 35 33 35 34 50 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 509;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,566,o),
(63,566,qs),
(150,566,o),
(150,469,qs),
(150,264,ls),
(150,251,o),
(137,251,qs),
(63,251,ls),
(50,251,o),
(50,264,qs),
(50,554,ls)
);
},
{
closed = 1;
nodes = (
(50,166,o),
(63,166,qs),
(137,166,ls),
(150,166,o),
(150,153,qs),
(150,-136,ls),
(150,-149,o),
(137,-149,qs),
(63,-149,ls),
(50,-149,o),
(50,-136,qs),
(50,153,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 1 97 0 1 1 39 77 0 3 3 2 95 0 2 2 44 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 99 0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
51 51 35 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,40,qs),
(390,-17,o),
(354,-53,qs),
(309,-99,o),
(220,-99,qs),
(143,-99,o),
(93,-63,qs),
(43,-26,o),
(63,29,qs),
(68,43,ls),
(69,47,o),
(78,48,o),
(82,45,q),
(137,-16,o),
(208,-16,qs),
(271,-16,o),
(271,27,qs),
(271,45,o),
(238,75,o),
(193,97,qs),
(131,128,o),
(108,145,qs),
(51,187,o),
(51,245,qs),
(51,307,o),
(115,353,q),
(81,390,o),
(81,441,qs),
(81,495,o),
(121,529,qs),
(166,566,o),
(238,566,qs),
(295,566,o),
(333,548,qs),
(384,523,o),
(364,462,qs),
(362,456,ls),
(359,448,o),
(353,448,qs),
(350,448,o),
(345,452,qs),
(342,454,o),
(340,455,qs),
(299,484,o),
(253,484,qs),
(229,484,o),
(200,462,o),
(200,444,qs),
(200,427,o),
(232,398,o),
(275,378,qs),
(336,349,o),
(358,334,qs),
(413,295,o),
(413,240,qs),
(413,169,o),
(350,122,q),
(390,88,o)
);
},
{
closed = 1;
nodes = (
(299,225,qs),
(299,242,o),
(269,268,o),
(229,286,qs),
(194,301,o),
(184,306,q),
(161,285,o),
(161,259,qs),
(161,238,o),
(198,205,o),
(251,180,qs),
(267,172,o),
(274,169,q),
(299,192,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
65 31 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 0 3 0 1 3 128 0 3 0 4 3 4 101 0 0 0 2 97 0 2 2 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 4 4 3 89 0 3 3 4 97 0 4 3 4 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 47 37 36 43 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,546,o),
(64,546,qs),
(90,546,o),
(125,509,o),
(125,481,qs),
(125,454,o),
(90,417,o),
(64,417,qs),
(36,417,o),
(0,454,o),
(0,481,qs),
(0,508,o)
);
},
{
closed = 1;
nodes = (
(213,546,o),
(240,546,qs),
(266,546,o),
(301,508,o),
(301,481,qs),
(301,454,o),
(266,417,o),
(240,417,qs),
(212,417,o),
(176,454,o),
(176,481,qs),
(176,508,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 301;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,494,qs),
(139,563,o),
(247,563,qs),
(340,563,o),
(401,510,qs),
(470,448,o),
(470,340,qs),
(470,246,o),
(416,186,qs),
(354,117,o),
(247,117,qs),
(153,117,o),
(93,171,qs),
(24,232,o),
(24,340,qs),
(24,434,o)
);
},
{
closed = 1;
nodes = (
(363,211,qs),
(416,258,o),
(416,340,qs),
(416,411,o),
(375,457,qs),
(328,510,o),
(247,510,qs),
(176,510,o),
(131,469,qs),
(79,422,o),
(79,340,qs),
(79,268,o),
(119,223,qs),
(165,170,o),
(247,170,qs),
(318,170,o)
);
},
{
closed = 1;
nodes = (
(329,302,qs),
(336,302,o),
(336,291,qs),
(336,262,o),
(285,223,o),
(249,223,qs),
(203,223,o),
(173,251,qs),
(139,284,o),
(139,340,qs),
(139,390,o),
(171,424,qs),
(205,461,o),
(259,461,qs),
(285,461,o),
(311,451,qs),
(333,442,o),
(328,415,qs),
(325,400,ls),
(323,390,o),
(312,396,qs),
(286,409,o),
(261,409,qs),
(232,409,o),
(198,372,o),
(198,340,qs),
(198,310,o),
(233,274,o),
(263,274,qs),
(291,274,o),
(321,298,qs),
(325,302,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 73 values pushed */
0 8 5 4 5 8 4 128 0 1 0 3 6 1 3 105 0 6 0 5 8 6 5 105 0 4 0 7 2 4 7 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 17 16 62 61 58 56 50 48 41 39 35 33 25 23 16 31 17 31 38 35 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 494;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,247,qs),
(95,247,o),
(56,289,qs),
(15,333,o),
(15,407,qs),
(15,471,o),
(49,514,qs),
(90,565,o),
(161,565,qs),
(226,565,o),
(263,526,q),
(281,556,o),
(335,556,qs),
(340,556,ls),
(350,556,o),
(350,546,qs),
(350,264,ls),
(350,254,o),
(341,254,qs),
(262,254,ls),
(254,254,o),
(254,264,qs),
(254,288,l),
(219,247,o)
);
},
{
closed = 1;
nodes = (
(254,372,o),
(254,406,qs),
(254,478,o),
(185,478,qs),
(114,478,o),
(114,406,qs),
(114,372,o),
(152,332,o),
(185,332,qs),
(217,332,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
12 1 5 1 0 1 0 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 30 28 24 33 25 33 38 34 51 50 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 370;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,45,o),
(235,37,o),
(230,37,qs),
(157,37,ls),
(138,37,o),
(129,50,qs),
(28,182,ls),
(21,191,o),
(21,196,qs),
(21,201,o),
(28,210,qs),
(129,342,ls),
(138,355,o),
(157,355,qs),
(230,355,ls),
(235,355,o),
(239,346,o),
(236,342,qs),
(125,196,l),
(236,50,l)
);
},
{
closed = 1;
nodes = (
(418,45,o),
(414,37,o),
(409,37,qs),
(336,37,ls),
(317,37,o),
(308,50,qs),
(207,182,ls),
(200,191,o),
(200,196,qs),
(200,201,o),
(207,210,qs),
(308,342,ls),
(317,355,o),
(336,355,qs),
(409,355,ls),
(414,355,o),
(418,346,o),
(415,342,qs),
(304,196,l),
(415,50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 3 1 1 0 1 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,162,qs),
(30,244,ls),
(30,257,o),
(43,257,qs),
(252,257,ls),
(265,257,o),
(265,244,qs),
(265,162,ls),
(265,149,o),
(252,149,qs),
(43,149,ls),
(30,149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 294;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,348,o),
(298,381,qs),
(298,411,o),
(260,411,qs),
(215,411,l),
(215,348,l),
(260,348,ls)
);
},
{
closed = 1;
nodes = (
(77,494,qs),
(139,563,o),
(247,563,qs),
(340,563,o),
(401,510,qs),
(470,448,o),
(470,340,qs),
(470,246,o),
(416,186,qs),
(354,117,o),
(247,117,qs),
(153,117,o),
(93,171,qs),
(24,232,o),
(24,340,qs),
(24,434,o)
);
},
{
closed = 1;
nodes = (
(363,211,qs),
(416,258,o),
(416,340,qs),
(416,411,o),
(375,457,qs),
(328,510,o),
(247,510,qs),
(176,510,o),
(131,469,qs),
(79,422,o),
(79,340,qs),
(79,268,o),
(119,223,qs),
(165,170,o),
(247,170,qs),
(318,170,o)
);
},
{
closed = 1;
nodes = (
(215,228,o),
(208,228,qs),
(169,228,ls),
(162,228,o),
(162,236,qs),
(162,448,ls),
(162,456,o),
(169,456,qs),
(255,456,ls),
(351,456,o),
(351,381,qs),
(351,328,o),
(301,309,q),
(350,236,ls),
(356,228,o),
(347,228,qs),
(303,228,ls),
(293,228,o),
(289,236,qs),
(250,303,l),
(215,303,l),
(215,236,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 88 values pushed */
47 1 6 1 1 76 9 1 7 6 4 6 7 4 128 0 3 0 5 8 3 5 105 0 8 0 0 1 8 0 105 10 1 1 0 6 7 1 6 103 11 1 4 2 2 4 89 11 1 4 4 2 97 0 2 4 2 81 24 23 0 0 59 56 53 50 45 42 40 39 32 30 23 38 24 38 20 18 12 10 0 6 0 5 33 12 9 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 494;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,443,qs),
(0,500,ls),
(0,513,o),
(13,513,qs),
(263,513,ls),
(276,513,o),
(276,500,qs),
(276,443,ls),
(276,430,o),
(263,430,qs),
(13,430,ls),
(0,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 276;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,395,qs),
(19,426,o),
(19,475,qs),
(19,518,o),
(45,547,qs),
(75,581,o),
(125,581,qs),
(169,581,o),
(199,555,qs),
(232,525,o),
(232,475,qs),
(232,432,o),
(206,403,qs),
(176,369,o),
(125,369,qs),
(81,369,o)
);
},
{
closed = 1;
nodes = (
(167,454,o),
(167,475,qs),
(167,495,o),
(144,521,o),
(125,521,qs),
(107,521,o),
(84,495,o),
(84,475,qs),
(84,454,o),
(107,428,o),
(125,428,qs),
(144,428,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 250;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,299,o),
(30,312,qs),
(30,382,ls),
(30,395,o),
(43,395,qs),
(165,395,l),
(165,526,ls),
(165,539,o),
(178,539,qs),
(226,539,o),
(267,501,o),
(267,455,qs),
(267,395,l),
(389,395,ls),
(402,395,o),
(402,382,qs),
(402,312,ls),
(402,299,o),
(389,299,qs),
(267,299,l),
(267,168,ls),
(267,155,o),
(254,155,qs),
(178,155,ls),
(165,155,o),
(165,168,qs),
(165,299,l),
(43,299,ls)
);
},
{
closed = 1;
nodes = (
(30,95,o),
(43,95,qs),
(332,95,ls),
(402,95,o),
(402,29,qs),
(402,13,ls),
(402,0,o),
(389,0,qs),
(43,0,ls),
(30,0,o),
(30,13,qs),
(30,82,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 3 97 0 3 3 39 77 0 7 7 6 95 0 6 6 40 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 0 7 3 0 103 8 5 2 1 1 2 95 4 1 2 2 42 77 0 7 7 6 95 0 6 6 40 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 103 0 7 7 6 95 0 6 6 40 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 38 35 32 29 0 27 0 26 34 35 35 34 50 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,297,o),
(293,258,qs),
(293,233,ls),
(293,223,o),
(283,223,qs),
(36,223,ls),
(27,223,o),
(27,233,qs),
(27,291,o),
(56,330,qs),
(76,357,o),
(118,383,qs),
(161,409,o),
(163,410,qs),
(192,431,o),
(192,456,qs),
(192,491,o),
(147,491,qs),
(115,491,o),
(68,467,qs),
(55,460,o),
(50,471,qs),
(39,498,ls),
(25,532,o),
(67,550,qs),
(106,566,o),
(153,566,qs),
(205,566,o),
(240,546,qs),
(286,520,o),
(286,470,qs),
(286,430,o),
(263,398,qs),
(244,372,o),
(199,344,qs),
(147,311,o),
(142,297,q),
(250,297,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 37 0 36 58 39 41 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 316;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,318,qs),
(289,274,o),
(260,247,qs),
(225,216,o),
(159,216,qs),
(105,216,o),
(30,273,o),
(30,314,qs),
(30,329,o),
(41,329,qs),
(46,329,o),
(52,324,qs),
(92,289,o),
(146,289,qs),
(206,289,o),
(206,327,qs),
(206,356,o),
(156,356,qs),
(125,356,ls),
(85,356,o),
(85,390,qs),
(85,418,ls),
(85,430,o),
(95,430,qs),
(145,430,ls),
(194,430,o),
(194,465,qs),
(194,493,o),
(147,493,qs),
(111,493,o),
(70,472,qs),
(56,464,o),
(51,475,qs),
(41,499,ls),
(26,536,o),
(69,552,qs),
(107,566,o),
(152,566,qs),
(277,566,o),
(277,478,qs),
(277,429,o),
(228,400,q),
(289,378,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 58 6 78 35 34 34 51 50 39 35 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 311;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,441,o),
(4,445,qs),
(95,528,ls),
(109,540,o),
(125,540,qs),
(217,540,ls),
(223,540,o),
(227,528,o),
(222,524,qs),
(124,442,ls),
(111,430,o),
(88,430,qs),
(10,430,ls),
(4,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 133 2 1 0 0 118 2 0 9 6 0 13 2 13 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 225;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,221,o),
(83,263,qs),
(29,310,o),
(29,391,qs),
(29,462,o),
(68,504,qs),
(116,556,o),
(220,556,qs),
(290,556,ls),
(341,556,o),
(387,509,o),
(387,458,qs),
(387,12,ls),
(387,0,o),
(375,0,qs),
(334,0,ls),
(322,0,o),
(322,12,qs),
(322,485,l),
(274,485,l),
(274,12,ls),
(274,0,o),
(263,0,qs),
(222,0,ls),
(210,0,o),
(210,12,qs),
(210,221,l),
(206,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 39 77 2 1 0 0 40 0 78 22 52 50 18 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,350,o),
(90,350,qs),
(119,350,o),
(157,310,o),
(157,279,qs),
(157,249,o),
(119,210,o),
(90,210,qs),
(60,210,o),
(20,249,o),
(20,279,qs),
(20,309,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 177;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,-104,qs),
(72,-7,ls),
(79,5,o),
(101,5,qs),
(158,5,ls),
(170,5,o),
(165,-7,qs),
(119,-102,ls),
(111,-119,o),
(88,-119,qs),
(15,-119,ls),
(0,-119,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 160;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,446,o),
(35,457,qs),
(35,520,ls),
(35,534,o),
(50,540,qs),
(80,550,ls),
(96,556,o),
(113,556,qs),
(148,556,ls),
(192,556,o),
(192,516,qs),
(192,234,ls),
(192,223,o),
(181,223,qs),
(111,223,ls),
(100,223,o),
(100,234,qs),
(100,467,l),
(48,449,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
0 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 55 77 0 0 0 56 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 133 0 0 0 56 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
51 50 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 237;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,405,qs),
(250,441,o),
(214,480,o),
(182,480,qs),
(150,480,o),
(114,441,o),
(114,405,qs),
(114,333,o),
(181,333,qs),
(250,333,o)
);
},
{
closed = 1;
nodes = (
(54,516,qs),
(99,565,o),
(181,565,qs),
(253,565,o),
(298,527,qs),
(349,484,o),
(349,406,qs),
(349,339,o),
(310,297,qs),
(265,247,o),
(183,247,qs),
(112,247,o),
(67,286,qs),
(15,330,o),
(15,406,qs),
(15,474,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
4 1 0 0 2 0 2 101 0 1 1 3 97 0 3 3 55 1 78 1 0 23 21 15 13 6 4 0 9 1 9 5 10 22 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,346,o),
(203,355,o),
(208,355,qs),
(280,355,ls),
(299,355,o),
(308,342,qs),
(410,210,ls),
(417,201,o),
(417,196,qs),
(417,191,o),
(410,182,qs),
(308,50,ls),
(299,37,o),
(280,37,qs),
(208,37,ls),
(203,37,o),
(199,45,o),
(202,50,qs),
(312,196,l),
(202,342,ls)
);
},
{
closed = 1;
nodes = (
(20,346,o),
(24,355,o),
(29,355,qs),
(101,355,ls),
(120,355,o),
(129,342,qs),
(231,210,ls),
(238,201,o),
(238,196,qs),
(238,191,o),
(231,182,qs),
(129,50,ls),
(120,37,o),
(101,37,qs),
(29,37,ls),
(24,37,o),
(20,45,o),
(23,50,qs),
(133,196,l),
(23,342,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 2 1 0 1 0 79 40 55 40 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(566,255,l),
(484,136,l),
(566,136,l)
);
},
{
closed = 1;
nodes = (
(35,446,o),
(35,457,qs),
(35,520,ls),
(35,534,o),
(50,540,qs),
(80,550,ls),
(96,556,o),
(113,556,qs),
(148,556,ls),
(192,556,o),
(192,516,qs),
(192,234,ls),
(192,223,o),
(181,223,qs),
(111,223,ls),
(100,223,o),
(100,234,qs),
(100,467,l),
(48,449,l)
);
},
{
closed = 1;
nodes = (
(398,66,o),
(398,77,qs),
(398,118,ls),
(398,128,o),
(404,137,qs),
(528,318,ls),
(539,333,o),
(556,333,qs),
(610,333,ls),
(654,333,o),
(654,293,qs),
(654,136,l),
(670,136,ls),
(714,136,o),
(714,96,qs),
(714,76,ls),
(714,66,o),
(704,66,qs),
(654,66,l),
(654,11,ls),
(654,0,o),
(643,0,qs),
(577,0,ls),
(566,0,o),
(566,11,qs),
(566,66,l),
(409,66,ls)
);
},
{
closed = 1;
nodes = (
(142,13,q),
(433,543,ls),
(440,556,o),
(453,556,qs),
(468,556,ls),
(501,556,o),
(523,513,o),
(506,483,qs),
(250,13,ls),
(242,0,o),
(230,0,qs),
(150,0,ls),
(136,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
3 1 6 2 1 1 1 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 6 2 1 2 6 1 128 12 8 2 3 4 4 3 113 9 1 2 0 1 0 2 1 103 5 10 2 0 4 4 0 89 5 10 2 0 0 4 98 11 7 2 4 0 4 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 6 2 1 2 6 1 128 12 8 2 3 4 3 134 9 1 2 0 1 0 2 1 103 5 10 2 0 4 4 0 89 5 10 2 0 0 4 98 11 7 2 4 0 4 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
51 49 22 22 0 0 58 55 49 61 51 61 22 48 22 47 41 38 36 34 31 29 27 24 14 11 8 5 0 2 0 2 13 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 746;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,446,o),
(35,457,qs),
(35,520,ls),
(35,534,o),
(50,540,qs),
(80,550,ls),
(96,556,o),
(113,556,qs),
(148,556,ls),
(192,556,o),
(192,516,qs),
(192,234,ls),
(192,223,o),
(181,223,qs),
(111,223,ls),
(100,223,o),
(100,234,qs),
(100,467,l),
(48,449,l)
);
},
{
closed = 1;
nodes = (
(727,75,o),
(727,36,qs),
(727,10,ls),
(727,0,o),
(717,0,qs),
(469,0,ls),
(460,0,o),
(460,10,qs),
(460,68,o),
(489,108,qs),
(509,135,o),
(551,160,qs),
(594,186,o),
(596,188,q),
(625,208,o),
(625,234,qs),
(625,268,o),
(581,268,qs),
(545,268,o),
(501,244,qs),
(488,237,o),
(483,248,qs),
(472,275,ls),
(459,309,o),
(500,327,qs),
(539,344,o),
(587,344,qs),
(638,344,o),
(674,323,qs),
(720,297,o),
(720,247,qs),
(720,207,o),
(697,176,qs),
(678,150,o),
(633,121,qs),
(581,89,o),
(576,75,q),
(683,75,ls)
);
},
{
closed = 1;
nodes = (
(142,13,q),
(433,543,ls),
(440,556,o),
(453,556,qs),
(468,556,ls),
(501,556,o),
(523,513,o),
(506,483,qs),
(250,13,ls),
(242,0,o),
(230,0,qs),
(150,0,ls),
(136,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 68 values pushed */
0 1 2 1 1 76 0 2 0 3 0 2 3 105 7 1 1 0 0 5 1 0 103 8 1 5 4 4 5 87 8 1 5 5 4 96 9 6 2 4 5 4 80 59 57 19 19 66 63 57 69 59 69 19 56 19 55 52 49 39 37 30 28 51 50 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 778;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(289,318,qs),
(289,274,o),
(260,247,qs),
(225,216,o),
(159,216,qs),
(105,216,o),
(30,273,o),
(30,314,qs),
(30,329,o),
(41,329,qs),
(46,329,o),
(52,324,qs),
(92,289,o),
(146,289,qs),
(206,289,o),
(206,327,qs),
(206,356,o),
(156,356,qs),
(125,356,ls),
(85,356,o),
(85,390,qs),
(85,418,ls),
(85,430,o),
(95,430,qs),
(145,430,ls),
(194,430,o),
(194,465,qs),
(194,493,o),
(147,493,qs),
(111,493,o),
(70,472,qs),
(56,464,o),
(51,475,qs),
(41,499,ls),
(26,536,o),
(69,552,qs),
(107,566,o),
(152,566,qs),
(277,566,o),
(277,478,qs),
(277,429,o),
(228,400,q),
(289,378,o)
);
},
{
closed = 1;
nodes = (
(627,255,l),
(546,136,l),
(627,136,l)
);
},
{
closed = 1;
nodes = (
(459,66,o),
(459,77,qs),
(459,118,ls),
(459,128,o),
(465,137,qs),
(590,318,ls),
(601,333,o),
(617,333,qs),
(672,333,ls),
(716,333,o),
(716,293,qs),
(716,136,l),
(732,136,ls),
(775,136,o),
(775,96,qs),
(775,76,ls),
(775,66,o),
(765,66,qs),
(716,66,l),
(716,11,ls),
(716,0,o),
(705,0,qs),
(638,0,ls),
(627,0,o),
(627,11,qs),
(627,66,l),
(470,66,ls)
);
},
{
closed = 1;
nodes = (
(203,13,qs),
(493,543,ls),
(500,556,o),
(514,556,qs),
(529,556,ls),
(562,556,o),
(584,513,o),
(567,483,qs),
(310,13,ls),
(303,0,o),
(290,0,qs),
(211,0,ls),
(196,0,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
44 1 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
11 1 5 3 4 3 5 4 128 17 13 2 8 9 9 8 113 14 1 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 7 4 6 105 10 15 2 7 9 9 7 89 10 15 2 7 7 9 98 16 12 2 9 7 9 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
11 1 5 3 4 3 5 4 128 17 13 2 8 9 8 134 14 1 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 7 4 6 105 10 15 2 7 9 9 7 89 10 15 2 7 7 9 98 16 12 2 9 7 9 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 14 0 1 0 14 1 128 11 1 5 3 4 3 5 4 128 17 13 2 8 9 8 134 0 0 0 1 2 0 1 105 0 2 0 3 5 2 3 105 0 4 0 6 7 4 6 105 10 15 2 7 9 9 7 89 10 15 2 7 7 9 98 16 12 2 9 7 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 14 0 1 0 14 1 128 0 11 3 5 3 11 5 128 0 5 4 3 5 4 126 17 13 2 8 9 8 134 0 0 0 1 2 0 1 105 0 2 0 3 11 2 3 105 0 4 0 6 7 4 6 105 10 15 2 7 9 9 7 89 10 15 2 7 7 9 98 16 12 2 9 7 9 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
75 73 46 46 43 43 82 79 73 85 75 85 46 72 46 71 65 62 60 58 55 53 51 48 43 45 43 45 35 34 34 51 50 39 35 18 9 29 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 804;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(144,293,o),
(144,323,qs),
(144,353,o),
(182,393,o),
(212,393,qs),
(242,393,o),
(281,353,o),
(281,323,qs),
(281,293,o),
(241,252,o),
(212,252,qs),
(183,252,o)
);
},
{
closed = 1;
nodes = (
(42,64,qs),
(70,104,o),
(148,161,qs),
(166,174,o),
(166,193,qs),
(166,207,ls),
(166,220,o),
(179,220,qs),
(203,220,ls),
(227,220,o),
(261,189,o),
(261,167,qs),
(261,125,o),
(202,77,qs),
(157,40,o),
(130,5,o),
(130,-20,qs),
(130,-79,o),
(203,-79,qs),
(260,-79,o),
(333,-43,qs),
(340,-39,o),
(346,-39,qs),
(353,-39,o),
(356,-48,qs),
(377,-115,ls),
(382,-131,o),
(368,-139,qs),
(286,-184,o),
(200,-184,qs),
(121,-184,o),
(71,-152,qs),
(9,-114,o),
(9,-40,qs),
(9,18,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
30 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 6 1 0 0 1 97 0 1 1 48 77 0 4 4 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 39 36 28 26 23 22 17 15 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 350;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(143,699,o),
(150,699,qs),
(242,699,ls),
(258,699,o),
(271,687,qs),
(363,604,ls),
(367,600,o),
(363,589,o),
(357,589,qs),
(278,589,ls),
(256,589,o),
(243,601,qs),
(145,683,ls),
(140,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(159,600,o),
(163,604,qs),
(254,687,ls),
(268,699,o),
(284,699,qs),
(376,699,ls),
(382,699,o),
(386,687,o),
(381,683,qs),
(283,601,ls),
(270,589,o),
(248,589,qs),
(169,589,ls),
(163,589,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
1 1 0 3 1 76 0 6 5 6 133 8 1 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 26 24 0 0 33 30 24 37 26 37 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(212,589,o),
(189,589,qs),
(119,589,ls),
(113,589,o),
(109,600,o),
(113,604,qs),
(193,687,ls),
(204,699,o),
(223,699,qs),
(317,699,ls),
(335,699,o),
(347,687,qs),
(426,604,ls),
(430,600,o),
(426,589,o),
(420,589,qs),
(351,589,ls),
(328,589,o),
(317,603,qs),
(270,659,l),
(223,603,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
1 1 0 3 1 76 0 6 7 1 5 3 6 5 103 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 43 40 36 33 28 26 22 19 16 13 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(104,600,qs),
(111,701,o),
(183,701,qs),
(211,701,o),
(257,683,qs),
(294,668,o),
(310,668,qs),
(328,668,o),
(332,692,qs),
(333,704,o),
(345,704,qs),
(393,704,ls),
(405,704,o),
(404,691,qs),
(398,637,o),
(359,593,o),
(318,593,qs),
(295,593,o),
(250,610,qs),
(213,623,o),
(200,623,qs),
(180,623,o),
(176,599,qs),
(174,587,o),
(163,587,qs),
(115,587,ls),
(104,587,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 9 5 5 6 114 10 1 8 9 5 8 90 0 9 7 12 2 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 9 5 9 6 5 128 10 1 8 9 5 8 90 0 9 7 12 2 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 6 9 7 9 6 7 128 0 9 0 7 5 9 7 106 10 1 8 12 1 5 3 8 5 105 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
26 24 0 0 48 46 44 42 40 37 34 32 30 28 24 50 26 50 22 19 16 13 9 6 4 3 0 2 0 2 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(147,705,o),
(174,705,qs),
(200,705,o),
(236,667,o),
(236,640,qs),
(236,613,o),
(200,576,o),
(174,576,qs),
(147,576,o),
(110,613,o),
(110,640,qs),
(110,667,o)
);
},
{
closed = 1;
nodes = (
(323,705,o),
(350,705,qs),
(376,705,o),
(411,668,o),
(411,640,qs),
(411,613,o),
(376,576,o),
(350,576,qs),
(323,576,o),
(286,613,o),
(286,640,qs),
(286,667,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 46 44 40 38 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,415,l),
(202,228,l),
(327,228,l)
);
},
{
closed = 1;
nodes = (
(124,0,o),
(113,0,qs),
(19,0,ls),
(6,0,o),
(10,13,qs),
(196,545,ls),
(200,556,o),
(211,556,qs),
(255,556,ls),
(299,556,o),
(344,518,o),
(363,466,qs),
(525,13,ls),
(529,0,o),
(515,0,qs),
(419,0,ls),
(404,0,o),
(400,13,qs),
(361,128,l),
(167,128,l),
(128,13,ls)
);
},
{
closed = 1;
nodes = (
(225,737,o),
(258,737,qs),
(292,737,o),
(339,690,o),
(339,657,qs),
(339,623,o),
(292,576,o),
(258,576,qs),
(225,576,o),
(177,624,o),
(177,657,qs),
(177,690,o)
);
},
{
closed = 1;
nodes = (
(291,643,o),
(291,657,qs),
(291,671,o),
(272,691,o),
(258,691,qs),
(244,691,o),
(226,671,o),
(226,657,qs),
(226,643,o),
(244,623,o),
(258,623,qs),
(272,623,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
1 1 0 3 1 76 0 6 0 8 7 6 8 105 10 1 7 0 5 3 7 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 37 36 0 0 43 41 36 47 37 47 34 32 28 26 22 19 16 13 9 6 4 3 0 2 0 2 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,447,l),
(246,228,l),
(360,228,l)
);
},
{
closed = 1;
nodes = (
(129,0,o),
(113,0,qs),
(17,0,ls),
(2,0,o),
(9,13,qs),
(294,543,ls),
(301,556,o),
(317,556,qs),
(632,556,ls),
(702,556,o),
(702,489,qs),
(702,464,ls),
(702,447,o),
(686,447,qs),
(477,447,l),
(477,334,l),
(612,334,ls),
(682,334,o),
(682,267,qs),
(682,242,ls),
(682,226,o),
(666,226,qs),
(477,226,l),
(477,108,l),
(640,108,ls),
(710,108,o),
(710,42,qs),
(710,17,ls),
(710,0,o),
(694,0,qs),
(373,0,ls),
(360,0,o),
(360,13,qs),
(360,128,l),
(195,128,l),
(135,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
1 1 6 1 75 0 5 0 4 1 5 4 103 9 1 0 0 1 3 0 1 103 0 6 6 7 95 0 7 7 39 77 0 3 3 2 95 8 1 2 2 40 2 78 0 0 37 34 31 28 25 23 22 20 17 15 14 12 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 727;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,-119,o),
(281,-119,qs),
(208,-119,ls),
(193,-119,o),
(202,-104,qs),
(264,-8,l),
(167,3,o),
(108,69,qs),
(39,146,o),
(39,275,qs),
(39,400,o),
(106,478,qs),
(180,566,o),
(307,566,qs),
(377,566,o),
(434,544,qs),
(465,531,o),
(484,492,o),
(476,457,qs),
(469,428,ls),
(466,415,o),
(456,415,qs),
(450,415,o),
(440,420,qs),
(399,440,o),
(347,454,o),
(311,454,qs),
(247,454,o),
(208,417,qs),
(160,370,o),
(160,275,qs),
(160,196,o),
(199,150,qs),
(241,101,o),
(316,101,qs),
(395,101,o),
(459,160,qs),
(468,169,o),
(477,169,qs),
(495,169,o),
(495,142,qs),
(495,105,o),
(469,67,qs),
(431,12,o),
(359,-4,q),
(312,-102,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 5 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 4 0 2 3 4 2 105 0 1 5 5 1 89 0 1 1 5 95 0 5 1 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
57 38 35 38 34 37 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 520;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,108,o),
(401,42,qs),
(401,17,ls),
(401,0,o),
(385,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,334,l),
(303,334,ls),
(373,334,o),
(373,267,qs),
(373,242,ls),
(373,226,o),
(357,226,qs),
(168,226,l),
(168,108,l),
(331,108,ls)
);
},
{
closed = 1;
nodes = (
(82,699,o),
(89,699,qs),
(180,699,ls),
(197,699,o),
(210,687,qs),
(301,604,ls),
(306,600,o),
(301,589,o),
(295,589,qs),
(217,589,ls),
(194,589,o),
(181,601,qs),
(84,683,ls),
(79,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 96 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 40 37 32 30 0 27 0 26 51 51 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,108,o),
(401,42,qs),
(401,17,ls),
(401,0,o),
(385,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,334,l),
(303,334,ls),
(373,334,o),
(373,267,qs),
(373,242,ls),
(373,226,o),
(357,226,qs),
(168,226,l),
(168,108,l),
(331,108,ls)
);
},
{
closed = 1;
nodes = (
(117,600,o),
(122,604,qs),
(213,687,ls),
(226,699,o),
(243,699,qs),
(334,699,ls),
(341,699,o),
(344,687,o),
(339,683,qs),
(242,601,ls),
(229,589,o),
(206,589,qs),
(128,589,ls),
(122,589,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 7 6 7 133 9 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 96 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 30 28 0 0 37 34 28 41 30 41 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,108,o),
(401,42,qs),
(401,17,ls),
(401,0,o),
(385,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,334,l),
(303,334,ls),
(373,334,o),
(373,267,qs),
(373,242,ls),
(373,226,o),
(357,226,qs),
(168,226,l),
(168,108,l),
(331,108,ls)
);
},
{
closed = 1;
nodes = (
(154,589,o),
(131,589,qs),
(62,589,ls),
(56,589,o),
(52,600,o),
(56,604,qs),
(135,687,ls),
(146,699,o),
(165,699,qs),
(260,699,ls),
(278,699,o),
(290,687,qs),
(369,604,ls),
(373,600,o),
(369,589,o),
(363,589,qs),
(293,589,ls),
(271,589,o),
(260,603,qs),
(213,659,l),
(165,603,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 7 8 1 6 3 7 6 103 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 47 44 40 37 32 30 0 27 0 26 51 51 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,108,o),
(401,42,qs),
(401,17,ls),
(401,0,o),
(385,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(323,556,ls),
(393,556,o),
(393,489,qs),
(393,464,ls),
(393,447,o),
(377,447,qs),
(168,447,l),
(168,334,l),
(303,334,ls),
(373,334,o),
(373,267,qs),
(373,242,ls),
(373,226,o),
(357,226,qs),
(168,226,l),
(168,108,l),
(331,108,ls)
);
},
{
closed = 1;
nodes = (
(104,705,o),
(131,705,qs),
(158,705,o),
(193,667,o),
(193,640,qs),
(193,613,o),
(158,576,o),
(131,576,qs),
(104,576,o),
(68,613,o),
(68,640,qs),
(68,667,o)
);
},
{
closed = 1;
nodes = (
(280,705,o),
(307,705,qs),
(334,705,o),
(369,668,o),
(369,640,qs),
(369,613,o),
(334,576,o),
(307,576,qs),
(280,576,o),
(244,613,o),
(244,640,qs),
(244,667,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 50 48 44 42 38 36 32 30 0 27 0 26 51 51 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,556,o),
(63,556,qs),
(73,556,ls),
(122,556,o),
(167,508,o),
(167,455,qs),
(167,13,ls),
(167,0,o),
(154,0,qs),
(63,0,ls),
(50,0,o),
(50,13,qs),
(50,543,ls)
);
},
{
closed = 1;
nodes = (
(-2,699,o),
(5,699,qs),
(96,699,ls),
(113,699,o),
(126,687,qs),
(218,604,ls),
(222,600,o),
(218,589,o),
(212,589,qs),
(133,589,ls),
(111,589,o),
(97,601,qs),
(0,683,ls),
(-5,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 0 0 0 40 0 78 53 36 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,556,o),
(64,556,qs),
(74,556,ls),
(123,556,o),
(168,508,o),
(168,455,qs),
(168,13,ls),
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls)
);
},
{
closed = 1;
nodes = (
(-5,600,o),
(-1,604,qs),
(90,687,ls),
(104,699,o),
(120,699,qs),
(212,699,ls),
(218,699,o),
(222,687,o),
(217,683,qs),
(119,601,ls),
(106,589,o),
(83,589,qs),
(5,589,ls),
(-1,589,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 2 3 133 4 1 2 1 2 133 0 1 1 39 77 0 0 0 40 0 78 15 13 22 19 13 26 15 26 52 49 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,556,o),
(62,556,qs),
(72,556,ls),
(122,556,o),
(167,508,o),
(167,455,qs),
(167,13,ls),
(167,0,o),
(154,0,qs),
(62,0,ls),
(49,0,o),
(49,13,qs),
(49,543,ls)
);
},
{
closed = 1;
nodes = (
(50,589,o),
(27,589,qs),
(-42,589,ls),
(-48,589,o),
(-52,600,o),
(-48,604,qs),
(31,687,ls),
(42,699,o),
(61,699,qs),
(156,699,ls),
(174,699,o),
(186,687,qs),
(265,604,ls),
(269,600,o),
(265,589,o),
(259,589,qs),
(189,589,ls),
(167,589,o),
(156,603,qs),
(109,659,l),
(61,603,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 39 77 0 0 0 40 0 78 52 53 36 52 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,556,o),
(64,556,qs),
(74,556,ls),
(124,556,o),
(169,508,o),
(169,455,qs),
(169,13,ls),
(169,0,o),
(156,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls)
);
},
{
closed = 1;
nodes = (
(-4,705,o),
(23,705,qs),
(49,705,o),
(84,668,o),
(84,640,qs),
(84,613,o),
(49,576,o),
(23,576,qs),
(-5,576,o),
(-41,613,o),
(-41,640,qs),
(-41,667,o)
);
},
{
closed = 1;
nodes = (
(172,705,o),
(199,705,qs),
(225,705,o),
(260,667,o),
(260,640,qs),
(260,613,o),
(225,576,o),
(199,576,qs),
(171,576,o),
(135,613,o),
(135,640,qs),
(135,667,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 0 0 0 40 0 78 36 36 36 36 52 49 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 219;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,226,o),
(0,239,qs),
(0,321,ls),
(0,334,o),
(13,334,qs),
(60,334,l),
(60,543,ls),
(60,556,o),
(73,556,qs),
(240,556,ls),
(354,556,o),
(427,508,qs),
(530,441,o),
(530,286,qs),
(530,0,o),
(232,0,qs),
(73,0,ls),
(60,0,o),
(60,13,qs),
(60,226,l),
(13,226,ls)
);
},
{
closed = 1;
nodes = (
(316,108,o),
(358,146,qs),
(407,191,o),
(407,282,qs),
(407,447,o),
(240,447,qs),
(177,447,l),
(177,334,l),
(241,334,ls),
(311,334,o),
(311,267,qs),
(311,242,ls),
(311,226,o),
(295,226,qs),
(177,226,l),
(177,108,l),
(243,108,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
5 1 2 4 8 2 3 7 2 3 105 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 21 21 0 0 21 37 21 36 32 30 29 27 24 22 0 20 0 19 34 52 50 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 558;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(104,556,ls),
(137,556,o),
(177,533,o),
(195,504,qs),
(371,218,l),
(371,543,ls),
(371,556,o),
(384,556,qs),
(394,556,ls),
(444,556,o),
(488,508,o),
(488,455,qs),
(488,13,ls),
(488,0,o),
(475,0,qs),
(389,0,ls),
(375,0,o),
(367,13,qs),
(168,336,l),
(168,13,ls)
);
},
{
closed = 1;
nodes = (
(121,600,qs),
(127,701,o),
(199,701,qs),
(227,701,o),
(273,683,qs),
(311,668,o),
(326,668,qs),
(344,668,o),
(348,692,qs),
(350,704,o),
(361,704,qs),
(409,704,ls),
(421,704,o),
(420,691,qs),
(414,637,o),
(376,593,o),
(334,593,qs),
(311,593,o),
(266,610,qs),
(229,623,o),
(216,623,qs),
(196,623,o),
(192,599,qs),
(191,587,o),
(179,587,qs),
(131,587,ls),
(121,587,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
14 0 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 5 8 4 4 5 114 9 1 7 8 4 7 90 0 8 6 10 2 4 1 8 4 106 2 1 1 1 39 77 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 10 2 4 1 8 4 106 2 1 1 1 39 77 3 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 5 8 6 8 5 6 128 0 8 0 6 4 8 6 106 9 1 7 10 1 4 1 7 4 105 2 1 1 1 39 77 3 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
30 28 52 50 48 46 44 41 38 36 34 32 28 54 30 54 51 53 52 50 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(186,699,o),
(193,699,qs),
(284,699,ls),
(301,699,o),
(314,687,qs),
(406,604,ls),
(410,600,o),
(406,589,o),
(400,589,qs),
(321,589,ls),
(299,589,o),
(285,601,qs),
(188,683,ls),
(183,687,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
9 8 1 0 36 33 28 26 17 15 8 23 9 23 5 3 0 7 1 7 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(202,600,o),
(206,604,qs),
(297,687,ls),
(311,699,o),
(327,699,qs),
(419,699,ls),
(425,699,o),
(429,687,o),
(424,683,qs),
(326,601,ls),
(313,589,o),
(290,589,qs),
(212,589,ls),
(206,589,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 8 1 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 8 1 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
26 24 9 8 1 0 33 30 24 37 26 37 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(249,589,o),
(226,589,qs),
(156,589,ls),
(150,589,o),
(146,600,o),
(150,604,qs),
(230,687,ls),
(241,699,o),
(260,699,qs),
(354,699,ls),
(372,699,o),
(384,687,qs),
(463,604,ls),
(467,600,o),
(463,589,o),
(457,589,qs),
(388,589,ls),
(365,589,o),
(354,603,qs),
(307,659,l),
(260,603,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 1 4 3 5 4 103 0 1 1 3 97 0 3 3 39 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 5 6 1 4 3 5 4 103 0 3 0 1 0 3 1 105 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
9 8 1 0 43 40 36 33 28 26 17 15 8 23 9 23 5 3 0 7 1 7 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(151,600,qs),
(157,701,o),
(230,701,qs),
(257,701,o),
(304,683,qs),
(341,668,o),
(357,668,qs),
(375,668,o),
(379,692,qs),
(380,704,o),
(392,704,qs),
(440,704,ls),
(452,704,o),
(450,691,qs),
(445,637,o),
(406,593,o),
(365,593,qs),
(342,593,o),
(297,610,qs),
(260,623,o),
(247,623,qs),
(227,623,o),
(223,599,qs),
(221,587,o),
(210,587,qs),
(162,587,ls),
(151,587,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 8 4 4 5 114 9 1 7 8 4 7 90 0 8 6 12 2 4 3 8 4 106 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 8 4 8 5 4 128 9 1 7 8 4 7 90 0 8 6 12 2 4 3 8 4 106 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 8 6 8 5 6 128 0 8 0 6 4 8 6 106 9 1 7 12 1 4 3 7 4 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 8 6 8 5 6 128 0 8 0 6 4 8 6 106 9 1 7 12 1 4 3 7 4 105 0 3 0 1 0 3 1 105 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
26 24 9 8 1 0 48 46 44 42 40 37 34 32 30 28 24 50 26 50 17 15 8 23 9 23 5 3 0 7 1 7 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,277,qs),
(452,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(452,102,o)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
},
{
closed = 1;
nodes = (
(193,705,o),
(220,705,qs),
(246,705,o),
(281,668,o),
(281,640,qs),
(281,613,o),
(246,576,o),
(220,576,qs),
(193,576,o),
(156,613,o),
(156,640,qs),
(156,667,o)
);
},
{
closed = 1;
nodes = (
(369,705,o),
(396,705,qs),
(422,705,o),
(457,667,o),
(457,640,qs),
(457,613,o),
(422,576,o),
(396,576,qs),
(369,576,o),
(332,613,o),
(332,640,qs),
(332,667,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 39 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 3 5 4 105 0 3 0 1 0 3 1 105 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
9 8 1 0 46 44 40 38 34 32 28 26 17 15 8 23 9 23 5 3 0 7 1 7 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,392,o),
(47,401,qs),
(79,433,o),
(127,431,o),
(161,397,qs),
(220,338,l),
(318,436,ls),
(327,445,o),
(336,436,qs),
(382,392,ls),
(392,383,o),
(382,373,qs),
(283,274,l),
(392,166,ls),
(401,157,o),
(392,147,qs),
(360,115,o),
(313,117,o),
(279,151,qs),
(219,211,l),
(121,112,ls),
(112,103,o),
(103,112,qs),
(58,157,ls),
(49,166,o),
(58,175,qs),
(156,273,l),
(47,383,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
21 14 7 3 0 1 1 76 0 1 0 1 133 0 0 0 118 29 25 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,210,o),
(181,171,q),
(357,447,l)
);
},
{
closed = 1;
nodes = (
(281,102,o),
(306,102,qs),
(452,102,o),
(452,277,qs),
(452,342,o),
(433,382,q),
(259,108,l)
);
},
{
closed = 1;
nodes = (
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(423,566,o),
(494,498,qs),
(574,420,o),
(574,277,qs),
(574,153,o),
(513,78,qs),
(441,-10,o),
(306,-10,qs),
(188,-10,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
13 6 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
15 14 23 21 14 29 15 29 37 35 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,63,qs),
(48,119,o),
(48,207,qs),
(48,543,ls),
(48,556,o),
(61,556,qs),
(71,556,ls),
(121,556,o),
(165,508,o),
(165,455,qs),
(165,231,ls),
(165,100,o),
(264,100,qs),
(365,100,o),
(365,230,qs),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,207,ls),
(482,134,o),
(451,81,qs),
(397,-10,o),
(264,-10,qs),
(146,-10,o)
);
},
{
closed = 1;
nodes = (
(136,699,o),
(142,699,qs),
(234,699,ls),
(250,699,o),
(264,687,qs),
(355,604,ls),
(359,600,o),
(355,589,o),
(349,589,qs),
(271,589,ls),
(248,589,o),
(235,601,qs),
(137,683,ls),
(132,687,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 1 0 39 37 32 30 22 19 15 13 10 7 0 27 1 27 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,63,qs),
(48,119,o),
(48,207,qs),
(48,543,ls),
(48,556,o),
(61,556,qs),
(71,556,ls),
(121,556,o),
(165,508,o),
(165,455,qs),
(165,231,ls),
(165,100,o),
(264,100,qs),
(365,100,o),
(365,230,qs),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,207,ls),
(482,134,o),
(451,81,qs),
(397,-10,o),
(264,-10,qs),
(146,-10,o)
);
},
{
closed = 1;
nodes = (
(151,600,o),
(155,604,qs),
(247,687,ls),
(260,699,o),
(277,699,qs),
(368,699,ls),
(375,699,o),
(378,687,o),
(373,683,qs),
(276,601,ls),
(262,589,o),
(240,589,qs),
(161,589,ls),
(155,589,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 5 4 5 133 7 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 98 6 1 0 0 46 0 78 30 28 1 0 37 34 28 41 30 41 22 19 15 13 10 7 0 27 1 27 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,63,qs),
(48,119,o),
(48,207,qs),
(48,543,ls),
(48,556,o),
(61,556,qs),
(71,556,ls),
(121,556,o),
(165,508,o),
(165,455,qs),
(165,231,ls),
(165,100,o),
(264,100,qs),
(365,100,o),
(365,230,qs),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,207,ls),
(482,134,o),
(451,81,qs),
(397,-10,o),
(264,-10,qs),
(146,-10,o)
);
},
{
closed = 1;
nodes = (
(207,589,o),
(184,589,qs),
(115,589,ls),
(109,589,o),
(104,600,o),
(109,604,q),
(188,687,ls),
(199,699,o),
(218,699,qs),
(312,699,ls),
(330,699,o),
(342,687,qs),
(422,604,l),
(425,600,o),
(421,589,o),
(416,589,qs),
(346,589,ls),
(323,589,o),
(312,603,qs),
(266,659,l),
(218,603,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 5 6 1 4 1 5 4 103 3 1 1 1 39 77 0 2 2 0 98 7 1 0 0 46 0 78 1 0 47 44 40 37 32 30 22 19 15 13 10 7 0 27 1 27 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,63,qs),
(48,119,o),
(48,207,qs),
(48,543,ls),
(48,556,o),
(61,556,qs),
(71,556,ls),
(121,556,o),
(165,508,o),
(165,455,qs),
(165,231,ls),
(165,100,o),
(264,100,qs),
(365,100,o),
(365,230,qs),
(365,543,ls),
(365,556,o),
(378,556,qs),
(388,556,ls),
(438,556,o),
(482,508,o),
(482,455,qs),
(482,207,ls),
(482,134,o),
(451,81,qs),
(397,-10,o),
(264,-10,qs),
(146,-10,o)
);
},
{
closed = 1;
nodes = (
(146,705,o),
(173,705,qs),
(199,705,o),
(235,667,o),
(235,640,qs),
(235,613,o),
(200,576,o),
(173,576,qs),
(146,576,o),
(110,613,o),
(110,640,qs),
(110,667,o)
);
},
{
closed = 1;
nodes = (
(322,705,o),
(349,705,qs),
(375,705,o),
(411,668,o),
(411,640,qs),
(411,613,o),
(376,576,o),
(349,576,qs),
(322,576,o),
(286,613,o),
(286,640,qs),
(286,667,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 98 8 1 0 0 46 0 78 1 0 50 48 44 42 38 36 32 30 22 19 15 13 10 7 0 27 1 27 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,556,o),
(15,556,qs),
(64,556,ls),
(100,556,o),
(146,528,o),
(163,495,qs),
(250,322,l),
(362,543,l),
(367,556,o),
(382,556,qs),
(478,556,ls),
(492,556,o),
(486,543,qs),
(304,200,l),
(304,13,ls),
(304,0,o),
(291,0,qs),
(200,0,ls),
(187,0,o),
(187,13,qs),
(187,203,l),
(7,543,ls)
);
},
{
closed = 1;
nodes = (
(148,600,o),
(152,604,qs),
(244,687,ls),
(257,699,o),
(273,699,qs),
(365,699,ls),
(371,699,o),
(375,687,o),
(370,683,qs),
(272,601,ls),
(259,589,o),
(237,589,qs),
(158,589,ls),
(152,589,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
14 7 0 3 0 1 1 76 5 1 3 4 1 4 3 1 128 2 1 1 1 39 77 0 4 4 0 95 0 0 0 40 0 78 24 22 31 28 22 35 24 35 53 52 50 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,202,o),
(352,281,qs),
(352,317,o),
(308,357,o),
(268,357,qs),
(168,357,l),
(168,202,l),
(268,202,ls)
);
},
{
closed = 1;
nodes = (
(168,0,o),
(155,0,qs),
(64,0,ls),
(51,0,o),
(51,13,qs),
(51,543,ls),
(51,556,o),
(64,556,qs),
(74,556,ls),
(121,556,o),
(166,512,o),
(168,465,q),
(258,465,ls),
(359,465,o),
(413,421,qs),
(469,374,o),
(469,282,qs),
(469,205,o),
(424,154,qs),
(369,93,o),
(274,93,qs),
(168,93,l),
(168,13,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 3 0 0 1 3 0 103 6 1 1 0 2 5 1 2 103 0 4 4 39 77 0 5 5 40 5 78 0 0 29 26 23 20 18 16 10 8 0 7 0 6 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 494;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,79,qs),
(342,79,o),
(342,112,qs),
(342,141,o),
(296,172,qs),
(242,208,o),
(210,251,o),
(210,285,qs),
(210,313,o),
(238,356,qs),
(272,408,o),
(272,427,qs),
(272,446,o),
(239,470,o),
(214,470,qs),
(155,470,o),
(155,398,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,400,ls),
(41,472,o),
(84,517,qs),
(132,566,o),
(215,566,qs),
(300,566,o),
(347,530,qs),
(388,497,o),
(388,451,qs),
(388,418,o),
(351,362,qs),
(321,316,o),
(321,303,qs),
(321,284,o),
(357,261,qs),
(407,229,o),
(422,213,qs),
(457,175,o),
(457,119,qs),
(457,65,o),
(422,30,qs),
(382,-10,o),
(314,-10,qs),
(259,-10,o),
(221,19,qs),
(179,50,o),
(179,94,qs),
(179,115,o),
(192,115,qs),
(194,115,o),
(199,113,q),
(200,112,o),
(200,112,q),
(251,79,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 4 5 4 0 5 128 0 4 4 2 97 0 2 2 39 77 0 5 5 1 97 3 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 4 5 4 0 5 128 0 4 4 2 97 0 2 2 39 77 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 5 4 0 5 128 0 2 0 4 0 2 4 105 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
56 54 42 40 37 34 29 27 36 35 6 9 24 
CALL[ ]	/* CallFunction */";
};
width = 477;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(110,540,o),
(116,540,qs),
(208,540,ls),
(224,540,o),
(238,528,qs),
(329,445,ls),
(333,441,o),
(329,430,o),
(323,430,qs),
(245,430,ls),
(222,430,o),
(209,442,qs),
(111,524,ls),
(106,528,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 7 3 7 6 3 128 0 7 7 39 77 0 1 1 3 97 4 1 3 3 42 77 8 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 6 7 4 7 6 4 128 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 8 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 7 4 7 6 4 128 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 8 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 4 6 133 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 8 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 46 44 39 37 34 32 26 24 22 19 16 13 6 4 0 10 1 10 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(136,441,o),
(140,445,qs),
(232,528,ls),
(245,540,o),
(262,540,qs),
(353,540,ls),
(360,540,o),
(363,528,o),
(358,524,qs),
(261,442,ls),
(247,430,o),
(225,430,qs),
(146,430,ls),
(140,430,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 6 7 3 7 6 3 128 0 7 7 39 77 0 1 1 3 97 4 1 3 3 42 77 8 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 6 7 4 7 6 4 128 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 8 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 1 6 7 4 7 6 4 128 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 8 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 9 1 6 4 6 133 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 8 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
37 35 1 0 44 41 35 48 37 48 34 32 26 24 22 19 16 13 6 4 0 10 1 10 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(178,430,o),
(155,430,qs),
(86,430,ls),
(80,430,o),
(75,441,o),
(80,445,q),
(159,528,ls),
(170,540,o),
(189,540,qs),
(283,540,ls),
(301,540,o),
(313,528,qs),
(393,445,ls),
(397,441,o),
(392,430,o),
(387,430,qs),
(317,430,ls),
(294,430,o),
(283,444,qs),
(237,500,l),
(189,444,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 1 1 3 97 4 1 3 3 42 77 9 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 9 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 1 6 6 7 95 0 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 9 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 8 1 6 4 7 6 103 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 9 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 54 51 47 44 39 37 34 32 26 24 22 19 16 13 6 4 0 10 1 10 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(89,441,qs),
(95,542,o),
(167,542,qs),
(195,542,o),
(241,524,qs),
(279,509,o),
(294,509,qs),
(312,509,o),
(316,533,qs),
(318,545,o),
(329,545,qs),
(377,545,ls),
(389,545,o),
(388,532,qs),
(382,478,o),
(344,434,o),
(302,434,qs),
(280,434,o),
(234,451,qs),
(197,464,o),
(184,464,qs),
(164,464,o),
(160,440,qs),
(159,428,o),
(147,428,qs),
(100,428,ls),
(89,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 10 6 6 7 114 0 10 7 6 10 90 8 13 2 6 6 9 98 11 1 9 9 39 77 0 1 1 3 97 4 1 3 3 42 77 12 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 7 10 6 6 7 114 0 10 7 6 10 90 8 13 2 6 6 9 98 11 1 9 9 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 12 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 7 10 6 6 7 114 0 10 7 6 10 90 8 13 2 6 6 9 98 11 1 9 9 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 12 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 7 10 6 10 7 6 128 0 10 7 6 10 90 8 13 2 6 6 9 98 11 1 9 9 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 12 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 10 8 10 7 8 128 0 10 0 8 6 10 8 106 13 1 6 6 9 98 11 1 9 9 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 12 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 7 10 8 10 7 8 128 0 10 0 8 6 10 8 106 11 1 9 13 1 6 4 9 6 105 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 12 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
37 35 1 0 59 57 55 53 51 48 45 43 41 39 35 61 37 61 34 32 26 24 22 19 16 13 6 4 0 10 1 10 14 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(116,546,o),
(143,546,qs),
(170,546,o),
(205,508,o),
(205,481,qs),
(205,454,o),
(170,417,o),
(143,417,qs),
(116,417,o),
(80,454,o),
(80,481,qs),
(80,508,o)
);
},
{
closed = 1;
nodes = (
(292,546,o),
(319,546,qs),
(345,546,o),
(381,509,o),
(381,481,qs),
(381,454,o),
(346,417,o),
(319,417,qs),
(292,417,o),
(256,454,o),
(256,481,qs),
(256,508,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 1 1 3 97 4 1 3 3 42 77 10 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 10 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
8 1 6 6 7 97 9 1 7 7 39 77 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 10 1 0 0 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 8 1 6 4 7 6 105 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 10 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 57 55 51 49 45 43 39 37 34 32 26 24 22 19 16 13 6 4 0 10 1 10 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(279,394,o),
(325,343,q),
(345,382,o),
(410,382,qs),
(415,382,ls),
(428,382,o),
(428,369,qs),
(428,13,ls),
(428,0,o),
(415,0,qs),
(326,0,ls),
(313,0,o),
(313,13,qs),
(313,43,l),
(271,-9,o)
);
},
{
closed = 1;
nodes = (
(195,578,o),
(229,578,qs),
(262,578,o),
(309,531,o),
(309,498,qs),
(309,464,o),
(262,417,o),
(229,417,qs),
(195,417,o),
(147,465,o),
(147,498,qs),
(147,531,o)
);
},
{
closed = 1;
nodes = (
(262,483,o),
(262,498,qs),
(262,512,o),
(243,532,o),
(229,532,qs),
(215,532,o),
(196,512,o),
(196,498,qs),
(196,484,o),
(215,464,o),
(229,464,qs),
(243,464,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 3 11 1 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 3 8 6 105 0 1 1 3 97 4 1 3 3 42 77 10 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 4 8 6 105 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 10 1 0 0 2 97 5 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 4 8 6 105 0 3 3 42 77 0 1 1 4 97 0 4 4 48 77 0 2 2 40 77 10 1 0 0 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
48 47 1 0 54 52 47 58 48 58 45 43 39 37 34 32 26 24 22 19 16 13 6 4 0 10 1 10 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(424,0,o),
(411,0,qs),
(329,0,ls),
(316,0,o),
(316,13,qs),
(316,43,l),
(274,-9,o),
(201,-9,qs),
(124,-9,o),
(78,44,qs),
(29,99,o),
(29,194,qs),
(29,274,o),
(70,328,qs),
(118,394,o),
(203,394,qs),
(280,394,o),
(326,341,q),
(346,382,o),
(410,382,qs),
(411,382,ls),
(424,382,o),
(424,369,qs),
(424,341,l),
(475,394,o),
(559,394,qs),
(639,394,o),
(686,346,qs),
(734,298,o),
(734,221,qs),
(734,191,o),
(732,167,qs),
(730,152,o),
(713,152,qs),
(485,152,l),
(497,87,o),
(584,87,qs),
(642,87,o),
(697,111,qs),
(709,116,o),
(714,116,qs),
(726,116,o),
(726,101,qs),
(726,65,o),
(697,35,qs),
(654,-9,o),
(568,-9,qs),
(476,-9,o),
(424,45,q),
(424,13,ls)
);
},
{
closed = 1;
nodes = (
(279,113,qs),
(313,136,o),
(313,193,qs),
(313,283,o),
(232,283,qs),
(147,283,o),
(147,193,qs),
(147,149,o),
(193,98,o),
(232,98,qs),
(258,98,o)
);
},
{
closed = 1;
nodes = (
(625,259,o),
(589,296,o),
(559,296,qs),
(489,296,o),
(486,232,q),
(620,232,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 10 4 43 0 2 0 2 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 11 5 43 0 2 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
31 25 2 11 5 43 0 2 8 2 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 9 2 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 8 7 2 0 0 46 77 0 2 2 0 97 8 7 2 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 1 3 9 3 1 9 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 0 11 11 4 97 6 1 4 4 48 77 0 10 10 4 97 6 1 4 4 48 77 13 1 9 9 0 97 7 1 0 0 46 77 0 8 8 40 77 0 2 2 0 97 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
61 61 51 50 61 66 61 66 64 62 56 54 50 60 51 60 51 38 34 51 38 33 35 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 760;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,-119,o),
(181,-119,qs),
(108,-119,ls),
(93,-119,o),
(102,-104,qs),
(165,-5,l),
(106,8,o),
(71,53,qs),
(29,106,o),
(29,192,qs),
(29,280,o),
(76,333,qs),
(129,393,o),
(225,393,qs),
(265,393,o),
(299,381,qs),
(328,370,o),
(346,331,o),
(338,296,qs),
(332,271,ls),
(329,261,o),
(323,261,qs),
(318,261,o),
(312,264,qs),
(269,285,o),
(232,285,qs),
(193,285,o),
(147,233,o),
(147,189,qs),
(147,88,o),
(245,88,qs),
(284,88,o),
(327,114,qs),
(336,120,o),
(341,120,qs),
(352,120,o),
(352,104,qs),
(352,65,o),
(301,5,o),
(259,-5,q),
(212,-102,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
34 1 5 1 1 76 0 3 2 0 2 3 0 128 0 0 1 2 0 1 126 0 1 0 5 1 5 99 0 2 2 4 97 0 4 4 48 2 78 57 38 34 35 35 20 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,258,o),
(251,295,o),
(221,295,qs),
(152,295,o),
(148,231,q),
(282,231,l)
);
},
{
closed = 1;
nodes = (
(246,86,qs),
(304,86,o),
(359,110,qs),
(371,115,o),
(376,115,qs),
(388,115,o),
(388,100,qs),
(388,64,o),
(359,34,qs),
(316,-10,o),
(230,-10,qs),
(145,-10,o),
(91,38,qs),
(29,93,o),
(29,193,qs),
(29,275,o),
(73,329,qs),
(126,393,o),
(221,393,qs),
(301,393,o),
(348,345,qs),
(396,297,o),
(396,220,qs),
(396,190,o),
(394,166,qs),
(392,151,o),
(375,151,qs),
(147,151,l),
(159,86,o)
);
},
{
closed = 1;
nodes = (
(81,540,o),
(88,540,qs),
(179,540,ls),
(196,540,o),
(209,528,qs),
(300,445,ls),
(305,441,o),
(300,430,o),
(294,430,qs),
(216,430,ls),
(193,430,o),
(180,442,qs),
(83,524,l),
(77,528,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 8 3 8 7 3 128 0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 0 8 8 39 77 0 0 0 3 98 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 8 7 8 133 0 7 3 7 133 0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 0 0 0 3 98 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 47 44 39 37 34 32 29 28 24 22 16 14 8 6 0 5 0 5 33 10 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,258,o),
(251,295,o),
(221,295,qs),
(152,295,o),
(148,231,q),
(282,231,l)
);
},
{
closed = 1;
nodes = (
(246,86,qs),
(304,86,o),
(359,110,qs),
(371,115,o),
(376,115,qs),
(388,115,o),
(388,100,qs),
(388,64,o),
(359,34,qs),
(316,-10,o),
(230,-10,qs),
(145,-10,o),
(91,38,qs),
(29,93,o),
(29,193,qs),
(29,275,o),
(73,329,qs),
(126,393,o),
(221,393,qs),
(301,393,o),
(348,345,qs),
(396,297,o),
(396,220,qs),
(396,190,o),
(394,166,qs),
(392,151,o),
(375,151,qs),
(147,151,l),
(159,86,o)
);
},
{
closed = 1;
nodes = (
(106,441,o),
(110,445,qs),
(202,528,ls),
(215,540,o),
(232,540,qs),
(323,540,ls),
(330,540,o),
(333,528,o),
(328,524,qs),
(231,442,ls),
(218,430,o),
(195,430,qs),
(116,430,ls),
(110,430,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
10 1 7 8 3 8 7 3 128 0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 0 8 8 39 77 0 0 0 3 98 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 8 7 8 133 10 1 7 3 7 133 0 5 2 6 2 5 6 128 9 1 1 0 2 5 1 2 103 0 0 0 3 98 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
37 35 0 0 44 41 35 48 37 48 34 32 29 28 24 22 16 14 8 6 0 5 0 5 33 11 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,258,o),
(251,295,o),
(221,295,qs),
(152,295,o),
(148,231,q),
(282,231,l)
);
},
{
closed = 1;
nodes = (
(246,86,qs),
(304,86,o),
(359,110,qs),
(371,115,o),
(376,115,qs),
(388,115,o),
(388,100,qs),
(388,64,o),
(359,34,qs),
(316,-10,o),
(230,-10,qs),
(145,-10,o),
(91,38,qs),
(29,93,o),
(29,193,qs),
(29,275,o),
(73,329,qs),
(126,393,o),
(221,393,qs),
(301,393,o),
(348,345,qs),
(396,297,o),
(396,220,qs),
(396,190,o),
(394,166,qs),
(392,151,o),
(375,151,qs),
(147,151,l),
(159,86,o)
);
},
{
closed = 1;
nodes = (
(160,430,o),
(137,430,qs),
(68,430,ls),
(62,430,o),
(57,441,o),
(62,445,q),
(141,528,ls),
(152,540,o),
(171,540,qs),
(266,540,ls),
(283,540,o),
(295,528,qs),
(375,445,ls),
(379,441,o),
(374,430,o),
(369,430,qs),
(299,430,ls),
(277,430,o),
(266,444,qs),
(219,500,l),
(171,444,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 2 6 2 5 6 128 10 1 1 0 2 5 1 2 103 9 1 7 7 8 95 0 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 2 6 2 5 6 128 0 8 9 1 7 3 8 7 103 10 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 54 51 47 44 39 37 34 32 29 28 24 22 16 14 8 6 0 5 0 5 33 11 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,258,o),
(251,295,o),
(221,295,qs),
(152,295,o),
(148,231,q),
(282,231,l)
);
},
{
closed = 1;
nodes = (
(246,86,qs),
(304,86,o),
(359,110,qs),
(371,115,o),
(376,115,qs),
(388,115,o),
(388,100,qs),
(388,64,o),
(359,34,qs),
(316,-10,o),
(230,-10,qs),
(145,-10,o),
(91,38,qs),
(29,93,o),
(29,193,qs),
(29,275,o),
(73,329,qs),
(126,393,o),
(221,393,qs),
(301,393,o),
(348,345,qs),
(396,297,o),
(396,220,qs),
(396,190,o),
(394,166,qs),
(392,151,o),
(375,151,qs),
(147,151,l),
(159,86,o)
);
},
{
closed = 1;
nodes = (
(105,546,o),
(132,546,qs),
(159,546,o),
(194,508,o),
(194,481,qs),
(194,454,o),
(159,417,o),
(132,417,qs),
(105,417,o),
(69,454,o),
(69,481,qs),
(69,508,o)
);
},
{
closed = 1;
nodes = (
(281,546,o),
(308,546,qs),
(334,546,o),
(370,509,o),
(370,481,qs),
(370,454,o),
(335,417,o),
(308,417,qs),
(281,417,o),
(245,454,o),
(245,481,qs),
(245,508,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 2 6 2 5 6 128 11 1 1 0 2 5 1 2 103 9 1 7 7 8 97 10 1 8 8 39 77 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 2 6 2 5 6 128 10 1 8 9 1 7 3 8 7 105 11 1 1 0 2 5 1 2 103 0 0 0 3 97 0 3 3 48 77 0 6 6 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
0 0 57 55 51 49 45 43 39 37 34 32 29 28 24 22 16 14 8 6 0 5 0 5 33 12 9 23 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,13,ls),
(154,0,o),
(141,0,qs),
(53,0,ls),
(40,0,o),
(40,13,qs),
(40,369,ls)
);
},
{
closed = 1;
nodes = (
(-14,540,o),
(-7,540,qs),
(84,540,ls),
(101,540,o),
(114,528,qs),
(206,445,ls),
(210,441,o),
(206,430,o),
(200,430,qs),
(121,430,ls),
(99,430,o),
(85,442,qs),
(-12,524,ls),
(-17,528,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 3 1 3 2 1 128 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
53 36 52 49 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,382,o),
(54,382,qs),
(59,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls)
);
},
{
closed = 1;
nodes = (
(-17,441,o),
(-13,445,qs),
(78,528,ls),
(92,540,o),
(108,540,qs),
(200,540,ls),
(206,540,o),
(210,528,o),
(205,524,qs),
(107,442,ls),
(94,430,o),
(71,430,qs),
(-7,430,ls),
(-13,430,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
4 1 2 3 1 3 2 1 128 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 3 2 3 133 4 1 2 1 2 133 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
15 13 22 19 13 26 15 26 52 49 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,382,o),
(53,382,qs),
(58,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(53,0,ls),
(40,0,o),
(40,13,qs),
(40,369,ls)
);
},
{
closed = 1;
nodes = (
(39,430,o),
(16,430,qs),
(-53,430,ls),
(-59,430,o),
(-63,441,o),
(-59,445,qs),
(20,528,ls),
(31,540,o),
(50,540,qs),
(145,540,ls),
(163,540,o),
(175,528,qs),
(254,445,ls),
(258,441,o),
(254,430,o),
(248,430,qs),
(178,430,ls),
(156,430,o),
(145,444,qs),
(98,500,l),
(50,444,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 2 3 95 0 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 4 1 2 1 3 2 103 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
52 53 36 52 49 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,382,o),
(53,382,qs),
(58,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(53,0,ls),
(40,0,o),
(40,13,qs),
(40,369,ls)
);
},
{
closed = 1;
nodes = (
(-16,546,o),
(11,546,qs),
(37,546,o),
(72,509,o),
(72,481,qs),
(72,454,o),
(37,417,o),
(11,417,qs),
(-17,417,o),
(-53,454,o),
(-53,481,qs),
(-53,508,o)
);
},
{
closed = 1;
nodes = (
(160,546,o),
(187,546,qs),
(213,546,o),
(248,508,o),
(248,481,qs),
(248,454,o),
(213,417,o),
(187,417,qs),
(159,417,o),
(123,454,o),
(123,481,qs),
(123,508,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 2 2 3 97 5 1 3 3 39 77 0 1 1 42 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
5 1 3 4 1 2 1 3 2 105 0 1 1 42 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
36 36 36 36 52 49 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,401,ls),
(124,395,o),
(117,405,qs),
(102,429,ls),
(95,438,o),
(106,444,qs),
(159,472,l),
(111,543,ls),
(108,547,o),
(112,556,o),
(117,556,qs),
(150,556,ls),
(193,556,o),
(231,542,o),
(250,519,q),
(298,544,ls),
(308,549,o),
(315,539,qs),
(331,515,ls),
(338,504,o),
(328,500,qs),
(280,476,l),
(377,335,ls),
(420,273,o),
(420,196,qs),
(420,108,o),
(376,54,qs),
(323,-10,o),
(225,-10,qs),
(142,-10,o),
(89,37,qs),
(29,92,o),
(29,187,qs),
(29,270,o),
(75,322,qs),
(127,382,o),
(222,382,q),
(189,428,l)
);
},
{
closed = 1;
nodes = (
(303,185,qs),
(303,228,o),
(262,276,o),
(224,276,qs),
(187,276,o),
(145,228,o),
(145,185,qs),
(145,95,o),
(223,95,qs),
(303,95,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
37 30 22 15 4 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 97 0 1 1 46 1 78 39 38 44 42 38 47 39 47 47 38 16 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,391,qs),
(409,391,o),
(409,217,qs),
(409,13,ls),
(409,0,o),
(396,0,qs),
(307,0,ls),
(294,0,o),
(294,13,qs),
(294,205,ls),
(294,285,o),
(224,285,qs),
(155,285,o),
(155,206,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(129,382,o),
(147,335,q),
(189,391,o)
);
},
{
closed = 1;
nodes = (
(75,441,qs),
(81,542,o),
(153,542,qs),
(181,542,o),
(227,524,qs),
(265,509,o),
(281,509,qs),
(298,509,o),
(302,533,qs),
(304,545,o),
(315,545,qs),
(363,545,ls),
(376,545,o),
(374,532,qs),
(368,478,o),
(330,434,o),
(288,434,qs),
(266,434,o),
(220,451,qs),
(183,464,o),
(170,464,qs),
(150,464,o),
(146,440,qs),
(145,428,o),
(133,428,qs),
(86,428,ls),
(75,428,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 9 5 5 6 114 0 9 6 5 9 90 7 11 2 5 5 8 98 10 1 8 8 39 77 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 9 5 5 6 114 0 9 6 5 9 90 7 11 2 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 9 5 9 6 5 128 0 9 6 5 9 90 7 11 2 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 6 9 7 9 6 7 128 0 9 0 7 5 9 7 106 11 1 5 5 8 98 10 1 8 8 39 77 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 9 7 9 6 7 128 0 9 0 7 5 9 7 106 10 1 8 11 1 5 4 8 5 105 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
29 27 51 49 47 45 43 40 37 35 33 31 27 53 29 53 35 51 35 51 49 12 9 27 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(107,540,o),
(113,540,qs),
(205,540,ls),
(221,540,o),
(235,528,qs),
(326,445,ls),
(330,441,o),
(326,430,o),
(320,430,qs),
(242,430,ls),
(219,430,o),
(206,442,qs),
(109,524,l),
(103,528,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 4 5 3 5 4 3 128 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
11 10 1 0 37 35 30 28 19 17 10 25 11 25 6 4 0 9 1 9 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(123,441,o),
(127,445,qs),
(219,528,ls),
(232,540,o),
(249,540,qs),
(340,540,ls),
(347,540,o),
(350,528,o),
(345,524,qs),
(248,442,ls),
(234,430,o),
(212,430,qs),
(133,430,ls),
(127,430,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 4 5 3 5 4 3 128 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 8 1 4 3 4 133 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
28 26 11 10 1 0 35 32 26 39 28 39 19 17 10 25 11 25 6 4 0 9 1 9 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(170,430,o),
(147,430,qs),
(78,430,ls),
(72,430,o),
(67,441,o),
(72,445,q),
(151,528,ls),
(162,540,o),
(181,540,qs),
(275,540,ls),
(293,540,o),
(305,528,qs),
(385,445,ls),
(389,441,o),
(384,430,o),
(379,430,qs),
(309,430,ls),
(287,430,o),
(275,444,qs),
(229,500,l),
(181,444,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
6 1 4 4 5 95 0 5 5 39 77 0 1 1 3 97 0 3 3 48 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 6 1 4 3 5 4 103 0 1 1 3 97 0 3 3 48 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
11 10 1 0 45 42 38 35 30 28 19 17 10 25 11 25 6 4 0 9 1 9 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(72,441,qs),
(78,542,o),
(150,542,qs),
(178,542,o),
(224,524,qs),
(262,509,o),
(277,509,qs),
(295,509,o),
(299,533,qs),
(301,545,o),
(312,545,qs),
(360,545,ls),
(372,545,o),
(371,532,qs),
(365,478,o),
(327,434,o),
(285,434,qs),
(263,434,o),
(217,451,qs),
(180,464,o),
(167,464,qs),
(147,464,o),
(143,440,qs),
(142,428,o),
(130,428,qs),
(83,428,ls),
(72,428,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 8 4 4 5 114 0 8 5 4 8 90 6 12 2 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 5 8 4 8 5 4 128 0 8 5 4 8 90 6 12 2 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 8 6 8 5 6 128 0 8 0 6 4 8 6 106 12 1 4 4 7 98 9 1 7 7 39 77 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 5 8 6 8 5 6 128 0 8 0 6 4 8 6 106 9 1 7 12 1 4 3 7 4 105 0 1 1 3 97 0 3 3 48 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
28 26 11 10 1 0 50 48 46 44 42 39 36 34 32 30 26 52 28 52 19 17 10 25 11 25 6 4 0 9 1 9 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(114,546,o),
(141,546,qs),
(168,546,o),
(203,508,o),
(203,481,qs),
(203,454,o),
(168,417,o),
(141,417,qs),
(114,417,o),
(78,454,o),
(78,481,qs),
(78,508,o)
);
},
{
closed = 1;
nodes = (
(290,546,o),
(317,546,qs),
(343,546,o),
(379,509,o),
(379,481,qs),
(379,454,o),
(344,417,o),
(317,417,qs),
(290,417,o),
(254,454,o),
(254,481,qs),
(254,508,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
6 1 4 4 5 97 7 1 5 5 39 77 0 1 1 3 97 0 3 3 48 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 48 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
11 10 1 0 48 46 42 40 36 34 30 28 19 17 10 25 11 25 6 4 0 9 1 9 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(189,486,o),
(216,486,qs),
(242,486,o),
(277,449,o),
(277,421,qs),
(277,394,o),
(242,358,o),
(216,358,qs),
(189,358,o),
(152,394,o),
(152,421,qs),
(152,449,o)
);
},
{
closed = 1;
nodes = (
(189,183,o),
(216,183,qs),
(242,183,o),
(277,146,o),
(277,118,qs),
(277,91,o),
(242,55,o),
(216,55,qs),
(189,55,o),
(152,91,o),
(152,118,qs),
(152,146,o)
);
},
{
closed = 1;
nodes = (
(30,318,o),
(43,318,qs),
(332,318,ls),
(402,318,o),
(402,251,qs),
(402,236,ls),
(402,223,o),
(389,223,qs),
(43,223,ls),
(30,223,o),
(30,236,qs),
(30,305,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 1 0 0 5 1 0 105 0 5 0 4 3 5 4 103 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 51 51 36 36 36 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(233,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,162,o),
(155,141,q),
(246,282,l)
);
},
{
closed = 1;
nodes = (
(217,98,o),
(227,98,qs),
(308,98,o),
(308,190,qs),
(308,217,o),
(300,238,q),
(212,99,l)
);
},
{
closed = 1;
nodes = (
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,344,qs),
(427,289,o),
(427,192,qs),
(427,107,o),
(380,53,qs),
(326,-10,o),
(229,-10,qs),
(144,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
7 1 1 0 1 76 0 0 0 3 97 0 3 3 48 77 0 1 1 2 97 4 1 2 2 46 2 78 16 15 24 22 15 30 16 30 38 20 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,192,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,176,ls),
(154,96,o),
(223,96,qs),
(293,96,o),
(293,175,qs),
(293,369,ls),
(293,382,o),
(306,382,qs),
(311,382,ls),
(362,382,o),
(408,335,o),
(408,284,qs),
(408,185,ls),
(408,-10,o),
(223,-10,qs),
(40,-10,o)
);
},
{
closed = 1;
nodes = (
(92,540,o),
(99,540,qs),
(190,540,ls),
(207,540,o),
(220,528,qs),
(311,445,ls),
(316,441,o),
(311,430,o),
(305,430,qs),
(227,430,ls),
(204,430,o),
(191,442,qs),
(94,524,l),
(88,528,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 5 0 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 36 33 28 26 20 17 13 11 8 5 0 23 1 23 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,192,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,176,ls),
(154,96,o),
(223,96,qs),
(293,96,o),
(293,175,qs),
(293,369,ls),
(293,382,o),
(306,382,qs),
(311,382,ls),
(362,382,o),
(408,335,o),
(408,284,qs),
(408,185,ls),
(408,-10,o),
(223,-10,qs),
(40,-10,o)
);
},
{
closed = 1;
nodes = (
(109,441,o),
(114,445,qs),
(205,528,ls),
(218,540,o),
(235,540,qs),
(326,540,ls),
(333,540,o),
(336,528,o),
(331,524,qs),
(234,442,ls),
(221,430,o),
(198,430,qs),
(120,430,ls),
(114,430,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 7 1 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
26 24 1 0 33 30 24 37 26 37 20 17 13 11 8 5 0 23 1 23 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,192,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,176,ls),
(154,96,o),
(223,96,qs),
(293,96,o),
(293,175,qs),
(293,369,ls),
(293,382,o),
(306,382,qs),
(311,382,ls),
(362,382,o),
(408,335,o),
(408,284,qs),
(408,185,ls),
(408,-10,o),
(223,-10,qs),
(40,-10,o)
);
},
{
closed = 1;
nodes = (
(162,430,o),
(139,430,qs),
(70,430,ls),
(64,430,o),
(60,441,o),
(64,445,qs),
(143,528,ls),
(154,540,o),
(173,540,qs),
(268,540,ls),
(285,540,o),
(297,528,qs),
(377,445,ls),
(381,441,o),
(377,430,o),
(371,430,qs),
(301,430,ls),
(279,430,o),
(268,444,qs),
(221,500,l),
(173,444,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 4 4 5 95 0 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 6 1 4 1 5 4 103 3 1 1 1 42 77 0 2 2 0 98 7 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 43 40 36 33 28 26 20 17 13 11 8 5 0 23 1 23 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,192,qs),
(40,369,ls),
(40,382,o),
(53,382,qs),
(58,382,ls),
(108,382,o),
(154,335,o),
(154,284,qs),
(154,176,ls),
(154,96,o),
(223,96,qs),
(293,96,o),
(293,175,qs),
(293,369,ls),
(293,382,o),
(306,382,qs),
(311,382,ls),
(362,382,o),
(408,335,o),
(408,284,qs),
(408,185,ls),
(408,-10,o),
(223,-10,qs),
(40,-10,o)
);
},
{
closed = 1;
nodes = (
(110,546,o),
(137,546,qs),
(164,546,o),
(199,509,o),
(199,481,qs),
(199,454,o),
(164,417,o),
(137,417,qs),
(110,417,o),
(74,454,o),
(74,481,qs),
(74,508,o)
);
},
{
closed = 1;
nodes = (
(286,546,o),
(313,546,qs),
(340,546,o),
(375,508,o),
(375,481,qs),
(375,454,o),
(340,417,o),
(313,417,qs),
(286,417,o),
(250,454,o),
(250,481,qs),
(250,508,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
6 1 4 4 5 97 7 1 5 5 39 77 3 1 1 1 42 77 0 2 2 0 98 8 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 42 77 0 2 2 0 98 8 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
1 0 46 44 40 38 34 32 28 26 20 17 13 11 8 5 0 23 1 23 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 447;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,382,o),
(16,382,qs),
(40,382,ls),
(90,382,o),
(136,344,o),
(157,284,qs),
(211,128,l),
(292,369,ls),
(296,382,o),
(308,382,qs),
(398,382,ls),
(410,382,o),
(404,369,q),
(276,7,ls),
(242,-91,o),
(166,-171,o),
(106,-171,qs),
(60,-171,o),
(-2,-115,o),
(-2,-73,qs),
(-2,-52,o),
(11,-52,qs),
(15,-52,o),
(20,-55,qs),
(49,-74,o),
(76,-74,qs),
(124,-74,o),
(148,-10,q),
(9,369,l)
);
},
{
closed = 1;
nodes = (
(101,441,o),
(105,445,qs),
(197,528,ls),
(210,540,o),
(227,540,qs),
(318,540,ls),
(325,540,o),
(328,528,o),
(323,524,qs),
(226,442,ls),
(212,430,o),
(190,430,qs),
(111,430,ls),
(105,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
7 1 5 6 3 6 5 3 128 0 1 3 0 3 1 0 128 0 6 6 39 77 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 6 5 6 133 7 1 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
31 29 38 35 29 42 31 42 53 52 35 34 33 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,151,o),
(321,195,qs),
(321,236,o),
(276,283,o),
(237,283,qs),
(198,283,o),
(155,237,o),
(155,195,qs),
(155,150,o),
(199,98,o),
(237,98,qs),
(275,98,o)
);
},
{
closed = 1;
nodes = (
(155,-160,o),
(142,-160,qs),
(54,-160,ls),
(41,-160,o),
(41,-147,qs),
(41,543,ls),
(41,556,o),
(54,556,qs),
(59,556,ls),
(109,556,o),
(155,509,o),
(155,458,qs),
(155,349,l),
(197,393,o),
(258,393,qs),
(340,393,o),
(388,342,qs),
(440,288,o),
(440,194,qs),
(440,112,o),
(402,58,qs),
(355,-9,o),
(268,-9,qs),
(195,-9,o),
(155,40,q),
(155,-147,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
24 1 1 3 12 1 2 0 2 76 0 4 4 39 77 0 1 1 3 97 0 3 3 48 77 6 1 0 0 2 97 0 2 2 46 77 0 5 5 44 5 78 1 0 36 33 30 27 23 21 15 13 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,382,o),
(16,382,qs),
(40,382,ls),
(90,382,o),
(136,344,o),
(157,284,qs),
(211,128,l),
(292,369,ls),
(296,382,o),
(308,382,qs),
(398,382,ls),
(410,382,o),
(404,369,q),
(276,7,ls),
(242,-91,o),
(166,-171,o),
(106,-171,qs),
(60,-171,o),
(-2,-115,o),
(-2,-73,qs),
(-2,-52,o),
(11,-52,qs),
(15,-52,o),
(20,-55,qs),
(49,-74,o),
(76,-74,qs),
(124,-74,o),
(148,-10,q),
(9,369,l)
);
},
{
closed = 1;
nodes = (
(86,546,o),
(113,546,qs),
(139,546,o),
(175,509,o),
(175,481,qs),
(175,454,o),
(140,417,o),
(113,417,qs),
(86,417,o),
(50,454,o),
(50,481,qs),
(50,508,o)
);
},
{
closed = 1;
nodes = (
(262,546,o),
(289,546,qs),
(315,546,o),
(351,508,o),
(351,481,qs),
(351,454,o),
(316,417,o),
(289,417,qs),
(262,417,o),
(226,454,o),
(226,481,qs),
(226,508,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
21 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 3 0 3 1 0 128 7 1 5 5 6 97 8 1 6 6 39 77 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 3 0 3 1 0 128 8 1 6 7 1 5 3 6 5 105 4 1 3 3 42 77 0 0 0 2 98 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
36 36 36 36 53 52 35 34 33 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,382,o),
(54,382,qs),
(59,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,13,ls),
(155,0,o),
(142,0,qs),
(54,0,ls),
(41,0,o),
(41,13,qs),
(41,369,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 42 77 0 0 0 40 0 78 52 49 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,165,o),
(15,170,o),
(15,176,qs),
(15,245,ls),
(15,261,o),
(29,268,qs),
(67,288,l),
(67,543,ls),
(67,556,o),
(80,556,qs),
(90,556,ls),
(139,556,o),
(184,508,o),
(184,455,qs),
(184,353,l),
(288,409,ls),
(294,412,o),
(303,407,o),
(303,401,qs),
(303,332,ls),
(303,316,o),
(289,309,qs),
(184,252,l),
(184,108,l),
(316,108,ls),
(386,108,o),
(386,42,qs),
(386,17,ls),
(386,0,o),
(370,0,qs),
(80,0,ls),
(67,0,o),
(67,13,qs),
(67,188,l),
(30,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
31 27 19 15 11 0 6 1 2 1 76 0 2 2 39 77 0 1 1 0 96 0 0 0 40 0 78 60 35 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 400;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,165,o),
(15,170,o),
(15,176,qs),
(15,240,ls),
(15,256,o),
(29,263,qs),
(61,280,l),
(61,543,ls),
(61,556,o),
(74,556,qs),
(79,556,ls),
(129,556,o),
(175,509,o),
(175,458,qs),
(175,343,l),
(215,365,ls),
(220,368,o),
(230,363,o),
(230,357,qs),
(230,292,ls),
(230,276,o),
(216,269,qs),
(175,247,l),
(175,144,ls),
(175,90,o),
(213,90,qs),
(232,90,o),
(254,105,qs),
(261,110,o),
(265,110,qs),
(276,110,o),
(276,95,qs),
(276,48,o),
(221,-8,o),
(173,-8,qs),
(61,-8,o),
(61,131,qs),
(61,185,l),
(30,168,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
35 31 23 19 15 0 6 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 3 3 39 77 2 1 1 1 0 98 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 98 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
61 35 19 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(799,108,o),
(799,42,qs),
(799,17,ls),
(799,0,o),
(783,0,qs),
(462,0,ls),
(449,0,o),
(449,13,qs),
(449,30,l),
(386,-10,o),
(306,-10,qs),
(188,-10,o),
(118,58,qs),
(39,134,o),
(39,277,qs),
(39,401,o),
(101,477,qs),
(173,566,o),
(306,566,qs),
(387,566,o),
(449,526,q),
(449,543,ls),
(449,556,o),
(462,556,qs),
(722,556,ls),
(791,556,o),
(791,489,qs),
(791,464,ls),
(791,447,o),
(775,447,qs),
(567,447,l),
(567,334,l),
(702,334,ls),
(771,334,o),
(771,267,qs),
(771,242,ls),
(771,226,o),
(756,226,qs),
(567,226,l),
(567,108,l),
(730,108,ls)
);
},
{
closed = 1;
nodes = (
(449,277,qs),
(449,454,o),
(306,454,qs),
(160,454,o),
(160,277,qs),
(160,102,o),
(306,102,qs),
(449,102,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 5 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 2 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 7 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 9 3 31 1 6 8 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 3 97 4 1 3 3 39 77 11 8 10 3 7 7 5 97 6 1 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 1 0 0 7 1 0 103 9 1 2 2 4 97 0 4 4 39 77 9 1 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 11 8 10 3 7 7 6 95 0 6 6 40 77 11 8 10 3 7 7 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 46 44 41 48 42 48 0 40 0 39 51 38 35 51 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 822;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,-10,qs),
(144,-10,o),
(90,39,qs),
(29,94,o),
(29,192,qs),
(29,277,o),
(75,330,qs),
(129,393,o),
(227,393,qs),
(312,393,o),
(365,341,q),
(417,393,o),
(496,393,qs),
(576,393,o),
(623,345,qs),
(671,297,o),
(671,220,qs),
(671,190,o),
(669,166,qs),
(668,151,o),
(650,151,qs),
(423,151,l),
(435,86,o),
(521,86,qs),
(580,86,o),
(634,110,qs),
(646,115,o),
(651,115,qs),
(663,115,o),
(663,100,qs),
(663,64,o),
(634,34,qs),
(591,-10,o),
(505,-10,qs),
(419,-10,o),
(366,43,q),
(313,-10,o)
);
},
{
closed = 1;
nodes = (
(308,190,qs),
(308,235,o),
(266,284,o),
(228,284,qs),
(190,284,o),
(147,235,o),
(147,190,qs),
(147,98,o),
(227,98,qs),
(308,98,o)
);
},
{
closed = 1;
nodes = (
(562,258,o),
(526,295,o),
(496,295,qs),
(427,295,o),
(424,231,q),
(558,231,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
25 1 8 4 17 1 3 10 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
25 1 9 4 17 1 3 10 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 46 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 1 3 7 3 1 7 128 12 1 10 0 3 1 10 3 103 0 9 9 4 97 5 1 4 4 48 77 0 8 8 4 97 5 1 4 4 48 77 11 1 7 7 0 97 6 1 0 0 46 77 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
47 47 38 37 47 52 47 52 50 48 43 41 37 46 38 46 38 34 38 33 35 20 33 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,170,qs),
(36,170,o),
(40,166,qs),
(116,98,o),
(215,98,qs),
(315,98,o),
(315,157,qs),
(315,179,o),
(275,206,o),
(216,225,qs),
(139,249,o),
(106,270,qs),
(33,316,o),
(33,403,qs),
(33,476,o),
(85,520,qs),
(141,566,o),
(234,566,qs),
(307,566,o),
(367,547,qs),
(399,536,o),
(419,496,o),
(411,461,qs),
(405,437,ls),
(402,424,o),
(393,424,qs),
(386,424,o),
(376,429,qs),
(309,461,o),
(237,461,qs),
(154,461,o),
(154,409,qs),
(154,386,o),
(195,357,o),
(254,339,qs),
(332,315,o),
(364,296,qs),
(437,252,o),
(437,166,qs),
(437,91,o),
(389,44,qs),
(333,-10,o),
(228,-10,qs),
(132,-10,o),
(74,34,qs),
(15,79,o),
(15,147,qs),
(15,170,o)
);
},
{
closed = 1;
nodes = (
(290,699,o),
(312,699,qs),
(382,699,ls),
(388,699,o),
(392,688,o),
(388,684,qs),
(308,601,ls),
(297,589,o),
(278,589,qs),
(184,589,ls),
(166,589,o),
(154,601,qs),
(75,684,ls),
(71,688,o),
(75,699,o),
(81,699,qs),
(150,699,ls),
(173,699,o),
(184,685,qs),
(231,629,l),
(278,685,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 103 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 8 1 6 0 7 3 6 7 103 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 34 43 38 34 43 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,81,qs),
(211,81,o),
(211,112,qs),
(211,130,o),
(166,146,qs),
(103,169,o),
(83,183,qs),
(39,214,o),
(39,268,qs),
(39,328,o),
(82,361,qs),
(124,393,o),
(194,393,qs),
(236,393,o),
(268,379,qs),
(299,365,o),
(317,327,o),
(307,294,qs),
(304,284,ls),
(302,276,o),
(295,276,qs),
(291,276,o),
(284,279,qs),
(282,280,o),
(281,280,q),
(233,302,o),
(191,302,qs),
(154,302,o),
(154,275,qs),
(154,256,o),
(199,239,qs),
(264,214,o),
(281,202,qs),
(326,172,o),
(326,122,qs),
(326,67,o),
(290,31,qs),
(249,-10,o),
(176,-10,qs),
(116,-10,o),
(74,18,qs),
(27,51,o),
(27,102,qs),
(27,123,o),
(40,123,qs),
(42,123,o),
(46,121,q),
(47,120,o),
(48,120,q),
(104,81,o)
);
},
{
closed = 1;
nodes = (
(235,540,o),
(257,540,qs),
(327,540,ls),
(333,540,o),
(337,529,o),
(333,525,qs),
(254,442,ls),
(243,430,o),
(224,430,qs),
(129,430,ls),
(111,430,o),
(99,442,qs),
(20,525,ls),
(16,529,o),
(20,540,o),
(26,540,qs),
(96,540,ls),
(118,540,o),
(129,526,qs),
(176,470,l),
(224,526,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 7 7 6 95 8 1 6 6 39 77 0 2 2 4 97 0 4 4 48 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 8 1 6 0 7 4 6 7 103 0 2 2 4 97 0 4 4 48 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
52 53 35 42 38 36 42 36 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 331;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,556,o),
(15,556,qs),
(64,556,ls),
(100,556,o),
(146,528,o),
(163,495,qs),
(250,322,l),
(362,543,l),
(367,556,o),
(382,556,qs),
(478,556,ls),
(492,556,o),
(486,543,qs),
(304,200,l),
(304,13,ls),
(304,0,o),
(291,0,qs),
(200,0,ls),
(187,0,o),
(187,13,qs),
(187,203,l),
(7,543,ls)
);
},
{
closed = 1;
nodes = (
(128,705,o),
(155,705,qs),
(181,705,o),
(217,668,o),
(217,640,qs),
(217,613,o),
(181,576,o),
(155,576,qs),
(128,576,o),
(91,613,o),
(91,640,qs),
(91,667,o)
);
},
{
closed = 1;
nodes = (
(304,705,o),
(331,705,qs),
(357,705,o),
(393,667,o),
(393,640,qs),
(393,613,o),
(357,576,o),
(331,576,qs),
(304,576,o),
(267,613,o),
(267,640,qs),
(267,667,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
14 7 0 3 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 36 36 36 36 53 52 50 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,108,o),
(426,42,qs),
(426,17,ls),
(426,0,o),
(410,0,qs),
(39,0,ls),
(26,0,o),
(26,13,qs),
(26,85,ls),
(26,107,o),
(41,127,qs),
(276,447,l),
(45,447,ls),
(32,447,o),
(32,460,qs),
(32,543,ls),
(32,556,o),
(45,556,qs),
(356,556,ls),
(426,556,o),
(426,489,qs),
(426,473,ls),
(426,455,o),
(411,435,qs),
(170,108,l),
(356,108,ls)
);
},
{
closed = 1;
nodes = (
(285,699,o),
(307,699,qs),
(377,699,ls),
(383,699,o),
(387,688,o),
(383,684,qs),
(303,601,l),
(293,589,o),
(273,589,qs),
(179,589,ls),
(161,589,o),
(149,601,qs),
(70,684,ls),
(66,688,o),
(70,699,o),
(76,699,qs),
(145,699,ls),
(168,699,o),
(179,685,qs),
(226,629,l),
(273,685,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 4 0 5 0 4 5 103 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 453;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,101,o),
(341,88,qs),
(341,13,ls),
(341,0,o),
(328,0,qs),
(41,0,ls),
(28,0,o),
(28,13,qs),
(28,62,ls),
(28,81,o),
(41,97,qs),
(190,280,l),
(49,280,ls),
(36,280,o),
(36,293,qs),
(36,369,ls),
(36,382,o),
(49,382,qs),
(269,382,ls),
(307,382,o),
(335,351,o),
(335,309,qs),
(335,293,o),
(322,276,qs),
(177,101,l),
(328,101,ls)
);
},
{
closed = 1;
nodes = (
(243,540,o),
(265,540,qs),
(335,540,ls),
(341,540,o),
(345,529,o),
(341,525,qs),
(262,442,ls),
(251,430,o),
(232,430,qs),
(137,430,ls),
(119,430,o),
(107,442,qs),
(28,525,ls),
(24,529,o),
(28,540,o),
(34,540,qs),
(104,540,ls),
(126,540,o),
(137,526,qs),
(184,470,l),
(232,526,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 4 95 6 1 4 4 39 77 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
6 1 4 0 5 0 4 5 103 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 45 42 38 35 30 28 0 25 0 24 53 35 53 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,280,o),
(53,293,qs),
(67,369,ls),
(70,382,o),
(83,382,qs),
(155,382,l),
(159,407,ls),
(169,479,o),
(207,519,qs),
(247,561,o),
(309,561,qs),
(352,561,o),
(403,519,o),
(403,483,qs),
(403,448,o),
(386,448,qs),
(383,448,o),
(377,450,qs),
(346,464,o),
(328,464,qs),
(303,464,o),
(278,435,o),
(272,401,qs),
(269,382,l),
(364,382,ls),
(377,382,o),
(374,369,qs),
(360,293,ls),
(358,280,o),
(346,280,qs),
(251,280,l),
(198,-17,ls),
(171,-171,o),
(51,-171,qs),
(8,-171,o),
(-46,-127,o),
(-46,-91,qs),
(-46,-58,o),
(-28,-58,qs),
(-24,-58,o),
(-20,-60,qs),
(11,-74,o),
(30,-74,qs),
(54,-74,o),
(79,-45,o),
(85,-10,qs),
(137,280,l),
(64,280,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 1 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 1 1 0 0 2 97 0 2 2 50 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 50 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 47 0 46 36 35 34 35 35 34 35 19 35 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,430,o),
(79,430,qs),
(10,430,ls),
(4,430,o),
(0,441,o),
(4,445,qs),
(83,528,ls),
(94,540,o),
(113,540,qs),
(208,540,ls),
(226,540,o),
(238,528,qs),
(317,445,ls),
(321,441,o),
(317,430,o),
(311,430,qs),
(241,430,ls),
(219,430,o),
(208,444,qs),
(161,500,l),
(113,444,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 319;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,540,o),
(241,540,qs),
(311,540,ls),
(317,540,o),
(321,529,o),
(317,525,qs),
(238,442,ls),
(227,430,o),
(208,430,qs),
(113,430,ls),
(95,430,o),
(83,442,qs),
(4,525,ls),
(0,529,o),
(4,540,o),
(10,540,qs),
(80,540,ls),
(102,540,o),
(113,526,qs),
(160,470,l),
(208,526,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 24 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 52 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 319;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,540,qs),
(71,540,ls),
(80,540,o),
(81,530,q),
(91,486,o),
(137,486,qs),
(183,486,o),
(193,530,q),
(194,540,o),
(204,540,qs),
(264,540,ls),
(274,540,o),
(272,529,qs),
(263,476,o),
(193,417,o),
(137,417,qs),
(82,417,o),
(11,476,o),
(2,529,qs),
(0,540,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 50 34 51 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 272;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,546,o),
(64,546,qs),
(90,546,o),
(125,509,o),
(125,481,qs),
(125,454,o),
(90,417,o),
(64,417,qs),
(36,417,o),
(0,454,o),
(0,481,qs),
(0,508,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 125;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,578,o),
(81,578,qs),
(115,578,o),
(162,531,o),
(162,498,qs),
(162,464,o),
(115,417,o),
(81,417,qs),
(48,417,o),
(0,465,o),
(0,498,qs),
(0,531,o)
);
},
{
closed = 1;
nodes = (
(114,483,o),
(114,498,qs),
(114,512,o),
(95,532,o),
(81,532,qs),
(67,532,o),
(49,512,o),
(49,498,qs),
(49,484,o),
(68,464,o),
(81,464,qs),
(95,464,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 162;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,2,qs),
(145,2,ls),
(148,2,o),
(149,-2,o),
(146,-3,qs),
(90,-31,o),
(90,-66,qs),
(90,-99,o),
(132,-99,qs),
(140,-99,o),
(150,-97,qs),
(162,-94,o),
(162,-106,qs),
(162,-141,ls),
(162,-150,o),
(151,-153,qs),
(132,-157,o),
(112,-157,qs),
(64,-157,o),
(8,-113,o),
(8,-76,qs),
(8,-25,o),
(61,0,q),
(64,2,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 1 2 112 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
53 39 36 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 162;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,441,qs),
(6,542,o),
(79,542,qs),
(106,542,o),
(152,524,qs),
(190,509,o),
(206,509,qs),
(223,509,o),
(228,533,q),
(229,545,o),
(240,545,qs),
(288,545,ls),
(301,545,o),
(299,532,qs),
(293,478,o),
(255,434,o),
(214,434,qs),
(191,434,o),
(146,451,qs),
(108,464,o),
(95,464,qs),
(76,464,o),
(72,440,qs),
(70,428,o),
(59,428,qs),
(11,428,ls),
(0,428,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 4 0 0 1 114 5 1 3 4 0 3 90 0 4 1 0 4 90 0 4 4 0 98 2 6 2 0 4 0 82 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 4 0 4 1 0 128 5 1 3 4 0 3 90 0 4 1 0 4 90 0 4 4 0 98 2 6 2 0 4 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 4 2 4 1 2 128 5 1 3 4 0 3 90 0 4 0 2 0 4 2 106 5 1 3 3 0 97 6 1 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 24 22 20 18 16 13 10 8 6 4 0 26 2 26 7 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 300;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,440,o),
(4,445,qs),
(67,526,l),
(76,540,o),
(96,540,qs),
(173,540,ls),
(179,540,o),
(185,528,o),
(181,524,qs),
(113,444,ls),
(101,430,o),
(82,430,qs),
(11,430,ls),
(5,430,o)
);
},
{
closed = 1;
nodes = (
(176,440,o),
(180,445,qs),
(242,526,ls),
(252,540,o),
(272,540,qs),
(349,540,ls),
(355,540,o),
(361,528,o),
(357,524,qs),
(289,444,ls),
(277,430,o),
(258,430,qs),
(187,430,ls),
(180,430,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 87 3 1 1 1 0 95 5 2 4 3 0 1 0 79 16 14 2 0 23 20 14 27 16 27 9 6 0 13 2 13 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 359;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,-160,o),
(142,-160,qs),
(54,-160,ls),
(41,-160,o),
(41,-147,qs),
(41,369,ls),
(41,382,o),
(54,382,qs),
(59,382,ls),
(109,382,o),
(155,335,o),
(155,284,qs),
(155,176,ls),
(155,96,o),
(224,96,qs),
(294,96,o),
(294,175,qs),
(294,369,ls),
(294,382,o),
(307,382,qs),
(312,382,ls),
(363,382,o),
(409,335,o),
(409,284,qs),
(409,185,ls),
(409,-10,o),
(231,-10,qs),
(188,-10,o),
(155,5,q),
(155,-147,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 0 2 1 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 51 52 35 52 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,84,o),
(165,58,qs),
(165,28,o),
(126,-12,o),
(97,-12,qs),
(68,-12,o),
(28,28,o),
(28,58,qs),
(28,145,o),
(129,224,qs),
(132,226,o),
(135,224,q),
(163,197,o),
(138,172,qs),
(114,149,o),
(110,127,q),
(134,122,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
42 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,308,o),
(170,282,qs),
(170,252,o),
(131,212,o),
(102,212,qs),
(73,212,o),
(33,252,o),
(33,282,qs),
(33,369,o),
(134,448,qs),
(137,450,o),
(140,448,q),
(168,421,o),
(143,396,qs),
(119,373,o),
(115,351,q),
(139,346,o)
);
},
{
closed = 1;
nodes = (
(33,29,o),
(33,58,qs),
(33,87,o),
(73,128,o),
(101,128,qs),
(130,128,o),
(170,87,o),
(170,58,qs),
(170,29,o),
(130,-12,o),
(101,-12,qs),
(73,-12,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 0 2 0 133 0 2 2 1 97 3 1 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 2 0 133 0 2 1 1 2 89 0 2 2 1 97 3 1 1 2 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
18 17 24 22 17 28 18 28 42 4 7 23 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,169,o),
(167,181,qs),
(166,217,ls),
(165,247,o),
(121,282,qs),
(73,320,o),
(41,373,o),
(41,415,qs),
(40,476,o),
(81,517,qs),
(128,565,o),
(204,565,qs),
(253,565,o),
(289,538,qs),
(330,506,o),
(329,461,qs),
(328,438,o),
(313,438,qs),
(307,438,o),
(293,443,qs),
(248,458,o),
(216,458,qs),
(156,456,o),
(157,407,qs),
(158,383,o),
(201,348,qs),
(249,310,o),
(281,263,o),
(281,231,qs),
(282,181,ls),
(282,169,o),
(269,169,qs),
(179,169,ls)
);
},
{
closed = 1;
nodes = (
(293,87,o),
(293,58,qs),
(293,29,o),
(254,-12,o),
(226,-12,qs),
(197,-12,o),
(157,29,o),
(157,58,qs),
(157,87,o),
(197,128,o),
(226,128,qs),
(254,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 0 1 4 1 0 4 128 2 1 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 3 0 1 2 3 1 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
34 33 1 0 40 38 33 44 34 44 21 19 15 13 11 9 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 369;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,104,o),
(420,62,o),
(420,28,qs),
(420,19,ls),
(420,7,o),
(412,0,o),
(399,0,qs),
(146,0,ls),
(106,0,o),
(73,-16,qs),
(70,-17,o),
(65,-20,qs),
(56,-26,o),
(52,-26,qs),
(45,-26,o),
(41,-19,qs),
(34,-8,o),
(34,14,qs),
(34,77,o),
(106,96,q),
(80,136,o),
(80,183,qs),
(80,254,o),
(123,302,qs),
(172,358,o),
(251,358,qs),
(316,358,o),
(353,319,qs),
(378,294,o),
(378,258,qs),
(378,232,o),
(365,231,qs),
(359,230,o),
(345,237,qs),
(303,258,o),
(268,259,qs),
(231,259,o),
(188,219,o),
(187,182,qs),
(186,149,o),
(229,104,o),
(261,104,qs),
(332,104,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
22 1 4 0 1 76 0 3 4 3 134 0 2 0 1 0 2 1 105 5 1 0 0 4 95 0 4 4 24 4 78 1 0 36 33 28 27 17 15 7 5 0 42 1 41 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 464;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,634,qs),
(40,633,o),
(38,631,q),
(33,623,o),
(30,622,qs),
(26,621,o),
(24,625,qs),
(12,646,o),
(18,667,qs),
(26,698,o),
(62,696,qs),
(77,696,o),
(110,682,qs),
(151,666,o),
(161,666,qs),
(175,666,o),
(186,682,qs),
(187,683,o),
(189,685,q),
(194,693,o),
(197,694,qs),
(201,695,o),
(203,691,qs),
(214,671,o),
(209,649,qs),
(202,618,o),
(165,620,qs),
(150,620,o),
(117,634,qs),
(76,651,o),
(66,651,qs),
(52,651,o)
);
},
{
closed = 1;
nodes = (
(50,0,o),
(50,12,qs),
(50,462,ls),
(50,556,o),
(142,556,qs),
(152,556,ls),
(165,556,o),
(165,543,qs),
(165,93,ls),
(165,0,o),
(74,0,qs),
(63,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
10 1 2 3 26 1 1 0 2 76 0 3 6 1 0 1 3 0 105 0 2 0 1 5 2 1 105 0 5 5 23 77 7 1 4 4 24 4 78 33 32 1 0 39 36 32 43 33 42 21 19 17 15 5 3 0 31 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,675,o),
(199,638,qs),
(199,632,ls),
(199,624,o),
(190,624,qs),
(70,624,ls),
(50,624,o),
(32,616,qs),
(30,615,o),
(29,614,q),
(24,612,o),
(22,612,qs),
(20,612,o),
(17,616,q),
(14,625,o),
(14,632,qs),
(16,662,o),
(47,671,q),
(36,689,o),
(36,713,qs),
(36,749,o),
(80,797,o),
(115,798,qs),
(142,799,o),
(178,769,o),
(178,745,qs),
(178,733,o),
(173,733,qs),
(172,733,o),
(166,736,qs),
(163,737,o),
(161,738,qs),
(139,748,o),
(125,748,qs),
(89,748,o),
(89,712,qs),
(89,696,o),
(109,675,o),
(125,675,qs),
(157,675,ls)
);
},
{
closed = 1;
nodes = (
(161,556,o),
(161,543,qs),
(161,93,ls),
(161,0,o),
(70,0,qs),
(59,0,ls),
(46,0,o),
(46,12,qs),
(46,462,ls),
(46,556,o),
(137,556,qs),
(147,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 6 1 0 0 3 4 0 3 103 7 1 4 4 23 77 0 5 5 24 5 78 41 40 1 0 47 44 40 51 41 50 35 32 17 15 6 4 0 39 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,q),
(131,459,o),
(131,467,qs),
(133,496,o),
(164,506,q),
(153,524,o),
(153,547,qs),
(153,583,o),
(197,631,o),
(232,632,qs),
(259,633,o),
(296,603,o),
(296,579,qs),
(296,568,o),
(291,568,qs),
(289,568,o),
(283,570,q),
(280,572,o),
(278,573,qs),
(256,583,o),
(242,583,qs),
(206,583,o),
(206,547,qs),
(206,530,o),
(226,509,o),
(242,509,qs),
(274,509,ls),
(316,509,o),
(316,472,qs),
(316,467,ls),
(316,459,o),
(307,459,qs),
(187,459,ls),
(167,459,o),
(149,450,qs),
(147,449,o),
(146,449,q),
(141,446,o),
(139,446,qs),
(137,446,o)
);
},
{
closed = 1;
nodes = (
(409,127,qs),
(409,-39,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(231,-104,o),
(285,-46,o),
(291,6,q),
(253,-10,o),
(215,-10,qs),
(144,-10,o),
(95,40,qs),
(40,96,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(408,226,o)
);
},
{
closed = 1;
nodes = (
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,150,o),
(194,101,o),
(226,101,qs),
(265,101,o),
(290,120,q),
(290,122,o),
(290,127,qs),
(291,135,o),
(291,139,qs),
(292,208,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
34 1 0 1 76 74 72 3 10 11 52 1 6 10 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 8 1 7 0 9 7 9 101 0 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 6 7 6 8 7 128 0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 0 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 0 7 0 9 7 9 101 0 10 10 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 64 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 11 10 5 11 105 0 10 0 6 8 10 6 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
85 83 79 77 66 64 34 35 38 43 35 36 35 51 53 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,12,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,93,ls),
(161,0,o),
(70,0,qs),
(59,0,ls)
);
},
{
closed = 1;
nodes = (
(196,-182,o),
(196,-219,qs),
(196,-225,ls),
(196,-233,o),
(187,-233,qs),
(67,-233,ls),
(47,-233,o),
(29,-241,q),
(27,-243,o),
(26,-243,q),
(21,-246,o),
(19,-246,qs),
(17,-246,o),
(14,-241,q),
(11,-232,o),
(11,-225,qs),
(13,-196,o),
(44,-186,q),
(33,-168,o),
(33,-144,qs),
(33,-108,o),
(77,-60,o),
(112,-59,qs),
(139,-59,o),
(175,-89,o),
(175,-112,qs),
(175,-124,o),
(170,-124,qs),
(169,-124,o),
(163,-121,qs),
(160,-120,o),
(158,-119,qs),
(136,-109,o),
(122,-109,qs),
(86,-109,o),
(86,-145,qs),
(86,-162,o),
(106,-182,o),
(122,-182,qs),
(154,-182,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
25 1 2 3 33 1 5 2 2 76 0 4 0 3 2 4 3 105 7 1 2 0 5 2 5 99 0 1 1 23 77 6 1 0 0 24 0 78 13 12 1 0 47 44 29 27 18 16 12 51 13 50 7 4 0 11 1 10 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,307,q),
(43,316,o),
(43,323,qs),
(45,353,o),
(76,362,q),
(65,380,o),
(65,404,qs),
(65,440,o),
(109,488,o),
(144,489,qs),
(171,490,o),
(207,460,o),
(207,436,qs),
(207,424,o),
(202,424,qs),
(201,424,o),
(195,427,qs),
(192,429,o),
(190,429,q),
(168,439,o),
(154,439,qs),
(118,439,o),
(118,403,qs),
(118,387,o),
(138,366,o),
(154,366,qs),
(186,366,ls),
(228,366,o),
(228,329,qs),
(228,323,ls),
(228,316,o),
(219,316,qs),
(99,316,ls),
(79,316,o),
(61,307,qs),
(59,306,o),
(58,306,q),
(53,303,o),
(51,303,qs),
(49,303,o)
);
},
{
closed = 1;
nodes = (
(625,69,o),
(625,21,qs),
(624,-74,o),
(550,-139,qs),
(466,-214,o),
(337,-214,qs),
(211,-214,o),
(129,-143,qs),
(39,-66,o),
(42,51,qs),
(44,113,o),
(76,165,qs),
(110,223,o),
(166,245,qs),
(178,249,o),
(182,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(151,154,o),
(152,71,qs),
(152,-6,o),
(197,-53,qs),
(247,-106,o),
(341,-106,qs),
(399,-106,o),
(445,-80,qs),
(500,-51,o),
(506,-4,qs),
(508,13,o),
(480,31,o),
(438,39,qs),
(425,42,o),
(421,43,qs),
(273,74,o),
(273,204,qs),
(273,279,o),
(320,331,qs),
(373,391,o),
(459,391,qs),
(537,391,o),
(576,346,qs),
(601,317,o),
(601,283,qs),
(601,252,o),
(583,251,qs),
(577,251,o),
(567,257,qs),
(525,282,o),
(478,282,qs),
(438,282,o),
(390,240,o),
(390,205,qs),
(390,161,o),
(465,146,qs),
(552,126,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
26 1 6 2 34 1 0 1 2 76 0 5 4 8 4 5 8 128 0 8 7 4 8 7 126 0 3 0 2 6 3 2 105 0 1 0 0 4 1 0 103 0 6 0 4 5 6 4 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 91 89 24 45 36 34 46 41 35 51 53 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,12,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,93,ls),
(161,0,o),
(70,0,qs),
(59,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls)
);
},
{
closed = 1;
nodes = (
(434,-96,o),
(434,-121,qs),
(434,-146,o),
(400,-181,o),
(376,-181,qs),
(351,-181,o),
(317,-146,o),
(317,-121,qs),
(317,-96,o),
(351,-62,o),
(376,-62,qs),
(400,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 1 3 133 0 1 0 1 133 7 1 4 0 5 4 5 101 6 1 0 0 2 96 0 2 2 24 2 78 34 33 1 0 40 38 33 44 34 44 28 25 20 17 9 8 0 32 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,568,o),
(64,592,qs),
(64,616,o),
(96,649,o),
(120,649,qs),
(144,649,o),
(176,616,o),
(176,592,qs),
(176,568,o),
(143,535,o),
(120,535,qs),
(97,535,o)
);
},
{
closed = 1;
nodes = (
(193,568,o),
(193,592,qs),
(193,615,o),
(226,649,o),
(249,649,qs),
(272,649,o),
(304,616,o),
(304,592,qs),
(304,568,o),
(272,535,o),
(249,535,qs),
(226,535,o)
);
},
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 39 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
53 52 13 12 1 0 52 63 53 63 47 45 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,407,o),
(261,431,qs),
(261,455,o),
(293,488,o),
(317,488,qs),
(340,488,o),
(373,455,o),
(373,431,qs),
(373,407,o),
(340,374,o),
(317,374,qs),
(293,374,o)
);
},
{
closed = 1;
nodes = (
(389,408,o),
(389,431,qs),
(389,455,o),
(422,488,o),
(446,488,qs),
(469,488,o),
(501,455,o),
(501,431,qs),
(501,408,o),
(469,374,o),
(446,374,qs),
(422,374,o)
);
},
{
closed = 1;
nodes = (
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 7 0 5 0 7 5 128 0 5 4 0 5 4 126 3 1 1 9 2 8 3 0 7 1 0 105 10 1 4 4 6 96 0 6 6 24 6 78 25 24 13 12 1 0 52 49 44 41 33 32 24 56 25 55 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,523,o),
(329,544,qs),
(329,566,o),
(359,597,o),
(381,597,qs),
(402,597,o),
(432,566,o),
(432,544,qs),
(432,523,o),
(402,492,o),
(381,492,qs),
(359,492,o)
);
},
{
closed = 1;
nodes = (
(261,407,o),
(261,431,qs),
(261,454,o),
(293,487,o),
(316,487,qs),
(339,487,o),
(372,454,o),
(372,431,qs),
(372,407,o),
(339,373,o),
(316,373,qs),
(292,373,o)
);
},
{
closed = 1;
nodes = (
(389,407,o),
(389,431,qs),
(389,454,o),
(422,487,o),
(445,487,qs),
(468,487,o),
(501,454,o),
(501,431,qs),
(501,407,o),
(468,373,o),
(445,373,qs),
(421,373,o)
);
},
{
closed = 1;
nodes = (
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 6 8 96 0 8 8 24 8 78 37 36 25 24 13 12 1 0 64 61 56 53 45 44 36 68 37 67 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(382,130,o),
(357,194,qs),
(322,282,o),
(251,282,qs),
(212,282,o),
(175,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(114,225,qs),
(102,226,o),
(101,239,q),
(99,246,o),
(102,260,qs),
(112,316,o),
(157,353,qs),
(203,391,o),
(268,391,qs),
(416,391,o),
(476,213,qs),
(496,151,o),
(516,130,qs),
(527,117,o),
(545,115,qs),
(558,113,o),
(558,101,qs),
(558,54,o),
(501,0,o),
(453,0,qs),
(290,0,ls),
(233,0,o),
(199,-29,qs),
(163,-59,o),
(163,-108,qs),
(163,-157,o),
(196,-190,qs),
(233,-228,o),
(297,-228,qs),
(342,-228,o),
(369,-218,q),
(370,-218,o),
(373,-217,qs),
(378,-215,o),
(381,-215,qs),
(390,-215,o),
(390,-226,qs),
(390,-269,o),
(355,-298,qs),
(315,-331,o),
(249,-331,qs),
(167,-331,o),
(108,-274,qs),
(40,-208,o),
(40,-107,qs),
(40,-21,o),
(91,38,qs),
(157,114,o),
(278,114,qs),
(394,114,l)
);
},
{
closed = 1;
nodes = (
(484,-97,o),
(484,-121,qs),
(484,-144,o),
(454,-176,o),
(431,-176,qs),
(409,-176,o),
(377,-144,o),
(377,-121,qs),
(377,-97,o),
(408,-66,o),
(431,-66,qs),
(454,-66,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 7 0 7 6 0 128 0 5 0 7 6 5 7 105 11 1 8 0 9 2 8 9 105 3 1 2 0 1 2 1 101 10 1 0 0 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 6 7 0 7 6 0 128 0 2 9 3 9 2 3 128 0 5 0 7 6 5 7 105 11 1 8 0 9 2 8 9 105 0 3 0 1 3 1 101 10 1 0 0 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
60 59 1 0 66 64 59 70 60 70 55 53 49 48 41 39 30 27 21 19 14 13 9 7 0 58 1 58 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(394,114,l),
(382,130,o),
(357,194,qs),
(322,282,o),
(251,282,qs),
(212,282,o),
(175,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(114,225,qs),
(102,226,o),
(101,239,q),
(99,246,o),
(102,260,qs),
(112,316,o),
(157,353,qs),
(203,391,o),
(268,391,qs),
(416,391,o),
(476,213,qs),
(496,151,o),
(516,130,qs),
(527,117,o),
(545,115,qs),
(558,113,o),
(558,101,qs),
(558,54,o),
(501,0,o),
(453,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 7 1 0 1 0 101 0 6 6 2 95 0 2 2 24 2 78 1 0 52 50 47 45 41 40 33 31 22 19 13 11 0 58 1 58 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,534,o),
(319,509,qs),
(319,484,o),
(286,449,o),
(261,449,qs),
(237,449,o),
(203,484,o),
(203,509,qs),
(203,534,o),
(237,568,o),
(261,568,qs),
(286,568,o)
);
},
{
closed = 1;
nodes = (
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(394,114,l),
(382,130,o),
(357,194,qs),
(322,282,o),
(251,282,qs),
(212,282,o),
(175,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(114,225,qs),
(102,226,o),
(101,239,q),
(99,246,o),
(102,260,qs),
(112,316,o),
(157,353,qs),
(203,391,o),
(268,391,qs),
(416,391,o),
(476,213,qs),
(496,151,o),
(516,130,qs),
(527,117,o),
(545,115,qs),
(558,113,o),
(558,101,qs),
(558,54,o),
(501,0,o),
(453,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 10 1 2 3 2 101 0 1 1 0 97 9 1 0 0 23 77 0 8 8 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 6 7 8 7 6 8 128 9 1 0 0 1 5 0 1 105 0 5 0 7 6 5 7 105 0 3 10 1 2 3 2 101 0 8 8 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 64 62 59 57 53 52 45 43 34 31 25 23 12 70 13 70 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(283,389,o),
(327,339,qs),
(378,283,o),
(378,188,qs),
(378,111,o),
(332,59,qs),
(280,0,o),
(194,0,qs),
(56,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 1 3 1 2 4 1 2 105 0 4 4 0 95 5 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 28 25 21 19 14 13 9 7 0 34 1 33 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 425;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,525,o),
(200,500,qs),
(200,475,o),
(166,441,o),
(141,441,qs),
(117,441,o),
(83,475,o),
(83,500,qs),
(83,525,o),
(117,559,o),
(141,559,qs),
(166,559,o)
);
},
{
closed = 1;
nodes = (
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(283,389,o),
(327,339,qs),
(378,283,o),
(378,188,qs),
(378,111,o),
(332,59,qs),
(280,0,o),
(194,0,qs),
(56,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 3 5 1 4 6 3 4 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 40 37 33 31 26 25 21 19 12 46 13 45 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 425;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 3 0 3 133 1 4 2 0 2 2 0 89 1 4 2 0 0 2 98 0 2 0 2 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 98 0 2 0 2 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 19 16 11 9 5 3 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,515,o),
(234,490,qs),
(234,465,o),
(200,431,o),
(176,431,qs),
(152,431,o),
(118,465,o),
(118,490,qs),
(118,515,o),
(151,549,o),
(176,549,qs),
(201,549,o)
);
},
{
closed = 1;
nodes = (
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 5 1 2 1 5 2 128 3 7 2 2 0 4 2 4 102 0 1 1 0 97 6 1 0 0 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 7 1 2 0 4 2 4 102 0 1 1 0 97 6 1 0 0 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
13 12 1 0 31 28 23 21 17 15 12 35 13 35 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1054,372,o),
(1054,360,qs),
(1054,177,ls),
(1054,97,o),
(1015,48,qs),
(968,-10,o),
(877,-10,qs),
(799,-10,o),
(756,32,q),
(713,-10,o),
(646,-10,qs),
(603,-10,o),
(564,10,q),
(548,-89,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,233,ls),
(456,327,o),
(547,327,qs),
(557,327,ls),
(570,327,o),
(570,314,qs),
(570,179,ls),
(570,101,o),
(633,101,qs),
(698,101,o),
(698,179,qs),
(698,257,ls),
(698,349,o),
(789,349,qs),
(799,349,ls),
(812,349,o),
(812,338,qs),
(812,179,ls),
(812,101,o),
(876,101,qs),
(940,101,o),
(940,179,qs),
(940,279,ls),
(940,372,o),
(1031,372,qs),
(1042,372,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 53 2 8 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 102 3 1 1 1 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 106 0 5 7 7 5 89 0 5 5 7 98 0 7 5 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 60 58 56 54 50 48 39 38 30 28 23 20 17 15 12 9 6 4 0 66 1 65 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1108;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(706,558,o),
(706,580,qs),
(706,602,o),
(735,632,o),
(757,632,qs),
(778,632,o),
(808,601,o),
(808,580,qs),
(808,559,o),
(778,528,o),
(757,528,qs),
(735,528,o)
);
},
{
closed = 1;
nodes = (
(637,442,o),
(637,466,qs),
(637,490,o),
(669,523,o),
(692,523,qs),
(715,523,o),
(748,490,o),
(748,466,qs),
(748,442,o),
(715,409,o),
(692,409,qs),
(669,409,o)
);
},
{
closed = 1;
nodes = (
(798,523,o),
(821,523,qs),
(844,523,o),
(877,490,o),
(877,466,qs),
(877,442,o),
(844,409,o),
(821,409,qs),
(798,409,o),
(765,442,o),
(765,466,qs),
(765,490,o)
);
},
{
closed = 1;
nodes = (
(1054,372,o),
(1054,360,qs),
(1054,177,ls),
(1054,97,o),
(1015,48,qs),
(968,-10,o),
(877,-10,qs),
(799,-10,o),
(756,32,q),
(713,-10,o),
(646,-10,qs),
(603,-10,o),
(564,10,q),
(548,-89,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,233,ls),
(456,327,o),
(547,327,qs),
(557,327,ls),
(570,327,o),
(570,314,qs),
(570,179,ls),
(570,101,o),
(633,101,qs),
(698,101,o),
(698,179,qs),
(698,257,ls),
(698,349,o),
(789,349,qs),
(799,349,ls),
(812,349,o),
(812,338,qs),
(812,179,ls),
(812,101,o),
(876,101,qs),
(940,101,o),
(940,179,qs),
(940,279,ls),
(940,372,o),
(1031,372,qs),
(1042,372,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
93 89 2 14 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 102 9 1 7 7 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 0 1 16 1 0 3 1 0 105 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 106 0 11 13 13 11 89 0 11 11 13 98 0 13 11 13 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
37 36 13 12 1 0 96 94 92 90 86 84 75 74 66 64 59 56 53 51 48 45 42 40 36 102 37 101 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1108;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1128,339,qs),
(1190,283,o),
(1190,189,qs),
(1190,108,o),
(1142,57,qs),
(1090,0,o),
(1007,0,qs),
(624,0,ls),
(592,0,o),
(564,11,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,189,ls),
(571,114,o),
(633,114,q),
(674,229,o),
(754,302,qs),
(853,391,o),
(982,391,qs),
(1072,391,o)
);
},
{
closed = 1;
nodes = (
(1033,114,o),
(1073,161,o),
(1072,196,qs),
(1072,236,o),
(1020,282,o),
(976,282,qs),
(911,282,o),
(857,243,qs),
(797,199,o),
(760,114,q),
(1001,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 7 1 7 4 1 128 2 9 2 0 0 7 4 0 7 105 0 3 0 5 3 5 102 10 8 2 1 1 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 102 10 8 2 1 1 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
52 52 1 0 52 62 52 61 57 55 45 42 38 36 27 26 18 16 11 8 5 4 0 51 1 51 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1236;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(886,481,o),
(886,506,qs),
(886,531,o),
(919,566,o),
(944,566,qs),
(969,566,o),
(1002,531,o),
(1002,506,qs),
(1002,481,o),
(968,447,o),
(944,447,qs),
(919,447,o)
);
},
{
closed = 1;
nodes = (
(1128,339,qs),
(1190,283,o),
(1190,189,qs),
(1190,108,o),
(1142,57,qs),
(1090,0,o),
(1007,0,qs),
(624,0,ls),
(592,0,o),
(564,11,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,189,ls),
(571,114,o),
(633,114,q),
(674,229,o),
(754,302,qs),
(853,391,o),
(982,391,qs),
(1072,391,o)
);
},
{
closed = 1;
nodes = (
(1033,114,o),
(1073,161,o),
(1072,196,qs),
(1072,236,o),
(1020,282,o),
(976,282,qs),
(911,282,o),
(857,243,qs),
(797,199,o),
(760,114,q),
(1001,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 6 9 3 9 6 3 128 4 12 2 2 0 9 6 2 9 105 0 5 0 7 5 7 102 11 1 0 0 1 97 0 1 1 23 77 13 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 102 11 1 0 0 1 97 0 1 1 23 77 13 10 2 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 102 13 10 2 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
64 64 13 12 1 0 64 74 64 73 69 67 57 54 50 48 39 38 30 28 23 20 17 16 12 63 13 63 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1236;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,339,qs),
(688,283,o),
(688,189,qs),
(688,108,o),
(640,57,qs),
(589,0,o),
(505,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(143,114,l),
(143,462,ls),
(143,556,o),
(235,556,qs),
(245,556,ls),
(258,556,o),
(258,543,qs),
(258,302,l),
(354,391,o),
(481,391,qs),
(570,391,o)
);
},
{
closed = 1;
nodes = (
(530,114,o),
(571,160,o),
(571,196,qs),
(570,236,o),
(518,282,o),
(473,282,qs),
(410,282,o),
(356,243,qs),
(295,199,o),
(258,114,q),
(499,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 0 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 26 26 1 0 26 36 26 35 31 29 19 16 11 9 7 4 0 25 1 25 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,482,o),
(384,507,qs),
(384,532,o),
(418,566,o),
(442,566,qs),
(467,566,o),
(501,532,o),
(501,507,qs),
(501,482,o),
(467,447,o),
(442,447,qs),
(418,447,o)
);
},
{
closed = 1;
nodes = (
(626,339,qs),
(688,283,o),
(688,189,qs),
(688,108,o),
(640,57,qs),
(589,0,o),
(505,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(143,114,l),
(143,462,ls),
(143,556,o),
(235,556,qs),
(245,556,ls),
(258,556,o),
(258,543,qs),
(258,302,l),
(354,391,o),
(481,391,qs),
(570,391,o)
);
},
{
closed = 1;
nodes = (
(530,114,o),
(571,160,o),
(571,196,qs),
(570,236,o),
(518,282,o),
(473,282,qs),
(410,282,o),
(356,243,qs),
(295,199,o),
(258,114,q),
(499,114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 1 2 0 6 4 2 6 105 8 1 0 0 1 97 3 1 1 1 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 2 0 6 4 2 6 105 0 3 3 23 77 8 1 0 0 1 97 0 1 1 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 0 3 3 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
38 38 13 12 1 0 38 48 38 47 43 41 31 28 23 21 19 16 12 37 13 37 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(470,-203,qs),
(463,-275,o),
(388,-309,qs),
(338,-331,o),
(274,-331,qs),
(177,-331,o),
(113,-275,qs),
(40,-211,o),
(40,-107,qs),
(40,14,o),
(133,74,q),
(82,123,o),
(81,198,qs),
(80,275,o),
(129,329,qs),
(185,391,o),
(273,391,qs),
(332,391,o),
(372,363,qs),
(418,332,o),
(417,281,qs),
(416,252,o),
(399,251,qs),
(392,251,o),
(383,257,qs),
(340,282,o),
(291,282,qs),
(248,283,o),
(197,236,o),
(197,197,qs),
(197,161,o),
(241,114,o),
(276,114,qs),
(373,114,ls),
(416,114,o),
(470,68,o),
(470,30,qs),
(470,20,ls),
(470,8,o),
(462,0,o),
(448,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(380,-213,qs),
(404,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
45 1 1 2 55 1 0 1 2 76 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 0 0 0 6 0 6 101 0 2 2 1 95 0 1 1 24 1 78 42 36 34 36 53 54 37 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,484,o),
(200,508,qs),
(200,533,o),
(234,568,o),
(258,568,qs),
(283,568,o),
(317,534,o),
(317,508,qs),
(317,483,o),
(283,449,o),
(258,449,qs),
(234,449,o)
);
},
{
closed = 1;
nodes = (
(470,-203,qs),
(463,-275,o),
(388,-309,qs),
(338,-331,o),
(274,-331,qs),
(177,-331,o),
(113,-275,qs),
(40,-211,o),
(40,-107,qs),
(40,14,o),
(133,74,q),
(82,123,o),
(81,198,qs),
(80,275,o),
(129,329,qs),
(185,391,o),
(273,391,qs),
(332,391,o),
(372,363,qs),
(418,332,o),
(417,281,qs),
(416,252,o),
(399,251,qs),
(392,251,o),
(383,257,qs),
(340,282,o),
(291,282,qs),
(248,283,o),
(197,236,o),
(197,197,qs),
(197,161,o),
(241,114,o),
(276,114,qs),
(373,114,ls),
(416,114,o),
(470,68,o),
(470,30,qs),
(470,20,ls),
(470,8,o),
(462,0,o),
(448,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(380,-213,qs),
(404,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
57 1 3 4 67 1 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 9 1 0 0 1 97 0 1 1 23 77 0 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 6 5 4 5 6 4 128 0 1 9 1 0 7 1 0 105 0 7 0 5 6 7 5 105 0 2 0 8 2 8 101 0 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 64 62 52 50 46 44 42 40 36 33 28 25 19 17 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,0,l),
(-1,0,l),
(-1,114,l),
(115,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,483,o),
(574,508,qs),
(574,533,o),
(608,568,o),
(633,568,qs),
(658,568,o),
(691,534,o),
(691,508,qs),
(691,483,o),
(657,449,o),
(633,449,qs),
(608,449,o)
);
},
{
closed = 1;
nodes = (
(755,345,qs),
(815,290,o),
(815,195,qs),
(815,113,o),
(769,60,qs),
(718,1,o),
(635,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(469,114,l),
(450,148,o),
(449,195,qs),
(449,277,o),
(496,331,qs),
(548,391,o),
(632,391,qs),
(705,391,o)
);
},
{
closed = 1;
nodes = (
(698,162,o),
(698,198,qs),
(698,234,o),
(661,282,o),
(633,282,qs),
(605,282,o),
(567,234,o),
(567,198,qs),
(567,163,o),
(605,114,o),
(633,114,qs),
(661,114,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 2 7 2 4 7 128 9 1 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 10 6 2 3 3 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 7 2 4 7 128 0 1 8 1 0 2 1 0 105 9 1 2 0 7 3 2 7 105 10 6 2 3 3 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
49 48 13 12 1 0 55 53 48 59 49 59 41 38 28 27 20 18 12 47 13 47 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,478,o),
(337,502,qs),
(337,526,o),
(370,559,o),
(393,559,qs),
(417,559,o),
(449,526,o),
(449,502,qs),
(449,478,o),
(417,445,o),
(393,445,qs),
(370,445,o)
);
},
{
closed = 1;
nodes = (
(466,478,o),
(466,502,qs),
(466,525,o),
(499,559,o),
(522,559,qs),
(545,559,o),
(578,526,o),
(578,502,qs),
(578,478,o),
(545,445,o),
(522,445,qs),
(499,445,o)
);
},
{
closed = 1;
nodes = (
(643,112,qs),
(642,-34,o),
(573,-119,qs),
(495,-215,o),
(341,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(111,223,o),
(167,245,qs),
(178,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(341,-106,qs),
(476,-106,o),
(513,2,q),
(480,-10,o),
(449,-10,qs),
(378,-10,o),
(329,40,qs),
(274,96,o),
(274,187,qs),
(274,276,o),
(321,331,qs),
(372,391,o),
(458,391,qs),
(577,391,o),
(620,281,qs),
(644,223,o)
);
},
{
closed = 1;
nodes = (
(428,101,o),
(460,101,qs),
(500,101,o),
(524,120,q),
(524,122,o),
(525,127,q),
(525,135,o),
(525,139,qs),
(526,209,o),
(515,238,qs),
(498,282,o),
(458,282,qs),
(428,282,o),
(392,233,o),
(392,193,qs),
(392,150,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
73 1 10 7 36 1 5 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 9 10 9 7 10 128 0 4 0 9 7 4 9 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 10 10 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 9 10 9 7 10 128 0 4 0 9 7 4 9 105 0 10 0 5 6 10 5 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 78 76 68 66 59 57 48 47 39 37 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(704,556,o),
(704,544,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,462,ls),
(589,556,o),
(680,556,qs),
(691,556,ls)
);
},
{
closed = 1;
nodes = (
(272,267,q),
(267,288,o),
(287,319,o),
(309,326,q),
(293,348,o),
(293,372,qs),
(293,411,o),
(344,464,o),
(382,464,qs),
(414,465,o),
(456,434,o),
(456,410,qs),
(456,394,o),
(448,394,qs),
(445,394,o),
(437,399,q),
(434,400,o),
(433,401,q),
(415,410,o),
(394,410,qs),
(351,410,o),
(351,372,qs),
(351,354,o),
(377,331,o),
(397,331,qs),
(432,331,ls),
(478,331,o),
(478,290,qs),
(478,285,ls),
(478,275,o),
(468,275,qs),
(333,275,ls),
(306,275,o),
(289,267,qs),
(281,263,o),
(278,263,qs),
(274,263,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
65 1 2 5 33 1 1 4 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
65 1 2 6 33 1 1 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
65 1 2 5 33 1 1 4 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 5 4 5 2 4 128 0 8 7 1 6 5 8 6 105 0 5 0 4 1 5 4 103 9 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 8 7 1 6 2 8 6 105 5 1 2 0 4 1 2 4 103 9 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 5 4 5 2 4 128 0 8 7 1 6 5 8 6 105 0 5 0 4 1 5 4 103 9 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 6 5 6 7 5 128 0 2 5 4 5 2 4 128 0 8 0 6 7 8 6 105 0 5 0 4 1 5 4 103 9 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 61 59 56 54 50 48 45 42 39 36 26 23 15 14 7 4 0 32 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,79,ls),
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 102 0 1 1 23 1 78 1 0 25 24 16 14 9 6 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(521,324,qs),
(564,265,o),
(564,179,qs),
(564,96,o),
(522,47,qs),
(474,-10,o),
(383,-10,qs),
(304,-10,o),
(222,32,q),
(204,32,ls),
(147,30,o),
(147,-40,qs),
(147,-196,ls),
(147,-288,o),
(55,-288,qs),
(45,-288,ls),
(32,-288,o),
(32,-277,qs),
(32,-38,ls),
(32,118,o),
(163,142,q),
(170,151,o),
(182,177,qs),
(190,193,o),
(194,201,qs),
(248,314,o),
(325,391,o),
(384,391,qs),
(472,391,o)
);
},
{
closed = 1;
nodes = (
(445,181,qs),
(445,282,o),
(390,282,qs),
(372,282,o),
(337,233,o),
(308,167,qs),
(295,141,o),
(286,127,q),
(342,99,o),
(388,101,qs),
(445,104,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 2 4 3 4 2 3 128 0 1 3 1 134 6 1 0 0 5 4 0 5 105 7 1 4 2 3 4 89 7 1 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
30 29 1 0 37 35 29 39 30 39 22 20 19 17 14 11 0 28 1 28 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(356,419,o),
(356,393,qs),
(356,368,o),
(322,334,o),
(298,334,qs),
(273,334,o),
(239,368,o),
(239,393,qs),
(239,418,o),
(273,453,o),
(298,453,qs),
(323,453,o)
);
},
{
closed = 1;
nodes = (
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,79,ls),
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 98 7 1 2 4 2 82 13 12 1 0 37 36 28 26 21 18 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 15 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 39 29 39 23 21 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(409,127,qs),
(409,-39,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(231,-104,o),
(285,-46,o),
(291,6,q),
(253,-10,o),
(215,-10,qs),
(144,-10,o),
(95,40,qs),
(40,96,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(408,226,o)
);
},
{
closed = 1;
nodes = (
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,150,o),
(194,101,o),
(226,101,qs),
(265,101,o),
(290,120,q),
(290,122,o),
(290,127,qs),
(291,135,o),
(291,139,qs),
(292,208,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
36 34 32 3 5 6 12 1 1 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 6 5 0 6 105 3 1 2 0 4 2 4 101 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 0 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
36 43 36 34 35 38 33 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,-53,qs),
(247,-106,o),
(341,-106,qs),
(399,-106,o),
(445,-80,qs),
(500,-51,o),
(506,-4,qs),
(508,13,o),
(480,31,o),
(438,39,qs),
(425,42,o),
(421,43,qs),
(273,74,o),
(273,204,qs),
(273,279,o),
(320,331,qs),
(373,391,o),
(459,391,qs),
(537,391,o),
(576,346,qs),
(601,317,o),
(601,283,qs),
(601,252,o),
(583,251,qs),
(577,251,o),
(567,257,qs),
(525,282,o),
(478,282,qs),
(438,282,o),
(390,240,o),
(390,205,qs),
(390,161,o),
(465,146,qs),
(552,126,o),
(625,69,o),
(625,21,qs),
(624,-74,o),
(550,-139,qs),
(466,-214,o),
(337,-214,qs),
(211,-214,o),
(129,-143,qs),
(39,-66,o),
(42,51,qs),
(44,113,o),
(76,165,qs),
(110,223,o),
(166,245,qs),
(178,249,o),
(182,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(151,154,o),
(152,71,qs),
(152,-6,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 45 36 34 42 41 21 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,-53,qs),
(247,-106,o),
(341,-106,qs),
(399,-106,o),
(445,-80,qs),
(500,-51,o),
(506,-4,qs),
(508,13,o),
(480,31,o),
(438,39,qs),
(425,42,o),
(421,43,qs),
(273,74,o),
(273,204,qs),
(273,279,o),
(320,331,qs),
(373,391,o),
(459,391,qs),
(537,391,o),
(576,346,qs),
(601,317,o),
(601,283,qs),
(601,252,o),
(583,251,qs),
(577,251,o),
(567,257,qs),
(525,282,o),
(478,282,qs),
(438,282,o),
(390,240,o),
(390,205,qs),
(390,161,o),
(465,146,qs),
(552,126,o),
(625,69,o),
(625,21,qs),
(624,-74,o),
(550,-139,qs),
(466,-214,o),
(337,-214,qs),
(211,-214,o),
(129,-143,qs),
(39,-66,o),
(42,51,qs),
(44,113,o),
(76,165,qs),
(110,223,o),
(166,245,qs),
(178,249,o),
(182,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(151,154,o),
(152,71,qs),
(152,-6,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(217,-345,o),
(217,-321,qs),
(217,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(402,-378,qs),
(379,-378,o),
(346,-345,o),
(346,-321,qs),
(346,-297,o),
(379,-264,o),
(402,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 0 1 6 5 1 105 11 8 10 3 6 7 7 6 89 11 8 10 3 6 6 7 97 9 1 7 6 7 81 70 69 58 57 76 74 69 80 70 80 64 62 57 68 58 68 45 36 34 42 41 21 12 7 28 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,756,ls),
(192,756,o),
(192,719,qs),
(192,713,ls),
(192,706,o),
(182,706,qs),
(59,706,ls),
(37,706,o),
(18,696,qs),
(13,693,o),
(11,693,qs),
(9,693,o),
(6,698,q),
(3,706,o),
(3,713,qs),
(5,755,o),
(60,756,qs),
(116,756,l)
);
},
{
closed = 1;
nodes = (
(150,667,ls),
(192,667,o),
(192,630,qs),
(192,624,ls),
(192,617,o),
(182,617,qs),
(59,617,ls),
(37,617,o),
(18,607,qs),
(13,604,o),
(11,604,qs),
(9,604,o),
(6,609,q),
(3,617,o),
(3,624,qs),
(5,666,o),
(60,667,qs),
(116,667,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 30 27 18 35 19 33 12 9 0 17 1 15 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,606,o),
(250,578,qs),
(250,553,o),
(219,524,q),
(233,499,o),
(206,479,qs),
(201,476,o),
(196,481,qs),
(180,496,l),
(149,473,ls),
(133,460,o),
(114,460,qs),
(100,460,o),
(78,483,q),
(68,496,o),
(60,496,qs),
(52,496,o),
(41,472,qs),
(37,461,o),
(29,470,qs),
(12,492,o),
(22,519,qs),
(31,547,o),
(60,547,qs),
(81,547,o),
(105,523,qs),
(106,522,ls),
(118,512,o),
(123,512,qs),
(127,512,o),
(132,516,qs),
(147,527,l),
(120,554,o),
(120,580,qs),
(120,608,o),
(156,642,o),
(185,642,qs),
(215,641,o)
);
},
{
closed = 1;
nodes = (
(206,580,qs),
(206,588,o),
(195,601,o),
(187,601,qs),
(165,601,o),
(166,580,qs),
(166,567,o),
(184,551,q),
(206,567,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 64 values pushed */
33 5 2 1 2 1 76 28 1 3 1 75 6 1 0 0 5 2 0 5 105 0 1 3 4 1 89 0 2 0 3 4 2 3 105 0 1 1 4 97 0 4 1 4 81 1 0 43 41 26 24 22 20 14 12 9 7 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-62,ls),
(191,-62,o),
(191,-99,qs),
(191,-104,ls),
(191,-112,o),
(181,-112,qs),
(58,-112,ls),
(36,-112,o),
(17,-122,qs),
(12,-124,o),
(10,-124,qs),
(8,-124,o),
(5,-120,q),
(2,-112,o),
(2,-104,qs),
(4,-63,o),
(59,-62,qs),
(115,-62,l)
);
},
{
closed = 1;
nodes = (
(149,-151,ls),
(191,-151,o),
(191,-188,qs),
(191,-193,ls),
(191,-201,o),
(181,-201,qs),
(58,-201,ls),
(36,-201,o),
(17,-211,qs),
(12,-213,o),
(10,-213,qs),
(8,-213,o),
(5,-209,q),
(2,-201,o),
(2,-193,qs),
(4,-152,o),
(59,-151,qs),
(115,-151,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 87 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 30 27 18 35 19 33 12 9 0 17 1 15 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(150,667,ls),
(192,667,o),
(192,630,qs),
(192,624,ls),
(192,617,o),
(182,617,qs),
(59,617,ls),
(37,617,o),
(18,607,qs),
(13,604,o),
(11,604,qs),
(9,604,o),
(6,609,q),
(3,617,o),
(3,624,qs),
(5,666,o),
(60,667,qs),
(116,667,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 12 9 0 17 1 15 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,529,q),
(178,504,o),
(151,483,q),
(145,480,o),
(140,485,qs),
(124,501,l),
(115,494,o),
(103,486,qs),
(82,471,o),
(76,467,qs),
(63,459,o),
(50,459,qs),
(30,459,o),
(19,474,qs),
(16,478,l),
(14,483,o),
(18,484,q),
(35,494,o),
(90,532,q),
(65,560,o),
(65,585,qs),
(65,612,o),
(101,647,o),
(130,647,qs),
(159,645,o),
(195,611,o),
(195,583,qs),
(195,557,o)
);
},
{
closed = 1;
nodes = (
(139,606,o),
(131,606,qs),
(110,606,o),
(110,584,qs),
(111,572,o),
(128,556,q),
(150,571,o),
(150,584,qs),
(150,593,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
32 30 26 21 12 8 6 1 2 1 76 0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 35 33 42 34 3 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-62,ls),
(191,-62,o),
(191,-99,qs),
(191,-104,ls),
(191,-112,o),
(181,-112,qs),
(58,-112,ls),
(36,-112,o),
(17,-122,qs),
(12,-124,o),
(10,-124,qs),
(8,-124,o),
(5,-120,q),
(2,-112,o),
(2,-104,qs),
(4,-63,o),
(59,-62,qs),
(115,-62,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 0 1 0 1 79 1 0 12 9 0 17 1 15 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,494,o),
(2,522,qs),
(2,551,o),
(40,588,o),
(69,588,qs),
(98,588,o),
(135,551,o),
(135,522,qs),
(135,494,o),
(98,457,o),
(69,457,qs),
(40,457,o)
);
},
{
closed = 1;
nodes = (
(91,522,qs),
(91,547,o),
(69,547,qs),
(46,547,o),
(46,522,qs),
(46,497,o),
(69,497,qs),
(91,497,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 17 15 12 19 13 19 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,639,qs),
(39,638,o),
(37,636,q),
(32,628,o),
(29,627,qs),
(25,626,o),
(23,630,qs),
(11,651,o),
(17,672,qs),
(25,703,o),
(61,701,qs),
(76,701,o),
(109,687,qs),
(150,671,o),
(160,671,qs),
(174,671,o),
(185,687,qs),
(186,688,o),
(188,690,q),
(193,698,o),
(196,699,qs),
(200,700,o),
(202,696,qs),
(213,676,o),
(208,654,qs),
(201,623,o),
(164,625,qs),
(149,625,o),
(116,639,qs),
(75,656,o),
(65,656,qs),
(51,656,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 50 values pushed */
10 1 2 3 26 1 1 0 2 76 0 2 0 1 2 89 0 3 4 1 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 1 0 21 19 17 15 5 3 0 31 1 31 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(213,662,o),
(213,624,qs),
(213,619,ls),
(213,611,o),
(204,611,qs),
(84,611,ls),
(64,611,o),
(46,602,qs),
(44,601,o),
(43,601,q),
(38,598,o),
(36,598,qs),
(34,598,o),
(31,603,q),
(28,612,o),
(28,619,qs),
(30,648,o),
(61,658,q),
(50,676,o),
(50,699,qs),
(50,736,o),
(94,784,o),
(129,784,qs),
(156,785,o),
(192,755,o),
(192,732,qs),
(192,720,o),
(187,720,qs),
(186,720,o),
(180,723,qs),
(177,724,o),
(175,725,qs),
(153,735,o),
(139,735,qs),
(103,735,o),
(103,699,qs),
(103,682,o),
(123,662,o),
(139,662,qs),
(171,662,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 35 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,-186,o),
(201,-223,qs),
(201,-229,ls),
(201,-237,o),
(192,-237,qs),
(72,-237,ls),
(52,-237,o),
(34,-245,qs),
(32,-246,o),
(31,-247,q),
(26,-249,o),
(24,-249,qs),
(22,-249,o),
(19,-245,q),
(16,-236,o),
(16,-229,qs),
(18,-200,o),
(49,-190,q),
(38,-172,o),
(38,-148,qs),
(38,-112,o),
(82,-64,o),
(117,-63,qs),
(144,-63,o),
(180,-93,o),
(180,-116,qs),
(180,-128,o),
(175,-128,qs),
(174,-128,o),
(168,-125,qs),
(165,-124,o),
(163,-123,qs),
(141,-113,o),
(127,-113,qs),
(91,-113,o),
(91,-149,qs),
(91,-166,o),
(111,-186,o),
(127,-186,qs),
(159,-186,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
13 1 0 1 21 1 3 0 2 76 0 2 0 1 0 2 1 105 4 1 0 3 3 0 89 4 1 0 0 3 95 0 3 0 3 79 1 0 35 32 17 15 6 4 0 39 1 38 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,573,q),
(248,433,l),
(244,419,o),
(229,419,qs),
(199,419,ls),
(184,419,o),
(180,433,q),
(125,573,l),
(122,583,o),
(132,583,qs),
(176,583,o),
(191,545,qs),
(214,488,l),
(237,545,ls),
(251,583,o),
(295,583,qs),
(306,583,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 76 1 3 2 0 2 0 133 0 2 2 118 1 0 13 10 7 5 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,135,qs),
(338,174,o),
(338,277,qs),
(338,367,o),
(320,408,qs),
(299,457,o),
(244,457,qs),
(195,457,o),
(174,421,qs),
(150,381,o),
(150,277,qs),
(150,186,o),
(167,147,qs),
(188,99,o),
(244,99,qs),
(293,99,o)
);
},
{
closed = 1;
nodes = (
(31,277,qs),
(31,408,o),
(78,481,qs),
(132,566,o),
(244,566,qs),
(341,566,o),
(395,501,qs),
(457,426,o),
(457,277,qs),
(457,147,o),
(410,74,qs),
(356,-10,o),
(244,-10,qs),
(31,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 29 17 29 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,409,ls),
(28,404,o),
(28,418,qs),
(28,506,ls),
(28,520,o),
(43,526,qs),
(99,546,ls),
(127,556,o),
(151,556,qs),
(176,556,ls),
(246,556,o),
(246,489,qs),
(246,106,l),
(287,106,ls),
(357,106,o),
(357,40,qs),
(357,17,ls),
(357,0,o),
(341,0,qs),
(40,0,ls),
(27,0,o),
(27,13,qs),
(27,93,ls),
(27,106,o),
(40,106,qs),
(130,106,l),
(130,441,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,106,o),
(428,42,qs),
(428,17,ls),
(428,0,o),
(412,0,qs),
(41,0,ls),
(28,0,o),
(28,13,qs),
(28,110,o),
(76,175,qs),
(108,219,o),
(178,264,qs),
(241,304,o),
(253,314,qs),
(300,352,o),
(300,400,qs),
(300,429,o),
(258,463,o),
(220,463,qs),
(155,463,o),
(85,427,qs),
(78,423,o),
(72,423,qs),
(65,423,o),
(62,432,qs),
(53,459,ls),
(32,523,o),
(97,545,qs),
(162,566,o),
(229,566,qs),
(309,566,o),
(358,533,qs),
(420,491,o),
(420,406,qs),
(420,341,o),
(379,289,qs),
(347,248,o),
(266,196,qs),
(213,160,o),
(177,126,o),
(173,106,q),
(358,106,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 59 35 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,166,qs),
(420,94,o),
(372,46,qs),
(314,-10,o),
(212,-10,qs),
(124,-10,o),
(70,34,qs),
(18,76,o),
(18,135,qs),
(18,161,o),
(36,161,qs),
(42,161,o),
(53,152,qs),
(123,92,o),
(203,92,qs),
(250,92,o),
(303,134,o),
(303,171,qs),
(303,230,o),
(225,230,qs),
(162,230,ls),
(127,230,o),
(97,256,o),
(97,287,qs),
(97,317,ls),
(97,336,o),
(112,336,qs),
(208,336,ls),
(284,336,o),
(284,401,qs),
(284,431,o),
(242,465,o),
(205,465,qs),
(141,465,o),
(73,429,qs),
(64,424,o),
(58,424,qs),
(51,424,o),
(48,433,qs),
(39,459,ls),
(18,523,o),
(83,545,qs),
(148,566,o),
(213,566,qs),
(289,566,o),
(339,534,qs),
(402,493,o),
(402,413,qs),
(402,375,o),
(360,310,o),
(323,291,q),
(420,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 51 35 21 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,426,l),
(137,216,l),
(273,216,l)
);
},
{
closed = 1;
nodes = (
(11,109,o),
(11,122,qs),
(11,186,ls),
(11,200,o),
(21,217,qs),
(218,531,ls),
(234,556,o),
(262,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,216,l),
(414,216,ls),
(484,216,o),
(484,149,qs),
(484,126,ls),
(484,109,o),
(468,109,qs),
(389,109,l),
(388,13,ls),
(388,0,o),
(376,0,qs),
(286,0,ls),
(273,0,o),
(273,13,qs),
(273,109,l),
(24,109,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 0 4 1 76 3 6 2 0 7 5 2 2 1 0 2 104 0 4 4 23 77 0 1 1 24 1 78 3 3 0 0 3 29 3 28 22 19 17 15 12 10 8 5 0 2 0 2 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,368,o),
(238,368,qs),
(322,368,o),
(373,326,qs),
(430,278,o),
(430,190,qs),
(430,105,o),
(375,50,qs),
(314,-10,o),
(219,-10,qs),
(137,-10,o),
(82,28,qs),
(22,70,o),
(22,130,qs),
(22,157,o),
(40,157,qs),
(47,157,o),
(58,148,qs),
(122,92,o),
(206,92,qs),
(314,92,o),
(314,187,qs),
(314,223,o),
(256,266,o),
(207,266,qs),
(135,266,o),
(62,243,qs),
(46,239,o),
(46,254,qs),
(46,543,ls),
(46,556,o),
(59,556,qs),
(330,556,ls),
(400,556,o),
(400,489,qs),
(400,466,ls),
(400,449,o),
(384,449,qs),
(157,449,l),
(157,359,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,93,o),
(249,93,qs),
(290,93,o),
(344,147,o),
(344,189,qs),
(344,232,o),
(289,288,o),
(247,288,qs),
(205,288,o),
(149,232,o),
(149,189,qs),
(149,147,o)
);
},
{
closed = 1;
nodes = (
(269,386,qs),
(349,386,o),
(402,334,qs),
(459,279,o),
(459,199,qs),
(459,115,o),
(410,58,qs),
(351,-10,o),
(250,-10,qs),
(161,-10,o),
(101,38,qs),
(32,94,o),
(32,186,qs),
(32,225,o),
(64,308,o),
(105,374,qs),
(216,555,ls),
(223,566,o),
(236,566,qs),
(274,566,o),
(289,535,qs),
(307,497,o),
(278,449,qs),
(238,383,l),
(254,386,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 0 1 4 0 106 0 2 2 23 77 0 1 1 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 4 2 133 0 4 0 0 1 4 0 106 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 40 38 36 34 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,449,o),
(20,462,qs),
(20,543,ls),
(20,556,o),
(33,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,476,ls),
(389,448,o),
(376,419,qs),
(195,13,ls),
(189,0,o),
(176,0,qs),
(79,0,ls),
(73,0,o),
(68,8,o),
(71,13,q),
(266,449,l),
(33,449,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 19 0 18 54 51 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,83,o),
(245,83,qs),
(289,83,o),
(345,126,o),
(345,160,qs),
(345,240,o),
(245,240,qs),
(144,240,o),
(144,160,qs),
(144,126,o)
);
},
{
closed = 1;
nodes = (
(203,333,o),
(245,333,qs),
(287,333,o),
(335,371,o),
(335,403,qs),
(335,436,o),
(286,474,o),
(245,474,qs),
(203,474,o),
(154,436,o),
(154,403,qs),
(154,371,o)
);
},
{
closed = 1;
nodes = (
(40,417,qs),
(40,481,o),
(90,521,qs),
(146,566,o),
(245,566,qs),
(330,566,o),
(385,532,qs),
(449,491,o),
(449,417,qs),
(449,329,o),
(366,290,q),
(462,256,o),
(462,159,qs),
(462,90,o),
(413,45,qs),
(354,-10,o),
(245,-10,qs),
(149,-10,o),
(91,33,qs),
(27,80,o),
(27,159,qs),
(27,256,o),
(123,290,q),
(40,329,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 36 35 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,324,o),
(337,367,qs),
(337,409,o),
(281,462,o),
(238,462,qs),
(196,462,o),
(142,408,o),
(142,367,qs),
(142,322,o),
(195,267,o),
(240,267,qs),
(282,267,o)
);
},
{
closed = 1;
nodes = (
(213,170,qs),
(134,170,o),
(82,221,qs),
(27,275,o),
(27,353,qs),
(27,440,o),
(79,498,qs),
(139,565,o),
(240,565,qs),
(329,565,o),
(387,518,qs),
(454,463,o),
(454,370,qs),
(454,331,o),
(423,248,o),
(383,183,qs),
(272,3,ls),
(264,-10,o),
(251,-10,qs),
(212,-10,o),
(198,23,qs),
(180,61,o),
(209,107,qs),
(250,174,l),
(230,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 4 2 134 5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 2 134 0 3 0 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 97 0 4 0 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 36 34 28 26 18 16 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,13,qs),
(501,543,ls),
(509,556,o),
(521,556,qs),
(545,556,ls),
(577,556,o),
(600,514,o),
(584,484,qs),
(324,13,ls),
(317,0,o),
(305,0,qs),
(217,0,ls),
(203,0,o)
);
},
{
closed = 1;
nodes = (
(715,162,qs),
(715,205,o),
(679,254,o),
(647,254,qs),
(616,254,o),
(582,206,o),
(582,162,qs),
(582,72,o),
(647,72,qs),
(715,72,o)
);
},
{
closed = 1;
nodes = (
(248,394,qs),
(248,437,o),
(212,486,o),
(180,486,qs),
(149,486,o),
(114,437,o),
(114,394,qs),
(114,303,o),
(180,303,qs),
(248,303,o)
);
},
{
closed = 1;
nodes = (
(542,33,qs),
(495,81,o),
(495,164,qs),
(495,235,o),
(532,281,qs),
(574,335,o),
(647,335,qs),
(711,335,o),
(753,293,qs),
(801,245,o),
(801,164,qs),
(801,93,o),
(764,45,qs),
(721,-9,o),
(647,-9,qs),
(584,-9,o)
);
},
{
closed = 1;
nodes = (
(75,265,qs),
(28,313,o),
(28,396,qs),
(28,467,o),
(65,513,qs),
(107,566,o),
(180,566,qs),
(244,566,o),
(286,525,qs),
(334,477,o),
(334,396,qs),
(334,324,o),
(297,277,qs),
(253,223,o),
(180,223,qs),
(116,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 5 5 1 97 9 1 1 1 23 77 11 1 2 2 0 97 13 6 10 3 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 23 77 0 5 5 9 97 0 9 9 23 77 11 1 2 2 0 97 13 6 10 3 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 23 77 0 5 5 9 97 0 9 9 23 77 10 1 0 0 24 77 11 1 2 2 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 5 7 9 5 105 0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 0 1 1 23 77 10 1 0 0 24 77 11 1 2 2 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 5 7 9 5 105 0 7 0 3 8 7 3 105 12 1 4 14 1 8 2 4 8 105 11 1 2 13 1 6 2 6 101 0 1 1 23 77 10 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
50 49 34 33 24 23 14 13 2 0 58 56 49 64 50 64 42 40 33 48 34 48 29 27 23 32 24 32 19 17 13 22 14 22 9 6 0 12 2 12 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 829;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,34,o),
(28,61,qs),
(28,90,o),
(67,130,o),
(96,130,qs),
(126,130,o),
(165,90,o),
(165,61,qs),
(165,-26,o),
(65,-106,q),
(61,-108,o),
(58,-106,q),
(30,-78,o),
(55,-53,qs),
(79,-30,o),
(84,-8,q),
(59,-4,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 36 36 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,131,o),
(28,157,qs),
(28,187,o),
(67,227,o),
(96,227,qs),
(126,227,o),
(165,187,o),
(165,157,qs),
(165,70,o),
(65,-9,q),
(61,-11,o),
(58,-9,q),
(30,18,o),
(55,43,qs),
(79,66,o),
(84,88,q),
(59,93,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 133 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 133 0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
36 36 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 200;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,384,o),
(30,399,qs),
(50,459,ls),
(54,471,o),
(66,467,qs),
(155,430,l),
(148,526,ls),
(147,539,o),
(161,539,qs),
(225,539,ls),
(239,539,o),
(238,526,qs),
(231,430,l),
(320,467,ls),
(331,471,o),
(336,459,qs),
(356,399,ls),
(361,384,o),
(348,382,q),
(256,359,l),
(318,284,ls),
(325,276,o),
(315,267,q),
(264,230,ls),
(252,222,o),
(246,233,qs),
(193,316,l),
(142,233,ls),
(135,221,o),
(124,230,qs),
(73,267,ls),
(62,275,o),
(70,284,qs),
(132,359,l),
(38,382,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 21 14 7 4 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 23 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 4 1 0 0 2 96 0 2 2 24 2 78 1 0 28 25 20 17 9 8 0 32 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,463,qs),
(17,467,o),
(16,478,qs),
(16,483,o),
(16,486,qs),
(16,507,o),
(15,518,qs),
(11,541,o),
(2,569,qs),
(0,578,o),
(-1,587,qs),
(-2,614,o),
(31,621,q),
(38,621,o),
(42,616,q),
(55,594,o),
(56,553,qs),
(57,527,o),
(50,497,qs),
(46,484,o),
(27,459,o),
(21,458,qs),
(15,456,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 13 values pushed */
19 11 2 0 73 0 0 0 118 24 1 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,631,qs),
(22,630,o),
(20,628,q),
(15,620,o),
(12,619,qs),
(8,618,o),
(6,622,qs),
(-6,643,o),
(0,664,qs),
(8,695,o),
(44,693,qs),
(52,692,o),
(64,689,qs),
(70,688,o),
(71,688,qs),
(77,687,o),
(80,691,qs),
(106,727,o),
(138,749,o),
(162,749,qs),
(190,749,o),
(224,715,o),
(224,687,qs),
(224,660,o),
(180,620,o),
(150,620,qs),
(127,620,o),
(90,635,qs),
(59,647,o),
(48,647,qs),
(34,647,o)
);
},
{
closed = 1;
nodes = (
(179,682,o),
(179,692,qs),
(179,707,o),
(162,707,qs),
(144,707,o),
(120,674,q),
(135,667,o),
(149,667,qs),
(161,667,o)
);
},
{
closed = 1;
nodes = (
(50,0,o),
(50,12,qs),
(50,462,ls),
(50,556,o),
(142,556,qs),
(152,556,ls),
(165,556,o),
(165,543,qs),
(165,93,ls),
(165,0,o),
(74,0,qs),
(63,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 4 3 25 1 7 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
9 1 4 3 0 3 4 0 128 0 1 0 7 5 1 114 0 2 0 5 3 2 5 105 0 3 8 1 0 1 3 0 105 0 7 7 23 77 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
9 1 4 3 0 3 4 0 128 0 1 0 7 0 1 7 128 0 2 0 5 3 2 5 105 0 3 8 1 0 1 3 0 105 0 7 7 23 77 10 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 40 32 31 1 0 47 44 40 51 41 50 36 34 31 39 32 39 20 19 11 9 5 3 0 30 1 30 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,382,o),
(282,389,qs),
(282,396,ls),
(283,435,o),
(331,436,q),
(331,561,ls),
(331,614,o),
(375,614,qs),
(380,614,ls),
(386,614,o),
(386,609,qs),
(386,554,l),
(418,554,ls),
(462,554,o),
(511,509,o),
(511,468,qs),
(511,428,o),
(462,382,o),
(418,382,qs),
(289,382,ls)
);
},
{
closed = 1;
nodes = (
(386,436,l),
(420,436,ls),
(435,436,o),
(453,454,o),
(453,468,qs),
(453,483,o),
(435,501,o),
(420,501,qs),
(386,501,l)
);
},
{
closed = 1;
nodes = (
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
8 1 1 2 1 76 0 2 1 2 133 12 1 6 0 8 0 6 8 128 0 8 7 0 8 7 126 5 1 3 10 1 0 6 3 0 104 11 1 4 4 1 97 0 1 1 23 77 0 7 7 9 96 0 9 9 24 9 78 30 29 21 20 1 0 55 52 44 43 36 33 29 61 30 60 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 18 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(704,106,o),
(663,58,qs),
(615,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls)
);
},
{
closed = 1;
nodes = (
(368,-98,o),
(368,-122,qs),
(368,-145,o),
(335,-178,o),
(311,-178,qs),
(288,-178,o),
(256,-145,o),
(256,-122,qs),
(256,-98,o),
(288,-64,o),
(311,-64,qs),
(335,-64,o)
);
},
{
closed = 1;
nodes = (
(496,-98,o),
(496,-122,qs),
(496,-145,o),
(463,-178,o),
(440,-178,qs),
(417,-178,o),
(384,-145,o),
(384,-122,qs),
(384,-98,o),
(417,-64,o),
(440,-64,qs),
(464,-64,o)
);
},
{
closed = 1;
nodes = (
(427,-214,o),
(427,-236,qs),
(427,-257,o),
(397,-288,o),
(376,-288,qs),
(355,-288,o),
(325,-257,o),
(325,-236,qs),
(325,-214,o),
(355,-183,o),
(376,-183,qs),
(397,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
0 3 1 3 133 0 1 0 1 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 10 1 0 0 2 96 0 2 2 24 2 78 58 57 46 45 34 33 1 0 64 62 57 68 58 68 52 50 45 56 46 56 40 38 33 44 34 44 28 25 20 17 9 8 0 32 1 31 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 758;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,-219,o),
(273,-222,qs),
(313,-225,o),
(335,-221,q),
(336,-220,o),
(338,-220,q),
(347,-218,o),
(349,-218,qs),
(358,-218,o),
(358,-230,qs),
(358,-264,o),
(330,-288,qs),
(296,-318,o),
(236,-318,qs),
(156,-318,o),
(102,-265,qs),
(40,-204,o),
(41,-107,qs),
(41,-16,o),
(97,44,qs),
(164,114,o),
(278,114,qs),
(395,114,l),
(382,131,o),
(358,194,qs),
(323,282,o),
(251,282,qs),
(213,282,o),
(176,263,qs),
(153,252,o),
(134,235,qs),
(122,225,o),
(114,225,qs),
(103,226,o),
(101,239,qs),
(100,246,o),
(103,260,qs),
(112,316,o),
(158,353,qs),
(203,391,o),
(268,391,qs),
(416,391,o),
(477,213,qs),
(497,151,o),
(516,130,qs),
(528,117,o),
(546,115,qs),
(559,113,o),
(559,101,qs),
(559,54,o),
(502,0,o),
(453,0,qs),
(279,0,ls),
(230,0,o),
(198,-30,qs),
(164,-62,o),
(164,-111,qs),
(164,-158,o)
);
},
{
closed = 1;
nodes = (
(404,-79,o),
(404,-94,qs),
(404,-109,o),
(384,-129,o),
(369,-129,qs),
(354,-129,o),
(334,-109,o),
(334,-94,qs),
(334,-79,o),
(355,-58,o),
(369,-58,qs),
(384,-58,o)
);
},
{
closed = 1;
nodes = (
(485,-79,o),
(485,-94,qs),
(485,-109,o),
(465,-129,o),
(450,-129,qs),
(435,-129,o),
(414,-108,o),
(414,-94,qs),
(414,-79,o),
(436,-58,o),
(450,-58,qs),
(464,-58,o)
);
},
{
closed = 1;
nodes = (
(443,-154,o),
(443,-168,qs),
(443,-182,o),
(424,-202,o),
(410,-202,qs),
(395,-202,o),
(376,-182,o),
(376,-168,qs),
(376,-154,o),
(396,-134,o),
(410,-134,qs),
(424,-134,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 15 10 14 3 8 11 1 9 12 8 9 105 16 1 12 0 13 6 12 13 105 7 1 6 0 5 6 5 101 0 4 4 0 95 0 0 0 24 0 78 83 82 71 70 59 58 89 87 82 93 83 93 77 75 70 81 71 81 65 63 58 69 59 69 22 20 38 35 36 23 41 51 17 7 30 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,457,o),
(91,464,qs),
(91,471,ls),
(92,510,o),
(140,511,q),
(140,636,ls),
(140,689,o),
(184,689,qs),
(189,689,ls),
(195,689,o),
(195,684,qs),
(195,629,l),
(227,629,ls),
(271,629,o),
(320,584,o),
(320,543,qs),
(320,503,o),
(271,457,o),
(227,457,qs),
(98,457,ls)
);
},
{
closed = 1;
nodes = (
(195,511,l),
(229,511,ls),
(244,511,o),
(262,529,o),
(262,543,qs),
(262,558,o),
(244,576,o),
(229,576,qs),
(195,576,l)
);
},
{
closed = 1;
nodes = (
(327,339,qs),
(378,283,o),
(378,188,qs),
(378,111,o),
(332,59,qs),
(280,0,o),
(194,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(283,389,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
8 1 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 2 133 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 8 1 7 9 6 7 105 0 9 9 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
30 29 21 20 1 0 57 54 49 46 42 40 35 34 29 63 30 63 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 18 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 421;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,615,o),
(293,570,o),
(293,529,qs),
(293,488,o),
(244,443,o),
(200,443,qs),
(71,443,ls),
(64,443,o),
(64,449,qs),
(64,456,ls),
(64,496,o),
(113,496,q),
(113,621,ls),
(113,675,o),
(157,675,qs),
(162,675,ls),
(168,675,o),
(168,669,qs),
(168,615,l),
(200,615,ls)
);
},
{
closed = 1;
nodes = (
(217,496,o),
(235,514,o),
(235,529,qs),
(235,543,o),
(217,562,o),
(202,562,qs),
(168,562,l),
(168,496,l),
(202,496,ls)
);
},
{
closed = 1;
nodes = (
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 3 0 10 1 2 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 3 0 133 12 1 6 2 7 2 6 7 128 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 8 1 7 9 9 7 89 8 1 7 7 9 98 0 9 7 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 0 3 0 133 12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 0 7 9 9 7 89 0 7 7 9 98 0 9 7 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
30 29 20 20 0 0 46 44 40 38 36 34 29 52 30 51 20 28 20 27 23 21 0 19 0 18 36 18 35 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,590,qs),
(211,449,ls),
(207,436,o),
(193,436,qs),
(162,436,ls),
(148,436,o),
(143,449,qs),
(88,590,ls),
(85,599,o),
(95,599,qs),
(139,599,o),
(154,562,qs),
(177,504,l),
(200,562,ls),
(215,599,o),
(259,599,qs),
(269,599,o)
);
},
{
closed = 1;
nodes = (
(231,373,o),
(231,361,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,279,ls),
(117,373,o),
(208,373,qs),
(218,373,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 4 3 133 5 1 4 6 6 4 89 5 1 4 4 6 98 0 6 4 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 98 0 6 4 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
18 17 1 0 34 32 28 26 24 22 17 40 18 39 13 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o)
);
},
{
closed = 1;
nodes = (
(135,-317,o),
(135,-342,qs),
(135,-367,o),
(101,-402,o),
(77,-402,qs),
(53,-402,o),
(19,-367,o),
(19,-342,qs),
(19,-317,o),
(52,-283,o),
(77,-283,qs),
(102,-283,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 3 133 1 6 2 0 0 2 4 0 2 106 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 106 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 1 0 31 29 24 35 25 35 19 16 11 9 5 3 0 23 1 23 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls)
);
},
{
closed = 1;
nodes = (
(156,-293,q),
(101,-433,ls),
(96,-447,o),
(82,-447,qs),
(51,-447,ls),
(38,-447,o),
(33,-433,qs),
(-22,-293,l),
(-25,-283,o),
(-15,-283,qs),
(29,-283,o),
(44,-321,qs),
(66,-378,l),
(90,-321,ls),
(105,-283,o),
(148,-283,qs),
(159,-283,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 1 6 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
7 1 0 1 0 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 2 1 1 3 3 1 89 2 1 1 1 3 98 0 3 1 3 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
7 1 0 2 0 133 0 2 1 2 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 98 0 3 1 3 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 37 34 31 29 24 40 25 40 17 15 11 9 7 5 0 23 1 22 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,581,o),
(121,602,qs),
(121,624,o),
(151,654,o),
(172,654,qs),
(193,654,o),
(223,624,o),
(223,602,qs),
(223,581,o),
(193,550,o),
(172,550,qs),
(151,550,o)
);
},
{
closed = 1;
nodes = (
(52,464,o),
(52,488,qs),
(52,512,o),
(84,545,o),
(107,545,qs),
(131,545,o),
(164,512,o),
(164,488,qs),
(164,464,o),
(131,431,o),
(107,431,qs),
(84,431,o)
);
},
{
closed = 1;
nodes = (
(180,464,o),
(180,488,qs),
(180,512,o),
(213,545,o),
(236,545,qs),
(260,545,o),
(292,512,o),
(292,488,qs),
(292,464,o),
(260,431,o),
(236,431,qs),
(213,431,o)
);
},
{
closed = 1;
nodes = (
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,32,ls),
(231,-80,o),
(193,-143,qs),
(148,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 9 2 6 2 9 6 128 0 1 10 1 0 3 1 0 105 7 13 2 6 0 8 6 8 102 12 4 11 3 2 2 3 97 5 1 3 3 23 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 13 1 6 0 8 6 8 102 12 4 11 3 2 2 3 97 5 1 3 3 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 8 8 6 89 13 1 6 6 8 98 0 8 6 8 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 55 52 47 45 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,345,qs),
(815,290,o),
(815,195,qs),
(815,113,o),
(769,60,qs),
(718,1,o),
(635,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(469,114,l),
(450,148,o),
(449,195,qs),
(449,277,o),
(496,331,qs),
(548,391,o),
(632,391,qs),
(705,391,o)
);
},
{
closed = 1;
nodes = (
(698,162,o),
(698,198,qs),
(698,234,o),
(661,282,o),
(633,282,qs),
(605,282,o),
(567,234,o),
(567,198,qs),
(567,163,o),
(605,114,o),
(633,114,qs),
(661,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 0 5 0 2 5 128 6 1 0 0 5 1 0 5 105 7 4 2 1 1 3 96 0 3 3 24 3 78 37 36 1 0 43 41 36 47 37 47 29 26 16 15 8 6 0 35 1 35 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(581,591,o),
(581,613,qs),
(581,635,o),
(611,665,o),
(632,665,qs),
(653,665,o),
(683,634,o),
(683,613,qs),
(683,591,o),
(653,561,o),
(632,561,qs),
(611,561,o)
);
},
{
closed = 1;
nodes = (
(512,475,o),
(512,499,qs),
(512,523,o),
(544,556,o),
(567,556,qs),
(591,556,o),
(624,522,o),
(624,499,qs),
(624,475,o),
(591,442,o),
(567,442,qs),
(544,442,o)
);
},
{
closed = 1;
nodes = (
(673,556,o),
(697,556,qs),
(720,556,o),
(752,522,o),
(752,499,qs),
(752,475,o),
(720,442,o),
(697,442,qs),
(673,442,o),
(641,475,o),
(641,499,qs),
(641,523,o)
);
},
{
closed = 1;
nodes = (
(755,345,qs),
(815,290,o),
(815,195,qs),
(815,113,o),
(769,60,qs),
(718,1,o),
(635,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(469,114,l),
(450,148,o),
(449,195,qs),
(449,277,o),
(496,331,qs),
(548,391,o),
(632,391,qs),
(705,391,o)
);
},
{
closed = 1;
nodes = (
(698,162,o),
(698,198,qs),
(698,234,o),
(661,282,o),
(633,282,qs),
(605,282,o),
(567,234,o),
(567,198,qs),
(567,163,o),
(605,114,o),
(633,114,qs),
(661,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 6 11 6 8 11 128 0 1 12 1 0 3 1 0 105 14 1 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 15 10 2 7 7 9 96 0 9 9 24 9 78 73 72 37 36 13 12 1 0 79 77 72 83 73 83 65 62 52 51 44 42 36 71 37 71 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 862;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,373,o),
(646,330,qs),
(707,277,o),
(707,182,qs),
(707,104,o),
(659,54,qs),
(608,0,o),
(526,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(523,114,ls),
(554,114,o),
(589,154,o),
(589,189,qs),
(589,223,o),
(551,265,o),
(521,265,qs),
(334,265,ls),
(262,265,o),
(264,322,qs),
(264,344,ls),
(265,387,o),
(295,404,q),
(529,552,ls),
(536,557,o),
(541,554,qs),
(548,549,o),
(557,536,qs),
(572,512,o),
(556,460,o),
(527,442,qs),
(417,373,l),
(523,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 0 0 0 51 0 50 58 23 52 61 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,473,o),
(264,497,qs),
(264,501,o),
(264,514,qs),
(264,519,o),
(264,521,qs),
(264,540,o),
(288,554,qs),
(481,677,ls),
(488,681,o),
(493,676,qs),
(506,660,o),
(506,644,qs),
(506,624,o),
(482,608,qs),
(292,489,ls)
);
},
{
closed = 1;
nodes = (
(596,373,o),
(646,330,qs),
(707,277,o),
(707,182,qs),
(707,104,o),
(659,54,qs),
(608,0,o),
(526,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(523,114,ls),
(554,114,o),
(589,154,o),
(589,189,qs),
(589,223,o),
(551,265,o),
(521,265,qs),
(334,265,ls),
(262,265,o),
(264,322,qs),
(264,344,ls),
(265,387,o),
(295,404,q),
(529,552,ls),
(536,557,o),
(541,554,qs),
(548,549,o),
(557,536,qs),
(572,512,o),
(556,460,o),
(527,442,qs),
(417,373,l),
(523,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 4 0 4 2 0 128 5 1 4 0 0 1 4 0 103 0 1 1 3 96 0 3 3 24 3 78 16 16 16 67 16 66 60 57 47 46 39 36 32 29 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,771,q),
(551,630,ls),
(546,617,o),
(532,617,qs),
(501,617,ls),
(487,617,o),
(482,630,qs),
(427,771,ls),
(424,780,o),
(434,780,qs),
(478,780,o),
(493,742,qs),
(516,685,l),
(539,742,ls),
(554,780,o),
(598,780,qs),
(608,780,o)
);
},
{
closed = 1;
nodes = (
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,79,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
3 1 2 0 1 76 1 7 2 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 102 0 3 3 23 3 78 1 0 48 46 37 36 28 26 21 18 13 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(571,698,o),
(571,673,qs),
(571,648,o),
(537,613,o),
(512,613,qs),
(488,613,o),
(454,648,o),
(454,673,qs),
(454,698,o),
(488,732,o),
(512,732,qs),
(537,732,o)
);
},
{
closed = 1;
nodes = (
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,79,ls),
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 102 0 3 3 23 3 78 13 12 1 0 37 36 28 26 21 18 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,763,o),
(459,784,qs),
(459,806,o),
(489,837,o),
(511,837,qs),
(532,837,o),
(562,806,o),
(562,784,qs),
(562,763,o),
(532,732,o),
(511,732,qs),
(489,732,o)
);
},
{
closed = 1;
nodes = (
(391,647,o),
(391,671,qs),
(391,694,o),
(423,727,o),
(446,727,qs),
(469,727,o),
(502,694,o),
(502,671,qs),
(502,647,o),
(469,613,o),
(446,613,qs),
(422,613,o)
);
},
{
closed = 1;
nodes = (
(519,647,o),
(519,671,qs),
(519,694,o),
(552,727,o),
(575,727,qs),
(598,727,o),
(631,694,o),
(631,671,qs),
(631,647,o),
(598,613,o),
(575,613,qs),
(551,613,o)
);
},
{
closed = 1;
nodes = (
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,79,ls),
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 102 0 7 7 23 7 78 37 36 25 24 13 12 1 0 61 60 52 50 45 42 36 70 37 70 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,79,ls),
(570,-47,o),
(506,-126,qs),
(433,-214,o),
(303,-214,qs),
(195,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 98 4 1 0 2 0 82 1 0 25 24 16 14 9 6 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 15 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 39 29 39 23 21 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,538,q),
(91,547,o),
(91,554,qs),
(93,584,o),
(124,593,q),
(113,611,o),
(113,635,qs),
(113,671,o),
(157,719,o),
(192,720,qs),
(219,721,o),
(256,691,o),
(256,667,qs),
(256,656,o),
(251,656,qs),
(249,656,o),
(243,658,q),
(240,660,o),
(238,661,qs),
(217,671,o),
(202,671,qs),
(166,671,o),
(166,634,qs),
(166,618,o),
(186,597,o),
(202,597,qs),
(234,597,ls),
(276,597,o),
(276,560,qs),
(276,554,ls),
(276,547,o),
(267,547,qs),
(147,547,ls),
(127,547,o),
(109,538,qs),
(107,537,o),
(106,537,q),
(101,534,o),
(99,534,qs),
(97,534,o)
);
},
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
34 1 0 1 73 55 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
69 68 68 79 69 79 63 61 35 36 35 51 53 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 15 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 39 29 39 23 21 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,538,q),
(91,547,o),
(91,554,qs),
(93,584,o),
(124,593,q),
(113,611,o),
(113,635,qs),
(113,671,o),
(157,719,o),
(192,720,qs),
(219,721,o),
(256,691,o),
(256,667,qs),
(256,656,o),
(251,656,qs),
(249,656,o),
(243,658,q),
(240,660,o),
(238,661,qs),
(217,671,o),
(202,671,qs),
(166,671,o),
(166,634,qs),
(166,618,o),
(186,597,o),
(202,597,qs),
(234,597,ls),
(276,597,o),
(276,560,qs),
(276,554,ls),
(276,547,o),
(267,547,qs),
(147,547,ls),
(127,547,o),
(109,538,qs),
(107,537,o),
(106,537,q),
(101,534,o),
(99,534,qs),
(97,534,o)
);
},
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
34 1 0 1 73 55 2 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 6 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 7 1 6 5 5 6 89 7 1 6 6 5 97 0 5 6 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
69 68 68 79 69 79 63 61 35 36 35 51 53 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,568,o),
(64,592,qs),
(64,616,o),
(96,649,o),
(120,649,qs),
(144,649,o),
(176,616,o),
(176,592,qs),
(176,568,o),
(143,535,o),
(120,535,qs),
(97,535,o)
);
},
{
closed = 1;
nodes = (
(193,568,o),
(193,592,qs),
(193,615,o),
(226,649,o),
(249,649,qs),
(272,649,o),
(304,616,o),
(304,592,qs),
(304,568,o),
(272,535,o),
(249,535,qs),
(226,535,o)
);
},
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
57 39 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
53 52 13 12 1 0 52 63 53 63 47 45 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,616,o),
(139,616,qs),
(183,616,o),
(198,578,qs),
(221,521,l),
(244,578,ls),
(259,616,o),
(303,616,qs),
(313,616,o),
(311,606,q),
(256,466,ls),
(251,452,o),
(237,452,qs),
(206,452,ls),
(192,452,o),
(187,466,qs),
(132,606,l)
);
},
{
closed = 1;
nodes = (
(409,127,qs),
(409,-39,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(231,-104,o),
(285,-46,o),
(291,6,q),
(253,-10,o),
(215,-10,qs),
(144,-10,o),
(95,40,qs),
(40,96,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(408,226,o)
);
},
{
closed = 1;
nodes = (
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,150,o),
(194,101,o),
(226,101,qs),
(265,101,o),
(290,120,q),
(290,122,o),
(290,127,qs),
(291,135,o),
(291,139,qs),
(292,208,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
11 1 0 1 53 51 49 3 8 9 29 1 4 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 3 0 9 8 3 9 106 6 1 5 0 7 5 7 101 0 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 5 0 7 5 7 101 0 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 8 0 4 6 8 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
62 60 43 36 34 35 38 35 36 35 49 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,478,o),
(103,502,qs),
(103,526,o),
(135,559,o),
(159,559,qs),
(182,559,o),
(215,526,o),
(215,502,qs),
(215,478,o),
(182,445,o),
(159,445,qs),
(135,445,o)
);
},
{
closed = 1;
nodes = (
(232,478,o),
(232,502,qs),
(232,525,o),
(264,559,o),
(288,559,qs),
(311,559,o),
(343,526,o),
(343,502,qs),
(343,478,o),
(311,445,o),
(288,445,qs),
(265,445,o)
);
},
{
closed = 1;
nodes = (
(409,127,qs),
(409,-39,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(231,-104,o),
(285,-46,o),
(291,6,q),
(253,-10,o),
(215,-10,qs),
(144,-10,o),
(95,40,qs),
(40,96,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(408,226,o)
);
},
{
closed = 1;
nodes = (
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,150,o),
(194,101,o),
(226,101,qs),
(265,101,o),
(290,120,q),
(290,122,o),
(290,127,qs),
(291,135,o),
(291,139,qs),
(292,208,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
60 58 56 3 9 10 36 1 5 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 10 9 4 10 105 7 1 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 7 5 6 5 7 6 128 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 77 0 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 5 6 5 7 6 128 0 4 0 10 9 4 10 105 0 9 0 5 7 9 5 105 0 6 0 8 6 8 101 12 2 11 3 0 0 1 97 3 1 1 1 23 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 69 67 63 61 50 48 44 42 40 38 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,-53,qs),
(247,-106,o),
(341,-106,qs),
(399,-106,o),
(445,-80,qs),
(500,-51,o),
(506,-4,qs),
(508,13,o),
(480,31,o),
(438,39,qs),
(425,42,o),
(421,43,qs),
(273,74,o),
(273,204,qs),
(273,279,o),
(320,331,qs),
(373,391,o),
(459,391,qs),
(537,391,o),
(576,346,qs),
(601,317,o),
(601,283,qs),
(601,252,o),
(583,251,qs),
(577,251,o),
(567,257,qs),
(525,282,o),
(478,282,qs),
(438,282,o),
(390,240,o),
(390,205,qs),
(390,161,o),
(465,146,qs),
(552,126,o),
(625,69,o),
(625,21,qs),
(624,-74,o),
(550,-139,qs),
(466,-214,o),
(337,-214,qs),
(211,-214,o),
(129,-143,qs),
(39,-66,o),
(42,51,qs),
(44,113,o),
(76,165,qs),
(110,223,o),
(166,245,qs),
(178,249,o),
(182,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(151,154,o),
(152,71,qs),
(152,-6,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 3 2 0 2 3 0 128 0 0 5 2 0 5 126 0 4 0 2 3 4 2 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 45 36 34 42 41 21 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,479,o),
(58,479,qs),
(102,479,o),
(117,441,qs),
(140,384,l),
(163,441,ls),
(177,479,o),
(221,479,qs),
(232,479,o),
(229,469,q),
(174,329,l),
(170,316,o),
(155,316,qs),
(125,316,ls),
(110,316,o),
(106,329,q),
(51,469,l)
);
},
{
closed = 1;
nodes = (
(625,69,o),
(625,21,qs),
(624,-74,o),
(550,-139,qs),
(466,-214,o),
(337,-214,qs),
(211,-214,o),
(129,-143,qs),
(39,-66,o),
(42,51,qs),
(44,113,o),
(76,165,qs),
(110,223,o),
(166,245,qs),
(178,249,o),
(182,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(151,154,o),
(152,71,qs),
(152,-6,o),
(197,-53,qs),
(247,-106,o),
(341,-106,qs),
(399,-106,o),
(445,-80,qs),
(500,-51,o),
(506,-4,qs),
(508,13,o),
(480,31,o),
(438,39,qs),
(425,42,o),
(421,43,qs),
(273,74,o),
(273,204,qs),
(273,279,o),
(320,331,qs),
(373,391,o),
(459,391,qs),
(537,391,o),
(576,346,qs),
(601,317,o),
(601,283,qs),
(601,252,o),
(583,251,qs),
(577,251,o),
(567,257,qs),
(525,282,o),
(478,282,qs),
(438,282,o),
(390,240,o),
(390,205,qs),
(390,161,o),
(465,146,qs),
(552,126,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
11 1 0 5 1 76 2 1 1 5 1 133 0 0 5 3 5 0 3 128 0 4 3 7 3 4 7 128 0 7 6 3 7 6 126 0 5 0 3 4 5 3 105 0 6 8 8 6 89 0 6 6 8 98 0 8 6 8 82 41 24 45 36 34 38 36 35 49 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(152,0,o),
(101,43,qs),
(40,94,o),
(40,182,qs),
(40,264,o),
(88,317,qs),
(139,373,o),
(214,373,qs),
(293,373,ls),
(299,373,o),
(299,378,qs),
(299,381,ls),
(299,461,o),
(344,510,qs),
(393,564,o),
(482,564,qs),
(553,564,o),
(600,528,qs),
(650,489,o),
(657,423,q),
(658,419,o),
(658,413,qs),
(658,411,ls),
(661,373,o),
(615,323,o),
(578,323,qs),
(568,323,ls),
(556,323,o),
(549,331,o),
(549,344,qs),
(549,362,ls),
(549,457,o),
(482,457,qs),
(416,457,o),
(416,367,qs),
(416,339,ls),
(416,300,o),
(382,265,o),
(343,265,qs),
(229,265,ls),
(198,265,o),
(158,222,o),
(158,189,qs),
(158,154,o),
(192,114,o),
(223,114,qs),
(612,114,ls),
(656,114,o),
(709,69,o),
(709,31,qs),
(709,20,ls),
(709,8,o),
(701,0,o),
(687,0,qs),
(223,0,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 6 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 6 2 6 4 2 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 6 2 6 4 2 128 0 5 0 3 6 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 37 29 26 22 20 16 13 9 6 0 54 1 53 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,433,qs),
(51,442,o),
(51,449,qs),
(52,478,o),
(83,488,q),
(73,506,o),
(73,529,qs),
(73,566,o),
(117,614,o),
(151,614,qs),
(179,615,o),
(215,585,o),
(215,562,qs),
(215,550,o),
(210,550,qs),
(208,550,o),
(203,553,q),
(199,554,o),
(198,555,q),
(176,565,o),
(161,565,qs),
(126,565,o),
(126,529,qs),
(126,512,o),
(145,492,o),
(161,492,qs),
(193,492,ls),
(236,492,o),
(236,454,qs),
(236,449,ls),
(236,441,o),
(226,441,qs),
(106,441,ls),
(87,441,o),
(68,432,qs),
(66,431,ls),
(61,428,o),
(59,428,qs),
(56,428,o)
);
},
{
closed = 1;
nodes = (
(656,114,o),
(709,69,o),
(709,31,qs),
(709,20,ls),
(709,8,o),
(701,0,o),
(687,0,qs),
(223,0,ls),
(152,0,o),
(101,43,qs),
(40,94,o),
(40,182,qs),
(40,264,o),
(88,317,qs),
(139,373,o),
(214,373,qs),
(293,373,ls),
(299,373,o),
(299,378,qs),
(299,381,ls),
(299,461,o),
(344,510,qs),
(393,564,o),
(482,564,qs),
(553,564,o),
(600,528,qs),
(650,489,o),
(657,423,q),
(658,419,o),
(658,413,qs),
(658,411,ls),
(661,373,o),
(615,323,o),
(578,323,qs),
(568,323,ls),
(556,323,o),
(549,331,o),
(549,344,qs),
(549,362,ls),
(549,457,o),
(482,457,qs),
(416,457,o),
(416,367,qs),
(416,339,ls),
(416,300,o),
(382,265,o),
(343,265,qs),
(229,265,ls),
(198,265,o),
(158,222,o),
(158,189,qs),
(158,154,o),
(192,114,o),
(223,114,qs),
(612,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
33 1 0 1 62 1 10 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
33 1 7 1 62 1 10 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 10 6 10 8 6 128 0 4 3 1 2 9 4 2 105 0 1 0 0 1 89 0 10 0 6 5 10 6 103 7 1 0 0 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 9 1 9 3 1 128 0 8 10 6 10 8 6 128 0 4 0 2 9 4 2 105 0 1 0 0 10 1 0 103 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 9 1 9 3 1 128 0 8 10 6 10 8 6 128 0 4 0 2 9 4 2 105 0 9 0 7 0 9 7 105 0 1 0 0 10 1 0 103 0 10 0 6 5 10 6 103 12 1 5 5 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
40 39 87 84 78 75 70 68 60 57 53 51 47 44 39 93 40 92 35 36 35 51 52 13 7 27 
CALL[ ]	/* CallFunction */";
};
width = 753;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,188,qs),
(411,105,o),
(367,52,qs),
(315,-10,o),
(226,-10,qs),
(156,-10,o),
(106,31,qs),
(40,85,o),
(40,188,qs),
(40,246,o),
(98,344,o),
(152,376,q),
(143,388,o),
(139,401,qs),
(134,420,o),
(163,464,o),
(193,479,q),
(194,480,o),
(198,481,qs),
(202,482,o),
(203,483,q),
(212,485,o),
(218,469,q),
(234,437,o),
(294,389,qs),
(306,380,o),
(323,366,qs),
(411,291,o)
);
},
{
closed = 1;
nodes = (
(295,150,o),
(293,187,qs),
(292,223,o),
(268,253,qs),
(253,271,o),
(223,296,q),
(159,252,o),
(158,186,qs),
(157,150,o),
(196,99,o),
(226,99,qs),
(255,99,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
33 15 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
29 28 28 39 29 39 23 21 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 458;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,581,o),
(103,602,qs),
(103,624,o),
(133,654,o),
(154,654,qs),
(175,654,o),
(205,624,o),
(205,602,qs),
(205,581,o),
(175,550,o),
(154,550,qs),
(133,550,o)
);
},
{
closed = 1;
nodes = (
(34,464,o),
(34,488,qs),
(34,512,o),
(66,545,o),
(89,545,qs),
(113,545,o),
(146,512,o),
(146,488,qs),
(146,464,o),
(113,431,o),
(89,431,qs),
(66,431,o)
);
},
{
closed = 1;
nodes = (
(162,464,o),
(162,488,qs),
(162,512,o),
(195,545,o),
(218,545,qs),
(242,545,o),
(274,512,o),
(274,488,qs),
(274,464,o),
(242,431,o),
(218,431,qs),
(195,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,135,qs),
(338,174,o),
(338,277,qs),
(338,367,o),
(320,408,qs),
(299,457,o),
(244,457,qs),
(195,457,o),
(174,421,qs),
(150,381,o),
(150,277,qs),
(150,186,o),
(167,147,qs),
(188,99,o),
(244,99,qs),
(293,99,o)
);
},
{
closed = 1;
nodes = (
(31,277,qs),
(31,408,o),
(78,481,qs),
(132,566,o),
(244,566,qs),
(341,566,o),
(395,501,qs),
(457,426,o),
(457,277,qs),
(457,147,o),
(410,74,qs),
(356,-10,o),
(244,-10,qs),
(31,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 29 17 29 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,409,ls),
(28,404,o),
(28,418,qs),
(28,506,ls),
(28,520,o),
(43,526,qs),
(99,546,ls),
(127,556,o),
(151,556,qs),
(176,556,ls),
(246,556,o),
(246,489,qs),
(246,106,l),
(287,106,ls),
(357,106,o),
(357,40,qs),
(357,17,ls),
(357,0,o),
(341,0,qs),
(40,0,ls),
(27,0,o),
(27,13,qs),
(27,93,ls),
(27,106,o),
(40,106,qs),
(130,106,l),
(130,441,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,106,o),
(428,42,qs),
(428,17,ls),
(428,0,o),
(412,0,qs),
(41,0,ls),
(28,0,o),
(28,13,qs),
(28,110,o),
(76,175,qs),
(108,219,o),
(178,264,qs),
(241,304,o),
(253,314,qs),
(300,352,o),
(300,400,qs),
(300,429,o),
(258,463,o),
(220,463,qs),
(155,463,o),
(85,427,qs),
(78,423,o),
(72,423,qs),
(65,423,o),
(62,432,qs),
(53,459,ls),
(32,523,o),
(97,545,qs),
(162,566,o),
(229,566,qs),
(309,566,o),
(358,533,qs),
(420,491,o),
(420,406,qs),
(420,341,o),
(379,289,qs),
(347,248,o),
(266,196,qs),
(213,160,o),
(177,126,o),
(173,106,q),
(358,106,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 59 35 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 463;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,166,qs),
(420,94,o),
(372,46,qs),
(314,-10,o),
(212,-10,qs),
(124,-10,o),
(70,34,qs),
(18,76,o),
(18,135,qs),
(18,161,o),
(36,161,qs),
(42,161,o),
(53,152,qs),
(123,92,o),
(203,92,qs),
(250,92,o),
(303,134,o),
(303,171,qs),
(303,230,o),
(225,230,qs),
(162,230,ls),
(127,230,o),
(97,256,o),
(97,287,qs),
(97,317,ls),
(97,336,o),
(112,336,qs),
(208,336,ls),
(284,336,o),
(284,401,qs),
(284,431,o),
(242,465,o),
(205,465,qs),
(141,465,o),
(73,429,qs),
(64,424,o),
(58,424,qs),
(51,424,o),
(48,433,qs),
(39,459,ls),
(18,523,o),
(83,545,qs),
(148,566,o),
(213,566,qs),
(289,566,o),
(339,534,qs),
(402,493,o),
(402,413,qs),
(402,375,o),
(360,310,o),
(323,291,q),
(420,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 51 35 21 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,426,l),
(137,216,l),
(273,216,l)
);
},
{
closed = 1;
nodes = (
(11,109,o),
(11,122,qs),
(11,186,ls),
(11,200,o),
(21,217,qs),
(218,531,ls),
(234,556,o),
(262,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,216,l),
(414,216,ls),
(484,216,o),
(484,149,qs),
(484,126,ls),
(484,109,o),
(468,109,qs),
(389,109,l),
(388,13,ls),
(388,0,o),
(376,0,qs),
(286,0,ls),
(273,0,o),
(273,13,qs),
(273,109,l),
(24,109,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 0 4 1 76 3 6 2 0 7 5 2 2 1 0 2 104 0 4 4 23 77 0 1 1 24 1 78 3 3 0 0 3 29 3 28 22 19 17 15 12 10 8 5 0 2 0 2 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,368,o),
(238,368,qs),
(322,368,o),
(373,326,qs),
(430,278,o),
(430,190,qs),
(430,105,o),
(375,50,qs),
(314,-10,o),
(219,-10,qs),
(137,-10,o),
(82,28,qs),
(22,70,o),
(22,130,qs),
(22,157,o),
(40,157,qs),
(47,157,o),
(58,148,qs),
(122,92,o),
(206,92,qs),
(314,92,o),
(314,187,qs),
(314,223,o),
(256,266,o),
(207,266,qs),
(135,266,o),
(62,243,qs),
(46,239,o),
(46,254,qs),
(46,543,ls),
(46,556,o),
(59,556,qs),
(330,556,ls),
(400,556,o),
(400,489,qs),
(400,466,ls),
(400,449,o),
(384,449,qs),
(157,449,l),
(157,359,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,93,o),
(249,93,qs),
(290,93,o),
(344,147,o),
(344,189,qs),
(344,232,o),
(289,288,o),
(247,288,qs),
(205,288,o),
(149,232,o),
(149,189,qs),
(149,147,o)
);
},
{
closed = 1;
nodes = (
(269,386,qs),
(349,386,o),
(402,334,qs),
(459,279,o),
(459,199,qs),
(459,115,o),
(410,58,qs),
(351,-10,o),
(250,-10,qs),
(161,-10,o),
(101,38,qs),
(32,94,o),
(32,186,qs),
(32,225,o),
(64,308,o),
(105,374,qs),
(216,555,ls),
(223,566,o),
(236,566,qs),
(274,566,o),
(289,535,qs),
(307,497,o),
(278,449,qs),
(238,383,l),
(254,386,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 0 1 4 0 106 0 2 2 23 77 0 1 1 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 4 2 133 0 4 0 0 1 4 0 106 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 40 38 36 34 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,449,o),
(20,462,qs),
(20,543,ls),
(20,556,o),
(33,556,qs),
(319,556,ls),
(389,556,o),
(389,489,qs),
(389,476,ls),
(389,448,o),
(376,419,qs),
(195,13,ls),
(189,0,o),
(176,0,qs),
(79,0,ls),
(73,0,o),
(68,8,o),
(71,13,q),
(266,449,l),
(33,449,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 19 0 18 54 51 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,83,o),
(245,83,qs),
(289,83,o),
(345,126,o),
(345,160,qs),
(345,240,o),
(245,240,qs),
(144,240,o),
(144,160,qs),
(144,126,o)
);
},
{
closed = 1;
nodes = (
(203,333,o),
(245,333,qs),
(287,333,o),
(335,371,o),
(335,403,qs),
(335,436,o),
(286,474,o),
(245,474,qs),
(203,474,o),
(154,436,o),
(154,403,qs),
(154,371,o)
);
},
{
closed = 1;
nodes = (
(40,417,qs),
(40,481,o),
(90,521,qs),
(146,566,o),
(245,566,qs),
(330,566,o),
(385,532,qs),
(449,491,o),
(449,417,qs),
(449,329,o),
(366,290,q),
(462,256,o),
(462,159,qs),
(462,90,o),
(413,45,qs),
(354,-10,o),
(245,-10,qs),
(149,-10,o),
(91,33,qs),
(27,80,o),
(27,159,qs),
(27,256,o),
(123,290,q),
(40,329,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 36 35 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,324,o),
(337,367,qs),
(337,409,o),
(281,462,o),
(238,462,qs),
(196,462,o),
(142,408,o),
(142,367,qs),
(142,322,o),
(195,267,o),
(240,267,qs),
(282,267,o)
);
},
{
closed = 1;
nodes = (
(213,170,qs),
(134,170,o),
(82,221,qs),
(27,275,o),
(27,353,qs),
(27,440,o),
(79,498,qs),
(139,565,o),
(240,565,qs),
(329,565,o),
(387,518,qs),
(454,463,o),
(454,370,qs),
(454,331,o),
(423,248,o),
(383,183,qs),
(272,3,ls),
(264,-10,o),
(251,-10,qs),
(212,-10,o),
(198,23,qs),
(180,61,o),
(209,107,qs),
(250,174,l),
(230,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 4 2 134 5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 2 134 0 3 0 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 97 0 4 0 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 36 34 28 26 18 16 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,166,qs),
(0,240,ls),
(0,253,o),
(13,253,qs),
(343,253,ls),
(356,253,o),
(356,240,qs),
(356,166,ls),
(356,153,o),
(343,153,qs),
(13,153,ls),
(0,153,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 356;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,166,qs),
(0,240,ls),
(0,253,o),
(13,253,qs),
(687,253,ls),
(700,253,o),
(700,240,qs),
(700,166,ls),
(700,153,o),
(687,153,qs),
(13,153,ls),
(0,153,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,420,o),
(164,394,qs),
(164,365,o),
(126,325,o),
(97,325,qs),
(67,325,o),
(28,365,o),
(28,394,qs),
(28,481,o),
(128,560,qs),
(131,562,o),
(135,560,q),
(162,532,o),
(137,507,qs),
(113,485,o),
(109,463,q),
(133,458,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 134 0 0 0 39 0 78 36 36 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,466,o),
(28,492,qs),
(28,522,o),
(67,561,o),
(95,561,qs),
(125,561,o),
(164,522,o),
(164,492,qs),
(164,405,o),
(64,326,q),
(61,325,o),
(58,326,q),
(30,354,o),
(55,379,qs),
(79,402,o),
(83,423,q),
(59,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
4 1 0 73 0 0 0 39 0 78 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 199;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,37,o),
(13,63,qs),
(13,92,o),
(52,131,o),
(81,131,qs),
(111,131,o),
(149,93,o),
(149,63,qs),
(149,-27,o),
(54,-102,qs),
(46,-109,o),
(40,-102,qs),
(17,-76,o),
(40,-53,qs),
(66,-27,o),
(71,-5,q),
(45,-1,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 42 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 169;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,420,o),
(164,394,qs),
(164,365,o),
(126,325,o),
(97,325,qs),
(67,325,o),
(28,365,o),
(28,394,qs),
(28,481,o),
(128,560,qs),
(131,562,o),
(135,560,q),
(162,532,o),
(137,507,qs),
(113,485,o),
(109,463,q),
(133,458,o)
);
},
{
closed = 1;
nodes = (
(342,420,o),
(342,394,qs),
(342,365,o),
(304,325,o),
(275,325,qs),
(245,325,o),
(206,365,o),
(206,394,qs),
(206,481,o),
(306,560,qs),
(309,562,o),
(312,560,q),
(340,532,o),
(315,507,qs),
(291,485,o),
(287,463,q),
(311,458,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
21 1 1 0 1 76 2 1 1 0 1 134 0 0 0 39 0 78 47 36 36 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,466,o),
(28,492,qs),
(28,522,o),
(67,561,o),
(95,561,qs),
(125,561,o),
(164,522,o),
(164,492,qs),
(164,405,o),
(64,326,q),
(61,325,o),
(58,326,q),
(30,354,o),
(55,379,qs),
(79,402,o),
(83,423,q),
(59,428,o)
);
},
{
closed = 1;
nodes = (
(206,466,o),
(206,492,qs),
(206,521,o),
(244,561,o),
(273,561,qs),
(303,561,o),
(342,522,o),
(342,492,qs),
(342,405,o),
(242,326,q),
(239,325,o),
(236,326,q),
(208,354,o),
(233,379,qs),
(257,402,o),
(261,423,q),
(237,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
21 4 2 0 73 1 1 0 0 39 0 78 47 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(13,37,o),
(13,63,qs),
(13,92,o),
(52,131,o),
(81,131,qs),
(111,131,o),
(149,93,o),
(149,63,qs),
(149,-27,o),
(54,-102,qs),
(46,-109,o),
(40,-102,qs),
(17,-76,o),
(40,-53,qs),
(66,-27,o),
(71,-5,q),
(45,-1,o)
);
},
{
closed = 1;
nodes = (
(191,37,o),
(191,63,qs),
(191,92,o),
(230,131,o),
(258,131,qs),
(289,131,o),
(327,93,o),
(327,63,qs),
(327,-27,o),
(232,-102,qs),
(224,-109,o),
(218,-102,qs),
(194,-76,o),
(218,-53,qs),
(244,-27,o),
(249,-5,q),
(223,-1,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
1 1 0 0 118 47 42 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 347;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,273,o),
(28,286,qs),
(28,358,ls),
(28,371,o),
(41,371,qs),
(127,371,l),
(127,543,ls),
(127,556,o),
(140,556,qs),
(228,556,o),
(228,458,qs),
(228,371,l),
(314,371,ls),
(327,371,o),
(327,358,qs),
(327,286,ls),
(327,273,o),
(314,273,qs),
(228,273,l),
(228,-147,ls),
(228,-160,o),
(215,-160,qs),
(140,-160,ls),
(127,-160,o),
(127,-147,qs),
(127,273,l),
(41,273,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
4 1 2 6 5 2 1 0 2 1 103 0 3 3 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 26 0 25 34 34 35 34 50 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,88,o),
(28,101,qs),
(28,173,ls),
(28,186,o),
(41,186,qs),
(127,186,l),
(127,273,l),
(41,273,ls),
(28,273,o),
(28,286,qs),
(28,358,ls),
(28,371,o),
(41,371,qs),
(127,371,l),
(127,543,ls),
(127,556,o),
(140,556,qs),
(228,556,o),
(228,458,qs),
(228,371,l),
(314,371,ls),
(327,371,o),
(327,358,qs),
(327,286,ls),
(327,273,o),
(314,273,qs),
(228,273,l),
(228,186,l),
(314,186,ls),
(327,186,o),
(327,173,qs),
(327,101,ls),
(327,88,o),
(314,88,qs),
(228,88,l),
(228,-147,ls),
(228,-160,o),
(215,-160,qs),
(140,-160,ls),
(127,-160,o),
(127,-147,qs),
(127,88,l),
(41,88,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
6 1 4 7 1 3 2 4 3 103 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 0 0 0 44 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 42 0 41 33 35 34 34 35 33 35 34 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 355;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,191,qs),
(38,223,o),
(38,279,qs),
(38,328,o),
(65,359,qs),
(96,395,o),
(151,395,qs),
(200,395,o),
(231,367,qs),
(267,335,o),
(267,279,qs),
(267,230,o),
(240,199,qs),
(209,163,o),
(153,163,qs),
(104,163,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 9 7 0 15 1 15 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 304;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,29,o),
(28,58,qs),
(28,87,o),
(68,127,o),
(96,127,qs),
(124,127,o),
(164,87,o),
(164,58,qs),
(164,29,o),
(124,-12,o),
(96,-12,qs),
(68,-12,o)
);
},
{
closed = 1;
nodes = (
(244,29,o),
(244,58,qs),
(244,87,o),
(284,127,o),
(312,127,qs),
(340,127,o),
(380,87,o),
(380,58,qs),
(380,29,o),
(340,-12,o),
(312,-12,qs),
(284,-12,o)
);
},
{
closed = 1;
nodes = (
(460,29,o),
(460,58,qs),
(460,87,o),
(499,127,o),
(528,127,qs),
(556,127,o),
(596,87,o),
(596,58,qs),
(596,29,o),
(556,-12,o),
(528,-12,qs),
(499,-12,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 630;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,394,qs),
(248,437,o),
(212,486,o),
(180,486,qs),
(149,486,o),
(114,437,o),
(114,394,qs),
(114,303,o),
(180,303,qs),
(248,303,o)
);
},
{
closed = 1;
nodes = (
(75,265,qs),
(28,313,o),
(28,396,qs),
(28,467,o),
(65,513,qs),
(107,566,o),
(180,566,qs),
(244,566,o),
(286,525,qs),
(334,477,o),
(334,396,qs),
(334,324,o),
(297,277,qs),
(253,223,o),
(180,223,qs),
(116,223,o)
);
},
{
closed = 1;
nodes = (
(715,162,qs),
(715,205,o),
(679,254,o),
(647,254,qs),
(616,254,o),
(582,206,o),
(582,162,qs),
(582,72,o),
(647,72,qs),
(715,72,o)
);
},
{
closed = 1;
nodes = (
(542,33,qs),
(495,81,o),
(495,164,qs),
(495,235,o),
(532,281,qs),
(574,335,o),
(647,335,qs),
(711,335,o),
(753,293,qs),
(801,245,o),
(801,164,qs),
(801,93,o),
(764,45,qs),
(721,-9,o),
(647,-9,qs),
(584,-9,o)
);
},
{
closed = 1;
nodes = (
(1069,162,qs),
(1069,205,o),
(1033,254,o),
(1001,254,qs),
(970,254,o),
(935,206,o),
(935,162,qs),
(935,72,o),
(1001,72,qs),
(1069,72,o)
);
},
{
closed = 1;
nodes = (
(896,33,qs),
(849,81,o),
(849,164,qs),
(849,235,o),
(885,281,qs),
(928,335,o),
(1001,335,qs),
(1065,335,o),
(1107,293,qs),
(1155,245,o),
(1155,164,qs),
(1155,93,o),
(1118,45,qs),
(1074,-9,o),
(1001,-9,qs),
(937,-9,o)
);
},
{
closed = 1;
nodes = (
(210,13,qs),
(501,543,ls),
(509,556,o),
(521,556,qs),
(545,556,ls),
(577,556,o),
(600,514,o),
(584,484,qs),
(324,13,ls),
(317,0,o),
(305,0,qs),
(217,0,ls),
(203,0,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 7 9 1 5 2 7 5 105 14 1 0 15 1 2 4 0 2 105 0 1 1 3 97 13 1 3 3 39 77 18 8 16 3 4 4 6 97 20 12 19 10 17 5 6 6 46 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
11 1 7 9 1 5 2 7 5 105 14 1 0 15 1 2 4 0 2 105 0 13 13 39 77 0 1 1 3 97 0 3 3 39 77 18 8 16 3 4 4 6 97 20 12 19 10 17 5 6 6 46 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 7 9 1 5 2 7 5 105 14 1 0 15 1 2 4 0 2 105 0 13 13 39 77 0 1 1 3 97 0 3 3 39 77 20 1 12 12 40 77 18 8 16 3 4 4 6 97 19 10 17 3 6 6 46 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 3 0 1 7 3 1 105 11 1 7 9 1 5 2 7 5 105 14 1 0 15 1 2 4 0 2 105 0 13 13 39 77 20 1 12 12 40 77 18 8 16 3 4 4 6 97 19 10 17 3 6 6 46 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
80 78 63 62 53 52 37 36 27 26 11 10 1 0 87 84 78 90 80 90 71 69 62 77 63 77 58 56 52 61 53 61 45 43 36 51 37 51 32 30 26 35 27 35 19 17 10 25 11 25 6 4 0 9 1 9 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1183;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,45,o),
(235,37,o),
(230,37,qs),
(157,37,ls),
(138,37,o),
(129,50,qs),
(28,182,ls),
(21,191,o),
(21,196,qs),
(21,201,o),
(28,210,qs),
(129,342,ls),
(138,355,o),
(157,355,qs),
(230,355,ls),
(235,355,o),
(239,346,o),
(236,342,qs),
(125,196,l),
(236,50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,346,o),
(24,355,o),
(29,355,qs),
(101,355,ls),
(120,355,o),
(129,342,qs),
(231,210,ls),
(238,201,o),
(238,196,qs),
(238,191,o),
(231,182,qs),
(129,50,ls),
(120,37,o),
(101,37,qs),
(29,37,ls),
(24,37,o),
(20,45,o),
(23,50,qs),
(133,196,l),
(23,342,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 40 51 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 257;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(6,13,q),
(296,543,ls),
(303,556,o),
(317,556,qs),
(332,556,ls),
(365,556,o),
(386,514,o),
(370,483,qs),
(113,13,ls),
(106,0,o),
(93,0,qs),
(14,0,ls),
(0,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 2 0 9 6 0 12 2 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 376;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,171,o),
(9,184,qs),
(33,240,ls),
(39,252,o),
(51,252,qs),
(97,252,l),
(96,277,o),
(97,302,q),
(33,302,ls),
(20,302,o),
(26,315,qs),
(50,371,ls),
(55,384,o),
(68,384,qs),
(112,384,l),
(137,462,o),
(195,511,qs),
(262,566,o),
(350,566,qs),
(411,566,o),
(470,546,qs),
(501,535,o),
(521,494,o),
(512,459,qs),
(507,438,ls),
(504,425,o),
(494,425,qs),
(488,425,o),
(478,430,qs),
(416,463,o),
(358,463,qs),
(270,463,o),
(236,384,q),
(444,384,ls),
(458,384,o),
(452,371,qs),
(428,315,ls),
(423,302,o),
(409,302,qs),
(217,302,l),
(215,277,o),
(217,252,q),
(393,252,ls),
(406,252,o),
(401,240,qs),
(377,184,ls),
(371,171,o),
(358,171,qs),
(236,171,l),
(273,91,o),
(369,91,qs),
(439,91,o),
(495,150,qs),
(504,159,o),
(512,159,qs),
(530,159,o),
(530,132,qs),
(530,87,o),
(497,48,qs),
(447,-10,o),
(349,-10,qs),
(265,-10,o),
(205,32,qs),
(136,79,o),
(110,171,q),
(16,171,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 12 1 4 14 13 2 3 1 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 12 1 4 14 13 2 3 1 4 3 103 11 1 5 5 6 97 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 65 0 64 61 59 57 55 52 50 47 45 34 33 35 34 35 33 34 36 35 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 550;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(368,272,o),
(362,272,qs),
(300,272,ls),
(294,272,o),
(294,278,qs),
(312,550,ls),
(312,556,o),
(318,556,qs),
(369,556,ls),
(412,556,o),
(420,529,qs),
(460,385,l),
(509,550,ls),
(511,556,o),
(516,556,qs),
(569,556,ls),
(587,556,o),
(612,536,o),
(612,521,qs),
(627,278,ls),
(627,272,o),
(622,272,qs),
(562,272,ls),
(555,272,o),
(555,278,qs),
(545,448,l),
(494,278,ls),
(492,272,o),
(485,272,qs),
(435,272,ls),
(428,272,o),
(426,278,qs),
(378,448,l),
(368,278,ls)
);
},
{
closed = 1;
nodes = (
(25,492,o),
(25,498,qs),
(25,550,ls),
(25,556,o),
(31,556,qs),
(236,556,ls),
(274,556,o),
(274,522,qs),
(274,501,ls),
(274,492,o),
(265,492,qs),
(186,492,l),
(186,278,ls),
(186,272,o),
(180,272,qs),
(117,272,ls),
(111,272,o),
(111,278,qs),
(111,492,l),
(31,492,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
51 50 27 3 6 2 40 35 33 28 21 13 8 7 0 9 0 6 2 76 5 4 1 3 0 6 0 134 7 3 2 2 6 6 2 89 7 3 2 2 2 6 95 9 8 2 6 2 6 79 34 34 34 53 34 53 35 35 22 21 37 37 21 50 10 6 30 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,318,o),
(43,318,qs),
(332,318,ls),
(402,318,o),
(402,251,qs),
(402,236,ls),
(402,223,o),
(389,223,qs),
(43,223,ls),
(30,223,o),
(30,236,qs),
(30,305,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 51 49 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,132,o),
(30,145,qs),
(30,215,ls),
(30,228,o),
(43,228,qs),
(143,228,l),
(191,313,l),
(43,313,ls),
(30,313,o),
(30,326,qs),
(30,396,ls),
(30,408,o),
(43,408,qs),
(244,408,l),
(295,502,ls),
(304,518,o),
(320,518,qs),
(321,518,ls),
(354,518,o),
(374,475,o),
(356,443,qs),
(336,408,l),
(402,407,o),
(402,342,qs),
(402,326,ls),
(402,313,o),
(389,313,qs),
(283,313,l),
(236,228,l),
(332,228,ls),
(402,228,o),
(402,161,qs),
(402,145,ls),
(402,132,o),
(389,132,qs),
(182,132,l),
(147,70,ls),
(138,53,o),
(122,53,qs),
(64,53,ls),
(57,53,o),
(52,62,o),
(55,69,q),
(91,132,l),
(43,132,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 5 133 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 103 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 103 8 1 2 1 1 2 87 8 1 2 2 1 97 10 9 2 1 2 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 44 0 43 33 35 34 51 19 33 35 34 51 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,13,qs),
(30,82,ls),
(30,95,o),
(43,95,qs),
(405,95,ls),
(418,95,o),
(418,82,qs),
(418,13,ls),
(418,0,o),
(405,0,qs),
(43,0,ls),
(30,0,o)
);
},
{
closed = 1;
nodes = (
(383,247,o),
(418,193,o),
(418,142,qs),
(418,140,ls),
(418,128,o),
(406,133,qs),
(43,292,ls),
(30,298,o),
(30,313,qs),
(30,365,ls),
(30,378,o),
(43,384,qs),
(403,542,ls),
(408,544,o),
(418,540,o),
(418,535,qs),
(418,461,ls),
(418,445,o),
(403,438,qs),
(167,338,l),
(337,266,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
16 1 1 74 0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(35,13,qs),
(35,82,ls),
(35,95,o),
(48,95,qs),
(410,95,ls),
(423,95,o),
(423,82,qs),
(423,13,ls),
(423,0,o),
(410,0,qs),
(48,0,ls),
(35,0,o)
);
},
{
closed = 1;
nodes = (
(35,445,o),
(35,461,qs),
(35,535,ls),
(35,540,o),
(44,544,o),
(50,542,qs),
(410,384,ls),
(423,378,o),
(423,365,qs),
(423,313,ls),
(423,298,o),
(410,292,qs),
(47,133,ls),
(35,128,o),
(35,140,qs),
(35,142,ls),
(35,193,o),
(70,247,o),
(115,266,qs),
(285,338,l),
(50,438,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 0 1 87 0 1 1 0 95 2 1 0 1 0 79 2 0 8 5 0 11 2 11 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 452;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(235,513,qs),
(235,497,o),
(256,475,o),
(272,475,qs),
(288,475,o),
(310,497,o),
(310,513,qs),
(310,546,o),
(272,551,q),
(235,545,o)
);
},
{
closed = 1;
nodes = (
(321,488,qs),
(321,472,o),
(343,450,o),
(359,450,qs),
(374,450,o),
(397,472,o),
(397,488,qs),
(397,521,o),
(359,526,q),
(322,520,o)
);
},
{
closed = 1;
nodes = (
(40,317,qs),
(40,302,o),
(63,279,o),
(78,279,qs),
(94,279,o),
(115,302,o),
(115,317,qs),
(115,351,o),
(78,355,q),
(40,350,o)
);
},
{
closed = 1;
nodes = (
(429,317,qs),
(429,302,o),
(451,279,o),
(467,279,qs),
(482,279,o),
(505,302,o),
(505,317,qs),
(505,351,o),
(467,355,q),
(430,350,o)
);
},
{
closed = 1;
nodes = (
(310,121,qs),
(310,137,o),
(288,159,o),
(272,159,qs),
(256,159,o),
(235,137,o),
(235,121,qs),
(235,88,o),
(272,83,q),
(310,89,o)
);
},
{
closed = 1;
nodes = (
(395,421,qs),
(395,406,o),
(417,383,o),
(432,383,qs),
(448,383,o),
(470,406,o),
(470,421,qs),
(470,455,o),
(432,459,q),
(395,454,o)
);
},
{
closed = 1;
nodes = (
(141,489,qs),
(141,473,o),
(164,451,o),
(179,451,qs),
(195,451,o),
(217,473,o),
(217,489,qs),
(217,522,o),
(179,527,q),
(142,521,o)
);
},
{
closed = 1;
nodes = (
(67,413,qs),
(67,397,o),
(90,375,o),
(105,375,qs),
(121,375,o),
(143,397,o),
(143,413,qs),
(143,446,o),
(105,451,q),
(68,445,o)
);
},
{
closed = 1;
nodes = (
(410,155,qs),
(410,170,o),
(388,193,o),
(372,193,qs),
(357,193,o),
(335,170,o),
(335,155,qs),
(335,122,o),
(372,117,q),
(410,122,o)
);
},
{
closed = 1;
nodes = (
(477,221,qs),
(477,237,o),
(454,259,o),
(439,259,qs),
(423,259,o),
(401,237,o),
(401,221,qs),
(402,188,o),
(439,183,q),
(477,189,o)
);
},
{
closed = 1;
nodes = (
(216,155,qs),
(216,170,o),
(194,193,o),
(179,193,qs),
(163,193,o),
(141,170,o),
(141,155,qs),
(141,121,o),
(179,117,q),
(216,122,o)
);
},
{
closed = 1;
nodes = (
(137,221,qs),
(137,237,o),
(115,259,o),
(99,259,qs),
(84,259,o),
(61,237,o),
(61,221,qs),
(62,188,o),
(99,183,q),
(137,189,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 0 1 0 133 6 1 1 5 1 133 0 5 7 5 133 0 7 2 7 133 3 1 2 9 2 133 11 1 9 8 9 133 10 1 8 4 8 133 0 4 4 118 116 114 106 104 96 94 40 40 40 40 40 40 40 40 36 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,135,qs),
(352,174,o),
(352,277,qs),
(352,367,o),
(334,408,qs),
(313,457,o),
(258,457,qs),
(209,457,o),
(188,421,qs),
(164,381,o),
(164,277,qs),
(164,186,o),
(181,147,qs),
(202,99,o),
(258,99,qs),
(307,99,o)
);
},
{
closed = 1;
nodes = (
(45,277,qs),
(45,408,o),
(92,481,qs),
(146,566,o),
(258,566,qs),
(355,566,o),
(409,501,qs),
(471,426,o),
(471,277,qs),
(471,147,o),
(424,74,qs),
(370,-10,o),
(258,-10,qs),
(45,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 29 17 29 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,402,ls),
(97,397,o),
(97,411,qs),
(97,499,ls),
(97,513,o),
(112,519,qs),
(187,546,ls),
(215,556,o),
(240,556,qs),
(265,556,ls),
(334,556,o),
(334,489,qs),
(334,106,l),
(420,106,ls),
(489,106,o),
(489,40,qs),
(489,17,ls),
(489,0,o),
(474,0,qs),
(87,0,ls),
(74,0,o),
(74,13,qs),
(74,93,ls),
(74,106,o),
(87,106,qs),
(219,106,l),
(219,441,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
26 1 0 3 1 76 0 3 3 23 77 2 1 0 0 1 96 0 1 1 24 1 78 50 35 51 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,106,o),
(459,42,qs),
(459,17,ls),
(459,0,o),
(444,0,qs),
(61,0,ls),
(48,0,o),
(48,13,qs),
(48,110,o),
(98,175,qs),
(131,219,o),
(204,264,qs),
(270,304,o),
(282,314,qs),
(332,352,o),
(332,400,qs),
(332,428,o),
(282,463,o),
(240,463,qs),
(175,463,o),
(105,427,qs),
(98,423,o),
(92,423,qs),
(85,423,o),
(82,432,qs),
(73,459,ls),
(52,523,o),
(117,545,qs),
(182,566,o),
(249,566,qs),
(330,566,o),
(384,533,qs),
(451,490,o),
(451,406,qs),
(451,341,o),
(408,289,qs),
(375,249,o),
(290,196,qs),
(234,161,o),
(197,126,o),
(193,106,q),
(390,106,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 59 35 21 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,166,qs),
(464,94,o),
(416,46,qs),
(358,-10,o),
(256,-10,qs),
(167,-10,o),
(111,34,qs),
(56,77,o),
(56,135,qs),
(56,161,o),
(74,161,qs),
(80,161,o),
(91,152,qs),
(161,92,o),
(247,92,qs),
(294,92,o),
(347,134,o),
(347,171,qs),
(347,230,o),
(269,230,qs),
(200,230,ls),
(165,230,o),
(135,256,o),
(135,287,qs),
(135,317,ls),
(135,336,o),
(150,336,qs),
(252,336,ls),
(328,336,o),
(328,401,qs),
(328,431,o),
(286,465,o),
(249,465,qs),
(179,465,o),
(111,429,qs),
(102,424,o),
(96,424,qs),
(89,424,o),
(86,433,qs),
(77,459,ls),
(56,523,o),
(121,545,qs),
(186,566,o),
(257,566,qs),
(333,566,o),
(383,534,qs),
(446,493,o),
(446,413,qs),
(446,375,o),
(404,310,o),
(367,291,q),
(464,262,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 103 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 103 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 34 35 52 51 35 21 38 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,426,l),
(158,216,l),
(294,216,l)
);
},
{
closed = 1;
nodes = (
(32,109,o),
(32,122,qs),
(32,186,ls),
(32,200,o),
(42,217,qs),
(239,531,ls),
(255,556,o),
(283,556,qs),
(340,556,ls),
(410,556,o),
(410,489,qs),
(410,216,l),
(435,216,ls),
(505,216,o),
(505,149,qs),
(505,126,ls),
(505,109,o),
(489,109,qs),
(410,109,l),
(409,13,ls),
(409,0,o),
(397,0,qs),
(307,0,ls),
(294,0,o),
(294,13,qs),
(294,109,l),
(45,109,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 0 4 1 76 3 6 2 0 7 5 2 2 1 0 2 104 0 4 4 23 77 0 1 1 24 1 78 3 3 0 0 3 29 3 28 22 19 17 15 12 10 8 5 0 2 0 2 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,368,o),
(275,368,qs),
(359,368,o),
(410,326,qs),
(467,278,o),
(467,190,qs),
(467,105,o),
(412,50,qs),
(351,-10,o),
(256,-10,qs),
(174,-10,o),
(119,28,qs),
(59,70,o),
(59,130,qs),
(59,157,o),
(77,157,qs),
(84,157,o),
(95,148,qs),
(159,92,o),
(243,92,qs),
(351,92,o),
(351,187,qs),
(351,223,o),
(293,266,o),
(244,266,qs),
(172,266,o),
(99,243,qs),
(83,239,o),
(83,254,qs),
(83,543,ls),
(83,556,o),
(96,556,qs),
(367,556,ls),
(437,556,o),
(437,489,qs),
(437,466,ls),
(437,449,o),
(421,449,qs),
(194,449,l),
(194,359,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 2 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 35 37 51 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,93,o),
(265,93,qs),
(306,93,o),
(360,147,o),
(360,189,qs),
(360,232,o),
(305,288,o),
(263,288,qs),
(221,288,o),
(165,232,o),
(165,189,qs),
(165,147,o)
);
},
{
closed = 1;
nodes = (
(285,386,qs),
(365,386,o),
(418,334,qs),
(475,279,o),
(475,199,qs),
(475,115,o),
(426,58,qs),
(367,-10,o),
(266,-10,qs),
(177,-10,o),
(117,38,qs),
(48,94,o),
(48,186,qs),
(48,225,o),
(80,308,o),
(121,374,qs),
(232,555,ls),
(239,566,o),
(252,566,qs),
(290,566,o),
(305,535,qs),
(323,497,o),
(294,449,qs),
(254,383,l),
(270,386,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 4 0 0 1 4 0 106 0 2 2 23 77 0 1 1 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 2 4 2 133 0 4 0 0 1 4 0 106 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 40 38 36 34 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(65,449,o),
(65,462,qs),
(65,543,ls),
(65,556,o),
(78,556,qs),
(394,556,ls),
(464,556,o),
(464,489,qs),
(464,476,ls),
(464,448,o),
(451,419,qs),
(260,13,ls),
(254,0,o),
(241,0,qs),
(144,0,ls),
(138,0,o),
(133,8,o),
(136,13,qs),
(341,449,l),
(78,449,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 19 0 18 54 51 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,83,o),
(259,83,qs),
(303,83,o),
(359,126,o),
(359,160,qs),
(359,240,o),
(259,240,qs),
(158,240,o),
(158,160,qs),
(158,126,o)
);
},
{
closed = 1;
nodes = (
(217,333,o),
(259,333,qs),
(301,333,o),
(349,371,o),
(349,403,qs),
(349,436,o),
(300,474,o),
(259,474,qs),
(217,474,o),
(168,436,o),
(168,403,qs),
(168,371,o)
);
},
{
closed = 1;
nodes = (
(54,417,qs),
(54,481,o),
(104,521,qs),
(160,566,o),
(259,566,qs),
(344,566,o),
(399,532,qs),
(463,491,o),
(463,417,qs),
(463,329,o),
(380,290,q),
(476,256,o),
(476,159,qs),
(476,90,o),
(427,45,qs),
(368,-10,o),
(259,-10,qs),
(163,-10,o),
(105,33,qs),
(41,80,o),
(41,159,qs),
(41,256,o),
(137,290,q),
(54,329,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 36 36 35 33 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,324,o),
(355,367,qs),
(355,409,o),
(299,462,o),
(256,462,qs),
(214,462,o),
(160,408,o),
(160,367,qs),
(160,322,o),
(213,267,o),
(258,267,qs),
(300,267,o)
);
},
{
closed = 1;
nodes = (
(231,170,qs),
(152,170,o),
(100,221,qs),
(45,275,o),
(45,353,qs),
(45,440,o),
(97,498,qs),
(157,565,o),
(258,565,qs),
(347,565,o),
(405,518,qs),
(472,463,o),
(472,370,qs),
(472,331,o),
(441,248,o),
(401,183,qs),
(290,3,ls),
(282,-10,o),
(269,-10,qs),
(230,-10,o),
(216,23,qs),
(198,61,o),
(227,107,qs),
(268,174,l),
(248,170,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 4 2 134 5 1 0 0 4 2 0 4 105 0 1 1 3 97 0 3 3 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 4 2 134 0 3 0 1 0 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 97 0 4 0 4 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
1 0 36 34 28 26 18 16 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(166,432,o),
(166,435,qs),
(166,442,o),
(174,442,qs),
(236,442,l),
(262,550,o),
(324,619,qs),
(385,687,o),
(459,697,qs),
(464,698,o),
(464,692,qs),
(464,682,ls),
(464,648,o),
(453,612,o),
(437,596,qs),
(429,588,o),
(426,584,qs),
(372,522,o),
(346,442,q),
(402,442,ls),
(409,442,o),
(409,435,qs),
(409,432,o),
(407,429,q),
(336,358,l),
(313,372,o),
(288,372,qs),
(260,372,o),
(239,358,q),
(169,429,ls)
);
},
{
closed = 1;
nodes = (
(204,228,q),
(132,159,ls),
(129,156,o),
(127,156,qs),
(120,156,o),
(120,164,qs),
(120,226,l),
(58,252,ls),
(50,255,o),
(50,264,qs),
(50,289,ls),
(50,298,o),
(58,302,qs),
(120,328,l),
(120,389,ls),
(120,397,o),
(126,397,qs),
(129,397,o),
(132,394,qs),
(204,326,l),
(190,307,o),
(190,278,qs),
(190,252,o)
);
},
{
closed = 1;
nodes = (
(527,298,o),
(527,288,qs),
(527,263,ls),
(527,254,o),
(518,251,qs),
(457,225,l),
(456,161,ls),
(456,154,o),
(449,154,qs),
(447,154,o),
(444,157,qs),
(372,227,l),
(387,251,o),
(387,277,qs),
(387,303,o),
(372,324,q),
(444,393,ls),
(447,396,o),
(450,396,qs),
(457,396,o),
(457,388,qs),
(457,327,l),
(518,301,ls)
);
},
{
closed = 1;
nodes = (
(345,299,o),
(345,276,qs),
(345,252,o),
(311,218,o),
(287,218,qs),
(263,218,o),
(230,252,o),
(230,276,qs),
(230,300,o),
(263,333,o),
(287,333,qs),
(311,333,o)
);
},
{
closed = 1;
nodes = (
(433,-40,qs),
(453,-59,o),
(464,-93,o),
(464,-130,qs),
(464,-140,ls),
(464,-146,o),
(459,-145,qs),
(396,-137,o),
(340,-84,qs),
(266,-13,o),
(236,110,q),
(174,110,ls),
(166,110,o),
(166,117,qs),
(166,120,o),
(169,122,q),
(239,194,l),
(260,179,o),
(288,179,qs),
(313,179,o),
(336,194,q),
(407,122,ls),
(409,120,o),
(409,117,qs),
(409,110,o),
(402,110,qs),
(346,110,l),
(372,30,o),
(426,-32,qs),
(429,-36,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
35 27 7 3 4 1 37 1 0 4 4 1 6 0 69 63 59 53 51 45 38 32 8 7 6 100 96 2 9 7 103 93 2 8 3 6 76 18 1 1 74 112 1 8 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
35 27 7 3 4 1 37 1 0 4 4 1 6 0 69 63 59 53 51 45 38 32 8 7 6 100 96 2 9 7 103 93 2 8 5 6 76 18 1 1 74 112 1 8 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
35 27 7 3 4 1 37 1 0 4 4 1 6 0 69 63 59 53 51 45 38 32 8 7 6 100 96 2 9 7 103 93 2 8 3 6 76 18 1 1 74 112 1 8 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
2 1 1 4 1 133 0 4 0 4 133 0 0 6 0 133 0 9 7 3 7 9 3 128 5 1 3 8 7 3 8 126 10 1 8 8 132 11 1 6 7 7 6 89 11 1 6 6 7 97 0 7 6 7 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
2 1 1 4 1 133 0 4 0 4 133 0 0 6 0 133 0 9 7 3 7 9 3 128 0 3 5 7 3 5 126 0 5 8 7 5 8 126 10 1 8 8 132 11 1 6 7 7 6 89 11 1 6 6 7 97 0 7 6 7 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 1 1 4 1 133 0 4 0 4 133 0 0 6 0 133 0 9 7 3 7 9 3 128 5 1 3 8 7 3 8 126 10 1 8 8 132 11 1 6 7 7 6 89 11 1 6 6 7 97 0 7 6 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
77 76 106 104 99 97 92 90 83 81 76 87 77 87 67 66 56 55 48 47 46 37 33 12 6 25 
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(136,592,qs),
(116,612,o),
(104,645,o),
(104,682,qs),
(104,692,ls),
(104,698,o),
(110,697,qs),
(173,689,o),
(229,636,qs),
(303,565,o),
(333,442,q),
(395,442,ls),
(403,442,o),
(403,435,qs),
(403,432,o),
(400,429,qs),
(329,358,l),
(308,372,o),
(280,372,qs),
(256,372,o),
(233,358,q),
(162,429,l),
(160,432,o),
(160,435,qs),
(160,442,o),
(167,442,qs),
(223,442,l),
(197,522,o),
(143,584,qs),
(140,588,o)
);
},
{
closed = 1;
nodes = (
(519,298,o),
(519,289,qs),
(519,264,ls),
(519,255,o),
(510,252,qs),
(449,226,l),
(449,164,ls),
(449,156,o),
(442,156,qs),
(439,156,o),
(436,159,qs),
(364,228,l),
(379,252,o),
(379,278,qs),
(379,307,o),
(364,326,q),
(437,394,ls),
(440,397,o),
(443,397,qs),
(449,397,o),
(449,389,qs),
(449,328,l),
(510,302,ls)
);
},
{
closed = 1;
nodes = (
(50,251,ls),
(42,254,o),
(42,263,qs),
(42,288,ls),
(42,298,o),
(50,301,qs),
(112,327,l),
(112,388,ls),
(112,396,o),
(119,396,qs),
(122,396,o),
(124,393,q),
(196,324,l),
(182,303,o),
(182,277,qs),
(182,251,o),
(196,227,q),
(125,157,ls),
(122,154,o),
(119,154,qs),
(113,154,o),
(113,161,qs),
(112,225,l)
);
},
{
closed = 1;
nodes = (
(339,300,o),
(339,276,qs),
(339,252,o),
(305,218,o),
(281,218,qs),
(258,218,o),
(224,252,o),
(224,276,qs),
(224,299,o),
(258,333,o),
(281,333,qs),
(305,333,o)
);
},
{
closed = 1;
nodes = (
(403,120,o),
(403,117,qs),
(403,110,o),
(395,110,qs),
(333,110,l),
(306,1,o),
(244,-67,qs),
(183,-135,o),
(110,-145,qs),
(104,-146,o),
(104,-140,qs),
(104,-130,ls),
(104,-95,o),
(116,-59,o),
(132,-44,qs),
(140,-36,o),
(143,-32,qs),
(197,30,o),
(223,110,q),
(167,110,ls),
(160,110,o),
(160,117,qs),
(160,120,o),
(162,122,qs),
(233,194,l),
(256,179,o),
(280,179,qs),
(308,179,o),
(329,194,q),
(400,122,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
15 5 2 3 0 12 8 2 7 1 75 68 62 58 46 40 36 30 8 8 7 92 1 9 8 115 95 2 10 4 5 76 106 1 10 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
15 5 2 3 0 12 8 2 7 1 75 68 62 58 46 40 36 30 8 8 7 92 1 9 8 115 95 2 10 5 5 76 106 1 10 73 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
15 5 2 3 0 12 8 2 7 1 75 68 62 58 46 40 36 30 8 8 7 92 1 9 8 115 95 2 10 4 5 76 106 1 10 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
2 1 0 3 0 133 6 1 3 1 3 133 0 1 7 1 133 0 9 8 4 8 9 4 128 5 1 4 10 8 4 10 126 11 1 10 10 132 12 1 7 8 8 7 89 12 1 7 7 8 97 0 8 7 8 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
2 1 0 3 0 133 6 1 3 1 3 133 0 1 7 1 133 0 9 8 4 8 9 4 128 0 4 5 8 4 5 126 0 5 10 8 5 10 126 11 1 10 10 132 12 1 7 8 8 7 89 12 1 7 7 8 97 0 8 7 8 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
2 1 0 3 0 133 6 1 3 1 3 133 0 1 7 1 133 0 9 8 4 8 9 4 128 5 1 4 10 8 4 10 126 11 1 10 10 132 12 1 7 8 8 7 89 12 1 7 7 8 97 0 8 7 8 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
77 76 114 112 98 96 91 89 83 81 76 87 77 87 25 42 25 46 37 37 34 13 6 29 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,384,ls),
(97,460,o),
(137,508,qs),
(184,564,o),
(271,564,qs),
(348,564,o),
(394,521,qs),
(446,472,o),
(446,384,qs),
(446,93,ls),
(446,0,o),
(355,0,qs),
(345,0,ls),
(331,0,o),
(331,12,qs),
(331,392,ls),
(331,423,o),
(299,459,o),
(271,459,qs),
(243,459,o),
(211,422,o),
(211,391,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 30 28 23 21 16 13 9 7 0 31 1 31 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,169,o),
(52,187,qs),
(43,463,ls),
(43,556,o),
(135,556,qs),
(145,556,ls),
(157,556,o),
(157,544,qs),
(150,187,ls),
(150,169,o),
(131,169,qs),
(71,169,ls)
);
},
{
closed = 1;
nodes = (
(170,87,o),
(170,58,qs),
(170,29,o),
(131,-12,o),
(102,-12,qs),
(74,-12,o),
(34,29,o),
(34,58,qs),
(34,87,o),
(74,128,o),
(102,128,qs),
(131,128,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 0 3 2 3 101 4 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
13 12 1 0 19 17 12 23 13 23 7 4 0 11 1 10 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,0,o),
(130,19,qs),
(130,462,ls),
(130,537,o),
(183,551,qs),
(198,556,o),
(229,556,qs),
(314,556,o),
(365,501,qs),
(368,497,o),
(372,501,q),
(411,556,o),
(493,556,qs),
(547,556,ls),
(558,556,o),
(558,543,qs),
(558,534,ls),
(558,498,o),
(533,461,o),
(503,453,q),
(501,453,o),
(492,451,qs),
(483,450,o),
(479,449,qs),
(448,443,o),
(408,400,o),
(385,347,qs),
(379,333,o),
(370,333,qs),
(362,333,o),
(355,347,qs),
(331,400,o),
(296,440,o),
(266,446,q),
(262,446,o),
(253,447,qs),
(249,448,o),
(248,448,qs),
(244,448,o),
(244,444,qs),
(244,19,ls),
(244,0,o),
(225,0,qs),
(149,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 2 1 76 0 1 2 0 2 1 0 128 3 1 2 2 23 77 4 1 0 0 24 0 78 1 0 37 35 31 28 15 13 0 43 1 42 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,556,o),
(458,556,qs),
(467,556,o),
(469,544,qs),
(469,542,o),
(469,540,qs),
(470,535,o),
(470,531,qs),
(479,438,o),
(436,409,qs),
(250,276,l),
(193,229,o),
(193,182,qs),
(192,150,o),
(236,108,o),
(271,108,qs),
(524,108,ls),
(566,108,o),
(617,64,o),
(617,28,qs),
(617,20,ls),
(617,7,o),
(609,0,o),
(595,0,qs),
(262,0,ls),
(187,0,o),
(137,39,qs),
(76,86,o),
(76,175,qs),
(76,240,o),
(113,293,qs),
(145,339,o),
(219,392,qs),
(443,549,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 28 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,502,o),
(74,516,q),
(19,656,l),
(16,666,o),
(26,666,qs),
(70,666,o),
(85,628,qs),
(108,571,l),
(131,628,ls),
(145,666,o),
(189,666,qs),
(200,666,o),
(197,656,q),
(142,516,l),
(138,502,o),
(123,502,qs),
(93,502,ls)
);
},
{
closed = 1;
nodes = (
(453,556,o),
(453,543,qs),
(453,187,ls),
(453,106,o),
(412,58,qs),
(364,0,o),
(272,0,qs),
(59,0,ls),
(45,0,o),
(36,8,o),
(36,21,qs),
(36,31,ls),
(36,68,o),
(87,114,o),
(128,114,qs),
(153,114,l),
(82,332,ls),
(52,422,o),
(147,449,qs),
(155,452,l),
(165,454,o),
(168,444,qs),
(277,114,l),
(284,114,ls),
(308,114,o),
(338,155,o),
(338,189,qs),
(338,462,ls),
(338,556,o),
(429,556,qs),
(440,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
8 1 3 1 1 76 2 1 1 3 1 133 7 1 0 3 4 3 0 4 128 8 1 3 3 23 77 5 1 4 4 6 96 0 6 6 24 6 78 18 17 1 0 41 38 33 31 24 22 17 47 18 46 12 10 6 4 0 16 1 15 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(78,502,o),
(74,516,q),
(19,656,l),
(16,666,o),
(26,666,qs),
(70,666,o),
(85,628,qs),
(108,571,l),
(131,628,ls),
(145,666,o),
(189,666,qs),
(200,666,o),
(197,656,q),
(142,516,l),
(138,502,o),
(123,502,qs),
(93,502,ls)
);
},
{
closed = 1;
nodes = (
(552,0,l),
(519,0,ls),
(443,0,o),
(395,40,q),
(348,0,o),
(272,0,qs),
(59,0,ls),
(45,0,o),
(36,8,o),
(36,21,qs),
(36,31,ls),
(36,68,o),
(87,114,o),
(128,114,qs),
(153,114,l),
(82,332,ls),
(52,422,o),
(147,449,qs),
(155,452,l),
(165,454,o),
(168,444,qs),
(277,114,l),
(284,114,ls),
(308,114,o),
(338,155,o),
(338,189,qs),
(338,462,ls),
(338,556,o),
(429,556,qs),
(440,556,ls),
(453,556,o),
(453,543,qs),
(453,187,ls),
(453,114,o),
(516,114,qs),
(552,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
8 1 4 1 48 1 7 3 2 76 2 1 1 4 1 133 9 1 0 4 3 4 0 3 128 0 4 4 23 77 6 5 10 3 3 3 7 98 8 1 7 7 24 7 78 18 17 1 0 51 49 47 44 39 37 30 28 24 21 17 52 18 52 12 10 6 4 0 16 1 15 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,648,o),
(454,673,qs),
(454,698,o),
(488,732,o),
(512,732,qs),
(537,732,o),
(571,698,o),
(571,673,qs),
(571,648,o),
(537,613,o),
(512,613,qs),
(488,613,o)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(598,0,o),
(565,11,q),
(549,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 102 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 52 50 46 44 35 34 26 24 19 16 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,698,o),
(211,673,qs),
(211,648,o),
(177,613,o),
(153,613,qs),
(129,613,o),
(95,648,o),
(95,673,qs),
(95,698,o),
(128,732,o),
(153,732,qs),
(178,732,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,648,o),
(95,673,qs),
(95,698,o),
(128,732,o),
(153,732,qs),
(178,732,o),
(211,698,o),
(211,673,qs),
(211,648,o),
(177,613,o),
(153,613,qs),
(129,613,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
28 1 5 2 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 31 29 27 25 24 22 19 16 12 32 13 32 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,763,o),
(459,784,qs),
(459,806,o),
(489,837,o),
(511,837,qs),
(532,837,o),
(562,806,o),
(562,784,qs),
(562,763,o),
(532,732,o),
(511,732,qs),
(489,732,o)
);
},
{
closed = 1;
nodes = (
(391,647,o),
(391,671,qs),
(391,694,o),
(423,727,o),
(446,727,qs),
(469,727,o),
(502,694,o),
(502,671,qs),
(502,647,o),
(469,613,o),
(446,613,qs),
(422,613,o)
);
},
{
closed = 1;
nodes = (
(552,727,o),
(575,727,qs),
(598,727,o),
(631,694,o),
(631,671,qs),
(631,647,o),
(598,613,o),
(575,613,qs),
(551,613,o),
(519,647,o),
(519,671,qs),
(519,694,o)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(598,0,o),
(565,11,q),
(549,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 102 0 7 7 23 77 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 76 74 70 68 59 58 50 48 43 40 36 77 37 77 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,763,o),
(101,784,qs),
(101,806,o),
(131,837,o),
(152,837,qs),
(173,837,o),
(203,806,o),
(203,784,qs),
(203,763,o),
(173,732,o),
(152,732,qs),
(131,732,o)
);
},
{
closed = 1;
nodes = (
(32,647,o),
(32,671,qs),
(32,694,o),
(64,727,o),
(87,727,qs),
(110,727,o),
(143,694,o),
(143,671,qs),
(143,647,o),
(110,613,o),
(87,613,qs),
(64,613,o)
);
},
{
closed = 1;
nodes = (
(160,647,o),
(160,671,qs),
(160,694,o),
(193,727,o),
(216,727,qs),
(239,727,o),
(272,694,o),
(272,671,qs),
(272,647,o),
(239,613,o),
(216,613,qs),
(193,613,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 98 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 50 48 45 42 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,763,o),
(101,784,qs),
(101,806,o),
(131,837,o),
(152,837,qs),
(173,837,o),
(203,806,o),
(203,784,qs),
(203,763,o),
(173,732,o),
(152,732,qs),
(131,732,o)
);
},
{
closed = 1;
nodes = (
(32,647,o),
(32,671,qs),
(32,694,o),
(64,727,o),
(87,727,qs),
(110,727,o),
(143,694,o),
(143,671,qs),
(143,647,o),
(110,613,o),
(87,613,qs),
(64,613,o)
);
},
{
closed = 1;
nodes = (
(193,727,o),
(216,727,qs),
(239,727,o),
(272,694,o),
(272,671,qs),
(272,647,o),
(239,613,o),
(216,613,qs),
(193,613,o),
(160,647,o),
(160,671,qs),
(160,694,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
52 1 9 6 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 98 10 1 9 9 24 9 78 37 36 13 12 1 0 55 53 51 49 48 46 43 40 36 56 37 56 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(424,780,o),
(434,780,qs),
(478,780,o),
(493,742,qs),
(516,685,l),
(539,742,ls),
(554,780,o),
(598,780,qs),
(608,780,o),
(606,771,q),
(551,630,ls),
(546,617,o),
(532,617,qs),
(501,617,ls),
(487,617,o),
(482,630,qs),
(427,771,ls)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(598,0,o),
(565,11,q),
(549,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
11 1 0 1 1 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 102 0 4 4 23 77 9 1 3 3 8 98 0 8 8 24 8 78 18 17 57 55 51 49 40 39 31 29 24 21 17 58 18 58 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,771,q),
(195,630,ls),
(190,617,o),
(176,617,qs),
(145,617,ls),
(131,617,o),
(126,630,qs),
(71,771,ls),
(68,780,o),
(78,780,qs),
(122,780,o),
(137,742,qs),
(160,685,l),
(183,742,ls),
(198,780,o),
(242,780,qs),
(252,780,o)
);
},
{
closed = 1;
nodes = (
(211,556,o),
(211,543,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
3 1 2 0 1 76 1 6 2 0 2 0 133 0 2 3 2 133 7 1 3 3 23 77 0 4 4 5 98 0 5 5 24 5 78 18 17 1 0 26 24 23 21 17 32 18 31 13 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,780,o),
(78,780,qs),
(122,780,o),
(137,742,qs),
(160,685,l),
(183,742,ls),
(198,780,o),
(242,780,qs),
(252,780,o),
(250,771,q),
(195,630,ls),
(190,617,o),
(176,617,qs),
(145,617,ls),
(131,617,o),
(126,630,qs),
(71,771,ls)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
11 1 0 1 33 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 98 7 1 6 6 24 6 78 18 17 36 34 32 30 29 27 24 21 17 37 18 37 36 35 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,0,o),
(127,0,qs),
(29,0,ls),
(19,0,o),
(24,9,qs),
(296,502,ls),
(325,556,o),
(375,556,qs),
(418,556,ls),
(435,556,o),
(426,538,qs),
(136,5,ls)
);
},
{
closed = 1;
nodes = (
(200,488,o),
(200,463,qs),
(200,438,o),
(166,403,o),
(142,403,qs),
(117,403,o),
(83,438,o),
(83,463,qs),
(83,488,o),
(117,522,o),
(142,522,qs),
(166,522,o)
);
},
{
closed = 1;
nodes = (
(357,82,o),
(357,57,qs),
(357,32,o),
(323,-3,o),
(299,-3,qs),
(275,-3,o),
(240,32,o),
(240,57,qs),
(240,82,o),
(274,116,o),
(299,116,qs),
(324,116,o)
);
},
{
closed = 1;
nodes = (
(540,82,o),
(540,57,qs),
(540,32,o),
(507,-3,o),
(482,-3,qs),
(458,-3,o),
(424,32,o),
(424,57,qs),
(424,82,o),
(458,116,o),
(482,116,qs),
(507,116,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 0 2 0 133 0 1 4 5 4 1 5 128 8 1 2 0 3 4 2 3 105 10 6 9 3 4 1 5 4 89 10 6 9 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 35 49 11 6 24 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,279,ls),
(117,373,o),
(208,373,qs),
(218,373,ls),
(231,373,o),
(231,361,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
},
{
closed = 1;
nodes = (
(135,-317,o),
(135,-342,qs),
(135,-367,o),
(101,-402,o),
(77,-402,qs),
(53,-402,o),
(19,-367,o),
(19,-342,qs),
(19,-317,o),
(52,-283,o),
(77,-283,qs),
(102,-283,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 133 3 1 2 0 4 6 2 4 106 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 106 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
32 31 1 0 38 36 31 42 32 42 29 27 23 21 17 15 13 11 7 4 0 30 1 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,599,o),
(95,599,qs),
(139,599,o),
(154,562,qs),
(177,504,l),
(200,562,ls),
(215,599,o),
(259,599,qs),
(269,599,o),
(266,590,qs),
(211,449,ls),
(206,436,o),
(193,436,qs),
(162,436,ls),
(148,436,o),
(143,449,qs),
(88,590,ls)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,279,ls),
(117,373,o),
(208,373,qs),
(218,373,ls),
(231,373,o),
(231,361,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 43 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 6 1 5 0 7 5 7 102 9 1 3 3 8 98 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 102 9 1 3 3 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 17 46 44 40 38 34 32 30 28 24 21 17 47 18 47 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,279,ls),
(117,373,o),
(208,373,qs),
(218,373,ls),
(231,373,o),
(231,361,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
},
{
closed = 1;
nodes = (
(156,-293,q),
(101,-433,ls),
(96,-447,o),
(82,-447,qs),
(51,-447,ls),
(38,-447,o),
(33,-433,qs),
(-22,-293,l),
(-25,-283,o),
(-15,-283,qs),
(29,-283,o),
(44,-321,qs),
(66,-378,l),
(90,-321,ls),
(105,-283,o),
(148,-283,qs),
(159,-283,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
26 1 5 0 34 1 8 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 0 1 133 7 10 2 6 4 8 4 6 8 128 0 8 8 132 3 1 2 0 4 6 2 4 106 9 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 7 10 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 106 9 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
32 31 1 0 44 41 38 36 31 47 32 47 29 27 23 21 17 15 13 11 7 4 0 30 1 30 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(194,598,o),
(243,553,o),
(243,512,qs),
(243,471,o),
(194,426,o),
(150,426,qs),
(21,426,ls),
(14,426,o),
(14,433,qs),
(14,439,ls),
(16,479,o),
(63,479,q),
(63,604,ls),
(63,658,o),
(107,658,qs),
(112,658,ls),
(118,658,o),
(118,653,qs),
(118,598,l),
(150,598,ls)
);
},
{
closed = 1;
nodes = (
(167,479,o),
(186,498,o),
(186,512,qs),
(186,527,o),
(167,545,o),
(152,545,qs),
(118,545,l),
(118,479,l),
(152,479,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
1 1 3 0 1 76 0 0 3 0 133 6 1 3 0 4 1 3 4 105 7 5 2 1 2 2 1 89 7 5 2 1 1 2 95 0 2 1 2 79 20 20 0 0 20 28 20 27 23 21 0 19 0 18 51 18 35 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 264;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-98,o),
(138,-122,qs),
(138,-145,o),
(105,-178,o),
(82,-178,qs),
(58,-178,o),
(26,-145,o),
(26,-122,qs),
(26,-98,o),
(58,-64,o),
(82,-64,qs),
(105,-64,o)
);
},
{
closed = 1;
nodes = (
(267,-98,o),
(267,-122,qs),
(267,-145,o),
(234,-178,o),
(210,-178,qs),
(187,-178,o),
(155,-145,o),
(155,-122,qs),
(155,-98,o),
(187,-64,o),
(210,-64,qs),
(234,-64,o)
);
},
{
closed = 1;
nodes = (
(198,-214,o),
(198,-236,qs),
(198,-257,o),
(168,-288,o),
(147,-288,qs),
(125,-288,o),
(95,-257,o),
(95,-236,qs),
(95,-214,o),
(125,-183,o),
(147,-183,qs),
(168,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,464,o),
(34,488,qs),
(34,512,o),
(67,545,o),
(90,545,qs),
(114,545,o),
(146,512,o),
(146,488,qs),
(146,464,o),
(114,431,o),
(90,431,qs),
(67,431,o)
);
},
{
closed = 1;
nodes = (
(163,464,o),
(163,488,qs),
(163,512,o),
(196,545,o),
(219,545,qs),
(242,545,o),
(275,512,o),
(275,488,qs),
(275,464,o),
(242,431,o),
(219,431,qs),
(196,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,-98,o),
(138,-122,qs),
(138,-145,o),
(106,-178,o),
(82,-178,qs),
(59,-178,o),
(26,-145,o),
(26,-122,qs),
(26,-98,o),
(59,-64,o),
(82,-64,qs),
(106,-64,o)
);
},
{
closed = 1;
nodes = (
(267,-98,o),
(267,-122,qs),
(267,-145,o),
(234,-178,o),
(211,-178,qs),
(188,-178,o),
(155,-145,o),
(155,-122,qs),
(155,-98,o),
(188,-64,o),
(211,-64,qs),
(234,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 321;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,522,q),
(23,521,o),
(22,518,q),
(17,511,o),
(14,510,qs),
(10,509,o),
(8,513,qs),
(-4,534,o),
(2,555,qs),
(10,586,o),
(46,584,qs),
(55,583,o),
(68,580,qs),
(72,579,o),
(73,579,qs),
(79,578,o),
(82,582,qs),
(108,618,o),
(140,640,o),
(164,640,qs),
(192,640,o),
(226,606,o),
(226,578,qs),
(226,551,o),
(182,511,o),
(152,511,qs),
(129,511,o),
(92,526,q),
(91,527,o),
(89,527,q),
(61,538,o),
(50,538,qs),
(36,538,o)
);
},
{
closed = 1;
nodes = (
(181,573,o),
(181,583,qs),
(181,598,o),
(164,598,qs),
(146,598,o),
(122,565,q),
(137,558,o),
(151,558,qs),
(163,558,o)
);
},
{
closed = 1;
nodes = (
(47,0,o),
(39,8,o),
(39,21,qs),
(39,31,ls),
(39,68,o),
(89,114,o),
(130,114,qs),
(156,114,l),
(85,332,ls),
(55,422,o),
(150,449,q),
(157,452,l),
(167,454,o),
(171,444,qs),
(279,114,l),
(286,114,ls),
(311,114,o),
(341,155,o),
(341,189,qs),
(341,462,ls),
(341,556,o),
(432,556,qs),
(442,556,ls),
(455,556,o),
(455,543,qs),
(455,187,ls),
(455,106,o),
(414,58,qs),
(366,0,o),
(275,0,qs),
(61,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 4 3 27 1 8 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 0 8 5 1 114 0 2 0 5 3 2 5 105 0 3 10 1 0 1 3 0 105 7 11 2 4 4 23 77 9 1 8 8 6 96 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 0 8 0 1 8 128 0 2 0 5 3 2 5 105 0 3 10 1 0 1 3 0 105 7 11 2 4 4 23 77 9 1 8 8 6 96 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
43 42 34 33 1 0 66 64 57 55 51 48 42 72 43 71 38 36 33 41 34 41 22 21 13 11 7 5 0 32 1 32 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,527,q),
(61,538,o),
(50,538,qs),
(36,538,o),
(25,522,q),
(23,521,o),
(22,518,q),
(17,511,o),
(14,510,qs),
(10,509,o),
(8,513,qs),
(-4,534,o),
(2,555,qs),
(10,586,o),
(46,584,qs),
(55,583,o),
(68,580,qs),
(72,579,o),
(73,579,qs),
(79,578,o),
(82,582,qs),
(108,618,o),
(140,640,o),
(164,640,qs),
(192,640,o),
(226,606,o),
(226,578,qs),
(226,551,o),
(182,511,o),
(152,511,qs),
(129,511,o),
(92,526,q),
(91,527,o)
);
},
{
closed = 1;
nodes = (
(122,565,q),
(137,558,o),
(151,558,qs),
(163,558,o),
(181,573,o),
(181,583,qs),
(181,598,o),
(164,598,qs),
(146,598,o)
);
},
{
closed = 1;
nodes = (
(555,0,l),
(521,0,ls),
(445,0,o),
(397,40,q),
(350,0,o),
(275,0,qs),
(61,0,ls),
(47,0,o),
(39,8,o),
(39,21,qs),
(39,31,ls),
(39,68,o),
(89,114,o),
(130,114,qs),
(156,114,l),
(85,332,ls),
(55,422,o),
(150,449,q),
(157,452,l),
(167,454,o),
(171,444,qs),
(279,114,l),
(286,114,ls),
(311,114,o),
(341,155,o),
(341,189,qs),
(341,462,ls),
(341,556,o),
(432,556,qs),
(442,556,ls),
(455,556,o),
(455,543,qs),
(455,187,ls),
(456,114,o),
(519,114,qs),
(555,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
40 1 5 2 23 1 6 0 73 1 10 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 3 6 4 0 114 0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 7 1 5 5 23 77 9 8 13 3 6 6 10 98 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 3 6 3 0 6 128 0 1 12 1 4 2 1 4 105 0 2 0 3 0 2 3 105 7 1 5 5 23 77 9 8 13 3 6 6 10 98 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
43 42 34 33 76 74 72 69 64 62 55 53 49 46 42 77 43 77 39 37 33 41 34 41 42 24 36 33 14 7 26 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,759,qs),
(38,767,o),
(38,775,qs),
(40,816,o),
(95,817,qs),
(151,818,l),
(185,818,ls),
(227,818,o),
(227,781,qs),
(227,775,ls),
(227,767,o),
(217,767,qs),
(93,767,ls),
(72,767,o),
(53,758,qs),
(48,755,o),
(46,755,qs),
(43,755,o)
);
},
{
closed = 1;
nodes = (
(41,671,qs),
(38,678,o),
(38,686,qs),
(40,727,o),
(95,728,qs),
(151,729,l),
(185,729,ls),
(227,729,o),
(227,692,qs),
(227,686,ls),
(227,678,o),
(217,678,qs),
(93,678,ls),
(72,678,o),
(53,669,qs),
(48,666,o),
(46,666,qs),
(43,666,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 3 0 78 59 46 3 5 4 72 1 9 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 6 11 3 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
8 6 11 3 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
37 36 75 73 71 69 63 61 57 55 50 48 44 42 36 80 37 80 67 56 67 51 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,704,o),
(69,733,qs),
(69,761,o),
(107,798,o),
(136,798,qs),
(165,798,o),
(202,761,o),
(202,733,qs),
(202,704,o),
(165,667,o),
(136,667,qs),
(107,667,o)
);
},
{
closed = 1;
nodes = (
(113,733,qs),
(113,708,o),
(136,708,qs),
(158,708,o),
(158,733,qs),
(158,758,o),
(136,758,qs),
(113,758,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
62 43 30 3 5 4 56 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 6 13 3 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
8 6 13 3 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
21 20 13 12 1 0 59 57 55 53 47 45 41 39 34 32 28 26 20 64 21 64 17 15 12 19 13 19 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,251,o),
(445,244,qs),
(445,237,o),
(440,232,qs),
(352,143,l),
(348,138,o),
(340,138,qs),
(332,138,o),
(327,143,qs),
(239,232,ls),
(234,237,o),
(234,244,qs),
(234,252,o),
(239,257,qs),
(328,343,l),
(332,349,o),
(340,349,qs),
(348,349,o),
(352,344,q),
(440,257,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,0,o),
(282,13,qs),
(282,462,ls),
(282,556,o),
(374,556,qs),
(384,556,ls),
(397,556,o),
(397,543,qs),
(397,13,ls),
(397,0,o),
(384,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,0,o),
(202,13,qs),
(202,364,ls),
(202,451,o),
(242,500,qs),
(287,556,o),
(376,556,qs),
(479,556,ls),
(490,556,o),
(490,543,qs),
(490,534,ls),
(490,449,o),
(404,449,qs),
(384,449,ls),
(347,449,o),
(316,414,o),
(316,372,qs),
(317,13,ls),
(317,0,o),
(304,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(631,556,o),
(631,544,qs),
(631,436,ls),
(631,354,o),
(590,303,qs),
(543,244,o),
(457,244,qs),
(387,244,o),
(341,289,q),
(297,244,o),
(226,244,qs),
(194,244,o),
(165,254,q),
(165,13,ls),
(165,0,o),
(152,0,qs),
(62,0,ls),
(50,0,o),
(50,13,qs),
(49,463,ls),
(49,556,o),
(140,556,qs),
(150,556,ls),
(163,556,o),
(163,544,qs),
(163,441,ls),
(163,358,o),
(227,358,qs),
(291,358,o),
(291,441,qs),
(291,468,ls),
(291,509,o),
(331,556,o),
(367,556,qs),
(377,556,ls),
(390,556,o),
(390,544,qs),
(390,441,ls),
(390,358,o),
(453,358,qs),
(517,358,o),
(517,438,qs),
(517,463,ls),
(517,556,o),
(608,556,qs),
(618,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,228,o),
(297,196,o),
(297,169,qs),
(297,108,o),
(382,108,qs),
(423,108,ls),
(465,108,o),
(516,64,o),
(516,28,qs),
(516,19,ls),
(516,7,o),
(507,0,o),
(494,0,qs),
(371,0,ls),
(304,0,o),
(256,28,qs),
(180,73,o),
(180,176,qs),
(180,244,o),
(229,288,q),
(186,328,o),
(186,389,qs),
(186,463,o),
(230,511,qs),
(280,567,o),
(364,564,qs),
(414,563,o),
(449,537,qs),
(490,506,o),
(488,460,qs),
(487,437,o),
(473,437,qs),
(468,437,o),
(455,441,qs),
(452,442,o),
(445,444,qs),
(401,458,o),
(374,458,qs),
(343,457,o),
(304,424,o),
(304,397,qs),
(304,336,o),
(379,336,qs),
(423,336,ls),
(465,336,o),
(516,292,o),
(516,256,qs),
(516,247,ls),
(516,235,o),
(507,228,o),
(494,228,qs),
(363,228,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 6 1 0 103 3 1 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 36 26 24 20 18 14 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,522,qs),
(510,475,o),
(516,378,qs),
(527,207,o),
(527,181,qs),
(527,99,o),
(482,48,qs),
(431,-10,o),
(340,-10,qs),
(260,-10,o),
(210,35,qs),
(152,87,o),
(152,181,qs),
(152,198,o),
(163,378,qs),
(168,462,o),
(207,510,qs),
(253,564,o),
(340,564,qs),
(415,564,o)
);
},
{
closed = 1;
nodes = (
(280,368,qs),
(270,186,ls),
(268,98,o),
(340,98,qs),
(411,98,o),
(409,186,qs),
(399,368,ls),
(394,456,o),
(340,457,qs),
(286,456,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
21 20 1 0 26 24 20 29 21 29 11 9 0 19 1 19 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(363,0,o),
(363,13,qs),
(364,372,ls),
(364,414,o),
(333,449,o),
(297,449,qs),
(277,449,ls),
(190,449,o),
(190,534,qs),
(190,543,ls),
(190,556,o),
(201,556,qs),
(304,556,ls),
(382,556,o),
(427,513,qs),
(478,463,o),
(478,364,qs),
(478,13,ls),
(478,0,o),
(466,0,qs),
(376,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 9 6 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,151,qs),
(144,450,ls),
(136,496,o),
(180,556,o),
(221,556,qs),
(228,556,ls),
(242,556,o),
(245,537,qs),
(312,137,ls),
(318,103,o),
(345,103,qs),
(372,103,o),
(378,137,qs),
(444,537,ls),
(448,556,o),
(462,556,qs),
(469,556,ls),
(507,556,o),
(529,529,qs),
(554,499,o),
(546,450,qs),
(495,151,ls),
(467,-9,o),
(345,-9,qs),
(223,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 0 2 2 0 98 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
0 2 4 1 0 2 0 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 14 12 9 6 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,0,o),
(129,24,qs),
(193,404,ls),
(221,564,o),
(343,564,qs),
(465,564,o),
(492,404,qs),
(557,24,ls),
(560,0,o),
(540,0,qs),
(464,0,ls),
(445,0,o),
(442,22,qs),
(376,418,ls),
(370,452,o),
(343,452,qs),
(316,452,o),
(309,418,qs),
(244,22,ls),
(240,0,o),
(222,0,qs),
(145,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,519,qs),
(517,464,o),
(517,367,qs),
(517,13,ls),
(517,0,o),
(505,0,qs),
(415,0,ls),
(402,0,o),
(402,13,qs),
(402,177,l),
(337,177,ls),
(264,177,o),
(214,221,qs),
(154,274,o),
(154,367,qs),
(154,452,o),
(201,505,qs),
(253,564,o),
(337,564,qs),
(410,564,o)
);
},
{
closed = 1;
nodes = (
(271,408,o),
(271,367,qs),
(271,331,o),
(309,284,o),
(337,284,qs),
(402,284,l),
(402,367,ls),
(402,409,o),
(367,457,o),
(337,457,qs),
(306,457,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 98 5 1 4 4 24 4 78 1 0 36 34 32 29 21 20 13 10 7 4 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 19 17 15 13 12 10 7 4 0 20 1 20 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(913,0,l),
(721,0,ls),
(661,0,o),
(633,22,q),
(606,0,o),
(545,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(477,114,l),
(449,152,o),
(449,208,qs),
(449,276,o),
(493,327,qs),
(546,391,o),
(633,391,qs),
(709,391,o),
(761,341,qs),
(818,287,o),
(818,208,qs),
(818,152,o),
(790,114,q),
(913,114,l)
);
},
{
closed = 1;
nodes = (
(700,181,o),
(699,209,qs),
(698,241,o),
(662,282,o),
(633,282,qs),
(605,282,o),
(568,241,o),
(568,209,qs),
(567,181,o),
(604,131,o),
(633,120,q),
(662,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
36 1 3 1 1 76 0 2 0 6 0 2 6 128 0 0 0 6 1 0 6 105 7 5 2 1 1 3 96 4 1 3 3 24 3 78 0 0 48 46 0 40 0 40 34 58 23 37 37 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,345,qs),
(451,290,o),
(451,195,qs),
(451,113,o),
(405,60,qs),
(354,1,o),
(271,0,qs),
(-1,0,l),
(-1,114,l),
(105,114,l),
(86,148,o),
(85,195,qs),
(85,277,o),
(131,331,qs),
(183,391,o),
(268,391,qs),
(341,391,o)
);
},
{
closed = 1;
nodes = (
(333,162,o),
(333,198,qs),
(333,234,o),
(296,282,o),
(268,282,qs),
(240,282,o),
(202,234,o),
(202,198,qs),
(202,163,o),
(240,114,o),
(268,114,qs),
(296,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 24 22 17 28 18 28 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,0,l),
(357,0,ls),
(297,0,o),
(269,22,q),
(242,0,o),
(181,0,qs),
(1,0,l),
(1,114,l),
(113,114,l),
(85,152,o),
(85,208,qs),
(85,276,o),
(129,327,qs),
(182,391,o),
(269,391,qs),
(345,391,o),
(397,341,qs),
(454,287,o),
(454,208,qs),
(454,152,o),
(426,114,q),
(549,114,l)
);
},
{
closed = 1;
nodes = (
(336,181,o),
(335,209,qs),
(334,241,o),
(298,282,o),
(269,282,qs),
(241,282,o),
(204,241,o),
(204,209,qs),
(203,181,o),
(240,131,o),
(269,120,q),
(298,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
17 1 2 1 1 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 29 27 0 21 0 21 34 33 21 37 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,514,o),
(116,538,qs),
(116,562,o),
(149,595,o),
(172,595,qs),
(196,595,o),
(228,562,o),
(228,538,qs),
(228,514,o),
(196,481,o),
(172,481,qs),
(149,481,o)
);
},
{
closed = 1;
nodes = (
(245,514,o),
(245,538,qs),
(245,562,o),
(278,595,o),
(301,595,qs),
(324,595,o),
(357,562,o),
(357,538,qs),
(357,514,o),
(324,481,o),
(301,481,qs),
(278,481,o)
);
},
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
43 1 7 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
43 1 8 9 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
49 48 25 24 13 12 1 0 55 53 48 59 49 59 46 44 42 40 34 32 31 28 24 47 25 47 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,252,o),
(445,244,qs),
(445,237,o),
(440,232,qs),
(352,143,ls),
(347,138,o),
(340,138,qs),
(333,138,o),
(328,143,qs),
(239,232,ls),
(234,238,o),
(234,245,qs),
(234,252,o),
(239,257,qs),
(328,344,ls),
(333,349,o),
(340,349,qs),
(347,349,o),
(352,344,qs),
(440,257,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,0,o),
(282,13,qs),
(282,462,ls),
(282,556,o),
(374,556,qs),
(384,556,ls),
(397,556,o),
(397,543,qs),
(397,13,ls),
(397,0,o),
(384,0,qs),
(295,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,0,o),
(202,13,qs),
(202,364,ls),
(202,451,o),
(242,500,qs),
(287,556,o),
(376,556,qs),
(479,556,ls),
(490,556,o),
(490,543,qs),
(490,534,ls),
(490,449,o),
(404,449,qs),
(384,449,ls),
(347,449,o),
(316,414,o),
(316,372,qs),
(317,13,ls),
(317,0,o),
(304,0,qs),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(631,556,o),
(631,544,qs),
(631,436,ls),
(631,354,o),
(590,303,qs),
(543,244,o),
(457,244,qs),
(387,244,o),
(341,289,q),
(297,244,o),
(226,244,qs),
(194,244,o),
(165,254,q),
(165,13,ls),
(165,0,o),
(152,0,qs),
(62,0,ls),
(50,0,o),
(50,13,qs),
(49,463,ls),
(49,556,o),
(140,556,qs),
(150,556,ls),
(163,556,o),
(163,544,qs),
(163,441,ls),
(163,358,o),
(227,358,qs),
(291,358,o),
(291,441,qs),
(291,468,ls),
(291,509,o),
(331,556,o),
(367,556,qs),
(377,556,ls),
(390,556,o),
(390,544,qs),
(390,441,ls),
(390,358,o),
(453,358,qs),
(517,358,o),
(517,438,qs),
(517,463,ls),
(517,556,o),
(608,556,qs),
(618,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,334,qs),
(514,286,o),
(483,255,qs),
(445,219,o),
(385,219,qs),
(332,220,o),
(290,242,q),
(290,19,ls),
(290,0,o),
(271,0,qs),
(195,0,ls),
(176,0,o),
(176,19,qs),
(176,462,ls),
(176,531,o),
(224,549,qs),
(243,556,o),
(268,556,qs),
(277,556,ls),
(290,556,o),
(290,543,qs),
(290,528,l),
(334,565,o),
(385,565,qs),
(429,565,o),
(461,537,qs),
(497,505,o),
(496,459,qs),
(495,437,o),
(481,437,qs),
(477,437,o),
(469,439,q),
(465,441,o),
(463,441,qs),
(459,442,o),
(453,444,qs),
(409,458,o),
(383,458,qs),
(349,457,o),
(294,419,o),
(291,393,q),
(290,392,o),
(290,388,qs),
(291,360,o),
(350,321,o),
(391,321,qs),
(432,320,o),
(477,341,qs),
(498,350,o),
(508,351,qs),
(523,351,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 1 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 4 7 1 7 2 43 1 6 0 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 1 0 1 7 0 128 0 0 0 6 5 0 6 105 2 1 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 36 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,159,qs),
(153,171,o),
(169,375,qs),
(176,461,o),
(216,509,qs),
(262,564,o),
(346,564,qs),
(420,564,o),
(465,522,qs),
(516,473,o),
(524,375,qs),
(541,172,o),
(541,159,qs),
(549,-10,o),
(421,-10,qs),
(379,-10,o),
(349,20,qs),
(347,22,o),
(344,20,q),
(316,-10,o),
(272,-10,qs),
(144,-10,o)
);
},
{
closed = 1;
nodes = (
(335,141,qs),
(337,156,o),
(347,156,qs),
(357,156,o),
(358,141,qs),
(362,103,o),
(391,103,qs),
(426,103,o),
(424,160,qs),
(421,220,o),
(409,366,qs),
(401,457,o),
(346,458,qs),
(292,457,o),
(284,366,qs),
(269,191,o),
(269,160,qs),
(267,103,o),
(301,103,qs),
(330,103,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 39 37 35 33 29 27 22 41 23 41 15 13 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,256,o),
(495,237,qs),
(400,188,o),
(307,97,o),
(265,11,qs),
(259,0,o),
(248,0,qs),
(156,0,ls),
(143,0,o),
(146,13,qs),
(175,133,o),
(267,220,q),
(221,242,o),
(170,330,o),
(170,387,qs),
(170,462,o),
(213,511,qs),
(261,564,o),
(340,564,qs),
(388,564,o),
(423,537,qs),
(463,505,o),
(462,459,qs),
(461,437,o),
(447,437,qs),
(439,437,o),
(429,441,qs),
(387,457,o),
(358,457,qs),
(325,456,o),
(285,413,o),
(285,378,qs),
(285,348,o),
(323,301,o),
(356,291,q),
(430,341,o),
(517,367,qs),
(531,371,o),
(539,353,qs),
(553,322,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
27 4 2 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
27 4 2 3 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 36 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,151,qs),
(144,450,ls),
(136,496,o),
(180,556,o),
(221,556,qs),
(228,556,ls),
(242,556,o),
(245,537,qs),
(312,137,ls),
(318,103,o),
(345,103,qs),
(372,103,o),
(378,137,qs),
(444,537,ls),
(448,556,o),
(462,556,qs),
(469,556,ls),
(507,556,o),
(529,529,qs),
(554,499,o),
(546,450,qs),
(495,151,ls),
(467,-9,o),
(345,-9,qs),
(223,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 0 2 2 0 98 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
0 2 4 1 0 2 0 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 14 12 9 6 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,0,o),
(129,24,qs),
(193,404,ls),
(221,564,o),
(343,564,qs),
(465,564,o),
(492,404,qs),
(557,24,ls),
(560,0,o),
(540,0,qs),
(464,0,ls),
(445,0,o),
(442,22,qs),
(376,418,ls),
(370,452,o),
(343,452,qs),
(316,452,o),
(309,418,qs),
(244,22,ls),
(240,0,o),
(222,0,qs),
(145,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,519,qs),
(517,464,o),
(517,367,qs),
(517,13,ls),
(517,0,o),
(505,0,qs),
(415,0,ls),
(402,0,o),
(402,13,qs),
(402,177,l),
(337,177,ls),
(264,177,o),
(214,221,qs),
(154,274,o),
(154,367,qs),
(154,452,o),
(201,505,qs),
(253,564,o),
(337,564,qs),
(410,564,o)
);
},
{
closed = 1;
nodes = (
(271,408,o),
(271,367,qs),
(271,331,o),
(309,284,o),
(337,284,qs),
(402,284,l),
(402,367,ls),
(402,409,o),
(367,457,o),
(337,457,qs),
(306,457,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 10 0 7 0 10 7 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 105 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 96 8 18 2 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 3 2 1 2 3 1 128 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 105 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 96 8 18 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 79 values pushed */
0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 105 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 96 8 18 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
116 115 104 103 41 40 122 120 115 126 116 126 110 108 103 114 104 114 101 99 95 93 87 85 75 74 66 64 62 60 55 52 49 46 40 90 41 90 35 36 35 51 53 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
0 1 5 1 133 0 5 2 5 133 14 9 2 7 10 1 8 11 7 8 105 0 4 0 6 12 4 6 105 15 1 11 0 12 11 12 101 0 2 2 0 96 3 13 2 0 0 24 0 78 76 75 64 63 1 0 82 80 75 86 76 86 70 68 63 74 64 74 61 59 55 53 47 45 35 34 26 24 22 20 15 12 9 6 0 50 1 50 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
0 1 5 1 133 0 5 2 5 133 18 9 2 7 10 1 8 11 7 8 105 0 4 0 6 13 4 6 105 19 1 11 0 12 14 11 12 105 21 15 20 3 13 16 1 14 13 14 101 0 2 2 0 96 3 17 2 0 0 24 0 78 100 99 88 87 76 75 64 63 1 0 106 104 99 110 100 110 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 61 59 55 53 47 45 35 34 26 24 22 20 15 12 9 6 0 50 1 50 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 96 8 7 2 3 3 24 3 78 81 80 69 68 1 0 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 131 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 15 4 6 105 21 1 13 0 14 16 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 96 8 7 2 3 3 24 3 78 105 104 93 92 81 80 69 68 1 0 111 109 104 115 105 115 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,299,qs),
(247,308,o),
(247,315,qs),
(249,344,o),
(280,354,q),
(269,372,o),
(269,396,qs),
(269,432,o),
(314,480,o),
(348,481,qs),
(375,481,o),
(412,451,o),
(412,428,qs),
(412,416,o),
(407,416,qs),
(405,416,o),
(399,419,qs),
(396,420,o),
(394,421,qs),
(372,431,o),
(358,431,qs),
(322,431,o),
(322,395,qs),
(322,378,o),
(342,358,o),
(358,358,qs),
(390,358,ls),
(432,358,o),
(432,321,qs),
(432,315,ls),
(432,307,o),
(423,307,qs),
(303,307,ls),
(283,307,o),
(265,299,q),
(263,297,o),
(262,297,q),
(257,294,o),
(256,294,qs),
(253,294,o)
);
},
{
closed = 1;
nodes = (
(915,373,o),
(915,361,qs),
(915,187,ls),
(915,71,o),
(835,24,q),
(791,-17,ls),
(760,-44,o),
(755,-64,q),
(776,-68,o),
(802,-100,o),
(802,-121,qs),
(801,-146,o),
(768,-181,o),
(744,-181,qs),
(720,-181,o),
(686,-146,o),
(685,-121,qs),
(683,-59,o),
(741,0,q),
(734,0,l),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(737,114,ls),
(801,114,o),
(801,189,qs),
(801,279,ls),
(801,373,o),
(892,373,qs),
(902,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 0 1 95 1 8 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 3 1 2 1 4 2 105 13 5 2 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 5 2 3 5 128 13 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 12 8 10 8 12 10 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 0 8 0 10 8 10 101 0 6 6 7 95 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
41 40 90 88 84 82 79 77 67 66 58 56 54 52 47 44 40 103 41 102 35 36 35 51 53 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(915,373,o),
(915,361,qs),
(915,187,ls),
(915,71,o),
(835,24,q),
(791,-17,ls),
(760,-44,o),
(755,-64,q),
(776,-68,o),
(802,-100,o),
(802,-121,qs),
(801,-146,o),
(768,-181,o),
(744,-181,qs),
(720,-181,o),
(686,-146,o),
(685,-121,qs),
(683,-59,o),
(741,0,q),
(734,0,l),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(737,114,ls),
(801,114,o),
(801,189,qs),
(801,279,ls),
(801,373,o),
(892,373,qs),
(902,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
55 1 3 2 1 76 8 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 1 0 50 48 44 42 39 37 27 26 18 16 14 12 7 4 0 63 1 62 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(915,373,o),
(915,361,qs),
(915,187,ls),
(915,71,o),
(835,24,q),
(791,-17,ls),
(760,-44,o),
(755,-64,q),
(776,-68,o),
(802,-100,o),
(802,-121,qs),
(801,-146,o),
(768,-181,o),
(744,-181,qs),
(720,-181,o),
(686,-146,o),
(685,-121,qs),
(683,-59,o),
(741,0,q),
(734,0,l),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(737,114,ls),
(801,114,o),
(801,189,qs),
(801,279,ls),
(801,373,o),
(892,373,qs),
(902,373,ls)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
55 1 3 2 1 76 12 1 0 4 0 133 0 4 1 4 133 0 7 3 5 3 7 5 128 0 3 0 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 77 76 65 64 1 0 83 81 76 87 77 87 71 69 64 75 65 75 50 48 44 42 39 37 27 26 18 16 14 12 7 4 0 63 1 62 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 966;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 5 1 133 0 5 2 5 133 12 9 2 7 10 1 8 6 7 8 105 0 4 0 6 4 6 101 0 2 2 0 96 3 11 2 0 0 24 0 78 64 63 1 0 70 68 63 74 64 74 61 59 55 53 47 45 35 34 26 24 22 20 15 12 9 6 0 50 1 50 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 69 68 1 0 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,299,qs),
(247,308,o),
(247,315,qs),
(249,344,o),
(280,354,q),
(269,372,o),
(269,396,qs),
(269,432,o),
(314,480,o),
(348,481,qs),
(375,481,o),
(412,451,o),
(412,428,qs),
(412,416,o),
(407,416,qs),
(405,416,o),
(399,419,qs),
(396,420,o),
(394,421,qs),
(372,431,o),
(358,431,qs),
(322,431,o),
(322,395,qs),
(322,378,o),
(342,358,o),
(358,358,qs),
(390,358,ls),
(432,358,o),
(432,321,qs),
(432,315,ls),
(432,307,o),
(423,307,qs),
(303,307,ls),
(283,307,o),
(265,299,q),
(263,297,o),
(262,297,q),
(257,294,o),
(256,294,qs),
(253,294,o)
);
},
{
closed = 1;
nodes = (
(904,372,o),
(904,360,qs),
(904,187,ls),
(904,106,o),
(863,58,qs),
(815,0,o),
(723,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(726,114,ls),
(789,114,o),
(789,189,qs),
(789,278,ls),
(789,372,o),
(881,372,qs),
(891,372,ls)
);
},
{
closed = 1;
nodes = (
(792,-96,o),
(792,-121,qs),
(792,-146,o),
(758,-181,o),
(734,-181,qs),
(710,-181,o),
(676,-146,o),
(676,-121,qs),
(676,-96,o),
(709,-62,o),
(734,-62,qs),
(759,-62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 9 0 6 0 9 6 128 0 4 3 1 2 1 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 96 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 14 5 2 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 96 11 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 68 values pushed */
0 3 2 5 2 3 5 128 14 1 5 1 2 5 1 126 0 9 0 6 0 9 6 128 0 4 0 2 3 4 2 105 0 1 0 0 9 1 0 103 15 1 12 0 13 10 12 13 105 0 8 0 10 8 10 101 0 6 6 7 96 11 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 34 values pushed */
92 91 41 40 98 96 91 102 92 102 84 82 79 77 67 66 58 56 54 52 47 44 40 90 41 89 35 36 35 51 53 16 7 27 
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 10 0 7 0 10 7 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 11 12 13 105 0 9 0 11 9 11 101 0 7 7 5 96 8 16 2 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 3 2 1 2 3 1 128 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 11 12 13 105 0 9 0 11 9 11 101 0 7 7 5 96 8 16 2 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 11 12 13 105 0 9 0 11 9 11 101 0 7 7 5 96 8 16 2 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 42 values pushed */
104 103 92 91 41 40 110 108 103 114 104 114 98 96 91 102 92 102 87 85 75 74 66 64 62 60 55 52 49 46 40 90 41 90 35 36 35 51 53 19 7 27 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
},
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 0 1 91 1 8 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 10 0 5 0 10 5 128 0 4 3 1 2 1 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 3 2 1 2 3 1 128 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 6 1 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 73 values pushed */
0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 5 0 10 5 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 20 16 19 3 14 17 1 15 11 14 15 105 0 9 0 11 9 11 101 7 18 2 5 5 8 96 13 12 2 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
109 108 97 96 41 40 115 113 108 119 109 119 103 101 96 107 97 107 94 92 90 88 85 83 73 72 64 62 60 58 53 50 47 44 40 95 41 95 35 36 35 51 53 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,636,qs),
(45,635,o),
(43,633,q),
(38,625,o),
(35,624,qs),
(31,623,o),
(29,627,qs),
(17,648,o),
(23,669,qs),
(31,700,o),
(67,698,qs),
(75,697,o),
(87,694,qs),
(93,693,o),
(94,693,qs),
(100,692,o),
(103,696,qs),
(129,732,o),
(161,754,o),
(185,754,qs),
(213,754,o),
(247,720,o),
(247,692,qs),
(247,665,o),
(203,625,o),
(173,625,qs),
(150,625,o),
(113,640,qs),
(82,652,o),
(71,652,qs),
(57,652,o)
);
},
{
closed = 1;
nodes = (
(202,687,o),
(202,697,qs),
(202,712,o),
(185,712,qs),
(167,712,o),
(143,679,q),
(158,672,o),
(172,672,qs),
(184,672,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
33 1 4 3 1 76 25 1 1 73 0 2 0 5 3 2 5 105 7 1 4 0 1 4 89 0 3 6 1 0 1 3 0 105 7 1 4 4 1 97 0 1 4 1 81 32 31 1 0 36 34 31 39 32 39 20 19 11 9 5 3 0 30 1 30 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,478,o),
(103,502,qs),
(103,526,o),
(135,559,o),
(159,559,qs),
(182,559,o),
(215,526,o),
(215,502,qs),
(215,478,o),
(182,445,o),
(159,445,qs),
(135,445,o)
);
},
{
closed = 1;
nodes = (
(232,478,o),
(232,502,qs),
(232,525,o),
(264,559,o),
(288,559,qs),
(311,559,o),
(343,526,o),
(343,502,qs),
(343,478,o),
(311,445,o),
(288,445,qs),
(265,445,o)
);
},
{
closed = 1;
nodes = (
(506,0,l),
(403,0,l),
(394,-66,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(230,-105,o),
(283,-49,o),
(290,0,q),
(223,0,ls),
(151,0,o),
(99,47,qs),
(40,101,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(406,231,o),
(409,151,qs),
(410,132,o),
(409,114,q),
(506,114,l)
);
},
{
closed = 1;
nodes = (
(295,201,o),
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,160,o),
(196,114,o),
(223,114,qs),
(290,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 0 12 10 4 12 105 7 1 6 0 8 6 8 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 16 11 15 3 10 10 5 95 9 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 7 5 6 5 7 6 128 0 4 0 12 10 4 12 105 0 6 0 8 6 8 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 16 11 15 3 10 10 5 95 9 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
61 60 24 24 13 12 1 0 67 65 60 70 61 70 24 59 24 59 58 57 53 51 47 45 43 41 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,616,o),
(139,616,qs),
(183,616,o),
(198,578,qs),
(221,521,l),
(244,578,ls),
(259,616,o),
(303,616,qs),
(313,616,o),
(311,606,q),
(256,466,ls),
(251,452,o),
(237,452,qs),
(206,452,ls),
(192,452,o),
(187,466,qs),
(132,606,l)
);
},
{
closed = 1;
nodes = (
(506,0,l),
(403,0,l),
(394,-66,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(230,-105,o),
(283,-49,o),
(290,0,q),
(223,0,ls),
(151,0,o),
(99,47,qs),
(40,101,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(406,231,o),
(409,151,qs),
(410,132,o),
(409,114,q),
(506,114,l)
);
},
{
closed = 1;
nodes = (
(295,201,o),
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,160,o),
(196,114,o),
(223,114,qs),
(290,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
11 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 3 0 11 9 3 11 106 6 1 5 0 7 5 7 101 13 10 12 3 9 9 4 95 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 11 9 3 11 106 0 5 0 7 5 7 101 13 10 12 3 9 9 4 95 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
54 53 17 17 60 58 53 63 54 63 17 52 17 52 20 36 34 34 38 39 36 35 49 14 7 31 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l),
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
3 1 2 0 1 76 1 14 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 15 2 3 10 5 3 103 0 7 11 9 7 89 17 12 16 3 10 13 1 11 9 10 11 105 0 7 7 9 97 0 9 7 9 81 81 80 69 68 18 17 1 0 87 85 80 91 81 91 75 73 68 79 69 79 64 62 52 51 43 41 39 37 32 29 26 23 17 67 18 67 13 10 7 5 0 16 1 16 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o),
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l)
);
},
{
closed = 1;
nodes = (
(997,0,l),
(952,0,ls),
(885,0,o),
(844,43,q),
(797,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(997,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
11 1 0 1 68 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 9 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 96 11 10 2 6 6 24 6 78 86 85 74 73 18 17 92 90 85 96 86 96 80 78 73 84 74 84 71 69 67 65 62 60 50 49 41 39 37 35 30 27 24 21 17 72 18 72 36 35 49 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 984;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l),
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(297,-378,o),
(273,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(273,-264,qs),
(297,-264,o),
(330,-297,o),
(330,-321,qs),
(330,-345,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(402,-378,qs),
(379,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(402,-264,qs),
(426,-264,o)
);
},
{
closed = 1;
nodes = (
(389,-414,o),
(389,-435,qs),
(389,-456,o),
(359,-487,o),
(338,-487,qs),
(317,-487,o),
(287,-457,o),
(287,-435,qs),
(287,-413,o),
(317,-383,o),
(338,-383,qs),
(359,-383,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 147 values pushed */
3 1 2 0 1 76 1 20 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 23 12 22 3 10 13 1 11 9 10 11 105 0 7 0 9 14 7 9 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 0 5 5 3 96 6 21 2 3 3 24 3 78 117 116 105 104 81 80 69 68 18 17 1 0 123 121 116 127 117 127 111 109 104 115 105 115 102 100 96 94 87 85 80 91 81 91 75 73 68 79 69 79 64 62 52 51 43 41 39 37 32 29 26 23 17 67 18 67 13 10 7 5 0 16 1 16 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o),
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l)
);
},
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(297,-378,o),
(273,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(273,-264,qs),
(297,-264,o),
(330,-297,o),
(330,-321,qs),
(330,-345,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(402,-378,qs),
(379,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(402,-264,qs),
(426,-264,o)
);
},
{
closed = 1;
nodes = (
(389,-414,o),
(389,-435,qs),
(389,-456,o),
(359,-487,o),
(338,-487,qs),
(317,-487,o),
(287,-457,o),
(287,-435,qs),
(287,-413,o),
(317,-383,o),
(338,-383,qs),
(359,-383,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 149 values pushed */
11 1 0 1 68 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 96 11 10 2 6 6 24 6 78 122 121 110 109 86 85 74 73 18 17 128 126 121 132 122 132 116 114 109 120 110 120 107 105 101 99 92 90 85 96 86 96 80 78 73 84 74 84 71 69 67 65 62 60 50 49 41 39 37 35 30 27 24 21 17 72 18 72 36 35 49 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l),
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o)
);
},
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 159 values pushed */
3 1 7 0 51 1 3 4 2 76 1 19 2 0 7 0 133 0 2 7 5 7 2 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 10 3 13 10 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 0 10 11 20 2 8 15 10 8 103 0 12 16 14 12 89 22 17 21 3 15 18 1 16 14 15 16 105 0 12 12 14 97 0 14 12 14 81 121 120 109 108 58 57 1 0 127 125 120 131 121 131 115 113 108 119 109 119 104 102 92 91 83 81 79 77 72 69 66 63 57 107 58 107 47 45 42 40 36 34 31 28 25 22 13 10 7 5 0 16 1 16 23 6 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o),
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l)
);
},
{
closed = 1;
nodes = (
(259,270,qs),
(256,279,o),
(256,286,qs),
(257,315,o),
(288,325,q),
(278,343,o),
(278,367,qs),
(278,403,o),
(322,451,o),
(356,452,qs),
(384,452,o),
(420,422,o),
(420,399,qs),
(420,387,o),
(415,387,qs),
(413,387,o),
(408,390,q),
(404,391,o),
(403,392,q),
(381,402,o),
(366,402,qs),
(331,402,o),
(331,366,qs),
(331,349,o),
(350,329,o),
(366,329,qs),
(398,329,ls),
(441,329,o),
(441,292,qs),
(441,286,ls),
(441,278,o),
(431,278,qs),
(311,278,ls),
(291,278,o),
(273,270,qs),
(271,269,o),
(271,268,q),
(266,266,o),
(264,266,qs),
(261,266,o)
);
},
{
closed = 1;
nodes = (
(997,0,l),
(952,0,ls),
(885,0,o),
(844,43,q),
(797,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(997,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
11 1 7 1 51 1 3 4 17 1 13 3 108 1 11 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 9 5 4 5 9 4 128 0 13 3 8 3 13 8 128 0 7 6 1 5 9 7 5 105 0 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 87 values pushed */
2 1 1 7 1 133 0 0 7 5 7 0 5 128 0 6 5 9 5 6 9 128 0 9 4 5 9 4 126 0 13 3 8 3 13 8 128 0 7 0 5 6 7 5 105 0 4 0 3 13 4 3 103 23 19 22 3 17 20 1 18 14 17 18 105 0 12 0 14 12 14 101 10 21 2 8 8 11 96 16 15 2 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
126 125 114 113 58 57 132 130 125 136 126 136 120 118 113 124 114 124 111 109 107 105 102 100 90 89 81 79 77 75 70 67 64 61 57 112 58 112 35 36 35 51 55 36 35 49 24 7 30 
CALL[ ]	/* CallFunction */";
};
width = 984;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l),
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 144 values pushed */
3 1 2 0 1 76 1 18 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 19 2 3 10 5 3 103 21 12 20 3 10 13 1 11 9 10 11 105 0 7 0 9 14 7 9 105 23 16 22 3 14 15 15 14 89 23 16 22 3 14 14 15 97 17 1 15 14 15 81 105 104 93 92 81 80 69 68 18 17 1 0 111 109 104 115 105 115 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 64 62 52 51 43 41 39 37 32 29 26 23 17 67 18 67 13 10 7 5 0 16 1 16 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o),
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l)
);
},
{
closed = 1;
nodes = (
(996,0,l),
(952,0,ls),
(885,0,o),
(843,42,q),
(797,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(996,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 137 values pushed */
11 1 0 1 68 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 9 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 96 11 10 2 6 6 24 6 78 110 109 98 97 86 85 74 73 18 17 116 114 109 120 110 120 104 102 97 108 98 108 92 90 85 96 86 96 80 78 73 84 74 84 71 69 67 65 62 60 50 49 41 39 37 35 30 27 24 21 17 72 18 72 36 35 49 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 983;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l),
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o)
);
},
{
closed = 1;
nodes = (
(259,470,o),
(269,470,qs),
(313,470,o),
(328,432,qs),
(351,375,l),
(374,432,ls),
(388,470,o),
(432,470,qs),
(443,470,o),
(440,461,qs),
(385,320,ls),
(381,307,o),
(366,307,qs),
(336,307,ls),
(321,307,o),
(317,320,qs),
(262,461,ls)
);
},
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 134 values pushed */
3 1 4 0 28 1 7 2 2 76 1 17 2 0 4 0 133 5 1 4 2 4 133 0 2 7 2 133 0 7 3 7 133 0 3 11 3 133 0 11 8 11 133 0 8 9 18 2 6 13 8 6 103 0 10 14 12 10 89 20 15 19 3 13 16 1 14 12 13 14 105 0 10 10 12 97 0 12 10 12 81 98 97 86 85 35 34 1 0 104 102 97 108 98 108 92 90 85 96 86 96 81 79 69 68 60 58 56 54 49 46 43 40 34 84 35 84 32 30 26 24 21 18 13 10 7 5 0 16 1 16 21 6 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,604,o),
(767,604,qs),
(810,604,o),
(826,566,qs),
(848,509,l),
(872,566,ls),
(886,604,o),
(930,604,qs),
(941,604,o),
(938,594,q),
(883,454,ls),
(878,441,o),
(864,441,qs),
(833,441,ls),
(819,441,o),
(814,454,qs),
(759,594,l)
);
},
{
closed = 1;
nodes = (
(259,470,o),
(269,470,qs),
(313,470,o),
(328,432,qs),
(351,375,l),
(374,432,ls),
(388,470,o),
(432,470,qs),
(443,470,o),
(440,461,qs),
(385,320,ls),
(381,307,o),
(366,307,qs),
(336,307,ls),
(321,307,o),
(317,320,qs),
(262,461,ls)
);
},
{
closed = 1;
nodes = (
(996,0,l),
(952,0,ls),
(885,0,o),
(843,42,q),
(797,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(996,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 127 values pushed */
11 1 4 1 28 1 7 0 85 1 9 6 3 76 2 1 1 4 1 133 5 1 4 0 4 133 0 0 7 0 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 12 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 96 14 13 2 9 9 24 9 78 103 102 91 90 35 34 109 107 102 113 103 113 97 95 90 101 91 101 88 86 84 82 79 77 67 66 58 56 54 52 47 44 41 38 34 89 35 89 36 35 51 36 35 49 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 983;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,470,o),
(269,470,qs),
(313,470,o),
(328,432,qs),
(351,375,l),
(374,432,ls),
(388,470,o),
(432,470,qs),
(443,470,o),
(440,461,qs),
(385,320,ls),
(381,307,o),
(366,307,qs),
(336,307,ls),
(321,307,o),
(317,320,qs),
(262,461,ls)
);
},
{
closed = 1;
nodes = (
(653,7,l),
(633,4,l),
(619,-81,o),
(553,-140,qs),
(471,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(653,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
11 1 0 1 54 1 4 3 2 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 8 1 3 3 4 96 0 4 4 24 4 78 18 17 50 48 38 37 29 27 25 23 17 55 18 55 36 35 49 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,594,q),
(194,454,l),
(190,441,o),
(175,441,qs),
(145,441,ls),
(130,441,o),
(126,454,q),
(71,594,l),
(68,604,o),
(78,604,qs),
(122,604,o),
(137,566,qs),
(160,509,l),
(183,566,ls),
(197,604,o),
(241,604,qs),
(252,604,o)
);
},
{
closed = 1;
nodes = (
(210,106,o),
(170,58,qs),
(122,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(57,-178,o),
(33,-178,qs),
(10,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(10,-64,o),
(33,-64,qs),
(57,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(162,-178,qs),
(139,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(139,-64,o),
(162,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
3 1 2 0 1 76 1 10 2 0 2 0 133 0 2 3 2 133 0 3 4 3 133 12 8 11 3 6 9 1 7 6 7 101 0 4 4 5 98 0 5 5 24 5 78 46 45 34 33 1 0 52 50 45 56 46 56 40 38 33 44 34 44 29 27 26 24 21 18 13 10 7 5 0 16 1 16 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(68,597,o),
(78,597,qs),
(122,597,o),
(137,559,qs),
(160,502,l),
(183,559,ls),
(197,597,o),
(241,597,qs),
(252,597,o),
(249,588,qs),
(194,447,ls),
(190,434,o),
(175,434,qs),
(145,434,ls),
(130,434,o),
(126,447,qs),
(71,588,ls)
);
},
{
closed = 1;
nodes = (
(310,0,l),
(276,0,ls),
(200,0,o),
(153,40,q),
(106,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(211,114,o),
(274,114,qs),
(310,114,l)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(57,-178,o),
(33,-178,qs),
(10,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(10,-64,o),
(33,-64,qs),
(57,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(162,-178,qs),
(139,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(139,-64,o),
(162,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
11 1 0 1 33 1 6 3 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 98 7 1 6 6 24 6 78 51 50 39 38 18 17 57 55 50 61 51 61 45 43 38 49 39 49 36 34 32 30 29 27 24 21 17 37 18 37 36 35 49 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(619,774,qs),
(619,801,o),
(652,808,q),
(659,808,o),
(663,802,qs),
(676,780,o),
(677,739,qs),
(678,713,o),
(657,669,o),
(643,667,qs),
(636,666,o),
(637,678,qs),
(639,707,o),
(623,756,qs),
(620,765,o)
);
},
{
closed = 1;
nodes = (
(525,537,o),
(525,576,qs),
(525,583,ls),
(525,604,o),
(534,618,qs),
(546,634,o),
(568,634,qs),
(573,634,ls),
(578,634,o),
(578,629,qs),
(578,571,ls),
(578,542,o),
(600,542,qs),
(624,542,o),
(624,571,qs),
(624,583,ls),
(624,607,o),
(634,620,qs),
(646,634,o),
(666,634,qs),
(672,634,ls),
(676,634,o),
(676,629,qs),
(676,571,ls),
(676,542,o),
(699,542,qs),
(722,542,o),
(722,571,qs),
(722,583,ls),
(722,607,o),
(733,620,qs),
(744,634,o),
(764,634,qs),
(770,634,ls),
(774,634,o),
(774,629,qs),
(774,576,ls),
(774,538,o),
(734,493,o),
(700,493,qs),
(669,493,o),
(650,511,q),
(631,493,o),
(602,493,qs),
(566,493,o)
);
},
{
closed = 1;
nodes = (
(1006,443,o),
(1006,431,qs),
(1006,187,ls),
(1006,106,o),
(965,57,qs),
(917,0,o),
(825,0,qs),
(757,0,ls),
(690,0,o),
(648,42,q),
(602,0,o),
(523,0,qs),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,350,ls),
(589,443,o),
(680,443,qs),
(690,443,ls),
(704,443,o),
(704,431,qs),
(704,187,ls),
(704,114,o),
(767,114,qs),
(828,114,ls),
(891,114,o),
(891,189,qs),
(891,350,ls),
(891,443,o),
(983,443,qs),
(993,443,ls)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
13 2 2 3 0 49 36 23 3 4 3 17 1 1 4 102 97 2 14 9 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
13 2 2 3 0 49 36 23 3 4 3 17 1 1 4 102 97 2 15 17 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 0 3 0 133 7 5 2 3 4 4 3 112 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 103 2 19 2 1 1 4 97 6 1 4 4 23 77 21 17 11 3 9 9 14 98 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 103 2 19 2 1 1 4 97 6 1 4 4 23 77 21 17 11 3 9 9 14 98 16 15 2 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 0 13 0 18 9 13 18 103 2 19 2 1 1 4 97 6 1 4 4 23 77 11 1 9 9 15 98 16 1 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 11 1 9 9 15 98 16 1 15 15 24 77 21 1 17 17 14 97 0 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 0 3 0 133 7 5 2 3 4 3 133 12 10 20 3 8 1 13 1 8 13 128 6 1 4 2 19 2 1 8 4 1 106 0 13 0 18 9 13 18 103 21 1 17 0 14 17 14 101 11 1 9 9 15 98 16 1 15 15 24 15 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 52 values pushed */
114 113 61 60 16 15 120 118 113 124 114 124 106 103 101 98 96 94 88 86 85 82 79 76 73 70 67 64 60 112 61 111 53 51 47 45 40 38 34 32 27 25 20 18 15 59 16 59 26 22 7 23 
CALL[ ]	/* CallFunction */";
};
width = 1059;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o),
(778,-98,o),
(778,-122,qs),
(778,-145,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(837,-214,o),
(837,-236,qs),
(837,-257,o),
(807,-288,o),
(786,-288,qs),
(765,-288,o),
(735,-257,o),
(735,-236,qs),
(735,-214,o),
(765,-183,o),
(786,-183,qs),
(807,-183,o)
);
},
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
126 1 15 1 51 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
126 1 15 16 51 1 3 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 5 15 0 15 5 0 128 0 19 18 1 17 1 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 18 17 1 17 18 1 128 0 5 15 0 15 5 0 128 0 19 0 17 18 19 17 105 16 1 1 0 15 5 1 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 81 values pushed */
0 18 17 1 17 18 1 128 0 1 16 17 1 16 126 0 5 15 0 15 5 0 128 0 19 0 17 18 19 17 105 0 16 0 15 5 16 15 103 21 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 22 1 13 0 14 13 14 101 2 20 2 0 0 3 96 8 7 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 55 values pushed */
81 80 69 68 1 0 122 120 117 115 111 109 106 103 100 97 87 85 80 91 81 91 75 73 68 79 69 79 66 64 60 58 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 23 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 31 29 24 35 25 35 22 20 18 16 10 8 7 4 0 23 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,591,o),
(212,613,qs),
(212,634,o),
(242,665,o),
(263,665,qs),
(284,665,o),
(314,634,o),
(314,613,qs),
(314,591,o),
(284,561,o),
(263,561,qs),
(242,561,o)
);
},
{
closed = 1;
nodes = (
(143,475,o),
(143,499,qs),
(143,523,o),
(175,556,o),
(198,556,qs),
(222,556,o),
(255,522,o),
(255,499,qs),
(255,475,o),
(222,442,o),
(198,442,qs),
(175,442,o)
);
},
{
closed = 1;
nodes = (
(304,556,o),
(328,556,qs),
(351,556,o),
(383,522,o),
(383,499,qs),
(383,475,o),
(351,442,o),
(328,442,qs),
(304,442,o),
(272,475,o),
(272,499,qs),
(272,523,o)
);
},
{
closed = 1;
nodes = (
(470,-203,qs),
(463,-275,o),
(388,-309,qs),
(338,-331,o),
(274,-331,qs),
(177,-331,o),
(113,-275,qs),
(40,-211,o),
(40,-107,qs),
(40,14,o),
(133,74,q),
(82,123,o),
(81,198,qs),
(80,275,o),
(129,329,qs),
(185,391,o),
(273,391,qs),
(332,391,o),
(372,363,qs),
(418,332,o),
(417,281,qs),
(416,252,o),
(399,251,qs),
(392,251,o),
(383,257,qs),
(340,282,o),
(291,282,qs),
(248,283,o),
(197,236,o),
(197,197,qs),
(197,161,o),
(241,114,o),
(276,114,qs),
(373,114,ls),
(416,114,o),
(470,68,o),
(470,30,qs),
(470,20,ls),
(470,8,o),
(462,0,o),
(448,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(380,-213,qs),
(404,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
81 1 7 8 91 1 6 7 2 76 0 10 9 8 9 10 8 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 11 3 2 105 0 11 0 9 10 11 9 105 0 8 0 7 6 8 7 103 0 6 12 12 6 89 0 6 6 12 97 0 12 6 12 81 13 12 1 0 88 86 76 74 70 68 66 64 60 57 52 49 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(254,591,o),
(254,613,qs),
(254,634,o),
(284,665,o),
(305,665,qs),
(326,665,o),
(356,634,o),
(356,613,qs),
(356,591,o),
(326,561,o),
(305,561,qs),
(284,561,o)
);
},
{
closed = 1;
nodes = (
(185,475,o),
(185,499,qs),
(185,523,o),
(217,556,o),
(240,556,qs),
(264,556,o),
(297,522,o),
(297,499,qs),
(297,475,o),
(264,442,o),
(240,442,qs),
(217,442,o)
);
},
{
closed = 1;
nodes = (
(346,556,o),
(369,556,qs),
(393,556,o),
(425,522,o),
(425,499,qs),
(425,475,o),
(393,442,o),
(369,442,qs),
(346,442,o),
(313,475,o),
(313,499,qs),
(313,523,o)
);
},
{
closed = 1;
nodes = (
(162,-68,o),
(163,-111,qs),
(164,-156,o),
(193,-186,qs),
(227,-222,o),
(292,-223,qs),
(341,-223,o),
(373,-216,qs),
(401,-209,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-269,o),
(399,-304,qs),
(347,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-38,o),
(73,14,qs),
(111,74,o),
(184,98,q),
(112,194,ls),
(93,221,o),
(93,256,qs),
(92,309,o),
(152,348,qs),
(217,391,o),
(305,391,qs),
(380,391,o),
(442,358,qs),
(518,317,o),
(517,256,qs),
(517,219,o),
(498,194,qs),
(438,114,l),
(608,114,l),
(608,0,l),
(383,0,ls),
(334,0,o),
(306,21,q),
(288,3,o),
(260,-1,qs),
(216,-7,o)
);
},
{
closed = 1;
nodes = (
(228,257,o),
(228,237,qs),
(228,227,o),
(238,214,qs),
(301,130,ls),
(305,124,o),
(309,130,qs),
(372,214,l),
(382,225,o),
(382,237,qs),
(382,257,o),
(339,282,o),
(305,282,qs),
(271,282,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
57 38 2 6 7 1 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 8 3 2 105 0 8 14 1 11 7 8 11 105 0 7 0 6 10 7 6 103 0 10 9 9 10 89 0 10 10 9 97 0 9 10 9 81 85 84 13 12 1 0 84 97 85 97 78 76 66 64 51 49 43 42 41 39 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,591,o),
(216,613,qs),
(216,634,o),
(246,665,o),
(267,665,qs),
(288,665,o),
(318,634,o),
(318,613,qs),
(318,591,o),
(288,561,o),
(267,561,qs),
(246,561,o)
);
},
{
closed = 1;
nodes = (
(147,475,o),
(147,499,qs),
(147,523,o),
(179,556,o),
(202,556,qs),
(225,556,o),
(258,522,o),
(258,499,qs),
(258,475,o),
(225,442,o),
(202,442,qs),
(179,442,o)
);
},
{
closed = 1;
nodes = (
(308,556,o),
(331,556,qs),
(354,556,o),
(387,522,o),
(387,499,qs),
(387,475,o),
(354,442,o),
(331,442,qs),
(308,442,o),
(275,475,o),
(275,499,qs),
(275,523,o)
);
},
{
closed = 1;
nodes = (
(424,114,o),
(477,68,o),
(477,30,qs),
(477,20,ls),
(477,8,o),
(469,0,o),
(455,0,qs),
(-1,0,l),
(-1,114,l),
(109,114,l),
(88,154,o),
(87,198,qs),
(87,275,o),
(136,329,qs),
(192,391,o),
(280,391,qs),
(339,391,o),
(379,363,qs),
(424,332,o),
(424,281,qs),
(423,252,o),
(406,251,qs),
(400,251,o),
(390,257,qs),
(344,282,o),
(298,282,qs),
(256,283,o),
(204,236,o),
(204,197,qs),
(204,161,o),
(248,114,o),
(282,114,qs),
(380,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 62 60 59 58 53 51 47 45 43 41 36 68 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,591,o),
(247,613,qs),
(247,635,o),
(277,665,o),
(298,665,qs),
(319,665,o),
(349,634,o),
(349,613,qs),
(349,591,o),
(319,561,o),
(298,561,qs),
(277,561,o)
);
},
{
closed = 1;
nodes = (
(178,475,o),
(178,499,qs),
(178,523,o),
(210,556,o),
(233,556,qs),
(256,556,o),
(290,522,o),
(290,499,qs),
(290,475,o),
(257,442,o),
(233,442,qs),
(210,442,o)
);
},
{
closed = 1;
nodes = (
(306,475,o),
(306,499,qs),
(306,523,o),
(339,556,o),
(362,556,qs),
(385,556,o),
(418,522,o),
(418,499,qs),
(418,475,o),
(386,442,o),
(362,442,qs),
(339,442,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(165,114,l),
(105,194,ls),
(86,220,o),
(86,256,qs),
(85,309,o),
(145,348,qs),
(210,391,o),
(298,391,qs),
(373,391,o),
(435,358,qs),
(511,317,o),
(510,256,qs),
(509,219,o),
(491,194,qs),
(431,114,l),
(601,114,l),
(601,0,l),
(376,0,ls),
(327,0,o),
(298,21,q),
(268,0,o),
(219,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(298,124,o),
(302,130,qs),
(365,214,ls),
(375,227,o),
(375,237,qs),
(375,257,o),
(331,282,o),
(298,282,qs),
(264,282,o),
(221,257,o),
(221,237,qs),
(221,225,o),
(231,214,q),
(293,130,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
38 1 6 8 1 76 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 9 3 2 105 0 9 0 11 8 9 11 105 10 1 8 6 6 8 87 10 1 8 8 6 95 7 15 2 6 8 6 79 37 36 25 24 13 12 1 0 66 64 58 57 51 49 43 42 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,19,qs),
(46,462,ls),
(46,537,o),
(99,551,qs),
(114,556,o),
(145,556,qs),
(230,556,o),
(281,501,qs),
(284,497,o),
(288,501,q),
(327,556,o),
(409,556,qs),
(463,556,ls),
(474,556,o),
(474,543,qs),
(474,534,ls),
(474,498,o),
(449,461,o),
(419,453,q),
(417,453,o),
(408,451,qs),
(399,450,o),
(395,449,qs),
(364,443,o),
(324,400,o),
(301,347,qs),
(295,333,o),
(286,333,qs),
(278,333,o),
(271,347,qs),
(247,400,o),
(212,440,o),
(182,446,q),
(178,446,o),
(169,447,qs),
(165,448,o),
(164,448,qs),
(160,448,o),
(160,444,qs),
(160,19,ls),
(160,0,o),
(141,0,qs),
(65,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 1 1 2 1 76 0 1 2 0 2 1 0 128 3 1 2 2 23 77 4 1 0 0 24 0 78 1 0 37 35 31 28 15 13 0 43 1 42 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 515;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,556,o),
(422,556,qs),
(431,556,o),
(433,544,qs),
(433,542,o),
(433,540,qs),
(434,535,o),
(434,531,qs),
(443,438,o),
(400,409,qs),
(214,276,l),
(157,229,o),
(157,182,qs),
(156,150,o),
(200,108,o),
(235,108,qs),
(488,108,ls),
(530,108,o),
(581,64,o),
(581,28,qs),
(581,20,ls),
(581,7,o),
(573,0,o),
(559,0,qs),
(226,0,ls),
(151,0,o),
(101,39,qs),
(40,86,o),
(40,175,qs),
(40,240,o),
(77,293,qs),
(109,339,o),
(183,392,qs),
(407,549,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 2 2 23 77 0 1 1 0 96 0 0 0 24 0 78 28 53 55 3 7 25 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,282,o),
(10,295,qs),
(10,371,ls),
(10,384,o),
(23,384,qs),
(77,384,l),
(77,410,ls),
(77,482,o),
(107,522,qs),
(139,565,o),
(200,565,qs),
(248,565,o),
(311,512,o),
(311,471,qs),
(311,451,o),
(298,451,qs),
(295,451,o),
(289,453,qs),
(256,467,o),
(237,467,qs),
(212,467,o),
(192,438,o),
(192,403,qs),
(192,384,l),
(287,384,ls),
(300,384,o),
(300,371,qs),
(300,295,ls),
(300,282,o),
(287,282,qs),
(192,282,l),
(192,13,ls),
(192,0,o),
(179,0,qs),
(90,0,ls),
(77,0,o),
(77,13,qs),
(77,282,l),
(23,282,ls)
);
},
{
closed = 1;
nodes = (
(398,549,o),
(425,549,qs),
(451,549,o),
(487,512,o),
(487,484,qs),
(487,457,o),
(452,420,o),
(425,420,qs),
(398,420,o),
(361,457,o),
(361,484,qs),
(361,512,o)
);
},
{
closed = 1;
nodes = (
(367,384,o),
(380,384,qs),
(385,384,ls),
(436,384,o),
(482,337,o),
(482,286,qs),
(482,13,ls),
(482,0,o),
(469,0,qs),
(380,0,ls),
(367,0,o),
(367,13,qs),
(367,371,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
4 1 3 3 5 97 9 1 5 5 39 77 0 8 8 5 97 9 1 5 5 39 77 12 7 2 1 1 2 97 11 6 2 2 2 42 77 10 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 4 3 8 3 4 8 128 0 3 3 5 97 0 5 5 39 77 0 8 8 9 97 0 9 9 39 77 12 7 2 1 1 2 97 11 6 2 2 2 42 77 10 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 4 3 8 3 4 8 128 0 5 0 3 4 5 3 105 0 8 8 9 97 0 9 9 39 77 12 7 2 1 1 2 97 11 6 2 2 2 42 77 10 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 62 59 55 52 49 47 43 41 0 38 0 37 36 35 34 35 35 34 50 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(10,282,o),
(10,295,qs),
(10,371,ls),
(10,384,o),
(23,384,qs),
(77,384,l),
(77,410,ls),
(77,482,o),
(107,522,qs),
(139,565,o),
(200,565,qs),
(248,565,o),
(311,512,o),
(311,471,qs),
(311,451,o),
(298,451,qs),
(295,451,o),
(289,453,qs),
(256,467,o),
(237,467,qs),
(212,467,o),
(192,438,o),
(192,403,qs),
(192,384,l),
(287,384,ls),
(300,384,o),
(300,371,qs),
(300,295,ls),
(300,282,o),
(287,282,qs),
(192,282,l),
(192,13,ls),
(192,0,o),
(179,0,qs),
(90,0,ls),
(77,0,o),
(77,13,qs),
(77,282,l),
(23,282,ls)
);
},
{
closed = 1;
nodes = (
(367,132,qs),
(367,546,ls),
(367,559,o),
(380,559,qs),
(385,559,ls),
(436,559,o),
(482,512,o),
(482,461,qs),
(482,145,ls),
(482,91,o),
(520,91,qs),
(539,91,o),
(561,106,qs),
(569,111,o),
(573,111,qs),
(584,111,o),
(584,96,qs),
(584,48,o),
(528,-8,o),
(480,-8,qs),
(367,-8,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
4 1 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 10 1 9 9 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 9 1 10 1 9 10 128 4 1 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 10 10 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 10 10 0 98 13 8 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 46 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 61 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 11 11 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 46 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 5 0 3 4 5 3 105 0 11 11 39 77 12 7 2 1 1 2 97 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 98 13 1 8 8 46 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
40 39 0 0 56 53 49 47 44 43 39 59 40 59 0 38 0 37 36 35 34 35 35 34 50 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 584;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,631,qs),
(22,630,o),
(20,628,q),
(15,620,o),
(12,619,qs),
(8,618,o),
(6,622,qs),
(-6,643,o),
(0,664,qs),
(8,695,o),
(44,693,qs),
(52,692,o),
(64,689,qs),
(70,688,o),
(71,688,qs),
(77,687,o),
(80,691,qs),
(106,727,o),
(138,749,o),
(162,749,qs),
(190,749,o),
(224,715,o),
(224,687,qs),
(224,660,o),
(180,620,o),
(150,620,qs),
(127,620,o),
(90,635,qs),
(59,647,o),
(48,647,qs),
(34,647,o)
);
},
{
closed = 1;
nodes = (
(179,682,o),
(179,692,qs),
(179,707,o),
(162,707,qs),
(144,707,o),
(120,674,q),
(135,667,o),
(149,667,qs),
(161,667,o)
);
},
{
closed = 1;
nodes = (
(151,0,o),
(103,45,qs),
(50,94,o),
(50,187,qs),
(50,462,ls),
(50,556,o),
(142,556,qs),
(152,556,ls),
(165,556,o),
(165,543,qs),
(165,189,ls),
(165,114,o),
(228,114,qs),
(264,114,l),
(264,0,l),
(231,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
33 1 4 3 25 1 7 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
10 1 4 3 0 3 4 0 128 0 1 0 7 5 1 114 0 2 0 5 3 2 5 105 0 3 9 1 0 1 3 0 105 0 7 7 23 77 0 6 6 8 98 11 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
10 1 4 3 0 3 4 0 128 0 1 0 7 0 1 7 128 0 2 0 5 3 2 5 105 0 3 9 1 0 1 3 0 105 0 7 7 23 77 0 6 6 8 98 11 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
40 40 32 31 1 0 40 55 40 54 49 46 43 41 36 34 31 39 32 39 20 19 11 9 5 3 0 30 1 30 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 251;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
},
{
closed = 1;
nodes = (
(335,-178,o),
(311,-178,qs),
(288,-178,o),
(256,-145,o),
(256,-122,qs),
(256,-98,o),
(288,-64,o),
(311,-64,qs),
(335,-64,o),
(368,-98,o),
(368,-122,qs),
(368,-145,o)
);
},
{
closed = 1;
nodes = (
(496,-98,o),
(496,-122,qs),
(496,-145,o),
(463,-178,o),
(440,-178,qs),
(417,-178,o),
(384,-145,o),
(384,-122,qs),
(384,-98,o),
(417,-64,o),
(440,-64,qs),
(464,-64,o)
);
},
{
closed = 1;
nodes = (
(427,-214,o),
(427,-236,qs),
(427,-257,o),
(397,-288,o),
(376,-288,qs),
(355,-288,o),
(325,-257,o),
(325,-236,qs),
(325,-214,o),
(355,-183,o),
(376,-183,qs),
(397,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 98 5 1 4 4 24 4 78 63 62 51 50 1 0 69 67 62 73 63 73 57 55 50 61 51 61 48 46 42 40 36 34 32 29 21 20 13 10 7 4 0 37 1 37 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(210,106,o),
(170,58,qs),
(122,0,o),
(30,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(56,-178,o),
(33,-178,qs),
(9,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(9,-64,o),
(33,-64,qs),
(56,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(161,-178,qs),
(138,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(138,-64,o),
(161,-64,qs),
(185,-64,o)
);
},
{
closed = 1;
nodes = (
(149,-214,o),
(149,-236,qs),
(149,-257,o),
(119,-288,o),
(98,-288,qs),
(76,-288,o),
(46,-257,o),
(46,-236,qs),
(46,-214,o),
(76,-183,o),
(98,-183,qs),
(119,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 105 12 1 7 0 8 7 8 101 0 2 2 0 98 9 1 0 0 24 0 78 41 40 29 28 17 16 1 0 47 45 40 51 41 51 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,l),
(276,0,ls),
(200,0,o),
(153,40,q),
(106,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(211,114,o),
(274,114,qs),
(310,114,l)
);
},
{
closed = 1;
nodes = (
(56,-178,o),
(33,-178,qs),
(9,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(9,-64,o),
(33,-64,qs),
(56,-64,o),
(89,-98,o),
(89,-122,qs),
(89,-145,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(161,-178,qs),
(138,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(138,-64,o),
(161,-64,qs),
(185,-64,o)
);
},
{
closed = 1;
nodes = (
(149,-214,o),
(149,-236,qs),
(149,-257,o),
(119,-288,o),
(98,-288,qs),
(76,-288,o),
(46,-257,o),
(46,-236,qs),
(46,-214,o),
(76,-183,o),
(98,-183,qs),
(119,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
16 1 3 0 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 98 4 1 3 3 24 3 78 46 45 34 33 1 0 52 50 45 56 46 56 40 38 33 44 34 44 31 29 25 23 19 17 15 13 12 10 7 4 0 20 1 20 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,382,o),
(282,389,qs),
(282,396,ls),
(283,435,o),
(331,436,q),
(331,561,ls),
(331,614,o),
(375,614,qs),
(380,614,ls),
(386,614,o),
(386,609,qs),
(386,554,l),
(418,554,ls),
(462,554,o),
(511,509,o),
(511,468,qs),
(511,428,o),
(462,382,o),
(418,382,qs),
(289,382,ls)
);
},
{
closed = 1;
nodes = (
(386,436,l),
(420,436,ls),
(435,436,o),
(453,454,o),
(453,468,qs),
(453,483,o),
(435,501,o),
(420,501,qs),
(386,501,l)
);
},
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
8 1 1 2 62 1 10 6 2 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 5 1 3 12 1 0 7 3 0 104 13 1 4 4 1 97 0 1 1 23 77 8 14 2 6 6 10 98 11 1 10 10 24 10 78 30 29 21 20 1 0 65 63 61 58 50 49 42 39 36 33 29 66 30 66 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 18 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,615,o),
(266,570,o),
(266,529,qs),
(266,488,o),
(217,443,o),
(173,443,qs),
(44,443,ls),
(37,443,o),
(37,449,qs),
(37,456,ls),
(39,495,o),
(86,496,q),
(86,621,ls),
(86,675,o),
(130,675,qs),
(135,675,ls),
(141,675,o),
(141,669,qs),
(141,615,l),
(173,615,ls)
);
},
{
closed = 1;
nodes = (
(190,496,o),
(208,514,o),
(208,529,qs),
(208,543,o),
(190,562,o),
(175,562,qs),
(141,562,l),
(141,496,l),
(175,496,ls)
);
},
{
closed = 1;
nodes = (
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
1 1 3 0 10 1 2 1 2 76 0 0 3 0 133 11 1 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 98 0 8 8 24 8 78 30 29 20 20 0 0 38 36 35 33 29 44 30 43 20 28 20 27 23 21 0 19 0 18 36 18 35 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,442,o),
(37,448,qs),
(37,455,ls),
(39,494,o),
(86,495,q),
(86,620,ls),
(86,674,o),
(130,674,qs),
(135,674,ls),
(141,674,o),
(141,668,qs),
(141,614,l),
(173,614,ls),
(217,614,o),
(266,568,o),
(266,528,qs),
(266,487,o),
(217,442,o),
(173,442,qs),
(44,442,ls)
);
},
{
closed = 1;
nodes = (
(141,495,l),
(175,495,ls),
(190,495,o),
(208,513,o),
(208,528,qs),
(208,542,o),
(190,561,o),
(175,561,qs),
(141,561,l)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
8 1 1 2 17 1 0 3 45 1 9 6 3 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 98 10 1 9 9 24 9 78 30 29 21 20 1 0 48 46 44 42 41 39 36 33 29 49 30 49 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 19 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,591,o),
(582,613,qs),
(582,634,o),
(612,665,o),
(633,665,qs),
(654,665,o),
(684,634,o),
(684,613,qs),
(684,591,o),
(654,561,o),
(633,561,qs),
(612,561,o)
);
},
{
closed = 1;
nodes = (
(513,475,o),
(513,499,qs),
(513,523,o),
(545,556,o),
(568,556,qs),
(591,556,o),
(624,522,o),
(624,499,qs),
(624,475,o),
(591,442,o),
(568,442,qs),
(545,442,o)
);
},
{
closed = 1;
nodes = (
(674,556,o),
(697,556,qs),
(720,556,o),
(753,522,o),
(753,499,qs),
(753,475,o),
(720,442,o),
(697,442,qs),
(674,442,o),
(641,475,o),
(641,499,qs),
(641,523,o)
);
},
{
closed = 1;
nodes = (
(913,0,l),
(721,0,ls),
(661,0,o),
(633,22,q),
(606,0,o),
(545,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(477,114,l),
(449,152,o),
(449,208,qs),
(449,276,o),
(493,327,qs),
(546,391,o),
(633,391,qs),
(709,391,o),
(761,341,qs),
(818,287,o),
(818,208,qs),
(818,152,o),
(790,114,q),
(913,114,l)
);
},
{
closed = 1;
nodes = (
(700,181,o),
(699,209,qs),
(698,241,o),
(662,282,o),
(633,282,qs),
(605,282,o),
(568,241,o),
(568,209,qs),
(567,181,o),
(604,131,o),
(633,120,q),
(662,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
72 1 9 7 1 76 0 8 6 12 6 8 12 128 0 1 13 1 0 3 1 0 105 0 6 0 12 7 6 12 105 4 14 2 2 2 3 97 5 1 3 3 23 77 15 11 2 7 7 9 96 10 1 9 9 24 9 78 36 36 13 12 1 0 84 82 36 76 36 76 75 73 71 68 58 57 50 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,591,o),
(217,613,qs),
(217,634,o),
(247,665,o),
(268,665,qs),
(289,665,o),
(320,634,o),
(320,613,qs),
(320,591,o),
(289,561,o),
(268,561,qs),
(247,561,o)
);
},
{
closed = 1;
nodes = (
(148,475,o),
(148,499,qs),
(148,523,o),
(180,556,o),
(203,556,qs),
(227,556,o),
(260,522,o),
(260,499,qs),
(260,475,o),
(227,442,o),
(203,442,qs),
(180,442,o)
);
},
{
closed = 1;
nodes = (
(309,556,o),
(333,556,qs),
(356,556,o),
(388,522,o),
(388,499,qs),
(388,475,o),
(356,442,o),
(333,442,qs),
(309,442,o),
(277,475,o),
(277,499,qs),
(277,523,o)
);
},
{
closed = 1;
nodes = (
(391,345,qs),
(451,290,o),
(451,195,qs),
(451,113,o),
(405,60,qs),
(354,1,o),
(271,0,qs),
(-1,0,l),
(-1,114,l),
(105,114,l),
(86,148,o),
(85,195,qs),
(85,277,o),
(131,331,qs),
(183,391,o),
(268,391,qs),
(341,391,o)
);
},
{
closed = 1;
nodes = (
(333,162,o),
(333,198,qs),
(333,234,o),
(296,282,o),
(268,282,qs),
(240,282,o),
(202,234,o),
(202,198,qs),
(202,163,o),
(240,114,o),
(268,114,qs),
(296,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
0 1 11 1 0 3 1 0 105 13 1 6 0 10 7 6 10 105 4 12 2 2 2 3 97 5 1 3 3 23 77 14 9 2 7 7 8 95 0 8 8 24 8 78 54 53 37 36 13 12 1 0 60 58 53 64 54 64 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,591,o),
(218,613,qs),
(218,634,o),
(248,665,o),
(269,665,qs),
(290,665,o),
(320,634,o),
(320,613,qs),
(320,591,o),
(290,561,o),
(269,561,qs),
(248,561,o)
);
},
{
closed = 1;
nodes = (
(149,475,o),
(149,499,qs),
(149,523,o),
(181,556,o),
(204,556,qs),
(228,556,o),
(261,522,o),
(261,499,qs),
(261,475,o),
(228,442,o),
(204,442,qs),
(181,442,o)
);
},
{
closed = 1;
nodes = (
(310,556,o),
(334,556,qs),
(357,556,o),
(389,522,o),
(389,499,qs),
(389,475,o),
(357,442,o),
(334,442,qs),
(310,442,o),
(278,475,o),
(278,499,qs),
(278,523,o)
);
},
{
closed = 1;
nodes = (
(549,0,l),
(357,0,ls),
(297,0,o),
(269,22,q),
(242,0,o),
(181,0,qs),
(1,0,l),
(1,114,l),
(113,114,l),
(85,152,o),
(85,208,qs),
(85,276,o),
(129,327,qs),
(182,391,o),
(269,391,qs),
(345,391,o),
(397,341,qs),
(454,287,o),
(454,208,qs),
(454,152,o),
(426,114,q),
(549,114,l)
);
},
{
closed = 1;
nodes = (
(336,181,o),
(335,209,qs),
(334,241,o),
(298,282,o),
(269,282,qs),
(241,282,o),
(204,241,o),
(204,209,qs),
(203,181,o),
(240,131,o),
(269,120,q),
(298,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
53 1 8 7 1 76 0 1 12 1 0 3 1 0 105 0 6 0 11 7 6 11 105 4 13 2 2 2 3 97 5 1 3 3 23 77 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 65 63 36 57 36 57 56 54 52 50 49 48 43 41 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(583,0,l),
(548,0,ls),
(483,0,o),
(448,36,q),
(397,0,o),
(309,0,qs),
(279,0,ls),
(230,0,o),
(198,-30,qs),
(164,-62,o),
(164,-111,qs),
(164,-158,o),
(224,-219,o),
(273,-222,qs),
(313,-225,o),
(335,-221,q),
(336,-220,o),
(338,-220,q),
(347,-218,o),
(349,-218,qs),
(358,-218,o),
(358,-230,qs),
(358,-264,o),
(330,-288,qs),
(296,-318,o),
(236,-318,qs),
(156,-318,o),
(102,-265,qs),
(40,-204,o),
(41,-107,qs),
(41,-16,o),
(97,44,qs),
(164,114,o),
(278,114,qs),
(324,114,ls),
(361,114,o),
(384,129,q),
(376,145,o),
(354,202,qs),
(321,282,o),
(251,282,qs),
(212,282,o),
(175,263,qs),
(152,252,o),
(133,235,qs),
(123,225,o),
(114,225,qs),
(102,226,o),
(101,239,qs),
(100,248,o),
(102,260,qs),
(112,316,o),
(157,353,qs),
(201,391,o),
(268,391,qs),
(412,391,o),
(475,219,qs),
(495,162,o),
(510,132,o),
(524,123,qs),
(538,114,o),
(563,114,qs),
(583,114,l)
);
},
{
closed = 1;
nodes = (
(384,-129,o),
(369,-129,qs),
(354,-129,o),
(334,-109,o),
(334,-94,qs),
(334,-79,o),
(355,-58,o),
(369,-58,qs),
(384,-58,o),
(404,-79,o),
(404,-94,qs),
(404,-109,o)
);
},
{
closed = 1;
nodes = (
(485,-79,o),
(485,-94,qs),
(485,-109,o),
(465,-129,o),
(450,-129,qs),
(435,-129,o),
(414,-108,o),
(414,-94,qs),
(414,-79,o),
(436,-58,o),
(450,-58,qs),
(464,-58,o)
);
},
{
closed = 1;
nodes = (
(443,-154,o),
(443,-168,qs),
(443,-182,o),
(424,-202,o),
(410,-202,qs),
(395,-202,o),
(376,-182,o),
(376,-168,qs),
(376,-154,o),
(396,-134,o),
(410,-134,qs),
(424,-134,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 115 values pushed */
25 1 0 2 58 1 8 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 17 12 2 10 13 1 11 14 10 11 105 18 1 14 0 15 6 14 15 105 7 1 6 0 5 6 5 101 4 16 2 0 0 8 97 9 1 8 8 24 8 78 88 87 76 75 1 0 94 92 87 98 88 98 82 80 75 86 76 86 73 71 67 65 61 59 57 54 49 48 42 41 37 35 29 26 22 20 16 15 8 6 0 62 1 62 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(369,114,l),
(356,131,o),
(331,194,qs),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(390,391,o),
(450,213,qs),
(470,151,o),
(490,130,qs),
(501,117,o),
(519,115,qs),
(532,113,o),
(532,101,qs),
(532,54,o),
(476,0,o),
(427,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(227,-98,o),
(227,-122,qs),
(227,-145,o),
(194,-178,o),
(170,-178,qs),
(147,-178,o),
(115,-145,o),
(115,-122,qs),
(115,-98,o),
(147,-64,o),
(170,-64,qs),
(194,-64,o)
);
},
{
closed = 1;
nodes = (
(355,-98,o),
(355,-122,qs),
(355,-145,o),
(322,-178,o),
(299,-178,qs),
(276,-178,o),
(243,-145,o),
(243,-122,qs),
(243,-98,o),
(276,-64,o),
(299,-64,qs),
(323,-64,o)
);
},
{
closed = 1;
nodes = (
(286,-214,o),
(286,-236,qs),
(286,-257,o),
(256,-288,o),
(235,-288,qs),
(214,-288,o),
(184,-257,o),
(184,-236,qs),
(184,-214,o),
(214,-183,o),
(235,-183,qs),
(256,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 89 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 13 7 12 3 5 8 1 6 9 5 6 105 14 1 9 0 10 9 10 101 0 4 4 0 95 11 1 0 0 24 0 78 57 56 45 44 33 32 1 0 63 61 56 67 57 67 51 49 44 55 45 55 39 37 32 43 33 43 30 29 26 24 20 19 12 10 0 31 1 31 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(522,0,ls),
(459,0,o),
(422,36,q),
(393,16,o),
(333,0,o),
(283,0,qs),
(-1,-1,l),
(-1,114,l),
(298,114,ls),
(335,114,o),
(358,129,q),
(350,144,o),
(335,183,qs),
(327,202,ls),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(386,391,o),
(449,219,qs),
(469,162,o),
(484,132,o),
(498,123,qs),
(512,114,o),
(537,114,qs),
(557,114,l)
);
},
{
closed = 1;
nodes = (
(194,-178,o),
(170,-178,qs),
(147,-178,o),
(115,-145,o),
(115,-122,qs),
(115,-98,o),
(147,-64,o),
(170,-64,qs),
(194,-64,o),
(227,-98,o),
(227,-122,qs),
(227,-145,o)
);
},
{
closed = 1;
nodes = (
(355,-98,o),
(355,-122,qs),
(355,-145,o),
(322,-178,o),
(299,-178,qs),
(276,-178,o),
(243,-145,o),
(243,-122,qs),
(243,-98,o),
(276,-64,o),
(299,-64,qs),
(323,-64,o)
);
},
{
closed = 1;
nodes = (
(286,-214,o),
(286,-236,qs),
(286,-257,o),
(256,-288,o),
(235,-288,qs),
(214,-288,o),
(184,-257,o),
(184,-236,qs),
(184,-214,o),
(214,-183,o),
(235,-183,qs),
(256,-183,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
26 1 0 2 34 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 14 9 2 7 10 1 8 11 7 8 105 15 1 11 0 12 11 12 101 4 13 2 0 0 5 97 6 1 5 5 24 5 78 64 63 52 51 1 0 70 68 63 74 64 74 58 56 51 62 52 62 49 47 43 41 37 35 32 30 29 27 22 20 16 15 8 6 0 38 1 38 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,457,o),
(91,464,qs),
(91,471,ls),
(91,511,o),
(140,511,q),
(140,636,ls),
(140,689,o),
(184,689,qs),
(189,689,ls),
(195,689,o),
(195,684,qs),
(195,629,l),
(227,629,ls),
(271,629,o),
(320,584,o),
(320,543,qs),
(320,503,o),
(271,457,o),
(227,457,qs),
(98,457,ls)
);
},
{
closed = 1;
nodes = (
(195,511,l),
(229,511,ls),
(244,511,o),
(262,529,o),
(262,543,qs),
(262,558,o),
(244,576,o),
(229,576,qs),
(195,576,l)
);
},
{
closed = 1;
nodes = (
(477,0,l),
(444,0,ls),
(364,0,o),
(316,43,q),
(267,0,o),
(194,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(283,389,o),
(327,339,qs),
(378,283,o),
(378,188,qs),
(378,187,ls),
(379,114,o),
(441,114,qs),
(477,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
8 1 1 2 65 1 11 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 2 133 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 9 1 8 6 7 8 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
30 29 21 20 1 0 68 66 64 61 56 53 49 47 42 41 37 35 29 69 30 69 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 18 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,581,o),
(121,602,qs),
(121,624,o),
(151,654,o),
(172,654,qs),
(193,654,o),
(223,624,o),
(223,602,qs),
(223,581,o),
(193,550,o),
(172,550,qs),
(151,550,o)
);
},
{
closed = 1;
nodes = (
(52,464,o),
(52,488,qs),
(52,512,o),
(84,545,o),
(107,545,qs),
(131,545,o),
(164,512,o),
(164,488,qs),
(164,464,o),
(131,431,o),
(107,431,qs),
(84,431,o)
);
},
{
closed = 1;
nodes = (
(213,545,o),
(236,545,qs),
(260,545,o),
(292,512,o),
(292,488,qs),
(292,464,o),
(260,431,o),
(236,431,qs),
(213,431,o),
(180,464,o),
(180,488,qs),
(180,512,o)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
62 1 11 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 7 2 6 2 7 6 128 0 1 12 1 0 3 1 0 105 9 1 8 0 10 8 10 102 4 13 2 2 2 3 97 5 1 3 3 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 0 8 0 10 8 10 102 4 13 2 2 2 3 97 5 1 3 3 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 13 12 1 0 65 63 59 57 53 51 49 47 43 40 36 66 37 66 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,443,o),
(64,449,qs),
(64,456,ls),
(64,496,o),
(113,496,q),
(113,621,ls),
(113,675,o),
(157,675,qs),
(162,675,ls),
(168,675,o),
(168,669,qs),
(168,615,l),
(200,615,ls),
(244,615,o),
(293,570,o),
(293,529,qs),
(293,488,o),
(244,443,o),
(200,443,qs),
(71,443,ls)
);
},
{
closed = 1;
nodes = (
(168,496,l),
(202,496,ls),
(217,496,o),
(235,514,o),
(235,529,qs),
(235,543,o),
(217,562,o),
(202,562,qs),
(168,562,l)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
8 1 1 2 17 1 0 3 55 1 11 6 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 9 1 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 0 8 0 10 8 10 102 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
30 29 21 20 1 0 58 56 52 50 46 44 42 40 36 33 29 59 30 59 27 25 20 28 21 28 15 14 12 10 7 5 0 19 1 19 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(807,0,l),
(773,0,ls),
(695,0,o),
(647,42,q),
(598,0,o),
(526,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(523,114,ls),
(554,114,o),
(589,154,o),
(589,189,qs),
(589,223,o),
(551,265,o),
(521,265,qs),
(334,265,ls),
(262,265,o),
(264,322,qs),
(264,344,ls),
(265,387,o),
(295,404,q),
(529,552,ls),
(536,557,o),
(541,554,qs),
(548,549,o),
(557,536,qs),
(572,512,o),
(556,460,o),
(527,442,qs),
(417,373,l),
(523,373,ls),
(594,373,o),
(644,331,qs),
(705,281,o),
(707,188,qs),
(707,187,ls),
(708,114,o),
(771,114,qs),
(807,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
53 1 5 0 1 76 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 1 0 56 54 52 49 39 38 31 28 24 21 8 6 0 57 1 57 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,373,o),
(461,330,qs),
(523,277,o),
(523,182,qs),
(523,104,o),
(475,54,qs),
(423,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(367,265,o),
(337,265,qs),
(150,265,ls),
(78,265,o),
(80,322,qs),
(80,344,ls),
(81,387,o),
(111,404,q),
(345,552,ls),
(352,557,o),
(356,554,qs),
(363,549,o),
(372,536,qs),
(388,512,o),
(371,460,o),
(342,442,qs),
(233,373,l),
(339,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 32 0 31 33 36 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,0,l),
(589,0,ls),
(510,0,o),
(462,42,q),
(413,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(367,265,o),
(337,265,qs),
(150,265,ls),
(78,265,o),
(80,322,qs),
(80,344,ls),
(81,387,o),
(111,404,q),
(345,552,ls),
(352,557,o),
(356,554,qs),
(363,549,o),
(372,536,qs),
(388,512,o),
(371,460,o),
(342,442,qs),
(233,373,l),
(339,373,ls),
(410,373,o),
(460,331,qs),
(520,281,o),
(523,188,qs),
(523,187,ls),
(524,114,o),
(586,114,qs),
(622,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
34 1 4 0 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 37 35 33 31 30 28 24 21 8 6 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,473,o),
(264,497,qs),
(264,501,o),
(264,514,qs),
(264,519,o),
(264,521,qs),
(264,540,o),
(288,554,qs),
(481,677,ls),
(488,681,o),
(493,676,qs),
(506,660,o),
(506,644,qs),
(506,624,o),
(482,608,qs),
(292,489,ls)
);
},
{
closed = 1;
nodes = (
(807,0,l),
(773,0,ls),
(695,0,o),
(647,42,q),
(598,0,o),
(526,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(523,114,ls),
(554,114,o),
(589,154,o),
(589,189,qs),
(589,223,o),
(551,265,o),
(521,265,qs),
(334,265,ls),
(262,265,o),
(264,322,qs),
(264,344,ls),
(265,387,o),
(295,404,q),
(529,552,ls),
(536,557,o),
(541,554,qs),
(548,549,o),
(557,536,qs),
(572,512,o),
(556,460,o),
(527,442,qs),
(417,373,l),
(523,373,ls),
(594,373,o),
(644,331,qs),
(705,281,o),
(707,188,qs),
(707,187,ls),
(708,114,o),
(771,114,qs),
(807,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
69 1 5 0 1 76 0 4 1 2 1 4 2 128 0 1 0 2 0 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 17 16 72 70 68 65 55 54 47 44 40 37 24 22 16 73 17 73 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 797;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,473,o),
(81,497,q),
(80,501,o),
(81,514,qs),
(81,519,o),
(81,521,qs),
(81,539,o),
(104,554,qs),
(297,677,l),
(305,681,o),
(309,676,qs),
(322,660,o),
(322,644,qs),
(322,624,o),
(298,608,qs),
(108,489,ls)
);
},
{
closed = 1;
nodes = (
(413,372,o),
(462,330,qs),
(523,278,o),
(523,181,qs),
(523,104,o),
(475,54,qs),
(423,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(369,263,o),
(338,263,qs),
(151,263,ls),
(80,263,o),
(80,321,qs),
(80,345,ls),
(80,386,o),
(106,402,qs),
(347,553,l),
(356,557,o),
(359,555,qs),
(371,547,o),
(380,529,q),
(409,481,o),
(358,450,qs),
(235,372,l),
(341,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
21 11 2 3 74 4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 16 16 16 47 16 46 40 38 37 35 31 28 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,473,o),
(81,497,q),
(80,501,o),
(81,514,qs),
(81,519,o),
(81,521,qs),
(81,539,o),
(104,554,qs),
(297,677,l),
(305,681,o),
(309,676,qs),
(322,660,o),
(322,644,qs),
(322,624,o),
(298,608,qs),
(108,489,ls)
);
},
{
closed = 1;
nodes = (
(622,0,l),
(575,0,ls),
(506,0,o),
(465,44,q),
(414,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(369,263,o),
(338,263,qs),
(151,263,ls),
(80,263,o),
(80,321,qs),
(80,345,ls),
(80,386,o),
(106,402,qs),
(347,553,l),
(356,557,o),
(359,555,qs),
(371,547,o),
(380,529,q),
(409,481,o),
(358,450,qs),
(235,372,l),
(341,372,ls),
(412,372,o),
(461,330,qs),
(522,278,o),
(523,183,qs),
(527,114,o),
(585,114,qs),
(622,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
48 1 4 0 1 76 28 11 2 1 74 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 17 16 51 49 47 45 44 42 38 35 23 21 16 52 17 52 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,0,l),
(623,0,ls),
(593,0,o),
(564,10,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 1 0 40 38 34 32 23 22 14 12 7 4 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(132,498,qs),
(129,507,o),
(129,514,qs),
(130,543,o),
(162,553,q),
(151,571,o),
(151,594,qs),
(151,631,o),
(195,679,o),
(229,679,qs),
(257,680,o),
(293,650,o),
(293,627,qs),
(293,615,o),
(288,615,qs),
(287,615,o),
(281,618,qs),
(278,619,o),
(276,620,qs),
(254,630,o),
(239,630,qs),
(204,630,o),
(204,594,qs),
(204,577,o),
(223,557,o),
(239,557,qs),
(272,557,ls),
(314,557,o),
(314,519,qs),
(314,514,ls),
(314,506,o),
(304,506,qs),
(184,506,ls),
(165,506,o),
(147,497,qs),
(144,496,l),
(139,493,o),
(137,493,qs),
(134,493,o)
);
},
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
25 1 1 2 33 1 0 1 58 1 7 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
25 1 1 2 33 1 0 1 58 1 8 9 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 6 0 10 4 6 10 103 0 0 0 1 97 0 1 1 23 77 12 9 11 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 6 0 10 4 6 10 103 0 0 0 1 97 0 1 1 23 77 11 1 4 4 8 98 0 8 8 24 77 12 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 5 0 6 0 5 6 128 0 3 0 2 1 3 2 105 0 6 0 10 4 6 10 103 12 1 9 0 7 9 7 101 0 0 0 1 97 0 1 1 23 77 11 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
64 63 40 39 70 68 63 74 64 74 61 59 57 55 49 47 46 43 39 62 40 62 41 35 51 52 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 31 29 24 35 25 35 22 20 18 16 10 8 7 4 0 23 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,372,o),
(214,360,qs),
(214,187,ls),
(214,74,o),
(136,26,q),
(134,24,o),
(129,19,qs),
(110,1,o),
(91,-17,qs),
(60,-44,o),
(55,-64,q),
(76,-68,o),
(102,-100,o),
(101,-121,qs),
(101,-146,o),
(67,-181,o),
(44,-181,qs),
(19,-181,o),
(-14,-146,o),
(-15,-121,qs),
(-18,-58,o),
(40,0,q),
(33,0,l),
(1,0,l),
(1,114,l),
(36,114,ls),
(99,114,o),
(99,189,qs),
(99,278,ls),
(99,372,o),
(190,372,qs),
(201,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
20 1 3 2 1 76 4 1 0 1 0 133 0 3 2 3 134 0 1 1 2 95 0 2 2 24 2 78 1 0 15 13 9 7 6 4 0 31 1 30 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,-64,q),
(538,-68,o),
(564,-100,o),
(564,-121,qs),
(564,-146,o),
(530,-181,o),
(506,-181,qs),
(482,-181,o),
(449,-146,o),
(447,-121,qs),
(445,-59,o),
(503,0,q),
(403,0,ls),
(387,0,o),
(387,-25,qs),
(387,-28,o),
(387,-29,qs),
(382,-87,o),
(360,-127,qs),
(316,-214,o),
(207,-214,qs),
(132,-214,o),
(85,-169,qs),
(27,-119,o),
(27,-22,qs),
(27,-8,o),
(27,0,q),
(-1,0,l),
(-1,114,l),
(57,114,ls),
(102,114,o),
(136,133,q),
(137,133,o),
(139,135,q),
(147,139,o),
(152,139,qs),
(164,139,o),
(160,124,qs),
(148,76,o),
(146,53,qs),
(141,14,o),
(145,-21,qs),
(148,-61,o),
(180,-107,o),
(205,-107,qs),
(273,-107,o),
(273,-5,qs),
(273,58,o),
(311,114,o),
(354,114,qs),
(658,114,l),
(658,0,l),
(571,0,l),
(568,-2,o),
(563,-8,qs),
(557,-14,o),
(553,-17,qs),
(523,-44,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
56 40 2 2 0 47 1 8 2 2 76 0 3 1 3 133 0 8 2 6 2 8 6 128 0 2 0 6 2 6 102 4 1 1 1 0 95 7 5 2 0 0 24 0 78 36 38 37 17 37 23 35 33 35 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 648;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(778,0,l),
(745,0,ls),
(665,0,o),
(617,43,q),
(568,0,o),
(496,0,qs),
(369,0,ls),
(315,0,o),
(288,19,q),
(262,0,o),
(208,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(158,114,l),
(126,155,o),
(126,206,qs),
(126,265,o),
(157,308,q),
(91,330,o),
(88,403,qs),
(88,409,ls),
(88,424,o),
(105,419,qs),
(142,408,o),
(191,402,qs),
(236,395,o),
(296,394,qs),
(404,391,o),
(453,390,qs),
(552,388,o),
(611,342,qs),
(678,289,o),
(678,192,q),
(679,181,ls),
(683,114,o),
(742,114,qs),
(778,114,l)
);
},
{
closed = 1;
nodes = (
(228,244,o),
(228,212,qs),
(228,179,o),
(261,133,o),
(288,126,q),
(316,133,o),
(349,179,o),
(349,212,qs),
(349,244,o),
(315,286,o),
(288,286,qs),
(262,286,o)
);
},
{
closed = 1;
nodes = (
(527,114,o),
(562,158,o),
(562,195,qs),
(562,279,o),
(447,285,qs),
(438,285,o),
(433,286,q),
(451,250,o),
(451,206,qs),
(451,155,o),
(419,114,q),
(496,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
18 1 6 1 49 3 2 3 0 6 38 33 2 3 0 3 76 59 1 6 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
18 1 6 1 49 3 2 3 0 7 38 33 2 3 0 3 76 59 1 6 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
55 55 44 43 1 0 55 66 55 65 62 61 43 54 44 54 41 39 37 34 32 29 24 22 10 6 0 42 1 42 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 768;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,342,qs),
(647,289,o),
(647,192,qs),
(647,112,o),
(602,60,qs),
(551,0,o),
(465,0,qs),
(337,0,ls),
(283,0,o),
(257,19,q),
(231,0,o),
(177,0,qs),
(-1,0,l),
(-1,114,l),
(126,114,l),
(94,155,o),
(94,206,qs),
(94,265,o),
(125,308,q),
(59,330,o),
(57,403,qs),
(57,409,ls),
(57,424,o),
(73,419,qs),
(110,408,o),
(160,402,qs),
(204,395,o),
(265,394,qs),
(372,391,o),
(421,390,qs),
(520,388,o)
);
},
{
closed = 1;
nodes = (
(196,244,o),
(196,212,qs),
(196,179,o),
(229,133,o),
(257,126,q),
(285,133,o),
(317,179,o),
(317,212,qs),
(317,244,o),
(283,286,o),
(257,286,qs),
(231,286,o)
);
},
{
closed = 1;
nodes = (
(495,114,o),
(531,158,o),
(531,195,qs),
(531,279,o),
(415,285,qs),
(406,285,o),
(402,286,q),
(420,250,o),
(420,206,qs),
(420,156,o),
(387,114,q),
(464,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
11 1 4 0 37 1 1 4 20 1 2 1 3 76 47 1 4 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
11 1 4 0 37 1 1 5 20 1 2 1 3 76 47 1 4 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
7 1 0 5 8 2 4 1 0 4 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 4 0 5 5 4 114 7 1 0 0 5 1 0 5 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
43 43 32 31 3 0 43 54 43 53 50 49 31 42 32 42 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,0,l),
(713,0,ls),
(633,0,o),
(586,43,q),
(536,0,o),
(465,0,qs),
(337,0,ls),
(283,0,o),
(257,19,q),
(231,0,o),
(177,0,qs),
(-1,0,l),
(-1,114,l),
(126,114,l),
(94,155,o),
(94,206,qs),
(94,265,o),
(125,308,q),
(59,330,o),
(57,403,qs),
(57,409,ls),
(57,424,o),
(73,419,qs),
(110,408,o),
(160,402,qs),
(204,395,o),
(265,394,qs),
(372,391,o),
(421,390,qs),
(520,388,o),
(579,342,qs),
(647,289,o),
(647,192,qs),
(647,181,ls),
(652,114,o),
(710,114,qs),
(746,114,l)
);
},
{
closed = 1;
nodes = (
(196,244,o),
(196,212,qs),
(196,179,o),
(229,133,o),
(257,126,q),
(285,133,o),
(317,179,o),
(317,212,qs),
(317,244,o),
(283,286,o),
(257,286,qs),
(231,286,o)
);
},
{
closed = 1;
nodes = (
(495,114,o),
(531,158,o),
(531,195,qs),
(531,279,o),
(415,285,qs),
(406,285,o),
(402,286,q),
(420,250,o),
(420,206,qs),
(420,156,o),
(387,114,q),
(464,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
18 1 6 1 43 2 2 0 6 32 27 2 3 0 3 76 53 1 6 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
18 1 6 1 43 2 2 0 7 32 27 2 3 0 3 76 53 1 6 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
49 49 38 37 1 0 49 60 49 59 56 55 37 48 38 48 35 33 31 28 26 24 23 22 10 6 0 36 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(548,114,l),
(548,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
0 2 0 1 2 1 101 0 0 0 3 95 0 3 3 24 3 78 38 42 38 32 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,175,qs),
(164,184,o),
(164,191,qs),
(166,220,o),
(197,230,q),
(186,248,o),
(186,272,qs),
(186,308,o),
(230,356,o),
(264,357,qs),
(292,357,o),
(328,327,o),
(328,304,qs),
(328,292,o),
(323,292,qs),
(322,292,o),
(316,295,qs),
(313,296,o),
(311,297,qs),
(289,307,o),
(274,307,qs),
(239,307,o),
(239,271,qs),
(239,254,o),
(259,234,o),
(274,234,qs),
(307,234,ls),
(349,234,o),
(349,197,qs),
(349,191,ls),
(349,183,o),
(339,183,qs),
(219,183,ls),
(200,183,o),
(182,175,qs),
(179,174,o),
(179,173,q),
(174,171,o),
(172,171,qs),
(169,171,o)
);
},
{
closed = 1;
nodes = (
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(548,114,l),
(548,0,l),
(279,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
26 1 1 2 34 1 0 1 0 1 4 0 3 76 0 3 0 2 1 3 2 105 0 1 0 0 4 1 0 103 0 6 0 5 6 5 101 0 4 4 7 95 8 1 7 7 24 7 78 40 40 40 70 40 69 42 38 43 41 35 51 53 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 538;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,516,o),
(205,491,qs),
(205,466,o),
(171,432,o),
(146,432,qs),
(122,432,o),
(88,466,o),
(88,491,qs),
(88,516,o),
(122,551,o),
(146,551,qs),
(171,551,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,-96,o),
(134,-121,qs),
(134,-146,o),
(100,-181,o),
(75,-181,qs),
(51,-181,o),
(17,-146,o),
(17,-121,qs),
(17,-96,o),
(51,-62,o),
(75,-62,qs),
(100,-62,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,114,l),
(32,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(197,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(210,106,o),
(169,58,qs),
(121,0,o),
(30,0,qs),
(-2,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 2 1 133 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,l),
(276,0,ls),
(200,0,o),
(152,40,q),
(105,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(32,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(197,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(211,114,o),
(274,114,qs),
(310,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 1 3 0 1 76 0 1 0 1 133 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 19 17 15 13 12 10 7 4 0 20 1 20 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(653,7,l),
(633,4,l),
(619,-81,o),
(553,-140,qs),
(471,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(653,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
37 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 33 31 21 20 12 10 8 6 0 38 1 38 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(210,106,o),
(170,58,qs),
(122,0,o),
(30,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(56,-178,o),
(33,-178,qs),
(9,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(9,-64,o),
(33,-64,qs),
(56,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(161,-178,qs),
(138,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(138,-64,o),
(161,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,l),
(276,0,ls),
(200,0,o),
(153,40,q),
(106,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(211,114,o),
(274,114,qs),
(310,114,l)
);
},
{
closed = 1;
nodes = (
(56,-178,o),
(33,-178,qs),
(9,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(9,-64,o),
(33,-64,qs),
(56,-64,o),
(89,-98,o),
(89,-122,qs),
(89,-145,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(161,-178,qs),
(138,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(138,-64,o),
(161,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
16 1 3 0 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 34 33 1 0 40 38 33 44 34 44 31 29 25 23 19 17 15 13 12 10 7 4 0 20 1 20 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,372,o),
(904,360,qs),
(904,187,ls),
(904,106,o),
(863,58,qs),
(815,0,o),
(723,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(726,114,ls),
(789,114,o),
(789,189,qs),
(789,278,ls),
(789,372,o),
(881,372,qs),
(891,372,ls)
);
},
{
closed = 1;
nodes = (
(792,-96,o),
(792,-121,qs),
(792,-146,o),
(758,-181,o),
(734,-181,qs),
(710,-181,o),
(676,-146,o),
(676,-121,qs),
(676,-96,o),
(709,-62,o),
(734,-62,qs),
(759,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
9 1 0 4 0 133 0 4 1 4 133 10 1 7 0 8 5 7 8 105 0 3 0 5 3 5 101 0 1 1 2 96 6 1 2 2 24 2 78 52 51 1 0 58 56 51 62 52 62 44 42 39 37 27 26 18 16 14 12 7 4 0 50 1 49 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(904,372,o),
(904,360,qs),
(904,187,ls),
(904,106,o),
(863,58,qs),
(815,0,o),
(723,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(726,114,ls),
(789,114,o),
(789,189,qs),
(789,278,ls),
(789,372,o),
(881,372,qs),
(891,372,ls)
);
},
{
closed = 1;
nodes = (
(792,-96,o),
(792,-121,qs),
(792,-146,o),
(758,-181,o),
(734,-181,qs),
(710,-181,o),
(676,-146,o),
(676,-121,qs),
(676,-96,o),
(709,-62,o),
(734,-62,qs),
(759,-62,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
13 1 0 4 0 133 0 4 1 4 133 14 1 7 0 8 5 7 8 105 0 3 0 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 96 6 1 2 2 24 2 78 76 75 64 63 52 51 1 0 82 80 75 86 76 86 70 68 63 74 64 74 58 56 51 62 52 62 44 42 39 37 27 26 18 16 14 12 7 4 0 50 1 49 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(728,478,o),
(728,503,qs),
(728,528,o),
(762,563,o),
(787,563,qs),
(813,563,o),
(847,528,o),
(847,503,qs),
(847,477,o),
(812,442,o),
(787,442,qs),
(762,442,o)
);
},
{
closed = 1;
nodes = (
(909,345,qs),
(968,290,o),
(968,195,qs),
(968,113,o),
(923,60,qs),
(872,1,o),
(788,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(622,114,l),
(603,148,o),
(602,195,qs),
(602,277,o),
(649,331,qs),
(701,391,o),
(786,391,qs),
(859,391,o)
);
},
{
closed = 1;
nodes = (
(851,162,o),
(851,198,qs),
(851,234,o),
(814,282,o),
(786,282,qs),
(758,282,o),
(720,234,o),
(720,198,qs),
(720,163,o),
(758,114,o),
(786,114,qs),
(814,114,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
0 6 10 3 10 6 3 128 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 15 1 0 0 1 97 0 1 1 23 77 17 9 2 3 3 4 95 8 1 4 4 24 4 78 89 88 77 76 65 64 13 12 1 0 95 93 88 99 89 99 83 81 76 87 77 87 71 69 64 75 65 75 57 55 52 50 40 39 31 29 27 25 20 18 12 63 13 63 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1012;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
0 1 5 1 133 0 5 2 5 133 13 9 12 3 7 10 1 8 6 7 8 105 0 4 0 6 4 6 101 0 2 2 0 96 3 11 2 0 0 24 0 78 64 63 52 51 1 0 70 68 63 74 64 74 58 56 51 62 52 62 47 45 35 34 26 24 22 20 15 12 9 6 0 50 1 50 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(899,106,o),
(858,58,qs),
(810,0,o),
(718,0,qs),
(632,0,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
0 1 5 1 133 0 5 2 5 133 17 9 16 3 7 10 1 8 6 7 8 105 0 4 0 6 11 4 6 105 19 13 18 3 11 14 1 12 11 12 101 0 2 2 0 96 3 15 2 0 0 24 0 78 88 87 76 75 64 63 52 51 1 0 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 58 56 51 62 52 62 47 45 35 34 26 24 22 20 15 12 9 6 0 50 1 50 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 950;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,677,qs),
(12,699,o),
(22,727,qs),
(31,754,o),
(61,754,qs),
(81,754,o),
(105,731,qs),
(106,730,ls),
(118,719,o),
(123,719,qs),
(127,719,o),
(132,723,qs),
(147,734,l),
(121,761,o),
(121,787,qs),
(121,815,o),
(157,849,o),
(186,849,qs),
(215,848,o),
(251,813,o),
(251,786,qs),
(251,760,o),
(219,732,q),
(233,706,o),
(206,686,qs),
(201,683,o),
(196,688,qs),
(180,703,l),
(150,681,ls),
(133,667,o),
(115,667,qs),
(100,667,o),
(78,690,q),
(68,703,o),
(61,703,qs),
(53,703,o),
(41,679,q),
(37,668,o)
);
},
{
closed = 1;
nodes = (
(166,787,qs),
(166,774,o),
(184,758,q),
(206,774,o),
(206,787,qs),
(206,796,o),
(195,808,o),
(187,808,qs),
(165,808,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
43 1 4 5 24 14 2 3 4 89 70 57 3 7 6 83 1 11 7 4 76 9 1 0 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 8 14 3 6 1 7 7 6 114 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
10 8 14 3 6 1 7 1 6 7 128 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
48 47 39 38 86 84 82 80 74 72 68 66 61 59 55 53 47 91 48 91 38 46 39 46 35 38 43 34 33 15 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(257,811,o),
(257,807,qs),
(257,738,ls),
(257,700,o),
(218,655,o),
(183,655,qs),
(153,655,o),
(134,673,q),
(114,655,o),
(85,655,qs),
(50,655,o),
(9,700,o),
(9,738,qs),
(9,760,ls),
(9,781,o),
(17,795,q),
(29,811,o),
(51,811,qs),
(57,811,ls),
(61,811,o),
(61,807,qs),
(61,733,ls),
(61,704,o),
(84,704,qs),
(107,704,o),
(107,733,qs),
(107,760,ls),
(107,784,o),
(118,797,qs),
(129,811,o),
(150,811,qs),
(155,811,ls),
(160,811,o),
(160,807,qs),
(160,733,ls),
(160,704,o),
(182,704,qs),
(206,704,o),
(206,733,qs),
(206,760,ls),
(206,784,o),
(216,797,qs),
(228,811,o),
(248,811,qs),
(253,811,ls)
);
},
{
closed = 1;
nodes = (
(225,603,o),
(225,566,qs),
(225,560,ls),
(225,552,o),
(215,552,qs),
(91,552,ls),
(70,552,o),
(51,543,qs),
(46,540,o),
(44,540,qs),
(41,540,o),
(39,544,qs),
(36,552,o),
(36,560,qs),
(37,601,o),
(93,602,qs),
(148,603,l),
(182,603,ls)
);
},
{
closed = 1;
nodes = (
(225,514,o),
(225,477,qs),
(225,471,ls),
(225,463,o),
(215,463,qs),
(91,463,ls),
(69,463,o),
(51,454,qs),
(46,451,o),
(44,451,qs),
(41,451,o),
(39,456,qs),
(36,463,o),
(36,471,qs),
(37,512,o),
(93,513,qs),
(148,514,l),
(182,514,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
42 23 10 3 1 0 36 1 5 1 52 1 9 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 2 11 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
4 2 11 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 87 13 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
65 63 47 45 1 0 76 73 63 80 65 79 58 55 45 62 47 61 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(42,670,qs),
(38,678,o),
(38,686,qs),
(40,727,o),
(96,728,qs),
(151,728,l),
(185,728,ls),
(227,728,o),
(227,691,qs),
(227,686,ls),
(227,678,o),
(218,678,qs),
(94,678,ls),
(72,678,o),
(53,668,qs),
(48,666,o),
(47,666,qs),
(44,666,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 2 0 60 41 28 3 3 2 54 1 7 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 4 9 3 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 4 9 3 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
19 18 57 55 53 51 45 43 39 37 32 30 26 24 18 62 19 62 67 51 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,687,o),
(45,689,qs),
(67,701,o),
(118,737,q),
(94,763,o),
(94,789,qs),
(94,818,o),
(131,853,o),
(161,853,qs),
(191,852,o),
(228,816,o),
(228,788,qs),
(228,760,o),
(196,733,q),
(211,708,o),
(182,687,qs),
(176,682,o),
(170,688,qs),
(155,703,l),
(127,682,o),
(115,676,q),
(114,675,o),
(113,674,qs),
(94,662,o),
(81,662,qs),
(62,662,o),
(49,678,qs),
(44,684,ls)
);
},
{
closed = 1;
nodes = (
(143,789,qs),
(144,777,o),
(160,762,q),
(180,777,o),
(180,789,qs),
(180,797,o),
(170,808,o),
(162,808,qs),
(143,808,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
35 33 25 23 13 8 6 0 2 79 60 47 3 4 3 73 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
38 37 29 28 76 74 72 70 64 62 58 56 51 49 45 43 37 81 38 81 28 36 29 36 46 33 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,721,o),
(256,716,qs),
(256,648,ls),
(256,609,o),
(217,564,o),
(182,564,qs),
(152,564,o),
(133,583,q),
(113,564,o),
(84,564,qs),
(49,564,o),
(8,609,o),
(8,648,qs),
(8,669,ls),
(8,690,o),
(16,704,qs),
(28,721,o),
(50,721,qs),
(56,721,ls),
(60,721,o),
(60,716,qs),
(60,643,ls),
(60,613,o),
(83,613,qs),
(106,613,o),
(106,643,qs),
(106,669,ls),
(106,694,o),
(117,707,qs),
(128,721,o),
(149,721,qs),
(154,721,ls),
(159,721,o),
(159,716,qs),
(159,643,ls),
(159,613,o),
(181,613,qs),
(205,613,o),
(205,643,qs),
(205,669,ls),
(205,694,o),
(215,707,qs),
(227,721,o),
(247,721,qs),
(252,721,ls)
);
},
{
closed = 1;
nodes = (
(230,511,o),
(230,472,qs),
(230,466,ls),
(230,457,o),
(218,457,qs),
(96,457,ls),
(70,457,o),
(50,447,qs),
(48,446,ls),
(44,444,o),
(42,444,qs),
(40,444,o),
(38,449,qs),
(34,456,o),
(34,466,qs),
(35,486,o),
(49,497,qs),
(64,511,o),
(93,511,qs),
(186,511,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
42 23 10 3 1 0 36 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
4 2 9 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 2 9 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
46 45 1 0 60 57 45 64 46 63 39 37 35 33 27 25 21 19 14 12 8 6 0 44 1 44 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,793,qs),
(105,820,o),
(138,827,q),
(145,827,o),
(149,822,qs),
(163,800,o),
(163,759,qs),
(164,733,o),
(157,703,qs),
(153,690,o),
(135,665,o),
(128,664,qs),
(122,663,o),
(123,669,qs),
(124,673,o),
(124,684,q),
(123,689,o),
(123,692,qs),
(123,713,o),
(122,724,qs),
(119,747,o),
(110,776,q),
(106,785,o)
);
},
{
closed = 1;
nodes = (
(257,614,o),
(257,610,qs),
(257,542,ls),
(257,503,o),
(218,458,o),
(183,458,qs),
(153,458,o),
(134,477,q),
(114,458,o),
(85,458,qs),
(50,458,o),
(9,503,o),
(9,542,qs),
(9,563,ls),
(9,584,o),
(17,598,q),
(29,614,o),
(51,614,qs),
(57,614,ls),
(61,614,o),
(61,610,qs),
(61,537,ls),
(61,507,o),
(84,507,qs),
(107,507,o),
(107,537,qs),
(107,563,ls),
(107,588,o),
(118,601,qs),
(129,614,o),
(150,614,qs),
(155,614,ls),
(160,614,o),
(160,610,qs),
(160,537,ls),
(160,507,o),
(182,507,qs),
(206,507,o),
(206,537,qs),
(206,563,ls),
(206,588,o),
(216,601,qs),
(228,614,o),
(248,614,qs),
(253,614,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
6 4 2 1 0 65 46 33 3 2 1 59 1 6 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 5 3 8 3 1 2 2 1 112 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 133 5 3 8 3 1 2 1 133 4 1 2 6 6 2 89 4 1 2 2 6 98 7 1 6 2 6 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
24 23 62 60 58 56 50 48 44 42 37 35 31 29 23 67 24 67 19 18 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 6 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 96 8 7 2 3 3 24 3 78 69 68 57 56 1 0 75 73 68 79 69 79 63 61 56 67 57 67 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(998,0,l),
(965,0,ls),
(889,0,o),
(841,40,q),
(794,0,o),
(718,0,qs),
(632,0,l),
(617,-84,o),
(552,-141,qs),
(469,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(721,114,ls),
(784,114,o),
(784,189,qs),
(784,278,ls),
(784,372,o),
(876,372,qs),
(886,372,ls),
(899,372,o),
(899,360,qs),
(899,187,ls),
(900,114,o),
(962,114,qs),
(998,114,l)
);
},
{
closed = 1;
nodes = (
(778,-98,o),
(778,-122,qs),
(778,-145,o),
(745,-178,o),
(722,-178,qs),
(698,-178,o),
(666,-145,o),
(666,-122,qs),
(666,-98,o),
(698,-64,o),
(722,-64,qs),
(745,-64,o)
);
},
{
closed = 1;
nodes = (
(906,-98,o),
(906,-122,qs),
(906,-145,o),
(874,-178,o),
(851,-178,qs),
(827,-178,o),
(794,-145,o),
(794,-122,qs),
(794,-98,o),
(827,-64,o),
(851,-64,qs),
(874,-64,o)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 119 values pushed */
51 1 3 0 1 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 6 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 96 8 7 2 3 3 24 3 78 93 92 81 80 69 68 57 56 1 0 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 63 61 56 67 57 67 54 52 50 48 45 43 33 32 24 22 20 18 13 10 7 4 0 55 1 55 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1106,0,o),
(1106,12,qs),
(1106,462,ls),
(1106,556,o),
(1198,556,qs),
(1208,556,ls),
(1221,556,o),
(1221,543,qs),
(1221,93,ls),
(1221,0,o),
(1130,0,qs),
(1119,0,ls)
);
},
{
closed = 1;
nodes = (
(619,774,qs),
(619,801,o),
(652,808,q),
(659,808,o),
(663,802,qs),
(676,780,o),
(677,739,qs),
(678,713,o),
(657,669,o),
(643,667,qs),
(636,666,o),
(637,678,qs),
(639,707,o),
(623,756,qs),
(620,765,o)
);
},
{
closed = 1;
nodes = (
(525,537,o),
(525,576,qs),
(525,583,ls),
(525,604,o),
(534,618,qs),
(546,634,o),
(568,634,qs),
(573,634,ls),
(578,634,o),
(578,629,qs),
(578,571,ls),
(578,542,o),
(600,542,qs),
(624,542,o),
(624,571,qs),
(624,583,ls),
(624,607,o),
(634,620,qs),
(646,634,o),
(666,634,qs),
(672,634,ls),
(676,634,o),
(676,629,qs),
(676,571,ls),
(676,542,o),
(699,542,qs),
(722,542,o),
(722,571,qs),
(722,583,ls),
(722,607,o),
(733,620,qs),
(744,634,o),
(764,634,qs),
(770,634,ls),
(774,634,o),
(774,629,qs),
(774,576,ls),
(774,538,o),
(734,493,o),
(700,493,qs),
(669,493,o),
(650,511,q),
(631,493,o),
(602,493,qs),
(566,493,o)
);
},
{
closed = 1;
nodes = (
(1006,443,o),
(1006,431,qs),
(1006,187,ls),
(1006,106,o),
(965,57,qs),
(917,0,o),
(825,0,qs),
(757,0,ls),
(690,0,o),
(648,42,q),
(602,0,o),
(523,0,qs),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,350,ls),
(589,443,o),
(680,443,qs),
(690,443,ls),
(704,443,o),
(704,431,qs),
(704,187,ls),
(704,114,o),
(767,114,qs),
(828,114,ls),
(891,114,o),
(891,189,qs),
(891,350,ls),
(891,443,o),
(983,443,qs),
(993,443,ls)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
25 14 2 5 2 61 48 35 3 1 5 29 1 3 1 114 109 2 0 11 4 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
25 14 2 5 2 61 48 35 3 1 5 29 1 3 6 114 109 2 0 11 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
25 14 2 5 2 61 48 35 3 1 5 29 1 3 6 114 109 2 0 19 4 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 5 2 133 9 7 2 5 1 1 5 112 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 103 4 22 2 3 3 1 97 8 6 2 1 1 23 77 24 19 13 3 11 11 0 98 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 103 4 22 2 3 3 1 97 8 6 2 1 1 23 77 24 19 13 3 11 11 0 98 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 67 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 103 0 1 1 23 77 4 22 2 3 3 6 97 8 1 6 6 23 77 24 19 13 3 11 11 0 98 18 17 16 21 4 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 0 15 0 20 11 15 20 103 0 1 1 23 77 4 22 2 3 3 6 97 8 1 6 6 23 77 13 1 11 11 0 98 18 17 21 3 0 0 24 77 24 1 19 19 16 97 0 16 16 24 16 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 73 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 0 1 1 23 77 13 1 11 11 0 98 18 17 21 3 0 0 24 77 24 1 19 19 16 97 0 16 16 24 16 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
0 2 5 2 133 9 7 2 5 1 5 133 14 12 23 3 10 3 15 3 10 15 128 8 1 6 4 22 2 3 10 6 3 106 0 15 0 20 11 15 20 103 24 1 19 0 16 19 16 101 0 1 1 23 77 13 1 11 11 0 98 18 17 21 3 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 61 values pushed */
126 125 73 72 28 27 1 0 132 130 125 136 126 136 118 115 113 110 108 106 100 98 97 94 91 88 85 82 79 76 72 124 73 123 65 63 59 57 52 50 46 44 39 37 32 30 27 71 28 71 23 22 7 4 0 11 1 10 25 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1274;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,-30,o),
(348,-1,qs),
(382,50,ls),
(397,72,o),
(397,90,qs),
(397,156,l),
(430,163,l),
(430,11,l),
(704,69,l),
(733,118,o),
(736,194,q),
(545,154,l),
(545,188,l),
(705,222,l),
(731,276,o),
(736,347,q),
(545,306,l),
(545,591,l),
(464,551,o),
(430,497,q),
(430,282,l),
(397,275,l),
(397,629,l),
(330,598,o),
(281,536,q),
(281,250,l),
(119,216,l),
(95,162,o),
(88,91,q),
(281,132,l),
(281,78,l),
(84,36,l),
(62,-10,o),
(53,-89,q),
(293,-38,ls)
);
},
{
closed = 1;
nodes = (
(426,-143,q),
(705,-83,l),
(732,-27,o),
(736,42,q),
(457,-18,l),
(432,-70,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,634,qs),
(40,633,o),
(38,631,q),
(33,623,o),
(30,622,qs),
(26,621,o),
(24,625,qs),
(12,646,o),
(18,667,qs),
(26,698,o),
(62,696,qs),
(77,696,o),
(110,682,qs),
(151,666,o),
(161,666,qs),
(175,666,o),
(186,682,qs),
(187,683,o),
(189,685,q),
(194,693,o),
(197,694,qs),
(201,695,o),
(203,691,qs),
(214,671,o),
(209,649,qs),
(202,618,o),
(165,620,qs),
(150,620,o),
(117,634,qs),
(76,651,o),
(66,651,qs),
(52,651,o)
);
},
{
closed = 1;
nodes = (
(151,0,o),
(103,45,qs),
(50,94,o),
(50,187,qs),
(50,462,ls),
(50,556,o),
(142,556,qs),
(152,556,ls),
(165,556,o),
(165,543,qs),
(165,189,ls),
(165,114,o),
(228,114,qs),
(265,114,l),
(265,0,l),
(231,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
10 1 2 3 26 1 1 0 2 76 0 3 7 1 0 1 3 0 105 0 2 0 1 5 2 1 105 0 5 5 23 77 0 4 4 6 98 8 1 6 6 24 6 78 32 32 1 0 32 47 32 46 41 38 35 33 21 19 17 15 5 3 0 31 1 31 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 251;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(50,624,o),
(32,616,qs),
(30,615,o),
(29,614,q),
(24,612,o),
(22,612,qs),
(20,612,o),
(17,616,q),
(14,625,o),
(14,632,qs),
(16,662,o),
(47,671,q),
(36,689,o),
(36,713,qs),
(36,749,o),
(80,797,o),
(115,798,qs),
(142,799,o),
(178,769,o),
(178,745,qs),
(178,733,o),
(173,733,qs),
(172,733,o),
(166,736,qs),
(163,737,o),
(161,738,qs),
(139,748,o),
(125,748,qs),
(89,748,o),
(89,712,qs),
(89,696,o),
(109,675,o),
(125,675,qs),
(157,675,ls),
(199,675,o),
(199,638,qs),
(199,632,ls),
(199,624,o),
(190,624,qs),
(70,624,ls)
);
},
{
closed = 1;
nodes = (
(260,0,l),
(227,0,ls),
(146,0,o),
(99,45,qs),
(46,94,o),
(46,187,qs),
(46,462,ls),
(46,556,o),
(137,556,qs),
(147,556,ls),
(161,556,o),
(161,543,qs),
(161,189,ls),
(161,114,o),
(224,114,qs),
(260,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
19 1 1 2 27 1 0 1 2 76 0 3 0 2 1 3 2 105 0 1 7 1 0 5 1 0 103 0 5 5 23 77 8 1 4 4 6 98 0 6 6 24 6 78 41 40 1 0 54 52 47 44 40 55 41 55 23 21 12 10 7 4 0 39 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 251;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,451,q),
(131,459,o),
(131,467,qs),
(133,496,o),
(164,506,q),
(153,524,o),
(153,547,qs),
(153,583,o),
(197,631,o),
(232,632,qs),
(259,633,o),
(296,603,o),
(296,579,qs),
(296,568,o),
(291,568,qs),
(289,568,o),
(283,570,q),
(280,572,o),
(278,573,qs),
(256,583,o),
(242,583,qs),
(206,583,o),
(206,547,qs),
(206,530,o),
(226,509,o),
(242,509,qs),
(274,509,ls),
(316,509,o),
(316,472,qs),
(316,467,ls),
(316,459,o),
(307,459,qs),
(187,459,ls),
(167,459,o),
(149,450,qs),
(147,449,o),
(146,449,q),
(141,446,o),
(139,446,qs),
(137,446,o)
);
},
{
closed = 1;
nodes = (
(506,0,l),
(403,0,l),
(394,-66,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(230,-105,o),
(283,-49,o),
(290,0,q),
(223,0,ls),
(151,0,o),
(99,47,qs),
(40,101,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(406,231,o),
(409,151,qs),
(410,132,o),
(409,114,q),
(506,114,l)
);
},
{
closed = 1;
nodes = (
(295,201,o),
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,160,o),
(196,114,o),
(223,114,qs),
(290,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 13 11 5 13 105 8 1 7 0 9 7 9 101 15 12 14 3 11 11 6 95 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 6 7 6 8 7 128 0 4 3 1 2 1 4 2 105 0 1 0 0 5 1 0 103 0 5 0 13 11 5 13 105 0 7 0 9 7 9 101 15 12 14 3 11 11 6 95 10 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 1 2 3 1 128 0 8 6 7 6 8 7 128 0 4 0 2 3 4 2 105 0 1 0 0 5 1 0 103 0 5 0 13 11 5 13 105 0 7 0 9 7 9 101 15 12 14 3 11 11 6 95 10 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
77 76 40 40 83 81 76 86 77 86 40 75 40 75 74 73 69 67 34 34 38 47 35 36 35 51 53 16 7 31 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,0,l),
(227,0,ls),
(147,0,o),
(99,45,qs),
(46,94,o),
(46,187,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,189,ls),
(161,114,o),
(224,114,qs),
(260,114,l)
);
},
{
closed = 1;
nodes = (
(187,-182,o),
(187,-219,qs),
(187,-225,ls),
(187,-233,o),
(178,-233,qs),
(58,-233,ls),
(38,-233,o),
(20,-241,q),
(18,-243,o),
(17,-243,q),
(12,-246,o),
(10,-246,qs),
(8,-246,o),
(5,-241,q),
(2,-232,o),
(2,-225,qs),
(4,-196,o),
(35,-186,q),
(24,-168,o),
(24,-144,qs),
(24,-108,o),
(68,-60,o),
(103,-59,qs),
(130,-59,o),
(166,-89,o),
(166,-112,qs),
(166,-124,o),
(161,-124,qs),
(160,-124,o),
(154,-121,qs),
(151,-120,o),
(149,-119,qs),
(127,-109,o),
(113,-109,qs),
(77,-109,o),
(77,-145,qs),
(77,-162,o),
(97,-182,o),
(113,-182,qs),
(145,-182,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
29 1 3 4 37 1 6 3 2 76 0 5 0 4 3 5 4 105 8 1 3 0 6 3 6 99 0 1 1 23 77 7 1 0 0 2 98 0 2 2 24 2 78 17 16 1 0 51 48 33 31 22 20 16 55 17 54 14 12 7 4 0 15 1 15 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 251;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,299,qs),
(248,308,o),
(248,315,qs),
(250,344,o),
(281,354,q),
(271,372,o),
(271,396,qs),
(271,432,o),
(315,480,o),
(349,481,qs),
(376,481,o),
(413,451,o),
(413,428,qs),
(413,416,o),
(408,416,qs),
(406,416,o),
(400,419,qs),
(397,420,o),
(396,421,q),
(374,431,o),
(359,431,qs),
(323,431,o),
(323,395,qs),
(323,378,o),
(343,358,o),
(359,358,qs),
(391,358,ls),
(433,358,o),
(433,321,qs),
(433,315,ls),
(433,307,o),
(424,307,qs),
(304,307,ls),
(284,307,o),
(266,299,q),
(264,297,o),
(263,297,q),
(259,294,o),
(257,294,qs),
(254,294,o)
);
},
{
closed = 1;
nodes = (
(653,7,l),
(633,4,l),
(619,-81,o),
(553,-140,qs),
(471,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(653,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 0 1 77 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 8 0 5 0 8 5 128 0 4 3 1 2 1 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 3 2 1 2 3 1 128 0 8 0 5 0 8 5 128 0 4 0 2 3 4 2 105 0 1 0 0 8 1 0 103 0 7 0 9 7 9 101 10 1 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
41 40 73 71 61 60 52 50 48 46 40 78 41 78 35 36 35 51 53 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,492,o),
(249,455,qs),
(249,449,ls),
(249,442,o),
(240,442,qs),
(120,442,ls),
(100,442,o),
(82,433,qs),
(80,432,o),
(79,432,q),
(74,429,o),
(72,429,qs),
(70,429,o),
(67,433,q),
(64,442,o),
(64,449,qs),
(66,479,o),
(97,488,q),
(86,506,o),
(86,530,qs),
(86,566,o),
(130,614,o),
(165,615,qs),
(192,616,o),
(228,586,o),
(228,562,qs),
(228,551,o),
(223,551,qs),
(222,551,o),
(216,553,q),
(213,555,o),
(211,556,qs),
(189,566,o),
(175,566,qs),
(139,566,o),
(139,529,qs),
(139,513,o),
(159,492,o),
(175,492,qs),
(207,492,ls)
);
},
{
closed = 1;
nodes = (
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
13 1 0 1 21 1 3 0 2 76 8 1 4 3 5 3 4 5 128 0 2 0 1 0 2 1 105 7 1 0 0 3 4 0 3 103 0 5 5 6 98 0 6 6 24 6 78 41 40 1 0 49 47 46 44 40 55 41 54 35 32 17 15 6 4 0 39 1 38 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,433,q),
(64,442,o),
(64,449,qs),
(66,479,o),
(97,488,q),
(86,506,o),
(86,530,qs),
(86,566,o),
(130,614,o),
(165,615,qs),
(192,616,o),
(228,586,o),
(228,562,qs),
(228,551,o),
(223,551,qs),
(222,551,o),
(216,553,q),
(213,555,o),
(211,556,qs),
(189,566,o),
(175,566,qs),
(139,566,o),
(139,529,qs),
(139,513,o),
(159,492,o),
(175,492,qs),
(207,492,ls),
(249,492,o),
(249,455,qs),
(249,449,ls),
(249,442,o),
(240,442,qs),
(120,442,ls),
(100,442,o),
(82,433,qs),
(80,432,o),
(79,432,q),
(74,429,o),
(72,429,qs),
(70,429,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
26 1 1 2 34 1 0 1 56 1 7 4 3 76 0 5 0 4 0 5 4 128 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 6 9 2 4 4 7 98 8 1 7 7 24 7 78 41 40 59 57 55 53 52 50 47 44 40 60 41 60 41 35 51 53 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,0,o),
(99,45,qs),
(46,94,o),
(46,187,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,189,ls),
(161,114,o),
(224,114,qs),
(260,114,l),
(260,0,l),
(227,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 23 77 0 0 0 2 98 3 1 2 2 24 2 78 0 0 0 15 0 14 51 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 251;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
},
{
closed = 1;
nodes = (
(434,-96,o),
(434,-121,qs),
(434,-146,o),
(400,-181,o),
(376,-181,qs),
(351,-181,o),
(317,-146,o),
(317,-121,qs),
(317,-96,o),
(351,-62,o),
(376,-62,qs),
(400,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
33 1 4 0 1 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 98 5 1 4 4 24 4 78 39 38 1 0 45 43 38 49 39 49 36 34 32 29 21 20 13 10 7 4 0 37 1 37 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(210,106,o),
(170,58,qs),
(122,0,o),
(30,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(99,-96,o),
(99,-121,qs),
(99,-146,o),
(65,-181,o),
(40,-181,qs),
(16,-181,o),
(-18,-146,o),
(-18,-121,qs),
(-18,-96,o),
(16,-62,o),
(40,-62,qs),
(65,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 98 5 1 0 0 24 0 78 17 16 1 0 23 21 16 27 17 27 14 12 9 6 0 15 1 15 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
},
{
closed = 1;
nodes = (
(212,-96,o),
(212,-121,qs),
(212,-146,o),
(178,-181,o),
(153,-181,qs),
(129,-181,o),
(95,-146,o),
(95,-121,qs),
(95,-96,o),
(129,-62,o),
(153,-62,qs),
(178,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
16 1 3 0 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 98 4 1 3 3 24 3 78 22 21 1 0 28 26 21 32 22 32 19 17 15 13 12 10 7 4 0 20 1 20 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,514,o),
(116,538,qs),
(116,562,o),
(149,595,o),
(172,595,qs),
(196,595,o),
(228,562,o),
(228,538,qs),
(228,514,o),
(196,481,o),
(172,481,qs),
(149,481,o)
);
},
{
closed = 1;
nodes = (
(245,514,o),
(245,538,qs),
(245,562,o),
(278,595,o),
(301,595,qs),
(324,595,o),
(357,562,o),
(357,538,qs),
(357,514,o),
(324,481,o),
(301,481,qs),
(278,481,o)
);
},
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
43 1 7 4 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
43 1 8 9 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 9 13 3 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 98 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 98 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
49 48 25 24 13 12 1 0 55 53 48 59 49 59 46 44 42 40 34 32 31 28 24 47 25 47 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,407,o),
(261,431,qs),
(261,455,o),
(293,488,o),
(317,488,qs),
(340,488,o),
(373,455,o),
(373,431,qs),
(373,407,o),
(340,374,o),
(317,374,qs),
(293,374,o)
);
},
{
closed = 1;
nodes = (
(389,408,o),
(389,431,qs),
(389,455,o),
(422,488,o),
(446,488,qs),
(469,488,o),
(501,455,o),
(501,431,qs),
(501,408,o),
(469,374,o),
(446,374,qs),
(422,374,o)
);
},
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
57 1 8 4 1 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 98 9 1 8 8 24 8 78 25 24 13 12 1 0 60 58 56 53 45 44 37 34 31 28 24 61 25 61 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,464,o),
(31,488,qs),
(31,512,o),
(64,545,o),
(87,545,qs),
(111,545,o),
(143,512,o),
(143,488,qs),
(143,464,o),
(111,431,o),
(87,431,qs),
(64,431,o)
);
},
{
closed = 1;
nodes = (
(160,464,o),
(160,488,qs),
(160,512,o),
(193,545,o),
(216,545,qs),
(239,545,o),
(272,512,o),
(272,488,qs),
(272,464,o),
(239,431,o),
(216,431,qs),
(193,431,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 6 0 5 6 128 8 2 7 3 0 0 1 97 3 1 1 1 23 77 0 6 6 4 98 9 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 98 9 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
25 24 13 12 1 0 38 36 33 30 24 39 25 39 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,464,o),
(31,488,qs),
(31,512,o),
(64,545,o),
(87,545,qs),
(111,545,o),
(143,512,o),
(143,488,qs),
(143,464,o),
(111,431,o),
(87,431,qs),
(64,431,o)
);
},
{
closed = 1;
nodes = (
(160,464,o),
(160,488,qs),
(160,512,o),
(193,545,o),
(216,545,qs),
(239,545,o),
(272,512,o),
(272,488,qs),
(272,464,o),
(239,431,o),
(216,431,qs),
(193,431,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 7 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 5 0 4 0 5 4 128 10 2 9 3 0 0 1 97 3 1 1 1 23 77 6 11 2 4 4 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 5 0 4 0 5 4 128 3 1 1 10 2 9 3 0 5 1 0 105 6 11 2 4 4 7 98 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
25 24 13 12 1 0 43 41 39 37 36 34 31 28 24 44 25 44 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,523,o),
(329,544,qs),
(329,566,o),
(359,597,o),
(381,597,qs),
(402,597,o),
(432,566,o),
(432,544,qs),
(432,523,o),
(402,492,o),
(381,492,qs),
(359,492,o)
);
},
{
closed = 1;
nodes = (
(261,407,o),
(261,431,qs),
(261,454,o),
(293,487,o),
(316,487,qs),
(339,487,o),
(372,454,o),
(372,431,qs),
(372,407,o),
(339,373,o),
(316,373,qs),
(292,373,o)
);
},
{
closed = 1;
nodes = (
(422,487,o),
(445,487,qs),
(468,487,o),
(501,454,o),
(501,431,qs),
(501,407,o),
(468,373,o),
(445,373,qs),
(421,373,o),
(389,407,o),
(389,431,qs),
(389,454,o)
);
},
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,278,ls),
(589,372,o),
(680,372,qs),
(691,372,ls),
(704,372,o),
(704,360,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
69 1 10 6 1 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 8 14 2 6 6 10 98 11 1 10 10 24 10 78 37 36 13 12 1 0 72 70 68 65 57 56 49 46 43 40 36 73 37 73 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,580,o),
(100,602,qs),
(100,624,o),
(130,654,o),
(151,654,qs),
(172,654,o),
(202,624,o),
(202,602,qs),
(202,581,o),
(172,550,o),
(151,550,qs),
(130,550,o)
);
},
{
closed = 1;
nodes = (
(31,464,o),
(31,488,qs),
(31,512,o),
(63,545,o),
(86,545,qs),
(110,545,o),
(143,512,o),
(143,488,qs),
(143,464,o),
(110,431,o),
(86,431,qs),
(63,431,o)
);
},
{
closed = 1;
nodes = (
(160,464,o),
(160,488,qs),
(160,512,o),
(192,545,o),
(216,545,qs),
(239,545,o),
(271,512,o),
(271,488,qs),
(271,464,o),
(239,431,o),
(216,431,qs),
(192,431,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 11 4 10 3 2 2 3 97 5 1 3 3 23 77 0 8 8 6 98 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 8 8 6 98 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 25 24 13 12 1 0 50 48 45 42 36 51 37 51 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(100,580,o),
(100,602,qs),
(100,624,o),
(130,654,o),
(151,654,qs),
(172,654,o),
(202,624,o),
(202,602,qs),
(202,581,o),
(172,550,o),
(151,550,qs),
(130,550,o)
);
},
{
closed = 1;
nodes = (
(31,464,o),
(31,488,qs),
(31,512,o),
(63,545,o),
(86,545,qs),
(110,545,o),
(143,512,o),
(143,488,qs),
(143,464,o),
(110,431,o),
(86,431,qs),
(63,431,o)
);
},
{
closed = 1;
nodes = (
(192,545,o),
(216,545,qs),
(239,545,o),
(271,512,o),
(271,488,qs),
(271,464,o),
(239,431,o),
(216,431,qs),
(192,431,o),
(160,464,o),
(160,488,qs),
(160,512,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
52 1 9 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 4 12 2 2 2 3 97 5 1 3 3 23 77 8 13 2 6 6 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 8 13 2 6 6 9 98 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 13 12 1 0 55 53 51 49 48 46 43 40 36 56 37 56 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(583,0,l),
(547,0,ls),
(483,0,o),
(447,36,q),
(397,0,o),
(309,0,qs),
(290,0,ls),
(233,0,o),
(199,-29,qs),
(163,-59,o),
(163,-108,qs),
(163,-157,o),
(196,-190,qs),
(233,-228,o),
(297,-228,qs),
(342,-228,o),
(369,-218,q),
(370,-218,o),
(373,-217,qs),
(378,-215,o),
(381,-215,qs),
(390,-215,o),
(390,-226,qs),
(390,-269,o),
(355,-298,qs),
(315,-331,o),
(249,-331,qs),
(167,-331,o),
(108,-274,qs),
(40,-208,o),
(40,-107,qs),
(40,-21,o),
(91,38,qs),
(157,114,o),
(278,114,qs),
(324,114,ls),
(361,114,o),
(384,129,q),
(375,145,o),
(358,189,qs),
(353,202,ls),
(321,282,o),
(250,282,qs),
(212,282,o),
(174,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(113,225,qs),
(102,226,o),
(100,239,qs),
(99,248,o),
(102,260,qs),
(111,316,o),
(156,353,qs),
(201,391,o),
(267,391,qs),
(412,391,o),
(474,219,qs),
(494,162,o),
(510,132,o),
(524,123,qs),
(537,114,o),
(563,114,qs),
(583,114,l)
);
},
{
closed = 1;
nodes = (
(484,-97,o),
(484,-121,qs),
(484,-144,o),
(454,-176,o),
(431,-176,qs),
(409,-176,o),
(377,-144,o),
(377,-121,qs),
(377,-97,o),
(408,-66,o),
(431,-66,qs),
(454,-66,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
26 1 0 2 60 1 8 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 13 1 10 0 11 6 10 11 105 7 1 6 0 5 6 5 101 4 12 2 0 0 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 2 3 0 3 2 0 128 0 6 11 7 11 6 7 128 0 1 0 3 2 1 3 105 13 1 10 0 11 6 10 11 105 0 7 0 5 7 5 101 4 12 2 0 0 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
66 65 1 0 72 70 65 76 66 76 63 61 59 56 50 48 43 42 38 36 30 27 22 20 16 15 8 6 0 64 1 64 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(369,114,l),
(356,131,o),
(331,194,qs),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(390,391,o),
(450,213,qs),
(470,151,o),
(490,130,qs),
(501,117,o),
(519,115,qs),
(532,113,o),
(532,101,qs),
(532,54,o),
(476,0,o),
(427,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(288,-96,o),
(288,-121,qs),
(288,-146,o),
(255,-181,o),
(230,-181,qs),
(206,-181,o),
(172,-146,o),
(172,-121,qs),
(172,-96,o),
(206,-62,o),
(230,-62,qs),
(255,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 8 1 5 0 6 5 6 101 0 4 4 0 95 7 1 0 0 24 0 78 33 32 1 0 39 37 32 43 33 43 30 29 26 24 20 19 12 10 0 31 1 31 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(522,0,ls),
(459,0,o),
(422,36,q),
(393,16,o),
(333,0,o),
(283,0,qs),
(-1,-1,l),
(-1,114,l),
(298,114,ls),
(335,114,o),
(358,129,q),
(350,144,o),
(335,183,qs),
(327,202,ls),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(386,391,o),
(449,219,qs),
(469,162,o),
(484,132,o),
(498,123,qs),
(512,114,o),
(537,114,qs),
(557,114,l)
);
},
{
closed = 1;
nodes = (
(288,-96,o),
(288,-121,qs),
(288,-146,o),
(255,-181,o),
(230,-181,qs),
(206,-181,o),
(172,-146,o),
(172,-121,qs),
(172,-96,o),
(206,-62,o),
(230,-62,qs),
(255,-62,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
26 1 0 2 34 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 10 1 7 0 8 7 8 101 4 9 2 0 0 5 97 6 1 5 5 24 5 78 40 39 1 0 46 44 39 50 40 50 37 35 32 30 29 27 22 20 16 15 8 6 0 38 1 38 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(583,0,l),
(547,0,ls),
(483,0,o),
(447,36,q),
(397,0,o),
(309,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(324,114,ls),
(361,114,o),
(384,129,q),
(375,145,o),
(358,189,qs),
(353,202,ls),
(321,282,o),
(250,282,qs),
(212,282,o),
(174,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(113,225,qs),
(102,226,o),
(100,239,qs),
(99,248,o),
(102,260,qs),
(111,316,o),
(156,353,qs),
(201,391,o),
(267,391,qs),
(412,391,o),
(474,219,qs),
(494,162,o),
(510,132,o),
(524,123,qs),
(537,114,o),
(563,114,qs),
(583,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
26 1 0 2 60 1 7 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 0 6 0 5 6 5 101 4 9 2 0 0 7 97 8 1 7 7 24 7 78 1 0 63 61 59 56 50 48 38 36 30 27 22 20 16 15 8 6 0 64 1 64 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(369,114,l),
(356,131,o),
(331,194,qs),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(390,391,o),
(450,213,qs),
(470,151,o),
(490,130,qs),
(501,117,o),
(519,115,qs),
(532,113,o),
(532,101,qs),
(532,54,o),
(476,0,o),
(427,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 30 29 26 24 20 19 12 10 0 31 1 31 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,0,l),
(522,0,ls),
(459,0,o),
(422,36,q),
(393,16,o),
(333,0,o),
(283,0,qs),
(-1,-1,l),
(-1,114,l),
(298,114,ls),
(335,114,o),
(358,129,q),
(350,144,o),
(335,183,qs),
(327,202,ls),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(386,391,o),
(449,219,qs),
(469,162,o),
(484,132,o),
(498,123,qs),
(512,114,o),
(537,114,qs),
(557,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
26 1 0 2 34 1 5 0 2 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 37 35 32 30 29 27 22 20 16 15 8 6 0 38 1 38 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,484,o),
(203,509,qs),
(203,534,o),
(237,568,o),
(261,568,qs),
(286,568,o),
(319,534,o),
(319,509,qs),
(319,484,o),
(286,449,o),
(261,449,qs),
(237,449,o)
);
},
{
closed = 1;
nodes = (
(583,0,l),
(547,0,ls),
(483,0,o),
(447,36,q),
(397,0,o),
(309,0,qs),
(279,0,ls),
(230,0,o),
(197,-30,qs),
(163,-62,o),
(163,-111,qs),
(163,-156,o),
(192,-186,qs),
(227,-222,o),
(292,-223,qs),
(343,-224,o),
(381,-213,qs),
(406,-207,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-270,o),
(396,-306,qs),
(345,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-16,o),
(97,44,qs),
(163,114,o),
(278,114,qs),
(324,114,ls),
(361,114,o),
(384,129,q),
(375,145,o),
(358,189,qs),
(353,202,ls),
(321,282,o),
(250,282,qs),
(212,282,o),
(174,263,qs),
(152,252,o),
(133,235,qs),
(122,225,o),
(113,225,qs),
(102,226,o),
(100,239,qs),
(99,248,o),
(102,260,qs),
(111,316,o),
(156,353,qs),
(201,391,o),
(267,391,qs),
(412,391,o),
(474,219,qs),
(494,162,o),
(510,132,o),
(524,123,qs),
(537,114,o),
(563,114,qs),
(583,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
38 1 2 4 72 1 9 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 0 8 0 7 8 7 101 11 1 0 0 1 97 0 1 1 23 77 6 12 2 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 4 5 2 5 4 2 128 0 1 11 1 0 3 1 0 105 0 3 0 5 4 3 5 105 0 8 0 7 8 7 101 6 12 2 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 75 73 71 68 62 60 50 48 42 39 34 32 28 27 20 18 12 76 13 76 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,534,o),
(294,509,qs),
(294,484,o),
(260,449,o),
(236,449,qs),
(211,449,o),
(177,484,o),
(177,509,qs),
(177,534,o),
(211,568,o),
(236,568,qs),
(260,568,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(369,114,l),
(356,131,o),
(331,194,qs),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(390,391,o),
(450,213,qs),
(470,151,o),
(490,130,qs),
(501,117,o),
(519,115,qs),
(532,113,o),
(532,101,qs),
(532,54,o),
(476,0,o),
(427,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 6 5 4 6 128 0 3 0 5 4 3 5 105 0 1 1 0 97 7 1 0 0 23 77 0 6 6 2 95 8 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
13 12 1 0 42 41 38 36 32 31 24 22 12 43 13 43 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 573;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,484,o),
(177,509,qs),
(177,534,o),
(211,568,o),
(236,568,qs),
(260,568,o),
(294,534,o),
(294,509,qs),
(294,484,o),
(260,449,o),
(236,449,qs),
(211,449,o)
);
},
{
closed = 1;
nodes = (
(557,0,l),
(522,0,ls),
(459,0,o),
(422,36,q),
(393,16,o),
(333,0,o),
(283,0,qs),
(-1,-1,l),
(-1,114,l),
(298,114,ls),
(335,114,o),
(358,129,q),
(350,144,o),
(335,183,qs),
(327,202,ls),
(296,282,o),
(225,282,qs),
(186,282,o),
(149,263,qs),
(126,252,o),
(107,235,qs),
(97,225,o),
(88,225,qs),
(76,226,o),
(75,239,qs),
(74,248,o),
(76,260,qs),
(86,316,o),
(131,353,qs),
(175,391,o),
(242,391,qs),
(386,391,o),
(449,219,qs),
(469,162,o),
(484,132,o),
(498,123,qs),
(512,114,o),
(537,114,qs),
(557,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
38 1 2 4 46 1 7 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 49 47 44 42 41 39 34 32 28 27 20 18 12 50 13 50 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(477,0,l),
(444,0,ls),
(364,0,o),
(316,43,q),
(267,0,o),
(194,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(283,389,o),
(327,339,qs),
(378,283,o),
(378,188,qs),
(378,187,ls),
(379,114,o),
(441,114,qs),
(477,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 3 1 2 0 1 2 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 39 37 35 32 27 24 20 18 13 12 8 6 0 40 1 40 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,475,o),
(83,500,qs),
(83,525,o),
(117,559,o),
(141,559,qs),
(166,559,o),
(200,525,o),
(200,500,qs),
(200,475,o),
(166,441,o),
(141,441,qs),
(117,441,o)
);
},
{
closed = 1;
nodes = (
(477,0,l),
(431,0,ls),
(361,0,o),
(319,46,q),
(269,0,o),
(194,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(193,114,ls),
(223,114,o),
(261,159,o),
(261,193,qs),
(261,233,o),
(220,282,o),
(185,282,qs),
(156,283,o),
(125,271,qs),
(122,270,o),
(118,268,qs),
(110,264,o),
(106,264,qs),
(88,265,o),
(91,297,qs),
(94,334,o),
(126,361,qs),
(164,391,o),
(213,391,qs),
(282,389,o),
(326,340,qs),
(377,285,o),
(378,191,qs),
(378,184,ls),
(380,114,o),
(441,114,qs),
(477,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 3 5 1 4 2 3 4 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 5 2 5 4 2 128 0 3 0 5 4 3 5 105 9 1 0 0 1 97 0 1 1 23 77 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 51 49 47 44 39 36 32 30 25 24 20 18 12 52 13 52 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 1 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 1 133 3 1 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 102 6 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 29 27 23 21 17 15 13 11 7 4 0 30 1 30 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,465,o),
(118,490,qs),
(118,515,o),
(151,549,o),
(176,549,qs),
(201,549,o),
(234,515,o),
(234,490,qs),
(234,465,o),
(200,431,o),
(176,431,qs),
(152,431,o)
);
},
{
closed = 1;
nodes = (
(331,0,l),
(298,0,ls),
(261,0,o),
(231,9,q),
(227,-92,o),
(188,-149,qs),
(143,-216,o),
(56,-214,qs),
(1,-213,o),
(-40,-179,qs),
(-75,-149,o),
(-81,-105,qs),
(-84,-87,o),
(-66,-87,qs),
(-60,-87,o),
(-49,-91,qs),
(-3,-107,o),
(33,-106,qs),
(77,-104,o),
(117,-49,o),
(117,9,qs),
(117,278,ls),
(117,372,o),
(208,372,qs),
(218,372,ls),
(231,372,o),
(231,360,qs),
(231,187,ls),
(232,114,o),
(295,114,qs),
(331,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
38 1 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 2 0 3 2 128 5 1 4 0 6 4 6 102 8 1 0 0 1 97 0 1 1 23 77 9 1 2 2 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 4 0 6 4 6 102 8 1 0 0 1 97 0 1 1 23 77 9 1 2 2 7 97 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 41 39 35 33 29 27 25 23 19 16 12 42 13 42 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1154,0,l),
(1121,0,ls),
(1050,0,o),
(1003,35,q),
(957,-10,o),
(877,-10,qs),
(799,-10,o),
(756,32,q),
(713,-10,o),
(646,-10,qs),
(603,-10,o),
(564,10,q),
(548,-89,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,233,ls),
(456,327,o),
(547,327,qs),
(557,327,ls),
(570,327,o),
(570,314,qs),
(570,179,ls),
(570,101,o),
(633,101,qs),
(698,101,o),
(698,179,qs),
(698,257,ls),
(698,349,o),
(789,349,qs),
(799,349,ls),
(812,349,o),
(812,338,qs),
(812,179,ls),
(812,101,o),
(876,101,qs),
(940,101,o),
(940,179,qs),
(940,279,ls),
(940,372,o),
(1031,372,qs),
(1042,372,ls),
(1054,372,o),
(1054,360,qs),
(1054,187,ls),
(1055,114,o),
(1118,114,qs),
(1154,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 9 0 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 9 2 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
67 63 59 3 11 2 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 4 2 12 3 0 0 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 12 1 0 0 9 97 11 10 2 9 9 24 77 4 1 2 2 9 98 11 10 2 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 102 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 98 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 106 0 6 0 8 6 8 102 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 70 68 66 64 62 60 56 54 45 44 36 34 29 26 23 21 18 15 12 10 7 4 0 71 1 71 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1143;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(696,372,o),
(696,360,qs),
(696,177,ls),
(696,97,o),
(656,48,qs),
(609,-10,o),
(518,-10,qs),
(442,-10,o),
(397,32,q),
(352,-10,o),
(276,-10,qs),
(193,-10,o),
(148,39,q),
(104,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,234,ls),
(97,327,o),
(188,327,qs),
(198,327,ls),
(212,327,o),
(212,316,qs),
(212,179,ls),
(212,101,o),
(275,101,qs),
(339,101,o),
(339,179,qs),
(339,257,ls),
(339,349,o),
(431,349,qs),
(441,349,ls),
(454,349,o),
(454,338,qs),
(454,179,ls),
(454,101,o),
(517,101,qs),
(581,101,o),
(581,179,qs),
(581,279,ls),
(581,372,o),
(673,372,qs),
(683,372,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
36 32 2 6 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 1 4 133 5 3 2 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 8 7 2 6 6 24 77 3 1 1 1 6 98 8 7 2 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 98 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 102 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 39 37 35 33 31 29 28 26 23 20 17 15 12 9 6 4 0 45 1 44 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(796,0,l),
(762,0,ls),
(692,0,o),
(645,35,q),
(599,-10,o),
(518,-10,qs),
(442,-10,o),
(397,32,q),
(352,-10,o),
(276,-10,qs),
(193,-10,o),
(148,39,q),
(104,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,234,ls),
(97,327,o),
(188,327,qs),
(198,327,ls),
(212,327,o),
(212,316,qs),
(212,179,ls),
(212,101,o),
(275,101,qs),
(339,101,o),
(339,179,qs),
(339,257,ls),
(339,349,o),
(431,349,qs),
(441,349,ls),
(454,349,o),
(454,338,qs),
(454,179,ls),
(454,101,o),
(517,101,qs),
(581,101,o),
(581,179,qs),
(581,279,ls),
(581,372,o),
(673,372,qs),
(683,372,ls),
(696,372,o),
(696,360,qs),
(696,187,ls),
(697,114,o),
(760,114,qs),
(796,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
46 42 38 3 7 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
46 42 38 3 7 2 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 4 2 11 4 0 0 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 9 8 3 7 7 24 77 4 1 2 2 7 98 10 9 8 3 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 1 7 7 24 77 4 1 2 2 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 102 6 11 2 0 0 7 97 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 49 47 45 43 41 39 37 35 34 32 29 26 23 21 18 15 12 10 7 4 0 50 1 50 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(706,558,o),
(706,580,qs),
(706,602,o),
(735,632,o),
(757,632,qs),
(778,632,o),
(808,601,o),
(808,580,qs),
(808,559,o),
(778,528,o),
(757,528,qs),
(735,528,o)
);
},
{
closed = 1;
nodes = (
(637,442,o),
(637,466,qs),
(637,490,o),
(669,523,o),
(692,523,qs),
(715,523,o),
(748,490,o),
(748,466,qs),
(748,442,o),
(715,409,o),
(692,409,qs),
(669,409,o)
);
},
{
closed = 1;
nodes = (
(798,523,o),
(821,523,qs),
(844,523,o),
(877,490,o),
(877,466,qs),
(877,442,o),
(844,409,o),
(821,409,qs),
(798,409,o),
(765,442,o),
(765,466,qs),
(765,490,o)
);
},
{
closed = 1;
nodes = (
(1154,0,l),
(1121,0,ls),
(1050,0,o),
(1003,35,q),
(957,-10,o),
(877,-10,qs),
(799,-10,o),
(756,32,q),
(713,-10,o),
(646,-10,qs),
(603,-10,o),
(564,10,q),
(548,-89,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,233,ls),
(456,327,o),
(547,327,qs),
(557,327,ls),
(570,327,o),
(570,314,qs),
(570,179,ls),
(570,101,o),
(633,101,qs),
(698,101,o),
(698,179,qs),
(698,257,ls),
(698,349,o),
(789,349,qs),
(799,349,ls),
(812,349,o),
(812,338,qs),
(812,179,ls),
(812,101,o),
(876,101,qs),
(940,101,o),
(940,179,qs),
(940,279,ls),
(940,372,o),
(1031,372,qs),
(1042,372,ls),
(1054,372,o),
(1054,360,qs),
(1054,187,ls),
(1055,114,o),
(1118,114,qs),
(1154,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 15 6 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 15 8 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
103 99 95 3 17 8 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 10 8 20 3 6 6 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 83 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 20 1 6 6 15 97 17 16 2 15 15 24 77 10 1 8 8 15 98 17 16 2 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 102 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 98 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 0 1 18 1 0 3 1 0 105 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 106 0 12 0 14 12 14 102 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 106 104 102 100 98 96 92 90 81 80 72 70 65 62 59 57 54 51 48 46 43 40 36 107 37 107 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1143;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,558,o),
(346,580,qs),
(346,602,o),
(376,632,o),
(397,632,qs),
(418,632,o),
(448,601,o),
(448,580,qs),
(448,559,o),
(418,528,o),
(397,528,qs),
(376,528,o)
);
},
{
closed = 1;
nodes = (
(277,442,o),
(277,466,qs),
(277,490,o),
(309,523,o),
(332,523,qs),
(355,523,o),
(388,490,o),
(388,466,qs),
(388,442,o),
(355,409,o),
(332,409,qs),
(309,409,o)
);
},
{
closed = 1;
nodes = (
(438,523,o),
(461,523,qs),
(484,523,o),
(517,490,o),
(517,466,qs),
(517,442,o),
(484,409,o),
(461,409,qs),
(438,409,o),
(405,442,o),
(405,466,qs),
(405,490,o)
);
},
{
closed = 1;
nodes = (
(696,372,o),
(696,360,qs),
(696,177,ls),
(696,97,o),
(656,48,qs),
(609,-10,o),
(518,-10,qs),
(442,-10,o),
(397,32,q),
(352,-10,o),
(276,-10,qs),
(193,-10,o),
(148,39,q),
(104,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,234,ls),
(97,327,o),
(188,327,qs),
(198,327,ls),
(212,327,o),
(212,316,qs),
(212,179,ls),
(212,101,o),
(275,101,qs),
(339,101,o),
(339,179,qs),
(339,257,ls),
(339,349,o),
(431,349,qs),
(441,349,ls),
(454,349,o),
(454,338,qs),
(454,179,ls),
(454,101,o),
(517,101,qs),
(581,101,o),
(581,179,qs),
(581,279,ls),
(581,372,o),
(673,372,qs),
(683,372,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
72 68 2 12 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 7 2 10 7 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 11 9 2 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 14 13 2 12 12 24 77 9 1 7 7 12 98 14 13 2 12 12 24 12 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 98 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 102 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 13 12 1 0 75 73 71 69 67 65 64 62 59 56 53 51 48 45 42 40 36 81 37 80 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,558,o),
(346,580,qs),
(346,602,o),
(376,632,o),
(397,632,qs),
(418,632,o),
(448,601,o),
(448,580,qs),
(448,559,o),
(418,528,o),
(397,528,qs),
(376,528,o)
);
},
{
closed = 1;
nodes = (
(277,442,o),
(277,466,qs),
(277,490,o),
(309,523,o),
(332,523,qs),
(355,523,o),
(388,490,o),
(388,466,qs),
(388,442,o),
(355,409,o),
(332,409,qs),
(309,409,o)
);
},
{
closed = 1;
nodes = (
(438,523,o),
(461,523,qs),
(484,523,o),
(517,490,o),
(517,466,qs),
(517,442,o),
(484,409,o),
(461,409,qs),
(438,409,o),
(405,442,o),
(405,466,qs),
(405,490,o)
);
},
{
closed = 1;
nodes = (
(796,0,l),
(762,0,ls),
(692,0,o),
(645,35,q),
(599,-10,o),
(518,-10,qs),
(442,-10,o),
(397,32,q),
(352,-10,o),
(276,-10,qs),
(193,-10,o),
(148,39,q),
(104,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,234,ls),
(97,327,o),
(188,327,qs),
(198,327,ls),
(212,327,o),
(212,316,qs),
(212,179,ls),
(212,101,o),
(275,101,qs),
(339,101,o),
(339,179,qs),
(339,257,ls),
(339,349,o),
(431,349,qs),
(441,349,ls),
(454,349,o),
(454,338,qs),
(454,179,ls),
(454,101,o),
(517,101,qs),
(581,101,o),
(581,179,qs),
(581,279,ls),
(581,372,o),
(673,372,qs),
(683,372,ls),
(696,372,o),
(696,360,qs),
(696,187,ls),
(697,114,o),
(760,114,qs),
(796,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 8 values pushed */
82 78 74 3 13 6 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 8 values pushed */
82 78 74 3 13 8 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 10 8 19 4 6 6 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 15 14 3 13 13 24 77 10 1 8 8 13 98 16 15 14 3 13 13 24 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 12 19 2 6 6 13 97 16 1 13 13 24 77 10 1 8 8 14 98 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 0 1 17 1 0 3 1 0 105 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 102 12 19 2 6 6 13 97 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 85 83 81 79 77 75 73 71 70 68 65 62 59 57 54 51 48 46 43 40 36 86 37 86 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1289,0,l),
(1256,0,ls),
(1176,0,o),
(1129,43,q),
(1079,0,o),
(1007,0,qs),
(624,0,ls),
(592,0,o),
(564,11,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,189,ls),
(571,114,o),
(633,114,q),
(674,229,o),
(754,302,qs),
(853,391,o),
(982,391,qs),
(1072,391,o),
(1128,339,qs),
(1190,283,o),
(1190,189,qs),
(1190,187,ls),
(1191,114,o),
(1253,114,qs),
(1289,114,l)
);
},
{
closed = 1;
nodes = (
(1033,114,o),
(1073,161,o),
(1072,196,qs),
(1072,236,o),
(1020,282,o),
(976,282,qs),
(911,282,o),
(857,243,qs),
(797,199,o),
(760,114,q),
(1001,114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 7 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 9 0 9 5 0 128 3 1 1 0 9 5 1 9 105 0 4 0 6 4 6 102 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 102 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
58 58 1 0 58 68 58 67 63 61 56 54 52 49 45 43 34 33 25 23 18 15 12 11 8 6 0 57 1 57 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1278;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(770,339,qs),
(831,283,o),
(831,189,qs),
(831,108,o),
(784,57,qs),
(732,0,o),
(648,0,qs),
(265,0,ls),
(198,0,o),
(156,43,q),
(109,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,222,ls),
(97,315,o),
(188,315,qs),
(198,315,ls),
(211,315,o),
(211,303,qs),
(211,189,ls),
(212,114,o),
(275,114,q),
(315,229,o),
(395,302,qs),
(494,391,o),
(623,391,qs),
(713,391,o)
);
},
{
closed = 1;
nodes = (
(673,114,o),
(713,160,o),
(713,196,qs),
(713,236,o),
(661,283,o),
(617,283,qs),
(553,283,o),
(499,244,qs),
(438,200,o),
(401,114,q),
(642,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
20 1 4 1 1 76 0 2 0 6 0 2 6 128 8 1 0 0 6 1 0 6 105 9 7 3 3 1 1 4 98 5 1 4 4 24 4 78 31 31 1 0 31 41 31 40 36 34 24 21 19 17 16 14 11 8 5 4 0 30 1 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 878;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(930,0,l),
(897,0,ls),
(818,0,o),
(770,43,q),
(720,0,o),
(648,0,qs),
(265,0,ls),
(198,0,o),
(156,43,q),
(109,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,222,ls),
(97,315,o),
(188,315,qs),
(198,315,ls),
(211,315,o),
(211,303,qs),
(211,189,ls),
(212,114,o),
(275,114,q),
(315,229,o),
(395,302,qs),
(494,391,o),
(623,391,qs),
(713,391,o),
(770,339,qs),
(831,283,o),
(831,189,qs),
(831,178,ls),
(835,114,o),
(894,114,qs),
(930,114,l)
);
},
{
closed = 1;
nodes = (
(673,114,o),
(713,160,o),
(713,196,qs),
(713,236,o),
(661,283,o),
(617,283,qs),
(553,283,o),
(499,244,qs),
(438,200,o),
(401,114,q),
(642,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
32 27 2 5 0 1 76 0 3 1 8 1 3 8 128 0 1 0 8 0 1 8 105 11 9 4 2 10 5 0 0 5 98 7 6 2 5 5 24 5 78 37 37 1 0 37 47 37 46 42 40 35 33 31 28 26 24 23 21 18 15 12 11 8 6 0 36 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 920;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(886,481,o),
(886,506,qs),
(886,531,o),
(919,566,o),
(944,566,qs),
(969,566,o),
(1002,531,o),
(1002,506,qs),
(1002,481,o),
(968,447,o),
(944,447,qs),
(919,447,o)
);
},
{
closed = 1;
nodes = (
(1289,0,l),
(1256,0,ls),
(1176,0,o),
(1129,43,q),
(1079,0,o),
(1007,0,qs),
(624,0,ls),
(592,0,o),
(564,11,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,189,ls),
(571,114,o),
(633,114,q),
(674,229,o),
(754,302,qs),
(853,391,o),
(982,391,qs),
(1072,391,o),
(1128,339,qs),
(1190,283,o),
(1190,189,qs),
(1190,187,ls),
(1191,114,o),
(1253,114,qs),
(1289,114,l)
);
},
{
closed = 1;
nodes = (
(1033,114,o),
(1073,161,o),
(1072,196,qs),
(1072,236,o),
(1020,282,o),
(976,282,qs),
(911,282,o),
(857,243,qs),
(797,199,o),
(760,114,q),
(1001,114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
65 1 9 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 11 2 11 7 2 128 5 1 3 0 11 7 3 11 105 0 6 0 8 6 8 102 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 3 0 11 7 3 11 105 0 6 0 8 6 8 102 13 1 0 0 1 97 0 1 1 23 77 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 102 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
70 70 13 12 1 0 70 80 70 79 75 73 68 66 64 61 57 55 46 45 37 35 30 27 24 23 20 18 12 69 13 69 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1278;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,481,o),
(527,506,qs),
(527,531,o),
(561,565,o),
(585,565,qs),
(610,565,o),
(643,531,o),
(643,506,qs),
(643,481,o),
(610,446,o),
(585,446,qs),
(561,446,o)
);
},
{
closed = 1;
nodes = (
(769,339,qs),
(831,283,o),
(831,189,qs),
(831,108,o),
(783,57,qs),
(732,0,o),
(648,0,qs),
(265,0,ls),
(197,0,o),
(156,43,q),
(109,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,222,ls),
(97,315,o),
(188,315,qs),
(198,315,ls),
(211,315,o),
(211,303,qs),
(211,187,l),
(211,186,l),
(212,187,l),
(212,165,o),
(239,136,o),
(276,118,q),
(317,231,o),
(397,303,qs),
(495,391,o),
(623,391,qs),
(713,391,o)
);
},
{
closed = 1;
nodes = (
(673,114,o),
(713,160,o),
(713,196,qs),
(713,236,o),
(661,283,o),
(617,283,qs),
(553,283,o),
(499,244,qs),
(438,200,o),
(401,114,q),
(642,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
16 1 4 7 35 1 5 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 7 2 3 7 128 10 1 2 0 7 4 2 7 105 9 1 0 0 1 97 0 1 1 23 77 11 8 2 4 4 5 98 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 3 2 7 2 3 7 128 0 1 9 1 0 2 1 0 105 10 1 2 0 7 4 2 7 105 11 8 2 4 4 5 98 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
46 46 13 12 1 0 46 56 46 55 51 49 39 36 34 32 31 29 26 23 12 45 13 45 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 877;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,481,o),
(527,506,qs),
(527,531,o),
(561,565,o),
(585,565,qs),
(610,565,o),
(643,531,o),
(643,506,qs),
(643,481,o),
(610,446,o),
(585,446,qs),
(561,446,o)
);
},
{
closed = 1;
nodes = (
(930,0,l),
(897,0,ls),
(818,0,o),
(770,43,q),
(720,0,o),
(648,0,qs),
(265,0,ls),
(198,0,o),
(156,43,q),
(109,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,222,ls),
(97,315,o),
(188,315,qs),
(198,315,ls),
(211,315,o),
(211,303,qs),
(211,189,ls),
(212,114,o),
(275,114,q),
(315,229,o),
(395,302,qs),
(494,391,o),
(623,391,qs),
(713,391,o),
(770,339,qs),
(831,283,o),
(831,189,qs),
(831,178,ls),
(835,114,o),
(894,114,qs),
(930,114,l)
);
},
{
closed = 1;
nodes = (
(673,114,o),
(713,160,o),
(713,196,qs),
(713,236,o),
(661,283,o),
(617,283,qs),
(553,283,o),
(499,244,qs),
(438,200,o),
(401,114,q),
(642,114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
44 39 2 7 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 5 3 10 3 5 10 128 0 3 0 10 2 3 10 105 12 1 0 0 1 97 0 1 1 23 77 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 5 3 10 3 5 10 128 0 1 12 1 0 3 1 0 105 0 3 0 10 2 3 10 105 14 11 6 4 13 5 2 2 7 98 9 8 2 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
49 49 13 12 1 0 49 59 49 58 54 52 47 45 43 40 38 36 35 33 30 27 24 23 20 18 12 48 13 48 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 920;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(787,0,l),
(754,0,ls),
(675,0,o),
(627,43,q),
(577,0,o),
(505,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(143,114,l),
(143,462,ls),
(143,556,o),
(235,556,qs),
(245,556,ls),
(258,556,o),
(258,543,qs),
(258,302,l),
(354,391,o),
(481,391,qs),
(570,391,o),
(626,339,qs),
(688,283,o),
(688,189,qs),
(688,187,ls),
(689,114,o),
(751,114,qs),
(787,114,l)
);
},
{
closed = 1;
nodes = (
(530,114,o),
(571,160,o),
(571,196,qs),
(570,236,o),
(518,282,o),
(473,282,qs),
(410,282,o),
(356,243,qs),
(295,199,o),
(258,114,q),
(499,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
9 1 6 1 27 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 32 32 1 0 32 42 32 41 37 35 30 28 26 23 18 16 14 11 8 6 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,339,qs),
(641,283,o),
(641,189,qs),
(641,108,o),
(594,57,qs),
(542,0,o),
(458,0,qs),
(-1,0,l),
(-1,114,l),
(97,114,l),
(97,462,ls),
(97,531,o),
(145,549,qs),
(163,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,302,l),
(308,391,o),
(434,391,qs),
(524,391,o)
);
},
{
closed = 1;
nodes = (
(484,114,o),
(524,160,o),
(524,196,qs),
(524,236,o),
(472,282,o),
(427,282,qs),
(363,282,o),
(309,243,qs),
(249,199,o),
(211,114,q),
(452,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
2 1 4 0 1 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 96 0 3 3 24 3 78 22 22 1 0 22 32 22 31 27 25 15 13 12 11 7 4 0 21 1 21 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(741,0,l),
(707,0,ls),
(628,0,o),
(580,43,q),
(530,0,o),
(458,0,qs),
(-1,0,l),
(-1,114,l),
(97,114,l),
(97,462,ls),
(97,531,o),
(145,549,qs),
(163,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,302,l),
(308,391,o),
(434,391,qs),
(524,391,o),
(580,339,qs),
(641,283,o),
(641,189,qs),
(641,187,ls),
(642,114,o),
(705,114,qs),
(741,114,l)
);
},
{
closed = 1;
nodes = (
(484,114,o),
(524,160,o),
(524,196,qs),
(524,236,o),
(472,282,o),
(427,282,qs),
(363,282,o),
(309,243,qs),
(249,199,o),
(211,114,q),
(452,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
9 1 6 1 23 1 4 0 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 98 5 1 4 4 24 4 78 28 28 1 0 28 38 28 37 33 31 26 24 22 20 19 18 14 11 8 6 0 27 1 27 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,482,o),
(384,507,qs),
(384,532,o),
(418,566,o),
(442,566,qs),
(467,566,o),
(501,532,o),
(501,507,qs),
(501,482,o),
(467,447,o),
(442,447,qs),
(418,447,o)
);
},
{
closed = 1;
nodes = (
(787,0,l),
(754,0,ls),
(675,0,o),
(627,43,q),
(577,0,o),
(505,0,qs),
(56,0,ls),
(42,0,o),
(34,8,o),
(34,20,qs),
(34,31,ls),
(34,69,o),
(87,114,o),
(131,114,qs),
(143,114,l),
(143,462,ls),
(143,556,o),
(235,556,qs),
(245,556,ls),
(258,556,o),
(258,543,qs),
(258,302,l),
(354,391,o),
(481,391,qs),
(570,391,o),
(626,339,qs),
(688,283,o),
(688,189,qs),
(688,187,ls),
(689,114,o),
(751,114,qs),
(787,114,l)
);
},
{
closed = 1;
nodes = (
(530,114,o),
(571,160,o),
(571,196,qs),
(570,236,o),
(518,282,o),
(473,282,qs),
(410,282,o),
(356,243,qs),
(295,199,o),
(258,114,q),
(499,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 8 3 39 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 8 2 3 8 105 10 1 0 0 1 97 4 1 1 1 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 8 2 3 8 105 0 4 4 23 77 10 1 0 0 1 97 0 1 1 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 0 4 4 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
44 44 13 12 1 0 44 54 44 53 49 47 42 40 38 35 30 28 26 23 20 18 12 43 13 43 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,482,o),
(340,507,qs),
(340,532,o),
(374,566,o),
(398,566,qs),
(423,566,o),
(457,532,o),
(457,507,qs),
(457,482,o),
(423,447,o),
(398,447,qs),
(374,447,o)
);
},
{
closed = 1;
nodes = (
(580,339,qs),
(641,283,o),
(641,189,qs),
(641,108,o),
(594,57,qs),
(542,0,o),
(458,0,qs),
(-1,0,l),
(-1,114,l),
(97,114,l),
(97,462,ls),
(97,531,o),
(145,549,qs),
(163,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,302,l),
(308,391,o),
(434,391,qs),
(524,391,o)
);
},
{
closed = 1;
nodes = (
(484,114,o),
(524,160,o),
(524,196,qs),
(524,236,o),
(472,282,o),
(427,282,qs),
(363,282,o),
(309,243,qs),
(249,199,o),
(211,114,q),
(452,114,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 6 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
9 1 2 0 6 4 2 6 105 8 1 0 0 1 97 3 1 1 1 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 2 0 6 4 2 6 105 0 3 3 23 77 8 1 0 0 1 97 0 1 1 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 2 1 0 105 9 1 2 0 6 4 2 6 105 0 3 3 23 77 10 7 2 4 4 5 96 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
34 34 13 12 1 0 34 44 34 43 39 37 27 25 24 23 19 16 12 33 13 33 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(340,482,o),
(340,507,qs),
(340,532,o),
(374,566,o),
(398,566,qs),
(423,566,o),
(457,532,o),
(457,507,qs),
(457,482,o),
(423,447,o),
(398,447,qs),
(374,447,o)
);
},
{
closed = 1;
nodes = (
(741,0,l),
(707,0,ls),
(628,0,o),
(580,43,q),
(530,0,o),
(458,0,qs),
(-1,0,l),
(-1,114,l),
(97,114,l),
(97,462,ls),
(97,531,o),
(145,549,qs),
(163,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,302,l),
(308,391,o),
(434,391,qs),
(524,391,o),
(580,339,qs),
(641,283,o),
(641,189,qs),
(641,187,ls),
(642,114,o),
(705,114,qs),
(741,114,l)
);
},
{
closed = 1;
nodes = (
(484,114,o),
(524,160,o),
(524,196,qs),
(524,236,o),
(472,282,o),
(427,282,qs),
(363,282,o),
(309,243,qs),
(249,199,o),
(211,114,q),
(452,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
21 1 8 3 35 1 6 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 8 2 3 8 105 10 1 0 0 1 97 4 1 1 1 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 3 0 8 2 3 8 105 0 4 4 23 77 10 1 0 0 1 97 0 1 1 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 10 1 0 3 1 0 105 0 3 0 8 2 3 8 105 0 4 4 23 77 12 9 5 11 4 2 2 6 98 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
40 40 13 12 1 0 40 50 40 49 45 43 38 36 34 32 31 30 26 23 20 18 12 39 13 39 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,-68,o),
(163,-111,qs),
(164,-156,o),
(193,-186,qs),
(227,-222,o),
(292,-223,qs),
(341,-223,o),
(373,-216,qs),
(401,-209,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-269,o),
(399,-304,qs),
(347,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-38,o),
(73,14,qs),
(111,74,o),
(184,98,q),
(112,194,ls),
(93,221,o),
(93,256,qs),
(92,309,o),
(152,348,qs),
(217,391,o),
(305,391,qs),
(380,391,o),
(442,358,qs),
(518,317,o),
(517,256,qs),
(517,219,o),
(498,194,qs),
(438,114,l),
(608,114,l),
(608,0,l),
(383,0,ls),
(334,0,o),
(306,21,q),
(288,3,o),
(260,-1,qs),
(216,-7,o)
);
},
{
closed = 1;
nodes = (
(228,257,o),
(228,237,qs),
(228,227,o),
(238,214,qs),
(301,130,ls),
(305,124,o),
(309,130,qs),
(372,214,l),
(382,225,o),
(382,237,qs),
(382,257,o),
(339,282,o),
(305,282,qs),
(271,282,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
21 2 2 0 1 1 76 0 2 6 1 5 1 2 5 105 0 4 0 3 4 3 101 0 1 1 0 95 0 0 0 24 0 78 49 48 48 61 49 61 42 45 38 17 35 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(424,114,o),
(477,68,o),
(477,30,qs),
(477,20,ls),
(477,8,o),
(469,0,o),
(455,0,qs),
(-1,0,l),
(-1,114,l),
(109,114,l),
(88,154,o),
(87,198,qs),
(87,275,o),
(136,329,qs),
(192,391,o),
(280,391,qs),
(339,391,o),
(379,363,qs),
(424,332,o),
(424,281,qs),
(423,252,o),
(406,251,qs),
(400,251,o),
(390,257,qs),
(344,282,o),
(298,282,qs),
(256,283,o),
(204,236,o),
(204,197,qs),
(204,161,o),
(248,114,o),
(282,114,qs),
(380,114,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 26 24 23 22 17 15 11 9 7 5 0 32 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(165,114,l),
(105,194,ls),
(86,220,o),
(86,256,qs),
(85,309,o),
(145,348,qs),
(210,391,o),
(298,391,qs),
(373,391,o),
(435,358,qs),
(511,317,o),
(510,256,qs),
(509,219,o),
(491,194,qs),
(431,114,l),
(601,114,l),
(601,0,l),
(376,0,ls),
(327,0,o),
(298,21,q),
(268,0,o),
(219,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(298,124,o),
(302,130,qs),
(365,214,ls),
(375,227,o),
(375,237,qs),
(375,257,o),
(331,282,o),
(298,282,qs),
(264,282,o),
(221,257,o),
(221,237,qs),
(221,225,o),
(231,214,q),
(293,130,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
2 1 0 2 1 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 30 28 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,484,o),
(242,508,qs),
(242,533,o),
(275,568,o),
(300,568,qs),
(325,568,o),
(358,534,o),
(358,508,qs),
(358,483,o),
(325,449,o),
(300,449,qs),
(276,449,o)
);
},
{
closed = 1;
nodes = (
(162,-68,o),
(163,-111,qs),
(164,-156,o),
(193,-186,qs),
(227,-222,o),
(292,-223,qs),
(341,-223,o),
(373,-216,qs),
(401,-209,o),
(439,-190,qs),
(454,-183,o),
(459,-184,qs),
(471,-186,o),
(469,-203,qs),
(464,-269,o),
(399,-304,qs),
(347,-331,o),
(274,-331,qs),
(177,-331,o),
(112,-274,qs),
(40,-211,o),
(40,-107,qs),
(40,-38,o),
(73,14,qs),
(111,74,o),
(184,98,q),
(112,194,ls),
(93,221,o),
(93,256,qs),
(92,309,o),
(152,348,qs),
(217,391,o),
(305,391,qs),
(380,391,o),
(442,358,qs),
(518,317,o),
(517,256,qs),
(517,219,o),
(498,194,qs),
(438,114,l),
(608,114,l),
(608,0,l),
(383,0,ls),
(334,0,o),
(306,21,q),
(288,3,o),
(260,-1,qs),
(216,-7,o)
);
},
{
closed = 1;
nodes = (
(228,257,o),
(228,237,qs),
(228,227,o),
(238,214,qs),
(301,130,ls),
(305,124,o),
(309,130,qs),
(372,214,l),
(382,225,o),
(382,237,qs),
(382,257,o),
(339,282,o),
(305,282,qs),
(271,282,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
33 14 2 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 9 1 7 3 4 7 105 0 6 0 5 6 5 101 8 1 0 0 1 97 0 1 1 23 77 0 3 3 2 95 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 1 8 1 0 4 1 0 105 0 4 9 1 7 3 4 7 105 0 6 0 5 6 5 101 0 3 3 2 95 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
61 60 1 0 60 73 61 73 54 52 42 40 27 25 19 18 17 15 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,484,o),
(207,509,qs),
(207,534,o),
(241,568,o),
(266,568,qs),
(290,568,o),
(324,534,o),
(324,509,qs),
(324,484,o),
(290,449,o),
(266,449,qs),
(241,449,o)
);
},
{
closed = 1;
nodes = (
(424,114,o),
(477,68,o),
(477,30,qs),
(477,20,ls),
(477,8,o),
(469,0,o),
(455,0,qs),
(-1,0,l),
(-1,114,l),
(109,114,l),
(88,154,o),
(87,198,qs),
(87,275,o),
(136,329,qs),
(192,391,o),
(280,391,qs),
(339,391,o),
(379,363,qs),
(424,332,o),
(424,281,qs),
(423,252,o),
(406,251,qs),
(400,251,o),
(390,257,qs),
(344,282,o),
(298,282,qs),
(256,283,o),
(204,236,o),
(204,197,qs),
(204,161,o),
(248,114,o),
(282,114,qs),
(380,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 8 1 0 0 1 97 0 1 1 23 77 6 9 2 2 2 7 95 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 38 36 35 34 29 27 23 21 19 17 12 44 13 43 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,534,o),
(351,508,qs),
(351,483,o),
(317,449,o),
(293,449,qs),
(269,449,o),
(235,484,o),
(235,508,qs),
(235,533,o),
(268,568,o),
(293,568,qs),
(318,568,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(165,114,l),
(105,194,ls),
(86,220,o),
(86,256,qs),
(85,309,o),
(145,348,qs),
(210,391,o),
(298,391,qs),
(373,391,o),
(435,358,qs),
(511,317,o),
(510,256,qs),
(509,219,o),
(491,194,qs),
(431,114,l),
(601,114,l),
(601,0,l),
(376,0,ls),
(327,0,o),
(298,21,q),
(268,0,o),
(219,0,qs),
(-1,0,l)
);
},
{
closed = 1;
nodes = (
(298,124,o),
(302,130,qs),
(365,214,ls),
(375,227,o),
(375,237,qs),
(375,257,o),
(331,282,o),
(298,282,qs),
(264,282,o),
(221,257,o),
(221,237,qs),
(221,225,o),
(231,214,q),
(293,130,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
14 1 2 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 0 7 4 5 7 105 0 1 1 0 97 8 1 0 0 23 77 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
13 12 1 0 42 40 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 591;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,484,o),
(574,508,qs),
(574,533,o),
(608,568,o),
(632,568,qs),
(657,568,o),
(691,534,o),
(691,508,qs),
(691,483,o),
(657,449,o),
(632,449,qs),
(608,449,o)
);
},
{
closed = 1;
nodes = (
(913,0,l),
(721,0,ls),
(661,0,o),
(633,22,q),
(606,0,o),
(545,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,q),
(145,308,o),
(147,309,q),
(155,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(477,114,l),
(449,152,o),
(449,208,qs),
(449,276,o),
(493,327,qs),
(546,391,o),
(633,391,qs),
(709,391,o),
(761,341,qs),
(818,287,o),
(818,208,qs),
(818,152,o),
(790,114,q),
(913,114,l)
);
},
{
closed = 1;
nodes = (
(700,181,o),
(699,209,qs),
(698,241,o),
(662,282,o),
(633,282,qs),
(605,282,o),
(568,241,o),
(568,209,qs),
(567,181,o),
(604,131,o),
(633,120,q),
(662,131,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
48 1 5 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 2 8 2 4 8 128 0 2 0 8 3 2 8 105 9 1 0 0 1 97 0 1 1 23 77 10 7 2 3 3 5 96 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 8 2 4 8 128 0 1 9 1 0 2 1 0 105 0 2 0 8 3 2 8 105 10 7 2 3 3 5 96 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
12 12 1 0 60 58 12 52 12 52 51 49 47 44 34 33 26 24 19 17 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 903;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,484,o),
(211,509,qs),
(211,534,o),
(245,568,o),
(270,568,qs),
(294,568,o),
(328,534,o),
(328,509,qs),
(328,484,o),
(294,449,o),
(270,449,qs),
(245,449,o)
);
},
{
closed = 1;
nodes = (
(391,345,qs),
(451,290,o),
(451,195,qs),
(451,113,o),
(405,60,qs),
(354,1,o),
(271,0,qs),
(-1,0,l),
(-1,114,l),
(105,114,l),
(86,148,o),
(85,195,qs),
(85,277,o),
(131,331,qs),
(183,391,o),
(268,391,qs),
(341,391,o)
);
},
{
closed = 1;
nodes = (
(333,162,o),
(333,198,qs),
(333,234,o),
(296,282,o),
(268,282,qs),
(240,282,o),
(202,234,o),
(202,198,qs),
(202,163,o),
(240,114,o),
(268,114,qs),
(296,114,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 2 0 6 3 2 6 105 7 1 0 0 1 97 0 1 1 23 77 9 5 2 3 3 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 2 1 0 105 8 1 2 0 6 3 2 6 105 9 5 2 3 3 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
30 29 13 12 1 0 36 34 29 40 30 40 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,484,o),
(210,508,qs),
(210,533,o),
(244,568,o),
(268,568,qs),
(293,568,o),
(327,534,o),
(327,508,qs),
(327,483,o),
(293,449,o),
(268,449,qs),
(244,449,o)
);
},
{
closed = 1;
nodes = (
(549,0,l),
(357,0,ls),
(297,0,o),
(269,22,q),
(242,0,o),
(181,0,qs),
(1,0,l),
(1,114,l),
(113,114,l),
(85,152,o),
(85,208,qs),
(85,276,o),
(129,327,qs),
(182,391,o),
(269,391,qs),
(345,391,o),
(397,341,qs),
(454,287,o),
(454,208,qs),
(454,152,o),
(426,114,q),
(549,114,l)
);
},
{
closed = 1;
nodes = (
(336,181,o),
(335,209,qs),
(334,241,o),
(298,282,o),
(269,282,qs),
(241,282,o),
(204,241,o),
(204,209,qs),
(203,181,o),
(240,131,o),
(269,120,q),
(298,131,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
29 1 4 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 0 7 3 2 7 105 8 1 0 0 1 97 0 1 1 23 77 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
12 12 1 0 41 39 12 33 12 33 32 30 28 26 25 24 19 17 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,478,o),
(337,502,qs),
(337,526,o),
(370,559,o),
(393,559,qs),
(417,559,o),
(449,526,o),
(449,502,qs),
(449,478,o),
(417,445,o),
(393,445,qs),
(370,445,o)
);
},
{
closed = 1;
nodes = (
(466,478,o),
(466,502,qs),
(466,525,o),
(499,559,o),
(522,559,qs),
(545,559,o),
(578,526,o),
(578,502,qs),
(578,478,o),
(545,445,o),
(522,445,qs),
(499,445,o)
);
},
{
closed = 1;
nodes = (
(198,-53,qs),
(248,-106,o),
(341,-106,qs),
(476,-106,o),
(513,0,q),
(457,0,ls),
(384,0,o),
(333,47,qs),
(273,101,o),
(273,187,qs),
(273,276,o),
(320,331,qs),
(371,391,o),
(457,391,qs),
(577,391,o),
(619,281,qs),
(644,220,o),
(642,114,q),
(739,114,l),
(739,0,l),
(631,0,l),
(606,-97,o),
(540,-152,qs),
(464,-215,o),
(341,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(111,223,o),
(167,245,qs),
(178,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o)
);
},
{
closed = 1;
nodes = (
(523,116,o),
(524,120,q),
(524,127,o),
(524,131,qs),
(526,206,o),
(514,238,qs),
(497,282,o),
(457,282,qs),
(427,282,o),
(391,233,o),
(391,193,qs),
(391,160,o),
(429,114,o),
(457,114,qs),
(523,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
78 1 7 4 1 76 0 4 12 7 12 4 7 128 0 8 0 12 4 8 12 105 0 10 0 5 10 5 101 14 2 13 3 0 0 1 97 3 1 1 1 23 77 15 11 2 7 7 6 97 9 1 6 6 24 6 78 67 66 13 12 1 0 73 71 66 80 67 80 63 61 60 58 52 50 47 46 45 44 41 39 30 29 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 726;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,478,o),
(148,502,qs),
(148,526,o),
(180,559,o),
(204,559,qs),
(228,559,o),
(260,526,o),
(260,502,qs),
(260,478,o),
(227,445,o),
(204,445,qs),
(181,445,o)
);
},
{
closed = 1;
nodes = (
(277,478,o),
(277,502,qs),
(277,525,o),
(310,559,o),
(333,559,qs),
(356,559,o),
(388,526,o),
(388,502,qs),
(388,478,o),
(356,445,o),
(333,445,qs),
(310,445,o)
);
},
{
closed = 1;
nodes = (
(391,345,qs),
(451,290,o),
(451,195,qs),
(451,113,o),
(405,60,qs),
(354,1,o),
(271,0,qs),
(-1,0,l),
(-1,114,l),
(105,114,l),
(86,148,o),
(85,195,qs),
(85,277,o),
(131,331,qs),
(183,391,o),
(268,391,qs),
(341,391,o)
);
},
{
closed = 1;
nodes = (
(333,162,o),
(333,198,qs),
(333,234,o),
(296,282,o),
(268,282,qs),
(240,282,o),
(202,234,o),
(202,198,qs),
(202,163,o),
(240,114,o),
(268,114,qs),
(296,114,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
11 1 4 0 8 5 4 8 105 10 2 9 3 0 0 1 97 3 1 1 1 23 77 12 7 2 5 5 6 95 0 6 6 24 6 78 42 41 25 24 13 12 1 0 48 46 41 52 42 52 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 497;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,478,o),
(149,502,qs),
(149,526,o),
(181,559,o),
(205,559,qs),
(228,559,o),
(261,526,o),
(261,502,qs),
(261,478,o),
(228,445,o),
(205,445,qs),
(181,445,o)
);
},
{
closed = 1;
nodes = (
(278,478,o),
(278,502,qs),
(278,525,o),
(310,559,o),
(334,559,qs),
(357,559,o),
(389,526,o),
(389,502,qs),
(389,478,o),
(357,445,o),
(334,445,qs),
(311,445,o)
);
},
{
closed = 1;
nodes = (
(549,0,l),
(357,0,ls),
(297,0,o),
(269,22,q),
(242,0,o),
(181,0,qs),
(1,0,l),
(1,114,l),
(113,114,l),
(85,152,o),
(85,208,qs),
(85,276,o),
(129,327,qs),
(182,391,o),
(269,391,qs),
(345,391,o),
(397,341,qs),
(454,287,o),
(454,208,qs),
(454,152,o),
(426,114,q),
(549,114,l)
);
},
{
closed = 1;
nodes = (
(336,181,o),
(335,209,qs),
(334,241,o),
(298,282,o),
(269,282,qs),
(241,282,o),
(204,241,o),
(204,209,qs),
(203,181,o),
(240,131,o),
(269,120,q),
(298,131,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
41 1 6 5 1 76 0 4 0 9 5 4 9 105 11 2 10 3 0 0 1 97 3 1 1 1 23 77 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 53 51 24 45 24 45 44 42 40 38 37 36 31 29 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 539;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(803,0,l),
(770,0,ls),
(694,0,o),
(646,40,q),
(598,0,o),
(523,0,qs),
(227,0,ls),
(150,0,o),
(99,38,qs),
(40,82,o),
(40,159,qs),
(40,209,o),
(97,291,o),
(144,308,qs),
(153,311,o),
(159,311,qs),
(174,311,o),
(174,297,qs),
(174,289,o),
(168,279,qs),
(139,236,o),
(139,199,qs),
(139,159,o),
(188,114,o),
(233,114,qs),
(526,114,ls),
(589,114,o),
(589,189,qs),
(589,462,ls),
(589,556,o),
(680,556,qs),
(691,556,ls),
(704,556,o),
(704,544,qs),
(704,187,ls),
(705,114,o),
(767,114,qs),
(803,114,l)
);
},
{
closed = 1;
nodes = (
(272,267,q),
(267,288,o),
(287,319,o),
(309,326,q),
(293,348,o),
(293,372,qs),
(293,411,o),
(344,464,o),
(382,464,qs),
(414,465,o),
(456,434,o),
(456,410,qs),
(456,394,o),
(448,394,qs),
(445,394,o),
(437,399,q),
(434,400,o),
(433,401,q),
(415,410,o),
(394,410,qs),
(351,410,o),
(351,372,qs),
(351,354,o),
(377,331,o),
(397,331,qs),
(432,331,ls),
(478,331,o),
(478,290,qs),
(478,285,ls),
(478,275,o),
(468,275,qs),
(333,275,ls),
(306,275,o),
(289,267,qs),
(281,263,o),
(278,263,qs),
(274,263,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
70 1 3 7 38 1 0 6 33 1 4 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
70 1 3 8 38 1 0 6 33 1 4 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
70 1 3 7 38 1 0 6 33 1 4 0 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 7 6 7 3 6 128 0 10 9 1 8 7 10 8 105 0 7 0 6 0 7 6 103 0 1 1 23 77 2 11 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 9 1 8 3 10 8 105 7 1 3 0 6 0 3 6 103 0 1 1 23 77 2 11 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 7 6 7 3 6 128 0 10 9 1 8 7 10 8 105 0 7 0 6 0 7 6 103 0 1 1 23 77 2 11 2 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 9 8 7 8 9 7 128 0 3 7 6 7 3 6 128 0 10 0 8 9 10 8 105 0 7 0 6 0 7 6 103 0 1 1 23 77 2 11 2 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 66 64 61 59 55 53 50 47 44 41 36 34 32 29 21 20 13 10 7 4 0 37 1 37 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 793;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,373,o),
(461,330,qs),
(523,277,o),
(523,182,qs),
(523,104,o),
(475,54,qs),
(423,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(367,265,o),
(337,265,qs),
(150,265,ls),
(78,265,o),
(80,322,qs),
(80,344,ls),
(81,387,o),
(111,404,q),
(345,552,ls),
(352,557,o),
(356,554,qs),
(363,549,o),
(372,536,qs),
(388,512,o),
(371,460,o),
(342,442,qs),
(233,373,l),
(339,373,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 3 0 0 1 3 0 103 0 1 1 2 95 0 2 2 24 2 78 0 0 0 32 0 31 33 36 61 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 569;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,0,l),
(589,0,ls),
(510,0,o),
(462,42,q),
(413,0,o),
(341,0,qs),
(-1,0,l),
(-1,114,l),
(338,114,ls),
(370,114,o),
(405,154,o),
(405,189,qs),
(405,223,o),
(367,265,o),
(337,265,qs),
(150,265,ls),
(78,265,o),
(80,322,qs),
(80,344,ls),
(81,387,o),
(111,404,q),
(345,552,ls),
(352,557,o),
(356,554,qs),
(363,549,o),
(372,536,qs),
(388,512,o),
(371,460,o),
(342,442,qs),
(233,373,l),
(339,373,ls),
(410,373,o),
(460,331,qs),
(520,281,o),
(523,188,qs),
(523,187,ls),
(524,114,o),
(586,114,qs),
(622,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
34 1 4 0 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 37 35 33 31 30 28 24 21 8 6 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 612;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,0,l),
(636,0,ls),
(598,0,o),
(565,11,q),
(549,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,462,ls),
(456,556,o),
(547,556,qs),
(557,556,ls),
(570,556,o),
(570,543,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 3 1 0 1 3 0 128 0 2 0 4 2 4 102 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 40 38 34 32 23 22 14 12 7 4 0 41 1 41 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 23 77 0 2 2 0 98 3 1 0 0 24 0 78 1 0 14 12 9 6 0 15 1 15 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,462,ls),
(97,556,o),
(188,556,qs),
(198,556,ls),
(211,556,o),
(211,543,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 1 3 0 1 76 0 1 1 23 77 2 5 2 0 0 3 98 4 1 3 3 24 3 78 1 0 19 17 15 13 12 10 7 4 0 20 1 20 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,0,l),
(630,0,ls),
(559,0,o),
(511,36,q),
(464,-10,o),
(383,-10,qs),
(304,-10,o),
(222,32,q),
(204,32,ls),
(147,30,o),
(147,-40,qs),
(147,-196,ls),
(147,-288,o),
(55,-288,qs),
(45,-288,ls),
(32,-288,o),
(32,-277,qs),
(32,-38,ls),
(32,118,o),
(163,142,q),
(170,151,o),
(182,177,qs),
(190,193,o),
(194,201,qs),
(248,314,o),
(325,391,o),
(384,391,qs),
(472,391,o),
(520,325,qs),
(563,266,o),
(564,181,qs),
(568,114,o),
(627,114,qs),
(663,114,l)
);
},
{
closed = 1;
nodes = (
(445,181,qs),
(445,282,o),
(390,282,qs),
(372,282,o),
(337,233,o),
(308,167,qs),
(295,141,o),
(286,127,q),
(342,99,o),
(388,101,qs),
(445,104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
36 1 0 7 29 1 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
36 1 0 7 29 1 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 3 0 4 0 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 6 8 3 0 0 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 3 6 4 6 3 4 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 4 97 5 1 4 4 24 77 9 1 6 6 4 97 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 8 1 0 0 5 97 0 5 5 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 6 5 6 3 5 128 0 2 4 2 134 0 1 0 7 0 1 7 105 9 1 6 0 4 2 6 4 105 8 1 0 0 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
35 34 1 0 42 40 34 44 35 44 32 30 28 26 25 23 20 17 7 5 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 653;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,324,qs),
(473,265,o),
(473,179,qs),
(473,96,o),
(432,47,qs),
(384,-10,o),
(292,-10,qs),
(211,-10,o),
(131,32,q),
(89,-1,o),
(16,-1,qs),
(-1,-1,l),
(-1,114,l),
(13,114,ls),
(46,114,o),
(76,143,o),
(103,201,qs),
(158,314,o),
(235,391,o),
(294,391,qs),
(382,391,o)
);
},
{
closed = 1;
nodes = (
(355,181,qs),
(355,282,o),
(300,282,qs),
(282,282,o),
(246,232,o),
(217,167,qs),
(205,141,o),
(196,127,q),
(251,99,o),
(298,101,qs),
(355,104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 5 11 1 2 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
23 1 1 5 11 1 2 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
6 1 0 0 5 1 0 5 105 7 4 2 1 1 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 3 1 2 2 24 77 7 1 4 4 2 97 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 5 1 0 5 105 7 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
22 21 1 0 29 27 21 31 22 31 14 12 10 8 7 5 0 20 1 20 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 520;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,0,l),
(540,0,ls),
(468,0,o),
(421,36,q),
(374,-10,o),
(292,-10,qs),
(211,-10,o),
(131,32,q),
(89,-1,o),
(16,-1,qs),
(-1,-1,l),
(-1,114,l),
(13,114,ls),
(46,114,o),
(76,143,o),
(103,201,qs),
(158,314,o),
(235,391,o),
(294,391,qs),
(381,391,o),
(430,325,qs),
(473,266,o),
(473,181,q),
(478,114,o),
(537,114,qs),
(573,114,l)
);
},
{
closed = 1;
nodes = (
(355,181,qs),
(355,282,o),
(300,282,qs),
(282,282,o),
(246,232,o),
(217,167,qs),
(205,141,o),
(196,127,q),
(251,99,o),
(298,101,qs),
(355,104,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
28 2 2 0 7 21 17 2 3 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
28 2 2 0 7 21 17 2 3 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 1 0 7 0 1 7 105 9 6 2 8 4 0 0 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 4 2 3 3 24 77 9 1 6 6 3 97 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
27 26 1 0 34 32 26 36 27 36 24 22 20 18 16 14 13 11 7 5 0 25 1 25 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(239,368,o),
(239,393,qs),
(239,418,o),
(273,453,o),
(298,453,qs),
(323,453,o),
(356,419,o),
(356,393,qs),
(356,368,o),
(322,334,o),
(298,334,qs),
(273,334,o)
);
},
{
closed = 1;
nodes = (
(669,0,l),
(623,0,ls),
(593,0,o),
(564,10,q),
(548,-88,o),
(486,-147,qs),
(415,-214,o),
(303,-214,qs),
(195,-214,o),
(123,-150,qs),
(40,-75,o),
(41,48,qs),
(41,114,o),
(72,165,qs),
(108,222,o),
(168,242,q),
(178,244,o),
(183,244,qs),
(200,244,o),
(200,231,qs),
(200,225,o),
(194,218,q),
(151,150,o),
(150,71,qs),
(150,-7,o),
(187,-54,qs),
(229,-106,o),
(303,-106,qs),
(368,-106,o),
(408,-66,qs),
(456,-19,o),
(456,72,qs),
(456,278,ls),
(456,372,o),
(547,372,qs),
(557,372,ls),
(570,372,o),
(570,359,qs),
(570,187,ls),
(571,114,o),
(633,114,qs),
(669,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 102 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 52 50 46 44 35 34 26 24 19 16 12 53 13 53 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(211,515,o),
(211,490,qs),
(211,465,o),
(177,431,o),
(153,431,qs),
(129,431,o),
(95,465,o),
(95,490,qs),
(95,515,o),
(128,549,o),
(153,549,qs),
(178,549,o)
);
},
{
closed = 1;
nodes = (
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(211,106,o),
(170,58,qs),
(122,0,o),
(31,0,qs),
(-1,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 3 1 4 1 3 4 128 0 1 1 0 97 5 1 0 0 23 77 0 4 4 2 98 6 1 2 2 24 2 78 13 12 1 0 26 24 21 18 12 27 13 27 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,465,o),
(95,490,qs),
(95,515,o),
(128,549,o),
(153,549,qs),
(178,549,o),
(211,515,o),
(211,490,qs),
(211,465,o),
(177,431,o),
(153,431,qs),
(129,431,o)
);
},
{
closed = 1;
nodes = (
(311,0,l),
(277,0,ls),
(201,0,o),
(153,40,q),
(106,0,o),
(31,0,qs),
(-1,0,l),
(-1,114,l),
(33,114,ls),
(97,114,o),
(97,189,qs),
(97,278,ls),
(97,372,o),
(188,372,qs),
(198,372,ls),
(211,372,o),
(211,360,qs),
(211,187,ls),
(212,114,o),
(275,114,qs),
(311,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
28 1 5 2 1 76 0 3 0 2 0 3 2 128 7 1 0 0 1 97 0 1 1 23 77 4 8 2 2 2 5 98 6 1 5 5 24 5 78 13 12 1 0 31 29 27 25 24 22 19 16 12 32 13 32 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,0,l),
(470,0,ls),
(395,0,o),
(350,38,q),
(299,-10,o),
(226,-10,qs),
(153,-10,o),
(102,36,qs),
(41,90,o),
(41,184,qs),
(41,263,o),
(88,315,qs),
(140,373,o),
(224,373,qs),
(290,373,l),
(300,444,o),
(380,444,qs),
(390,444,ls),
(404,444,o),
(404,432,qs),
(404,189,ls),
(404,114,o),
(467,114,qs),
(503,114,l)
);
},
{
closed = 1;
nodes = (
(289,148,o),
(289,179,qs),
(289,187,l),
(289,265,l),
(230,265,ls),
(198,265,o),
(159,221,o),
(159,184,qs),
(159,148,o),
(196,104,o),
(226,104,qs),
(253,105,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
19 1 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
19 1 4 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 5 7 3 0 0 3 98 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 98 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 98 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
25 24 1 0 31 29 24 35 25 35 22 20 18 16 10 8 7 4 0 23 1 23 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 493;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,342,qs),
(647,289,o),
(647,192,qs),
(647,112,o),
(602,60,qs),
(551,0,o),
(465,0,qs),
(337,0,ls),
(283,0,o),
(257,19,q),
(231,0,o),
(177,0,qs),
(-1,0,l),
(-1,114,l),
(126,114,l),
(94,155,o),
(94,206,qs),
(94,265,o),
(125,308,q),
(59,330,o),
(57,403,qs),
(57,409,ls),
(57,424,o),
(73,419,qs),
(110,408,o),
(160,402,qs),
(204,395,o),
(265,394,qs),
(372,391,o),
(421,390,qs),
(520,388,o)
);
},
{
closed = 1;
nodes = (
(196,244,o),
(196,212,qs),
(196,179,o),
(229,133,o),
(257,126,q),
(285,133,o),
(317,179,o),
(317,212,qs),
(317,244,o),
(283,286,o),
(257,286,qs),
(231,286,o)
);
},
{
closed = 1;
nodes = (
(495,114,o),
(531,158,o),
(531,195,qs),
(531,279,o),
(415,285,qs),
(406,285,o),
(402,286,q),
(420,250,o),
(420,206,qs),
(420,156,o),
(387,114,q),
(464,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
11 1 4 0 37 1 1 4 20 1 2 1 3 76 47 1 4 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
11 1 4 0 37 1 1 5 20 1 2 1 3 76 47 1 4 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
7 1 0 5 8 2 4 1 0 4 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
8 1 4 0 5 5 4 114 7 1 0 0 5 1 0 5 105 9 6 2 1 1 2 95 3 1 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
43 43 32 31 3 0 43 54 43 53 50 49 31 42 32 42 24 21 19 17 16 15 0 30 3 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 693;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(746,0,l),
(713,0,ls),
(633,0,o),
(586,43,q),
(536,0,o),
(465,0,qs),
(337,0,ls),
(283,0,o),
(257,19,q),
(231,0,o),
(177,0,qs),
(-1,0,l),
(-1,114,l),
(126,114,l),
(94,155,o),
(94,206,qs),
(94,265,o),
(125,308,q),
(59,330,o),
(57,403,qs),
(57,409,ls),
(57,424,o),
(73,419,qs),
(110,408,o),
(160,402,qs),
(204,395,o),
(265,394,qs),
(372,391,o),
(421,390,qs),
(520,388,o),
(579,342,qs),
(647,289,o),
(647,192,qs),
(647,181,ls),
(652,114,o),
(710,114,qs),
(746,114,l)
);
},
{
closed = 1;
nodes = (
(196,244,o),
(196,212,qs),
(196,179,o),
(229,133,o),
(257,126,q),
(285,133,o),
(317,179,o),
(317,212,qs),
(317,244,o),
(283,286,o),
(257,286,qs),
(231,286,o)
);
},
{
closed = 1;
nodes = (
(495,114,o),
(531,158,o),
(531,195,qs),
(531,279,o),
(415,285,qs),
(406,285,o),
(402,286,q),
(420,250,o),
(420,206,qs),
(420,156,o),
(387,114,q),
(464,114,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
18 1 6 1 43 2 2 0 6 32 27 2 3 0 3 76 53 1 6 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
18 1 6 1 43 2 2 0 7 32 27 2 3 0 3 76 53 1 6 1 75 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 1 7 10 2 6 0 1 6 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
10 1 6 1 7 7 6 114 0 1 0 7 0 1 7 105 11 8 2 9 4 0 0 3 95 5 4 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
49 49 38 37 1 0 49 60 49 59 56 55 37 48 38 48 35 33 31 28 26 24 23 22 10 6 0 36 1 36 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 736;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(506,0,l),
(403,0,l),
(394,-66,o),
(370,-113,qs),
(347,-161,o),
(262,-215,o),
(211,-214,qs),
(139,-213,o),
(96,-173,qs),
(68,-147,o),
(59,-106,qs),
(55,-87,o),
(74,-87,qs),
(80,-87,o),
(92,-91,qs),
(143,-107,o),
(188,-106,qs),
(230,-105,o),
(283,-49,o),
(290,0,q),
(223,0,ls),
(151,0,o),
(99,47,qs),
(40,101,o),
(40,187,qs),
(40,276,o),
(87,331,qs),
(138,391,o),
(223,391,qs),
(342,391,o),
(386,281,qs),
(406,231,o),
(409,151,qs),
(410,132,o),
(409,114,q),
(506,114,l)
);
},
{
closed = 1;
nodes = (
(295,201,o),
(281,238,qs),
(264,282,o),
(223,282,qs),
(194,282,o),
(158,233,o),
(158,193,qs),
(158,160,o),
(196,114,o),
(223,114,qs),
(290,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 8 6 0 8 105 3 1 2 0 4 2 4 101 10 7 9 3 6 6 1 95 5 1 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 3 1 2 1 3 2 128 0 0 0 8 6 0 8 105 0 2 0 4 2 4 101 10 7 9 3 6 6 1 95 5 1 1 1 24 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
37 36 0 0 43 41 36 46 37 46 0 35 0 35 20 36 34 34 38 37 11 7 28 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(653,7,l),
(633,4,l),
(619,-81,o),
(553,-140,qs),
(471,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(653,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
37 1 1 0 1 76 0 3 0 3 133 0 2 0 4 2 4 101 5 1 0 0 1 95 0 1 1 24 1 78 1 0 33 31 21 20 12 10 8 6 0 38 1 38 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(653,7,l),
(633,4,l),
(619,-81,o),
(553,-140,qs),
(471,-214,o),
(339,-214,qs),
(209,-214,o),
(127,-141,qs),
(40,-64,o),
(43,51,qs),
(44,113,o),
(76,165,qs),
(112,222,o),
(168,245,q),
(169,245,l),
(179,249,o),
(183,249,qs),
(197,249,o),
(197,234,qs),
(197,229,o),
(191,218,qs),
(152,154,o),
(153,71,qs),
(154,-7,o),
(198,-53,qs),
(248,-106,o),
(339,-106,qs),
(404,-106,o),
(494,-50,o),
(512,0,q),
(405,0,ls),
(391,0,o),
(383,7,o),
(383,20,qs),
(383,31,ls),
(383,68,o),
(436,114,o),
(480,114,qs),
(653,114,l)
);
},
{
closed = 1;
nodes = (
(330,-297,o),
(330,-321,qs),
(330,-345,o),
(297,-378,o),
(274,-378,qs),
(250,-378,o),
(218,-345,o),
(218,-321,qs),
(218,-297,o),
(250,-264,o),
(274,-264,qs),
(297,-264,o)
);
},
{
closed = 1;
nodes = (
(458,-297,o),
(458,-321,qs),
(458,-345,o),
(426,-378,o),
(403,-378,qs),
(380,-378,o),
(347,-345,o),
(347,-321,qs),
(347,-297,o),
(379,-264,o),
(403,-264,qs),
(426,-264,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
37 1 1 0 1 76 0 3 0 3 133 0 2 0 4 5 2 4 105 11 7 10 3 5 8 1 6 5 6 101 9 1 0 0 1 95 0 1 1 24 1 78 52 51 40 39 1 0 58 56 51 62 52 62 46 44 39 50 40 50 33 31 21 20 12 10 8 6 0 38 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(210,106,o),
(170,58,qs),
(122,0,o),
(30,0,qs),
(-2,0,l)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(57,-178,o),
(33,-178,qs),
(10,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(10,-64,o),
(33,-64,qs),
(57,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(162,-178,qs),
(139,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(139,-64,o),
(162,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 101 0 2 2 0 98 7 1 0 0 24 0 78 29 28 17 16 1 0 35 33 28 39 29 39 23 21 16 27 17 27 14 12 9 6 0 15 1 15 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 265;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,0,l),
(276,0,ls),
(200,0,o),
(153,40,q),
(106,0,o),
(30,0,qs),
(-2,0,l),
(-2,114,l),
(33,114,ls),
(96,114,o),
(96,189,qs),
(96,278,ls),
(96,372,o),
(187,372,qs),
(198,372,ls),
(210,372,o),
(210,360,qs),
(210,187,ls),
(211,114,o),
(274,114,qs),
(310,114,l)
);
},
{
closed = 1;
nodes = (
(89,-98,o),
(89,-122,qs),
(89,-145,o),
(57,-178,o),
(33,-178,qs),
(10,-178,o),
(-23,-145,o),
(-23,-122,qs),
(-23,-98,o),
(10,-64,o),
(33,-64,qs),
(57,-64,o)
);
},
{
closed = 1;
nodes = (
(218,-98,o),
(218,-122,qs),
(218,-145,o),
(185,-178,o),
(162,-178,qs),
(139,-178,o),
(106,-145,o),
(106,-122,qs),
(106,-98,o),
(139,-64,o),
(162,-64,qs),
(185,-64,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
16 1 3 0 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 98 4 1 3 3 24 3 78 34 33 22 21 1 0 40 38 33 44 34 44 28 26 21 32 22 32 19 17 15 13 12 10 7 4 0 20 1 20 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,527,qs),
(45,525,o),
(43,523,q),
(38,515,o),
(35,514,qs),
(31,513,o),
(29,517,qs),
(17,538,o),
(23,559,qs),
(31,590,o),
(67,588,qs),
(82,588,o),
(115,575,qs),
(156,558,o),
(166,558,qs),
(180,558,o),
(191,574,qs),
(192,575,o),
(194,577,q),
(199,585,o),
(202,586,qs),
(206,587,o),
(208,583,qs),
(219,563,o),
(214,541,qs),
(207,510,o),
(170,512,qs),
(155,512,o),
(122,526,qs),
(81,543,o),
(71,543,qs),
(57,543,o)
);
},
{
closed = 1;
nodes = (
(47,0,o),
(38,8,o),
(38,21,qs),
(38,31,ls),
(38,68,o),
(89,114,o),
(130,114,qs),
(156,114,l),
(85,332,ls),
(55,422,o),
(150,449,q),
(157,452,l),
(167,454,o),
(171,444,qs),
(279,114,l),
(286,114,ls),
(311,114,o),
(341,155,o),
(341,189,qs),
(341,462,ls),
(341,556,o),
(432,556,qs),
(442,556,ls),
(455,556,o),
(455,543,qs),
(455,187,ls),
(455,106,o),
(414,58,qs),
(366,0,o),
(275,0,qs),
(61,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
10 1 2 3 26 1 1 0 2 76 0 3 8 1 0 1 3 0 105 0 1 1 2 97 5 1 2 2 23 77 7 1 6 6 4 96 9 1 4 4 24 4 78 33 32 1 0 56 54 47 45 41 38 32 62 33 61 21 19 17 15 5 3 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,527,qs),
(45,525,o),
(43,523,q),
(38,515,o),
(35,514,qs),
(31,513,o),
(29,517,qs),
(17,538,o),
(23,559,qs),
(31,590,o),
(67,588,qs),
(82,588,o),
(115,575,qs),
(156,558,o),
(166,558,qs),
(180,558,o),
(191,574,qs),
(192,575,o),
(194,577,q),
(199,585,o),
(202,586,qs),
(206,587,o),
(208,583,qs),
(219,563,o),
(214,541,qs),
(207,510,o),
(170,512,qs),
(155,512,o),
(122,526,qs),
(81,543,o),
(71,543,qs),
(57,543,o)
);
},
{
closed = 1;
nodes = (
(555,0,l),
(521,0,ls),
(445,0,o),
(397,40,q),
(350,0,o),
(275,0,qs),
(61,0,ls),
(47,0,o),
(38,8,o),
(38,21,qs),
(38,31,ls),
(38,68,o),
(89,114,o),
(130,114,qs),
(156,114,l),
(85,332,ls),
(55,422,o),
(150,449,q),
(157,452,l),
(167,454,o),
(171,444,qs),
(279,114,l),
(286,114,ls),
(311,114,o),
(341,155,o),
(341,189,qs),
(341,462,ls),
(341,556,o),
(432,556,qs),
(442,556,ls),
(455,556,o),
(455,543,qs),
(455,187,ls),
(456,114,o),
(518,114,qs),
(555,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
10 1 2 3 26 1 1 0 63 1 8 4 3 76 0 3 10 1 0 1 3 0 105 0 1 1 2 97 5 1 2 2 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 33 32 1 0 66 64 62 59 54 52 45 43 39 36 32 67 33 67 21 19 17 15 5 3 0 31 1 31 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,517,o),
(40,509,q),
(38,507,o),
(37,507,q),
(32,504,o),
(30,504,qs),
(28,504,o),
(25,509,q),
(22,518,o),
(22,525,qs),
(24,554,o),
(55,564,q),
(44,582,o),
(44,606,qs),
(44,642,o),
(88,690,o),
(123,691,qs),
(150,691,o),
(186,661,o),
(186,638,qs),
(186,626,o),
(181,626,qs),
(180,626,o),
(174,629,qs),
(171,630,o),
(169,631,qs),
(147,641,o),
(133,641,qs),
(97,641,o),
(97,605,qs),
(97,588,o),
(117,568,o),
(133,568,qs),
(165,568,ls),
(207,568,o),
(207,531,qs),
(207,525,ls),
(207,517,o),
(198,517,qs),
(78,517,ls)
);
},
{
closed = 1;
nodes = (
(451,556,o),
(451,543,qs),
(451,187,ls),
(451,106,o),
(410,58,qs),
(362,0,o),
(270,0,qs),
(57,0,ls),
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(428,556,qs),
(438,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
19 1 1 2 27 1 0 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
19 1 1 2 27 1 4 1 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 3 0 2 1 3 2 105 8 1 0 0 1 97 9 4 2 1 1 23 77 6 1 5 5 7 96 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 2 1 3 2 105 9 1 4 4 23 77 8 1 0 0 1 97 0 1 1 23 77 6 1 5 5 7 96 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 0 1 8 1 0 5 1 0 103 9 1 4 4 23 77 6 1 5 5 7 96 0 7 7 24 7 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
41 40 1 0 64 61 56 54 47 45 40 70 41 69 23 21 12 10 7 4 0 39 1 38 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,517,o),
(40,509,q),
(38,507,o),
(37,507,q),
(32,504,o),
(30,504,qs),
(28,504,o),
(25,509,q),
(22,518,o),
(22,525,qs),
(24,554,o),
(55,564,q),
(44,582,o),
(44,606,qs),
(44,642,o),
(88,690,o),
(123,691,qs),
(150,691,o),
(186,661,o),
(186,638,qs),
(186,626,o),
(181,626,qs),
(180,626,o),
(174,629,qs),
(171,630,o),
(169,631,qs),
(147,641,o),
(133,641,qs),
(97,641,o),
(97,605,qs),
(97,588,o),
(117,568,o),
(133,568,qs),
(165,568,ls),
(207,568,o),
(207,531,qs),
(207,525,ls),
(207,517,o),
(198,517,qs),
(78,517,ls)
);
},
{
closed = 1;
nodes = (
(550,0,l),
(517,0,ls),
(441,0,o),
(393,40,q),
(346,0,o),
(270,0,qs),
(57,0,ls),
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(428,556,qs),
(438,556,ls),
(451,556,o),
(451,543,qs),
(451,187,ls),
(452,114,o),
(514,114,qs),
(550,114,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
19 1 1 2 27 1 0 1 71 1 8 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
19 1 1 2 27 1 5 1 71 1 8 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 0 2 1 3 2 105 10 1 0 0 1 97 5 1 1 1 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 3 0 2 1 3 2 105 0 5 5 23 77 10 1 0 0 1 97 0 1 1 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 3 0 2 1 3 2 105 0 1 10 1 0 4 1 0 103 0 5 5 23 77 7 6 11 3 4 4 8 98 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
41 40 1 0 74 72 70 67 62 60 53 51 47 44 40 75 41 75 23 21 12 10 7 4 0 39 1 38 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(451,556,o),
(451,543,qs),
(451,187,ls),
(451,106,o),
(410,58,qs),
(362,0,o),
(270,0,qs),
(57,0,ls),
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(427,556,qs),
(438,556,ls)
);
},
{
closed = 1;
nodes = (
(320,-182,o),
(320,-219,qs),
(320,-225,ls),
(320,-233,o),
(311,-233,qs),
(191,-233,ls),
(171,-233,o),
(153,-241,q),
(151,-243,o),
(150,-243,q),
(145,-246,o),
(143,-246,qs),
(141,-246,o),
(138,-241,q),
(135,-232,o),
(135,-225,qs),
(137,-196,o),
(168,-186,q),
(157,-168,o),
(157,-144,qs),
(157,-108,o),
(201,-60,o),
(236,-59,qs),
(263,-59,o),
(300,-89,o),
(300,-112,qs),
(300,-124,o),
(295,-124,qs),
(293,-124,o),
(287,-121,qs),
(284,-120,o),
(282,-119,qs),
(260,-109,o),
(246,-109,qs),
(210,-109,o),
(210,-145,qs),
(210,-162,o),
(230,-182,o),
(246,-182,qs),
(278,-182,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
52 1 8 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 6 1 5 4 7 5 105 10 1 4 0 8 4 8 99 9 1 0 0 23 77 2 1 1 1 3 96 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 10 1 4 0 8 4 8 99 9 1 0 0 23 77 2 1 1 1 3 96 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
32 31 1 0 66 63 48 46 43 41 37 35 31 70 32 69 24 21 16 14 7 5 0 30 1 29 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,0,l),
(517,0,ls),
(441,0,o),
(393,40,q),
(346,0,o),
(270,0,qs),
(57,0,ls),
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(427,556,qs),
(438,556,ls),
(451,556,o),
(451,543,qs),
(451,187,ls),
(451,114,o),
(514,114,qs),
(550,114,l)
);
},
{
closed = 1;
nodes = (
(320,-182,o),
(320,-219,qs),
(320,-225,ls),
(320,-233,o),
(311,-233,qs),
(191,-233,ls),
(171,-233,o),
(153,-241,q),
(151,-243,o),
(150,-243,q),
(145,-246,o),
(143,-246,qs),
(141,-246,o),
(138,-241,q),
(135,-232,o),
(135,-225,qs),
(137,-196,o),
(168,-186,q),
(157,-168,o),
(157,-144,qs),
(157,-108,o),
(201,-60,o),
(236,-59,qs),
(263,-59,o),
(300,-89,o),
(300,-112,qs),
(300,-124,o),
(295,-124,qs),
(293,-124,o),
(287,-121,qs),
(284,-120,o),
(282,-119,qs),
(260,-109,o),
(246,-109,qs),
(210,-109,o),
(210,-145,qs),
(210,-162,o),
(230,-182,o),
(246,-182,qs),
(278,-182,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
31 1 4 0 57 1 10 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 9 8 1 7 6 9 7 105 12 1 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 98 5 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 8 7 6 7 8 6 128 0 9 0 7 8 9 7 105 12 1 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 98 5 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
37 36 1 0 71 68 53 51 48 46 42 40 36 75 37 74 34 32 30 27 22 20 13 11 7 4 0 35 1 35 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(427,556,qs),
(438,556,ls),
(451,556,o),
(451,543,qs),
(451,187,ls),
(451,106,o),
(410,58,qs),
(362,0,o),
(270,0,qs),
(57,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 1 1 23 77 3 1 2 2 0 96 4 1 0 0 24 0 78 1 0 24 22 15 13 9 6 0 30 1 29 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 505;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,0,l),
(517,0,ls),
(441,0,o),
(393,40,q),
(346,0,o),
(270,0,qs),
(57,0,ls),
(43,0,o),
(34,8,o),
(34,21,qs),
(34,31,ls),
(34,68,o),
(85,114,o),
(126,114,qs),
(151,114,l),
(80,332,ls),
(50,422,o),
(145,449,qs),
(153,452,l),
(163,454,o),
(166,444,qs),
(275,114,l),
(282,114,ls),
(306,114,o),
(336,155,o),
(336,189,qs),
(336,462,ls),
(336,556,o),
(427,556,qs),
(438,556,ls),
(451,556,o),
(451,543,qs),
(451,187,ls),
(451,114,o),
(514,114,qs),
(550,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
31 1 4 0 1 76 0 1 1 23 77 3 2 6 3 0 0 4 98 5 1 4 4 24 4 78 1 0 34 32 30 27 22 20 13 11 7 4 0 35 1 35 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,13,qs),
(46,364,ls),
(46,451,o),
(86,500,qs),
(131,556,o),
(220,556,qs),
(323,556,ls),
(334,556,o),
(334,543,qs),
(334,534,ls),
(334,449,o),
(248,449,qs),
(228,449,ls),
(191,449,o),
(160,414,o),
(160,372,qs),
(161,13,ls),
(161,0,o),
(148,0,qs),
(59,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,13,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,13,ls),
(161,0,o),
(148,0,qs),
(59,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,251,o),
(244,244,qs),
(244,237,o),
(239,232,qs),
(151,143,ls),
(146,138,o),
(139,138,qs),
(132,138,o),
(127,143,qs),
(38,232,ls),
(33,237,o),
(33,244,qs),
(33,251,o),
(38,256,qs),
(127,343,l),
(132,349,o),
(139,349,qs),
(146,349,o),
(151,344,qs),
(239,256,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(244,251,o),
(244,244,qs),
(244,237,o),
(239,232,qs),
(151,143,l),
(147,138,o),
(139,138,qs),
(131,138,o),
(126,143,qs),
(38,232,ls),
(33,237,o),
(33,244,qs),
(33,252,o),
(38,257,qs),
(127,343,l),
(131,349,o),
(139,349,qs),
(147,349,o),
(151,344,q),
(239,257,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 40 33 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 287;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,13,qs),
(46,462,ls),
(46,556,o),
(138,556,qs),
(148,556,ls),
(161,556,o),
(161,543,qs),
(161,13,ls),
(161,0,o),
(148,0,qs),
(59,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 4 0 11 1 10 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,o),
(46,13,qs),
(46,364,ls),
(46,451,o),
(86,500,qs),
(131,556,o),
(220,556,qs),
(323,556,ls),
(334,556,o),
(334,543,qs),
(334,534,ls),
(334,449,o),
(248,449,qs),
(228,449,ls),
(191,449,o),
(160,414,o),
(160,372,qs),
(161,13,ls),
(161,0,o),
(148,0,qs),
(59,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 8 5 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 375;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,0,o),
(17,24,qs),
(81,404,ls),
(109,564,o),
(231,564,qs),
(353,564,o),
(380,404,qs),
(445,24,ls),
(448,0,o),
(428,0,qs),
(352,0,ls),
(333,0,o),
(330,22,qs),
(264,418,ls),
(258,452,o),
(231,452,qs),
(204,452,o),
(197,418,qs),
(132,22,ls),
(128,0,o),
(110,0,qs),
(33,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,334,qs),
(384,286,o),
(353,255,qs),
(315,219,o),
(255,219,qs),
(202,220,o),
(160,242,q),
(160,19,ls),
(160,0,o),
(141,0,qs),
(65,0,ls),
(46,0,o),
(46,19,qs),
(46,462,ls),
(46,531,o),
(94,549,qs),
(113,556,o),
(138,556,qs),
(147,556,ls),
(160,556,o),
(160,543,qs),
(160,528,l),
(204,565,o),
(255,565,qs),
(299,565,o),
(331,537,qs),
(367,505,o),
(366,459,qs),
(365,437,o),
(351,437,qs),
(347,437,o),
(339,439,q),
(335,441,o),
(333,441,qs),
(329,442,o),
(323,444,qs),
(279,458,o),
(253,458,qs),
(219,457,o),
(164,419,o),
(161,393,q),
(160,392,o),
(160,388,qs),
(161,360,o),
(220,321,o),
(261,321,qs),
(302,320,o),
(347,341,qs),
(368,350,o),
(378,351,qs),
(393,351,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 1 43 1 6 0 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 3 7 1 7 2 43 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
28 1 1 4 7 1 7 2 43 1 6 0 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
8 1 7 1 0 1 7 0 128 0 0 0 6 5 0 6 105 2 1 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 7 1 2 7 128 8 1 7 0 1 7 0 126 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 50 0 50 35 53 51 36 38 38 35 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 431;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,159,qs),
(49,171,o),
(65,375,qs),
(72,461,o),
(112,509,qs),
(158,564,o),
(242,564,qs),
(316,564,o),
(361,522,qs),
(412,473,o),
(420,375,qs),
(437,172,o),
(437,159,qs),
(445,-10,o),
(317,-10,qs),
(275,-10,o),
(245,20,qs),
(243,22,o),
(240,20,q),
(212,-10,o),
(168,-10,qs),
(40,-10,o)
);
},
{
closed = 1;
nodes = (
(231,141,qs),
(233,156,o),
(243,156,qs),
(253,156,o),
(254,141,qs),
(258,103,o),
(287,103,qs),
(322,103,o),
(320,160,qs),
(317,220,o),
(305,366,qs),
(297,457,o),
(242,458,qs),
(188,457,o),
(180,366,qs),
(165,191,o),
(165,160,qs),
(163,103,o),
(197,103,qs),
(226,103,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
36 1 3 6 2 1 0 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
23 22 1 0 39 37 35 33 29 27 22 41 23 41 15 13 7 5 0 21 1 21 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 476;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,256,o),
(371,237,qs),
(276,188,o),
(183,97,o),
(141,11,qs),
(135,0,o),
(124,0,qs),
(32,0,ls),
(19,0,o),
(22,13,qs),
(51,133,o),
(143,220,q),
(97,242,o),
(46,330,o),
(46,387,qs),
(46,462,o),
(89,511,qs),
(137,564,o),
(216,564,qs),
(264,564,o),
(299,537,qs),
(339,505,o),
(338,459,qs),
(337,437,o),
(323,437,qs),
(315,437,o),
(305,441,qs),
(263,457,o),
(234,457,qs),
(201,456,o),
(161,413,o),
(161,378,qs),
(161,348,o),
(199,301,o),
(232,291,q),
(306,341,o),
(393,367,qs),
(407,371,o),
(415,353,qs),
(429,322,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
27 4 2 3 0 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
27 4 2 3 1 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
1 1 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
57 36 34 41 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,151,qs),
(20,450,ls),
(12,496,o),
(56,556,o),
(97,556,qs),
(104,556,ls),
(118,556,o),
(121,537,qs),
(188,137,ls),
(194,103,o),
(221,103,qs),
(248,103,o),
(254,137,qs),
(320,537,ls),
(324,556,o),
(338,556,qs),
(345,556,ls),
(383,556,o),
(405,529,qs),
(430,499,o),
(422,450,qs),
(371,151,ls),
(343,-9,o),
(221,-9,qs),
(99,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 0 2 2 0 98 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
0 2 4 1 0 2 0 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 14 12 9 6 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(12,0,o),
(17,24,qs),
(81,404,ls),
(109,564,o),
(231,564,qs),
(353,564,o),
(380,404,qs),
(445,24,ls),
(448,0,o),
(428,0,qs),
(352,0,ls),
(333,0,o),
(330,22,qs),
(264,418,ls),
(258,452,o),
(231,452,qs),
(204,452,o),
(197,418,qs),
(132,22,ls),
(128,0,o),
(110,0,qs),
(33,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 17 15 12 9 6 4 0 21 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 460;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,519,qs),
(403,464,o),
(403,367,qs),
(403,13,ls),
(403,0,o),
(391,0,qs),
(301,0,ls),
(288,0,o),
(288,13,qs),
(288,177,l),
(223,177,ls),
(150,177,o),
(100,221,qs),
(40,274,o),
(40,367,qs),
(40,452,o),
(87,505,qs),
(139,564,o),
(223,564,qs),
(296,564,o)
);
},
{
closed = 1;
nodes = (
(157,408,o),
(157,367,qs),
(157,331,o),
(195,284,o),
(223,284,qs),
(288,284,l),
(288,367,ls),
(288,409,o),
(253,457,o),
(223,457,qs),
(192,457,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,556,o),
(628,544,qs),
(628,436,ls),
(628,354,o),
(587,303,qs),
(540,244,o),
(454,244,qs),
(384,244,o),
(338,289,q),
(294,244,o),
(223,244,qs),
(191,244,o),
(162,254,q),
(162,13,ls),
(162,0,o),
(149,0,qs),
(59,0,ls),
(47,0,o),
(47,13,qs),
(46,463,ls),
(46,556,o),
(137,556,qs),
(147,556,ls),
(160,556,o),
(160,544,qs),
(160,441,ls),
(160,358,o),
(224,358,qs),
(288,358,o),
(288,441,qs),
(288,468,ls),
(288,509,o),
(328,556,o),
(364,556,qs),
(374,556,ls),
(387,556,o),
(387,544,qs),
(387,441,ls),
(387,358,o),
(450,358,qs),
(514,358,o),
(514,438,qs),
(514,463,ls),
(514,556,o),
(605,556,qs),
(615,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,519,qs),
(403,464,o),
(403,367,qs),
(403,13,ls),
(403,0,o),
(391,0,qs),
(301,0,ls),
(288,0,o),
(288,13,qs),
(288,177,l),
(223,177,ls),
(150,177,o),
(100,221,qs),
(40,274,o),
(40,367,qs),
(40,452,o),
(87,505,qs),
(139,564,o),
(223,564,qs),
(296,564,o)
);
},
{
closed = 1;
nodes = (
(157,408,o),
(157,367,qs),
(157,331,o),
(195,284,o),
(223,284,qs),
(288,284,l),
(288,367,ls),
(288,409,o),
(253,457,o),
(223,457,qs),
(192,457,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 26 24 20 30 21 30 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 457;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(71,151,qs),
(20,450,ls),
(12,496,o),
(56,556,o),
(97,556,qs),
(104,556,ls),
(118,556,o),
(121,537,qs),
(188,137,ls),
(194,103,o),
(221,103,qs),
(248,103,o),
(254,137,qs),
(320,537,ls),
(324,556,o),
(338,556,qs),
(345,556,ls),
(383,556,o),
(405,529,qs),
(430,499,o),
(422,450,qs),
(371,151,ls),
(343,-9,o),
(221,-9,qs),
(99,-9,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 1 23 77 0 2 2 0 98 4 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
0 2 4 1 0 2 0 102 3 1 1 1 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 20 17 14 12 9 6 0 24 1 24 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(208,0,o),
(208,13,qs),
(209,372,ls),
(209,414,o),
(178,449,o),
(142,449,qs),
(122,449,ls),
(35,449,o),
(35,534,qs),
(35,543,ls),
(35,556,o),
(46,556,qs),
(149,556,ls),
(227,556,o),
(272,513,qs),
(323,463,o),
(323,364,qs),
(323,13,ls),
(323,0,o),
(311,0,qs),
(221,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 15 12 9 6 0 20 1 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 377;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,522,qs),
(398,475,o),
(404,378,qs),
(415,207,o),
(415,181,qs),
(415,99,o),
(370,48,qs),
(319,-10,o),
(228,-10,qs),
(148,-10,o),
(98,35,qs),
(40,87,o),
(40,181,qs),
(40,198,o),
(51,378,qs),
(56,462,o),
(95,510,qs),
(141,564,o),
(228,564,qs),
(303,564,o)
);
},
{
closed = 1;
nodes = (
(168,368,qs),
(158,186,ls),
(156,98,o),
(228,98,qs),
(299,98,o),
(297,186,qs),
(287,368,ls),
(282,456,o),
(228,457,qs),
(174,456,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
5 1 2 2 0 97 4 1 0 0 23 77 0 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 1 3 1 101 5 1 2 2 0 97 4 1 0 0 23 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
4 1 0 5 1 2 3 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
21 20 1 0 26 24 20 29 21 29 11 9 0 19 1 19 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,228,o),
(157,196,o),
(157,169,qs),
(157,108,o),
(242,108,qs),
(283,108,ls),
(325,108,o),
(376,64,o),
(376,28,qs),
(376,19,ls),
(376,7,o),
(367,0,o),
(354,0,qs),
(231,0,ls),
(164,0,o),
(116,28,qs),
(40,73,o),
(40,176,qs),
(40,244,o),
(89,288,q),
(46,328,o),
(46,389,qs),
(46,463,o),
(90,511,qs),
(140,567,o),
(224,564,qs),
(274,563,o),
(309,537,qs),
(350,506,o),
(348,460,qs),
(347,437,o),
(333,437,qs),
(328,437,o),
(315,441,qs),
(312,442,o),
(305,444,qs),
(261,458,o),
(234,458,qs),
(203,457,o),
(164,424,o),
(164,397,qs),
(164,336,o),
(239,336,qs),
(283,336,ls),
(325,336,o),
(376,292,o),
(376,256,qs),
(376,247,ls),
(376,235,o),
(367,228,o),
(354,228,qs),
(223,228,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
31 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 7 1 0 6 1 0 103 3 1 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 36 26 24 20 18 14 12 9 6 0 51 1 50 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,556,o),
(628,544,qs),
(628,436,ls),
(628,354,o),
(587,303,qs),
(540,244,o),
(454,244,qs),
(384,244,o),
(338,289,q),
(294,244,o),
(223,244,qs),
(191,244,o),
(162,254,q),
(162,13,ls),
(162,0,o),
(149,0,qs),
(59,0,ls),
(47,0,o),
(47,13,qs),
(46,463,ls),
(46,556,o),
(137,556,qs),
(147,556,ls),
(160,556,o),
(160,544,qs),
(160,441,ls),
(160,358,o),
(224,358,qs),
(288,358,o),
(288,441,qs),
(288,468,ls),
(288,509,o),
(328,556,o),
(364,556,qs),
(374,556,ls),
(387,556,o),
(387,544,qs),
(387,441,ls),
(387,358,o),
(450,358,qs),
(514,358,o),
(514,438,qs),
(514,463,ls),
(514,556,o),
(605,556,qs),
(615,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
36 32 2 6 1 1 76 3 1 1 7 1 6 5 1 6 106 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 39 37 35 33 30 27 24 21 18 16 12 9 6 4 0 45 1 44 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = ExtraBold;
properties = (
{
key = postscriptFullName;
value = "Zain ExtraBold";
},
{
key = postscriptFontName;
value = "Zain-ExtraBold";
}
);
weightClass = 800;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -22;
"@MMK_R_O" = -22;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -32;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
"@MMK_R_quoteright" = 8;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -22;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -21;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -7;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -24;
"@MMK_R_C" = -18;
"@MMK_R_O" = -18;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_a" = {
"@MMK_R_y" = -5;
};
"@MMK_L_c" = {
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 4;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -16;
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -14;
"@MMK_R_u" = -6;
"@MMK_R_y" = -13;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -22;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -8;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 12;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -8;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -3;
"@MMK_R_quoteright" = 8;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -8;
"@MMK_R_e" = -8;
"@MMK_R_o" = -8;
};
A = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -22;
J = 11;
Q = -22;
T = -35;
V = -27;
W = -20;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -8;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
y = -6;
yacute = -6;
ydieresis = -6;
};
C = {
G = -8;
Q = -6;
T = 4;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -6;
T = 4;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -18;
AE = -33;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
J = -18;
M = -4;
T = -23;
V = -16;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = -9;
uni0622 = 17;
uni0623 = 17;
uni0625 = 7;
uni0627 = 0;
uni0631 = -9;
uni0632 = -9;
uni0671 = 17;
uni0691 = -9;
uni0694 = -9;
uni0695 = -9;
uni0698 = -9;
};
E = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -26;
AE = -42;
Aacute = -26;
Acircumflex = -26;
Adieresis = -26;
Agrave = -26;
Aring = -26;
Atilde = -26;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -11;
T = 6;
V = 4;
W = 4;
X = -6;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -29;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -29;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -15;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -13;
Scaron = -13;
T = -7;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -44;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -34;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
colon = 4;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -22;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -27;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -4;
Scaron = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -32;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -12;
d = -3;
g = -3;
period = -12;
q = -3;
question = -12;
x = -11;
};
P = {
A = -31;
AE = -55;
Aacute = -31;
Acircumflex = -31;
Adieresis = -31;
Agrave = -31;
Aring = -31;
Atilde = -31;
J = -32;
M = -3;
X = -18;
Y = -6;
Yacute = -6;
Ydieresis = -6;
Z = -9;
Zcaron = -9;
a = -6;
aacute = -6;
acircumflex = -6;
adieresis = -6;
ae = -6;
agrave = -6;
aring = -6;
atilde = -6;
c = -6;
ccedilla = -6;
comma = -29;
d = -6;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
g = -6;
hyphen = -6;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = -29;
q = -6;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
};
Q = {
A = -19;
AE = -12;
Aacute = -19;
Acircumflex = -19;
Adieresis = -19;
Agrave = -19;
Aring = -19;
Atilde = -19;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -21;
Yacute = -21;
Ydieresis = -21;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -28;
AE = -56;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 6;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -24;
AE = -39;
Aacute = -24;
Acircumflex = -24;
Adieresis = -24;
Agrave = -24;
Aring = -24;
Atilde = -24;
C = -12;
Ccedilla = -12;
G = -12;
J = -23;
O = -11;
OE = -11;
Oacute = -11;
Ocircumflex = -11;
Odieresis = -11;
Ograve = -11;
Oslash = -11;
Otilde = -11;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -26;
aacute = -26;
acircumflex = -26;
adieresis = -26;
ae = -26;
agrave = -26;
aring = -26;
atilde = -26;
c = -27;
ccedilla = -27;
colon = -7;
comma = -24;
d = -26;
dotlessi = -11;
e = -27;
eacute = -27;
ecircumflex = -27;
edieresis = -27;
egrave = -27;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -26;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -27;
oacute = -27;
ocircumflex = -27;
odieresis = -27;
oe = -27;
ograve = -27;
oslash = -27;
otilde = -27;
p = -11;
period = -24;
q = -26;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -19;
AE = -34;
Aacute = -19;
Acircumflex = -19;
Adieresis = -19;
Agrave = -19;
Aring = -19;
Atilde = -19;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -18;
OE = -18;
Oacute = -18;
Ocircumflex = -18;
Odieresis = -18;
Ograve = -18;
Oslash = -18;
Otilde = -18;
Q = -18;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -55;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
v = -5;
};
aacute = {
question = -11;
v = -5;
};
acircumflex = {
question = -11;
v = -5;
};
adieresis = {
question = -11;
v = -5;
};
ae = {
question = -22;
t = -4;
v = -4;
x = -10;
};
agrave = {
question = -11;
v = -5;
};
aring = {
question = -11;
v = -5;
};
atilde = {
question = -11;
v = -5;
};
b = {
comma = -7;
f = -4;
fi = -4;
fl = -4;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 56;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
rehvabovear = -23;
uni0622 = 19;
uni0623 = 9;
uni0625 = 4;
uni0627 = -32;
uni0631 = -32;
uni0632 = -32;
uni0671 = 24;
uni0691 = -18;
uni0694 = -32;
uni0695 = -32;
uni0698 = -32;
};
bracketleft = {
j = 51;
uni0632 = 13;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
rehvabovear = -23;
uni0622 = 19;
uni0623 = 9;
uni0625 = 4;
uni0627 = -32;
uni0631 = -32;
uni0632 = -32;
uni0671 = 24;
uni0691 = -18;
uni0694 = -32;
uni0695 = -32;
uni0698 = -32;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
comma = {
eight = -7;
nine = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
six = -10;
zero = -23;
};
dollar = {
eight = 5;
four = 14;
nine = -10;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eacute = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ecircumflex = {
question = -22;
t = -4;
v = -4;
x = -10;
};
edieresis = {
question = -22;
t = -4;
v = -4;
x = -10;
};
egrave = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eight = {
comma = -7;
eight = 5;
four = 7;
period = -7;
seven = -7;
two = -10;
};
eight.ar = {
eight.ar = 5;
four.ar = 7;
period = -7;
seven.ar = -7;
two.ar = -10;
};
eight.farsi = {
eight.farsi = 5;
four.farsi = 7;
period = -7;
seven.farsi = -7;
two.farsi = -10;
};
exclamdown = {
j = 44;
};
f = {
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -11;
ccedilla = -11;
comma = -21;
d = -11;
e = -11;
eacute = -11;
ecircumflex = -11;
edieresis = -11;
egrave = -11;
exclam = 6;
g = -11;
hyphen = -4;
o = -11;
oacute = -11;
ocircumflex = -11;
odieresis = -11;
oe = -11;
ograve = -11;
oslash = -11;
otilde = -11;
period = -21;
q = -11;
question = 12;
quotedblright = 13;
quoteright = 13;
};
fi = {
v = -5;
w = -3;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -10;
zero = -3;
};
five.ar = {
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -23;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
four = {
four = 6;
nine = -16;
one = -6;
seven = -10;
six = -4;
two = -5;
zero = -7;
};
four.ar = {
four.ar = 6;
nine.ar = -16;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -7;
};
four.farsi = {
four.farsi = 6;
nine.farsi = -16;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -7;
};
g = {
j = 35;
question = -12;
quotedblright = -5;
quoteright = -5;
v = -4;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
hyphen = -8;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 4;
q = -12;
question = -6;
s = -4;
scaron = -4;
};
l = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -23;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
lam_alefvabovear = {
lamthreedotsabovear = 44;
lamthreedotsabovear.init = 44;
uni0621 = 9;
uni0622 = 22;
uni0623 = 17;
uni0624 = 9;
uni0626 = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 28;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFECB = 9;
uniFECF = 9;
uniFEDF = 11;
yehvabovear = 9;
};
lam_alefvabovear.fina = {
lamthreedotsabovear = 44;
lamthreedotsabovear.init = 44;
uni0621 = 9;
uni0622 = 22;
uni0623 = 17;
uni0624 = 9;
uni0626 = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 28;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFECB = 9;
uniFECF = 9;
uniFEDF = 11;
yehvabovear = 9;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
v = -5;
w = -3;
};
nine = {
comma = -27;
five = -3;
four = -6;
period = -27;
seven = -7;
six = -7;
three = -9;
two = -16;
};
nine.ar = {
five.ar = -3;
four.ar = -6;
period = -27;
seven.ar = -7;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
five.farsi = -3;
four.farsi = -6;
period = -27;
seven.farsi = -7;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
v = -5;
w = -3;
};
o = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
oacute = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
ocircumflex = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
odieresis = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
oe = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ograve = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
one = {
eight = -11;
five = -10;
four = -16;
nine = -28;
seven = -21;
six = -16;
three = -8;
zero = -23;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -16;
nine.ar = -28;
seven.ar = -21;
six.ar = -16;
three.ar = -8;
zero.ar = -23;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -16;
nine.farsi = -28;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -8;
zero.farsi = -23;
};
oslash = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
otilde = {
comma = -5;
period = -5;
question = -26;
t = -8;
v = -6;
w = -3;
x = -15;
};
p = {
comma = -4;
f = -7;
fi = -7;
fl = -7;
period = -4;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -5;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -6;
zcaron = -6;
};
parenleft = {
comma = 16;
j = 72;
p = 13;
uni0622 = 9;
uni0631 = 13;
uni0632 = 13;
uni0671 = 19;
y = 38;
yacute = 38;
ydieresis = 38;
};
parenright = {
rehvabovear = -9;
uni0622 = 15;
uni0623 = 8;
uni0625 = -6;
uni0627 = -19;
uni0631 = -28;
uni0632 = -28;
uni0671 = 24;
uni0691 = -4;
uni0694 = -28;
uni0695 = -28;
uni0698 = -28;
};
period = {
eight = -7;
nine = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
six = -10;
zero = -23;
};
q = {
j = 34;
};
questiondown = {
j = 84;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 7;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 44;
};
quoteleft = {
J = -12;
T = 7;
V = 7;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uniFE8B = 22;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
comma = -23;
d = -18;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -12;
n = -12;
ntilde = -12;
o = -23;
oacute = -23;
ocircumflex = -23;
odieresis = -23;
oe = -23;
ograve = -23;
oslash = -23;
otilde = -23;
period = -23;
r = -12;
s = -21;
scaron = -21;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 44;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
r = {
a = -7;
aacute = -7;
acircumflex = -7;
adieresis = -7;
ae = -7;
agrave = -7;
aring = -7;
atilde = -7;
c = -7;
ccedilla = -7;
comma = -15;
d = -7;
e = -10;
eacute = -10;
ecircumflex = -10;
edieresis = -10;
egrave = -10;
f = 4;
fi = 4;
fl = 4;
g = -7;
hyphen = -4;
o = -7;
oacute = -7;
ocircumflex = -7;
odieresis = -7;
oe = -7;
ograve = -7;
oslash = -7;
otilde = -7;
period = -15;
q = -7;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
space = 122;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
rehvabovear = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 74;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
rehvabovear.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
rehvbelowar.fina = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
s = {
comma = 5;
period = 5;
question = -18;
};
scaron = {
comma = 5;
period = 5;
question = -18;
};
seven = {
comma = -35;
eight = -6;
four = -19;
one = 5;
period = -35;
six = -17;
two = -12;
zero = -11;
};
seven.ar = {
eight.ar = -6;
four.ar = -19;
one.ar = 5;
period = -35;
six.ar = -17;
two.ar = -12;
zero.ar = -11;
};
seven.farsi = {
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
period = -35;
six.farsi = -17;
two.farsi = -12;
zero.farsi = -11;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -18;
two = -11;
zero = -4;
};
six.ar = {
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -18;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -18;
two.farsi = -11;
zero.farsi = -4;
};
sterling = {
eight = -5;
four = -12;
seven = 6;
six = -18;
};
t = {
a = -8;
aacute = -8;
acircumflex = -8;
adieresis = -8;
ae = -8;
agrave = -8;
aring = -8;
atilde = -8;
c = -9;
ccedilla = -9;
comma = -18;
d = -8;
e = -7;
eacute = -7;
ecircumflex = -7;
edieresis = -7;
egrave = -7;
f = 4;
fi = 4;
fl = 4;
g = -7;
o = -6;
oacute = -6;
ocircumflex = -6;
odieresis = -6;
oe = -6;
ograve = -6;
oslash = -6;
otilde = -6;
period = -18;
q = -8;
question = -6;
t = 3;
x = -6;
};
three = {
comma = -7;
four = 9;
one = -7;
period = -7;
seven = -9;
two = -10;
zero = -6;
};
three.ar = {
four.ar = 9;
one.ar = -7;
period = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
four.farsi = 9;
one.farsi = -7;
period = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two = {
comma = -7;
eight = -4;
five = -5;
four = -16;
nine = -4;
period = -7;
seven = -5;
six = -16;
three = -5;
zero = -11;
};
two.ar = {
eight.ar = -4;
five.ar = -5;
four.ar = -16;
nine.ar = -4;
period = -7;
seven.ar = -5;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
eight.farsi = -4;
five.farsi = -5;
four.farsi = -16;
nine.farsi = -4;
period = -7;
seven.farsi = -5;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -12;
};
uni0622 = {
Decoratedbracketleft = 19;
braceleft = 17;
bracketleft = 17;
lamthreedotsabovear = 45;
parenleft = 22;
parenright = 9;
rehvabovear = 23;
uni0621 = 9;
uni0622 = 48;
uni0623 = 46;
uni062C = 7;
uni062D = 7;
uni062E = 7;
uni0632 = 22;
uni0639 = 9;
uni063A = 9;
uni0671 = 54;
uni0686 = 7;
uni0691 = 11;
uni0698 = 22;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 11;
uniFB7C = 7;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 7;
uniFEA3 = 7;
uniFEA7 = 7;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 22;
};
uni0623 = {
Decoratedbracketleft = 8;
braceleft = 8;
bracketleft = 8;
lamthreedotsabovear = 23;
parenleft = 11;
uni0621 = 9;
uni0622 = 38;
uni0623 = 41;
uni062C = 7;
uni062D = 7;
uni062E = 7;
uni0632 = 22;
uni0639 = 9;
uni063A = 9;
uni0671 = 44;
uni0686 = 7;
uni0691 = 11;
uni0698 = 22;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 11;
uniFB7C = 7;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 7;
uniFEA3 = 7;
uniFEA7 = 7;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 22;
};
uni0625 = {
Decoratedbracketleft = 8;
braceleft = 7;
bracketleft = 7;
parenleft = 7;
uni0621 = 9;
uni0625 = 28;
uni062C = 2;
uni062D = 2;
uni062E = 2;
uni0632 = 22;
uni0639 = 9;
uni063A = 9;
uni0686 = 2;
uni0691 = 11;
uni0698 = 22;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 11;
uniFB7C = 2;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 2;
uniFEA3 = 2;
uniFEA7 = 2;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 22;
};
uni0627 = {
Decoratedbracketleft = 13;
braceleft = -32;
bracketleft = -32;
parenleft = -19;
uni0621 = 9;
uni062C = 7;
uni062D = 7;
uni062E = 7;
uni0632 = 22;
uni0639 = 9;
uni063A = 9;
uni0686 = 7;
uni0691 = 11;
uni0698 = 22;
uniEECD = 0;
uniEECF = 9;
uniFB68 = 11;
uniFB7C = 7;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 7;
uniFEA3 = 7;
uniFEA7 = 7;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 22;
};
uni062F = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 22;
uni062E = 22;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 22;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uni06D2 = 26;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uni0630 = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 9;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uni0631 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 74;
uni0621 = 33;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0661 = 24;
uni0662 = -44;
uni0663 = -22;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 68;
uniFECB = 41;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni0632 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -43;
uni0663 = -19;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F3 = -14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 68;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni0637 = {
uni0621 = 9;
};
uni0638 = {
uni0621 = 9;
};
uni06440671 = {
uni0621 = 9;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0686 = 9;
uni0698 = 50;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 50;
uniFB7C = 9;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
uniFEDF = 22;
yehvabovear = 9;
};
uni06440671.fina = {
uni0621 = 9;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 22;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0686 = 9;
uni0698 = 50;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 50;
uniFB7C = 9;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
uniFEDF = 22;
yehvabovear = 9;
};
uni0660 = {
uni0666 = -74;
};
uni0661 = {
uni0667 = 17;
uni0668 = 14;
uni0691 = 18;
uni0698 = 18;
uni06F7 = 4;
uniEECD = 9;
};
uni0662 = {
uni0660 = -79;
uni0664 = -17;
uni0665 = -28;
uni0666 = 17;
uni0667 = 26;
uni0668 = -39;
uni0669 = -23;
uni06F9 = -6;
uniF806 = -73;
};
uni0663 = {
uni0660 = -48;
uni0665 = -11;
uni0666 = -3;
uni0667 = 18;
uni0668 = -33;
uni0669 = -11;
uniF806 = -41;
};
uni0664 = {
uni0666 = -28;
uni0668 = 18;
uni0669 = -17;
};
uni0665 = {
uni0663 = 3;
uni0666 = -28;
uni0667 = 14;
uni0668 = 9;
uniF806 = 6;
};
uni0666 = {
uni0666 = -17;
uni0667 = 23;
uni0668 = 14;
uni0691 = 43;
uni0695 = -8;
uni0698 = 33;
uniFB8B = 0;
uniFB8D = 14;
};
uni0667 = {
uni0632 = 14;
uni0661 = 17;
uni0662 = 23;
uni0663 = 23;
uni0664 = 14;
uni0665 = 14;
uni0666 = 28;
uni0667 = 51;
uni0668 = 4;
uni0669 = 16;
uni0691 = 46;
uni0694 = 14;
uni0695 = 14;
uni0698 = 37;
uni06F3 = 4;
};
uni0668 = {
uni0631 = 14;
uni0632 = 14;
uni0661 = 14;
uni0662 = 21;
uni0663 = 17;
uni0664 = 14;
uni0665 = 9;
uni0666 = -39;
uni0667 = 4;
uni0668 = 46;
uni0669 = -21;
uni0691 = 14;
uni0694 = 14;
uni0695 = 14;
uni0698 = 14;
uni06F7 = -8;
uniF806 = 6;
};
uni0669 = {
uni0666 = -28;
uni0667 = 14;
uni0668 = 17;
};
uni0671 = {
Decoratedbracketleft = 13;
braceleft = 17;
bracketleft = 17;
lamthreedotsabovear = 48;
parenleft = 28;
parenright = 13;
uni0621 = 9;
uni0622 = 57;
uni0623 = 48;
uni062C = 7;
uni062D = 7;
uni062E = 7;
uni0632 = 22;
uni0639 = 9;
uni063A = 9;
uni0671 = 56;
uni0686 = 7;
uni0691 = 11;
uni0698 = 22;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 11;
uniFB7C = 7;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 7;
uniFEA3 = 7;
uniFEA7 = 7;
uniFECB = 9;
uniFECF = 9;
uniFEE7 = 22;
};
uni0688 = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 9;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uni0691 = {
Decoratedbracketleft = 44;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0667 = 19;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F7 = 18;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB68 = 12;
uniFB7C = 0;
uniFB8D = 68;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE8B = 11;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni0694 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -44;
uni0663 = -22;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni0695 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -44;
uni0663 = -22;
uni0666 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni0698 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0661 = 18;
uni0662 = -4;
uni0667 = 14;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F7 = 14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB68 = 23;
uniFB7C = 0;
uniFB8B = 68;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE8B = 12;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE97 = 27;
uniFE9B = 27;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uni06F1 = {
uni0691 = 18;
uni0698 = 14;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -24;
uni0666 = 11;
uni0667 = 4;
uni06F0 = -59;
uni06F5 = -28;
uni06F7 = 3;
uni06F8 = -39;
uni06F9 = -22;
uniF806 = -69;
};
uni06F3 = {
uni0632 = 14;
uni0664 = -4;
uni0698 = 23;
uni06F0 = -37;
uni06F5 = -17;
uni06F7 = 14;
uniF806 = -43;
};
uni06F4 = {
uni0632 = 14;
uni0691 = 23;
uni0698 = 23;
uni06F5 = -11;
uni06F6 = -3;
uni06F8 = -17;
uniF806 = -18;
};
uni06F5 = {
uni06F5 = 9;
uni06F7 = 14;
uni06F8 = 16;
};
uni06F6 = {
uni0668 = -6;
uni06F8 = -3;
};
uni06F7 = {
uni0631 = 14;
uni0632 = 14;
uni0661 = 6;
uni0691 = 23;
uni0694 = 14;
uni0695 = 14;
uni0698 = 37;
uni06F1 = 17;
uni06F2 = 23;
uni06F3 = 23;
uni06F4 = 22;
uni06F5 = 14;
uni06F6 = 11;
uni06F7 = 51;
uni06F8 = 4;
uni06F9 = 16;
uniF805 = 12;
};
uni06F8 = {
uni0631 = 14;
uni0632 = 14;
uni0667 = -4;
uni0691 = 14;
uni0694 = 14;
uni0695 = 14;
uni0698 = 14;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 16;
uni06F6 = 39;
uni06F7 = 4;
uni06F8 = 46;
uni06F9 = -21;
uniF806 = 11;
};
uni06F9 = {
uni06F6 = 2;
uni06F7 = 14;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni06F0 = -100;
uni06F2 = -28;
uni06F4 = -11;
uni06F5 = -44;
uni06F6 = -22;
uni06F7 = 6;
uni06F8 = -44;
uni06F9 = -28;
uniF806 = -161;
};
uniF806 = {
uni0660 = -74;
uni0661 = 14;
uni0662 = 14;
uni0666 = -33;
uni0667 = -44;
uni0668 = 29;
uni0669 = -107;
uni06F0 = -74;
uni06F1 = 18;
uni06F3 = 18;
uni06F4 = 18;
uni06F6 = 42;
uni06F7 = -42;
uni06F8 = 38;
uni06F9 = -122;
uniF805 = 18;
};
uniFB51 = {
Decoratedbracketleft = 9;
braceleft = 17;
bracketleft = 17;
lamthreedotsabovear = 48;
parenleft = 28;
uni0622 = 59;
uni0623 = 58;
uni0632 = 22;
uni0671 = 53;
uni0691 = 11;
uni0698 = 22;
uniFB68 = 11;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 22;
};
uniFB89 = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 9;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uniFB8B = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
space = 57;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -4;
uni0663 = -4;
uni0666 = -4;
uni0667 = 14;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 78;
uni0695 = 78;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F7 = 14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB68 = 23;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE8B = 12;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE97 = 27;
uniFE9B = 27;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uniFB8D = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0667 = 19;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F7 = 18;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB68 = 12;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE8B = 11;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE97 = 15;
uniFE9B = 15;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uniFE82 = {
Decoratedbracketleft = 9;
braceleft = 17;
bracketleft = 17;
lamthreedotsabovear = 45;
parenleft = 22;
uni0622 = 48;
uni0623 = 39;
uni0632 = 22;
uni0671 = 54;
uni0691 = 11;
uni0698 = 22;
uniFB68 = 11;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFECB = 0;
uniFEE7 = 22;
};
uniFE84 = {
Decoratedbracketleft = 8;
braceleft = 8;
bracketleft = 8;
lamthreedotsabovear = 30;
parenleft = 11;
uni0622 = 38;
uni0623 = 27;
uni0632 = 22;
uni0671 = 46;
uni0691 = 11;
uni0698 = 22;
uniFB68 = 11;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 22;
};
uniFE88 = {
Decoratedbracketleft = 8;
braceleft = 4;
bracketleft = 4;
parenleft = 8;
uni0625 = 37;
uni0632 = 22;
uni0691 = 11;
uni0698 = 22;
uniFB68 = 11;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 22;
};
uniFE8E = {
Decoratedbracketleft = 13;
braceleft = -32;
bracketleft = -32;
parenleft = -19;
uni0632 = 22;
uni0691 = 11;
uni0698 = 22;
uniFB68 = 11;
uniFE8B = 11;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 22;
};
uniFE91 = {
uniFB51 = 0;
uniFE82 = 0;
uniFEAE = 4;
uniFEB0 = 4;
};
uniFEAA = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 9;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uniFEAC = {
uni0621 = 9;
uni0622 = 0;
uni0623 = 0;
uni0624 = 9;
uni0625 = 0;
uni0626 = 9;
uni0627 = 0;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0631 = 0;
uni0632 = 0;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 0;
uni0646 = 0;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 0;
uni0686 = 9;
uni0691 = 0;
uni0698 = 0;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
wawtwodotsabovear = 9;
wawvabovear = 9;
yehvabovear = 9;
};
uniFEAE = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -44;
uni0663 = -22;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uniFEB0 = {
Decoratedbracketleft = 44;
Decoratedbracketright = -46;
braceleft = 111;
braceright = 32;
bracketleft = 114;
bracketright = 83;
lamdotabovear = 59;
lamthreedotsabovear = 59;
lamvabovear = 59;
parenleft = 122;
rehvabovear = 82;
uni0621 = 33;
uni0622 = 0;
uni0623 = 0;
uni0624 = 72;
uni0625 = 106;
uni0626 = 74;
uni0627 = 0;
uni062C = 32;
uni062D = 0;
uni062E = 0;
uni0631 = 82;
uni0632 = 82;
uni0639 = 76;
uni063A = 76;
uni0642 = 56;
uni0644 = 59;
uni0646 = 59;
uni0648 = 72;
uni0649 = 74;
uni064A = 74;
uni0660 = -14;
uni0662 = -43;
uni0663 = -19;
uni0671 = 0;
uni0686 = 32;
uni0691 = 82;
uni0694 = 82;
uni0695 = 82;
uni0698 = 82;
uni06CC = 74;
uni06F0 = -14;
uni06F2 = -37;
uni06F3 = -14;
uniEECD = 76;
uniEECF = 31;
uniFB58 = 97;
uniFB58FE8A = 97;
uniFB58FEF0 = 97;
uniFB58FEF2 = 97;
uniFB7C = 0;
uniFBA8 = -8;
uniFBA8FE8A = -19;
uniFBA8FEF0 = -19;
uniFBA8FEF2 = -19;
uniFBFE = 97;
uniFBFEFBFD = 97;
uniFC09 = -19;
uniFC0A = -19;
uniFC59 = 97;
uniFC5A = 97;
uniFE91 = -19;
uniFE91FE8A = -19;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 31;
uniFECF = 31;
uniFEF3 = 97;
uniFEF3FE8A = 97;
wawtwodotsabovear = 72;
wawvabovear = 72;
yehvabove_alefMaksuraar = 97;
yehvabove_pehar = 97;
yehvabove_yehHamzaabovear = 97;
yehvabove_yehar = 97;
yehvabove_yehvar = 97;
yehvabovear = 74;
yehvabovear.init = 97;
};
uniFEC2 = {
uni0621 = 9;
};
uniFEC6 = {
uni0621 = 9;
};
uniFEF5 = {
uni0621 = 9;
uni0622 = 8;
uni0623 = 8;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 22;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 8;
uni0686 = 9;
uni0698 = 50;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 50;
uniFB7C = 9;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 6;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEF6 = {
uni0621 = 9;
uni0622 = 8;
uni0623 = 8;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0644 = 22;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 8;
uni0686 = 9;
uni0698 = 50;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 50;
uniFB7C = 9;
uniFE97 = 50;
uniFE9B = 50;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEF7 = {
uni0621 = 9;
uni0622 = 8;
uni0623 = 8;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 8;
uni0686 = 9;
uni0698 = 44;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 44;
uniFB7C = 9;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 6;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEF8 = {
uni0621 = 9;
uni0622 = 8;
uni0623 = 8;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0671 = 8;
uni0686 = 9;
uni0698 = 44;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB68 = 44;
uniFB7C = 9;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEF9 = {
uni0621 = 9;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0686 = 9;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 6;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEFA = {
uni0621 = 9;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0686 = 9;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
uniFEFB = {
uni0621 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0686 = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 3;
};
uniFEFC = {
uni0621 = 9;
uni0624 = 9;
uni0626 = 9;
uni062C = 9;
uni062D = 9;
uni062E = 9;
uni0639 = 9;
uni063A = 9;
uni0642 = 9;
uni0648 = 9;
uni0649 = 9;
uni064A = 9;
uni0686 = 9;
uni06CC = 9;
uniEECD = 9;
uniEECF = 9;
uniFB7C = 9;
uniFE9F = 9;
uniFEA3 = 9;
uniFEA7 = 9;
uniFECB = 9;
uniFECF = 9;
yehvabovear = 9;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -3;
hyphen = -6;
o = -5;
oacute = -5;
ocircumflex = -5;
odieresis = -5;
oe = -5;
ograve = -5;
oslash = -5;
otilde = -5;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -12;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -12;
hyphen = -12;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 7;
q = -16;
question = -12;
t = -6;
u = -8;
uacute = -8;
ucircumflex = -8;
udieresis = -8;
ugrave = -8;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yen = {
five = 7;
seven = 12;
six = -6;
two = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -4;
one = -8;
period = -23;
seven = -19;
three = -7;
two = -17;
};
zero.ar = {
five.ar = -4;
one.ar = -8;
period = -23;
seven.ar = -19;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
five.farsi = -4;
one.farsi = -8;
period = -23;
seven.farsi = -19;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
