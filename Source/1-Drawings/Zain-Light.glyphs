{
.appVersion = "3151";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "1BOU";
},
{
name = panose;
value = (
0,
0,
9,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
13,
31,
33,
35,
38,
45,
60,
63,
67
);
},
{
name = codePageRanges;
value = (
"1252",
"1256"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
uni000D,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
uni00AD,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
Lslash,
lslash,
OE,
oe,
Scaron,
scaron,
Ydieresis,
Zcaron,
zcaron,
florin,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni03BC,
uni060C,
uni061B,
uni061F,
uni0621,
uni0622,
uni0623,
uni0624,
uni0625,
uni0626,
uni0627,
uni0628,
uni0629,
uni062A,
uni062B,
uni062C,
uni062D,
uni062E,
uni062F,
uni0630,
uni0631,
uni0632,
uni0633,
uni0634,
uni0635,
uni0636,
uni0637,
uni0638,
uni0639,
uni063A,
uni0640,
uni0641,
uni0642,
uni0643,
uni0644,
uni0645,
uni0646,
uni0647,
uni0648,
uni0649,
uni064A,
uni064B,
uni064C,
uni064D,
uni064E,
uni064F,
uni0650,
uni0651,
uni0652,
uni0653,
uni0654,
uni0655,
uni065A,
zero.ar,
one.ar,
two.ar,
three.ar,
four.ar,
five.ar,
six.ar,
seven.ar,
eight.ar,
nine.ar,
uni066A,
uni066B,
uni066C,
uni066D,
uni066E,
uni0670,
uni0671,
uni0679,
uni067E,
uni0686,
uni0688,
uni0691,
rehvabovear,
uni0694,
uni0695,
uni0698,
uni06A1,
uni06A4,
uni06A9,
uni06AF,
lamvabovear,
lamdotabovear,
lamthreedotsabovear,
uni06BA,
uni06BE,
uni06C0,
uni06C1,
uni06C2,
uni06C3,
wawvabovear,
wawtwodotsabovear,
uni06CC,
yehvabovear,
uni06D2,
uni06D3,
uni06D5,
uni06DB,
zero.farsi,
one.farsi,
two.farsi,
three.farsi,
four.farsi,
five.farsi,
six.farsi,
seven.farsi,
eight.farsi,
nine.farsi,
endash,
emdash,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni20AC,
trademark,
minus,
notequal,
lessequal,
greaterequal,
uni25CC,
zero.tab,
one.tab,
two.tab,
three.tab,
four.tab,
five.tab,
six.tab,
seven.tab,
eight.tab,
nine.tab,
Decoratedbracketleft,
Decoratedbracketright,
aleflaminitial,
exclam.ar,
digitfoururdu.tab,
digitsevenurdu.tab,
lam_alefvabovear,
lam_alefvabovear.fina,
lamdotabovear.fina,
lamdotabovear.init,
lamdotabovear.medi,
lamthreedotsabovear.fina,
lamthreedotsabovear.init,
lamthreedotsabovear.medi,
lamvabovear.fina,
lamvabovear.init,
lamvabovear.medi,
perthousand.ar,
rehdotbelowar.fina,
rehvabovear.fina,
rehvbelowar.fina,
smalltahar,
threedotsbelowar,
twodotsabovear,
twodotsbelow,
uni06440671,
uni06440671.fina,
uni0651064B.1,
uni06510652,
uni0660.tab,
uni0661.tab,
uni0662.tab,
uni0663.tab,
uni0664.tab,
uni0665.tab,
uni0666.tab,
uni0667.tab,
uni0668.tab,
uni0669.tab,
uni066E.fina,
uni066E.init,
uni066E.medi,
uni06A1.fina,
uni06A1.init,
uni06A1.medi,
uni06C3.fina,
uni06F0.tab,
uni06F1.tab,
uni06F2.tab,
uni06F3.tab,
uni06F4.tab,
uni06F5.tab,
uni06F6.tab,
uni06F7.tab,
uni06F8.tab,
uni06F9.tab,
uniFB58FE8A,
uniFB58FEF0,
uniFB58FEF2,
uniFB59FEF0,
uniFB59FEF2,
uniFBA8FE8A,
uniFBA8FEF0,
uniFBA8FEF2,
uniFBFEFBFD,
uniFBFFFBFD,
uniFE91FE8A,
uniFEF3FE8A,
uniFEF4FE8A,
waslaar,
wawtwodotsabovear.fina,
wawvabovear.fina,
yehvabove_alefMaksuraar,
yehvabove_alefMaksuraar.fina,
yehvabove_pehar,
yehvabove_pehar.fina,
yehvabove_yehHamzaabovear,
yehvabove_yehHamzaabovear.fina,
yehvabove_yehar,
yehvabove_yehar.fina,
yehvabove_yehvar,
yehvabove_yehvar.fina,
yehvabovear.fina,
yehvabovear.init,
yehvabovear.medi,
uniE15F,
uniFB59FE8A,
uni06D5.fina,
uniEECD,
uniEECE,
uniEECF,
uniEED0,
uniF805,
uniF806,
fi,
fl,
uniFB51,
uniFB57,
uniFB58,
uniFB59,
uniFB67,
uniFB68,
uniFB69,
uniFB6B,
uniFB6C,
uniFB6D,
uniFB7B,
uniFB7C,
uniFB7D,
uniFB89,
uniFB8B,
uniFB8D,
uniFB8F,
uniFB90,
uniFB91,
uniFB93,
uniFB94,
uniFB95,
uniFB9F,
uniFBA5,
uniFBA7,
uniFBA8,
uniFBA9,
uniFBAB,
uniFBAC,
uniFBAD,
uniFBAF,
uniFBB1,
dotabovear,
dotbelowar,
uniFBE8,
uniFBE9,
uniFBFD,
uniFBFE,
uniFBFF,
uniFC09,
uniFC0A,
uniFC32,
uniFC59,
uniFC5A,
uniFC5E,
uniFC5F,
uniFC60,
uniFC61,
uniFC62,
uniFC63.isol,
uniFC95,
uniFC96,
uniFDF2,
uniFDFC,
uniFE82,
uniFE84,
uniFE86,
uniFE88,
uniFE8A,
uniFE8B,
uniFE8C,
uniFE8E,
uniFE90,
uniFE91,
uniFE92,
uniFE94,
uniFE96,
uniFE97,
uniFE98,
uniFE9A,
uniFE9B,
uniFE9C,
uniFE9E,
uniFE9F,
uniFEA0,
uniFEA2,
uniFEA3,
uniFEA4,
uniFEA6,
uniFEA7,
uniFEA8,
uniFEAA,
uniFEAC,
uniFEAE,
uniFEB0,
uniFEB2,
uniFEB3,
uniFEB4,
uniFEB6,
uniFEB7,
uniFEB8,
uniFEBA,
uniFEBB,
uniFEBC,
uniFEBE,
uniFEBF,
uniFEC0,
uniFEC2,
uniFEC3,
uniFEC4,
uniFEC6,
uniFEC7,
uniFEC8,
uniFECA,
uniFECB,
uniFECC,
uniFECE,
uniFECF,
uniFED0,
uniFED2,
uniFED3,
uniFED4,
uniFED6,
uniFED7,
uniFED8,
uniFEDA,
uniFEDB,
uniFEDC,
uniFEDE,
uniFEDF,
uniFEE0,
uniFEE2,
uniFEE3,
uniFEE4,
uniFEE6,
uniFEE7,
uniFEE8,
uniFEEA,
uniFEEB,
uniFEEC,
uniFEEE,
uniFEF0,
uniFEF2,
uniFEF3,
uniFEF4,
uniFEF5,
uniFEF6,
uniFEF7,
uniFEF8,
uniFEF9,
uniFEFA,
uniFEFB,
uniFEFC,
uni0662,
uni0661,
uni0660,
uni06F0,
uni06F1,
uni06F2,
uni0668,
uni06F4,
uni06F5,
uni06F6,
uni06F7,
uni06F8,
uni06F9,
uni06F3,
uni0669,
uni0667,
uni0666,
uni0665,
uni0664,
uni0663
);
}
);
date = "2025-05-15 08:48:56 +0000";
familyName = Zain;
featurePrefixes = (
{
code = "lookup SUB_15 {
	sub uni06F4 by uniF805;
	sub uni06F6 by uni0666;
	sub uni06F7 by uniF806;
} SUB_15;
lookup SUB_2 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
} SUB_2;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} SUB_3;
script arab;
language dflt;
lookup SUB_3;
language URD;
lookup SUB_3;
script latn;
language dflt;
lookup SUB_3;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} SUB_4;
script arab;
language dflt;
lookup SUB_4;
language URD;
lookup SUB_4;
script latn;
language dflt;
lookup SUB_4;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_5 {
	@SUB_5_0_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_0_BT_0 [A a]' lookup SUB_2;
	@SUB_5_1_BT_0 = [zero one two three four five six seven eight nine];
	sub @SUB_5_1_BT_0 [O o]' lookup SUB_2;
} SUB_5;
script arab;
language dflt;
lookup SUB_5;
language URD;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_5;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} SUB_6;
lookup SUB_12 {
	sub digitfoururdu.tab by uniF805;
	sub digitsevenurdu.tab by uniF806;
	sub uni0660.tab by uni0660;
	sub uni0661.tab by uni0661;
	sub uni0662.tab by uni0662;
	sub uni0663.tab by uni0663;
	sub uni0664.tab by uni0664;
	sub uni0665.tab by uni0665;
	sub uni0666.tab by uni0666;
	sub uni0667.tab by uni0667;
	sub uni0668.tab by uni0668;
	sub uni0669.tab by uni0669;
	sub uni06F0.tab by uni06F0;
	sub uni06F1.tab by uni06F1;
	sub uni06F2.tab by uni06F2;
	sub uni06F3.tab by uni06F3;
	sub uni06F4.tab by uni06F4;
	sub uni06F5.tab by uni06F5;
	sub uni06F6.tab by uni06F6;
	sub uni06F7.tab by uni06F7;
	sub uni06F8.tab by uni06F8;
	sub uni06F9.tab by uni06F9;
} SUB_12;
script arab;
language dflt;
lookup SUB_6;
lookup SUB_12;
language URD;
lookup SUB_6;
lookup SUB_12;
script latn;
language dflt;
lookup SUB_6;
lookup SUB_12;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} SUB_7;
lookup SUB_11 {
	sub uniF805 by digitfoururdu.tab;
	sub uniF806 by digitsevenurdu.tab;
	sub uni0662 by uni0662.tab;
	sub uni0661 by uni0661.tab;
	sub uni0660 by uni0660.tab;
	sub uni06F0 by uni06F0.tab;
	sub uni06F1 by uni06F1.tab;
	sub uni06F2 by uni06F2.tab;
	sub uni0668 by uni0668.tab;
	sub uni06F4 by uni06F4.tab;
	sub uni06F5 by uni06F5.tab;
	sub uni06F6 by uni06F6.tab;
	sub uni06F7 by uni06F7.tab;
	sub uni06F8 by uni06F8.tab;
	sub uni06F9 by uni06F9.tab;
	sub uni06F3 by uni06F3.tab;
	sub uni0669 by uni0669.tab;
	sub uni0667 by uni0667.tab;
	sub uni0666 by uni0666.tab;
	sub uni0665 by uni0665.tab;
	sub uni0664 by uni0664.tab;
	sub uni0663 by uni0663.tab;
} SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_7;
lookup SUB_11;
script arab;
language dflt;
lookup SUB_7;
lookup SUB_11;
language URD;
lookup SUB_7;
lookup SUB_11;
script latn;
language dflt;
lookup SUB_7;
lookup SUB_11;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_8 {
	sub zero.ar by uni0660;
	sub one.ar by uni0661;
	sub two.ar by uni0662;
	sub three.ar by uni0663;
	sub four.ar by uni0664;
	sub five.ar by uni0665;
	sub six.ar by uni0666;
	sub seven.ar by uni0667;
	sub eight.ar by uni0668;
	sub nine.ar by uni0669;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_8;
script arab;
language dflt;
lookup SUB_8;
language URD;
lookup SUB_8;
script latn;
language dflt;
lookup SUB_8;
";
tag = ss01;
},
{
code = "script DFLT;
language dflt;
lookup SUB_9 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uni06F4;
	sub five.ar by uni06F5;
	sub six.ar by uni06F6;
	sub seven.ar by uni06F7;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uni06F4;
	sub five.farsi by uni06F5;
	sub six.farsi by uni06F6;
	sub seven.farsi by uni06F7;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_9;
script arab;
language dflt;
lookup SUB_9;
language URD;
lookup SUB_9;
script latn;
language dflt;
lookup SUB_9;
";
tag = ss02;
},
{
code = "script DFLT;
language dflt;
lookup SUB_10 {
	sub zero.ar by uni06F0;
	sub one.ar by uni06F1;
	sub two.ar by uni06F2;
	sub three.ar by uni06F3;
	sub four.ar by uniF805;
	sub five.ar by uni06F5;
	sub six.ar by uni0666;
	sub seven.ar by uniF806;
	sub eight.ar by uni06F8;
	sub nine.ar by uni06F9;
	sub zero.farsi by uni06F0;
	sub one.farsi by uni06F1;
	sub two.farsi by uni06F2;
	sub three.farsi by uni06F3;
	sub four.farsi by uniF805;
	sub five.farsi by uni06F5;
	sub six.farsi by uni0666;
	sub seven.farsi by uniF806;
	sub eight.farsi by uni06F8;
	sub nine.farsi by uni06F9;
} SUB_10;
script arab;
language dflt;
lookup SUB_10;
language URD;
lookup SUB_10;
script latn;
language dflt;
lookup SUB_10;
";
tag = ss03;
},
{
code = "script DFLT;
language dflt;
lookup SUB_13 {
	sub f i by fi;
	sub f l by fl;
} SUB_13;
script arab;
language dflt;
lookup SUB_13;
language URD;
lookup SUB_13;
script latn;
language dflt;
lookup SUB_13;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_14 {
	sub uni064B uni0651 by uni0651064B.1;
	sub uni064C uni0651 by uniFC5E;
	sub uni064D uni0651 by uniFC5F;
	sub uni064E uni0651 by uniFC60;
	sub uni064F uni0651 by uniFC61;
	sub uni0650 uni0651 by uniFC62;
	sub uni0651 uni064B by uni0651064B.1;
	sub uni0651 uni064C by uniFC5E;
	sub uni0651 uni064D by uniFC5F;
	sub uni0651 uni064E by uniFC60;
	sub uni0651 uni064F by uniFC61;
	sub uni0651 uni0650 by uniFC62;
	sub uni0651 uni0652 by uni06510652;
	sub uni0651 uni0670 by uniFC63.isol;
	sub uni0652 uni0651 by uni06510652;
	sub uni0670 uni0651 by uniFC63.isol;
} SUB_14;
script arab;
language dflt;
lookup SUB_14;
language URD;
lookup SUB_14;
script latn;
language dflt;
lookup SUB_14;
";
tag = ccmp;
},
{
code = "script arab;
language dflt;
lookup SUB_16 {
	sub exclam by exclam.ar;
} SUB_16;
language URD;
lookup SUB_16;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_17 {
	sub uni0626 by uniFE8B;
	sub uni0628 by uniFE91;
	sub uni062A by uniFE97;
	sub uni062B by uniFE9B;
	sub uni062C by uniFE9F;
	sub uni062D by uniFEA3;
	sub uni062E by uniFEA7;
	sub uni0633 by uniFEB3;
	sub uni0634 by uniFEB7;
	sub uni0635 by uniFEBB;
	sub uni0636 by uniFEBF;
	sub uni0637 by uniFEC3;
	sub uni0638 by uniFEC7;
	sub uni0639 by uniFECB;
	sub uni063A by uniFECF;
	sub uni0641 by uniFED3;
	sub uni0642 by uniFED7;
	sub uni0643 by uniFEDB;
	sub uni0644 by uniFEDF;
	sub uni0645 by uniFEE3;
	sub uni0646 by uniFEE7;
	sub uni0647 by uniFEEB;
	sub uni0649 by uniFBE8;
	sub uni064A by uniFEF3;
	sub uni066E by uni066E.init;
	sub uni0679 by uniFB68;
	sub uni067E by uniFB58;
	sub uni0686 by uniFB7C;
	sub uni06A1 by uni06A1.init;
	sub uni06A4 by uniFB6C;
	sub uni06A9 by uniFB90;
	sub uni06AF by uniFB94;
	sub lamvabovear by lamvabovear.init;
	sub lamdotabovear by lamdotabovear.init;
	sub lamthreedotsabovear by lamthreedotsabovear.init;
	sub uni06BE by uniFBAC;
	sub uni06C1 by uniFBA8;
	sub uni06CC by uniFBFE;
	sub yehvabovear by yehvabovear.init;
} SUB_17;
script arab;
language dflt;
lookup SUB_17;
language URD;
lookup SUB_17;
script latn;
language dflt;
lookup SUB_17;
";
tag = init;
},
{
code = "script DFLT;
language dflt;
lookup SUB_18 {
	sub uni0626 by uniFE8C;
	sub uni0628 by uniFE92;
	sub uni062A by uniFE98;
	sub uni062B by uniFE9C;
	sub uni062C by uniFEA0;
	sub uni062D by uniFEA4;
	sub uni062E by uniFEA8;
	sub uni0633 by uniFEB4;
	sub uni0634 by uniFEB8;
	sub uni0635 by uniFEBC;
	sub uni0636 by uniFEC0;
	sub uni0637 by uniFEC4;
	sub uni0638 by uniFEC8;
	sub uni0639 by uniFECC;
	sub uni063A by uniFED0;
	sub uni0641 by uniFED4;
	sub uni0642 by uniFED8;
	sub uni0643 by uniFEDC;
	sub uni0644 by uniFEE0;
	sub uni0645 by uniFEE4;
	sub uni0646 by uniFEE8;
	sub uni0647 by uniFEEC;
	sub uni0649 by uniFBE9;
	sub uni064A by uniFEF4;
	sub uni066E by uni066E.medi;
	sub uni0679 by uniFB69;
	sub uni067E by uniFB59;
	sub uni0686 by uniFB7D;
	sub uni06A1 by uni06A1.medi;
	sub uni06A4 by uniFB6D;
	sub uni06A9 by uniFB91;
	sub uni06AF by uniFB95;
	sub lamvabovear by lamvabovear.medi;
	sub lamdotabovear by lamdotabovear.medi;
	sub lamthreedotsabovear by lamthreedotsabovear.medi;
	sub uni06BE by uniFBAD;
	sub uni06C1 by uniFBA9;
	sub uni06CC by uniFBFF;
	sub yehvabovear by yehvabovear.medi;
} SUB_18;
script arab;
language dflt;
lookup SUB_18;
language URD;
lookup SUB_18;
script latn;
language dflt;
lookup SUB_18;
";
tag = medi;
},
{
code = "script DFLT;
language dflt;
lookup SUB_19 {
	sub uni0622 by uniFE82;
	sub uni0623 by uniFE84;
	sub uni0624 by uniFE86;
	sub uni0625 by uniFE88;
	sub uni0626 by uniFE8A;
	sub uni0627 by uniFE8E;
	sub uni0628 by uniFE90;
	sub uni0629 by uniFE94;
	sub uni062A by uniFE96;
	sub uni062B by uniFE9A;
	sub uni062C by uniFE9E;
	sub uni062D by uniFEA2;
	sub uni062E by uniFEA6;
	sub uni062F by uniFEAA;
	sub uni0630 by uniFEAC;
	sub uni0631 by uniFEAE;
	sub uni0632 by uniFEB0;
	sub uni0633 by uniFEB2;
	sub uni0634 by uniFEB6;
	sub uni0635 by uniFEBA;
	sub uni0636 by uniFEBE;
	sub uni0637 by uniFEC2;
	sub uni0638 by uniFEC6;
	sub uni0639 by uniFECA;
	sub uni063A by uniFECE;
	sub uni0641 by uniFED2;
	sub uni0642 by uniFED6;
	sub uni0643 by uniFEDA;
	sub uni0644 by uniFEDE;
	sub uni0645 by uniFEE2;
	sub uni0646 by uniFEE6;
	sub uni0647 by uniFEEA;
	sub uni0648 by uniFEEE;
	sub uni0649 by uniFEF0;
	sub uni064A by uniFEF2;
	sub uni066E by uni066E.fina;
	sub uni0671 by uniFB51;
	sub uni0679 by uniFB67;
	sub uni067E by uniFB57;
	sub uni0686 by uniFB7B;
	sub uni0688 by uniFB89;
	sub uni0691 by uniFB8D;
	sub rehvabovear by rehvabovear.fina;
	sub uni0694 by rehdotbelowar.fina;
	sub uni0695 by rehvbelowar.fina;
	sub uni0698 by uniFB8B;
	sub uni06A1 by uni06A1.fina;
	sub uni06A4 by uniFB6B;
	sub uni06A9 by uniFB8F;
	sub uni06AF by uniFB93;
	sub lamvabovear by lamvabovear.fina;
	sub lamdotabovear by lamdotabovear.fina;
	sub lamthreedotsabovear by lamthreedotsabovear.fina;
	sub uni06BA by uniFB9F;
	sub uni06BE by uniFBAB;
	sub uni06C0 by uniFBA5;
	sub uni06C1 by uniFBA7;
	sub uni06C3 by uni06C3.fina;
	sub wawvabovear by wawvabovear.fina;
	sub wawtwodotsabovear by wawtwodotsabovear.fina;
	sub uni06CC by uniFBFD;
	sub yehvabovear by yehvabovear.fina;
	sub uni06D2 by uniFBAF;
	sub uni06D3 by uniFBB1;
	sub uni06D5 by uni06D5.fina;
	sub lam_alefvabovear by lam_alefvabovear.fina;
	sub uni06440671 by uni06440671.fina;
	sub uniFB58FE8A by uniFB59FE8A;
	sub uniFB58FEF0 by uniFB59FEF0;
	sub uniFB58FEF2 by uniFB59FEF2;
	sub uniFBFEFBFD by uniFBFFFBFD;
	sub uniFEF3FE8A by uniFEF4FE8A;
	sub yehvabove_alefMaksuraar by yehvabove_alefMaksuraar.fina;
	sub yehvabove_pehar by yehvabove_pehar.fina;
	sub yehvabove_yehHamzaabovear by yehvabove_yehHamzaabovear.fina;
	sub yehvabove_yehar by yehvabove_yehar.fina;
	sub yehvabove_yehvar by yehvabove_yehvar.fina;
	sub uniFC59 by uniFC95;
	sub uniFC5A by uniFC96;
	sub uniFEF5 by uniFEF6;
	sub uniFEF7 by uniFEF8;
	sub uniFEF9 by uniFEFA;
	sub uniFEFB by uniFEFC;
} SUB_19;
script arab;
language dflt;
lookup SUB_19;
language URD;
lookup SUB_19;
script latn;
language dflt;
lookup SUB_19;
";
tag = fina;
},
{
code = "script arab;
language dflt;
lookup SUB_20 {
	sub uni0627 uniFEDF uniFEE0 uniFEEA by uniFDF2;
	sub uniFEDF uniFEE0 uniFEEA by uniE15F;
} SUB_20;
lookup SUB_21 {
	sub lamvabovear.init uniFE8E by lam_alefvabovear;
	sub lamvabovear.medi uniFE8E by lam_alefvabovear.fina;
	sub uniFEDF uniFB51 by uni06440671;
	sub uniFEDF uniFE82 by uniFEF5;
	sub uniFEDF uniFE84 by uniFEF7;
	sub uniFEDF uniFE88 by uniFEF9;
	sub uniFEDF uniFE8E by uniFEFB;
	sub uniFEE0 uniFB51 by uni06440671.fina;
	sub uniFEE0 uniFE82 by uniFEF6;
	sub uniFEE0 uniFE84 by uniFEF8;
	sub uniFEE0 uniFE88 by uniFEFA;
	sub uniFEE0 uniFE8E by uniFEFC;
} SUB_21;
lookup SUB_22 {
	sub uni067E yehvabovear by yehvabove_pehar;
	sub uniFB58 uniFE8A by uniFB58FE8A;
	sub uniFB58 uniFEF0 by uniFB58FEF0;
	sub uniFB58 uniFEF2 by uniFB58FEF2;
	sub uniFB59 uniFE8A by uniFB59FE8A;
	sub uniFB59 uniFEF0 by uniFB59FEF0;
	sub uniFB59 uniFEF2 by uniFB59FEF2;
	sub uniFBA8 uniFE8A by uniFBA8FE8A;
	sub uniFBA8 uniFEF0 by uniFBA8FEF0;
	sub uniFBA8 uniFEF2 by uniFBA8FEF2;
	sub uniFBFE uniFBFD by uniFBFEFBFD;
	sub uniFBFF uniFBFD by uniFBFFFBFD;
	sub uniFE91 uniFE8A by uniFE91FE8A;
	sub uniFE91 uniFEF0 by uniFC09;
	sub uniFE91 uniFEF2 by uniFC0A;
	sub uniFED3 uniFEF2 by uniFC32;
	sub uniFEF3 uniFE8A by uniFEF3FE8A;
	sub uniFEF3 uniFEF0 by uniFC59;
	sub uniFEF3 uniFEF2 by uniFC5A;
	sub uniFEF4 uniFE8A by uniFEF4FE8A;
	sub uniFEF4 uniFEF0 by uniFC95;
	sub uniFEF4 uniFEF2 by uniFC96;
} SUB_22;
";
tag = rlig;
},
{
code = "script DFLT;
language dflt;
lookup POS_3 {
	sub one by onesuperior;
	sub two by twosuperior;
	sub three by threesuperior;
} POS_3;
lookup POS_4 {
	sub one slash two by onehalf;
	sub one slash four by onequarter;
	sub one fraction two by onehalf;
	sub one fraction four by onequarter;
	sub three slash four by threequarters;
	sub three fraction four by threequarters;
} POS_4;
lookup POS_5 {
	@POS_5_0_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_0_BT_0 [A a]' lookup POS_2;
	@POS_5_1_BT_0 = [zero one two three four five six seven eight nine];
	pos @POS_5_1_BT_0 [O o]' lookup POS_2;
} POS_5;
script arab;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
script latn;
language dflt;
lookup POS_3;
lookup POS_4;
lookup POS_5;
";
tag = mark;
},
{
code = "script DFLT;
language dflt;
lookup POS_6 {
	sub zero.tab by zero;
	sub one.tab by one;
	sub two.tab by two;
	sub three.tab by three;
	sub four.tab by four;
	sub five.tab by five;
	sub six.tab by six;
	sub seven.tab by seven;
	sub eight.tab by eight;
	sub nine.tab by nine;
} POS_6;
lookup POS_7 {
	sub zero by zero.tab;
	sub one by one.tab;
	sub two by two.tab;
	sub three by three.tab;
	sub four by four.tab;
	sub five by five.tab;
	sub six by six.tab;
	sub seven by seven.tab;
	sub eight by eight.tab;
	sub nine by nine.tab;
} POS_7;
script arab;
language dflt;
lookup POS_6;
lookup POS_7;
script latn;
language dflt;
lookup POS_6;
lookup POS_7;
";
tag = mkmk;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 869;
},
{
name = typoDescender;
value = -459;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 869;
},
{
name = winDescent;
value = 459;
},
{
name = hheaAscender;
value = 869;
},
{
name = hheaDescender;
value = -459;
},
{
name = strikeoutPosition;
value = 267;
},
{
name = strikeoutSize;
value = 45;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 48 0 0 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01253 4 37 8 31 2 21 5 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01257 2 45 6 34 0 26 3 4 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 11 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0123456 2432 2048 1408 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\01264 64 64 64 4 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01255 2 39 6 33 1 23 3 4 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    51,\012    51,\012    47,\012    47,\012    556,\012    0,\012    0,\012    556,\012    0,\012    0,\012    19,\012    19,\012    19,\012    19,\012    \"-160\",\012    \"-160\",\012    50,\012    50,\012    47,\012    47,\012    556,\012    0,\012    556,\012    360,\012    0,\012    \"-171\",\012    556,\012    \"-10\",\012    556,\012    367,\012    \"-9\",\012    \"-171\",\012    19,\012    19,\012    19,\012    19,\012    562,\012    239,\012    562,\012    239\012)";
}
);
iconName = Light;
id = m01;
metricValues = (
{
pos = 869;
},
{
pos = 699;
},
{
pos = 480;
},
{
},
{
pos = -459;
},
{
}
);
name = Light;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(458,-220,l),
(66,-220,l),
(66,511,l),
(458,511,l)
);
},
{
closed = 1;
nodes = (
(492,-254,l),
(492,545,l),
(31,545,l),
(31,-254,l)
);
},
{
closed = 1;
nodes = (
(286,-94,o),
(286,-80,qs),
(286,-65,o),
(266,-45,o),
(252,-45,qs),
(238,-45,o),
(219,-65,o),
(219,-80,qs),
(219,-94,o),
(238,-114,o),
(252,-114,qs),
(266,-114,o)
);
},
{
closed = 1;
nodes = (
(236,16,qs),
(269,16,ls),
(273,16,o),
(273,22,qs),
(273,55,ls),
(273,85,o),
(291,100,qs),
(352,149,o),
(369,168,qs),
(412,214,o),
(412,262,qs),
(412,326,o),
(376,362,qs),
(336,405,o),
(256,405,qs),
(199,405,o),
(146,378,qs),
(111,359,o),
(117,338,qs),
(121,324,ls),
(124,316,o),
(128,316,qs),
(133,316,o),
(139,322,q),
(196,361,o),
(257,361,qs),
(308,361,o),
(366,309,o),
(366,262,qs),
(366,209,o),
(306,160,qs),
(257,121,o),
(232,87,o),
(232,59,qs),
(232,22,ls),
(232,16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
51 20 2 9 7 1 76 0 7 6 9 6 7 9 128 0 9 5 6 9 5 126 0 2 10 1 1 8 2 1 103 0 8 0 6 7 8 6 105 0 5 11 1 4 0 5 4 105 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 9 8 0 0 54 53 41 39 34 32 30 28 15 13 8 19 9 19 7 6 5 4 0 3 0 3 17 12 6 23 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = ".notdef";
},
{
glyphname = uni000D;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni000D;
unicode = 13;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 181;
}
);
note = space;
unicode = (32,160);
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,556,o),
(50,556,qs),
(55,556,ls),
(73,556,o),
(95,527,o),
(95,503,qs),
(91,141,ls),
(91,135,o),
(87,135,qs),
(52,135,ls),
(47,135,o),
(47,141,qs),
(45,549,ls)
);
},
{
closed = 1;
nodes = (
(111,44,o),
(111,27,qs),
(111,9,o),
(87,-16,o),
(70,-16,qs),
(53,-16,o),
(29,9,o),
(29,27,qs),
(29,44,o),
(53,69,o),
(70,69,qs),
(87,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 0 2 0 1 1 76 0 0 0 1 97 0 1 1 39 77 4 1 2 2 3 97 0 3 3 46 3 78 14 13 20 18 13 24 14 24 53 18 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 141;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,556,o),
(36,556,qs),
(43,556,ls),
(88,556,o),
(84,503,qs),
(76,388,ls),
(76,382,o),
(71,382,qs),
(49,382,ls),
(44,382,o),
(44,388,qs),
(31,549,ls)
);
},
{
closed = 1;
nodes = (
(130,556,o),
(135,556,qs),
(142,556,ls),
(187,556,o),
(183,503,qs),
(175,388,ls),
(175,382,o),
(170,382,qs),
(148,382,ls),
(143,382,o),
(143,388,qs),
(130,549,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
18 17 6 5 4 0 1 1 76 2 1 0 0 1 97 3 1 1 1 39 0 78 36 21 36 18 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 218;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,159,o),
(29,165,qs),
(37,198,ls),
(39,204,o),
(44,204,qs),
(118,204,l),
(155,352,l),
(83,352,ls),
(76,352,o),
(78,358,qs),
(86,391,ls),
(87,397,o),
(93,397,qs),
(167,397,l),
(206,549,l),
(206,550,ls),
(207,556,o),
(211,556,qs),
(220,556,ls),
(260,556,o),
(247,509,qs),
(219,397,l),
(376,397,l),
(415,549,l),
(415,550,ls),
(416,556,o),
(420,556,qs),
(429,556,ls),
(468,556,o),
(456,509,qs),
(427,397,l),
(500,397,ls),
(505,397,o),
(505,391,q),
(496,358,ls),
(495,352,o),
(490,352,qs),
(416,352,l),
(379,204,l),
(451,204,ls),
(458,204,o),
(456,198,qs),
(449,165,ls),
(447,159,o),
(441,159,qs),
(366,159,l),
(327,6,l),
(327,0,o),
(322,0,qs),
(281,0,ls),
(275,0,o),
(277,6,qs),
(315,159,l),
(158,159,l),
(119,6,ls),
(118,0,o),
(114,0,qs),
(73,0,ls),
(66,0,o),
(68,6,qs),
(106,159,l),
(34,159,ls)
);
},
{
closed = 1;
nodes = (
(364,352,l),
(208,352,l),
(170,204,l),
(327,204,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
27 1 5 6 1 76 10 8 2 6 14 11 2 5 4 6 5 104 17 15 12 3 4 16 13 3 3 1 0 4 1 103 9 1 7 7 39 77 2 1 0 0 40 0 78 62 62 0 0 62 65 62 65 64 63 0 61 0 60 56 55 54 52 48 47 43 41 20 34 21 17 36 19 34 19 34 18 9 31 
CALL[ ]	/* CallFunction */";
};
width = 529;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,299,o),
(46,366,o),
(46,422,qs),
(46,476,o),
(84,514,qs),
(129,560,o),
(208,566,q),
(208,616,ls),
(208,622,o),
(213,622,qs),
(244,622,ls),
(249,622,o),
(249,616,qs),
(249,566,l),
(306,562,o),
(363,536,qs),
(404,515,o),
(398,489,qs),
(394,474,ls),
(392,466,o),
(387,466,qs),
(383,466,o),
(374,472,qs),
(317,511,o),
(249,518,q),
(249,300,l),
(341,268,o),
(409,206,o),
(409,155,qs),
(409,92,o),
(372,49,qs),
(329,0,o),
(249,-9,q),
(249,-59,ls),
(249,-65,o),
(244,-65,qs),
(213,-65,ls),
(208,-65,o),
(208,-59,qs),
(208,-11,l),
(137,-9,o),
(30,62,o),
(30,108,qs),
(30,127,o),
(42,127,qs),
(50,127,o),
(57,117,qs),
(116,38,o),
(208,36,q),
(208,268,l)
);
},
{
closed = 1;
nodes = (
(301,46,o),
(361,104,o),
(361,146,qs),
(361,181,o),
(310,229,o),
(249,253,q),
(249,39,l)
);
},
{
closed = 1;
nodes = (
(156,516,o),
(94,464,o),
(94,424,qs),
(94,387,o),
(146,338,o),
(208,315,q),
(208,519,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
42 41 36 3 5 6 24 1 7 5 57 50 49 23 4 1 4 56 1 0 1 16 1 2 0 15 10 2 3 2 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 6 5 6 133 0 7 5 4 5 7 4 128 0 4 1 5 4 1 126 0 1 0 5 1 0 126 0 3 2 3 134 0 5 5 39 77 0 0 0 2 97 0 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 5 6 133 0 5 7 5 133 0 7 4 7 133 0 4 1 4 133 0 1 0 1 133 0 3 2 3 134 0 0 0 2 97 0 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
63 62 19 21 46 19 19 34 16 8 9 29 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,92,o),
(637,162,qs),
(637,232,o),
(598,297,o),
(555,297,qs),
(471,297,o),
(471,162,qs),
(471,93,o),
(511,29,o),
(555,29,qs),
(598,29,o)
);
},
{
closed = 1;
nodes = (
(249,324,o),
(249,394,qs),
(249,464,o),
(209,528,o),
(166,528,qs),
(123,528,o),
(83,464,o),
(83,394,qs),
(83,324,o),
(123,261,o),
(166,261,qs),
(210,261,o)
);
},
{
closed = 1;
nodes = (
(185,6,qs),
(484,549,l),
(487,556,o),
(491,556,qs),
(497,556,ls),
(515,556,o),
(522,527,o),
(509,503,qs),
(237,6,ls),
(234,0,o),
(229,0,qs),
(187,0,ls),
(182,0,o)
);
},
{
closed = 1;
nodes = (
(465,32,qs),
(427,77,o),
(427,162,qs),
(427,236,o),
(456,282,qs),
(491,335,o),
(555,335,qs),
(610,335,o),
(644,294,qs),
(682,247,o),
(682,162,qs),
(682,88,o),
(653,43,qs),
(619,-9,o),
(555,-9,qs),
(498,-9,o)
);
},
{
closed = 1;
nodes = (
(76,263,qs),
(38,309,o),
(38,394,qs),
(38,468,o),
(68,513,qs),
(103,567,o),
(166,567,qs),
(221,567,o),
(255,525,qs),
(293,479,o),
(293,394,qs),
(293,320,o),
(264,275,qs),
(231,223,o),
(166,223,qs),
(110,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 0 3 3 9 97 0 9 9 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 49 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 39 77 12 1 4 4 40 77 10 1 0 0 6 97 13 1 6 6 49 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
53 52 37 36 24 23 12 11 1 0 61 59 52 67 53 67 45 43 36 51 37 51 32 29 23 35 24 35 18 16 11 22 12 22 6 4 0 10 1 10 15 9 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,290,o),
(447,290,qs),
(478,290,ls),
(486,290,o),
(482,283,qs),
(389,127,l),
(491,8,l),
(496,0,o),
(488,0,qs),
(449,0,ls),
(437,0,o),
(429,9,qs),
(364,86,l),
(295,-6,o),
(202,-6,qs),
(138,-6,o),
(94,31,qs),
(44,74,o),
(44,146,qs),
(44,196,o),
(102,271,o),
(169,309,q),
(128,354,o),
(95,414,o),
(95,446,qs),
(95,497,o),
(129,529,qs),
(167,567,o),
(234,567,qs),
(286,567,o),
(322,539,qs),
(365,507,o),
(365,453,qs),
(365,367,o),
(238,298,q),
(360,159,l),
(431,280,ls)
);
},
{
closed = 1;
nodes = (
(315,452,qs),
(315,482,o),
(269,522,o),
(234,522,qs),
(194,522,o),
(145,482,o),
(145,449,qs),
(145,401,o),
(212,331,q),
(315,385,o)
);
},
{
closed = 1;
nodes = (
(140,245,o),
(93,188,o),
(93,151,qs),
(93,103,o),
(119,73,qs),
(149,40,o),
(205,40,qs),
(244,40,o),
(302,74,o),
(335,117,q),
(197,276,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
14 1 2 3 4 57 30 23 3 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 49 77 0 5 5 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 46 77 0 5 5 1 97 2 1 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 1 97 2 1 1 1 49 77 0 5 5 1 97 2 1 1 1 49 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 0 97 0 0 0 39 77 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 4 3 0 4 105 0 3 3 2 97 0 2 2 40 77 0 5 5 1 97 0 1 1 49 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 38 52 51 44 38 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,556,o),
(36,556,qs),
(43,556,ls),
(88,556,o),
(84,503,qs),
(76,388,ls),
(76,382,o),
(71,382,qs),
(49,382,ls),
(44,382,o),
(44,388,qs),
(31,549,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
6 5 2 0 1 1 76 0 0 0 1 97 0 1 1 39 0 78 36 18 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 118;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,533,qs),
(165,649,o),
(255,697,qs),
(264,701,o),
(264,691,qs),
(264,670,o),
(256,650,o),
(241,634,qs),
(110,508,o),
(112,277,qs),
(110,45,o),
(241,-81,qs),
(256,-97,o),
(264,-117,o),
(264,-138,qs),
(264,-148,o),
(255,-144,qs),
(177,-102,o),
(126,-8,qs),
(60,112,o),
(62,277,qs),
(61,421,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,20,qs),
(152,-95,o),
(61,-144,qs),
(52,-148,o),
(52,-138,qs),
(52,-117,o),
(60,-97,o),
(76,-81,qs),
(207,45,o),
(204,277,qs),
(207,508,o),
(76,634,qs),
(60,650,o),
(52,670,o),
(52,691,qs),
(52,701,o),
(61,697,qs),
(139,655,o),
(191,561,qs),
(256,441,o),
(255,277,qs),
(256,132,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
17 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,416,o),
(36,423,qs),
(51,466,ls),
(52,470,o),
(57,469,q),
(147,432,l),
(140,533,ls),
(140,538,o),
(145,538,qs),
(198,538,ls),
(204,538,o),
(204,533,qs),
(197,432,l),
(286,469,l),
(291,470,o),
(293,466,q),
(307,423,ls),
(309,416,o),
(304,414,qs),
(210,388,l),
(271,310,ls),
(274,306,o),
(269,303,qs),
(231,280,ls),
(226,277,o),
(224,281,qs),
(170,368,l),
(120,281,ls),
(118,277,o),
(114,280,q),
(113,280,l),
(75,303,l),
(70,305,o),
(73,310,q),
(134,388,l),
(40,414,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
30 29 28 23 22 21 15 11 8 9 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 39 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 25 1 9 22 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,249,o),
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(169,295,l),
(169,437,ls),
(169,443,o),
(174,443,qs),
(215,443,o),
(215,397,qs),
(215,295,l),
(339,295,ls),
(344,295,o),
(344,289,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(215,249,l),
(215,107,ls),
(215,101,o),
(210,101,qs),
(174,101,ls),
(169,101,o),
(169,107,qs),
(169,249,l),
(46,249,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
19 1 2 3 24 23 11 10 4 1 2 6 1 2 0 1 3 76 0 3 2 0 3 89 4 1 2 6 5 2 1 0 2 1 103 0 3 3 0 95 0 0 3 0 79 0 0 0 26 0 26 19 18 21 19 19 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,43,o),
(116,24,qs),
(116,-7,o),
(79,-75,o),
(47,-101,q),
(46,-103,o),
(42,-100,qs),
(27,-86,o),
(45,-61,qs),
(64,-34,o),
(69,-16,q),
(53,-13,o),
(34,11,o),
(34,26,qs),
(34,43,o),
(58,68,o),
(75,68,qs),
(92,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 17 1 17 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,186,qs),
(41,221,ls),
(41,227,o),
(46,227,qs),
(260,227,ls),
(265,227,o),
(265,221,qs),
(265,186,ls),
(265,180,o),
(260,180,qs),
(46,180,ls),
(41,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,44,o),
(109,27,qs),
(109,9,o),
(85,-16,o),
(68,-16,qs),
(51,-16,o),
(27,9,o),
(27,27,qs),
(27,44,o),
(51,69,o),
(68,69,qs),
(85,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 46 1 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,6,qs),
(234,549,ls),
(237,556,o),
(241,556,qs),
(247,556,ls),
(265,556,o),
(275,527,o),
(266,503,qs),
(56,6,ls),
(53,0,o),
(48,0,qs),
(6,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 1 0 9 6 0 12 1 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 271;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,81,qs),
(394,138,o),
(394,277,qs),
(394,401,o),
(359,460,qs),
(324,519,o),
(250,519,qs),
(185,519,o),
(150,475,qs),
(105,417,o),
(105,277,qs),
(105,154,o),
(141,95,qs),
(176,37,o),
(250,37,qs),
(314,37,o)
);
},
{
closed = 1;
nodes = (
(55,277,qs),
(55,410,o),
(99,483,qs),
(149,567,o),
(250,567,qs),
(337,567,o),
(387,503,qs),
(444,428,o),
(444,277,qs),
(444,-10,o),
(250,-10,qs),
(55,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,471,ls),
(43,469,o),
(43,474,qs),
(43,513,ls),
(43,522,o),
(50,524,qs),
(113,547,ls),
(138,556,o),
(159,556,qs),
(167,556,ls),
(203,556,o),
(203,508,qs),
(203,47,l),
(284,47,ls),
(314,47,o),
(314,18,qs),
(314,7,ls),
(314,0,o),
(305,0,qs),
(46,0,ls),
(41,0,o),
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(152,47,l),
(152,509,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
26 23 2 0 3 4 3 2 1 0 2 76 0 3 3 39 77 2 1 0 0 1 95 0 1 1 40 1 78 50 35 37 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,47,o),
(381,18,qs),
(381,7,ls),
(381,0,o),
(374,0,qs),
(47,0,ls),
(42,0,o),
(42,6,qs),
(42,90,o),
(92,151,qs),
(123,188,o),
(200,240,qs),
(277,293,o),
(329,361,o),
(329,409,qs),
(329,458,o),
(301,487,qs),
(269,519,o),
(208,519,qs),
(142,519,o),
(76,472,qs),
(68,466,o),
(63,466,qs),
(59,466,o),
(56,474,qs),
(51,489,ls),
(44,513,o),
(83,533,qs),
(145,567,o),
(211,567,qs),
(286,567,o),
(330,530,qs),
(379,489,o),
(379,409,qs),
(379,342,o),
(331,288,qs),
(302,256,o),
(227,205,qs),
(152,154,o),
(98,89,o),
(95,47,q),
(351,47,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 39 77 5 1 4 4 3 95 0 3 3 40 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 40 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 44 34 37 42 6 9 26 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,259,qs),
(388,219,o),
(388,151,qs),
(388,85,o),
(344,41,qs),
(292,-10,o),
(205,-10,qs),
(136,-10,o),
(29,60,o),
(29,106,qs),
(29,125,o),
(41,125,qs),
(48,125,o),
(55,115,qs),
(109,37,o),
(201,37,qs),
(258,37,o),
(295,65,qs),
(337,97,o),
(337,151,qs),
(337,209,o),
(296,240,qs),
(257,270,o),
(192,270,qs),
(140,270,ls),
(110,270,o),
(110,298,qs),
(110,308,ls),
(110,316,o),
(118,316,qs),
(206,316,ls),
(322,316,o),
(322,419,qs),
(322,519,o),
(199,519,qs),
(134,519,o),
(67,472,qs),
(58,466,o),
(54,466,qs),
(50,466,o),
(47,474,qs),
(42,489,ls),
(38,502,o),
(51,520,o),
(74,533,qs),
(132,567,o),
(199,567,qs),
(274,567,o),
(319,533,qs),
(372,494,o),
(372,423,qs),
(372,324,o),
(276,291,q),
(312,286,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 39 77 0 5 5 7 97 0 7 7 46 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 5 7 97 0 7 7 46 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 38 51 50 34 38 37 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,139,o),
(19,145,qs),
(19,171,ls),
(19,187,o),
(29,202,qs),
(259,539,ls),
(270,556,o),
(286,556,qs),
(300,556,ls),
(332,556,o),
(332,518,qs),
(332,186,l),
(376,186,ls),
(406,186,o),
(406,157,qs),
(406,146,ls),
(406,139,o),
(398,139,qs),
(332,139,l),
(332,6,ls),
(332,0,o),
(327,0,qs),
(286,0,ls),
(281,0,o),
(281,6,qs),
(281,139,l),
(24,139,ls)
);
},
{
closed = 1;
nodes = (
(281,498,l),
(70,186,l),
(281,186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 2 3 24 1 1 2 6 1 2 0 1 3 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 39 77 0 0 0 40 0 78 27 27 0 0 27 29 27 29 0 26 0 26 50 35 35 19 8 9 26 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,344,o),
(216,344,qs),
(292,344,o),
(339,303,qs),
(392,257,o),
(392,172,qs),
(392,97,o),
(346,47,qs),
(293,-10,o),
(205,-10,qs),
(133,-10,o),
(84,26,qs),
(34,63,o),
(34,106,qs),
(34,125,o),
(47,125,qs),
(53,125,o),
(60,115,qs),
(113,37,o),
(201,37,qs),
(260,37,o),
(298,69,qs),
(341,106,o),
(341,168,qs),
(341,298,o),
(214,298,qs),
(146,298,o),
(72,270,q),
(62,265,o),
(62,276,qs),
(62,549,ls),
(62,556,o),
(67,556,qs),
(329,556,ls),
(359,556,o),
(359,527,qs),
(359,516,ls),
(359,508,o),
(351,508,qs),
(112,508,l),
(112,329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 1 40 1 2 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 3 2 4 3 128 0 0 0 1 95 0 1 1 39 77 0 2 2 6 97 0 6 6 42 77 0 3 3 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 39 77 0 3 3 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 38 35 32 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,348,qs),
(309,348,o),
(355,304,qs),
(409,254,o),
(409,174,qs),
(409,92,o),
(363,43,qs),
(314,-10,o),
(228,-10,qs),
(155,-10,o),
(106,33,qs),
(48,83,o),
(48,167,qs),
(48,207,o),
(73,279,o),
(109,340,qs),
(241,558,ls),
(247,567,o),
(253,567,qs),
(270,567,o),
(275,549,qs),
(282,528,o),
(264,497,qs),
(162,328,l),
(197,348,o)
);
},
{
closed = 1;
nodes = (
(320,70,qs),
(358,106,o),
(358,169,qs),
(358,223,o),
(328,258,qs),
(293,301,o),
(229,301,qs),
(175,301,o),
(139,269,qs),
(98,232,o),
(98,169,qs),
(98,114,o),
(128,79,qs),
(163,37,o),
(229,37,qs),
(285,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 0 0 39 77 0 4 4 2 97 0 2 2 42 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 39 77 5 1 3 3 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 20 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,514,qs),
(31,549,ls),
(31,556,o),
(36,556,qs),
(352,556,ls),
(382,556,o),
(382,527,qs),
(382,518,ls),
(382,499,o),
(372,478,qs),
(155,11,ls),
(150,0,o),
(139,0,qs),
(100,0,ls),
(94,0,o),
(96,6,q),
(330,508,l),
(36,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
16 15 2 2 1 1 76 3 1 2 2 1 95 0 1 1 39 77 0 0 0 40 0 78 0 0 0 18 0 18 38 50 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,71,qs),
(158,36,o),
(223,36,qs),
(278,36,o),
(313,63,qs),
(354,95,o),
(354,153,qs),
(354,204,o),
(318,238,qs),
(280,274,o),
(223,274,qs),
(173,274,o),
(137,246,qs),
(92,212,o),
(92,153,qs),
(92,102,o)
);
},
{
closed = 1;
nodes = (
(136,351,qs),
(169,319,o),
(223,319,qs),
(272,319,o),
(337,375,o),
(337,418,qs),
(337,463,o),
(307,490,qs),
(275,519,o),
(223,519,qs),
(171,519,o),
(108,464,o),
(108,418,qs),
(108,379,o)
);
},
{
closed = 1;
nodes = (
(60,424,qs),
(60,484,o),
(103,524,qs),
(149,567,o),
(223,567,qs),
(286,567,o),
(331,533,qs),
(385,493,o),
(385,424,qs),
(385,334,o),
(294,297,q),
(346,279,o),
(404,203,o),
(404,153,qs),
(404,85,o),
(361,40,qs),
(310,-11,o),
(223,-11,qs),
(146,-11,o),
(97,29,qs),
(41,74,o),
(41,153,qs),
(41,203,o),
(99,279,o),
(151,297,q),
(60,334,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 39 77 0 1 1 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 1 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 41 37 37 38 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,209,qs),
(144,209,o),
(97,251,qs),
(41,300,o),
(41,383,qs),
(41,463,o),
(88,513,qs),
(139,567,o),
(225,567,qs),
(297,567,o),
(345,524,qs),
(402,474,o),
(402,389,qs),
(402,349,o),
(376,277,o),
(340,217,qs),
(209,-1,l),
(205,-10,o),
(196,-10,qs),
(177,-10,o),
(170,32,o),
(185,58,qs),
(289,232,l),
(258,209,o)
);
},
{
closed = 1;
nodes = (
(310,288,qs),
(350,325,o),
(350,388,qs),
(350,443,o),
(322,478,qs),
(288,519,o),
(224,519,qs),
(167,519,o),
(131,487,qs),
(92,450,o),
(92,388,qs),
(92,330,o),
(121,296,qs),
(156,256,o),
(220,256,qs),
(274,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 39 77 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 40 35 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,264,o),
(119,247,qs),
(119,229,o),
(95,204,o),
(78,204,qs),
(61,204,o),
(37,229,o),
(37,247,qs),
(37,264,o),
(61,289,o),
(78,289,qs),
(95,289,o)
);
},
{
closed = 1;
nodes = (
(119,44,o),
(119,27,qs),
(119,9,o),
(95,-16,o),
(78,-16,qs),
(61,-16,o),
(37,9,o),
(37,27,qs),
(37,44,o),
(61,69,o),
(78,69,qs),
(95,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
4 1 0 0 1 2 0 1 105 5 1 2 2 3 97 0 3 3 46 3 78 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,229,o),
(44,246,qs),
(44,264,o),
(68,288,o),
(85,288,qs),
(102,288,o),
(126,263,o),
(126,246,qs),
(126,229,o),
(101,204,o),
(85,204,qs),
(68,204,o)
);
},
{
closed = 1;
nodes = (
(126,43,o),
(126,24,qs),
(126,-7,o),
(89,-75,o),
(57,-101,q),
(56,-103,o),
(52,-100,qs),
(37,-86,o),
(55,-61,qs),
(74,-34,o),
(79,-16,q),
(63,-13,o),
(44,11,o),
(44,26,qs),
(44,43,o),
(68,68,o),
(85,68,qs),
(102,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
18 1 2 73 4 1 2 0 2 134 0 1 0 0 1 89 0 1 1 0 97 3 1 0 1 0 81 13 12 1 0 12 29 13 29 7 5 0 11 1 11 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 157;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,154,o),
(400,115,qs),
(400,108,ls),
(400,99,o),
(394,102,qs),
(46,246,ls),
(41,248,o),
(41,254,qs),
(41,287,ls),
(41,292,o),
(46,295,q),
(394,438,ls),
(400,441,o),
(400,433,qs),
(400,398,ls),
(400,387,o),
(387,381,qs),
(110,272,l),
(364,169,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,339,qs),
(41,374,ls),
(41,379,o),
(46,379,qs),
(305,379,ls),
(344,379,o),
(344,344,qs),
(344,339,ls),
(344,333,o),
(339,333,qs),
(46,333,ls),
(41,333,o)
);
},
{
closed = 1;
nodes = (
(41,165,qs),
(41,200,ls),
(41,206,o),
(46,206,qs),
(305,206,ls),
(344,206,o),
(344,170,qs),
(344,165,ls),
(344,159,o),
(339,159,qs),
(46,159,ls),
(41,159,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
10 9 3 3 0 1 22 21 15 3 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 99 0 0 0 1 95 0 1 1 42 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 99 0 0 0 1 95 0 1 1 42 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
36 21 36 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,387,o),
(48,398,qs),
(48,433,ls),
(48,441,o),
(55,438,qs),
(403,295,l),
(408,292,o),
(408,287,qs),
(408,254,ls),
(408,248,o),
(403,246,qs),
(55,102,ls),
(48,99,o),
(48,108,qs),
(48,115,ls),
(48,154,o),
(84,169,qs),
(338,272,l),
(62,381,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
14 5 1 50 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,210,o),
(168,233,qs),
(182,253,o),
(220,284,qs),
(269,322,o),
(302,373,o),
(302,409,qs),
(302,456,o),
(274,485,qs),
(242,518,o),
(181,518,qs),
(113,518,o),
(50,474,qs),
(43,469,o),
(37,469,qs),
(32,469,o),
(30,477,qs),
(25,493,ls),
(18,516,o),
(57,537,qs),
(116,567,o),
(180,567,qs),
(257,567,o),
(302,531,qs),
(353,489,o),
(353,409,qs),
(353,360,o),
(316,315,qs),
(294,289,o),
(219,228,qs),
(199,212,o),
(199,179,qs),
(199,141,ls),
(199,135,o),
(194,135,qs),
(158,135,ls),
(153,135,o),
(153,141,qs),
(153,183,ls)
);
},
{
closed = 1;
nodes = (
(216,44,o),
(216,27,qs),
(216,9,o),
(192,-16,o),
(175,-16,qs),
(158,-16,o),
(134,9,o),
(134,27,qs),
(134,44,o),
(158,69,o),
(175,69,qs),
(192,69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
5 0 2 0 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 3 0 3 2 0 128 0 0 4 3 0 4 126 0 3 3 1 97 0 1 1 39 77 6 1 4 4 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 3 0 3 2 0 128 0 0 4 3 0 4 126 0 1 0 3 2 1 3 105 6 1 4 4 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
40 39 46 44 39 50 40 50 34 37 44 18 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(459,123,qs),
(502,166,o),
(502,246,qs),
(502,298,o),
(476,329,qs),
(446,366,o),
(389,366,qs),
(332,366,o),
(294,327,qs),
(251,282,o),
(251,207,qs),
(251,150,o),
(309,85,o),
(359,85,qs),
(421,85,o)
);
},
{
closed = 1;
nodes = (
(396,37,o),
(355,37,qs),
(295,37,o),
(252,80,qs),
(200,131,o),
(200,214,qs),
(200,292,o),
(248,348,qs),
(304,413,o),
(391,413,qs),
(470,413,o),
(509,354,q),
(514,404,o),
(551,404,qs),
(560,404,ls),
(565,404,o),
(565,399,qs),
(543,162,ls),
(540,133,o),
(540,119,qs),
(540,83,o),
(574,83,qs),
(615,83,o),
(640,121,qs),
(672,171,o),
(672,275,qs),
(672,383,o),
(604,449,qs),
(529,523,o),
(400,523,qs),
(276,523,o),
(194,447,qs),
(100,361,o),
(100,221,qs),
(100,93,o),
(174,13,qs),
(257,-78,o),
(400,-78,qs),
(526,-78,o),
(607,-17,q),
(608,-17,o),
(609,-15,q),
(618,-9,o),
(623,-9,qs),
(631,-9,o),
(631,-21,qs),
(631,-47,o),
(574,-80,qs),
(496,-124,o),
(394,-124,qs),
(252,-124,o),
(158,-41,qs),
(48,56,o),
(48,224,qs),
(48,358,o),
(136,455,qs),
(238,568,o),
(397,568,qs),
(528,568,o),
(617,500,qs),
(724,419,o),
(724,277,qs),
(724,174,o),
(686,111,qs),
(643,38,o),
(564,38,qs),
(533,38,o),
(489,78,o),
(487,108,q),
(468,76,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
72 15 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 0 4 6 4 101 0 7 7 3 97 0 3 3 39 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 9 10 1 10 9 1 128 0 5 2 6 2 5 6 128 0 3 0 7 10 3 7 105 0 10 0 1 0 10 1 105 8 12 2 0 11 1 2 5 0 2 106 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 83 81 75 73 71 69 63 61 55 53 47 45 40 39 35 33 27 25 19 17 8 6 0 14 1 14 13 9 22 
CALL[ ]	/* CallFunction */";
};
width = 771;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
1 1 0 3 1 76 5 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 21 18 15 12 9 6 4 3 0 2 0 2 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,47,o),
(399,161,qs),
(399,206,o),
(373,235,qs),
(339,271,o),
(273,271,qs),
(123,271,l),
(123,47,l),
(272,47,ls)
);
},
{
closed = 1;
nodes = (
(323,317,o),
(376,370,o),
(376,418,qs),
(376,508,o),
(267,508,qs),
(123,508,l),
(123,317,l),
(276,317,ls)
);
},
{
closed = 1;
nodes = (
(413,253,qs),
(451,214,o),
(451,157,qs),
(451,89,o),
(411,48,qs),
(365,0,o),
(278,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(263,556,ls),
(334,556,o),
(376,524,qs),
(425,488,o),
(425,419,qs),
(425,327,o),
(338,295,q),
(383,286,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
26 1 2 4 27 1 5 1 2 76 7 1 3 0 0 1 3 0 103 0 2 2 4 95 0 4 4 39 77 6 1 1 1 5 95 0 5 5 40 5 78 9 9 0 0 31 29 24 22 9 16 9 15 12 10 0 8 0 7 33 8 9 23 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,55,qs),
(57,133,o),
(57,278,qs),
(57,401,o),
(119,479,qs),
(189,567,o),
(310,567,qs),
(378,567,o),
(444,534,qs),
(484,515,o),
(478,489,qs),
(474,473,ls),
(472,464,o),
(466,464,qs),
(464,464,o),
(454,471,qs),
(386,519,o),
(309,519,qs),
(221,519,o),
(168,463,qs),
(106,397,o),
(106,276,qs),
(106,170,o),
(153,108,qs),
(206,36,o),
(306,36,qs),
(409,36,o),
(464,115,qs),
(470,125,o),
(476,125,qs),
(489,125,o),
(489,109,qs),
(489,77,o),
(452,42,qs),
(396,-11,o),
(300,-11,qs),
(197,-11,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 6 1 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 5 0 3 4 5 3 105 0 2 2 0 97 6 1 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
1 0 30 28 23 21 19 17 11 9 6 5 0 36 1 36 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,47,o),
(445,284,qs),
(445,397,o),
(396,451,qs),
(343,508,o),
(221,508,qs),
(123,508,l),
(123,47,l),
(226,47,ls)
);
},
{
closed = 1;
nodes = (
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(227,556,ls),
(350,556,o),
(418,495,qs),
(496,425,o),
(496,286,qs),
(496,151,o),
(429,78,qs),
(358,0,o),
(220,0,qs),
(78,0,ls),
(73,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
21 1 0 3 22 1 2 1 2 76 0 0 0 3 95 0 3 3 39 77 4 1 1 1 2 95 0 2 2 40 2 78 0 0 19 17 11 9 0 8 0 7 33 5 9 23 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,47,o),
(372,18,qs),
(372,7,ls),
(372,0,o),
(364,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,509,o),
(354,509,qs),
(124,509,l),
(124,298,l),
(314,298,ls),
(344,298,o),
(344,269,qs),
(344,257,ls),
(344,251,o),
(336,251,qs),
(124,251,l),
(124,47,l),
(342,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
18 1 2 3 19 1 4 5 2 76 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 6 1 5 5 4 95 0 4 4 40 4 78 0 0 0 27 0 26 37 35 33 35 33 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,508,o),
(354,508,qs),
(123,508,l),
(123,298,l),
(314,298,ls),
(344,298,o),
(344,270,qs),
(344,258,ls),
(344,251,o),
(336,251,qs),
(123,251,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
17 1 2 3 23 18 2 4 0 2 76 0 1 0 0 4 1 0 103 0 2 2 3 95 0 3 3 39 77 0 4 4 40 4 78 21 35 33 35 32 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(328,238,ls),
(298,238,o),
(298,267,qs),
(298,277,ls),
(298,284,o),
(305,284,qs),
(504,284,ls),
(509,284,o),
(509,278,qs),
(509,105,ls),
(509,83,o),
(493,68,qs),
(457,31,o),
(357,-11,o),
(305,-11,qs),
(201,-11,o),
(134,58,qs),
(57,138,o),
(57,278,qs),
(57,400,o),
(117,477,qs),
(187,567,o),
(310,567,qs),
(388,567,o),
(454,534,qs),
(494,515,o),
(488,489,qs),
(484,473,ls),
(482,464,o),
(476,464,qs),
(472,464,o),
(464,471,q),
(397,519,o),
(310,519,qs),
(220,519,o),
(167,464,qs),
(106,400,o),
(106,276,qs),
(106,170,o),
(153,108,qs),
(206,36,o),
(306,36,qs),
(397,36,o),
(459,96,q),
(459,238,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
35 1 6 5 0 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 0 6 0 5 6 103 0 1 1 3 97 0 3 3 39 77 0 0 0 4 97 0 4 4 46 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 5 1 2 5 128 0 3 0 1 2 3 1 105 0 5 0 6 0 5 6 103 0 0 0 4 97 0 4 4 46 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 39 38 37 34 38 33 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(83,556,ls),
(101,556,o),
(123,527,o),
(123,503,qs),
(123,298,l),
(400,298,l),
(400,549,ls),
(400,556,o),
(405,556,qs),
(409,556,ls),
(427,556,o),
(450,527,o),
(450,503,qs),
(450,6,ls),
(450,0,o),
(445,0,qs),
(405,0,ls),
(400,0,o),
(400,6,qs),
(400,252,l),
(123,252,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
29 24 7 2 4 1 0 1 76 0 3 0 0 1 3 0 103 4 1 2 2 39 77 5 1 1 1 40 1 78 20 51 18 53 19 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(82,556,ls),
(101,556,o),
(124,527,o),
(124,504,qs),
(124,6,ls),
(124,0,o),
(119,0,qs),
(78,0,ls),
(73,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
11 3 2 0 1 1 76 0 1 1 39 77 0 0 0 40 0 78 53 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,87,qs),
(21,87,o),
(24,82,qs),
(59,35,o),
(99,35,qs),
(126,35,o),
(160,69,o),
(160,96,qs),
(160,549,ls),
(160,556,o),
(165,556,qs),
(169,556,ls),
(188,556,o),
(210,527,o),
(210,503,qs),
(210,94,ls),
(210,46,o),
(153,-10,o),
(104,-10,qs),
(65,-10,o),
(8,40,o),
(8,75,qs),
(8,87,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 3 1 2 1 3 2 128 0 1 1 39 77 0 2 2 0 97 0 0 0 46 0 78 34 36 53 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(83,556,ls),
(101,556,o),
(123,527,o),
(123,503,qs),
(123,245,l),
(379,547,ls),
(387,556,o),
(397,556,qs),
(435,556,ls),
(443,556,o),
(438,548,q),
(254,331,l),
(458,8,l),
(461,0,o),
(453,0,qs),
(414,0,ls),
(403,0,o),
(397,10,qs),
(220,291,l),
(123,178,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
28 23 15 8 1 0 6 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 20 53 52 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,47,o),
(341,18,qs),
(341,7,ls),
(341,0,o),
(333,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(83,556,ls),
(101,556,o),
(123,527,o),
(123,503,qs),
(123,47,l),
(311,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
8 1 1 2 1 76 0 0 0 39 77 3 1 2 2 1 95 0 1 1 40 1 78 0 0 0 16 0 15 36 51 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(472,556,o),
(478,556,qs),
(481,556,ls),
(521,556,o),
(524,508,qs),
(552,6,ls),
(552,0,o),
(547,0,qs),
(506,0,ls),
(501,0,o),
(501,6,qs),
(478,434,l),
(326,7,ls),
(323,0,o),
(316,0,qs),
(281,0,ls),
(277,0,o),
(274,7,qs),
(126,427,l),
(103,6,ls),
(103,0,o),
(98,0,qs),
(58,0,ls),
(53,0,o),
(53,6,qs),
(82,549,ls),
(82,556,o),
(88,556,qs),
(91,556,ls),
(114,556,o),
(136,538,o),
(144,516,qs),
(301,65,l),
(471,549,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
27 22 21 14 13 8 6 1 0 1 76 4 1 0 0 39 77 3 2 2 1 1 40 1 78 52 21 53 20 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,556,o),
(405,556,qs),
(410,556,ls),
(428,556,o),
(450,527,o),
(450,504,qs),
(450,6,ls),
(450,0,o),
(445,0,qs),
(411,0,ls),
(396,0,o),
(389,13,qs),
(124,445,l),
(124,6,ls),
(124,0,o),
(119,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(82,556,ls),
(104,556,o),
(124,541,o),
(139,515,qs),
(400,89,l),
(400,549,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
20 14 13 8 0 5 1 0 1 76 3 1 0 0 39 77 2 1 1 1 40 1 78 53 37 20 51 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 39 77 4 1 0 0 2 97 5 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,262,o),
(397,327,o),
(397,388,qs),
(397,439,o),
(366,471,qs),
(331,508,o),
(271,508,qs),
(123,508,l),
(123,262,l),
(267,262,ls)
);
},
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(267,556,ls),
(344,556,o),
(392,516,qs),
(449,470,o),
(449,387,qs),
(449,312,o),
(407,267,qs),
(359,215,o),
(269,215,qs),
(123,215,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
22 1 0 3 28 23 2 4 2 2 76 5 1 1 0 2 4 1 2 103 0 0 0 3 95 0 3 3 39 77 0 4 4 40 4 78 0 0 26 25 20 18 12 10 0 9 0 8 33 6 9 23 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,71,qs),
(57,146,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(177,567,o),
(298,567,qs),
(403,567,o),
(467,498,qs),
(539,420,o),
(539,277,qs),
(539,158,o),
(489,84,qs),
(430,-2,o),
(318,-9,q),
(340,-61,o),
(401,-61,qs),
(457,-61,o),
(503,-10,qs),
(508,-5,o),
(513,-5,qs),
(523,-5,o),
(523,-16,qs),
(523,-45,o),
(492,-72,qs),
(452,-106,o),
(393,-106,qs),
(343,-106,o),
(274,-55,o),
(261,-8,q),
(171,4,o)
);
},
{
closed = 1;
nodes = (
(420,79,qs),
(488,139,o),
(488,277,qs),
(488,399,o),
(434,462,qs),
(384,519,o),
(298,519,qs),
(224,519,o),
(176,476,qs),
(108,415,o),
(108,277,qs),
(108,154,o),
(161,93,qs),
(211,37,o),
(298,37,qs),
(373,38,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 5 3 5 1 3 128 0 2 0 0 2 0 101 0 6 6 4 97 0 4 4 39 77 7 1 5 5 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 5 3 5 1 3 128 0 2 0 0 2 0 101 0 6 6 4 97 0 4 4 39 77 7 1 5 5 3 97 0 3 3 46 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 1 5 3 5 1 3 128 0 2 0 0 2 0 101 0 6 6 4 97 0 4 4 39 77 7 1 5 5 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 1 5 3 5 1 3 128 0 4 0 6 5 4 6 105 0 2 0 0 2 0 101 7 1 5 5 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
32 31 40 38 31 46 32 46 38 17 35 20 34 8 9 27 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,262,o),
(399,388,qs),
(399,440,o),
(369,472,qs),
(335,508,o),
(273,508,qs),
(123,508,l),
(123,262,l),
(267,262,ls)
);
},
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(267,556,ls),
(347,556,o),
(395,516,qs),
(450,470,o),
(450,384,qs),
(450,324,o),
(419,282,qs),
(388,240,o),
(331,222,q),
(456,7,l),
(461,0,o),
(452,0,qs),
(414,0,ls),
(402,0,o),
(396,10,qs),
(277,215,l),
(123,215,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
28 1 0 4 17 1 2 1 34 29 2 3 2 3 76 6 1 1 0 2 3 1 2 103 0 0 0 4 95 0 4 4 39 77 5 1 3 3 40 3 78 0 0 32 31 26 24 15 12 10 9 0 8 0 7 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 496;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,127,qs),
(44,127,o),
(51,117,qs),
(113,36,o),
(206,36,qs),
(269,36,o),
(308,62,qs),
(353,92,o),
(353,146,qs),
(353,184,o),
(320,211,qs),
(296,230,o),
(243,250,qs),
(140,288,o),
(121,298,qs),
(40,342,o),
(40,421,qs),
(40,480,o),
(83,520,qs),
(134,567,o),
(220,567,qs),
(293,567,o),
(357,536,qs),
(398,516,o),
(392,490,qs),
(388,473,ls),
(386,465,o),
(381,465,qs),
(377,465,o),
(371,469,qs),
(368,471,ls),
(300,520,o),
(216,520,qs),
(159,520,o),
(91,467,o),
(91,423,qs),
(91,385,o),
(123,358,qs),
(150,336,o),
(231,307,qs),
(317,277,o),
(349,255,qs),
(403,217,o),
(403,155,qs),
(403,85,o),
(359,41,qs),
(306,-11,o),
(210,-11,qs),
(127,-11,o),
(74,28,qs),
(24,66,o),
(24,108,qs),
(24,127,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 46 37 35 45 35 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,508,o),
(17,514,qs),
(17,549,ls),
(17,556,o),
(22,556,qs),
(354,556,ls),
(384,556,o),
(384,527,qs),
(384,516,ls),
(384,508,o),
(375,508,qs),
(225,508,l),
(225,6,ls),
(225,0,o),
(220,0,qs),
(180,0,ls),
(175,0,o),
(175,6,qs),
(175,508,l),
(22,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 16 2 1 2 6 1 2 0 1 2 76 4 3 2 1 1 2 95 0 2 2 39 77 0 0 0 40 0 78 0 0 0 19 0 19 35 35 19 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,42,qs),
(68,95,o),
(68,194,qs),
(68,549,ls),
(68,556,o),
(73,556,qs),
(78,556,ls),
(96,556,o),
(119,527,o),
(119,504,qs),
(119,201,ls),
(119,37,o),
(255,37,qs),
(397,37,o),
(397,202,qs),
(397,549,ls),
(397,556,o),
(402,556,qs),
(406,556,ls),
(425,556,o),
(447,527,o),
(447,504,qs),
(447,198,ls),
(447,121,o),
(413,68,qs),
(364,-10,o),
(256,-10,qs),
(165,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 39 77 0 2 2 0 97 4 1 0 0 46 0 78 1 0 22 19 15 13 10 7 0 27 1 27 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(397,556,o),
(408,556,qs),
(444,556,ls),
(451,556,o),
(448,548,qs),
(262,6,l),
(259,0,o),
(254,0,qs),
(214,0,ls),
(208,0,o),
(206,6,qs),
(19,548,ls),
(16,556,o),
(24,556,qs),
(41,556,ls),
(70,556,o),
(81,524,qs),
(235,59,l),
(393,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 39 77 0 1 1 40 1 78 52 35 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 462;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,556,o),
(359,556,qs),
(368,556,ls),
(392,556,o),
(402,524,qs),
(539,70,l),
(663,543,ls),
(666,556,o),
(678,556,qs),
(712,556,ls),
(717,556,o),
(716,548,q),
(568,6,ls),
(566,0,o),
(559,0,qs),
(521,0,ls),
(515,0,o),
(513,6,qs),
(369,478,l),
(233,6,ls),
(231,0,o),
(225,0,qs),
(186,0,ls),
(180,0,o),
(178,6,qs),
(31,548,ls),
(29,556,o),
(36,556,qs),
(49,556,ls),
(81,556,o),
(89,524,qs),
(210,70,l),
(344,543,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
26 13 2 1 0 1 76 4 3 2 0 0 39 77 2 1 1 1 40 1 78 52 51 53 35 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 742;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(67,0,o),
(56,0,qs),
(21,0,ls),
(13,0,o),
(17,7,qs),
(202,289,l),
(40,548,l),
(34,556,o),
(44,556,qs),
(61,556,ls),
(89,556,o),
(107,526,qs),
(237,322,l),
(376,543,ls),
(384,556,o),
(395,556,qs),
(428,556,ls),
(437,556,o),
(432,548,qs),
(268,288,l),
(451,7,ls),
(455,0,o),
(446,0,qs),
(411,0,ls),
(400,0,o),
(392,12,qs),
(233,257,l),
(73,12,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
21 14 7 3 0 1 1 76 2 1 1 1 39 77 3 1 0 0 40 0 78 52 52 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 459;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,556,o),
(13,556,qs),
(29,556,ls),
(48,556,o),
(72,537,o),
(86,513,qs),
(217,274,l),
(364,543,ls),
(370,556,o),
(381,556,qs),
(414,556,ls),
(424,556,o),
(420,547,q),
(240,219,l),
(240,6,ls),
(240,0,o),
(235,0,qs),
(195,0,ls),
(190,0,o),
(190,6,qs),
(190,219,l),
(9,548,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
14 7 6 1 0 5 0 1 1 76 2 1 1 1 39 77 0 0 0 40 0 78 53 53 19 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,47,o),
(407,18,qs),
(407,7,ls),
(407,0,o),
(400,0,qs),
(44,0,ls),
(39,0,o),
(39,6,qs),
(39,30,ls),
(39,49,o),
(50,64,qs),
(361,509,l),
(52,509,ls),
(47,509,o),
(47,515,qs),
(47,549,ls),
(47,556,o),
(52,556,qs),
(358,556,ls),
(407,556,o),
(407,514,qs),
(407,504,ls),
(407,489,o),
(393,468,qs),
(97,47,l),
(378,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
10 9 2 1 0 17 1 2 3 2 76 0 1 1 0 95 0 0 0 39 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 24 38 21 37 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(102,-144,o),
(70,-113,o),
(70,-88,qs),
(70,639,ls),
(70,665,o),
(102,696,o),
(128,696,qs),
(228,696,ls),
(236,696,o),
(236,689,qs),
(236,686,ls),
(236,652,o),
(197,652,qs),
(141,652,ls),
(118,652,o),
(118,628,qs),
(118,-77,ls),
(118,-101,o),
(141,-101,qs),
(197,-101,ls),
(236,-101,o),
(236,-134,qs),
(236,-137,ls),
(236,-144,o),
(228,-144,qs),
(128,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 1 0 19 16 13 10 7 4 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,556,o),
(6,556,qs),
(11,556,ls),
(49,556,o),
(68,513,qs),
(282,6,ls),
(285,0,o),
(280,0,qs),
(239,0,ls),
(234,0,o),
(231,6,qs),
(2,548,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 39 77 0 0 0 40 0 78 52 33 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 283;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,-144,o),
(53,-137,qs),
(53,-134,ls),
(53,-101,o),
(92,-101,qs),
(149,-101,ls),
(171,-101,o),
(171,-77,qs),
(171,628,ls),
(171,652,o),
(149,652,qs),
(92,652,ls),
(53,652,o),
(53,686,qs),
(53,689,ls),
(53,696,o),
(61,696,qs),
(161,696,ls),
(187,696,o),
(219,665,o),
(219,639,qs),
(219,-88,ls),
(219,-113,o),
(187,-144,o),
(161,-144,qs),
(61,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 4 1 0 3 0 79 1 0 21 18 15 12 9 6 0 25 1 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 289;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,274,o),
(70,274,qs),
(36,274,ls),
(29,274,o),
(32,279,qs),
(174,546,ls),
(180,556,o),
(190,556,qs),
(227,556,o),
(248,517,qs),
(375,279,ls),
(377,274,o),
(371,274,qs),
(337,274,ls),
(326,274,o),
(321,283,qs),
(204,503,l),
(86,283,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 51 36 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 403;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-9,-172,qs),
(-9,-139,ls),
(-9,-133,o),
(-4,-133,qs),
(412,-133,ls),
(417,-133,o),
(417,-139,qs),
(417,-172,ls),
(417,-178,o),
(412,-178,qs),
(-4,-178,ls),
(-9,-178,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 409;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1,502,o),
(4,502,qs),
(54,502,ls),
(65,502,o),
(75,493,qs),
(137,436,l),
(140,435,o),
(137,431,o),
(135,431,qs),
(97,431,ls),
(86,431,o),
(73,440,qs),
(1,496,l),
(-1,497,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 37 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 139;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 6 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 33 31 24 39 25 39 38 34 37 19 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,549,ls),
(60,556,o),
(65,556,qs),
(70,556,ls),
(88,556,o),
(110,527,o),
(110,503,qs),
(110,302,l),
(152,367,o),
(241,367,qs),
(312,367,o),
(358,321,qs),
(411,268,o),
(411,178,qs),
(411,104,o),
(371,52,qs),
(323,-9,o),
(242,-9,qs),
(150,-9,o),
(110,54,q),
(110,6,ls)
);
},
{
closed = 1;
nodes = (
(318,68,qs),
(359,107,o),
(359,178,qs),
(359,237,o),
(330,275,qs),
(296,320,o),
(236,320,qs),
(188,320,o),
(156,294,qs),
(110,257,o),
(110,178,qs),
(110,110,o),
(147,73,qs),
(182,38,o),
(237,38,qs),
(285,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
12 0 2 4 5 25 20 2 3 4 2 76 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 0 3 3 40 77 6 1 4 4 0 97 0 0 0 49 0 78 27 26 35 33 26 41 27 41 20 52 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,34,qs),
(44,85,o),
(44,177,qs),
(44,255,o),
(87,307,qs),
(136,367,o),
(218,367,qs),
(270,367,o),
(307,349,qs),
(334,337,o),
(328,313,qs),
(324,298,ls),
(322,292,o),
(319,292,qs),
(317,292,o),
(315,293,qs),
(313,294,ls),
(268,320,o),
(218,320,qs),
(166,320,o),
(133,287,qs),
(95,248,o),
(95,178,qs),
(95,116,o),
(125,80,qs),
(159,37,o),
(223,37,qs),
(282,37,o),
(320,82,qs),
(326,89,o),
(330,89,qs),
(340,89,o),
(340,74,qs),
(340,45,o),
(310,20,qs),
(273,-10,o),
(218,-10,qs),
(144,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
23 1 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 4 97 0 4 4 48 77 0 2 2 0 97 5 1 0 0 46 0 78 1 0 31 29 19 17 11 9 6 5 0 37 1 37 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,556,o),
(350,556,qs),
(354,556,ls),
(372,556,o),
(395,527,o),
(395,503,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(350,0,ls),
(345,0,o),
(345,6,qs),
(345,57,l),
(303,-9,o),
(216,-9,qs),
(143,-9,o),
(95,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,549,ls)
);
},
{
closed = 1;
nodes = (
(298,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(307,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(94,246,o),
(94,178,qs),
(94,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(265,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
12 0 2 4 5 18 13 2 2 4 2 76 0 3 3 39 77 0 5 5 0 97 0 0 0 48 77 0 2 2 40 77 6 1 4 4 1 97 0 1 1 49 1 78 27 26 35 33 26 41 27 41 53 20 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,70,qs),
(166,37,o),
(226,37,qs),
(293,37,o),
(340,82,qs),
(341,83,o),
(341,84,q),
(348,92,o),
(352,92,qs),
(360,92,o),
(360,78,qs),
(360,47,o),
(326,22,qs),
(284,-9,o),
(222,-9,qs),
(156,-9,o),
(109,27,qs),
(44,77,o),
(44,178,qs),
(44,255,o),
(85,307,qs),
(132,367,o),
(208,367,qs),
(283,367,o),
(324,322,qs),
(365,277,o),
(365,201,qs),
(365,179,o),
(364,171,qs),
(363,160,o),
(351,160,qs),
(95,160,l),
(99,102,o)
);
},
{
closed = 1;
nodes = (
(316,321,o),
(207,321,qs),
(160,321,o),
(101,259,o),
(95,203,q),
(314,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 3 0 4 0 3 4 128 7 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 33 33 33 38 33 38 37 37 20 38 38 32 8 9 28 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernLeft = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,315,o),
(16,321,qs),
(16,354,ls),
(16,360,o),
(21,360,qs),
(84,360,l),
(84,464,ls),
(84,509,o),
(130,562,o),
(170,562,qs),
(199,562,o),
(245,521,o),
(245,495,qs),
(245,485,o),
(238,485,qs),
(234,485,o),
(230,489,qs),
(204,516,o),
(177,516,qs),
(134,516,o),
(134,461,qs),
(134,360,l),
(223,360,ls),
(228,360,o),
(228,354,qs),
(228,321,ls),
(228,315,o),
(223,315,qs),
(134,315,l),
(134,6,ls),
(134,0,o),
(129,0,qs),
(89,0,ls),
(84,0,o),
(84,6,qs),
(84,315,l),
(21,315,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
34 33 11 10 4 1 2 6 1 2 0 1 2 76 0 4 3 2 3 4 2 128 0 3 3 5 97 0 5 5 39 77 8 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 0 78 0 0 0 36 0 36 19 35 34 34 21 19 19 9 9 29 
CALL[ ]	/* CallFunction */";
};
width = 268;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(95,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,359,o),
(385,359,qs),
(390,359,ls),
(395,359,o),
(395,354,qs),
(395,7,ls),
(395,-70,o),
(355,-116,qs),
(308,-171,o),
(214,-171,qs),
(157,-171,o),
(64,-115,o),
(64,-81,qs),
(64,-67,o),
(72,-67,qs),
(76,-67,o),
(83,-74,qs),
(131,-121,o),
(211,-121,qs),
(345,-121,o),
(345,7,qs),
(345,57,l),
(303,-9,o)
);
},
{
closed = 1;
nodes = (
(298,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(307,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(94,246,o),
(94,178,qs),
(94,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(265,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
17 1 7 3 22 0 2 6 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 5 0 5 1 0 128 0 7 7 3 97 4 1 3 3 42 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 44 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 5 0 5 1 0 128 0 3 3 42 77 0 7 7 4 97 0 4 4 48 77 8 1 6 6 5 97 0 5 5 49 77 0 0 0 2 97 0 2 2 44 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
35 34 43 41 34 49 35 49 38 34 38 35 34 34 9 9 28 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(192,367,o),
(232,367,qs),
(296,367,o),
(336,329,qs),
(381,286,o),
(381,215,qs),
(381,6,ls),
(381,0,o),
(376,0,qs),
(336,0,ls),
(331,0,o),
(331,6,qs),
(331,200,ls),
(331,257,o),
(274,320,o),
(224,320,qs),
(110,320,o),
(110,193,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,549,ls),
(60,556,o),
(65,556,qs),
(70,556,ls),
(88,556,o),
(110,527,o),
(110,503,qs),
(110,307,l),
(127,334,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
25 20 13 8 0 5 1 2 1 76 0 0 0 39 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 38 21 36 20 51 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(69,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o)
);
},
{
closed = 1;
nodes = (
(72,492,o),
(86,492,qs),
(100,492,o),
(120,472,o),
(120,458,qs),
(120,445,o),
(100,426,o),
(86,426,qs),
(72,426,o),
(53,445,o),
(53,458,qs),
(53,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
11 3 2 0 1 1 76 0 3 0 2 1 3 2 105 0 1 1 42 77 0 0 0 40 0 78 36 38 53 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,-124,qs),
(60,-124,o),
(60,-61,qs),
(60,354,ls),
(60,359,o),
(65,359,qs),
(70,359,ls),
(88,359,o),
(110,331,o),
(110,308,qs),
(110,-67,ls),
(110,-171,o),
(31,-171,qs),
(1,-171,o),
(-48,-127,o),
(-48,-100,qs),
(-48,-90,o),
(-41,-90,qs),
(-38,-90,o),
(-35,-92,qs),
(-33,-93,l),
(-8,-124,o)
);
},
{
closed = 1;
nodes = (
(72,492,o),
(86,492,qs),
(99,492,o),
(119,472,o),
(119,459,qs),
(119,445,o),
(99,426,o),
(86,426,qs),
(72,426,o),
(53,445,o),
(53,459,qs),
(53,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 0 2 3 2 0 3 128 0 5 0 4 2 5 4 105 0 2 2 42 77 0 3 3 1 97 0 1 1 44 1 78 36 35 35 52 35 34 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,549,ls),
(60,556,o),
(65,556,qs),
(70,556,ls),
(88,556,o),
(110,527,o),
(110,503,qs),
(110,207,l),
(259,351,ls),
(267,359,o),
(279,359,qs),
(318,359,ls),
(320,359,o),
(322,355,o),
(321,354,qs),
(194,230,l),
(339,6,l),
(342,0,o),
(336,0,qs),
(296,0,ls),
(284,0,o),
(278,10,qs),
(159,196,l),
(110,148,l),
(110,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
29 24 16 8 1 0 6 0 1 1 76 0 2 2 39 77 0 1 1 42 77 3 1 0 0 40 0 78 20 53 39 35 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 354;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(59,89,qs),
(59,549,ls),
(59,556,o),
(64,556,qs),
(69,556,ls),
(87,556,o),
(109,527,o),
(109,504,qs),
(109,92,ls),
(109,41,o),
(150,41,qs),
(179,41,o),
(201,71,qs),
(206,77,o),
(209,77,qs),
(217,77,o),
(217,63,qs),
(217,34,o),
(172,-9,o),
(141,-9,qs),
(59,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 97 4 1 0 0 49 0 78 1 0 17 14 10 8 5 4 0 20 1 20 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 220;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,367,qs),
(319,367,o),
(356,297,q),
(404,367,o),
(489,367,qs),
(555,367,o),
(595,329,qs),
(639,287,o),
(639,215,qs),
(639,6,ls),
(639,0,o),
(634,0,qs),
(594,0,ls),
(589,0,o),
(589,6,qs),
(589,200,ls),
(589,258,o),
(535,320,o),
(484,320,qs),
(374,320,o),
(374,193,qs),
(374,6,ls),
(374,0,o),
(369,0,qs),
(330,0,ls),
(325,0,o),
(325,6,qs),
(325,200,ls),
(325,258,o),
(271,320,o),
(221,320,qs),
(110,320,o),
(110,193,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(70,360,ls),
(88,360,o),
(110,330,o),
(110,307,q),
(146,367,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
43 36 31 24 19 12 7 0 8 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
4 1 2 2 0 97 7 6 2 0 0 42 77 5 3 2 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 42 77 4 1 2 2 6 97 7 1 6 6 48 77 5 3 2 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
34 38 21 36 21 36 20 50 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,367,qs),
(295,367,o),
(335,329,qs),
(380,286,o),
(380,214,qs),
(380,6,ls),
(380,0,o),
(375,0,qs),
(335,0,ls),
(330,0,o),
(330,6,qs),
(330,200,ls),
(330,257,o),
(273,320,o),
(222,320,qs),
(109,320,o),
(109,193,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(64,0,ls),
(59,0,o),
(59,6,qs),
(59,354,ls),
(59,360,o),
(64,360,qs),
(69,360,ls),
(87,360,o),
(110,331,o),
(110,307,q),
(147,367,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
24 19 12 7 0 5 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
38 21 36 20 50 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 3 3 1 97 0 1 1 48 77 5 1 2 2 0 97 4 1 0 0 49 0 78 17 16 1 0 25 23 16 31 17 31 9 7 0 15 1 15 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,-160,o),
(105,-160,qs),
(65,-160,ls),
(60,-160,o),
(60,-154,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(70,360,ls),
(88,360,o),
(110,331,o),
(110,308,qs),
(110,302,l),
(152,367,o),
(241,367,qs),
(312,367,o),
(358,321,qs),
(411,268,o),
(411,178,qs),
(411,104,o),
(371,52,qs),
(323,-9,o),
(242,-9,qs),
(150,-9,o),
(110,54,q),
(110,-154,ls)
);
},
{
closed = 1;
nodes = (
(317,68,qs),
(359,108,o),
(359,178,qs),
(359,237,o),
(330,275,qs),
(296,320,o),
(236,320,qs),
(188,320,o),
(156,294,qs),
(110,257,o),
(110,178,qs),
(110,111,o),
(148,73,qs),
(184,38,o),
(239,38,qs),
(285,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
12 0 2 4 5 25 20 2 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 3 134 0 2 2 42 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
27 26 35 33 26 41 27 41 20 52 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(95,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,-154,ls),
(395,-160,o),
(390,-160,qs),
(350,-160,ls),
(345,-160,o),
(345,-154,qs),
(345,57,l),
(303,-9,o)
);
},
{
closed = 1;
nodes = (
(298,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(307,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(94,246,o),
(94,178,qs),
(94,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(265,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 5 5 1 97 2 1 1 1 42 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 49 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 3 0 134 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 6 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 33 31 24 39 25 39 38 34 37 19 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,332,o),
(110,309,q),
(139,360,o),
(220,360,qs),
(231,360,ls),
(236,360,o),
(236,354,qs),
(236,316,ls),
(236,309,o),
(231,309,qs),
(210,309,ls),
(157,309,o),
(110,254,o),
(110,192,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(70,360,ls),
(88,360,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
17 16 2 2 0 9 4 2 1 2 2 76 22 1 2 1 75 0 2 2 0 97 3 4 2 0 0 42 77 0 1 1 40 1 78 2 0 21 19 14 12 7 6 0 24 2 24 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 267;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,36,qs),
(233,36,o),
(233,94,qs),
(233,128,o),
(162,156,qs),
(100,180,o),
(84,189,qs),
(32,219,o),
(32,267,qs),
(32,306,o),
(61,334,qs),
(97,367,o),
(156,367,qs),
(207,367,o),
(246,349,qs),
(273,336,o),
(266,312,qs),
(262,297,ls),
(261,291,o),
(257,291,qs),
(255,291,o),
(252,293,qs),
(204,320,o),
(156,320,qs),
(121,320,o),
(82,294,o),
(82,271,qs),
(82,239,o),
(153,212,qs),
(213,189,o),
(231,178,qs),
(283,148,o),
(283,99,qs),
(283,52,o),
(252,23,qs),
(216,-11,o),
(149,-11,qs),
(100,-11,o),
(25,40,o),
(25,73,qs),
(25,88,o),
(35,88,qs),
(40,88,o),
(44,82,q),
(83,36,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
24 1 0 2 1 76 0 0 2 4 2 0 4 128 0 2 2 3 97 0 3 3 48 77 0 4 4 1 97 0 1 1 46 1 78 42 41 43 35 33 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,315,o),
(19,321,qs),
(19,354,ls),
(19,360,o),
(24,360,qs),
(92,360,l),
(92,484,ls),
(92,491,o),
(96,491,qs),
(101,491,ls),
(119,491,o),
(142,462,o),
(142,439,qs),
(142,360,l),
(216,360,ls),
(221,360,o),
(221,354,qs),
(221,321,ls),
(221,315,o),
(216,315,qs),
(142,315,l),
(142,6,ls),
(142,0,o),
(137,0,qs),
(96,0,ls),
(92,0,o),
(92,6,qs),
(92,315,l),
(24,315,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
26 25 11 10 4 1 2 6 1 2 0 1 2 76 6 5 2 1 1 2 95 4 1 2 2 42 77 0 3 3 0 95 0 0 0 40 0 78 0 0 0 28 0 28 18 51 21 19 19 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 249;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,28,qs),
(59,72,o),
(59,159,qs),
(59,354,ls),
(59,360,o),
(63,360,qs),
(68,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,98,o),
(162,36,o),
(211,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,360,o),
(319,360,qs),
(323,360,ls),
(341,360,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(328,39,qs),
(288,-10,o),
(211,-10,qs),
(143,-10,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 42 77 0 2 2 0 97 4 1 0 0 46 0 78 1 0 23 20 15 13 10 7 0 28 1 28 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,360,o),
(275,360,qs),
(308,360,ls),
(314,360,o),
(312,354,qs),
(190,5,ls),
(188,0,o),
(183,0,qs),
(148,0,ls),
(143,0,o),
(141,5,qs),
(19,354,ls),
(17,360,o),
(24,360,qs),
(36,360,ls),
(71,360,o),
(84,321,qs),
(166,70,l),
(259,350,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
2 1 0 0 42 77 0 1 1 40 1 78 52 35 50 3 9 25 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,360,o),
(260,360,qs),
(269,360,ls),
(299,360,o),
(313,319,qs),
(395,72,l),
(475,350,ls),
(478,360,o),
(491,360,qs),
(524,360,ls),
(530,360,o),
(528,354,qs),
(418,5,ls),
(416,0,o),
(411,0,qs),
(377,0,ls),
(372,0,o),
(370,5,qs),
(276,291,l),
(181,5,ls),
(179,0,o),
(174,0,qs),
(140,0,ls),
(135,0,o),
(133,5,qs),
(25,354,ls),
(23,360,o),
(29,360,qs),
(40,360,ls),
(77,360,o),
(88,321,qs),
(159,72,l),
(250,353,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
26 13 2 1 0 1 76 4 3 2 0 0 42 77 2 1 1 1 40 1 78 52 52 37 36 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 551;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,0,o),
(57,0,qs),
(19,0,ls),
(13,0,o),
(16,6,q),
(136,191,l),
(32,354,ls),
(28,360,o),
(36,360,qs),
(52,360,ls),
(70,360,o),
(95,342,o),
(112,316,qs),
(168,228,l),
(245,349,ls),
(251,360,o),
(263,360,qs),
(297,360,ls),
(304,360,o),
(300,354,qs),
(198,194,l),
(322,6,l),
(325,0,o),
(318,0,qs),
(281,0,ls),
(271,0,o),
(265,10,qs),
(167,159,l),
(73,10,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
22 14 7 3 0 1 1 76 2 1 1 1 42 77 3 1 0 0 40 0 78 52 53 52 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 336;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,360,o),
(22,360,qs),
(35,360,ls),
(69,360,o),
(83,320,qs),
(165,63,l),
(258,350,ls),
(261,360,o),
(273,360,qs),
(307,360,ls),
(313,360,o),
(311,354,qs),
(180,-19,ls),
(148,-110,o),
(99,-171,o),
(58,-171,qs),
(30,-171,o),
(-13,-132,o),
(-13,-106,qs),
(-13,-93,o),
(-4,-93,qs),
(0,-93,o),
(5,-98,qs),
(30,-124,o),
(55,-124,qs),
(81,-124,o),
(113,-79,o),
(140,-5,q),
(18,354,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 97 0 2 2 44 2 78 36 52 35 34 34 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,44,o),
(284,39,qs),
(284,6,ls),
(284,0,o),
(279,0,qs),
(40,0,ls),
(35,0,o),
(35,6,qs),
(35,36,ls),
(35,46,o),
(48,62,qs),
(247,315,l),
(44,315,ls),
(39,315,o),
(39,321,qs),
(39,354,ls),
(39,360,o),
(44,360,qs),
(241,360,ls),
(266,360,o),
(287,340,o),
(287,315,qs),
(287,292,o),
(273,274,qs),
(92,45,l),
(279,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
10 9 2 1 0 23 22 17 3 2 3 2 76 0 1 1 0 95 0 0 0 42 77 4 1 3 3 2 95 0 2 2 40 2 78 0 0 0 25 0 25 22 21 37 5 9 25 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,-144,o),
(108,-113,o),
(108,-88,qs),
(108,216,ls),
(108,250,o),
(69,255,qs),
(60,256,o),
(60,264,qs),
(60,288,ls),
(60,296,o),
(69,297,qs),
(108,300,o),
(108,337,qs),
(108,639,ls),
(108,664,o),
(140,696,o),
(165,696,qs),
(266,696,ls),
(273,696,o),
(273,689,qs),
(273,686,ls),
(273,652,o),
(234,652,qs),
(178,652,ls),
(155,652,o),
(155,628,qs),
(155,334,ls),
(155,297,o),
(131,276,q),
(155,257,o),
(155,218,qs),
(155,-77,ls),
(155,-101,o),
(178,-101,qs),
(234,-101,ls),
(273,-101,o),
(273,-134,qs),
(273,-137,ls),
(273,-144,o),
(266,-144,qs),
(165,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
11 1 1 2 1 76 0 3 0 2 1 3 2 105 0 1 0 0 1 89 0 1 1 0 95 4 1 0 1 0 79 1 0 24 21 18 15 7 4 0 40 1 39 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,-143,qs),
(69,561,ls),
(69,567,o),
(74,567,qs),
(92,567,o),
(115,537,o),
(115,514,qs),
(115,-143,ls),
(115,-149,o),
(110,-149,qs),
(74,-149,ls),
(69,-149,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
10 9 3 3 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 0 1 0 134 0 1 1 39 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 1 0 1 133 0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
21 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,-144,o),
(53,-137,qs),
(53,-134,ls),
(53,-101,o),
(92,-101,qs),
(149,-101,ls),
(171,-101,o),
(171,-77,qs),
(171,218,ls),
(171,257,o),
(196,276,q),
(171,297,o),
(171,334,qs),
(171,628,ls),
(171,652,o),
(149,652,qs),
(92,652,ls),
(53,652,o),
(53,686,qs),
(53,689,ls),
(53,696,o),
(60,696,qs),
(161,696,ls),
(187,696,o),
(219,664,o),
(219,639,qs),
(219,337,ls),
(219,300,o),
(257,297,qs),
(266,296,o),
(266,288,qs),
(266,264,ls),
(266,256,o),
(257,255,qs),
(219,250,o),
(219,216,qs),
(219,-88,ls),
(219,-113,o),
(187,-144,o),
(161,-144,qs),
(60,-144,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
29 1 3 2 1 76 0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 4 1 0 3 0 79 1 0 36 33 25 22 19 16 0 40 1 39 5 9 22 
CALL[ ]	/* CallFunction */";
};
width = 326;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,259,o),
(57,265,qs),
(90,288,o),
(126,288,qs),
(148,288,o),
(182,278,qs),
(222,265,o),
(242,265,qs),
(265,265,o),
(292,275,o),
(313,293,qs),
(320,298,o),
(320,291,qs),
(320,267,ls),
(320,250,o),
(311,242,qs),
(281,218,o),
(242,218,qs),
(220,218,o),
(187,229,qs),
(146,242,o),
(126,242,qs),
(104,242,o),
(76,230,o),
(55,213,q),
(53,210,o),
(48,212,o),
(48,215,qs),
(48,240,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
0 1 1 73 0 2 0 1 2 89 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 34 40 34 37 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 368;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,312,o),
(31,329,qs),
(31,347,o),
(55,372,o),
(72,372,qs),
(89,372,o),
(113,347,o),
(113,329,qs),
(113,312,o),
(89,287,o),
(72,287,qs),
(55,287,o)
);
},
{
closed = 1;
nodes = (
(47,-199,o),
(47,-193,qs),
(49,216,ls),
(49,222,o),
(54,222,qs),
(92,222,o),
(93,170,qs),
(97,-193,ls),
(97,-199,o),
(92,-199,qs),
(52,-199,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
20 19 14 3 3 2 1 76 0 2 5 1 3 2 3 99 4 1 0 0 1 97 0 1 1 48 0 78 12 12 1 0 12 22 12 22 17 16 7 5 0 11 1 11 6 9 22 
CALL[ ]	/* CallFunction */";
};
width = 143;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(232,-71,o),
(227,-71,qs),
(190,-71,ls),
(185,-71,o),
(185,-65,qs),
(185,-8,l),
(123,0,o),
(84,44,qs),
(40,94,o),
(40,177,qs),
(40,247,o),
(75,297,qs),
(115,354,o),
(185,364,q),
(185,421,ls),
(185,427,o),
(190,427,qs),
(227,427,ls),
(232,427,o),
(232,421,qs),
(232,367,l),
(268,365,o),
(303,349,qs),
(330,337,o),
(324,313,qs),
(320,298,ls),
(318,292,o),
(315,292,qs),
(312,292,o),
(309,294,qs),
(268,316,o),
(232,319,q),
(232,38,l),
(283,42,o),
(316,82,qs),
(317,83,ls),
(322,89,o),
(326,89,qs),
(336,89,o),
(336,74,qs),
(336,48,o),
(310,24,qs),
(279,-4,o),
(232,-9,q),
(232,-65,ls)
);
},
{
closed = 1;
nodes = (
(140,307,o),
(91,234,o),
(91,178,qs),
(91,61,o),
(185,41,q),
(185,317,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
29 24 2 1 2 50 30 16 12 4 0 1 45 44 39 38 11 0 6 3 0 3 76 0 2 1 2 133 0 0 1 3 1 0 3 128 0 3 3 132 0 1 1 48 1 78 42 41 27 26 23 22 21 4 9 23 
CALL[ ]	/* CallFunction */";
};
width = 359;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,47,o),
(429,18,qs),
(429,7,ls),
(429,0,o),
(422,0,qs),
(56,0,ls),
(51,0,o),
(51,6,qs),
(51,41,ls),
(51,47,o),
(56,47,qs),
(139,47,l),
(176,120,o),
(176,193,qs),
(176,226,o),
(154,262,q),
(56,262,ls),
(51,262,o),
(51,268,qs),
(51,302,ls),
(51,308,o),
(56,308,qs),
(129,308,l),
(97,365,o),
(97,417,qs),
(97,481,o),
(138,521,qs),
(185,567,o),
(265,567,qs),
(333,567,o),
(392,536,qs),
(431,516,o),
(424,492,qs),
(419,476,ls),
(416,468,o),
(412,468,qs),
(406,468,o),
(399,474,q),
(332,519,o),
(270,519,qs),
(214,519,o),
(147,463,o),
(147,417,qs),
(147,373,o),
(183,308,q),
(348,308,ls),
(378,308,o),
(378,279,qs),
(378,269,ls),
(378,262,o),
(369,262,qs),
(207,262,l),
(224,220,o),
(224,193,qs),
(224,158,o),
(210,105,o),
(185,47,q),
(399,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
38 37 2 0 1 49 48 2 8 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 3 2 1 2 3 1 128 5 1 1 6 1 0 7 1 0 103 0 2 2 4 97 0 4 4 39 77 10 9 2 7 7 8 95 0 8 8 40 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 5 1 1 6 1 0 7 1 0 103 10 9 2 7 7 8 95 0 8 8 40 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 57 0 56 37 20 21 21 37 34 36 35 37 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,133,o),
(44,139,qs),
(44,172,ls),
(44,178,o),
(49,178,qs),
(202,178,l),
(202,219,l),
(184,251,l),
(49,251,ls),
(44,251,o),
(44,257,qs),
(44,289,ls),
(44,295,o),
(49,295,qs),
(159,295,l),
(22,548,ls),
(18,556,o),
(26,556,qs),
(42,556,ls),
(61,556,o),
(85,537,o),
(98,513,qs),
(229,275,l),
(377,543,l),
(382,556,o),
(393,556,qs),
(427,556,ls),
(437,556,o),
(432,547,qs),
(293,295,l),
(401,295,ls),
(406,295,o),
(406,289,qs),
(406,257,ls),
(406,251,o),
(401,251,qs),
(271,251,l),
(253,219,l),
(253,178,l),
(401,178,ls),
(406,178,o),
(406,172,qs),
(406,139,ls),
(406,133,o),
(401,133,qs),
(253,133,l),
(253,6,ls),
(253,0,o),
(248,0,qs),
(207,0,ls),
(202,0,o),
(202,6,qs),
(202,133,l),
(49,133,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
42 41 30 20 19 5 3 4 46 15 2 2 3 51 50 11 10 4 1 2 6 1 2 0 1 4 76 7 1 4 8 1 3 2 4 3 104 9 1 2 11 10 2 1 0 2 1 103 6 1 5 5 39 77 0 0 0 40 0 78 0 0 0 53 0 53 48 47 21 18 53 50 21 18 21 19 19 12 9 31 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(69,277,qs),
(69,561,ls),
(69,567,o),
(74,567,qs),
(92,567,o),
(115,537,o),
(115,514,qs),
(115,277,ls),
(115,272,o),
(110,272,qs),
(74,272,ls),
(69,272,o)
);
},
{
closed = 1;
nodes = (
(69,-143,qs),
(69,140,ls),
(69,146,o),
(74,146,qs),
(110,146,ls),
(115,146,o),
(115,140,qs),
(115,-143,ls),
(115,-149,o),
(110,-149,qs),
(74,-149,ls),
(69,-149,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
10 9 3 3 0 1 22 21 16 15 4 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 3 0 2 3 2 99 0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 3 1 0 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
21 21 21 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 184;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,255,qs),
(300,279,o),
(261,318,o),
(209,346,qs),
(195,354,o),
(190,357,q),
(108,312,o),
(108,255,qs),
(108,223,o),
(140,196,qs),
(160,180,o),
(226,144,q),
(300,202,o)
);
},
{
closed = 1;
nodes = (
(332,23,qs),
(332,-25,o),
(298,-58,qs),
(258,-97,o),
(196,-97,qs),
(126,-97,o),
(87,-62,qs),
(59,-38,o),
(67,-19,qs),
(71,-8,ls),
(75,2,o),
(82,-4,qs),
(134,-51,o),
(193,-51,qs),
(233,-51,o),
(281,-13,o),
(281,18,qs),
(281,58,o),
(204,105,qs),
(131,148,o),
(118,158,qs),
(61,201,o),
(61,251,qs),
(61,325,o),
(157,377,q),
(121,400,o),
(91,441,o),
(91,467,qs),
(91,509,o),
(121,537,qs),
(155,568,o),
(215,568,qs),
(264,568,o),
(301,549,qs),
(328,537,o),
(322,513,qs),
(318,498,ls),
(317,492,o),
(313,492,qs),
(312,492,o),
(309,493,qs),
(308,493,o),
(307,493,q),
(261,521,o),
(217,521,qs),
(141,521,o),
(141,469,qs),
(141,435,o),
(214,396,qs),
(277,361,o),
(294,349,qs),
(348,309,o),
(348,259,qs),
(348,185,o),
(260,124,q),
(332,75,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
43 29 6 3 2 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
34 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 2 0 3 2 3 101 0 0 0 1 97 0 1 1 39 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 0 2 1 0 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
64 62 55 53 37 35 24 22 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,492,o),
(33,492,qs),
(47,492,o),
(67,472,o),
(67,458,qs),
(67,445,o),
(47,426,o),
(33,426,qs),
(19,426,o),
(0,445,o),
(0,458,qs),
(0,472,o)
);
},
{
closed = 1;
nodes = (
(131,492,o),
(145,492,qs),
(159,492,o),
(179,472,o),
(179,458,qs),
(179,445,o),
(159,426,o),
(145,426,qs),
(131,426,o),
(112,445,o),
(112,458,qs),
(112,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 36 36 36 34 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 179;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,494,qs),
(148,563,o),
(256,563,qs),
(349,563,o),
(410,509,qs),
(479,447,o),
(479,340,qs),
(479,247,o),
(425,186,qs),
(363,117,o),
(256,117,qs),
(162,117,o),
(102,171,qs),
(33,232,o),
(33,340,qs),
(33,434,o)
);
},
{
closed = 1;
nodes = (
(385,198,qs),
(442,249,o),
(442,340,qs),
(442,419,o),
(398,469,qs),
(347,527,o),
(256,527,qs),
(177,527,o),
(128,482,qs),
(71,431,o),
(71,340,qs),
(71,261,o),
(115,211,qs),
(166,153,o),
(256,153,qs),
(335,153,o)
);
},
{
closed = 1;
nodes = (
(330,409,qs),
(328,409,o),
(325,412,q),
(297,433,o),
(264,433,qs),
(229,433,o),
(187,382,o),
(187,339,qs),
(187,248,o),
(263,248,qs),
(305,248,o),
(331,283,qs),
(335,288,o),
(337,288,qs),
(342,288,o),
(342,281,qs),
(342,256,o),
(292,217,o),
(260,217,qs),
(215,217,o),
(186,245,qs),
(151,279,o),
(151,340,qs),
(151,392,o),
(180,426,qs),
(211,463,o),
(264,463,qs),
(297,463,o),
(320,451,qs),
(336,443,o),
(335,431,qs),
(333,413,ls),
(333,409,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 79 values pushed */
63 1 6 8 1 76 0 6 8 7 8 6 7 128 0 1 0 3 4 1 3 105 0 4 0 8 6 4 8 105 0 7 0 5 2 7 5 105 9 1 2 0 0 2 89 9 1 2 2 0 98 0 0 2 0 82 17 16 60 58 55 53 51 49 46 44 38 36 25 23 16 31 17 31 38 35 10 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 512;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(158,257,qs),
(100,257,o),
(62,295,qs),
(20,337,o),
(20,404,qs),
(20,464,o),
(55,506,qs),
(95,553,o),
(160,553,qs),
(226,553,o),
(260,504,q),
(260,548,o),
(291,548,qs),
(297,548,ls),
(301,548,o),
(301,543,qs),
(301,269,ls),
(301,264,o),
(297,264,qs),
(263,264,ls),
(260,264,o),
(260,269,qs),
(260,308,l),
(225,257,o)
);
},
{
closed = 1;
nodes = (
(257,352,o),
(257,404,qs),
(257,455,o),
(205,513,o),
(160,513,qs),
(119,513,o),
(94,486,qs),
(65,456,o),
(65,404,qs),
(65,356,o),
(116,296,o),
(156,296,qs),
(204,296,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 4 3 4 0 3 128 0 1 1 55 77 0 5 5 2 97 0 2 2 55 77 6 1 4 4 3 97 0 3 3 56 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 1 1 55 77 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 6 1 4 0 3 4 3 101 0 5 5 2 97 0 2 2 55 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 2 5 2 1 5 128 0 0 4 3 4 0 3 128 0 2 0 5 4 2 5 105 6 1 4 0 3 4 89 6 1 4 4 3 97 0 3 4 3 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
25 24 32 30 24 36 25 36 38 34 37 19 7 10 26 
CALL[ ]	/* CallFunction */";
};
width = 328;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,40,o),
(329,40,qs),
(285,40,ls),
(276,40,o),
(270,48,qs),
(174,170,ls),
(167,179,o),
(167,184,qs),
(167,188,o),
(174,198,qs),
(270,320,ls),
(276,328,o),
(285,328,qs),
(329,328,ls),
(337,328,o),
(332,321,qs),
(228,184,l),
(332,47,ls)
);
},
{
closed = 1;
nodes = (
(199,40,o),
(191,40,qs),
(147,40,ls),
(137,40,o),
(131,48,qs),
(36,170,ls),
(29,179,o),
(29,184,qs),
(29,188,o),
(36,198,qs),
(131,320,ls),
(137,328,o),
(147,328,qs),
(191,328,ls),
(199,328,o),
(194,321,qs),
(90,184,l),
(194,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 3 1 1 0 1 81 56 52 56 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = uni00AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,186,qs),
(41,221,ls),
(41,227,o),
(46,227,qs),
(260,227,ls),
(265,227,o),
(265,221,qs),
(265,186,ls),
(265,180,o),
(260,180,qs),
(46,180,ls),
(41,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 305;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,494,qs),
(148,563,o),
(256,563,qs),
(349,563,o),
(410,509,qs),
(479,447,o),
(479,340,qs),
(479,247,o),
(425,186,qs),
(363,117,o),
(256,117,qs),
(162,117,o),
(102,171,qs),
(33,232,o),
(33,340,qs),
(33,434,o)
);
},
{
closed = 1;
nodes = (
(385,198,qs),
(442,249,o),
(442,340,qs),
(442,419,o),
(398,469,qs),
(347,527,o),
(256,527,qs),
(177,527,o),
(128,482,qs),
(71,431,o),
(71,340,qs),
(71,261,o),
(115,211,qs),
(166,153,o),
(256,153,qs),
(335,153,o)
);
},
{
closed = 1;
nodes = (
(312,340,o),
(312,388,qs),
(312,428,o),
(254,428,qs),
(207,428,l),
(207,340,l),
(250,340,ls)
);
},
{
closed = 1;
nodes = (
(207,222,o),
(205,222,qs),
(173,222,ls),
(171,222,o),
(171,225,qs),
(171,457,ls),
(171,459,o),
(173,459,qs),
(262,459,ls),
(303,459,o),
(348,421,o),
(348,386,qs),
(348,329,o),
(297,311,q),
(353,225,l),
(356,222,o),
(351,222,qs),
(322,222,ls),
(316,222,o),
(313,226,qs),
(261,308,l),
(207,308,l),
(207,225,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
47 1 6 5 56 1 7 6 2 76 59 1 7 1 75 0 7 6 2 6 7 2 128 0 1 0 3 8 1 3 105 0 8 0 4 5 8 4 105 10 1 5 0 6 7 5 6 103 9 1 2 0 0 2 89 9 1 2 2 0 97 0 0 2 0 81 32 32 17 16 53 51 44 42 40 39 32 38 32 37 35 33 25 23 16 31 17 31 38 35 11 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 512;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,437,qs),
(0,464,ls),
(0,469,o),
(5,469,qs),
(197,469,ls),
(202,469,o),
(202,464,qs),
(202,437,ls),
(202,431,o),
(197,431,qs),
(5,431,ls),
(0,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 202;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,396,qs),
(26,426,o),
(26,474,qs),
(26,521,o),
(84,579,o),
(130,579,qs),
(173,579,o),
(202,554,qs),
(235,524,o),
(235,474,qs),
(235,433,o),
(209,404,qs),
(180,369,o),
(130,369,qs),
(87,369,o)
);
},
{
closed = 1;
nodes = (
(193,445,o),
(193,474,qs),
(193,504,o),
(157,543,o),
(130,543,qs),
(103,543,o),
(68,504,o),
(68,474,qs),
(68,445,o),
(103,407,o),
(130,407,qs),
(157,407,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 16 15 1 0 22 20 15 26 16 26 9 7 0 14 1 14 6 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 261;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,249,o),
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(169,295,l),
(169,437,ls),
(169,443,o),
(174,443,qs),
(215,443,o),
(215,397,qs),
(215,295,l),
(339,295,ls),
(344,295,o),
(344,289,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(215,249,l),
(215,107,ls),
(215,101,o),
(210,101,qs),
(174,101,ls),
(169,101,o),
(169,107,qs),
(169,249,l),
(46,249,ls)
);
},
{
closed = 1;
nodes = (
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(305,47,ls),
(344,47,o),
(344,11,qs),
(344,6,ls),
(344,0,o),
(339,0,qs),
(46,0,ls),
(41,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
19 1 2 3 24 23 11 10 4 1 2 6 1 2 0 1 37 36 30 3 6 7 4 76 4 1 2 8 5 2 1 0 2 1 103 0 3 0 0 7 3 0 103 0 7 7 6 95 0 6 6 40 6 78 0 0 34 32 28 27 0 26 0 26 19 18 21 19 19 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = twosuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(250,279,o),
(250,263,qs),
(250,243,ls),
(250,239,o),
(245,239,qs),
(37,239,ls),
(34,239,o),
(34,242,qs),
(34,293,o),
(64,329,qs),
(83,352,o),
(129,380,qs),
(177,410,o),
(206,444,o),
(206,469,qs),
(206,522,o),
(133,522,qs),
(93,522,o),
(54,494,q),
(53,494,o),
(52,493,q),
(48,491,o),
(46,491,qs),
(42,491,o),
(42,496,qs),
(39,518,ls),
(37,533,o),
(58,543,qs),
(96,562,o),
(135,562,qs),
(187,562,o),
(251,511,o),
(251,471,qs),
(251,439,o),
(214,390,o),
(167,360,qs),
(120,330,o),
(89,299,o),
(83,279,q),
(232,279,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
16 1 3 1 36 1 2 3 2 76 0 1 1 0 97 0 0 0 55 77 4 1 3 3 2 95 0 2 2 56 2 78 0 0 0 39 0 38 56 43 40 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 284;
}
);
note = twosuperior;
unicode = 178;
},
{
glyphname = threesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,327,qs),
(265,289,o),
(239,263,qs),
(207,233,o),
(149,233,qs),
(106,233,o),
(36,281,o),
(36,311,qs),
(36,322,o),
(44,322,qs),
(48,322,o),
(52,316,qs),
(83,272,o),
(142,272,qs),
(220,272,o),
(220,325,qs),
(220,386,o),
(134,386,qs),
(103,386,ls),
(86,386,o),
(86,403,qs),
(86,421,ls),
(86,424,o),
(90,424,qs),
(142,424,ls),
(212,424,o),
(212,477,qs),
(212,523,o),
(138,523,qs),
(98,523,o),
(59,497,qs),
(54,493,o),
(51,493,qs),
(47,493,o),
(47,498,q),
(44,518,ls),
(42,530,o),
(63,543,qs),
(99,562,o),
(142,562,qs),
(195,562,o),
(255,518,o),
(255,479,qs),
(255,423,o),
(202,404,q),
(265,388,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
12 1 2 1 23 1 3 2 2 76 0 5 3 4 3 5 4 128 0 2 0 3 5 2 3 105 0 1 1 0 97 0 0 0 55 77 0 4 4 6 97 0 6 6 56 6 78 35 34 34 52 34 41 36 7 10 29 
CALL[ ]	/* CallFunction */";
};
width = 301;
}
);
note = threesuperior;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(75,502,o),
(86,502,qs),
(135,502,ls),
(138,502,o),
(140,498,o),
(138,496,qs),
(67,440,ls),
(54,431,o),
(42,431,qs),
(5,431,ls),
(2,431,o),
(1,432,q),
(0,435,o),
(2,436,q),
(65,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 1 0 1 133 0 0 0 118 37 36 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 139;
}
);
note = acute;
unicode = 180;
},
{
glyphname = paragraph;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,221,o),
(93,260,qs),
(40,307,o),
(40,391,qs),
(40,462,o),
(79,504,qs),
(127,556,o),
(231,556,qs),
(302,556,ls),
(363,556,o),
(363,491,qs),
(363,6,ls),
(363,0,o),
(358,0,qs),
(328,0,ls),
(323,0,o),
(323,6,qs),
(323,514,l),
(251,514,l),
(251,6,ls),
(251,0,o),
(246,0,qs),
(216,0,ls),
(211,0,o),
(211,6,qs),
(211,221,l),
(207,221,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
14 9 6 1 4 0 4 1 76 0 4 1 0 1 4 0 128 0 1 1 3 95 0 3 3 39 77 2 1 0 0 40 0 78 22 52 19 19 19 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,297,o),
(109,279,qs),
(109,262,o),
(85,237,o),
(68,237,qs),
(51,237,o),
(27,262,o),
(27,279,qs),
(27,297,o),
(51,322,o),
(68,322,qs),
(85,322,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 137;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,-86,o),
(40,-86,qs),
(7,-86,ls),
(-1,-86,o),
(4,-80,q),
(51,-5,ls),
(58,5,o),
(74,5,qs),
(96,5,ls),
(102,5,o),
(100,-1,q),
(61,-77,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 51 49 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 98;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = onesuperior;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,491,o),
(28,494,qs),
(28,532,ls),
(28,536,o),
(33,538,qs),
(71,551,ls),
(85,556,o),
(98,556,qs),
(116,556,ls),
(138,556,o),
(138,528,qs),
(138,245,ls),
(138,239,o),
(133,239,qs),
(98,239,ls),
(93,239,o),
(93,245,qs),
(93,514,l),
(31,493,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
16 6 1 0 4 0 1 1 76 0 1 1 55 77 0 0 0 56 0 78 52 19 2 10 24 
CALL[ ]	/* CallFunction */";
};
width = 194;
}
);
note = onesuperior;
unicode = 185;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,292,qs),
(20,332,o),
(20,404,qs),
(20,466,o),
(54,507,qs),
(93,553,o),
(159,553,qs),
(219,553,o),
(257,517,qs),
(300,476,o),
(300,404,qs),
(300,342,o),
(266,303,qs),
(228,257,o),
(159,257,qs),
(101,257,o)
);
},
{
closed = 1;
nodes = (
(256,354,o),
(256,404,qs),
(256,452,o),
(202,513,o),
(159,513,qs),
(116,513,o),
(65,454,o),
(65,404,qs),
(65,355,o),
(116,296,o),
(159,296,qs),
(203,296,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 97 0 1 1 55 77 5 1 2 2 0 97 4 1 0 0 56 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 4 1 0 2 0 101 0 3 3 1 97 0 1 1 55 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,328,o),
(35,328,qs),
(79,328,ls),
(89,328,o),
(95,320,qs),
(190,198,ls),
(197,190,o),
(197,184,qs),
(197,178,o),
(190,170,qs),
(95,48,ls),
(89,40,o),
(79,40,qs),
(35,40,ls),
(27,40,o),
(32,47,qs),
(136,184,l),
(32,321,ls)
);
},
{
closed = 1;
nodes = (
(165,328,o),
(173,328,qs),
(217,328,ls),
(227,328,o),
(233,320,qs),
(328,198,ls),
(335,189,o),
(335,184,qs),
(335,178,o),
(328,170,qs),
(233,48,ls),
(227,40,o),
(217,40,qs),
(173,40,ls),
(165,40,o),
(170,47,qs),
(275,184,l),
(170,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 2 1 0 1 0 81 56 52 56 50 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,79,o),
(317,82,qs),
(317,97,ls),
(317,107,o),
(323,115,qs),
(460,308,ls),
(466,317,o),
(477,317,qs),
(502,317,ls),
(522,317,o),
(522,296,qs),
(522,117,l),
(548,117,ls),
(566,117,o),
(566,100,qs),
(566,83,ls),
(566,79,o),
(561,79,qs),
(522,79,l),
(522,3,ls),
(522,0,o),
(519,0,qs),
(482,0,ls),
(479,0,o),
(479,3,qs),
(479,79,l),
(320,79,ls)
);
},
{
closed = 1;
nodes = (
(111,6,qs),
(411,549,l),
(414,556,o),
(418,556,qs),
(424,556,ls),
(443,556,o),
(449,527,o),
(436,503,qs),
(163,6,ls),
(160,0,o),
(155,0,qs),
(113,0,ls),
(108,0,o)
);
},
{
closed = 1;
nodes = (
(28,492,o),
(28,494,qs),
(28,532,ls),
(28,536,o),
(33,538,qs),
(71,551,ls),
(85,556,o),
(98,556,qs),
(116,556,ls),
(138,556,o),
(138,528,qs),
(138,245,ls),
(138,239,o),
(133,239,qs),
(98,239,ls),
(93,239,o),
(93,245,qs),
(93,514,l),
(31,493,ls)
);
},
{
closed = 1;
nodes = (
(479,275,l),
(367,117,l),
(479,117,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 100 values pushed */
56 40 2 2 5 60 46 41 3 6 2 10 1 0 1 1 1 4 0 4 76 4 1 4 73 0 2 5 6 5 2 6 128 10 1 4 0 4 134 7 1 5 0 6 1 5 6 103 11 8 2 1 0 0 1 89 11 8 2 1 1 0 96 9 3 2 0 1 0 80 59 59 28 27 0 0 59 61 59 61 51 48 44 43 36 33 27 39 28 39 0 26 0 24 50 36 23 12 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 601;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(111,6,qs),
(411,549,l),
(414,556,o),
(418,556,qs),
(424,556,ls),
(443,556,o),
(449,527,o),
(436,503,qs),
(163,6,ls),
(160,0,o),
(155,0,qs),
(113,0,ls),
(108,0,o)
);
},
{
closed = 1;
nodes = (
(611,41,o),
(611,24,qs),
(611,4,ls),
(611,0,o),
(606,0,qs),
(398,0,ls),
(395,0,o),
(395,3,qs),
(395,54,o),
(425,90,qs),
(444,113,o),
(489,141,qs),
(537,171,o),
(567,205,o),
(567,231,qs),
(567,283,o),
(494,283,qs),
(452,283,o),
(415,257,qs),
(414,256,o),
(413,256,q),
(409,253,o),
(407,253,qs),
(403,253,o),
(403,258,q),
(400,279,ls),
(398,294,o),
(419,304,qs),
(457,323,o),
(496,323,qs),
(547,323,o),
(612,273,o),
(612,233,qs),
(612,201,o),
(575,152,o),
(528,121,qs),
(481,91,o),
(450,61,o),
(444,41,q),
(593,41,ls)
);
},
{
closed = 1;
nodes = (
(28,492,o),
(28,494,qs),
(28,532,ls),
(28,536,o),
(33,538,qs),
(71,551,ls),
(85,556,o),
(98,556,qs),
(116,556,ls),
(138,556,o),
(138,528,qs),
(138,245,ls),
(138,239,o),
(133,239,qs),
(98,239,ls),
(93,239,o),
(93,245,qs),
(93,514,l),
(31,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 81 values pushed */
69 53 2 2 1 59 54 29 3 6 3 49 1 0 5 3 76 0 2 0 3 6 2 3 105 7 1 1 0 6 5 1 6 103 9 1 5 0 0 5 87 9 1 5 5 0 97 4 8 2 0 5 0 81 13 13 1 0 64 61 57 56 13 52 13 51 47 44 36 34 23 21 9 6 0 12 1 12 10 9 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 672;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,79,o),
(400,82,qs),
(400,97,ls),
(400,107,o),
(407,115,q),
(543,308,ls),
(550,317,o),
(560,317,qs),
(585,317,ls),
(605,317,o),
(605,296,qs),
(605,117,l),
(632,117,ls),
(648,117,o),
(648,100,qs),
(648,83,ls),
(648,79,o),
(644,79,qs),
(605,79,l),
(605,3,ls),
(605,0,o),
(603,0,qs),
(565,0,ls),
(563,0,o),
(563,3,qs),
(563,79,l),
(404,79,ls)
);
},
{
closed = 1;
nodes = (
(265,327,qs),
(265,289,o),
(239,263,qs),
(207,233,o),
(149,233,qs),
(106,233,o),
(36,281,o),
(36,311,qs),
(36,322,o),
(44,322,qs),
(48,322,o),
(52,316,qs),
(83,272,o),
(142,272,qs),
(220,272,o),
(220,325,qs),
(220,386,o),
(134,386,qs),
(103,386,ls),
(86,386,o),
(86,403,qs),
(86,421,ls),
(86,424,o),
(90,424,qs),
(142,424,ls),
(212,424,o),
(212,477,qs),
(212,523,o),
(138,523,qs),
(98,523,o),
(59,497,qs),
(54,493,o),
(51,493,qs),
(47,493,o),
(47,498,q),
(44,518,ls),
(42,530,o),
(63,543,qs),
(99,562,o),
(142,562,qs),
(195,562,o),
(255,518,o),
(255,479,qs),
(255,423,o),
(202,404,q),
(265,388,o)
);
},
{
closed = 1;
nodes = (
(195,6,qs),
(493,549,ls),
(497,556,o),
(500,556,qs),
(507,556,ls),
(525,556,o),
(532,527,o),
(518,503,qs),
(247,6,ls),
(244,0,o),
(239,0,qs),
(197,0,ls),
(191,0,o)
);
},
{
closed = 1;
nodes = (
(563,275,l),
(450,117,l),
(563,117,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
39 1 6 5 50 1 7 6 87 1 8 2 24 10 2 0 1 1 1 11 0 5 76 4 1 11 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
9 1 2 7 8 7 2 8 128 15 1 11 0 11 134 12 1 4 0 5 6 4 5 105 0 6 0 7 2 6 7 105 0 8 0 10 1 8 10 105 16 13 2 1 0 0 1 89 16 13 2 1 1 0 96 14 3 2 0 1 0 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 12 4 5 4 12 5 128 9 1 2 7 8 7 2 8 128 15 1 11 0 11 134 0 4 0 5 6 4 5 105 0 6 0 7 2 6 7 105 0 8 0 10 1 8 10 105 16 13 2 1 0 0 1 89 16 13 2 1 1 0 96 14 3 2 0 1 0 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
0 12 4 5 4 12 5 128 0 9 7 2 7 9 2 128 0 2 8 7 2 8 126 15 1 11 0 11 134 0 4 0 5 6 4 5 105 0 6 0 7 9 6 7 105 0 8 0 10 1 8 10 105 16 13 2 1 0 0 1 89 16 13 2 1 1 0 96 14 3 2 0 1 0 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 40 values pushed */
86 86 74 73 0 0 86 88 86 88 81 79 73 85 74 85 68 66 63 61 59 57 55 52 48 46 44 42 33 31 0 26 0 26 50 36 23 17 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 683;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,312,o),
(148,329,qs),
(148,347,o),
(172,372,o),
(189,372,qs),
(206,372,o),
(230,347,o),
(230,329,qs),
(230,312,o),
(206,287,o),
(189,287,qs),
(172,287,o)
);
},
{
closed = 1;
nodes = (
(49,42,qs),
(70,67,o),
(146,129,qs),
(166,146,o),
(166,178,qs),
(166,216,ls),
(166,222,o),
(171,222,qs),
(176,222,ls),
(211,222,o),
(211,176,qs),
(211,149,o),
(196,125,qs),
(183,105,o),
(144,74,qs),
(96,35,o),
(63,-16,o),
(63,-52,qs),
(63,-100,o),
(91,-128,qs),
(123,-162,o),
(184,-162,qs),
(256,-162,o),
(315,-119,qs),
(322,-114,o),
(328,-114,qs),
(332,-114,o),
(335,-121,qs),
(345,-151,ls),
(347,-156,o),
(341,-159,q),
(267,-210,o),
(185,-210,qs),
(108,-210,o),
(63,-174,qs),
(12,-133,o),
(12,-52,qs),
(12,-3,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 5 0 3 0 5 3 128 0 3 4 0 3 4 126 0 4 0 2 4 2 102 6 1 0 0 1 97 0 1 1 48 0 78 1 0 42 39 28 26 24 22 17 15 7 5 0 11 1 11 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 325;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(173,691,o),
(175,691,qs),
(225,691,ls),
(236,691,o),
(246,682,qs),
(309,625,l),
(311,624,o),
(309,619,o),
(306,619,qs),
(269,619,ls),
(257,619,o),
(244,629,qs),
(173,685,l),
(171,686,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 34 32 27 25 21 18 15 12 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(255,691,o),
(266,691,qs),
(315,691,ls),
(318,691,o),
(320,687,o),
(319,685,q),
(247,629,ls),
(234,619,o),
(222,619,qs),
(185,619,ls),
(183,619,o),
(181,621,q),
(180,624,o),
(183,625,q),
(245,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
1 1 0 3 1 76 0 6 5 6 133 0 5 3 5 133 7 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 36 33 29 27 21 18 15 12 9 6 4 3 0 2 0 2 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(200,619,o),
(185,619,qs),
(153,619,ls),
(150,619,o),
(147,624,o),
(150,625,q),
(212,682,ls),
(222,691,o),
(233,691,qs),
(262,691,ls),
(273,691,o),
(283,682,qs),
(345,625,l),
(348,624,o),
(345,619,o),
(343,619,qs),
(310,619,ls),
(296,619,o),
(285,629,qs),
(248,664,l),
(210,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
1 1 0 3 1 76 0 6 5 6 133 7 1 5 3 5 133 8 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 42 40 35 32 27 25 21 18 15 12 9 6 4 3 0 2 0 2 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(152,625,qs),
(156,684,o),
(203,684,qs),
(220,684,o),
(252,669,qs),
(279,657,o),
(288,657,qs),
(303,657,o),
(308,672,qs),
(310,680,o),
(317,680,qs),
(344,680,ls),
(350,680,o),
(350,674,qs),
(348,648,o),
(317,617,o),
(292,617,qs),
(275,617,o),
(244,632,qs),
(218,644,o),
(209,644,qs),
(194,644,o),
(192,627,qs),
(191,619,o),
(185,619,qs),
(158,619,ls),
(152,619,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
35 1 9 8 48 1 5 6 1 1 0 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
10 1 8 0 6 5 8 6 105 0 9 7 1 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 8 10 9 10 8 9 128 0 10 0 6 5 10 6 105 0 9 7 1 5 3 9 5 106 11 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
0 0 47 45 43 41 39 37 33 31 29 27 24 23 21 18 15 12 9 6 4 3 0 2 0 2 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(177,681,o),
(191,681,qs),
(205,681,o),
(225,661,o),
(225,647,qs),
(225,633,o),
(205,614,o),
(191,614,qs),
(177,614,o),
(158,634,o),
(158,647,qs),
(158,661,o)
);
},
{
closed = 1;
nodes = (
(289,681,o),
(303,681,qs),
(317,681,o),
(337,661,o),
(337,647,qs),
(337,633,o),
(317,614,o),
(303,614,qs),
(290,614,o),
(270,634,o),
(270,647,qs),
(270,661,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
1 1 0 3 1 76 8 1 6 7 1 5 3 6 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 0 0 45 43 39 37 33 31 27 25 21 18 15 12 9 6 4 3 0 2 0 2 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
kernRight = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,493,l),
(145,216,l),
(353,216,l)
);
},
{
closed = 1;
nodes = (
(65,0,o),
(55,0,qs),
(18,0,ls),
(11,0,o),
(14,7,qs),
(225,549,ls),
(228,556,o),
(234,556,qs),
(239,556,ls),
(276,556,o),
(289,521,qs),
(488,7,ls),
(491,0,o),
(484,0,qs),
(445,0,ls),
(434,0,o),
(430,12,qs),
(371,169,l),
(127,169,l),
(70,12,ls)
);
},
{
closed = 1;
nodes = (
(225,737,o),
(251,737,qs),
(279,737,o),
(317,699,o),
(317,673,qs),
(317,647,o),
(278,609,o),
(251,609,qs),
(225,609,o),
(186,647,o),
(186,673,qs),
(186,699,o)
);
},
{
closed = 1;
nodes = (
(284,658,o),
(284,673,qs),
(284,688,o),
(266,708,o),
(251,708,qs),
(237,708,o),
(219,688,o),
(219,673,qs),
(219,658,o),
(238,639,o),
(251,639,qs),
(266,639,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
1 1 0 3 1 76 0 6 0 8 7 6 8 105 10 1 7 0 5 3 7 5 105 9 1 0 0 1 2 0 1 104 0 3 3 39 77 4 1 2 2 40 2 78 36 35 0 0 42 40 35 46 36 46 33 31 27 25 21 18 15 12 9 6 4 3 0 2 0 2 11 9 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(50,0,qs),
(9,0,ls),
(2,0,o),
(6,7,qs),
(301,548,ls),
(305,556,o),
(312,556,qs),
(592,556,ls),
(622,556,o),
(622,527,qs),
(622,516,ls),
(622,508,o),
(615,508,qs),
(384,508,l),
(384,298,l),
(575,298,ls),
(605,298,o),
(605,270,qs),
(605,259,ls),
(605,252,o),
(596,252,qs),
(384,252,l),
(384,47,l),
(602,47,ls),
(632,47,o),
(632,18,qs),
(632,7,ls),
(632,0,o),
(625,0,qs),
(337,0,ls),
(332,0,o),
(332,6,qs),
(332,169,l),
(149,169,l),
(67,12,ls)
);
},
{
closed = 1;
nodes = (
(332,509,l),
(174,216,l),
(332,216,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
37 1 5 6 2 1 1 2 2 76 0 4 0 3 8 4 3 103 9 1 8 0 0 2 8 0 103 0 5 5 6 95 0 6 6 39 77 0 2 2 1 97 7 1 1 1 40 1 78 36 36 36 38 36 38 51 51 33 35 33 35 35 16 10 9 30 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = C;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(274,-95,o),
(258,-95,qs),
(224,-95,ls),
(221,-95,o),
(219,-92,o),
(220,-90,qs),
(269,-15,ls),
(271,-12,o),
(274,-10,q),
(180,-1,o),
(124,65,qs),
(57,142,o),
(57,278,qs),
(57,401,o),
(119,479,qs),
(189,567,o),
(310,567,qs),
(378,567,o),
(444,534,qs),
(484,515,o),
(478,489,qs),
(474,473,ls),
(472,464,o),
(466,464,qs),
(464,464,o),
(454,471,qs),
(386,519,o),
(309,519,qs),
(221,519,o),
(168,463,qs),
(106,397,o),
(106,276,qs),
(106,170,o),
(153,108,qs),
(206,36,o),
(306,36,qs),
(409,36,o),
(464,115,qs),
(470,125,o),
(476,125,qs),
(489,125,o),
(489,109,qs),
(489,79,o),
(455,45,qs),
(404,-6,o),
(316,-11,q),
(279,-87,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
40 37 2 6 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 6 0 0 6 113 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 6 0 6 134 0 3 3 5 97 0 5 5 39 77 0 2 2 0 97 0 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 6 0 6 134 0 5 0 3 4 5 3 105 0 2 2 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
45 37 34 38 35 20 16 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 513;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,47,o),
(372,18,qs),
(372,7,ls),
(372,0,o),
(364,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,509,o),
(354,509,qs),
(124,509,l),
(124,298,l),
(314,298,ls),
(344,298,o),
(344,269,qs),
(344,257,ls),
(344,251,o),
(336,251,qs),
(124,251,l),
(124,47,l),
(342,47,ls)
);
},
{
closed = 1;
nodes = (
(134,691,o),
(136,691,qs),
(186,691,ls),
(197,691,o),
(207,682,qs),
(270,625,l),
(272,624,o),
(270,619,o),
(267,619,qs),
(230,619,ls),
(218,619,o),
(205,629,qs),
(134,685,l),
(132,686,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
18 1 2 3 19 1 4 5 2 76 0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 39 37 32 30 0 27 0 26 37 35 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,47,o),
(372,18,qs),
(372,7,ls),
(372,0,o),
(364,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,509,o),
(354,509,qs),
(124,509,l),
(124,298,l),
(314,298,ls),
(344,298,o),
(344,269,qs),
(344,257,ls),
(344,251,o),
(336,251,qs),
(124,251,l),
(124,47,l),
(342,47,ls)
);
},
{
closed = 1;
nodes = (
(236,691,o),
(247,691,qs),
(296,691,ls),
(299,691,o),
(301,687,o),
(300,685,q),
(228,629,ls),
(215,619,o),
(203,619,qs),
(166,619,ls),
(164,619,o),
(162,621,q),
(161,624,o),
(164,625,q),
(226,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
18 1 2 3 19 1 4 5 2 76 0 7 6 7 133 0 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 8 1 5 5 4 95 0 4 4 40 4 78 0 0 41 38 34 32 0 27 0 26 37 35 33 35 33 9 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,47,o),
(372,18,qs),
(372,7,ls),
(372,0,o),
(364,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,509,o),
(354,509,qs),
(124,509,l),
(124,298,l),
(314,298,ls),
(344,298,o),
(344,269,qs),
(344,257,ls),
(344,251,o),
(336,251,qs),
(124,251,l),
(124,47,l),
(342,47,ls)
);
},
{
closed = 1;
nodes = (
(170,619,o),
(155,619,qs),
(122,619,ls),
(120,619,o),
(118,621,q),
(117,624,o),
(120,625,q),
(182,682,ls),
(192,691,o),
(203,691,qs),
(232,691,ls),
(243,691,o),
(252,682,qs),
(315,625,l),
(317,624,o),
(315,619,o),
(312,619,qs),
(280,619,ls),
(265,619,o),
(255,629,qs),
(218,664,l),
(180,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
18 1 2 3 19 1 4 5 2 76 0 7 6 7 133 8 1 6 3 6 133 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 9 1 5 5 4 95 0 4 4 40 4 78 0 0 48 46 40 37 32 30 0 27 0 26 37 35 33 35 33 10 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,47,o),
(372,18,qs),
(372,7,ls),
(372,0,o),
(364,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(332,556,ls),
(362,556,o),
(362,527,qs),
(362,516,ls),
(362,509,o),
(354,509,qs),
(124,509,l),
(124,298,l),
(314,298,ls),
(344,298,o),
(344,269,qs),
(344,257,ls),
(344,251,o),
(336,251,qs),
(124,251,l),
(124,47,l),
(342,47,ls)
);
},
{
closed = 1;
nodes = (
(146,681,o),
(160,681,qs),
(174,681,o),
(194,661,o),
(194,647,qs),
(194,633,o),
(174,614,o),
(160,614,qs),
(146,614,o),
(127,634,o),
(127,647,qs),
(127,661,o)
);
},
{
closed = 1;
nodes = (
(258,681,o),
(272,681,qs),
(286,681,o),
(306,661,o),
(306,647,qs),
(306,633,o),
(286,614,o),
(272,614,qs),
(258,614,o),
(239,634,o),
(239,647,qs),
(239,661,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
18 1 2 3 19 1 4 5 2 76 9 1 7 8 1 6 3 7 6 105 0 1 0 0 5 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 5 5 4 95 0 4 4 40 4 78 0 0 50 48 44 42 38 36 32 30 0 27 0 26 37 35 33 35 33 11 9 27 
CALL[ ]	/* CallFunction */";
};
width = 404;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,6,qs),
(84,549,ls),
(84,556,o),
(89,556,qs),
(93,556,ls),
(111,556,o),
(134,527,o),
(134,504,qs),
(134,6,ls),
(134,0,o),
(129,0,qs),
(89,0,ls),
(84,0,o)
);
},
{
closed = 1;
nodes = (
(30,691,o),
(33,691,qs),
(83,691,ls),
(94,691,o),
(104,682,qs),
(166,625,l),
(169,624,o),
(166,619,o),
(164,619,qs),
(126,619,ls),
(114,619,o),
(102,629,qs),
(30,685,l),
(28,686,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 0 0 0 40 0 78 37 38 53 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,6,qs),
(84,549,ls),
(84,556,o),
(89,556,qs),
(93,556,ls),
(112,556,o),
(134,527,o),
(134,504,qs),
(134,6,ls),
(134,0,o),
(129,0,qs),
(89,0,ls),
(84,0,o)
);
},
{
closed = 1;
nodes = (
(103,691,o),
(114,691,qs),
(163,691,ls),
(166,691,o),
(168,687,o),
(166,685,qs),
(95,629,ls),
(82,619,o),
(70,619,qs),
(33,619,ls),
(30,619,o),
(29,621,qs),
(28,624,o),
(30,625,q),
(93,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 39 77 0 0 0 40 0 78 37 40 53 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(82,556,ls),
(101,556,o),
(123,527,o),
(123,504,qs),
(123,6,ls),
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o)
);
},
{
closed = 1;
nodes = (
(50,619,o),
(35,619,qs),
(2,619,ls),
(-1,619,o),
(-2,621,qs),
(-3,624,o),
(-1,625,q),
(62,682,ls),
(72,691,o),
(83,691,qs),
(112,691,ls),
(122,691,o),
(132,682,qs),
(195,625,l),
(197,624,o),
(195,619,o),
(192,619,qs),
(159,619,ls),
(145,619,o),
(134,629,qs),
(98,664,l),
(60,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 39 77 0 0 0 40 0 78 38 53 38 53 16 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernRight = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(82,556,ls),
(101,556,o),
(123,527,o),
(123,504,qs),
(123,6,ls),
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o)
);
},
{
closed = 1;
nodes = (
(28,681,o),
(42,681,qs),
(56,681,o),
(76,661,o),
(76,647,qs),
(76,633,o),
(56,614,o),
(42,614,qs),
(28,614,o),
(9,634,o),
(9,647,qs),
(9,661,o)
);
},
{
closed = 1;
nodes = (
(140,681,o),
(154,681,qs),
(168,681,o),
(188,661,o),
(188,647,qs),
(188,633,o),
(168,614,o),
(154,614,qs),
(140,614,o),
(121,634,o),
(121,647,qs),
(121,661,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
11 3 2 0 1 1 76 5 1 3 4 1 2 1 3 2 105 0 1 1 39 77 0 0 0 40 0 78 36 36 36 38 53 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 196;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(14,258,o),
(14,264,qs),
(14,298,ls),
(14,304,o),
(19,304,qs),
(76,304,l),
(76,549,ls),
(76,556,o),
(81,556,qs),
(230,556,ls),
(352,556,o),
(421,495,qs),
(498,425,o),
(498,286,qs),
(498,151,o),
(432,78,qs),
(361,0,o),
(223,0,qs),
(81,0,ls),
(76,0,o),
(76,6,qs),
(76,258,l),
(19,258,ls)
);
},
{
closed = 1;
nodes = (
(448,47,o),
(448,284,qs),
(448,397,o),
(399,451,qs),
(346,508,o),
(224,508,qs),
(126,508,l),
(126,304,l),
(292,304,ls),
(322,304,o),
(322,276,qs),
(322,265,ls),
(322,258,o),
(314,258,qs),
(126,258,l),
(126,47,l),
(229,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
15 1 6 1 20 19 2 3 2 1 1 0 7 3 76 5 1 2 4 8 2 3 7 2 3 103 0 6 6 1 95 0 1 1 39 77 9 1 7 7 0 95 0 0 0 40 0 78 23 23 0 0 23 39 23 38 34 32 31 29 26 24 0 22 0 22 19 38 35 10 9 25 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernRight = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,556,o),
(405,556,qs),
(410,556,ls),
(428,556,o),
(450,527,o),
(450,504,qs),
(450,6,ls),
(450,0,o),
(445,0,qs),
(411,0,ls),
(396,0,o),
(389,13,qs),
(124,445,l),
(124,6,ls),
(124,0,o),
(119,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(82,556,ls),
(104,556,o),
(124,541,o),
(139,515,qs),
(400,89,l),
(400,549,ls)
);
},
{
closed = 1;
nodes = (
(157,625,qs),
(161,684,o),
(207,684,qs),
(225,684,o),
(257,669,qs),
(284,657,o),
(293,657,qs),
(308,657,o),
(313,672,qs),
(315,680,o),
(322,680,qs),
(349,680,ls),
(355,680,o),
(355,674,qs),
(353,648,o),
(322,617,o),
(297,617,qs),
(280,617,o),
(249,632,qs),
(223,644,o),
(214,644,qs),
(199,644,o),
(197,627,qs),
(196,619,o),
(190,619,qs),
(163,619,ls),
(157,619,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
40 1 8 7 53 1 4 5 20 14 13 8 0 5 1 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
9 1 7 0 5 4 7 5 105 0 8 6 1 4 0 8 4 106 3 1 0 0 39 77 2 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 7 9 8 9 7 8 128 0 9 0 5 4 9 5 105 0 8 6 1 4 0 8 4 106 3 1 0 0 39 77 2 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
52 50 34 36 34 35 18 53 37 20 51 10 9 31 
CALL[ ]	/* CallFunction */";
};
width = 522;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
},
{
closed = 1;
nodes = (
(230,691,o),
(233,691,qs),
(283,691,ls),
(293,691,o),
(303,682,qs),
(366,625,l),
(368,624,o),
(366,619,o),
(363,619,qs),
(326,619,ls),
(314,619,o),
(301,629,qs),
(230,685,l),
(228,686,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 43 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
},
{
closed = 1;
nodes = (
(304,691,o),
(314,691,qs),
(364,691,ls),
(366,691,o),
(369,687,o),
(367,685,qs),
(295,629,ls),
(283,619,o),
(270,619,qs),
(234,619,ls),
(231,619,o),
(230,621,qs),
(228,624,o),
(231,625,q),
(293,682,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 5 4 5 133 0 4 3 4 133 0 1 1 3 97 0 3 3 39 77 6 1 0 0 2 97 7 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 5 4 5 133 0 4 3 4 133 0 3 0 1 0 3 1 106 6 1 0 0 2 97 7 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
17 16 1 0 45 42 38 36 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
},
{
closed = 1;
nodes = (
(251,619,o),
(236,619,qs),
(204,619,ls),
(201,619,o),
(200,621,qs),
(198,624,o),
(201,625,q),
(263,682,ls),
(274,691,o),
(284,691,qs),
(313,691,ls),
(324,691,o),
(334,682,qs),
(396,625,l),
(399,624,o),
(396,619,o),
(394,619,qs),
(361,619,ls),
(347,619,o),
(336,629,qs),
(299,664,l),
(261,629,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 1 1 3 97 0 3 3 39 77 7 1 0 0 2 97 8 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 4 5 133 6 1 4 3 4 133 0 3 0 1 0 3 1 106 7 1 0 0 2 97 8 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
17 16 1 0 52 50 44 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
},
{
closed = 1;
nodes = (
(200,625,qs),
(205,684,o),
(251,684,qs),
(268,684,o),
(301,669,qs),
(327,657,o),
(336,657,qs),
(351,657,o),
(356,672,qs),
(359,680,o),
(365,680,qs),
(392,680,ls),
(398,680,o),
(398,674,qs),
(396,648,o),
(365,617,o),
(340,617,qs),
(324,617,o),
(292,632,qs),
(267,644,o),
(257,644,qs),
(243,644,o),
(240,627,qs),
(239,619,o),
(233,619,qs),
(206,619,ls),
(200,619,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
9 1 7 0 5 4 7 5 105 0 8 6 1 4 3 8 4 105 0 1 1 3 97 0 3 3 39 77 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 7 0 5 4 7 5 105 0 8 6 1 4 3 8 4 105 0 3 0 1 0 3 1 106 10 1 0 0 2 97 11 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 7 9 8 9 7 8 128 0 9 0 5 4 9 5 105 0 8 6 1 4 3 8 4 105 0 3 0 1 0 3 1 106 10 1 0 0 2 97 11 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
17 16 1 0 56 54 52 50 47 46 42 40 38 36 33 32 25 23 16 31 17 31 9 7 0 15 1 15 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,79,qs),
(489,139,o),
(489,277,qs),
(489,400,o),
(435,462,qs),
(385,520,o),
(299,520,qs),
(224,520,o),
(176,477,qs),
(108,416,o),
(108,277,qs),
(108,155,o),
(162,93,qs),
(211,37,o),
(299,37,qs),
(374,38,o)
);
},
{
closed = 1;
nodes = (
(129,58,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(178,567,o),
(299,567,qs),
(404,567,o),
(468,498,qs),
(540,420,o),
(540,277,qs),
(540,153,o),
(485,78,qs),
(421,-10,o),
(299,-10,qs),
(192,-10,o)
);
},
{
closed = 1;
nodes = (
(228,681,o),
(242,681,qs),
(256,681,o),
(276,661,o),
(276,647,qs),
(276,633,o),
(256,614,o),
(242,614,qs),
(228,614,o),
(209,634,o),
(209,647,qs),
(209,661,o)
);
},
{
closed = 1;
nodes = (
(341,681,o),
(354,681,qs),
(369,681,o),
(388,661,o),
(388,647,qs),
(388,633,o),
(368,614,o),
(354,614,qs),
(341,614,o),
(321,634,o),
(321,647,qs),
(321,661,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 6 1 4 3 5 4 105 0 1 1 3 97 0 3 3 39 77 8 1 0 0 2 97 9 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 6 1 4 3 5 4 105 0 3 0 1 0 3 1 105 8 1 0 0 2 97 9 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
17 16 1 0 54 52 48 46 42 40 36 34 25 23 16 31 17 31 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,392,o),
(50,396,qs),
(77,422,o),
(108,389,qs),
(195,304,l),
(304,414,l),
(308,417,o),
(312,414,q),
(334,392,ls),
(338,388,o),
(334,384,qs),
(225,275,l),
(338,160,ls),
(342,155,o),
(339,152,qs),
(312,125,o),
(280,158,qs),
(195,245,l),
(85,134,ls),
(81,130,o),
(77,134,qs),
(55,156,ls),
(51,160,o),
(55,164,qs),
(165,275,l),
(51,388,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
22 9 1 50 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = O;
kernRight = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(361,519,o),
(298,519,qs),
(223,519,o),
(175,476,qs),
(106,415,o),
(106,277,qs),
(106,159,o),
(156,97,q),
(406,488,l)
);
},
{
closed = 1;
nodes = (
(235,37,o),
(298,37,qs),
(373,37,o),
(420,79,qs),
(488,138,o),
(488,277,qs),
(488,394,o),
(439,458,q),
(191,67,l)
);
},
{
closed = 1;
nodes = (
(128,57,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(177,567,o),
(298,567,qs),
(403,567,o),
(467,498,qs),
(539,420,o),
(539,277,qs),
(539,152,o),
(484,77,qs),
(421,-10,o),
(298,-10,qs),
(192,-10,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 8 2 1 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 0 0 3 97 0 3 3 39 77 0 1 1 2 97 4 1 2 2 46 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
0 3 0 0 1 3 0 105 0 1 1 2 97 4 1 2 2 46 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
19 18 27 25 18 33 19 33 39 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,42,qs),
(68,95,o),
(68,194,qs),
(68,549,ls),
(68,556,o),
(73,556,qs),
(78,556,ls),
(96,556,o),
(119,527,o),
(119,504,qs),
(119,201,ls),
(119,37,o),
(255,37,qs),
(397,37,o),
(397,202,qs),
(397,549,ls),
(397,556,o),
(402,556,qs),
(406,556,ls),
(425,556,o),
(447,527,o),
(447,504,qs),
(447,198,ls),
(447,121,o),
(413,68,qs),
(364,-10,o),
(256,-10,qs),
(165,-10,o)
);
},
{
closed = 1;
nodes = (
(169,691,o),
(172,691,qs),
(222,691,ls),
(233,691,o),
(242,682,qs),
(305,625,l),
(307,624,o),
(305,619,o),
(302,619,qs),
(265,619,ls),
(253,619,o),
(241,629,qs),
(169,685,l),
(167,686,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 39 37 32 30 22 19 15 13 10 7 0 27 1 27 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,42,qs),
(68,95,o),
(68,194,qs),
(68,549,ls),
(68,556,o),
(73,556,qs),
(78,556,ls),
(96,556,o),
(119,527,o),
(119,504,qs),
(119,201,ls),
(119,37,o),
(255,37,qs),
(397,37,o),
(397,202,qs),
(397,549,ls),
(397,556,o),
(402,556,qs),
(406,556,ls),
(425,556,o),
(447,527,o),
(447,504,qs),
(447,198,ls),
(447,121,o),
(413,68,qs),
(364,-10,o),
(256,-10,qs),
(165,-10,o)
);
},
{
closed = 1;
nodes = (
(262,691,o),
(272,691,qs),
(322,691,ls),
(325,691,o),
(327,687,o),
(325,685,qs),
(254,629,ls),
(241,619,o),
(229,619,qs),
(192,619,ls),
(189,619,o),
(187,624,o),
(189,625,q),
(251,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 39 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 40 38 33 31 22 19 15 13 10 7 0 27 1 27 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,42,qs),
(68,95,o),
(68,194,qs),
(68,549,ls),
(68,556,o),
(73,556,qs),
(78,556,ls),
(96,556,o),
(119,527,o),
(119,504,qs),
(119,201,ls),
(119,37,o),
(255,37,qs),
(397,37,o),
(397,202,qs),
(397,549,ls),
(397,556,o),
(402,556,qs),
(406,556,ls),
(425,556,o),
(447,527,o),
(447,504,qs),
(447,198,ls),
(447,121,o),
(413,68,qs),
(364,-10,o),
(256,-10,qs),
(165,-10,o)
);
},
{
closed = 1;
nodes = (
(210,619,o),
(195,619,qs),
(162,619,ls),
(159,619,o),
(157,624,o),
(159,625,q),
(221,682,ls),
(232,691,o),
(242,691,qs),
(271,691,ls),
(282,691,o),
(292,682,qs),
(355,625,l),
(357,624,o),
(355,619,o),
(352,619,qs),
(319,619,ls),
(305,619,o),
(294,629,qs),
(257,664,l),
(220,629,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 39 77 0 2 2 0 97 7 1 0 0 46 0 78 1 0 47 45 40 37 32 30 22 19 15 13 10 7 0 27 1 27 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,42,qs),
(68,95,o),
(68,194,qs),
(68,549,ls),
(68,556,o),
(73,556,qs),
(78,556,ls),
(96,556,o),
(119,527,o),
(119,504,qs),
(119,201,ls),
(119,37,o),
(255,37,qs),
(397,37,o),
(397,202,qs),
(397,549,ls),
(397,556,o),
(402,556,qs),
(406,556,ls),
(425,556,o),
(447,527,o),
(447,504,qs),
(447,198,ls),
(447,121,o),
(413,68,qs),
(364,-10,o),
(256,-10,qs),
(165,-10,o)
);
},
{
closed = 1;
nodes = (
(184,681,o),
(197,681,qs),
(212,681,o),
(231,661,o),
(231,647,qs),
(231,633,o),
(212,614,o),
(197,614,qs),
(184,614,o),
(165,634,o),
(165,647,qs),
(165,661,o)
);
},
{
closed = 1;
nodes = (
(296,681,o),
(310,681,qs),
(324,681,o),
(344,661,o),
(344,647,qs),
(344,633,o),
(324,614,o),
(310,614,qs),
(296,614,o),
(277,634,o),
(277,647,qs),
(277,661,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 39 77 0 2 2 0 97 8 1 0 0 46 0 78 1 0 50 48 44 42 38 36 32 30 22 19 15 13 10 7 0 27 1 27 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 516;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,556,o),
(13,556,qs),
(29,556,ls),
(48,556,o),
(72,537,o),
(86,513,qs),
(217,274,l),
(364,543,ls),
(370,556,o),
(381,556,qs),
(414,556,ls),
(424,556,o),
(420,547,q),
(240,219,l),
(240,6,ls),
(240,0,o),
(235,0,qs),
(195,0,ls),
(190,0,o),
(190,6,qs),
(190,219,l),
(9,548,ls)
);
},
{
closed = 1;
nodes = (
(230,691,o),
(240,691,qs),
(290,691,ls),
(292,691,o),
(295,687,o),
(293,685,qs),
(221,629,ls),
(209,619,o),
(196,619,qs),
(160,619,ls),
(157,619,o),
(156,621,qs),
(154,624,o),
(157,625,q),
(219,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
14 7 6 1 0 5 0 1 1 76 0 4 3 4 133 0 3 1 3 133 2 1 1 1 39 77 0 0 0 40 0 78 52 38 53 53 19 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(329,156,o),
(397,222,o),
(397,282,qs),
(397,334,o),
(366,367,qs),
(331,404,o),
(271,404,qs),
(123,404,l),
(123,156,l),
(267,156,ls)
);
},
{
closed = 1;
nodes = (
(123,0,o),
(118,0,qs),
(78,0,ls),
(73,0,o),
(73,6,qs),
(73,549,ls),
(73,556,o),
(78,556,qs),
(83,556,ls),
(101,556,o),
(123,527,o),
(123,503,qs),
(123,451,l),
(267,451,ls),
(344,451,o),
(392,411,qs),
(449,365,o),
(449,281,qs),
(449,207,o),
(407,161,qs),
(358,109,o),
(269,109,qs),
(123,109,l),
(123,6,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
33 28 2 5 2 1 76 0 3 0 0 1 3 0 103 6 1 1 0 2 5 1 2 103 0 4 4 39 77 0 5 5 40 5 78 0 0 31 30 26 23 20 18 12 10 0 9 0 8 33 7 9 23 
CALL[ ]	/* CallFunction */";
};
width = 484;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,37,qs),
(313,37,o),
(354,69,o),
(354,97,qs),
(354,120,o),
(339,140,qs),
(326,157,o),
(289,183,qs),
(241,217,o),
(209,260,o),
(209,289,qs),
(209,322,o),
(248,368,qs),
(279,404,o),
(296,432,o),
(296,449,qs),
(296,481,o),
(246,519,o),
(206,519,qs),
(161,519,o),
(110,461,o),
(110,409,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(65,0,ls),
(60,0,o),
(60,6,qs),
(60,412,ls),
(60,480,o),
(98,522,qs),
(140,567,o),
(209,567,qs),
(265,567,o),
(303,540,qs),
(345,509,o),
(345,459,qs),
(345,415,o),
(296,358,qs),
(257,312,o),
(257,294,qs),
(257,264,o),
(309,226,qs),
(370,183,o),
(406,137,o),
(406,102,qs),
(406,55,o),
(377,25,qs),
(343,-10,o),
(286,-10,qs),
(237,-10,o),
(164,41,o),
(164,75,qs),
(164,90,o),
(174,90,qs),
(178,90,o),
(184,84,qs),
(223,37,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
34 29 2 3 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 4 5 4 0 5 128 0 4 4 2 97 0 2 2 39 77 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 4 5 4 0 5 128 0 2 0 4 0 2 4 105 0 3 3 40 77 0 5 5 1 97 0 1 1 46 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
57 55 37 22 47 35 33 6 9 27 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(139,502,o),
(141,502,qs),
(191,502,ls),
(202,502,o),
(212,493,qs),
(275,436,l),
(277,435,o),
(275,431,o),
(272,431,qs),
(235,431,ls),
(223,431,o),
(210,440,qs),
(138,496,l),
(137,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 133 0 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 51 49 44 42 33 31 24 39 25 39 38 34 37 19 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(222,502,o),
(233,502,qs),
(282,502,ls),
(285,502,o),
(287,498,o),
(286,496,q),
(214,440,ls),
(201,431,o),
(189,431,qs),
(152,431,ls),
(150,431,o),
(148,433,q),
(147,435,o),
(150,436,q),
(212,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 7 6 7 133 0 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 7 133 0 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 8 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
25 24 53 50 46 44 33 31 24 39 25 39 38 34 37 19 9 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(176,431,o),
(161,431,qs),
(128,431,ls),
(126,431,o),
(124,433,q),
(123,435,o),
(126,436,q),
(188,493,ls),
(198,502,o),
(209,502,qs),
(238,502,ls),
(249,502,o),
(258,493,qs),
(321,436,l),
(323,435,o),
(321,431,o),
(318,431,qs),
(286,431,ls),
(271,431,o),
(261,440,qs),
(224,475,l),
(186,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 7 6 7 133 8 1 6 1 6 133 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 7 6 7 133 8 1 6 2 6 133 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 9 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
25 24 60 58 52 49 44 42 33 31 24 39 25 39 38 34 37 19 10 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(122,436,qs),
(126,495,o),
(172,495,qs),
(190,495,o),
(222,480,qs),
(249,468,o),
(258,468,qs),
(272,468,o),
(278,483,q),
(280,491,o),
(287,491,qs),
(313,491,ls),
(320,491,o),
(320,485,qs),
(318,459,o),
(286,428,o),
(262,428,qs),
(245,428,o),
(214,443,qs),
(188,455,o),
(178,455,qs),
(164,455,o),
(162,438,q),
(160,431,o),
(155,431,qs),
(128,431,ls),
(122,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
52 1 10 9 65 1 6 7 7 1 5 1 12 0 2 4 5 6 1 2 0 4 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
11 1 9 0 7 6 9 7 105 0 10 8 1 6 1 10 6 106 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
11 1 9 0 7 6 9 7 105 0 10 8 1 6 2 10 6 106 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 9 11 10 11 9 10 128 0 11 0 7 6 11 7 105 0 10 8 1 6 2 10 6 106 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 12 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
25 24 64 62 60 58 56 54 50 48 46 44 41 40 33 31 24 39 25 39 38 34 37 19 13 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(145,492,o),
(159,492,qs),
(173,492,o),
(193,472,o),
(193,458,qs),
(193,445,o),
(173,426,o),
(159,426,qs),
(145,426,o),
(126,445,o),
(126,458,qs),
(126,472,o)
);
},
{
closed = 1;
nodes = (
(258,492,o),
(271,492,qs),
(286,492,o),
(305,472,o),
(305,458,qs),
(305,445,o),
(285,426,o),
(271,426,qs),
(258,426,o),
(238,445,o),
(238,458,qs),
(238,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
9 1 7 8 1 6 1 7 6 105 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
9 1 7 8 1 6 2 7 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
25 24 62 60 56 54 50 48 44 42 33 31 24 39 25 39 38 34 37 19 11 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,-9,qs),
(143,-9,o),
(96,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(304,367,o),
(345,305,q),
(345,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,6,ls),
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o)
);
},
{
closed = 1;
nodes = (
(299,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(308,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(95,246,o),
(95,178,qs),
(95,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(266,38,o)
);
},
{
closed = 1;
nodes = (
(189,548,o),
(216,548,qs),
(243,548,o),
(282,511,o),
(282,484,qs),
(282,458,o),
(243,421,o),
(216,421,qs),
(190,421,o),
(151,458,o),
(151,484,qs),
(151,510,o)
);
},
{
closed = 1;
nodes = (
(249,469,o),
(249,484,qs),
(249,499,o),
(231,519,o),
(216,519,qs),
(202,519,o),
(184,499,o),
(184,484,qs),
(184,469,o),
(202,450,o),
(216,450,qs),
(231,450,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
7 1 5 1 12 0 2 4 5 6 1 2 0 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
11 1 8 0 6 1 8 6 105 0 9 9 7 97 0 7 7 39 77 0 5 5 1 97 2 1 1 1 42 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 8 0 6 2 8 6 105 0 9 9 7 97 0 7 7 39 77 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 7 0 9 8 7 9 105 11 1 8 0 6 2 8 6 105 0 1 1 42 77 0 5 5 2 97 0 2 2 48 77 0 0 0 40 77 10 1 4 4 3 97 0 3 3 49 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
53 52 25 24 59 57 52 63 53 63 50 48 44 42 33 31 24 39 25 39 38 34 37 19 12 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,0,o),
(390,0,qs),
(349,0,ls),
(344,0,o),
(344,6,qs),
(344,57,l),
(302,-9,o),
(216,-9,qs),
(143,-9,o),
(95,40,qs),
(44,93,o),
(44,178,qs),
(44,255,o),
(87,307,qs),
(137,367,o),
(219,367,qs),
(303,367,o),
(344,305,q),
(344,360,o),
(385,360,qs),
(390,360,ls),
(395,360,o),
(395,354,qs),
(395,305,l),
(442,367,o),
(518,367,qs),
(594,367,o),
(633,322,qs),
(672,278,o),
(672,201,qs),
(672,179,o),
(671,171,qs),
(669,160,o),
(657,160,qs),
(402,160,l),
(406,102,o),
(440,70,qs),
(476,37,o),
(537,37,qs),
(574,37,o),
(622,57,o),
(647,83,q),
(654,92,o),
(658,92,qs),
(667,92,o),
(667,79,qs),
(667,49,o),
(635,23,qs),
(594,-9,o),
(533,-9,qs),
(444,-9,o),
(395,52,q),
(395,6,ls)
);
},
{
closed = 1;
nodes = (
(298,64,qs),
(344,100,o),
(344,178,qs),
(344,248,o),
(307,285,qs),
(274,320,o),
(219,320,qs),
(166,320,o),
(132,285,qs),
(94,246,o),
(94,178,qs),
(94,116,o),
(127,78,qs),
(162,38,o),
(214,38,qs),
(265,38,o)
);
},
{
closed = 1;
nodes = (
(624,321,o),
(518,321,qs),
(474,321,o),
(444,294,qs),
(409,262,o),
(402,203,q),
(622,203,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
29 1 10 4 34 28 2 12 10 46 0 2 2 1 52 47 2 8 2 4 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
29 1 10 5 34 28 2 12 10 46 0 2 2 1 52 47 2 8 2 4 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 11 1 10 10 4 97 6 5 2 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 1 3 2 3 1 2 128 14 1 12 0 3 1 12 3 103 0 5 5 42 77 11 1 10 10 4 97 6 1 4 4 48 77 0 8 8 40 77 13 9 2 2 2 0 97 7 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
69 69 54 53 69 75 69 75 74 72 62 60 53 68 54 68 20 38 34 36 38 35 36 20 33 15 9 31 
CALL[ ]	/* CallFunction */";
};
width = 712;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
kernRight = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,-86,o),
(181,-86,qs),
(147,-86,ls),
(140,-86,o),
(144,-80,qs),
(190,-8,l),
(128,0,o),
(89,44,qs),
(44,94,o),
(44,177,qs),
(44,255,o),
(87,307,qs),
(136,367,o),
(218,367,qs),
(270,367,o),
(307,349,qs),
(334,337,o),
(328,313,qs),
(324,298,ls),
(322,292,o),
(319,292,qs),
(317,292,o),
(314,293,q),
(313,294,l),
(268,320,o),
(218,320,qs),
(166,320,o),
(133,287,qs),
(95,248,o),
(95,178,qs),
(95,116,o),
(125,80,qs),
(159,37,o),
(223,37,qs),
(282,37,o),
(320,82,qs),
(326,89,o),
(330,89,qs),
(340,89,o),
(340,74,qs),
(340,48,o),
(315,25,qs),
(284,-4,o),
(237,-9,q),
(202,-77,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
23 1 0 2 38 1 4 1 2 76 0 0 2 1 2 0 1 128 0 1 0 4 1 4 101 0 2 2 3 97 0 3 3 48 2 78 57 42 38 35 21 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 362;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,70,qs),
(166,37,o),
(226,37,qs),
(293,37,o),
(340,82,qs),
(341,83,o),
(341,84,q),
(348,92,o),
(352,92,qs),
(360,92,o),
(360,78,qs),
(360,47,o),
(326,22,qs),
(284,-9,o),
(222,-9,qs),
(156,-9,o),
(109,27,qs),
(44,77,o),
(44,178,qs),
(44,255,o),
(85,307,qs),
(132,367,o),
(208,367,qs),
(283,367,o),
(324,322,qs),
(365,277,o),
(365,201,qs),
(365,179,o),
(364,171,qs),
(363,160,o),
(351,160,qs),
(95,160,l),
(99,102,o)
);
},
{
closed = 1;
nodes = (
(316,321,o),
(207,321,qs),
(160,321,o),
(101,259,o),
(95,203,q),
(314,203,l)
);
},
{
closed = 1;
nodes = (
(134,502,o),
(136,502,qs),
(186,502,ls),
(197,502,o),
(207,493,qs),
(270,436,l),
(272,435,o),
(270,431,o),
(267,431,qs),
(230,431,ls),
(218,431,o),
(205,440,qs),
(133,496,l),
(132,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 8 7 8 133 0 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 33 33 50 48 43 41 33 38 33 38 37 37 20 38 38 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,70,qs),
(166,37,o),
(226,37,qs),
(293,37,o),
(340,82,qs),
(341,83,o),
(341,84,q),
(348,92,o),
(352,92,qs),
(360,92,o),
(360,78,qs),
(360,47,o),
(326,22,qs),
(284,-9,o),
(222,-9,qs),
(156,-9,o),
(109,27,qs),
(44,77,o),
(44,178,qs),
(44,255,o),
(85,307,qs),
(132,367,o),
(208,367,qs),
(283,367,o),
(324,322,qs),
(365,277,o),
(365,201,qs),
(365,179,o),
(364,171,qs),
(363,160,o),
(351,160,qs),
(95,160,l),
(99,102,o)
);
},
{
closed = 1;
nodes = (
(316,321,o),
(207,321,qs),
(160,321,o),
(101,259,o),
(95,203,q),
(314,203,l)
);
},
{
closed = 1;
nodes = (
(217,502,o),
(228,502,qs),
(277,502,ls),
(280,502,o),
(282,498,o),
(281,496,q),
(209,440,ls),
(196,431,o),
(184,431,qs),
(147,431,ls),
(145,431,o),
(143,433,q),
(142,435,o),
(145,436,q),
(207,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 8 7 8 133 0 7 1 7 133 0 3 0 4 0 3 4 128 9 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 33 33 52 49 45 43 33 38 33 38 37 37 20 38 38 32 10 9 28 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,70,qs),
(166,37,o),
(226,37,qs),
(293,37,o),
(340,82,qs),
(341,83,o),
(341,84,q),
(348,92,o),
(352,92,qs),
(360,92,o),
(360,78,qs),
(360,47,o),
(326,22,qs),
(284,-9,o),
(222,-9,qs),
(156,-9,o),
(109,27,qs),
(44,77,o),
(44,178,qs),
(44,255,o),
(85,307,qs),
(132,367,o),
(208,367,qs),
(283,367,o),
(324,322,qs),
(365,277,o),
(365,201,qs),
(365,179,o),
(364,171,qs),
(363,160,o),
(351,160,qs),
(95,160,l),
(99,102,o)
);
},
{
closed = 1;
nodes = (
(316,321,o),
(207,321,qs),
(160,321,o),
(101,259,o),
(95,203,q),
(314,203,l)
);
},
{
closed = 1;
nodes = (
(165,431,o),
(150,431,qs),
(117,431,ls),
(115,431,o),
(113,433,q),
(112,435,o),
(115,436,q),
(177,493,ls),
(187,502,o),
(198,502,qs),
(227,502,ls),
(238,502,o),
(247,493,qs),
(310,436,l),
(312,435,o),
(310,431,o),
(307,431,qs),
(275,431,ls),
(260,431,o),
(250,440,qs),
(213,475,l),
(175,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 8 7 8 133 9 1 7 1 7 133 0 3 0 4 0 3 4 128 10 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 33 33 59 57 51 48 43 41 33 38 33 38 37 37 20 38 38 32 11 9 28 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = e;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,70,qs),
(166,37,o),
(226,37,qs),
(293,37,o),
(340,82,qs),
(341,83,o),
(341,84,q),
(348,92,o),
(352,92,qs),
(360,92,o),
(360,78,qs),
(360,47,o),
(326,22,qs),
(284,-9,o),
(222,-9,qs),
(156,-9,o),
(109,27,qs),
(44,77,o),
(44,178,qs),
(44,255,o),
(85,307,qs),
(132,367,o),
(208,367,qs),
(283,367,o),
(324,322,qs),
(365,277,o),
(365,201,qs),
(365,179,o),
(364,171,qs),
(363,160,o),
(351,160,qs),
(95,160,l),
(99,102,o)
);
},
{
closed = 1;
nodes = (
(316,321,o),
(207,321,qs),
(160,321,o),
(101,259,o),
(95,203,q),
(314,203,l)
);
},
{
closed = 1;
nodes = (
(139,492,o),
(153,492,qs),
(167,492,o),
(187,472,o),
(187,458,qs),
(187,445,o),
(167,426,o),
(153,426,qs),
(139,426,o),
(120,445,o),
(120,458,qs),
(120,472,o)
);
},
{
closed = 1;
nodes = (
(251,492,o),
(265,492,qs),
(279,492,o),
(299,472,o),
(299,458,qs),
(299,445,o),
(279,426,o),
(265,426,qs),
(252,426,o),
(232,445,o),
(232,458,qs),
(232,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
0 3 0 4 0 3 4 128 10 1 8 9 1 7 1 8 7 105 11 1 6 0 0 3 6 0 103 0 5 5 1 97 0 1 1 48 77 0 4 4 2 97 0 2 2 49 2 78 33 33 61 59 55 53 49 47 43 41 33 38 33 38 37 37 20 38 38 32 12 9 28 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(68,360,ls),
(87,360,o),
(109,332,o),
(109,308,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(65,0,ls),
(60,0,o)
);
},
{
closed = 1;
nodes = (
(16,502,o),
(19,502,qs),
(69,502,ls),
(80,502,o),
(90,493,qs),
(152,436,l),
(155,435,o),
(152,431,o),
(150,431,qs),
(112,431,ls),
(101,431,o),
(88,440,qs),
(16,496,ls),
(14,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 0 0 0 40 0 78 37 38 53 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(69,360,ls),
(87,360,o),
(109,332,o),
(109,308,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(65,0,ls),
(60,0,o)
);
},
{
closed = 1;
nodes = (
(89,502,o),
(100,502,qs),
(149,502,ls),
(152,502,o),
(154,498,o),
(152,496,qs),
(81,440,ls),
(68,431,o),
(56,431,qs),
(19,431,ls),
(16,431,o),
(15,432,q),
(14,435,o),
(16,436,q),
(79,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 0 2 1 2 133 0 1 1 42 77 0 0 0 40 0 78 37 40 53 16 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(69,360,ls),
(87,360,o),
(109,332,o),
(109,308,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(65,0,ls),
(60,0,o)
);
},
{
closed = 1;
nodes = (
(37,431,o),
(22,431,qs),
(-11,431,ls),
(-14,431,o),
(-15,432,q),
(-16,435,o),
(-14,436,q),
(49,493,ls),
(59,502,o),
(70,502,qs),
(99,502,ls),
(109,502,o),
(119,493,qs),
(182,436,l),
(184,435,o),
(182,431,o),
(179,431,qs),
(146,431,ls),
(132,431,o),
(121,440,q),
(85,475,l),
(47,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
11 3 2 0 1 1 76 0 3 2 3 133 4 1 2 1 2 133 0 1 1 42 77 0 0 0 40 0 78 38 53 38 53 16 5 9 27 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(61,6,qs),
(61,354,ls),
(61,360,o),
(66,360,qs),
(70,360,ls),
(88,360,o),
(110,332,o),
(110,308,qs),
(110,6,ls),
(110,0,o),
(105,0,qs),
(66,0,ls),
(61,0,o)
);
},
{
closed = 1;
nodes = (
(15,492,o),
(29,492,qs),
(43,492,o),
(63,472,o),
(63,458,qs),
(63,445,o),
(43,426,o),
(29,426,qs),
(15,426,o),
(-4,445,o),
(-4,458,qs),
(-4,472,o)
);
},
{
closed = 1;
nodes = (
(127,492,o),
(141,492,qs),
(155,492,o),
(175,472,o),
(175,458,qs),
(175,445,o),
(155,426,o),
(141,426,qs),
(127,426,o),
(108,445,o),
(108,458,qs),
(108,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
11 3 2 0 1 1 76 5 1 3 4 1 2 1 3 2 105 0 1 1 42 77 0 0 0 40 0 78 36 36 36 38 53 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,413,ls),
(124,411,o),
(121,416,qs),
(103,442,ls),
(99,447,o),
(105,449,q),
(170,483,l),
(122,549,l),
(119,556,o),
(126,556,qs),
(145,556,ls),
(177,556,o),
(202,523,qs),
(214,506,l),
(270,534,ls),
(275,537,o),
(276,532,q),
(294,507,ls),
(298,501,o),
(293,498,qs),
(240,469,l),
(360,302,ls),
(399,249,o),
(399,176,qs),
(399,99,o),
(356,49,qs),
(306,-9,o),
(221,-9,qs),
(147,-9,o),
(99,35,qs),
(44,85,o),
(44,175,qs),
(44,252,o),
(87,303,qs),
(136,361,o),
(220,361,qs),
(243,361,o),
(261,357,q),
(196,448,l)
);
},
{
closed = 1;
nodes = (
(308,70,qs),
(348,107,o),
(348,175,qs),
(348,233,o),
(316,271,qs),
(280,314,o),
(220,314,qs),
(166,314,o),
(133,281,qs),
(94,243,o),
(94,176,qs),
(94,117,o),
(124,80,qs),
(158,37,o),
(220,37,qs),
(274,37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
38 31 24 23 17 5 0 2 1 76 0 2 2 39 77 0 4 4 0 97 0 0 0 42 77 5 1 3 3 1 97 0 1 1 49 1 78 40 39 48 46 39 54 40 54 63 38 33 6 9 25 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = n;
kernRight = n;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,367,qs),
(295,367,o),
(335,329,qs),
(380,286,o),
(380,214,qs),
(380,6,ls),
(380,0,o),
(375,0,qs),
(335,0,ls),
(330,0,o),
(330,6,qs),
(330,200,ls),
(330,257,o),
(273,320,o),
(222,320,qs),
(109,320,o),
(109,193,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(64,0,ls),
(59,0,o),
(59,6,qs),
(59,354,ls),
(59,360,o),
(64,360,qs),
(69,360,ls),
(87,360,o),
(110,331,o),
(110,307,q),
(147,367,o)
);
},
{
closed = 1;
nodes = (
(120,436,qs),
(124,495,o),
(170,495,qs),
(188,495,o),
(220,480,qs),
(247,468,o),
(256,468,qs),
(270,468,o),
(276,483,q),
(278,491,o),
(285,491,qs),
(311,491,ls),
(317,491,o),
(317,485,qs),
(315,459,o),
(284,428,o),
(260,428,qs),
(243,428,o),
(211,443,qs),
(186,455,o),
(176,455,qs),
(162,455,o),
(160,438,q),
(158,431,o),
(152,431,qs),
(126,431,ls),
(120,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
43 1 9 8 56 1 5 6 24 19 12 7 0 5 1 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
10 1 8 0 6 5 8 6 105 0 9 7 1 5 0 9 5 106 0 2 2 0 97 4 1 0 0 42 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
10 1 8 0 6 5 8 6 105 0 9 7 1 5 4 9 5 106 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 8 10 9 10 8 9 128 0 10 0 6 5 10 6 105 0 9 7 1 5 4 9 5 106 0 0 0 42 77 0 2 2 4 97 0 4 4 48 77 3 1 1 1 40 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
55 53 51 49 36 34 35 17 38 21 36 20 50 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(152,502,o),
(155,502,qs),
(205,502,ls),
(216,502,o),
(226,493,qs),
(288,436,l),
(291,435,o),
(288,431,o),
(286,431,qs),
(248,431,ls),
(237,431,o),
(224,440,qs),
(152,496,ls),
(150,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 43 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(226,502,o),
(236,502,qs),
(286,502,ls),
(288,502,o),
(291,498,o),
(289,496,qs),
(217,440,ls),
(205,431,o),
(192,431,qs),
(156,431,ls),
(153,431,o),
(152,433,q),
(150,435,o),
(153,436,q),
(215,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 5 4 5 133 0 4 1 4 133 0 3 3 1 97 0 1 1 48 77 7 1 2 2 0 97 6 1 0 0 49 0 78 17 16 1 0 45 42 38 36 25 23 16 31 17 31 9 7 0 15 1 15 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(173,431,o),
(158,431,qs),
(126,431,ls),
(123,431,o),
(122,433,q),
(120,435,o),
(123,436,q),
(185,493,ls),
(196,502,o),
(206,502,qs),
(235,502,ls),
(246,502,o),
(256,493,qs),
(318,436,l),
(321,435,o),
(318,431,o),
(316,431,qs),
(283,431,ls),
(269,431,o),
(258,440,qs),
(221,475,l),
(183,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 5 4 5 133 6 1 4 1 4 133 0 3 3 1 97 0 1 1 48 77 8 1 2 2 0 97 7 1 0 0 49 0 78 17 16 1 0 52 50 44 41 36 34 25 23 16 31 17 31 9 7 0 15 1 15 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(122,436,qs),
(126,495,o),
(172,495,qs),
(190,495,o),
(222,480,qs),
(249,468,o),
(258,468,qs),
(272,468,o),
(278,483,q),
(280,491,o),
(287,491,qs),
(313,491,ls),
(320,491,o),
(320,485,qs),
(318,459,o),
(286,428,o),
(262,428,qs),
(245,428,o),
(214,443,qs),
(188,455,o),
(178,455,qs),
(164,455,o),
(162,438,q),
(160,431,o),
(155,431,qs),
(128,431,ls),
(122,431,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
44 1 8 7 57 1 4 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
9 1 7 0 5 4 7 5 105 0 8 6 1 4 1 8 4 106 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 7 9 8 9 7 8 128 0 9 0 5 4 9 5 105 0 8 6 1 4 1 8 4 106 0 3 3 1 97 0 1 1 48 77 11 1 2 2 0 97 10 1 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
17 16 1 0 56 54 52 50 48 46 42 40 38 36 33 32 25 23 16 31 17 31 9 7 0 15 1 15 12 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,257,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(343,321,qs),
(398,269,o),
(398,179,qs),
(398,100,o),
(356,50,qs),
(307,-9,o),
(221,-9,qs),
(147,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(167,320,o),
(133,286,qs),
(95,247,o),
(95,179,qs),
(95,120,o),
(124,82,qs),
(159,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(151,492,o),
(165,492,qs),
(179,492,o),
(198,472,o),
(198,458,qs),
(198,445,o),
(179,426,o),
(165,426,qs),
(151,426,o),
(132,445,o),
(132,458,qs),
(132,472,o)
);
},
{
closed = 1;
nodes = (
(263,492,o),
(277,492,qs),
(291,492,o),
(311,472,o),
(311,458,qs),
(311,445,o),
(291,426,o),
(277,426,qs),
(263,426,o),
(244,445,o),
(244,458,qs),
(244,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
7 1 5 6 1 4 1 5 4 105 0 3 3 1 97 0 1 1 48 77 9 1 2 2 0 97 8 1 0 0 49 0 78 17 16 1 0 54 52 48 46 42 40 36 34 25 23 16 31 17 31 9 7 0 15 1 15 10 9 22 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(305,295,ls),
(322,295,o),
(344,276,o),
(344,260,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(46,249,ls),
(41,249,o)
);
},
{
closed = 1;
nodes = (
(179,426,o),
(192,426,qs),
(204,426,o),
(223,407,o),
(223,394,qs),
(223,382,o),
(204,364,o),
(192,364,qs),
(180,364,o),
(162,383,o),
(162,394,qs),
(162,407,o)
);
},
{
closed = 1;
nodes = (
(179,179,o),
(192,179,qs),
(204,179,o),
(223,161,o),
(223,148,qs),
(223,135,o),
(204,118,o),
(192,118,qs),
(180,118,o),
(162,136,o),
(162,148,qs),
(162,160,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
11 10 3 3 0 1 1 76 0 3 0 2 1 3 2 105 0 1 0 0 5 1 0 103 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 36 36 36 39 37 16 6 9 28 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = o;
kernRight = o;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(258,320,o),
(220,320,qs),
(166,320,o),
(133,286,qs),
(94,247,o),
(94,179,qs),
(94,105,o),
(137,68,q),
(287,301,l)
);
},
{
closed = 1;
nodes = (
(195,38,o),
(220,38,qs),
(274,38,o),
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,233,o),
(320,271,q),
(176,45,l)
);
},
{
closed = 1;
nodes = (
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,256,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(295,367,o),
(344,321,qs),
(399,269,o),
(399,179,qs),
(399,101,o),
(356,50,qs),
(306,-9,o),
(221,-9,qs),
(147,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 8 2 1 0 1 76 0 0 0 3 97 0 3 3 48 77 0 1 1 2 97 4 1 2 2 49 2 78 19 18 27 25 18 33 19 33 39 37 5 9 24 
CALL[ ]	/* CallFunction */";
};
width = 443;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,28,qs),
(59,72,o),
(59,159,qs),
(59,354,ls),
(59,360,o),
(63,360,qs),
(68,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,98,o),
(162,36,o),
(211,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,360,o),
(319,360,qs),
(323,360,ls),
(341,360,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(328,39,qs),
(288,-10,o),
(211,-10,qs),
(143,-10,o)
);
},
{
closed = 1;
nodes = (
(129,502,o),
(131,502,qs),
(181,502,ls),
(192,502,o),
(202,493,qs),
(265,436,l),
(267,435,o),
(265,431,o),
(262,431,qs),
(225,431,ls),
(213,431,o),
(200,440,qs),
(128,496,l),
(127,498,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 40 38 33 31 23 20 15 13 10 7 0 28 1 28 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,28,qs),
(59,72,o),
(59,159,qs),
(59,354,ls),
(59,360,o),
(63,360,qs),
(68,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,98,o),
(162,36,o),
(211,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,360,o),
(319,360,qs),
(323,360,ls),
(341,360,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(328,39,qs),
(288,-10,o),
(211,-10,qs),
(143,-10,o)
);
},
{
closed = 1;
nodes = (
(216,502,o),
(226,502,qs),
(276,502,ls),
(278,502,o),
(281,498,o),
(279,496,qs),
(207,440,ls),
(195,431,o),
(182,431,qs),
(146,431,ls),
(143,431,o),
(142,432,qs),
(140,435,o),
(143,436,q),
(205,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 5 4 5 133 0 4 1 4 133 3 1 1 1 42 77 0 2 2 0 97 6 1 0 0 46 0 78 1 0 42 39 35 33 23 20 15 13 10 7 0 28 1 28 7 9 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,28,qs),
(59,72,o),
(59,159,qs),
(59,354,ls),
(59,360,o),
(63,360,qs),
(68,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,98,o),
(162,36,o),
(211,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,360,o),
(319,360,qs),
(323,360,ls),
(341,360,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(328,39,qs),
(288,-10,o),
(211,-10,qs),
(143,-10,o)
);
},
{
closed = 1;
nodes = (
(157,431,o),
(142,431,qs),
(110,431,ls),
(107,431,o),
(104,435,o),
(107,436,q),
(169,493,ls),
(180,502,o),
(190,502,qs),
(219,502,ls),
(230,502,o),
(240,493,qs),
(302,436,l),
(305,435,o),
(302,431,o),
(300,431,qs),
(267,431,ls),
(253,431,o),
(242,440,qs),
(205,475,l),
(167,440,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
0 5 4 5 133 6 1 4 1 4 133 3 1 1 1 42 77 0 2 2 0 97 7 1 0 0 46 0 78 1 0 48 46 41 38 33 31 23 20 15 13 10 7 0 28 1 28 8 9 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,28,qs),
(59,72,o),
(59,159,qs),
(59,354,ls),
(59,360,o),
(63,360,qs),
(68,360,ls),
(87,360,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,98,o),
(162,36,o),
(211,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,360,o),
(319,360,qs),
(323,360,ls),
(341,360,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(328,39,qs),
(288,-10,o),
(211,-10,qs),
(143,-10,o)
);
},
{
closed = 1;
nodes = (
(135,492,o),
(149,492,qs),
(163,492,o),
(183,472,o),
(183,458,qs),
(183,445,o),
(163,426,o),
(149,426,qs),
(135,426,o),
(116,445,o),
(116,458,qs),
(116,472,o)
);
},
{
closed = 1;
nodes = (
(248,492,o),
(261,492,qs),
(276,492,o),
(295,472,o),
(295,458,qs),
(295,445,o),
(275,426,o),
(261,426,qs),
(248,426,o),
(228,445,o),
(228,458,qs),
(228,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 5 6 1 4 1 5 4 105 3 1 1 1 42 77 0 2 2 0 97 8 1 0 0 46 0 78 1 0 51 49 45 43 39 37 33 31 23 20 15 13 10 7 0 28 1 28 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,360,o),
(22,360,qs),
(35,360,ls),
(69,360,o),
(83,320,qs),
(165,63,l),
(258,350,ls),
(261,360,o),
(273,360,qs),
(307,360,ls),
(313,360,o),
(311,354,qs),
(180,-19,ls),
(148,-110,o),
(99,-171,o),
(58,-171,qs),
(30,-171,o),
(-13,-132,o),
(-13,-106,qs),
(-13,-93,o),
(-4,-93,qs),
(0,-93,o),
(5,-98,qs),
(30,-124,o),
(55,-124,qs),
(81,-124,o),
(113,-79,o),
(140,-5,q),
(18,354,ls)
);
},
{
closed = 1;
nodes = (
(185,502,o),
(195,502,qs),
(245,502,ls),
(247,502,o),
(250,498,o),
(248,496,qs),
(176,440,ls),
(164,431,o),
(151,431,qs),
(115,431,ls),
(112,431,o),
(111,432,qs),
(109,435,o),
(112,436,q),
(174,493,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
22 1 1 3 1 76 0 6 5 6 133 0 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 42 77 0 0 0 2 97 0 2 2 44 2 78 52 39 36 52 35 34 34 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,-160,o),
(105,-160,qs),
(65,-160,ls),
(60,-160,o),
(60,-154,qs),
(60,549,ls),
(60,556,o),
(65,556,qs),
(70,556,ls),
(88,556,o),
(110,527,o),
(110,503,qs),
(110,302,l),
(152,367,o),
(241,367,qs),
(312,367,o),
(358,321,qs),
(411,268,o),
(411,178,qs),
(411,104,o),
(371,52,qs),
(323,-9,o),
(242,-9,qs),
(150,-9,o),
(110,54,q),
(110,-154,ls)
);
},
{
closed = 1;
nodes = (
(317,68,qs),
(359,108,o),
(359,178,qs),
(359,237,o),
(330,275,qs),
(296,320,o),
(236,320,qs),
(188,320,o),
(156,294,qs),
(110,257,o),
(110,178,qs),
(110,111,o),
(148,73,qs),
(184,38,o),
(239,38,qs),
(285,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
12 0 2 4 5 25 20 2 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 77 0 3 3 44 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 0 3 134 0 2 2 39 77 0 5 5 1 97 0 1 1 48 77 6 1 4 4 0 97 0 0 0 49 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
27 26 35 33 26 41 27 41 20 52 38 33 7 9 26 
CALL[ ]	/* CallFunction */";
};
width = 454;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = y;
kernRight = y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,360,o),
(22,360,qs),
(35,360,ls),
(69,360,o),
(83,320,qs),
(165,63,l),
(258,350,ls),
(261,360,o),
(273,360,qs),
(307,360,ls),
(313,360,o),
(311,354,qs),
(180,-19,ls),
(148,-110,o),
(99,-171,o),
(58,-171,qs),
(30,-171,o),
(-13,-132,o),
(-13,-106,qs),
(-13,-93,o),
(-4,-93,qs),
(0,-93,o),
(5,-98,qs),
(30,-124,o),
(55,-124,qs),
(81,-124,o),
(113,-79,o),
(140,-5,q),
(18,354,ls)
);
},
{
closed = 1;
nodes = (
(101,492,o),
(115,492,qs),
(129,492,o),
(149,472,o),
(149,458,qs),
(149,445,o),
(129,426,o),
(115,426,qs),
(101,426,o),
(82,445,o),
(82,458,qs),
(82,472,o)
);
},
{
closed = 1;
nodes = (
(213,492,o),
(227,492,qs),
(241,492,o),
(261,472,o),
(261,458,qs),
(261,445,o),
(241,426,o),
(227,426,qs),
(213,426,o),
(194,445,o),
(194,458,qs),
(194,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
22 1 1 3 1 76 0 1 3 0 3 1 0 128 8 1 6 7 1 5 3 6 5 105 4 1 3 3 42 77 0 0 0 2 97 0 2 2 44 2 78 36 36 36 37 36 52 35 34 34 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = dotlessi;
kernLeft = r;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,6,qs),
(60,354,ls),
(60,360,o),
(65,360,qs),
(69,360,ls),
(87,360,o),
(109,332,o),
(109,308,qs),
(109,6,ls),
(109,0,o),
(104,0,qs),
(65,0,ls),
(60,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
11 3 2 0 1 1 76 0 1 1 42 77 0 0 0 40 0 78 53 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 170;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = Lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,47,o),
(344,18,qs),
(344,7,ls),
(344,0,o),
(336,0,qs),
(81,0,ls),
(76,0,o),
(76,6,qs),
(76,214,l),
(26,187,ls),
(20,184,o),
(20,190,qs),
(20,228,ls),
(20,235,o),
(25,237,qs),
(76,264,l),
(76,549,ls),
(76,556,o),
(81,556,qs),
(86,556,ls),
(104,556,o),
(126,527,o),
(126,503,qs),
(126,291,l),
(280,374,l),
(286,376,o),
(286,371,qs),
(286,333,ls),
(286,326,o),
(281,324,qs),
(126,241,l),
(126,47,l),
(314,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
23 22 20 16 8 5 1 7 2 0 24 1 1 2 2 76 0 0 0 39 77 3 1 2 2 1 95 0 1 1 40 1 78 0 0 0 32 0 31 44 59 4 9 24 
CALL[ ]	/* CallFunction */";
};
width = 364;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,184,o),
(20,190,qs),
(20,228,ls),
(20,235,o),
(25,237,qs),
(72,262,l),
(72,549,ls),
(72,556,o),
(77,556,qs),
(82,556,ls),
(100,556,o),
(122,527,o),
(122,503,qs),
(122,289,l),
(188,324,ls),
(194,327,o),
(194,321,qs),
(194,283,ls),
(194,276,o),
(189,275,q),
(122,239,l),
(122,92,ls),
(122,41,o),
(162,41,qs),
(191,41,o),
(214,71,qs),
(218,77,o),
(222,77,qs),
(230,77,o),
(230,64,qs),
(230,34,o),
(184,-9,o),
(153,-9,qs),
(72,-9,o),
(72,90,qs),
(72,212,l),
(26,187,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
36 34 30 22 21 19 18 15 0 9 1 3 1 76 0 1 3 2 3 1 2 128 0 3 3 39 77 0 2 2 0 97 0 0 0 49 0 78 60 35 19 34 4 9 26 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = OE;
kernLeft = O;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(788,47,o),
(788,18,qs),
(788,7,ls),
(788,0,o),
(780,0,qs),
(493,0,ls),
(488,0,o),
(488,6,qs),
(488,89,l),
(427,-10,o),
(298,-10,qs),
(192,-10,o),
(128,57,qs),
(57,134,o),
(57,277,qs),
(57,401,o),
(113,478,qs),
(177,567,o),
(298,567,qs),
(427,567,o),
(488,466,q),
(488,549,ls),
(488,556,o),
(493,556,qs),
(748,556,ls),
(778,556,o),
(778,527,qs),
(778,516,ls),
(778,508,o),
(770,508,qs),
(539,508,l),
(539,298,l),
(730,298,ls),
(760,298,o),
(760,270,qs),
(760,259,ls),
(760,252,o),
(752,252,qs),
(539,252,l),
(539,47,l),
(758,47,ls)
);
},
{
closed = 1;
nodes = (
(420,79,qs),
(488,138,o),
(488,277,qs),
(488,399,o),
(434,462,qs),
(384,519,o),
(298,519,qs),
(223,519,o),
(175,476,qs),
(106,415,o),
(106,277,qs),
(106,155,o),
(161,93,qs),
(210,37,o),
(298,37,qs),
(373,37,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
18 1 9 3 19 1 1 2 31 1 7 0 32 1 6 8 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 7 1 0 103 0 9 9 4 97 0 4 4 39 77 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 4 0 9 2 4 9 105 0 1 0 0 7 1 0 103 0 2 2 3 95 0 3 3 39 77 10 1 7 7 6 95 0 6 6 40 77 11 1 8 8 5 97 0 5 5 46 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
42 41 0 0 50 48 41 56 42 56 0 40 0 39 36 38 36 35 33 35 33 12 9 29 
CALL[ ]	/* CallFunction */";
};
width = 821;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = o;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,-9,qs),
(147,-9,o),
(99,35,qs),
(44,87,o),
(44,178,qs),
(44,256,o),
(87,308,qs),
(136,367,o),
(220,367,qs),
(329,367,o),
(373,279,q),
(393,320,o),
(466,367,o),
(511,367,qs),
(586,367,o),
(627,322,qs),
(667,277,o),
(667,201,qs),
(667,179,o),
(667,171,q),
(665,160,o),
(653,160,qs),
(398,160,l),
(402,102,o),
(435,70,qs),
(469,37,o),
(528,37,qs),
(598,37,o),
(643,83,q),
(649,92,o),
(655,92,qs),
(662,92,o),
(662,79,qs),
(662,47,o),
(629,22,qs),
(587,-9,o),
(525,-9,qs),
(474,-9,o),
(394,37,o),
(373,78,q),
(326,-9,o)
);
},
{
closed = 1;
nodes = (
(308,71,qs),
(348,109,o),
(348,178,qs),
(348,237,o),
(316,276,qs),
(280,320,o),
(220,320,qs),
(166,320,o),
(133,286,qs),
(94,247,o),
(94,179,qs),
(94,119,o),
(124,82,qs),
(158,38,o),
(220,38,qs),
(274,38,o)
);
},
{
closed = 1;
nodes = (
(619,321,o),
(510,321,qs),
(463,321,o),
(405,259,o),
(398,203,q),
(618,203,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
29 1 10 8 20 1 3 10 2 76 0 1 3 2 3 1 2 128 12 1 10 0 3 1 10 3 103 9 1 8 8 4 97 5 1 4 4 48 77 11 7 2 2 2 0 97 6 1 0 0 49 0 78 57 57 42 41 57 62 57 62 61 59 50 48 41 56 42 56 38 35 38 35 35 20 34 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Scaron;
kernLeft = S;
kernRight = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(36,127,qs),
(44,127,o),
(51,117,qs),
(113,36,o),
(206,36,qs),
(269,36,o),
(308,62,qs),
(353,92,o),
(353,146,qs),
(353,184,o),
(320,211,qs),
(296,230,o),
(243,250,qs),
(140,288,o),
(121,298,qs),
(40,342,o),
(40,421,qs),
(40,480,o),
(83,520,qs),
(134,567,o),
(220,567,qs),
(293,567,o),
(357,536,qs),
(398,516,o),
(392,490,qs),
(388,473,ls),
(386,465,o),
(381,465,qs),
(377,465,o),
(371,469,qs),
(368,471,ls),
(300,520,o),
(216,520,qs),
(159,520,o),
(91,467,o),
(91,423,qs),
(91,385,o),
(123,358,qs),
(150,336,o),
(231,307,qs),
(317,277,o),
(349,255,qs),
(403,217,o),
(403,155,qs),
(403,85,o),
(359,41,qs),
(306,-11,o),
(210,-11,qs),
(127,-11,o),
(74,28,qs),
(24,66,o),
(24,108,qs),
(24,127,o)
);
},
{
closed = 1;
nodes = (
(265,691,o),
(280,691,qs),
(312,691,ls),
(315,691,o),
(317,686,o),
(315,685,q),
(252,628,ls),
(243,619,o),
(232,619,qs),
(203,619,ls),
(192,619,o),
(182,628,qs),
(120,685,l),
(117,686,o),
(118,688,qs),
(119,691,o),
(122,691,qs),
(155,691,ls),
(169,691,o),
(180,681,qs),
(218,646,l),
(255,681,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
59 1 7 6 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 1 6 7 6 133 0 7 3 7 133 0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 1 1 3 97 0 3 3 39 77 0 4 4 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
8 1 6 7 6 133 0 7 3 7 133 0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 106 0 4 4 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
37 54 35 34 46 37 35 45 35 9 9 31 
CALL[ ]	/* CallFunction */";
};
width = 437;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,36,qs),
(233,36,o),
(233,94,qs),
(233,128,o),
(162,156,qs),
(100,180,o),
(84,189,qs),
(32,219,o),
(32,267,qs),
(32,306,o),
(61,334,qs),
(97,367,o),
(156,367,qs),
(207,367,o),
(246,349,qs),
(273,336,o),
(266,312,qs),
(262,297,ls),
(261,291,o),
(257,291,qs),
(255,291,o),
(252,293,qs),
(204,320,o),
(156,320,qs),
(121,320,o),
(82,294,o),
(82,271,qs),
(82,239,o),
(153,212,qs),
(213,189,o),
(231,178,qs),
(283,148,o),
(283,99,qs),
(283,52,o),
(252,23,qs),
(216,-11,o),
(149,-11,qs),
(100,-11,o),
(25,40,o),
(25,73,qs),
(25,88,o),
(35,88,qs),
(40,88,o),
(44,82,q),
(83,36,o)
);
},
{
closed = 1;
nodes = (
(202,502,o),
(217,502,qs),
(249,502,ls),
(252,502,o),
(254,497,o),
(252,496,q),
(189,439,ls),
(180,431,o),
(169,431,qs),
(140,431,ls),
(129,431,o),
(119,439,qs),
(57,496,l),
(54,497,o),
(56,502,o),
(59,502,qs),
(92,502,ls),
(107,502,o),
(117,492,qs),
(155,457,l),
(192,492,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
24 1 0 2 1 76 7 1 5 6 5 133 0 6 3 6 133 0 0 2 4 2 0 4 128 0 2 2 3 97 0 3 3 48 77 0 4 4 1 97 0 1 1 46 1 78 37 53 35 42 41 43 35 33 8 9 30 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,556,o),
(13,556,qs),
(29,556,ls),
(48,556,o),
(72,537,o),
(86,513,qs),
(217,274,l),
(364,543,ls),
(370,556,o),
(381,556,qs),
(414,556,ls),
(424,556,o),
(420,547,q),
(240,219,l),
(240,6,ls),
(240,0,o),
(235,0,qs),
(195,0,ls),
(190,0,o),
(190,6,qs),
(190,219,l),
(9,548,ls)
);
},
{
closed = 1;
nodes = (
(144,681,o),
(158,681,qs),
(172,681,o),
(192,661,o),
(192,647,qs),
(192,633,o),
(172,614,o),
(158,614,qs),
(145,614,o),
(125,634,o),
(125,647,qs),
(125,661,o)
);
},
{
closed = 1;
nodes = (
(257,681,o),
(270,681,qs),
(285,681,o),
(304,661,o),
(304,647,qs),
(304,633,o),
(285,614,o),
(270,614,qs),
(257,614,o),
(238,634,o),
(238,647,qs),
(238,661,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
14 7 6 1 0 5 0 1 1 76 6 1 4 5 1 3 1 4 3 105 2 1 1 1 39 77 0 0 0 40 0 78 36 36 36 36 53 53 19 7 9 29 
CALL[ ]	/* CallFunction */";
};
width = 422;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,47,o),
(407,18,qs),
(407,7,ls),
(407,0,o),
(400,0,qs),
(44,0,ls),
(39,0,o),
(39,6,qs),
(39,30,ls),
(39,49,o),
(50,64,qs),
(361,509,l),
(52,509,ls),
(47,509,o),
(47,515,qs),
(47,549,ls),
(47,556,o),
(52,556,qs),
(358,556,ls),
(407,556,o),
(407,514,qs),
(407,504,ls),
(407,489,o),
(393,468,qs),
(97,47,l),
(378,47,ls)
);
},
{
closed = 1;
nodes = (
(266,691,o),
(281,691,qs),
(313,691,ls),
(316,691,o),
(318,686,o),
(316,685,q),
(253,628,ls),
(244,619,o),
(233,619,qs),
(204,619,ls),
(193,619,o),
(183,628,qs),
(121,685,l),
(118,686,o),
(119,688,qs),
(120,691,o),
(123,691,qs),
(156,691,ls),
(171,691,o),
(181,681,qs),
(219,646,l),
(256,681,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
32 1 5 4 10 9 2 1 0 17 1 2 3 3 76 6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 39 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 46 44 39 36 30 28 0 25 0 24 38 21 37 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 448;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(284,44,o),
(284,39,qs),
(284,6,ls),
(284,0,o),
(279,0,qs),
(40,0,ls),
(35,0,o),
(35,6,qs),
(35,36,ls),
(35,46,o),
(48,62,qs),
(247,315,l),
(44,315,ls),
(39,315,o),
(39,321,qs),
(39,354,ls),
(39,360,o),
(44,360,qs),
(241,360,ls),
(266,360,o),
(287,340,o),
(287,315,qs),
(287,292,o),
(273,274,qs),
(92,45,l),
(279,45,l)
);
},
{
closed = 1;
nodes = (
(201,502,o),
(216,502,qs),
(248,502,ls),
(251,502,o),
(253,497,o),
(251,496,q),
(188,439,ls),
(179,431,o),
(168,431,qs),
(139,431,ls),
(128,431,o),
(118,439,qs),
(56,496,l),
(53,497,o),
(54,499,qs),
(55,502,o),
(58,502,qs),
(91,502,ls),
(105,502,o),
(116,492,qs),
(154,457,l),
(191,492,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
32 1 5 4 10 9 2 1 0 23 22 17 3 2 3 3 76 6 1 4 5 4 133 0 5 0 5 133 0 1 1 0 95 0 0 0 42 77 7 1 3 3 2 95 0 2 2 40 2 78 0 0 46 44 39 36 30 28 0 25 0 25 22 21 37 8 9 25 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,315,o),
(56,321,q),
(62,354,ls),
(63,359,o),
(68,359,qs),
(131,359,l),
(149,464,ls),
(156,509,o),
(211,562,o),
(252,562,qs),
(279,562,o),
(317,527,o),
(317,502,qs),
(317,484,o),
(307,484,qs),
(303,484,o),
(299,488,q),
(278,516,o),
(250,516,qs),
(209,516,o),
(200,461,qs),
(182,359,l),
(270,359,ls),
(275,359,o),
(274,354,qs),
(268,321,l),
(266,315,o),
(262,315,qs),
(174,315,l),
(104,-74,ls),
(95,-120,o),
(41,-171,o),
(2,-171,qs),
(-26,-171,o),
(-64,-137,o),
(-64,-111,qs),
(-64,-94,o),
(-54,-94,qs),
(-50,-94,o),
(-46,-98,q),
(-26,-125,o),
(3,-125,qs),
(45,-125,o),
(55,-71,qs),
(123,315,l),
(60,315,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
20 1 3 4 1 76 0 6 5 4 5 6 4 128 0 1 3 0 3 1 0 128 0 5 5 7 97 0 7 7 39 77 10 9 2 3 3 4 95 8 1 4 4 42 77 0 0 0 2 97 0 2 2 44 2 78 0 0 0 45 0 44 19 35 34 34 21 19 35 34 34 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 347;
}
);
note = florin;
unicode = 402;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,431,o),
(38,431,qs),
(5,431,ls),
(2,431,o),
(1,432,q),
(0,435,o),
(2,436,q),
(65,493,ls),
(75,502,o),
(86,502,qs),
(115,502,ls),
(125,502,o),
(135,493,qs),
(198,436,l),
(200,435,o),
(198,431,o),
(195,431,qs),
(162,431,ls),
(148,431,o),
(137,440,q),
(101,475,l),
(63,440,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
0 1 0 1 133 2 1 0 0 118 38 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 200;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,502,o),
(162,502,qs),
(195,502,ls),
(198,502,o),
(200,497,o),
(198,496,q),
(135,439,ls),
(125,431,o),
(115,431,qs),
(86,431,ls),
(75,431,o),
(65,439,qs),
(2,496,l),
(0,497,o),
(2,502,o),
(5,502,qs),
(38,502,ls),
(52,502,o),
(63,492,qs),
(101,457,l),
(137,492,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 16 values pushed */
2 1 0 1 0 133 0 1 1 118 37 53 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 200;
}
);
note = caron;
unicode = 711;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(7,502,qs),
(36,502,ls),
(42,502,o),
(44,494,qs),
(56,461,o),
(94,461,qs),
(133,461,o),
(145,494,qs),
(148,502,o),
(153,502,qs),
(182,502,ls),
(188,502,o),
(187,493,qs),
(175,426,o),
(94,426,qs),
(14,426,o),
(2,493,qs),
(1,502,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 6 values pushed */
0 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 2 2 1 112 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 2 1 133 0 2 0 0 2 89 0 2 2 0 98 0 0 2 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
34 35 34 33 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 187;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,492,o),
(33,492,qs),
(47,492,o),
(67,472,o),
(67,459,qs),
(67,445,o),
(47,426,o),
(33,426,qs),
(19,426,o),
(0,445,o),
(0,459,qs),
(0,472,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 36 34 2 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 67;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(37,548,o),
(64,548,qs),
(91,548,o),
(130,511,o),
(130,484,qs),
(130,458,o),
(91,421,o),
(64,421,qs),
(38,421,o),
(-1,458,o),
(-1,484,qs),
(-1,510,o)
);
},
{
closed = 1;
nodes = (
(97,469,o),
(97,484,qs),
(97,499,o),
(79,519,o),
(64,519,qs),
(50,519,o),
(32,499,o),
(32,484,qs),
(32,469,o),
(50,450,o),
(64,450,qs),
(78,450,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
0 1 0 3 2 1 3 105 4 1 2 0 0 2 89 4 1 2 2 0 97 0 0 2 0 81 13 12 19 17 12 23 13 23 36 34 5 9 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 130;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,qs),
(49,2,o),
(57,2,qs),
(93,2,ls),
(96,2,o),
(97,-2,o),
(94,-3,q),
(39,-34,o),
(39,-66,qs),
(39,-99,o),
(76,-99,qs),
(94,-99,o),
(107,-93,qs),
(113,-91,o),
(113,-97,qs),
(113,-119,ls),
(113,-125,o),
(107,-127,qs),
(89,-133,o),
(70,-133,qs),
(39,-133,o),
(0,-98,o),
(0,-71,qs),
(0,-27,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
PUSHB[ ]	/* 7 values pushed */
10 8 2 1 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 1 2 112 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 2 1 2 133 0 1 0 0 1 89 0 1 1 0 98 0 0 1 0 82 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 6 values pushed */
53 39 34 3 9 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 113;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,436,qs),
(4,495,o),
(51,495,qs),
(68,495,o),
(100,480,qs),
(127,468,o),
(136,468,qs),
(151,468,o),
(156,483,qs),
(158,491,o),
(165,491,qs),
(192,491,ls),
(198,491,o),
(198,485,qs),
(196,459,o),
(165,428,o),
(140,428,qs),
(123,428,o),
(92,443,qs),
(66,455,o),
(57,455,qs),
(42,455,o),
(40,438,qs),
(39,431,o),
(33,431,qs),
(6,431,ls),
(0,431,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
12 1 4 3 25 1 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 1 0 4 89 5 1 3 0 1 0 3 1 105 0 4 4 0 98 2 1 0 4 0 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 3 5 4 5 3 4 128 0 4 1 0 4 89 0 5 0 1 0 5 1 105 0 4 4 0 98 2 1 0 4 0 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
34 34 36 34 35 16 6 9 28 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 198;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(53,502,o),
(66,502,qs),
(105,502,ls),
(108,502,o),
(110,497,o),
(108,496,q),
(59,441,ls),
(49,431,o),
(34,431,qs),
(4,431,ls),
(1,431,o),
(-1,435,o),
(1,437,qs),
(45,493,ls)
);
},
{
closed = 1;
nodes = (
(168,502,o),
(182,502,qs),
(222,502,ls),
(230,502,o),
(225,496,qs),
(175,441,l),
(164,431,o),
(150,431,qs),
(120,431,ls),
(112,431,o),
(117,437,qs),
(161,493,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 18 values pushed */
3 1 1 0 1 133 2 1 0 0 118 51 51 37 35 4 9 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 226;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(110,-160,o),
(105,-160,qs),
(65,-160,ls),
(60,-160,o),
(60,-154,qs),
(60,354,ls),
(60,359,o),
(65,359,qs),
(70,359,ls),
(88,359,o),
(110,331,o),
(110,308,qs),
(110,156,ls),
(110,99,o),
(163,36,o),
(212,36,qs),
(314,36,o),
(314,153,qs),
(314,354,ls),
(314,359,o),
(319,359,qs),
(324,359,ls),
(342,359,o),
(364,331,o),
(364,308,qs),
(364,156,ls),
(364,83,o),
(329,40,qs),
(288,-10,o),
(212,-10,qs),
(145,-10,o),
(110,32,q),
(110,-154,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 1 0 2 32 27 2 4 0 2 76 3 1 1 2 1 133 0 2 0 0 4 2 0 105 0 4 4 33 4 78 20 53 35 54 33 5 8 27 
CALL[ ]	/* CallFunction */";
};
width = 424;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = uni060C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,42,o),
(127,27,qs),
(127,9,o),
(103,-16,o),
(86,-16,qs),
(69,-16,o),
(45,10,o),
(45,29,qs),
(45,60,o),
(82,128,o),
(113,154,qs),
(115,156,o),
(118,153,qs),
(134,138,o),
(116,114,qs),
(97,86,o),
(92,69,q),
(107,66,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
4 1 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 24 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 4 values pushed */
43 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 172;
}
);
note = uni060C;
unicode = 1548;
},
{
glyphname = uni061B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,213,o),
(48,232,qs),
(48,263,o),
(85,331,o),
(116,357,qs),
(118,359,o),
(121,356,qs),
(137,342,o),
(119,317,qs),
(100,289,o),
(95,272,q),
(110,270,o),
(130,246,o),
(130,230,qs),
(130,213,o),
(106,188,o),
(89,188,qs),
(72,188,o)
);
},
{
closed = 1;
nodes = (
(130,44,o),
(130,27,qs),
(130,9,o),
(106,-16,o),
(89,-16,qs),
(72,-16,o),
(48,9,o),
(48,27,qs),
(48,44,o),
(72,69,o),
(89,69,qs),
(106,69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
10 6 2 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
3 1 0 1 0 133 4 1 1 1 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
3 1 0 1 0 133 4 1 1 2 2 1 89 4 1 1 1 2 97 0 2 1 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
19 18 1 0 25 23 18 29 19 29 0 17 1 17 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 178;
}
);
note = uni061B;
unicode = 1563;
},
{
glyphname = uni061F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,132,o),
(207,140,qs),
(207,208,ls),
(207,243,o),
(156,279,qs),
(98,320,o),
(61,372,o),
(61,416,qs),
(60,480,o),
(98,518,qs),
(139,559,o),
(208,559,qs),
(246,559,o),
(310,524,o),
(314,502,qs),
(317,488,o),
(305,488,qs),
(300,488,o),
(293,492,qs),
(248,512,o),
(211,512,qs),
(178,512,o),
(152,496,qs),
(111,471,o),
(112,414,qs),
(113,388,o),
(128,366,qs),
(142,347,o),
(179,320,qs),
(228,286,o),
(258,245,o),
(258,214,qs),
(258,140,ls),
(258,132,o),
(251,132,qs),
(215,132,ls)
);
},
{
closed = 1;
nodes = (
(275,44,o),
(275,27,qs),
(275,9,o),
(251,-16,o),
(234,-16,qs),
(217,-16,o),
(193,9,o),
(193,27,qs),
(193,44,o),
(217,69,o),
(234,69,qs),
(251,69,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 0 1 1 3 97 0 3 3 23 77 7 1 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 6 1 0 4 1 0 4 126 7 1 4 0 5 4 5 101 0 1 1 3 97 0 3 3 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
37 36 1 0 43 41 36 47 37 47 24 22 19 17 15 13 0 35 1 34 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 368;
}
);
note = uni061F;
unicode = 1567;
},
{
glyphname = uni0621;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,46,o),
(392,26,o),
(392,11,qs),
(392,7,ls),
(392,0,o),
(385,0,qs),
(161,0,ls),
(103,0,o),
(75,-22,qs),
(70,-26,o),
(65,-26,qs),
(59,-26,o),
(58,-19,qs),
(55,13,o),
(92,31,qs),
(111,42,o),
(144,44,q),
(88,91,o),
(88,171,qs),
(88,245,o),
(130,291,qs),
(175,341,o),
(251,341,qs),
(298,341,o),
(329,319,qs),
(352,302,o),
(352,286,qs),
(352,273,o),
(343,273,qs),
(338,273,o),
(332,276,qs),
(295,296,o),
(253,296,qs),
(206,296,o),
(174,267,qs),
(137,232,o),
(137,170,qs),
(137,125,o),
(162,91,qs),
(195,46,o),
(255,46,qs),
(348,46,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 2 1 0 1 2 0 128 0 5 6 5 134 0 3 0 1 2 3 1 105 4 7 2 0 0 6 95 0 6 6 24 6 78 1 0 36 33 31 29 25 24 19 17 13 11 9 7 0 41 1 40 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = uni0621;
unicode = 1569;
},
{
glyphname = uni0622;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,669,qs),
(193,684,o),
(187,693,qs),
(183,700,o),
(178,694,q),
(177,692,o),
(174,688,qs),
(171,683,o),
(169,680,qs),
(160,668,o),
(149,668,qs),
(141,668,o),
(115,678,qs),
(67,696,o),
(51,696,qs),
(19,696,o),
(14,661,qs),
(12,647,o),
(18,637,qs),
(22,631,o),
(27,637,qs),
(28,638,o),
(31,643,qs),
(34,648,o),
(36,651,qs),
(45,663,o),
(56,663,qs),
(64,663,o),
(90,653,qs),
(138,634,o),
(154,634,qs),
(186,634,o)
);
},
{
closed = 1;
nodes = (
(71,0,o),
(71,6,qs),
(71,504,ls),
(71,527,o),
(94,556,o),
(112,556,qs),
(117,556,ls),
(122,556,o),
(122,550,qs),
(122,51,ls),
(122,28,o),
(100,0,o),
(82,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
43 36 2 4 5 1 76 0 2 3 2 133 0 3 1 3 133 0 1 0 1 133 6 1 0 5 0 133 0 5 5 23 77 7 1 4 4 24 4 78 33 32 1 0 40 38 32 45 33 45 21 19 17 15 5 3 0 31 1 31 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0622;
unicode = 1570;
},
{
glyphname = uni0623;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,672,o),
(177,647,qs),
(177,644,ls),
(177,638,o),
(170,638,qs),
(88,638,ls),
(55,638,o),
(32,631,qs),
(30,630,o),
(28,629,qs),
(22,627,l),
(16,627,o),
(16,639,qs),
(16,663,o),
(45,669,q),
(30,689,o),
(30,714,qs),
(30,746,o),
(70,788,o),
(100,788,qs),
(122,788,o),
(154,764,o),
(155,747,q),
(157,739,o),
(151,739,qs),
(148,739,o),
(143,742,qs),
(141,743,o),
(140,743,q),
(122,754,o),
(108,754,qs),
(90,754,o),
(68,732,o),
(68,714,qs),
(68,696,o),
(89,672,o),
(105,672,qs),
(150,672,ls)
);
},
{
closed = 1;
nodes = (
(121,556,o),
(121,550,qs),
(121,51,ls),
(121,28,o),
(99,0,o),
(80,0,qs),
(75,0,ls),
(70,0,o),
(70,6,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
14 1 2 1 22 1 4 0 49 42 2 6 5 3 76 0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 7 1 0 0 4 5 0 4 103 8 1 5 5 23 77 0 6 6 24 6 78 39 38 1 0 46 44 38 51 39 51 33 30 18 16 13 11 7 5 0 37 1 36 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0623;
unicode = 1571;
},
{
glyphname = uni0624;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,453,qs),
(142,477,o),
(171,482,q),
(157,502,o),
(157,528,qs),
(157,560,o),
(196,601,o),
(226,601,qs),
(248,601,o),
(280,577,o),
(282,560,qs),
(283,552,o),
(277,552,qs),
(275,552,o),
(269,555,qs),
(267,556,o),
(267,557,q),
(248,567,o),
(234,567,qs),
(217,567,o),
(194,545,o),
(194,527,qs),
(194,509,o),
(215,486,o),
(232,486,qs),
(276,486,ls),
(303,486,o),
(303,460,qs),
(303,457,ls),
(303,452,o),
(297,452,qs),
(214,452,ls),
(181,452,o),
(158,444,q),
(157,444,o),
(155,443,qs),
(149,441,o),
(148,441,qs),
(142,441,o)
);
},
{
closed = 1;
nodes = (
(391,113,qs),
(391,10,o),
(376,-91,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(333,-130,o),
(338,21,q),
(279,-11,o),
(221,-9,qs),
(152,-9,o),
(108,39,qs),
(60,91,o),
(60,178,qs),
(60,259,o),
(101,310,qs),
(146,368,o),
(223,368,qs),
(325,368,o),
(366,272,qs),
(389,218,o)
);
},
{
closed = 1;
nodes = (
(338,74,q),
(339,96,o),
(339,109,qs),
(339,208,o),
(317,256,qs),
(287,321,o),
(224,321,qs),
(178,321,o),
(147,287,qs),
(112,247,o),
(112,179,qs),
(112,122,o),
(138,84,qs),
(169,38,o),
(224,38,qs),
(292,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
35 9 2 1 2 89 1 11 12 51 1 7 11 61 1 8 9 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 4 3 2 3 4 2 128 13 1 0 1 6 1 0 6 128 0 9 7 8 7 9 8 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 6 0 12 11 6 12 105 0 8 0 10 8 10 101 14 1 11 11 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
0 4 3 2 3 4 2 128 13 1 0 1 6 1 0 6 128 0 9 7 8 7 9 8 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 6 0 12 11 6 12 105 14 1 11 0 7 9 11 7 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
76 75 1 0 84 82 75 90 76 90 69 67 60 58 56 54 50 48 42 40 31 29 26 24 20 18 14 11 7 5 0 38 1 38 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0624;
unicode = 1572;
},
{
glyphname = uni0625;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,6,qs),
(70,504,ls),
(70,527,o),
(92,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,51,ls),
(121,28,o),
(99,0,o),
(80,0,qs),
(75,0,ls)
);
},
{
closed = 1;
nodes = (
(175,-191,o),
(175,-216,qs),
(175,-219,ls),
(175,-224,o),
(168,-224,qs),
(86,-224,ls),
(53,-224,o),
(30,-232,q),
(29,-233,o),
(27,-233,q),
(20,-236,l),
(14,-236,o),
(14,-223,qs),
(14,-199,o),
(43,-194,q),
(28,-174,o),
(28,-148,qs),
(28,-116,o),
(68,-75,o),
(98,-75,qs),
(120,-75,o),
(152,-99,o),
(153,-116,q),
(155,-124,o),
(149,-124,qs),
(146,-124,o),
(141,-121,qs),
(139,-120,o),
(138,-119,q),
(120,-109,o),
(106,-109,qs),
(88,-109,o),
(66,-131,o),
(66,-149,qs),
(66,-167,o),
(87,-191,o),
(103,-191,qs),
(148,-191,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
11 4 2 0 1 28 1 4 3 36 1 6 2 3 76 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 105 8 1 2 0 6 2 6 99 0 1 1 23 77 7 1 0 0 24 0 78 15 14 1 0 47 44 32 30 27 25 21 19 14 51 15 50 8 6 0 13 1 13 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0625;
unicode = 1573;
},
{
glyphname = uni0626;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,316,qs),
(60,340,o),
(89,346,q),
(74,366,o),
(74,391,qs),
(74,423,o),
(114,464,o),
(144,464,qs),
(166,464,o),
(198,441,o),
(199,423,q),
(201,416,o),
(195,416,qs),
(192,416,o),
(187,419,qs),
(185,420,o),
(184,420,q),
(166,431,o),
(152,431,qs),
(134,431,o),
(112,408,o),
(112,391,qs),
(112,372,o),
(133,349,o),
(149,349,qs),
(194,349,ls),
(221,349,o),
(221,323,qs),
(221,321,ls),
(221,315,o),
(214,315,qs),
(132,315,ls),
(99,315,o),
(76,307,q),
(74,307,o),
(72,306,qs),
(66,304,o),
(66,304,q),
(60,304,o)
);
},
{
closed = 1;
nodes = (
(554,64,qs),
(612,42,o),
(606,-7,qs),
(596,-92,o),
(529,-149,qs),
(451,-215,o),
(333,-215,qs),
(220,-215,o),
(145,-151,qs),
(60,-80,o),
(60,34,qs),
(60,92,o),
(103,196,o),
(139,224,q),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,210,q),
(133,171,o),
(111,98,o),
(109,45,q),
(111,-45,o),
(169,-104,qs),
(232,-167,o),
(333,-167,qs),
(408,-167,o),
(468,-131,qs),
(539,-88,o),
(552,-16,qs),
(556,6,o),
(537,18,qs),
(521,28,o),
(472,36,qs),
(433,44,o),
(418,47,qs),
(353,63,o),
(278,145,o),
(278,201,qs),
(278,274,o),
(325,320,qs),
(374,368,o),
(451,368,qs),
(513,368,o),
(547,343,qs),
(570,325,o),
(570,308,qs),
(570,294,o),
(560,294,qs),
(555,294,o),
(549,298,qs),
(511,321,o),
(457,321,qs),
(408,321,o),
(373,295,qs),
(329,262,o),
(329,201,qs),
(329,162,o),
(392,101,o),
(443,91,qs),
(532,73,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 35 1 0 1 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 35 1 5 1 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 7 2 3 7 128 0 6 0 9 0 6 9 128 0 9 8 0 9 8 126 0 4 0 2 3 4 2 105 0 7 1 0 7 89 0 1 5 1 0 6 1 0 105 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 63 values pushed */
0 3 2 7 2 3 7 128 0 6 0 9 0 6 9 128 0 9 8 0 9 8 126 0 4 0 2 3 4 2 105 0 7 0 5 0 7 5 105 0 1 0 0 6 1 0 103 0 8 10 10 8 89 0 8 8 10 97 0 10 8 10 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
94 92 84 83 47 36 34 46 35 36 36 51 53 11 7 31 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni0626;
unicode = 1574;
},
{
glyphname = uni0627;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,6,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,51,ls),
(121,28,o),
(99,0,o),
(81,0,qs),
(76,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
11 4 2 0 1 1 76 0 1 1 23 77 2 1 0 0 24 0 78 1 0 8 6 0 13 1 13 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0627;
unicode = 1575;
},
{
glyphname = uni0628;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls)
);
},
{
closed = 1;
nodes = (
(413,-96,o),
(413,-112,qs),
(413,-128,o),
(392,-150,o),
(376,-150,qs),
(361,-150,o),
(339,-128,o),
(339,-112,qs),
(339,-96,o),
(361,-74,o),
(376,-74,qs),
(392,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
5 1 3 1 1 76 0 1 3 1 133 0 3 2 3 133 7 1 4 0 5 4 5 101 0 2 2 0 96 6 1 0 0 24 0 78 32 31 1 0 38 36 31 42 32 42 24 22 16 13 9 7 0 30 1 29 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni0628;
unicode = 1576;
},
{
glyphname = uni0629;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,533,o),
(103,548,qs),
(103,563,o),
(123,583,o),
(137,583,qs),
(152,583,o),
(172,563,o),
(172,548,qs),
(172,533,o),
(152,513,o),
(137,513,qs),
(123,513,o)
);
},
{
closed = 1;
nodes = (
(201,533,o),
(201,548,qs),
(201,563,o),
(221,583,o),
(235,583,qs),
(250,583,o),
(269,563,o),
(269,548,qs),
(269,533,o),
(250,513,o),
(235,513,qs),
(221,513,o)
);
},
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 37 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
51 50 13 12 1 0 50 64 51 64 45 43 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0629;
unicode = 1577;
},
{
glyphname = uni062A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,391,o),
(296,406,qs),
(296,421,o),
(316,441,o),
(330,441,qs),
(345,441,o),
(364,421,o),
(364,406,qs),
(364,391,o),
(345,371,o),
(330,371,qs),
(316,371,o)
);
},
{
closed = 1;
nodes = (
(394,391,o),
(394,406,qs),
(394,421,o),
(414,441,o),
(428,441,qs),
(442,441,o),
(462,421,o),
(462,406,qs),
(462,391,o),
(442,371,o),
(428,371,qs),
(414,371,o)
);
},
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
29 1 7 5 1 76 0 5 0 7 0 5 7 128 0 7 6 0 7 6 126 3 1 1 9 2 8 3 0 5 1 0 105 0 6 6 4 96 10 1 4 4 24 4 78 25 24 13 12 1 0 48 46 40 37 33 31 24 54 25 53 19 17 12 23 13 23 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni062A;
unicode = 1578;
},
{
glyphname = uni062B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,472,o),
(345,487,qs),
(345,501,o),
(365,521,o),
(379,521,qs),
(393,521,o),
(413,501,o),
(413,487,qs),
(413,472,o),
(393,451,o),
(379,451,qs),
(365,451,o)
);
},
{
closed = 1;
nodes = (
(296,391,o),
(296,406,qs),
(296,420,o),
(316,440,o),
(330,440,qs),
(345,440,o),
(364,420,o),
(364,406,qs),
(364,390,o),
(345,370,o),
(330,370,qs),
(316,370,o)
);
},
{
closed = 1;
nodes = (
(394,391,o),
(394,406,qs),
(394,420,o),
(414,440,o),
(428,440,qs),
(442,440,o),
(462,420,o),
(462,406,qs),
(462,391,o),
(442,370,o),
(428,370,qs),
(414,370,o)
);
},
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
41 1 9 7 1 76 0 7 2 9 2 7 9 128 0 9 8 2 9 8 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 8 6 96 13 1 6 6 24 6 78 37 36 25 24 13 12 1 0 60 58 52 49 45 43 36 66 37 65 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni062B;
unicode = 1579;
},
{
glyphname = uni062C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(512,0,ls),
(560,0,o),
(560,44,qs),
(560,49,o),
(555,49,qs),
(529,50,o),
(516,64,qs),
(484,99,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,120,o),
(451,61,o),
(466,49,q),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
},
{
closed = 1;
nodes = (
(335,-122,o),
(335,-138,qs),
(335,-154,o),
(314,-176,o),
(298,-176,qs),
(283,-176,o),
(262,-154,o),
(262,-138,qs),
(262,-122,o),
(283,-101,o),
(298,-101,qs),
(314,-101,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 5 4 56 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
0 5 4 3 4 5 3 128 11 1 9 8 10 8 9 114 0 10 1 0 10 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 5 4 3 4 5 3 128 11 1 9 8 10 8 9 10 128 0 10 1 8 10 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
64 63 70 68 63 74 64 74 51 20 38 38 36 38 38 36 35 12 7 31 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uni062C;
unicode = 1580;
},
{
glyphname = uni062D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(512,0,ls),
(560,0,o),
(560,44,qs),
(560,49,o),
(555,49,qs),
(529,50,o),
(516,64,qs),
(484,99,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,120,o),
(451,61,o),
(466,49,q),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
42 1 5 4 56 1 8 3 2 76 0 5 4 3 4 5 3 128 0 1 8 0 8 1 0 128 0 6 0 4 5 6 4 105 0 0 0 2 0 2 101 7 1 3 3 8 95 0 8 8 24 8 78 51 20 38 38 36 38 38 36 35 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uni062D;
unicode = 1581;
},
{
glyphname = uni062E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,503,o),
(312,487,qs),
(312,471,o),
(291,448,o),
(275,448,qs),
(260,448,o),
(238,471,o),
(238,487,qs),
(238,503,o),
(260,524,o),
(275,524,qs),
(291,524,o)
);
},
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(512,0,ls),
(560,0,o),
(560,44,qs),
(560,49,o),
(555,49,qs),
(529,50,o),
(516,64,qs),
(484,99,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,120,o),
(451,61,o),
(466,49,q),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
54 1 7 6 68 1 10 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
11 1 0 1 0 133 0 1 8 8 1 112 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 95 0 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
11 1 0 1 0 133 0 1 8 1 133 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 95 0 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 72 69 66 65 61 59 53 51 45 43 39 37 31 29 23 21 17 15 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uni062E;
unicode = 1582;
},
{
glyphname = uni062F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o),
(310,320,qs),
(353,267,o),
(353,174,qs),
(353,98,o),
(315,52,qs),
(272,0,o),
(197,0,qs),
(62,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 3 4 3 2 4 128 0 1 0 3 2 1 3 105 0 4 4 0 95 5 1 0 0 24 0 78 1 0 28 25 20 18 14 13 9 7 0 33 1 32 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = uni062F;
unicode = 1583;
},
{
glyphname = uni0630;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,489,o),
(182,473,qs),
(182,457,o),
(160,435,o),
(145,435,qs),
(129,435,o),
(108,457,o),
(108,473,qs),
(108,489,o),
(129,511,o),
(145,511,qs),
(160,511,o)
);
},
{
closed = 1;
nodes = (
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o),
(310,320,qs),
(353,267,o),
(353,174,qs),
(353,98,o),
(315,52,qs),
(272,0,o),
(197,0,qs),
(62,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 4 5 6 5 4 6 128 7 1 0 0 1 3 0 1 105 0 3 0 5 4 3 5 105 0 6 6 2 95 8 1 2 2 24 2 78 13 12 1 0 40 37 32 30 26 25 21 19 12 45 13 44 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = uni0630;
unicode = 1584;
},
{
glyphname = uni0631;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
13 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 4 1 0 2 2 0 89 4 1 0 0 2 97 0 2 0 2 81 1 0 17 15 11 9 5 3 0 20 1 20 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0631;
unicode = 1585;
},
{
glyphname = uni0632;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(193,474,o),
(193,458,qs),
(193,442,o),
(171,420,o),
(156,420,qs),
(140,420,o),
(119,442,o),
(119,458,qs),
(119,474,o),
(140,496,o),
(156,496,qs),
(171,496,o)
);
},
{
closed = 1;
nodes = (
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
25 1 3 5 1 76 0 5 1 3 1 5 3 128 0 3 2 1 3 2 126 6 1 0 0 1 5 0 1 105 7 1 2 4 4 2 89 7 1 2 2 4 97 0 4 2 4 81 13 12 1 0 29 27 23 21 17 15 12 32 13 32 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0632;
unicode = 1586;
},
{
glyphname = uni0633;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1007,349,o),
(1007,344,qs),
(1007,146,ls),
(1007,77,o),
(973,36,qs),
(935,-9,o),
(864,-9,qs),
(784,-9,o),
(748,48,q),
(710,-9,o),
(630,-9,qs),
(575,-9,o),
(538,20,q),
(531,-84,o),
(469,-147,qs),
(403,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,258,ls),
(487,308,o),
(528,308,qs),
(533,308,ls),
(538,308,o),
(538,303,qs),
(538,151,ls),
(538,99,o),
(587,38,o),
(629,38,qs),
(673,38,o),
(722,96,o),
(722,146,qs),
(722,278,ls),
(722,329,o),
(762,329,qs),
(767,329,ls),
(773,329,o),
(773,324,qs),
(773,151,ls),
(773,99,o),
(822,38,o),
(864,38,qs),
(908,38,o),
(956,95,o),
(956,146,qs),
(956,298,ls),
(956,321,o),
(979,349,o),
(997,349,qs),
(1002,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
68 1 2 0 11 1 4 2 24 1 6 4 61 1 1 6 57 1 8 1 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 0 5 0 7 5 7 101 3 1 1 1 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
10 1 0 2 0 133 0 2 4 2 133 0 4 6 4 133 0 6 1 6 133 3 1 1 9 1 8 5 1 8 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
1 0 64 62 60 58 54 52 45 43 35 33 28 26 21 19 15 13 8 6 0 70 1 70 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1076;
}
);
note = uni0633;
unicode = 1587;
},
{
glyphname = uni0634;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,502,o),
(714,517,qs),
(714,532,o),
(734,552,o),
(748,552,qs),
(762,552,o),
(782,532,o),
(782,517,qs),
(782,502,o),
(762,482,o),
(748,482,qs),
(734,482,o)
);
},
{
closed = 1;
nodes = (
(665,421,o),
(665,436,qs),
(665,451,o),
(685,471,o),
(699,471,qs),
(713,471,o),
(733,451,o),
(733,436,qs),
(733,421,o),
(713,401,o),
(699,401,qs),
(685,401,o)
);
},
{
closed = 1;
nodes = (
(782,471,o),
(797,471,qs),
(811,471,o),
(831,451,o),
(831,436,qs),
(831,421,o),
(811,401,o),
(797,401,qs),
(782,401,o),
(763,421,o),
(763,436,qs),
(763,451,o)
);
},
{
closed = 1;
nodes = (
(1007,349,o),
(1007,344,qs),
(1007,146,ls),
(1007,77,o),
(973,36,qs),
(935,-9,o),
(864,-9,qs),
(784,-9,o),
(748,48,q),
(710,-9,o),
(630,-9,qs),
(575,-9,o),
(538,20,q),
(531,-84,o),
(469,-147,qs),
(403,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,258,ls),
(487,308,o),
(528,308,qs),
(533,308,ls),
(538,308,o),
(538,303,qs),
(538,151,ls),
(538,99,o),
(587,38,o),
(629,38,qs),
(673,38,o),
(722,96,o),
(722,146,qs),
(722,278,ls),
(722,329,o),
(762,329,qs),
(767,329,ls),
(773,329,o),
(773,324,qs),
(773,151,ls),
(773,99,o),
(822,38,o),
(864,38,qs),
(908,38,o),
(956,95,o),
(956,146,qs),
(956,298,ls),
(956,321,o),
(979,349,o),
(997,349,qs),
(1002,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
104 1 8 6 47 1 10 8 60 1 12 10 97 1 7 12 93 1 14 7 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 5 1 3 4 17 2 2 6 3 2 105 0 11 0 13 11 13 101 16 1 0 0 1 97 0 1 1 23 77 9 1 7 7 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 70 values pushed */
18 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 12 2 10 12 126 0 12 7 2 12 7 126 5 1 3 4 17 2 2 6 3 2 105 9 1 7 15 1 14 11 7 14 105 0 11 0 13 11 13 101 16 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
37 36 13 12 1 0 100 98 96 94 90 88 81 79 71 69 64 62 57 55 51 49 44 42 36 106 37 106 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 19 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1076;
}
);
note = uni0634;
unicode = 1588;
},
{
glyphname = uni0635;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1120,325,qs),
(1186,272,o),
(1186,177,qs),
(1186,101,o),
(1145,53,qs),
(1099,0,o),
(1025,0,qs),
(649,0,ls),
(591,0,o),
(555,30,q),
(552,-79,o),
(489,-145,qs),
(423,-214,o),
(316,-214,qs),
(223,-214,o),
(158,-159,qs),
(77,-91,o),
(78,34,qs),
(78,91,o),
(123,196,o),
(159,225,qs),
(166,231,o),
(173,231,qs),
(185,231,o),
(184,219,qs),
(184,216,o),
(181,211,qs),
(130,137,o),
(128,46,qs),
(126,-53,o),
(181,-111,qs),
(234,-167,o),
(316,-167,qs),
(383,-167,o),
(434,-124,qs),
(504,-66,o),
(504,46,qs),
(504,298,ls),
(504,321,o),
(527,349,o),
(545,349,qs),
(550,349,ls),
(555,349,o),
(555,344,qs),
(555,155,ls),
(555,106,o),
(604,49,o),
(647,49,qs),
(649,49,l),
(679,175,o),
(755,260,qs),
(852,368,o),
(989,368,qs),
(1067,368,o)
);
},
{
closed = 1;
nodes = (
(1068,49,o),
(1099,82,qs),
(1135,119,o),
(1134,178,qs),
(1133,244,o),
(1094,282,qs),
(1053,321,o),
(988,321,qs),
(890,321,o),
(814,249,qs),
(734,173,o),
(705,49,q),
(1020,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
9 1 7 2 43 1 6 1 2 76 0 2 0 7 0 2 7 128 0 4 7 1 7 4 1 128 9 1 0 0 7 4 0 7 105 0 3 0 5 3 5 101 10 8 2 1 1 6 95 0 6 6 24 6 78 54 54 1 0 54 66 54 65 59 57 47 44 40 38 31 29 21 19 13 11 6 4 0 53 1 53 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1245;
}
);
note = uni0635;
unicode = 1589;
},
{
glyphname = uni0636;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(929,468,o),
(929,484,qs),
(929,500,o),
(950,522,o),
(966,522,qs),
(982,522,o),
(1003,500,o),
(1003,484,qs),
(1003,468,o),
(982,446,o),
(966,446,qs),
(951,446,o)
);
},
{
closed = 1;
nodes = (
(1120,325,qs),
(1186,272,o),
(1186,177,qs),
(1186,101,o),
(1145,53,qs),
(1099,0,o),
(1025,0,qs),
(649,0,ls),
(591,0,o),
(555,30,q),
(552,-79,o),
(489,-145,qs),
(423,-214,o),
(316,-214,qs),
(223,-214,o),
(158,-159,qs),
(77,-91,o),
(78,34,qs),
(78,91,o),
(123,196,o),
(159,225,qs),
(166,231,o),
(173,231,qs),
(185,231,o),
(184,219,qs),
(184,216,o),
(181,211,qs),
(130,137,o),
(128,46,qs),
(126,-53,o),
(181,-111,qs),
(234,-167,o),
(316,-167,qs),
(383,-167,o),
(434,-124,qs),
(504,-66,o),
(504,46,qs),
(504,298,ls),
(504,321,o),
(527,349,o),
(545,349,qs),
(550,349,ls),
(555,349,o),
(555,344,qs),
(555,155,ls),
(555,106,o),
(604,49,o),
(647,49,qs),
(649,49,l),
(679,175,o),
(755,260,qs),
(852,368,o),
(989,368,qs),
(1067,368,o)
);
},
{
closed = 1;
nodes = (
(1068,49,o),
(1099,82,qs),
(1135,119,o),
(1134,178,qs),
(1133,244,o),
(1094,282,qs),
(1053,321,o),
(988,321,qs),
(890,321,o),
(814,249,qs),
(734,173,o),
(705,49,q),
(1020,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
21 1 9 4 55 1 8 3 2 76 0 4 2 9 2 4 9 128 0 6 9 3 9 6 3 128 0 1 11 1 0 2 1 0 105 12 1 2 0 9 6 2 9 105 0 5 0 7 5 7 101 13 10 2 3 3 8 95 0 8 8 24 8 78 66 66 13 12 1 0 66 78 66 77 71 69 59 56 52 50 43 41 33 31 25 23 18 16 12 65 13 65 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1245;
}
);
note = uni0636;
unicode = 1590;
},
{
glyphname = uni0637;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(649,325,qs),
(715,272,o),
(715,177,qs),
(715,101,o),
(674,53,qs),
(628,0,o),
(553,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(182,49,l),
(182,504,ls),
(182,556,o),
(223,556,qs),
(228,556,ls),
(233,556,o),
(233,550,qs),
(233,190,l),
(277,265,o),
(341,311,qs),
(421,368,o),
(518,368,qs),
(596,368,o)
);
},
{
closed = 1;
nodes = (
(596,49,o),
(628,82,qs),
(663,119,o),
(663,179,qs),
(662,245,o),
(622,283,qs),
(582,322,o),
(516,322,qs),
(419,322,o),
(343,250,qs),
(262,174,o),
(233,49,q),
(549,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
5 1 0 1 4 1 2 4 2 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 95 0 3 3 24 3 78 27 27 1 0 27 39 27 38 32 30 20 17 13 11 9 7 0 26 1 26 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uni0637;
unicode = 1591;
},
{
glyphname = uni0638;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(649,325,qs),
(715,272,o),
(715,177,qs),
(715,101,o),
(674,53,qs),
(628,0,o),
(553,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(182,49,l),
(182,504,ls),
(182,556,o),
(223,556,qs),
(228,556,ls),
(233,556,o),
(233,550,qs),
(233,190,l),
(277,265,o),
(341,311,qs),
(421,368,o),
(518,368,qs),
(596,368,o)
);
},
{
closed = 1;
nodes = (
(458,468,o),
(458,484,qs),
(458,500,o),
(480,522,o),
(495,522,qs),
(511,522,o),
(532,500,o),
(532,484,qs),
(532,468,o),
(511,446,o),
(495,446,qs),
(480,446,o)
);
},
{
closed = 1;
nodes = (
(596,49,o),
(628,82,qs),
(663,119,o),
(663,179,qs),
(662,245,o),
(622,283,qs),
(582,322,o),
(516,322,qs),
(419,322,o),
(343,250,qs),
(262,174,o),
(233,49,q),
(549,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
5 1 5 1 4 1 2 6 2 76 0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 95 0 3 3 24 3 78 39 39 28 27 1 0 39 51 39 50 44 42 34 32 27 38 28 38 20 17 13 11 9 7 0 26 1 26 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 776;
}
);
note = uni0638;
unicode = 1592;
},
{
glyphname = uni0639;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o),
(148,-49,qs),
(191,0,o),
(266,0,qs),
(449,0,ls),
(458,0,o),
(458,7,qs),
(458,11,ls),
(458,28,o),
(431,49,o),
(410,49,qs),
(276,49,ls),
(219,49,o),
(184,88,qs),
(149,128,o),
(149,182,qs),
(149,243,o),
(185,281,qs),
(223,322,o),
(285,321,qs),
(340,321,o),
(383,298,qs),
(390,294,o),
(393,294,qs),
(405,295,o),
(403,308,qs),
(400,329,o),
(367,347,qs),
(327,368,o),
(280,368,qs),
(209,368,o),
(160,327,qs),
(97,275,o),
(98,183,qs),
(98,138,o),
(140,55,o),
(175,32,q),
(121,11,o),
(60,-81,o),
(60,-141,qs),
(60,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
3 1 3 2 1 76 0 5 3 4 3 5 4 128 0 0 0 1 2 0 1 105 0 4 0 6 4 6 101 0 2 2 3 95 0 3 3 24 3 78 38 36 38 52 54 40 41 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = uni0639;
unicode = 1593;
},
{
glyphname = uni063A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(311,501,o),
(311,485,qs),
(311,469,o),
(289,447,o),
(274,447,qs),
(259,447,o),
(237,469,o),
(237,485,qs),
(237,501,o),
(258,523,o),
(274,523,qs),
(290,523,o)
);
},
{
closed = 1;
nodes = (
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o),
(148,-49,qs),
(191,0,o),
(266,0,qs),
(449,0,ls),
(458,0,o),
(458,7,qs),
(458,11,ls),
(458,28,o),
(431,49,o),
(410,49,qs),
(276,49,ls),
(219,49,o),
(184,88,qs),
(149,128,o),
(149,182,qs),
(149,243,o),
(185,281,qs),
(223,322,o),
(285,321,qs),
(340,321,o),
(383,298,qs),
(390,294,o),
(393,294,qs),
(405,295,o),
(403,308,qs),
(400,329,o),
(367,347,qs),
(327,368,o),
(280,368,qs),
(209,368,o),
(160,327,qs),
(97,275,o),
(98,183,qs),
(98,138,o),
(140,55,o),
(175,32,q),
(121,11,o),
(60,-81,o),
(60,-141,qs),
(60,-214,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
15 1 5 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
9 1 0 1 0 133 0 1 2 2 1 112 0 7 5 6 5 7 6 128 0 2 0 3 4 2 3 106 0 6 0 8 6 8 101 0 4 4 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
9 1 0 1 0 133 0 1 2 1 133 0 7 5 6 5 7 6 128 0 2 0 3 4 2 3 106 0 6 0 8 6 8 101 0 4 4 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 71 69 63 61 57 55 49 46 42 39 33 31 23 21 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = uni063A;
unicode = 1594;
},
{
glyphname = uni0640;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,0,l),
(-4,0,l),
(-4,49,l),
(112,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 24 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 104;
}
);
note = uni0640;
unicode = 1600;
},
{
glyphname = uni0641;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(597,469,o),
(597,485,qs),
(597,501,o),
(618,523,o),
(634,523,qs),
(650,523,o),
(671,501,o),
(671,485,qs),
(671,469,o),
(650,447,o),
(634,447,qs),
(619,447,o)
);
},
{
closed = 1;
nodes = (
(743,322,qs),
(794,269,o),
(794,183,qs),
(794,111,o),
(756,60,qs),
(711,2,o),
(636,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(521,49,l),
(467,95,o),
(467,183,qs),
(467,258,o),
(507,309,qs),
(553,368,o),
(631,368,qs),
(698,368,o)
);
},
{
closed = 1;
nodes = (
(709,85,qs),
(742,124,o),
(742,184,qs),
(742,237,o),
(717,274,qs),
(685,321,o),
(631,321,qs),
(583,321,o),
(553,285,qs),
(519,245,o),
(519,184,qs),
(519,132,o),
(545,95,qs),
(577,49,o),
(631,49,qs),
(678,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
0 4 7 3 7 4 3 128 0 1 8 1 0 2 1 0 105 9 1 2 0 7 4 2 7 105 10 6 2 3 3 5 96 0 5 5 24 5 78 44 43 13 12 1 0 52 50 43 58 44 58 36 33 28 26 20 18 12 42 13 42 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = uni0641;
unicode = 1601;
},
{
glyphname = uni0642;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(357,464,o),
(357,479,qs),
(357,493,o),
(376,513,o),
(391,513,qs),
(405,513,o),
(425,493,o),
(425,479,qs),
(425,464,o),
(405,443,o),
(391,443,qs),
(376,443,o)
);
},
{
closed = 1;
nodes = (
(454,464,o),
(454,479,qs),
(454,493,o),
(474,513,o),
(488,513,qs),
(503,513,o),
(523,493,o),
(523,479,qs),
(523,464,o),
(503,443,o),
(488,443,qs),
(474,443,o)
);
},
{
closed = 1;
nodes = (
(607,63,qs),
(601,-63,o),
(537,-134,qs),
(466,-214,o),
(335,-214,qs),
(222,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(234,-167,o),
(335,-167,qs),
(416,-167,o),
(473,-123,qs),
(538,-73,o),
(551,19,q),
(494,-11,o),
(437,-9,qs),
(369,-9,o),
(325,39,qs),
(277,91,o),
(277,178,qs),
(277,259,o),
(317,310,qs),
(363,368,o),
(439,368,qs),
(541,368,o),
(582,272,qs),
(613,201,o)
);
},
{
closed = 1;
nodes = (
(554,74,q),
(556,92,o),
(556,103,qs),
(557,205,o),
(533,256,qs),
(504,321,o),
(441,321,qs),
(394,321,o),
(364,287,qs),
(328,247,o),
(328,179,qs),
(328,122,o),
(355,84,qs),
(386,38,o),
(441,38,qs),
(509,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
36 1 5 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 10 9 10 7 9 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 7 4 10 105 13 1 9 0 5 6 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
67 66 13 12 1 0 75 73 66 81 67 81 61 59 51 50 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni0642;
unicode = 1602;
},
{
glyphname = uni0643;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(682,556,o),
(682,551,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,505,ls),
(631,556,o),
(671,556,qs),
(676,556,ls)
);
},
{
closed = 1;
nodes = (
(292,263,qs),
(292,288,o),
(324,296,qs),
(325,296,o),
(327,296,qs),
(328,296,o),
(329,296,q),
(314,318,o),
(314,346,qs),
(314,380,o),
(359,426,o),
(393,426,qs),
(418,426,o),
(456,400,o),
(457,382,q),
(460,373,o),
(453,373,qs),
(450,373,o),
(444,376,q),
(442,378,l),
(416,389,o),
(401,389,qs),
(380,389,o),
(355,365,o),
(355,345,qs),
(355,324,o),
(379,299,o),
(398,299,qs),
(452,299,ls),
(481,299,o),
(481,271,qs),
(481,268,ls),
(481,262,o),
(474,262,qs),
(377,262,ls),
(334,262,o),
(309,253,q),
(308,253,o),
(307,253,q),
(299,250,o),
(298,250,qs),
(292,250,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
28 1 9 0 57 1 8 7 65 1 5 2 3 76 0 8 7 2 7 8 2 128 11 1 4 5 1 5 4 1 128 0 9 0 7 8 9 7 105 6 1 2 0 5 4 2 5 103 10 1 0 0 23 77 0 1 1 3 96 0 3 3 24 3 78 32 31 1 0 61 59 56 54 51 49 45 42 39 36 31 72 32 72 24 21 16 14 8 5 0 30 1 30 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni0643;
unicode = 1603;
},
{
glyphname = uni0644;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 3 1 1 76 0 3 1 2 1 3 2 128 0 2 4 1 0 2 0 101 0 1 1 23 1 78 1 0 27 25 17 15 9 7 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uni0644;
unicode = 1604;
},
{
glyphname = uni0645;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(493,315,qs),
(540,256,o),
(540,153,qs),
(540,-9,o),
(392,-9,qs),
(289,-9,o),
(189,49,q),
(183,49,ls),
(100,42,o),
(100,-63,qs),
(100,-237,ls),
(100,-260,o),
(78,-288,o),
(59,-288,qs),
(55,-288,ls),
(49,-288,o),
(49,-282,qs),
(49,-62,ls),
(49,81,o),
(166,97,q),
(173,108,o),
(186,137,qs),
(192,149,o),
(195,154,qs),
(247,266,o),
(263,291,qs),
(314,368,o),
(381,368,qs),
(451,368,o)
);
},
{
closed = 1;
nodes = (
(486,153,qs),
(486,235,o),
(458,279,qs),
(431,321,o),
(383,321,qs),
(349,321,o),
(317,277,qs),
(290,241,o),
(247,144,qs),
(231,106,o),
(221,89,q),
(309,38,o),
(393,38,qs),
(486,39,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
31 1 3 4 11 1 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 1 2 1 134 5 1 0 0 4 3 0 4 105 6 1 3 3 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 2 1 134 5 1 0 0 4 3 0 4 105 6 1 3 2 2 3 89 6 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
30 29 1 0 38 36 29 42 30 42 24 22 15 13 0 28 1 28 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni0645;
unicode = 1605;
},
{
glyphname = uni0646;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,384,o),
(347,368,qs),
(347,352,o),
(325,330,o),
(309,330,qs),
(294,330,o),
(273,352,o),
(273,368,qs),
(273,384,o),
(294,406,o),
(309,406,qs),
(325,406,o)
);
},
{
closed = 1;
nodes = (
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,298,ls),
(487,321,o),
(510,349,o),
(528,349,qs),
(533,349,ls),
(538,349,o),
(538,344,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
17 1 1 3 1 76 0 3 0 1 0 3 1 128 0 5 1 4 1 5 4 128 6 1 0 0 1 5 0 1 105 0 4 2 2 4 89 0 4 4 2 97 7 1 2 4 2 81 13 12 1 0 39 37 29 27 21 19 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uni0646;
unicode = 1606;
},
{
glyphname = uni0647;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
32 13 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 40 27 40 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0647;
unicode = 1607;
},
{
glyphname = uni0648;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,113,qs),
(391,10,o),
(376,-91,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(333,-130,o),
(338,21,q),
(279,-11,o),
(221,-9,qs),
(152,-9,o),
(108,39,qs),
(60,91,o),
(60,178,qs),
(60,259,o),
(101,310,qs),
(146,368,o),
(223,368,qs),
(325,368,o),
(366,272,qs),
(389,218,o)
);
},
{
closed = 1;
nodes = (
(338,74,q),
(339,96,o),
(339,109,qs),
(339,208,o),
(317,256,qs),
(287,321,o),
(224,321,qs),
(178,321,o),
(147,287,qs),
(112,247,o),
(112,179,qs),
(112,122,o),
(138,84,qs),
(169,38,o),
(224,38,qs),
(292,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
50 1 5 6 12 1 1 5 22 1 2 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 0 2 0 4 2 4 101 7 1 5 5 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 1 2 1 3 2 128 0 0 0 6 5 0 6 105 7 1 5 0 1 3 5 1 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
37 36 45 43 36 51 37 51 39 34 36 38 33 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni0648;
unicode = 1608;
},
{
glyphname = uni0649;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-151,qs),
(60,-80,o),
(60,34,qs),
(60,92,o),
(103,196,o),
(139,224,q),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,210,q),
(133,171,o),
(111,98,o),
(109,45,q),
(111,-45,o),
(169,-104,qs),
(232,-167,o),
(333,-167,qs),
(408,-167,o),
(468,-131,qs),
(539,-88,o),
(552,-16,qs),
(556,6,o),
(537,18,qs),
(521,28,o),
(472,36,qs),
(433,44,o),
(418,47,qs),
(353,63,o),
(278,145,o),
(278,201,qs),
(278,274,o),
(325,320,qs),
(374,368,o),
(451,368,qs),
(513,368,o),
(547,343,qs),
(570,325,o),
(570,308,qs),
(570,294,o),
(560,294,qs),
(555,294,o),
(549,298,qs),
(511,321,o),
(457,321,qs),
(408,321,o),
(373,295,qs),
(329,262,o),
(329,201,qs),
(329,162,o),
(392,101,o),
(443,91,qs),
(532,73,o),
(554,64,qs),
(612,42,o),
(606,-7,qs),
(596,-92,o),
(529,-149,qs),
(451,-215,o),
(333,-215,qs),
(220,-215,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 53 52 43 41 26 24 20 18 16 14 0 61 1 61 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni0649;
unicode = 1609;
},
{
glyphname = uni064A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-151,qs),
(60,-80,o),
(60,34,qs),
(60,92,o),
(103,196,o),
(139,224,q),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,210,q),
(133,171,o),
(111,98,o),
(109,45,q),
(111,-45,o),
(169,-104,qs),
(232,-167,o),
(333,-167,qs),
(408,-167,o),
(468,-131,qs),
(539,-88,o),
(552,-16,qs),
(556,6,o),
(537,18,qs),
(521,28,o),
(472,36,qs),
(433,44,o),
(418,47,qs),
(353,63,o),
(278,145,o),
(278,201,qs),
(278,274,o),
(325,320,qs),
(374,368,o),
(451,368,qs),
(513,368,o),
(547,343,qs),
(570,325,o),
(570,308,qs),
(570,294,o),
(560,294,qs),
(555,294,o),
(549,298,qs),
(511,321,o),
(457,321,qs),
(408,321,o),
(373,295,qs),
(329,262,o),
(329,201,qs),
(329,162,o),
(392,101,o),
(443,91,qs),
(531,73,o),
(554,64,qs),
(612,42,o),
(606,-7,qs),
(596,-92,o),
(529,-149,qs),
(451,-215,o),
(333,-215,qs),
(220,-215,o)
);
},
{
closed = 1;
nodes = (
(317,-308,o),
(317,-323,qs),
(317,-338,o),
(297,-358,o),
(283,-358,qs),
(269,-358,o),
(249,-338,o),
(249,-323,qs),
(249,-308,o),
(269,-288,o),
(283,-288,qs),
(297,-288,o)
);
},
{
closed = 1;
nodes = (
(415,-308,o),
(415,-323,qs),
(415,-338,o),
(395,-358,o),
(381,-358,qs),
(366,-358,o),
(347,-338,o),
(347,-323,qs),
(347,-308,o),
(366,-288,o),
(381,-288,qs),
(395,-288,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 10 1 0 6 4 0 105 12 8 11 3 6 7 7 6 89 12 8 11 3 6 6 7 97 9 1 7 6 7 81 75 74 63 62 1 0 81 79 74 85 75 85 69 67 62 73 63 73 53 52 43 41 26 24 20 18 16 14 0 61 1 61 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni064A;
unicode = 1610;
},
{
glyphname = uni064B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,742,o),
(162,717,qs),
(162,714,ls),
(162,708,o),
(155,708,qs),
(71,708,ls),
(40,708,o),
(17,701,q),
(16,700,o),
(14,699,qs),
(7,697,l),
(1,697,o),
(1,709,qs),
(1,734,o),
(30,739,qs),
(50,742,o),
(80,742,qs),
(135,742,ls)
);
},
{
closed = 1;
nodes = (
(162,661,o),
(162,635,qs),
(162,632,ls),
(162,627,o),
(155,627,qs),
(71,627,ls),
(40,627,o),
(17,619,q),
(16,619,o),
(14,618,qs),
(7,616,l),
(1,616,o),
(1,628,qs),
(1,652,o),
(30,657,qs),
(50,661,o),
(80,661,qs),
(135,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 89 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 31 28 18 35 19 34 13 10 0 17 1 16 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064B;
unicode = 1611;
},
{
glyphname = uni064C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(224,601,o),
(224,576,qs),
(222,548,o),
(187,519,q),
(200,501,o),
(183,486,q),
(178,483,o),
(173,487,qs),
(161,498,l),
(140,482,ls),
(126,472,o),
(112,472,qs),
(98,472,o),
(74,492,qs),
(60,506,o),
(53,506,qs),
(44,506,o),
(31,482,q),
(28,473,o),
(20,481,qs),
(8,495,o),
(17,519,qs),
(27,540,o),
(51,540,qs),
(71,540,o),
(96,517,qs),
(108,507,o),
(114,507,qs),
(121,507,o),
(127,513,qs),
(136,520,l),
(106,546,o),
(106,576,qs),
(105,601,o),
(139,634,o),
(165,634,qs),
(191,634,o)
);
},
{
closed = 1;
nodes = (
(177,604,o),
(166,604,qs),
(138,604,o),
(139,576,qs),
(141,559,o),
(163,539,q),
(190,560,o),
(190,576,qs),
(191,587,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 70 values pushed */
41 37 34 3 2 5 39 32 5 3 1 2 27 1 4 3 3 76 6 1 0 0 5 2 0 5 105 0 1 3 4 1 89 0 2 0 3 4 2 3 105 0 1 1 4 97 0 4 1 4 81 1 0 44 42 25 23 21 19 13 11 8 7 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064C;
unicode = 1612;
},
{
glyphname = uni064D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-77,o),
(163,-102,qs),
(163,-105,ls),
(163,-111,o),
(156,-111,qs),
(72,-111,ls),
(41,-111,o),
(18,-118,q),
(17,-119,o),
(15,-119,q),
(8,-122,l),
(2,-122,o),
(2,-109,qs),
(2,-85,o),
(31,-80,qs),
(51,-77,o),
(81,-77,qs),
(136,-77,ls)
);
},
{
closed = 1;
nodes = (
(163,-158,o),
(163,-184,qs),
(163,-187,ls),
(163,-192,o),
(156,-192,qs),
(72,-192,ls),
(41,-192,o),
(18,-200,q),
(17,-200,o),
(15,-201,qs),
(8,-203,l),
(2,-203,o),
(2,-191,qs),
(2,-167,o),
(31,-162,qs),
(51,-158,o),
(81,-158,qs),
(136,-158,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
4 1 0 0 1 2 0 1 103 5 1 2 3 3 2 89 5 1 2 2 3 95 0 3 2 3 79 19 18 1 0 31 28 18 35 19 34 13 10 0 17 1 16 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064D;
unicode = 1613;
},
{
glyphname = uni064E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,661,o),
(162,635,qs),
(162,632,ls),
(162,627,o),
(155,627,qs),
(71,627,ls),
(40,627,o),
(17,619,q),
(16,619,o),
(14,618,qs),
(7,616,l),
(1,616,o),
(1,628,qs),
(1,652,o),
(30,657,qs),
(50,661,o),
(80,661,qs),
(135,661,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 17 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064E;
unicode = 1614;
},
{
glyphname = uni064F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,624,o),
(160,599,qs),
(160,573,o),
(124,542,q),
(136,523,o),
(120,509,qs),
(115,505,o),
(110,511,q),
(95,525,l),
(47,491,o),
(33,484,qs),
(22,479,o),
(15,479,qs),
(4,479,o),
(-6,489,qs),
(-8,491,ls),
(-13,496,o),
(-7,499,qs),
(40,525,o),
(69,547,q),
(43,572,o),
(42,600,qs),
(42,625,o),
(76,658,o),
(102,658,qs),
(128,657,o)
);
},
{
closed = 1;
nodes = (
(113,628,o),
(103,628,qs),
(74,628,o),
(76,599,qs),
(77,582,o),
(99,563,q),
(127,583,o),
(127,599,qs),
(128,611,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
28 26 21 16 5 5 1 2 1 76 0 1 2 1 134 3 1 0 2 2 0 89 3 1 0 0 2 97 0 2 0 2 81 1 0 33 31 13 11 0 25 1 25 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni064F;
unicode = 1615;
},
{
glyphname = uni0650;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,-77,o),
(163,-102,qs),
(163,-105,ls),
(163,-111,o),
(156,-111,qs),
(72,-111,ls),
(41,-111,o),
(18,-118,q),
(17,-119,o),
(15,-119,q),
(8,-122,l),
(2,-122,o),
(2,-109,qs),
(2,-85,o),
(31,-80,qs),
(51,-77,o),
(81,-77,qs),
(136,-77,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 95 0 1 0 1 79 1 0 13 10 0 17 1 16 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0650;
unicode = 1616;
},
{
glyphname = uni0651;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,604,o),
(238,599,qs),
(238,545,ls),
(238,511,o),
(204,472,o),
(173,471,qs),
(143,470,o),
(126,491,q),
(107,470,o),
(81,471,qs),
(15,473,o),
(15,545,qs),
(15,563,ls),
(15,582,o),
(21,592,qs),
(29,604,o),
(44,604,qs),
(47,604,ls),
(52,604,o),
(52,599,qs),
(52,539,ls),
(52,505,o),
(80,505,qs),
(108,505,o),
(108,539,qs),
(108,563,ls),
(108,582,o),
(115,593,qs),
(122,604,o),
(137,604,qs),
(141,604,ls),
(145,604,o),
(145,599,qs),
(145,539,ls),
(145,505,o),
(173,505,qs),
(201,505,o),
(201,539,qs),
(201,563,ls),
(201,582,o),
(208,593,qs),
(216,604,o),
(231,604,qs),
(233,604,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
41 23 10 3 1 0 35 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 38 36 34 32 27 25 21 19 14 12 8 6 0 43 1 43 8 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0651;
unicode = 1617;
},
{
glyphname = uni0652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-3,506,o),
(-3,532,qs),
(-3,559,o),
(30,592,o),
(56,592,qs),
(83,592,o),
(116,559,o),
(116,532,qs),
(116,506,o),
(83,472,o),
(56,472,qs),
(30,472,o)
);
},
{
closed = 1;
nodes = (
(84,519,o),
(84,532,qs),
(84,546,o),
(68,564,o),
(56,564,qs),
(30,564,o),
(30,532,qs),
(30,501,o),
(56,501,qs),
(68,501,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 46 values pushed */
0 1 0 3 2 1 3 105 5 1 2 0 0 2 89 5 1 2 2 0 97 4 1 0 2 0 81 13 12 1 0 17 15 12 21 13 21 7 5 0 11 1 11 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0652;
unicode = 1618;
},
{
glyphname = uni0653;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,661,qs),
(207,675,o),
(201,685,qs),
(197,692,o),
(192,686,q),
(191,684,o),
(188,680,qs),
(185,675,o),
(183,672,qs),
(174,659,o),
(163,659,qs),
(155,659,o),
(129,669,qs),
(81,688,o),
(65,688,qs),
(33,688,o),
(28,653,qs),
(26,639,o),
(32,629,qs),
(36,622,o),
(41,628,q),
(42,630,o),
(45,634,qs),
(48,639,o),
(50,642,qs),
(59,654,o),
(70,654,qs),
(78,654,o),
(104,644,qs),
(152,626,o),
(168,626,qs),
(200,626,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 40 values pushed */
0 3 1 0 3 89 0 2 0 1 0 2 1 105 0 3 3 0 97 4 1 0 3 0 81 1 0 21 19 17 15 5 3 0 31 1 31 5 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0653;
unicode = 1619;
},
{
glyphname = uni0654;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,658,o),
(203,632,qs),
(203,629,ls),
(203,624,o),
(196,624,qs),
(114,624,ls),
(81,624,o),
(58,616,q),
(57,616,o),
(55,615,qs),
(48,613,l),
(42,613,o),
(42,625,qs),
(42,649,o),
(71,654,q),
(56,674,o),
(56,700,qs),
(56,732,o),
(96,773,o),
(126,773,qs),
(148,773,o),
(180,749,o),
(181,732,q),
(183,724,o),
(177,724,qs),
(174,724,o),
(169,728,qs),
(167,729,o),
(166,729,q),
(148,739,o),
(134,739,qs),
(116,739,o),
(94,717,o),
(94,699,qs),
(94,681,o),
(115,658,o),
(131,658,qs),
(176,658,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 61 values pushed */
14 1 2 1 22 1 4 0 2 76 0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 1 0 33 30 18 16 13 11 7 5 0 37 1 36 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0654;
unicode = 1620;
},
{
glyphname = uni0655;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,-192,o),
(175,-218,qs),
(175,-221,ls),
(175,-226,o),
(168,-226,qs),
(86,-226,ls),
(53,-226,o),
(30,-234,q),
(29,-234,o),
(27,-235,qs),
(20,-237,l),
(14,-237,o),
(14,-225,qs),
(14,-201,o),
(43,-196,q),
(28,-176,o),
(28,-150,qs),
(28,-118,o),
(68,-77,o),
(98,-77,qs),
(120,-77,o),
(152,-101,o),
(153,-118,q),
(155,-126,o),
(149,-126,qs),
(146,-126,o),
(141,-122,qs),
(139,-121,o),
(138,-121,q),
(120,-111,o),
(106,-111,qs),
(88,-111,o),
(66,-133,o),
(66,-151,qs),
(66,-169,o),
(87,-192,o),
(103,-192,qs),
(148,-192,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 61 values pushed */
14 1 2 1 22 1 4 0 2 76 0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 5 1 0 4 4 0 89 5 1 0 0 4 95 0 4 0 4 79 1 0 33 30 18 16 13 11 7 5 0 37 1 36 6 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0655;
unicode = 1621;
},
{
glyphname = uni065A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(248,403,qs),
(205,301,ls),
(202,294,o),
(196,294,qs),
(176,294,ls),
(169,294,o),
(167,301,q),
(124,403,l),
(121,408,o),
(129,408,qs),
(152,408,o),
(163,383,qs),
(186,331,l),
(209,383,ls),
(219,408,o),
(243,408,qs),
(250,408,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 30 values pushed */
3 1 2 0 1 76 1 3 2 0 2 0 133 0 2 2 118 1 0 12 10 7 5 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 333;
}
);
note = uni065A;
unicode = 1626;
},
{
glyphname = zero.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,81,qs),
(394,138,o),
(394,277,qs),
(394,401,o),
(359,460,qs),
(324,519,o),
(250,519,qs),
(185,519,o),
(150,475,qs),
(105,417,o),
(105,277,qs),
(105,154,o),
(141,95,qs),
(176,37,o),
(250,37,qs),
(314,37,o)
);
},
{
closed = 1;
nodes = (
(55,277,qs),
(55,410,o),
(99,483,qs),
(149,567,o),
(250,567,qs),
(337,567,o),
(387,503,qs),
(444,428,o),
(444,277,qs),
(444,-10,o),
(250,-10,qs),
(55,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.ar;
unicode = 1632;
},
{
glyphname = one.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,471,ls),
(43,469,o),
(43,474,qs),
(43,513,ls),
(43,522,o),
(50,524,qs),
(113,547,ls),
(138,556,o),
(159,556,qs),
(167,556,ls),
(203,556,o),
(203,508,qs),
(203,47,l),
(284,47,ls),
(314,47,o),
(314,18,qs),
(314,7,ls),
(314,0,o),
(305,0,qs),
(46,0,ls),
(41,0,o),
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(152,47,l),
(152,509,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
26 23 2 0 3 4 3 2 1 0 2 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 37 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one.ar;
unicode = 1633;
},
{
glyphname = two.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,47,o),
(381,18,qs),
(381,7,ls),
(381,0,o),
(374,0,qs),
(47,0,ls),
(42,0,o),
(42,6,qs),
(42,90,o),
(92,151,qs),
(123,188,o),
(200,240,qs),
(277,293,o),
(329,361,o),
(329,409,qs),
(329,458,o),
(301,487,qs),
(269,519,o),
(208,519,qs),
(142,519,o),
(76,472,qs),
(68,466,o),
(63,466,qs),
(59,466,o),
(56,474,qs),
(51,489,ls),
(44,513,o),
(83,533,qs),
(145,567,o),
(211,567,qs),
(286,567,o),
(330,530,qs),
(379,489,o),
(379,409,qs),
(379,342,o),
(331,288,qs),
(302,256,o),
(227,205,qs),
(152,154,o),
(98,89,o),
(95,47,q),
(351,47,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 44 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two.ar;
unicode = 1634;
},
{
glyphname = three.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,259,qs),
(388,219,o),
(388,151,qs),
(388,85,o),
(344,41,qs),
(292,-10,o),
(205,-10,qs),
(136,-10,o),
(29,60,o),
(29,106,qs),
(29,125,o),
(41,125,qs),
(48,125,o),
(55,115,qs),
(109,37,o),
(201,37,qs),
(258,37,o),
(295,65,qs),
(337,97,o),
(337,151,qs),
(337,209,o),
(296,240,qs),
(257,270,o),
(192,270,qs),
(140,270,ls),
(110,270,o),
(110,298,qs),
(110,308,ls),
(110,316,o),
(118,316,qs),
(206,316,ls),
(322,316,o),
(322,419,qs),
(322,519,o),
(199,519,qs),
(134,519,o),
(67,472,qs),
(58,466,o),
(54,466,qs),
(50,466,o),
(47,474,qs),
(42,489,ls),
(38,502,o),
(51,520,o),
(74,533,qs),
(132,567,o),
(199,567,qs),
(274,567,o),
(319,533,qs),
(372,494,o),
(372,423,qs),
(372,324,o),
(276,291,q),
(312,286,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 38 51 50 34 38 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three.ar;
unicode = 1635;
},
{
glyphname = four.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,139,o),
(19,145,qs),
(19,171,ls),
(19,187,o),
(29,202,qs),
(259,539,ls),
(270,556,o),
(286,556,qs),
(300,556,ls),
(332,556,o),
(332,518,qs),
(332,186,l),
(376,186,ls),
(406,186,o),
(406,157,qs),
(406,146,ls),
(406,139,o),
(398,139,qs),
(332,139,l),
(332,6,ls),
(332,0,o),
(327,0,qs),
(286,0,ls),
(281,0,o),
(281,6,qs),
(281,139,l),
(24,139,ls)
);
},
{
closed = 1;
nodes = (
(281,498,l),
(70,186,l),
(281,186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 2 3 24 1 1 2 6 1 2 0 1 3 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 26 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four.ar;
unicode = 1636;
},
{
glyphname = five.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,344,o),
(216,344,qs),
(292,344,o),
(339,303,qs),
(392,257,o),
(392,172,qs),
(392,97,o),
(346,47,qs),
(293,-10,o),
(205,-10,qs),
(133,-10,o),
(84,26,qs),
(34,63,o),
(34,106,qs),
(34,125,o),
(47,125,qs),
(53,125,o),
(60,115,qs),
(113,37,o),
(201,37,qs),
(260,37,o),
(298,69,qs),
(341,106,o),
(341,168,qs),
(341,298,o),
(214,298,qs),
(146,298,o),
(72,270,q),
(62,265,o),
(62,276,qs),
(62,549,ls),
(62,556,o),
(67,556,qs),
(329,556,ls),
(359,556,o),
(359,527,qs),
(359,516,ls),
(359,508,o),
(351,508,qs),
(112,508,l),
(112,329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 1 40 1 2 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five.ar;
unicode = 1637;
},
{
glyphname = six.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,348,qs),
(309,348,o),
(355,304,qs),
(409,254,o),
(409,174,qs),
(409,92,o),
(363,43,qs),
(314,-10,o),
(228,-10,qs),
(155,-10,o),
(106,33,qs),
(48,83,o),
(48,167,qs),
(48,207,o),
(73,279,o),
(109,340,qs),
(241,558,ls),
(247,567,o),
(253,567,qs),
(270,567,o),
(275,549,qs),
(282,528,o),
(264,497,qs),
(162,328,l),
(197,348,o)
);
},
{
closed = 1;
nodes = (
(320,70,qs),
(358,106,o),
(358,169,qs),
(358,223,o),
(328,258,qs),
(293,301,o),
(229,301,qs),
(175,301,o),
(139,269,qs),
(98,232,o),
(98,169,qs),
(98,114,o),
(128,79,qs),
(163,37,o),
(229,37,qs),
(285,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 20 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.ar;
unicode = 1638;
},
{
glyphname = seven.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,514,qs),
(31,549,ls),
(31,556,o),
(36,556,qs),
(352,556,ls),
(382,556,o),
(382,527,qs),
(382,518,ls),
(382,499,o),
(372,478,qs),
(155,11,ls),
(150,0,o),
(139,0,qs),
(100,0,ls),
(94,0,o),
(96,6,q),
(330,508,l),
(36,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
16 15 2 2 1 1 76 3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 18 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven.ar;
unicode = 1639;
},
{
glyphname = eight.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,71,qs),
(158,36,o),
(223,36,qs),
(278,36,o),
(313,63,qs),
(354,95,o),
(354,153,qs),
(354,204,o),
(318,238,qs),
(280,274,o),
(223,274,qs),
(173,274,o),
(137,246,qs),
(92,212,o),
(92,153,qs),
(92,102,o)
);
},
{
closed = 1;
nodes = (
(136,351,qs),
(169,319,o),
(223,319,qs),
(272,319,o),
(337,375,o),
(337,418,qs),
(337,463,o),
(307,490,qs),
(275,519,o),
(223,519,qs),
(171,519,o),
(108,464,o),
(108,418,qs),
(108,379,o)
);
},
{
closed = 1;
nodes = (
(60,424,qs),
(60,484,o),
(103,524,qs),
(149,567,o),
(223,567,qs),
(286,567,o),
(331,533,qs),
(385,493,o),
(385,424,qs),
(385,334,o),
(294,297,q),
(346,279,o),
(404,203,o),
(404,153,qs),
(404,85,o),
(361,40,qs),
(310,-11,o),
(223,-11,qs),
(146,-11,o),
(97,29,qs),
(41,74,o),
(41,153,qs),
(41,203,o),
(99,279,o),
(151,297,q),
(60,334,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 41 37 37 38 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight.ar;
unicode = 1640;
},
{
glyphname = nine.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,209,qs),
(144,209,o),
(97,251,qs),
(41,300,o),
(41,383,qs),
(41,463,o),
(88,513,qs),
(139,567,o),
(225,567,qs),
(297,567,o),
(345,524,qs),
(402,474,o),
(402,389,qs),
(402,349,o),
(376,277,o),
(340,217,qs),
(209,-1,l),
(205,-10,o),
(196,-10,qs),
(177,-10,o),
(170,32,o),
(185,58,qs),
(289,232,l),
(258,209,o)
);
},
{
closed = 1;
nodes = (
(310,288,qs),
(350,325,o),
(350,388,qs),
(350,443,o),
(322,478,qs),
(288,519,o),
(224,519,qs),
(167,519,o),
(131,487,qs),
(92,450,o),
(92,388,qs),
(92,330,o),
(121,296,qs),
(156,256,o),
(220,256,qs),
(274,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 40 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.ar;
unicode = 1641;
},
{
glyphname = uni066A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,92,o),
(637,162,qs),
(637,232,o),
(598,297,o),
(555,297,qs),
(471,297,o),
(471,162,qs),
(471,93,o),
(511,29,o),
(555,29,qs),
(598,29,o)
);
},
{
closed = 1;
nodes = (
(249,324,o),
(249,394,qs),
(249,464,o),
(209,528,o),
(166,528,qs),
(123,528,o),
(83,464,o),
(83,394,qs),
(83,324,o),
(123,261,o),
(166,261,qs),
(210,261,o)
);
},
{
closed = 1;
nodes = (
(185,6,qs),
(484,549,l),
(487,556,o),
(491,556,qs),
(497,556,ls),
(515,556,o),
(522,527,o),
(509,503,qs),
(237,6,ls),
(234,0,o),
(229,0,qs),
(187,0,ls),
(182,0,o)
);
},
{
closed = 1;
nodes = (
(465,32,qs),
(427,77,o),
(427,162,qs),
(427,236,o),
(456,282,qs),
(491,335,o),
(555,335,qs),
(610,335,o),
(644,294,qs),
(682,247,o),
(682,162,qs),
(682,88,o),
(653,43,qs),
(619,-9,o),
(555,-9,qs),
(498,-9,o)
);
},
{
closed = 1;
nodes = (
(76,263,qs),
(38,309,o),
(38,394,qs),
(38,468,o),
(68,513,qs),
(103,567,o),
(166,567,qs),
(221,567,o),
(255,525,qs),
(293,479,o),
(293,394,qs),
(293,320,o),
(264,275,qs),
(231,223,o),
(166,223,qs),
(110,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 0 3 3 9 97 0 9 9 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 0 5 5 23 77 12 1 4 4 24 77 10 1 0 0 6 97 13 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 9 0 3 7 9 3 105 0 7 0 1 2 7 1 106 11 1 2 14 1 8 0 2 8 105 10 1 0 13 1 6 0 6 101 0 5 5 23 77 12 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 43 values pushed */
53 52 37 36 24 23 12 11 1 0 61 59 52 67 53 67 45 43 36 51 37 51 32 29 23 35 24 35 18 16 11 22 12 22 6 4 0 10 1 10 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = uni066A;
unicode = 1642;
},
{
glyphname = uni066B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,43,o),
(134,24,qs),
(134,-7,o),
(97,-75,o),
(65,-101,q),
(64,-103,o),
(60,-99,qs),
(45,-85,o),
(63,-61,qs),
(82,-33,o),
(87,-16,q),
(71,-13,o),
(52,11,o),
(52,27,qs),
(52,44,o),
(76,69,o),
(93,69,qs),
(110,69,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 17 1 17 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 172;
}
);
note = uni066B;
unicode = 1643;
},
{
glyphname = uni066C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,127,o),
(134,108,qs),
(134,77,o),
(97,9,o),
(65,-17,q),
(64,-19,o),
(60,-16,q),
(45,-1,o),
(63,23,qs),
(82,51,o),
(87,68,q),
(71,71,o),
(52,95,o),
(52,111,qs),
(52,128,o),
(76,153,o),
(93,153,qs),
(110,153,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 17 1 17 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 172;
}
);
note = uni066C;
unicode = 1644;
},
{
glyphname = uni066D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,416,o),
(36,423,qs),
(51,466,ls),
(52,470,o),
(57,469,q),
(147,432,l),
(140,533,ls),
(140,538,o),
(145,538,qs),
(198,538,ls),
(204,538,o),
(204,533,qs),
(197,432,l),
(286,469,l),
(291,470,o),
(293,466,q),
(307,423,ls),
(309,416,o),
(304,414,qs),
(210,388,l),
(271,310,ls),
(274,306,o),
(269,303,qs),
(231,280,ls),
(226,277,o),
(224,281,qs),
(170,368,l),
(120,281,ls),
(118,277,o),
(114,280,q),
(113,280,l),
(75,303,l),
(70,305,o),
(73,310,q),
(134,388,l),
(40,414,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
30 29 28 23 22 21 15 11 8 9 0 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
0 0 0 23 0 78 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 4 values pushed */
0 0 0 118 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
26 25 1 7 22 
CALL[ ]	/* CallFunction */";
};
width = 341;
}
);
note = uni066D;
unicode = 1645;
},
{
glyphname = uni066E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 3 1 1 76 0 1 3 1 133 0 3 2 3 133 0 2 2 0 96 4 1 0 0 24 0 78 1 0 24 22 16 13 9 7 0 30 1 29 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni066E;
unicode = 1646;
},
{
glyphname = uni0670;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,469,qs),
(13,469,o),
(13,476,qs),
(13,478,o),
(13,480,qs),
(13,497,o),
(12,513,qs),
(10,532,o),
(6,546,qs),
(5,549,o),
(4,554,qs),
(2,564,o),
(0,568,q),
(-3,580,o),
(-3,586,qs),
(-3,591,o),
(-1,596,qs),
(2,605,o),
(14,609,qs),
(18,611,o),
(21,609,qs),
(28,603,o),
(31,586,qs),
(37,559,o),
(37,538,qs),
(37,495,o),
(23,475,qs),
(19,469,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 12 values pushed */
20 1 0 73 0 0 0 118 38 1 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0670;
unicode = 1648;
},
{
glyphname = uni0671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,689,qs),
(59,687,l),
(61,686,o),
(64,690,qs),
(65,691,ls),
(87,723,o),
(121,746,o),
(143,746,qs),
(168,746,o),
(200,716,o),
(200,693,qs),
(200,666,o),
(163,631,o),
(135,631,qs),
(119,631,o),
(83,645,q),
(82,646,o),
(80,646,q),
(52,657,o),
(42,657,qs),
(31,657,o),
(22,645,qs),
(20,642,o),
(17,638,qs),
(14,633,o),
(13,631,q),
(8,625,o),
(4,632,qs),
(-2,642,o),
(0,656,qs),
(5,691,o),
(37,691,qs),
(42,691,o)
);
},
{
closed = 1;
nodes = (
(163,692,qs),
(163,713,o),
(142,713,qs),
(123,713,o),
(96,674,q),
(119,664,o),
(135,664,qs),
(163,664,o)
);
},
{
closed = 1;
nodes = (
(71,0,o),
(71,6,qs),
(71,504,ls),
(71,527,o),
(94,556,o),
(112,556,qs),
(117,556,ls),
(122,556,o),
(122,550,qs),
(122,51,ls),
(122,28,o),
(100,0,o),
(82,0,qs),
(77,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
35 1 4 0 52 45 2 6 7 2 76 0 3 0 5 0 3 5 105 8 1 0 0 1 2 0 1 105 9 1 4 0 2 7 4 2 105 0 7 7 23 77 10 1 6 6 24 6 78 42 41 34 33 1 0 49 47 41 54 42 54 38 36 33 40 34 40 25 23 19 17 13 11 0 32 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0671;
unicode = 1649;
},
{
glyphname = uni0679;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,381,o),
(300,384,qs),
(300,387,ls),
(300,412,o),
(333,412,qs),
(344,412,l),
(344,551,ls),
(344,591,o),
(372,591,qs),
(374,591,ls),
(377,591,o),
(377,587,qs),
(377,530,l),
(423,530,ls),
(459,530,o),
(501,490,o),
(501,456,qs),
(501,421,o),
(459,381,o),
(423,381,qs),
(303,381,ls)
);
},
{
closed = 1;
nodes = (
(377,412,l),
(427,412,ls),
(444,412,o),
(468,437,o),
(468,456,qs),
(468,474,o),
(444,499,o),
(427,499,qs),
(377,499,l)
);
},
{
closed = 1;
nodes = (
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
8 1 1 2 17 1 0 3 58 1 8 6 3 76 0 2 1 2 133 12 1 6 0 8 0 6 8 128 0 8 7 0 8 7 126 0 1 11 1 4 3 1 4 105 5 1 3 10 1 0 6 3 0 104 0 7 7 9 96 0 9 9 24 9 78 31 30 22 21 1 0 54 51 46 44 38 35 30 60 31 60 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni0679;
unicode = 1657;
},
{
glyphname = uni067E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,105,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,155,ls),
(682,86,o),
(647,46,qs),
(608,0,o),
(537,0,qs),
(245,0,ls)
);
},
{
closed = 1;
nodes = (
(360,-97,o),
(360,-112,qs),
(360,-127,o),
(340,-147,o),
(326,-147,qs),
(311,-147,o),
(292,-127,o),
(292,-112,qs),
(292,-97,o),
(311,-77,o),
(326,-77,qs),
(340,-77,o)
);
},
{
closed = 1;
nodes = (
(458,-97,o),
(458,-112,qs),
(458,-127,o),
(438,-147,o),
(423,-147,qs),
(409,-147,o),
(389,-127,o),
(389,-112,qs),
(389,-97,o),
(409,-77,o),
(423,-77,qs),
(438,-77,o)
);
},
{
closed = 1;
nodes = (
(409,-178,o),
(409,-193,qs),
(409,-208,o),
(389,-228,o),
(374,-228,qs),
(360,-228,o),
(341,-208,o),
(341,-193,qs),
(341,-178,o),
(360,-158,o),
(374,-158,qs),
(389,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
5 1 3 1 1 76 0 1 3 1 133 0 3 2 3 133 12 6 11 3 4 7 1 5 8 4 5 105 13 1 8 0 9 8 9 101 0 2 2 0 96 10 1 0 0 24 0 78 56 55 44 43 32 31 1 0 62 60 55 66 56 66 50 48 43 54 44 54 38 36 31 42 32 42 24 22 16 13 9 7 0 30 1 29 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = uni067E;
unicode = 1662;
},
{
glyphname = uni0686;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(512,0,ls),
(560,0,o),
(560,44,qs),
(560,49,o),
(555,49,qs),
(529,50,o),
(516,64,qs),
(484,99,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,120,o),
(451,61,o),
(466,49,q),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
},
{
closed = 1;
nodes = (
(283,-96,o),
(283,-111,qs),
(283,-126,o),
(263,-146,o),
(249,-146,qs),
(235,-146,o),
(215,-126,o),
(215,-111,qs),
(215,-96,o),
(235,-76,o),
(249,-76,qs),
(263,-76,o)
);
},
{
closed = 1;
nodes = (
(381,-96,o),
(381,-111,qs),
(381,-126,o),
(361,-146,o),
(347,-146,qs),
(332,-146,o),
(313,-126,o),
(313,-111,qs),
(313,-96,o),
(332,-76,o),
(347,-76,qs),
(361,-76,o)
);
},
{
closed = 1;
nodes = (
(332,-177,o),
(332,-192,qs),
(332,-207,o),
(312,-227,o),
(298,-227,qs),
(284,-227,o),
(264,-207,o),
(264,-192,qs),
(264,-177,o),
(284,-157,o),
(298,-157,qs),
(312,-157,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
42 1 5 4 56 1 8 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 114 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 0 14 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 10 128 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 0 14 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
0 5 4 3 4 5 3 128 16 11 15 3 9 8 10 8 9 10 128 12 1 10 13 8 10 13 126 17 1 13 14 8 13 14 126 0 14 1 8 14 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
88 87 76 75 64 63 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 51 20 38 38 36 38 38 36 35 18 7 31 
CALL[ ]	/* CallFunction */";
};
width = 610;
}
);
note = uni0686;
unicode = 1670;
},
{
glyphname = uni0688;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,451,o),
(109,454,qs),
(109,457,ls),
(109,481,o),
(142,481,qs),
(153,481,l),
(153,621,ls),
(153,661,o),
(181,661,qs),
(183,661,ls),
(186,661,o),
(186,657,qs),
(186,599,l),
(232,599,ls),
(268,599,o),
(310,560,o),
(310,525,qs),
(310,491,o),
(268,451,o),
(232,451,qs),
(112,451,ls)
);
},
{
closed = 1;
nodes = (
(186,481,l),
(236,481,ls),
(253,481,o),
(277,507,o),
(277,525,qs),
(277,544,o),
(253,569,o),
(236,569,qs),
(186,569,l)
);
},
{
closed = 1;
nodes = (
(310,320,qs),
(353,267,o),
(353,174,qs),
(353,98,o),
(315,52,qs),
(272,0,o),
(197,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
8 1 1 2 17 1 0 3 2 76 0 2 1 2 133 0 7 8 9 8 7 9 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 6 3 0 104 13 1 6 0 8 7 6 8 105 0 9 9 10 95 0 10 10 24 10 78 31 30 22 21 1 0 57 54 50 47 42 40 36 35 30 63 31 63 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = uni0688;
unicode = 1672;
},
{
glyphname = uni0691;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(207,581,o),
(248,541,o),
(248,507,qs),
(248,472,o),
(207,432,o),
(171,432,qs),
(51,432,ls),
(48,432,o),
(48,436,qs),
(48,438,ls),
(48,463,o),
(81,463,qs),
(92,463,l),
(92,602,ls),
(92,642,o),
(119,642,qs),
(122,642,ls),
(125,642,o),
(125,638,qs),
(125,581,l),
(171,581,ls)
);
},
{
closed = 1;
nodes = (
(192,463,o),
(216,488,o),
(216,507,qs),
(216,525,o),
(192,551,o),
(174,551,qs),
(125,551,l),
(125,463,l),
(174,463,ls)
);
},
{
closed = 1;
nodes = (
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
1 1 3 0 10 1 2 1 48 1 8 6 3 76 0 0 3 0 133 12 1 6 2 8 2 6 8 128 0 8 7 2 8 7 126 10 1 3 0 4 1 3 4 105 11 5 2 1 0 2 6 1 2 104 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 31 30 21 21 0 0 46 44 40 38 36 34 30 50 31 50 21 29 21 28 24 22 0 20 0 19 36 34 35 13 7 25 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0691;
unicode = 1681;
},
{
glyphname = rehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,541,qs),
(172,439,ls),
(169,433,o),
(163,433,qs),
(143,433,ls),
(136,433,o),
(134,439,qs),
(91,541,ls),
(88,547,o),
(96,547,qs),
(119,547,o),
(130,522,qs),
(153,469,l),
(176,522,ls),
(186,547,o),
(209,547,qs),
(217,547,o)
);
},
{
closed = 1;
nodes = (
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 2 0 35 1 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 0 3 0 2 3 128 8 1 3 5 0 3 5 126 0 5 4 0 5 4 126 0 4 0 6 4 6 101 1 7 2 0 0 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
1 7 2 0 2 0 133 0 2 3 2 133 8 1 3 5 3 133 0 5 4 5 133 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
18 17 1 0 33 31 27 25 23 21 17 37 18 37 12 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = rehvabovear;
unicode = 1682;
},
{
glyphname = uni0694;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o)
);
},
{
closed = 1;
nodes = (
(82,-309,o),
(82,-325,qs),
(82,-341,o),
(61,-363,o),
(46,-363,qs),
(30,-363,o),
(9,-341,o),
(9,-325,qs),
(9,-309,o),
(30,-287,o),
(46,-287,qs),
(61,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
13 1 1 3 1 76 0 3 1 3 133 0 1 0 1 133 6 1 0 0 2 4 0 2 105 7 1 4 5 5 4 89 7 1 4 4 5 97 0 5 4 5 81 22 21 1 0 28 26 21 32 22 32 17 15 11 9 5 3 0 20 1 20 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0694;
unicode = 1684;
},
{
glyphname = uni0695;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls)
);
},
{
closed = 1;
nodes = (
(104,-298,qs),
(62,-399,ls),
(59,-406,o),
(53,-406,qs),
(33,-406,ls),
(26,-406,o),
(24,-399,q),
(-19,-298,ls),
(-22,-292,o),
(-14,-292,qs),
(9,-292,o),
(20,-317,qs),
(43,-370,l),
(66,-317,ls),
(76,-292,o),
(99,-292,qs),
(107,-292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
18 1 2 0 24 1 6 4 2 76 7 1 0 2 0 133 0 2 1 2 133 5 8 2 4 3 6 3 4 6 128 0 6 6 132 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 22 21 1 0 33 31 28 26 21 37 22 37 16 14 10 8 6 4 0 20 1 20 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0695;
unicode = 1685;
},
{
glyphname = uni0698;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,522,o),
(120,537,qs),
(120,552,o),
(140,572,o),
(154,572,qs),
(168,572,o),
(188,552,o),
(188,537,qs),
(188,522,o),
(168,502,o),
(154,502,qs),
(140,502,o)
);
},
{
closed = 1;
nodes = (
(71,441,o),
(71,456,qs),
(71,471,o),
(91,491,o),
(105,491,qs),
(120,491,o),
(139,471,o),
(139,456,qs),
(139,441,o),
(120,421,o),
(105,421,qs),
(91,421,o)
);
},
{
closed = 1;
nodes = (
(169,441,o),
(169,456,qs),
(169,471,o),
(189,491,o),
(203,491,qs),
(217,491,o),
(237,471,o),
(237,456,qs),
(237,441,o),
(217,421,o),
(203,421,qs),
(189,421,o)
);
},
{
closed = 1;
nodes = (
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
49 1 7 9 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 0 8 6 8 101 10 1 0 0 1 97 0 1 1 23 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 9 2 7 2 9 7 128 0 7 6 2 7 6 126 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 9 3 2 105 13 1 6 8 8 6 89 13 1 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 25 24 13 12 1 0 53 51 47 45 41 39 36 56 37 56 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 247;
}
);
note = uni0698;
unicode = 1688;
},
{
glyphname = uni06A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(743,322,qs),
(794,269,o),
(794,183,qs),
(794,111,o),
(756,60,qs),
(711,2,o),
(636,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(521,49,l),
(467,95,o),
(467,183,qs),
(467,258,o),
(507,309,qs),
(553,368,o),
(631,368,qs),
(698,368,o)
);
},
{
closed = 1;
nodes = (
(709,85,qs),
(742,124,o),
(742,184,qs),
(742,237,o),
(717,274,qs),
(685,321,o),
(631,321,qs),
(583,321,o),
(553,285,qs),
(519,245,o),
(519,184,qs),
(519,132,o),
(545,95,qs),
(577,49,o),
(631,49,qs),
(678,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
0 2 5 1 5 2 1 128 6 1 0 0 5 2 0 5 105 7 4 2 1 1 3 96 0 3 3 24 3 78 32 31 1 0 40 38 31 46 32 46 24 21 16 14 8 6 0 30 1 30 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = uni06A1;
unicode = 1697;
},
{
glyphname = uni06A4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,546,o),
(596,561,qs),
(596,575,o),
(616,595,o),
(630,595,qs),
(645,595,o),
(664,575,o),
(664,561,qs),
(664,545,o),
(645,525,o),
(630,525,qs),
(616,525,o)
);
},
{
closed = 1;
nodes = (
(547,465,o),
(547,479,qs),
(547,494,o),
(567,514,o),
(581,514,qs),
(596,514,o),
(616,494,o),
(616,479,qs),
(616,464,o),
(596,444,o),
(581,444,qs),
(567,444,o)
);
},
{
closed = 1;
nodes = (
(665,514,o),
(679,514,qs),
(693,514,o),
(713,494,o),
(713,479,qs),
(713,464,o),
(693,444,o),
(679,444,qs),
(665,444,o),
(645,465,o),
(645,479,qs),
(645,494,o)
);
},
{
closed = 1;
nodes = (
(743,322,qs),
(794,269,o),
(794,183,qs),
(794,111,o),
(756,60,qs),
(711,2,o),
(636,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(521,49,l),
(467,95,o),
(467,183,qs),
(467,258,o),
(507,309,qs),
(553,368,o),
(631,368,qs),
(698,368,o)
);
},
{
closed = 1;
nodes = (
(709,85,qs),
(742,124,o),
(742,184,qs),
(742,237,o),
(717,274,qs),
(685,321,o),
(631,321,qs),
(583,321,o),
(553,285,qs),
(519,245,o),
(519,184,qs),
(519,132,o),
(545,95,qs),
(577,49,o),
(631,49,qs),
(678,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 93 values pushed */
0 8 11 7 11 8 7 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 14 1 6 0 11 8 6 11 105 15 10 2 7 7 9 96 0 9 9 24 9 78 68 67 37 36 13 12 1 0 76 74 67 82 68 82 60 57 52 50 44 42 36 66 37 66 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = uni06A4;
unicode = 1700;
},
{
glyphname = uni06A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(551,49,ls),
(594,49,o),
(622,75,qs),
(658,108,o),
(658,176,qs),
(658,237,o),
(629,270,qs),
(601,302,o),
(551,302,qs),
(350,302,ls),
(309,302,o),
(309,334,qs),
(309,349,ls),
(309,369,o),
(323,379,qs),
(563,554,ls),
(568,557,o),
(571,555,qs),
(585,544,o),
(580,512,o),
(563,499,qs),
(367,355,ls),
(364,353,o),
(364,352,qs),
(364,349,o),
(368,349,qs),
(554,349,ls),
(616,349,o),
(656,315,qs),
(710,270,o),
(710,173,qs),
(710,93,o),
(667,47,qs),
(624,0,o),
(554,0,qs),
(245,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 4 2 3 2 4 3 128 0 1 0 2 4 1 2 103 0 3 3 0 96 5 1 0 0 24 0 78 1 0 44 42 36 33 27 24 9 7 0 50 1 49 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 770;
}
);
note = uni06A9;
unicode = 1705;
},
{
glyphname = uni06AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,490,o),
(307,493,o),
(307,499,q),
(306,501,o),
(307,508,qs),
(307,512,o),
(307,513,qs),
(307,523,o),
(319,532,qs),
(506,668,ls),
(511,671,o),
(513,668,q),
(522,660,o),
(522,649,qs),
(522,637,o),
(503,623,qs),
(324,495,ls)
);
},
{
closed = 1;
nodes = (
(616,349,o),
(656,315,qs),
(710,270,o),
(710,173,qs),
(710,91,o),
(667,45,qs),
(625,0,o),
(554,0,qs),
(246,0,ls),
(60,0,o),
(60,152,qs),
(60,190,o),
(100,267,o),
(133,292,qs),
(142,298,o),
(147,298,qs),
(158,298,o),
(157,288,qs),
(157,282,o),
(153,277,qs),
(106,223,o),
(106,162,qs),
(106,49,o),
(247,49,qs),
(551,49,ls),
(594,49,o),
(622,74,qs),
(658,107,o),
(658,176,qs),
(658,237,o),
(629,270,qs),
(601,302,o),
(551,302,qs),
(350,302,ls),
(309,302,o),
(309,334,qs),
(309,349,ls),
(309,370,o),
(323,379,qs),
(563,554,ls),
(568,557,o),
(571,555,qs),
(581,548,o),
(581,536,q),
(587,516,o),
(563,499,qs),
(367,355,l),
(366,355,o),
(365,353,q),
(365,352,o),
(364,352,q),
(366,349,o),
(370,349,qs),
(554,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
26 9 2 5 0 1 76 0 0 5 0 133 0 3 1 2 1 3 2 128 6 1 5 0 1 3 5 1 104 0 2 2 4 96 0 4 4 24 4 78 17 17 17 70 17 69 63 60 54 53 47 44 38 35 36 7 7 23 
CALL[ ]	/* CallFunction */";
};
width = 770;
}
);
note = uni06AF;
unicode = 1711;
},
{
glyphname = lamvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(576,749,q),
(533,647,ls),
(531,641,o),
(524,641,qs),
(504,641,ls),
(498,641,o),
(496,647,qs),
(452,749,ls),
(450,754,o),
(458,754,qs),
(481,754,o),
(492,729,qs),
(514,677,l),
(537,729,ls),
(548,754,o),
(571,754,qs),
(579,754,o)
);
},
{
closed = 1;
nodes = (
(538,556,o),
(538,550,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
3 1 2 0 49 1 5 3 2 76 1 7 2 0 2 0 133 0 2 3 2 133 0 5 3 4 3 5 4 128 0 4 0 6 4 6 101 8 1 3 3 23 3 78 18 17 1 0 45 43 36 34 26 24 17 51 18 51 13 10 7 5 0 16 1 16 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = lamvabovear;
unicode = 1717;
},
{
glyphname = lamdotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,680,o),
(550,664,qs),
(550,648,o),
(528,626,o),
(513,626,qs),
(498,626,o),
(476,648,o),
(476,664,qs),
(476,680,o),
(497,702,o),
(513,702,qs),
(529,702,o)
);
},
{
closed = 1;
nodes = (
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
17 1 5 3 1 76 0 5 3 4 3 5 4 128 6 1 0 0 1 3 0 1 105 0 4 7 1 2 4 2 101 0 3 3 23 3 78 13 12 1 0 39 37 29 27 21 19 12 46 13 46 7 5 0 11 1 11 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = lamdotabovear;
unicode = 1718;
},
{
glyphname = lamthreedotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,728,o),
(478,743,qs),
(478,758,o),
(498,778,o),
(512,778,qs),
(527,778,o),
(547,758,o),
(547,743,qs),
(547,728,o),
(527,708,o),
(512,708,qs),
(498,708,o)
);
},
{
closed = 1;
nodes = (
(429,647,o),
(429,662,qs),
(429,677,o),
(449,697,o),
(463,697,qs),
(478,697,o),
(498,677,o),
(498,662,qs),
(498,647,o),
(478,627,o),
(463,627,qs),
(449,627,o)
);
},
{
closed = 1;
nodes = (
(527,647,o),
(527,662,qs),
(527,677,o),
(547,697,o),
(561,697,qs),
(576,697,o),
(596,677,o),
(596,662,qs),
(596,647,o),
(576,627,o),
(561,627,qs),
(547,627,o)
);
},
{
closed = 1;
nodes = (
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
41 1 9 7 1 76 0 9 7 8 7 9 8 128 0 1 10 1 0 3 1 0 105 5 1 3 12 4 11 3 2 7 3 2 105 0 8 13 1 6 8 6 101 0 7 7 23 7 78 37 36 25 24 13 12 1 0 63 61 53 51 45 43 36 70 37 70 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = lamthreedotsabovear;
unicode = 1719;
},
{
glyphname = uni06BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,298,ls),
(487,321,o),
(510,349,o),
(528,349,qs),
(533,349,ls),
(538,349,o),
(538,344,qs),
(538,42,ls),
(538,-72,o),
(475,-141,qs),
(409,-214,o),
(299,-214,qs),
(206,-214,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
5 1 3 1 1 76 0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 4 1 0 2 0 81 1 0 27 25 17 15 9 7 0 34 1 34 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uni06BA;
unicode = 1722;
},
{
glyphname = uni06BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
32 13 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 40 27 40 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06BE;
unicode = 1726;
},
{
glyphname = uni06C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,527,qs),
(108,551,o),
(137,556,q),
(123,576,o),
(123,602,qs),
(123,634,o),
(162,675,o),
(192,675,qs),
(214,675,o),
(246,651,o),
(248,634,qs),
(249,626,o),
(243,626,qs),
(241,626,o),
(235,629,qs),
(233,630,o),
(233,631,q),
(214,641,o),
(200,641,qs),
(183,641,o),
(161,619,o),
(161,601,qs),
(161,583,o),
(181,559,o),
(198,559,qs),
(242,559,ls),
(269,559,o),
(269,534,qs),
(269,531,ls),
(269,526,o),
(263,526,qs),
(181,526,ls),
(147,526,o),
(124,518,q),
(123,517,o),
(120,516,qs),
(115,514,o),
(114,514,qs),
(108,514,o)
);
},
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
35 9 2 1 2 71 52 2 7 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 4 3 2 3 4 2 128 8 1 0 1 7 1 0 7 128 0 5 0 3 4 5 3 105 0 1 1 2 97 0 2 2 23 77 9 1 7 7 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 2 3 4 2 128 8 1 0 1 7 1 0 7 128 0 5 0 3 4 5 3 105 9 1 7 0 6 7 6 101 0 1 1 2 97 0 2 2 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
66 65 1 0 65 79 66 79 60 58 31 29 26 24 20 18 14 11 7 5 0 38 1 38 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06C0;
unicode = 1728;
},
{
glyphname = uni06C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
32 13 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 40 27 40 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06C1;
unicode = 1729;
},
{
glyphname = uni06C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,527,qs),
(108,551,o),
(137,556,q),
(123,576,o),
(123,602,qs),
(123,634,o),
(162,675,o),
(192,675,qs),
(214,675,o),
(246,651,o),
(248,634,qs),
(249,626,o),
(243,626,qs),
(241,626,o),
(235,629,qs),
(233,630,o),
(233,631,q),
(214,641,o),
(200,641,qs),
(183,641,o),
(161,619,o),
(161,601,qs),
(161,583,o),
(181,559,o),
(198,559,qs),
(242,559,ls),
(269,559,o),
(269,534,qs),
(269,531,ls),
(269,526,o),
(263,526,qs),
(181,526,ls),
(147,526,o),
(124,518,q),
(123,517,o),
(120,516,qs),
(115,514,o),
(114,514,qs),
(108,514,o)
);
},
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
35 9 2 1 2 71 52 2 7 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 4 3 2 3 4 2 128 8 1 0 1 7 1 0 7 128 0 5 0 3 4 5 3 105 0 1 1 2 97 0 2 2 23 77 9 1 7 7 6 97 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 3 2 3 4 2 128 8 1 0 1 7 1 0 7 128 0 5 0 3 4 5 3 105 9 1 7 0 6 7 6 101 0 1 1 2 97 0 2 2 23 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
66 65 1 0 65 79 66 79 60 58 31 29 26 24 20 18 14 11 7 5 0 38 1 38 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06C2;
unicode = 1730;
},
{
glyphname = uni06C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,533,o),
(103,548,qs),
(103,563,o),
(123,583,o),
(137,583,qs),
(152,583,o),
(172,563,o),
(172,548,qs),
(172,533,o),
(152,513,o),
(137,513,qs),
(123,513,o)
);
},
{
closed = 1;
nodes = (
(201,533,o),
(201,548,qs),
(201,563,o),
(221,583,o),
(235,583,qs),
(250,583,o),
(269,563,o),
(269,548,qs),
(269,533,o),
(250,513,o),
(235,513,qs),
(221,513,o)
);
},
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
56 37 2 5 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 5 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
3 1 1 7 2 6 3 0 5 1 0 105 8 1 5 4 4 5 89 8 1 5 5 4 97 0 4 5 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
51 50 13 12 1 0 50 64 51 64 45 43 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06C3;
unicode = 1731;
},
{
glyphname = wawvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,564,o),
(164,564,qs),
(188,564,o),
(198,539,qs),
(221,486,l),
(244,539,ls),
(255,564,o),
(278,564,qs),
(285,564,o),
(283,558,qs),
(240,457,l),
(238,450,o),
(231,450,qs),
(211,450,ls),
(205,450,o),
(202,457,qs),
(159,558,ls)
);
},
{
closed = 1;
nodes = (
(391,113,qs),
(391,10,o),
(376,-91,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(333,-130,o),
(338,21,q),
(279,-11,o),
(221,-9,qs),
(152,-9,o),
(108,39,qs),
(60,91,o),
(60,178,qs),
(60,259,o),
(101,310,qs),
(146,368,o),
(223,368,qs),
(325,368,o),
(366,272,qs),
(389,218,o)
);
},
{
closed = 1;
nodes = (
(338,74,q),
(339,96,o),
(339,109,qs),
(339,208,o),
(317,256,qs),
(287,321,o),
(224,321,qs),
(178,321,o),
(147,287,qs),
(112,247,o),
(112,179,qs),
(112,122,o),
(138,84,qs),
(169,38,o),
(224,38,qs),
(292,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
11 1 0 1 67 1 8 9 29 1 4 8 39 1 5 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 3 1 0 3 128 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 0 5 0 7 5 7 101 2 1 1 1 23 77 10 1 8 8 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 0 1 3 1 0 3 128 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 10 1 8 0 4 6 8 4 105 0 5 0 7 5 7 101 2 1 1 1 23 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 9 8 3 9 106 10 1 8 0 4 6 8 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
54 53 62 60 53 68 54 68 39 34 36 38 35 36 35 49 11 7 30 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = wawvabovear;
unicode = 1734;
},
{
glyphname = wawtwodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,464,o),
(140,479,qs),
(140,493,o),
(160,513,o),
(174,513,qs),
(188,513,o),
(208,493,o),
(208,479,qs),
(208,464,o),
(188,443,o),
(174,443,qs),
(160,443,o)
);
},
{
closed = 1;
nodes = (
(238,464,o),
(238,479,qs),
(238,493,o),
(257,513,o),
(272,513,qs),
(286,513,o),
(306,493,o),
(306,479,qs),
(306,464,o),
(286,443,o),
(272,443,qs),
(257,443,o)
);
},
{
closed = 1;
nodes = (
(391,113,qs),
(391,10,o),
(376,-91,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(333,-130,o),
(338,21,q),
(279,-11,o),
(221,-9,qs),
(152,-9,o),
(108,39,qs),
(60,91,o),
(60,178,qs),
(60,259,o),
(101,310,qs),
(146,368,o),
(223,368,qs),
(325,368,o),
(366,272,qs),
(389,218,o)
);
},
{
closed = 1;
nodes = (
(338,74,q),
(339,96,o),
(339,109,qs),
(339,208,o),
(317,256,qs),
(287,321,o),
(224,321,qs),
(178,321,o),
(147,287,qs),
(112,247,o),
(112,179,qs),
(112,122,o),
(138,84,qs),
(169,38,o),
(224,38,qs),
(292,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
74 1 9 10 36 1 5 9 46 1 6 7 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 0 6 0 8 6 8 101 13 1 9 9 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 7 5 6 5 7 6 128 3 1 1 12 2 11 3 0 4 1 0 105 0 4 0 10 9 4 10 105 13 1 9 0 5 7 9 5 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
61 60 13 12 1 0 69 67 60 75 61 75 54 52 45 43 41 39 35 33 27 25 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = wawtwodotsabovear;
unicode = 1738;
},
{
glyphname = uni06CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-151,qs),
(60,-80,o),
(60,34,qs),
(60,92,o),
(103,196,o),
(139,224,q),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,210,q),
(133,171,o),
(111,98,o),
(109,45,q),
(111,-45,o),
(169,-104,qs),
(232,-167,o),
(333,-167,qs),
(408,-167,o),
(468,-131,qs),
(539,-88,o),
(552,-16,qs),
(556,6,o),
(537,18,qs),
(521,28,o),
(472,36,qs),
(433,44,o),
(418,47,qs),
(353,63,o),
(278,145,o),
(278,201,qs),
(278,274,o),
(325,320,qs),
(374,368,o),
(451,368,qs),
(513,368,o),
(547,343,qs),
(570,325,o),
(570,308,qs),
(570,294,o),
(560,294,qs),
(555,294,o),
(549,298,qs),
(511,321,o),
(457,321,qs),
(408,321,o),
(373,295,qs),
(329,262,o),
(329,201,qs),
(329,162,o),
(392,101,o),
(443,91,qs),
(531,73,o),
(554,64,qs),
(612,42,o),
(606,-7,qs),
(596,-92,o),
(529,-149,qs),
(451,-215,o),
(333,-215,qs),
(220,-215,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 0 3 0 1 2 3 1 105 0 4 0 0 4 89 0 4 4 0 97 6 1 0 4 0 81 1 0 53 52 43 41 26 24 20 18 16 14 0 61 1 61 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = uni06CC;
unicode = 1740;
},
{
glyphname = yehvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(76,429,o),
(84,429,qs),
(107,429,o),
(118,404,qs),
(141,351,l),
(163,404,ls),
(174,429,o),
(197,429,qs),
(205,429,o),
(202,423,qs),
(159,322,l),
(157,315,o),
(151,315,qs),
(131,315,ls),
(124,315,o),
(122,322,q),
(78,423,ls)
);
},
{
closed = 1;
nodes = (
(554,64,qs),
(612,42,o),
(606,-7,qs),
(596,-92,o),
(529,-149,qs),
(451,-215,o),
(333,-215,qs),
(220,-215,o),
(145,-151,qs),
(60,-80,o),
(60,34,qs),
(60,92,o),
(103,196,o),
(139,224,q),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,210,q),
(133,171,o),
(111,98,o),
(109,45,q),
(111,-45,o),
(169,-104,qs),
(232,-167,o),
(333,-167,qs),
(408,-167,o),
(468,-131,qs),
(539,-88,o),
(552,-16,qs),
(556,6,o),
(537,18,qs),
(521,28,o),
(472,36,qs),
(433,44,o),
(418,47,qs),
(353,63,o),
(278,145,o),
(278,201,qs),
(278,274,o),
(325,320,qs),
(374,368,o),
(451,368,qs),
(513,368,o),
(547,343,qs),
(570,325,o),
(570,308,qs),
(570,294,o),
(560,294,qs),
(555,294,o),
(549,298,qs),
(511,321,o),
(457,321,qs),
(408,321,o),
(373,295,qs),
(329,262,o),
(329,201,qs),
(329,162,o),
(392,101,o),
(443,91,qs),
(532,73,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
11 1 0 5 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
11 1 3 5 1 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
2 1 1 5 1 133 0 4 0 7 0 4 7 128 0 7 6 0 7 6 126 0 5 3 1 0 4 5 0 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
2 1 1 5 1 133 0 0 3 4 3 0 4 128 0 4 7 3 4 7 126 0 7 6 3 7 6 126 0 5 0 3 0 5 3 105 0 6 8 8 6 89 0 6 6 8 97 0 8 6 8 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
40 25 47 36 34 40 36 36 33 9 7 31 
CALL[ ]	/* CallFunction */";
};
width = 663;
}
);
note = yehvabovear;
unicode = 1742;
},
{
glyphname = uni06D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,0,o),
(114,34,qs),
(60,80,o),
(60,173,qs),
(60,250,o),
(104,298,qs),
(150,349,o),
(222,349,qs),
(278,349,ls),
(294,349,o),
(294,363,qs),
(294,378,ls),
(294,456,o),
(330,505,qs),
(373,564,o),
(457,564,qs),
(528,564,o),
(571,520,qs),
(615,476,o),
(619,403,qs),
(619,397,ls),
(619,378,o),
(597,354,o),
(581,354,qs),
(576,354,ls),
(569,354,o),
(569,362,qs),
(569,374,ls),
(569,435,o),
(546,471,qs),
(517,517,o),
(457,517,qs),
(403,517,o),
(374,480,qs),
(346,443,o),
(346,374,qs),
(346,350,ls),
(346,302,o),
(294,302,qs),
(226,302,ls),
(181,302,o),
(150,272,qs),
(112,237,o),
(112,176,qs),
(112,115,o),
(167,49,o),
(218,49,qs),
(617,49,ls),
(638,49,o),
(664,28,o),
(664,11,qs),
(664,7,ls),
(664,0,o),
(657,0,qs),
(216,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 4 3 6 3 4 6 128 0 6 0 2 1 6 2 103 0 3 3 5 97 0 5 5 23 77 0 1 1 0 95 7 1 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 4 3 6 3 4 6 128 0 5 0 3 4 5 3 105 0 6 0 2 1 6 2 103 0 1 1 0 95 7 1 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 47 44 39 37 31 28 23 21 16 13 8 5 0 54 1 53 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = uni06D2;
unicode = 1746;
},
{
glyphname = uni06D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,432,qs),
(60,456,o),
(89,462,q),
(74,482,o),
(74,507,qs),
(74,539,o),
(114,581,o),
(144,581,qs),
(166,581,o),
(198,557,o),
(199,539,q),
(201,532,o),
(195,532,qs),
(192,532,o),
(187,535,qs),
(185,536,o),
(184,536,q),
(166,547,o),
(152,547,qs),
(134,547,o),
(112,524,o),
(112,507,qs),
(112,488,o),
(133,465,o),
(149,465,qs),
(194,465,ls),
(221,465,o),
(221,439,qs),
(221,437,ls),
(221,431,o),
(214,431,qs),
(132,431,ls),
(99,431,o),
(76,423,q),
(75,423,o),
(73,422,qs),
(66,420,o),
(66,420,q),
(60,420,o)
);
},
{
closed = 1;
nodes = (
(638,49,o),
(664,28,o),
(664,11,qs),
(664,7,ls),
(664,0,o),
(657,0,qs),
(216,0,ls),
(155,0,o),
(114,34,qs),
(60,80,o),
(60,173,qs),
(60,250,o),
(104,298,qs),
(150,349,o),
(222,349,qs),
(278,349,ls),
(294,349,o),
(294,363,qs),
(294,378,ls),
(294,456,o),
(330,505,qs),
(373,564,o),
(457,564,qs),
(528,564,o),
(571,520,qs),
(615,476,o),
(619,403,qs),
(619,397,ls),
(619,378,o),
(597,354,o),
(581,354,qs),
(576,354,ls),
(569,354,o),
(569,362,qs),
(569,374,ls),
(569,435,o),
(546,471,qs),
(517,517,o),
(457,517,qs),
(403,517,o),
(374,480,qs),
(346,443,o),
(346,374,qs),
(346,350,ls),
(346,302,o),
(294,302,qs),
(226,302,ls),
(181,302,o),
(150,272,qs),
(112,237,o),
(112,176,qs),
(112,115,o),
(167,49,o),
(218,49,qs),
(617,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 35 1 0 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 3 2 7 2 3 7 128 0 8 0 10 0 8 10 128 0 4 0 2 3 4 2 105 0 1 0 0 8 1 0 103 0 10 0 6 5 10 6 103 0 7 7 9 97 0 9 9 23 77 12 1 5 5 11 95 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 2 7 2 3 7 128 0 8 0 10 0 8 10 128 0 4 0 2 3 4 2 105 0 9 0 7 1 9 7 105 0 1 0 0 8 1 0 103 0 10 0 6 5 10 6 103 12 1 5 5 11 95 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
40 39 88 85 79 76 71 69 63 60 55 53 48 45 39 93 40 92 35 36 36 51 53 13 7 27 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = uni06D3;
unicode = 1747;
},
{
glyphname = uni06D5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,168,qs),
(391,95,o),
(351,47,qs),
(305,-9,o),
(225,-9,qs),
(158,-9,o),
(113,32,qs),
(60,81,o),
(60,168,qs),
(60,233,o),
(134,333,o),
(202,359,q),
(191,370,o),
(180,388,q),
(164,423,o),
(193,440,qs),
(197,442,o),
(199,442,qs),
(204,443,o),
(207,436,qs),
(225,397,o),
(273,361,qs),
(287,350,o),
(293,345,qs),
(311,330,ls),
(391,259,o)
);
},
{
closed = 1;
nodes = (
(302,69,qs),
(339,107,o),
(338,171,qs),
(337,227,o),
(295,271,qs),
(278,290,o),
(246,315,qs),
(236,324,l),
(113,277,o),
(113,166,qs),
(112,114,o),
(141,78,qs),
(174,38,o),
(225,38,qs),
(270,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
32 13 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
2 1 1 1 0 97 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 18 values pushed */
2 1 1 0 0 1 89 2 1 1 1 0 97 0 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
27 26 26 40 27 40 21 19 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 451;
}
);
note = uni06D5;
unicode = 1749;
},
{
glyphname = uni06DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,530,o),
(97,545,qs),
(97,560,o),
(117,579,o),
(131,579,qs),
(145,579,o),
(165,560,o),
(165,545,qs),
(165,530,o),
(145,509,o),
(131,509,qs),
(117,509,o)
);
},
{
closed = 1;
nodes = (
(48,449,o),
(48,464,qs),
(48,478,o),
(68,498,o),
(82,498,qs),
(96,498,o),
(116,478,o),
(116,464,qs),
(116,449,o),
(96,428,o),
(82,428,qs),
(68,428,o)
);
},
{
closed = 1;
nodes = (
(146,449,o),
(146,464,qs),
(146,478,o),
(165,498,o),
(180,498,qs),
(194,498,o),
(214,478,o),
(214,464,qs),
(214,449,o),
(194,428,o),
(180,428,qs),
(165,428,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 57 values pushed */
0 1 6 1 0 3 1 0 105 5 1 3 2 2 3 89 5 1 3 3 2 97 8 4 7 3 2 3 2 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni06DB;
unicode = 1755;
},
{
glyphname = zero.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,81,qs),
(394,138,o),
(394,277,qs),
(394,401,o),
(359,460,qs),
(324,519,o),
(250,519,qs),
(185,519,o),
(150,475,qs),
(105,417,o),
(105,277,qs),
(105,154,o),
(141,95,qs),
(176,37,o),
(250,37,qs),
(314,37,o)
);
},
{
closed = 1;
nodes = (
(55,277,qs),
(55,410,o),
(99,483,qs),
(149,567,o),
(250,567,qs),
(337,567,o),
(387,503,qs),
(444,428,o),
(444,277,qs),
(444,-10,o),
(250,-10,qs),
(55,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 498;
}
);
note = zero.farsi;
unicode = 1776;
},
{
glyphname = one.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,471,ls),
(43,469,o),
(43,474,qs),
(43,513,ls),
(43,522,o),
(50,524,qs),
(113,547,ls),
(138,556,o),
(159,556,qs),
(167,556,ls),
(203,556,o),
(203,508,qs),
(203,47,l),
(284,47,ls),
(314,47,o),
(314,18,qs),
(314,7,ls),
(314,0,o),
(305,0,qs),
(46,0,ls),
(41,0,o),
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(152,47,l),
(152,509,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
26 23 2 0 3 4 3 2 1 0 2 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 37 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 340;
}
);
note = one.farsi;
unicode = 1777;
},
{
glyphname = two.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(381,47,o),
(381,18,qs),
(381,7,ls),
(381,0,o),
(374,0,qs),
(47,0,ls),
(42,0,o),
(42,6,qs),
(42,90,o),
(92,151,qs),
(123,188,o),
(200,240,qs),
(277,293,o),
(329,361,o),
(329,409,qs),
(329,458,o),
(301,487,qs),
(269,519,o),
(208,519,qs),
(142,519,o),
(76,472,qs),
(68,466,o),
(63,466,qs),
(59,466,o),
(56,474,qs),
(51,489,ls),
(44,513,o),
(83,533,qs),
(145,567,o),
(211,567,qs),
(286,567,o),
(330,530,qs),
(379,489,o),
(379,409,qs),
(379,342,o),
(331,288,qs),
(302,256,o),
(227,205,qs),
(152,154,o),
(98,89,o),
(95,47,q),
(351,47,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
33 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 41 0 40 44 34 37 42 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = two.farsi;
unicode = 1778;
},
{
glyphname = three.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,259,qs),
(388,219,o),
(388,151,qs),
(388,85,o),
(344,41,qs),
(292,-10,o),
(205,-10,qs),
(136,-10,o),
(29,60,o),
(29,106,qs),
(29,125,o),
(41,125,qs),
(48,125,o),
(55,115,qs),
(109,37,o),
(201,37,qs),
(258,37,o),
(295,65,qs),
(337,97,o),
(337,151,qs),
(337,209,o),
(296,240,qs),
(257,270,o),
(192,270,qs),
(140,270,ls),
(110,270,o),
(110,298,qs),
(110,308,ls),
(110,316,o),
(118,316,qs),
(206,316,ls),
(322,316,o),
(322,419,qs),
(322,519,o),
(199,519,qs),
(134,519,o),
(67,472,qs),
(58,466,o),
(54,466,qs),
(50,466,o),
(47,474,qs),
(42,489,ls),
(38,502,o),
(51,520,o),
(74,533,qs),
(132,567,o),
(199,567,qs),
(274,567,o),
(319,533,qs),
(372,494,o),
(372,423,qs),
(372,324,o),
(276,291,q),
(312,286,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 38 51 50 34 38 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 434;
}
);
note = three.farsi;
unicode = 1779;
},
{
glyphname = four.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(19,139,o),
(19,145,qs),
(19,171,ls),
(19,187,o),
(29,202,qs),
(259,539,ls),
(270,556,o),
(286,556,qs),
(300,556,ls),
(332,556,o),
(332,518,qs),
(332,186,l),
(376,186,ls),
(406,186,o),
(406,157,qs),
(406,146,ls),
(406,139,o),
(398,139,qs),
(332,139,l),
(332,6,ls),
(332,0,o),
(327,0,qs),
(286,0,ls),
(281,0,o),
(281,6,qs),
(281,139,l),
(24,139,ls)
);
},
{
closed = 1;
nodes = (
(281,498,l),
(70,186,l),
(281,186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 2 3 24 1 1 2 6 1 2 0 1 3 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 26 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = four.farsi;
unicode = 1780;
},
{
glyphname = five.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,344,o),
(216,344,qs),
(292,344,o),
(339,303,qs),
(392,257,o),
(392,172,qs),
(392,97,o),
(346,47,qs),
(293,-10,o),
(205,-10,qs),
(133,-10,o),
(84,26,qs),
(34,63,o),
(34,106,qs),
(34,125,o),
(47,125,qs),
(53,125,o),
(60,115,qs),
(113,37,o),
(201,37,qs),
(260,37,o),
(298,69,qs),
(341,106,o),
(341,168,qs),
(341,298,o),
(214,298,qs),
(146,298,o),
(72,270,q),
(62,265,o),
(62,276,qs),
(62,549,ls),
(62,556,o),
(67,556,qs),
(329,556,ls),
(359,556,o),
(359,527,qs),
(359,516,ls),
(359,508,o),
(351,508,qs),
(112,508,l),
(112,329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 1 40 1 2 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 439;
}
);
note = five.farsi;
unicode = 1781;
},
{
glyphname = six.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(243,348,qs),
(309,348,o),
(355,304,qs),
(409,254,o),
(409,174,qs),
(409,92,o),
(363,43,qs),
(314,-10,o),
(228,-10,qs),
(155,-10,o),
(106,33,qs),
(48,83,o),
(48,167,qs),
(48,207,o),
(73,279,o),
(109,340,qs),
(241,558,ls),
(247,567,o),
(253,567,qs),
(270,567,o),
(275,549,qs),
(282,528,o),
(264,497,qs),
(162,328,l),
(197,348,o)
);
},
{
closed = 1;
nodes = (
(320,70,qs),
(358,106,o),
(358,169,qs),
(358,223,o),
(328,258,qs),
(293,301,o),
(229,301,qs),
(175,301,o),
(139,269,qs),
(98,232,o),
(98,169,qs),
(98,114,o),
(128,79,qs),
(163,37,o),
(229,37,qs),
(285,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 41 20 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = six.farsi;
unicode = 1782;
},
{
glyphname = seven.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(31,508,o),
(31,514,qs),
(31,549,ls),
(31,556,o),
(36,556,qs),
(352,556,ls),
(382,556,o),
(382,527,qs),
(382,518,ls),
(382,499,o),
(372,478,qs),
(155,11,ls),
(150,0,o),
(139,0,qs),
(100,0,ls),
(94,0,o),
(96,6,q),
(330,508,l),
(36,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
16 15 2 2 1 1 76 3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 18 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 427;
}
);
note = seven.farsi;
unicode = 1783;
},
{
glyphname = eight.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,71,qs),
(158,36,o),
(223,36,qs),
(278,36,o),
(313,63,qs),
(354,95,o),
(354,153,qs),
(354,204,o),
(318,238,qs),
(280,274,o),
(223,274,qs),
(173,274,o),
(137,246,qs),
(92,212,o),
(92,153,qs),
(92,102,o)
);
},
{
closed = 1;
nodes = (
(136,351,qs),
(169,319,o),
(223,319,qs),
(272,319,o),
(337,375,o),
(337,418,qs),
(337,463,o),
(307,490,qs),
(275,519,o),
(223,519,qs),
(171,519,o),
(108,464,o),
(108,418,qs),
(108,379,o)
);
},
{
closed = 1;
nodes = (
(60,424,qs),
(60,484,o),
(103,524,qs),
(149,567,o),
(223,567,qs),
(286,567,o),
(331,533,qs),
(385,493,o),
(385,424,qs),
(385,334,o),
(294,297,q),
(346,279,o),
(404,203,o),
(404,153,qs),
(404,85,o),
(361,40,qs),
(310,-11,o),
(223,-11,qs),
(146,-11,o),
(97,29,qs),
(41,74,o),
(41,153,qs),
(41,203,o),
(99,279,o),
(151,297,q),
(60,334,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 41 37 37 38 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 446;
}
);
note = eight.farsi;
unicode = 1784;
},
{
glyphname = nine.farsi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(212,209,qs),
(144,209,o),
(97,251,qs),
(41,300,o),
(41,383,qs),
(41,463,o),
(88,513,qs),
(139,567,o),
(225,567,qs),
(297,567,o),
(345,524,qs),
(402,474,o),
(402,389,qs),
(402,349,o),
(376,277,o),
(340,217,qs),
(209,-1,l),
(205,-10,o),
(196,-10,qs),
(177,-10,o),
(170,32,o),
(185,58,qs),
(289,232,l),
(258,209,o)
);
},
{
closed = 1;
nodes = (
(310,288,qs),
(350,325,o),
(350,388,qs),
(350,443,o),
(322,478,qs),
(288,519,o),
(224,519,qs),
(167,519,o),
(131,487,qs),
(92,450,o),
(92,388,qs),
(92,330,o),
(121,296,qs),
(156,256,o),
(220,256,qs),
(274,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 40 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = nine.farsi;
unicode = 1785;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,186,qs),
(0,219,ls),
(0,225,o),
(5,225,qs),
(318,225,ls),
(323,225,o),
(323,219,qs),
(323,186,ls),
(323,180,o),
(318,180,qs),
(5,180,ls),
(0,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 323;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,186,qs),
(0,219,ls),
(0,225,o),
(5,225,qs),
(632,225,ls),
(637,225,o),
(637,219,qs),
(637,186,ls),
(637,180,o),
(632,180,qs),
(5,180,ls),
(0,180,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
10 9 4 3 4 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 21 16 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = quoteleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,449,o),
(104,433,qs),
(104,416,o),
(80,391,o),
(63,391,qs),
(46,391,o),
(22,417,o),
(22,436,qs),
(22,467,o),
(59,535,o),
(90,561,qs),
(92,563,o),
(95,559,q),
(111,545,o),
(93,521,qs),
(74,493,o),
(69,476,q),
(84,473,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 43 1 9 23 
CALL[ ]	/* CallFunction */";
};
width = 122;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,536,o),
(107,517,qs),
(107,486,o),
(70,418,o),
(38,392,q),
(37,390,o),
(33,393,q),
(18,408,o),
(36,432,qs),
(55,460,o),
(60,477,q),
(44,480,o),
(25,504,o),
(25,519,qs),
(25,537,o),
(49,562,o),
(66,562,qs),
(83,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
6 1 0 73 1 1 0 0 39 0 78 1 0 0 17 1 17 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 121;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,43,o),
(109,24,qs),
(109,-7,o),
(72,-75,o),
(40,-101,q),
(39,-103,o),
(35,-100,qs),
(20,-86,o),
(38,-61,qs),
(57,-34,o),
(62,-16,q),
(46,-13,o),
(27,11,o),
(27,26,qs),
(27,43,o),
(51,68,o),
(68,68,qs),
(85,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
6 1 0 73 1 1 0 0 118 1 0 0 17 1 17 2 9 22 
CALL[ ]	/* CallFunction */";
};
width = 127;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernRight = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,449,o),
(104,433,qs),
(104,416,o),
(80,391,o),
(63,391,qs),
(46,391,o),
(22,417,o),
(22,436,qs),
(22,467,o),
(59,535,o),
(90,561,qs),
(92,563,o),
(95,559,q),
(111,545,o),
(93,521,qs),
(74,493,o),
(69,476,q),
(84,473,o)
);
},
{
closed = 1;
nodes = (
(252,449,o),
(252,433,qs),
(252,416,o),
(228,391,o),
(211,391,qs),
(193,391,o),
(170,417,o),
(170,436,qs),
(170,467,o),
(207,535,o),
(238,561,qs),
(240,563,o),
(243,559,q),
(259,545,o),
(240,521,qs),
(221,493,o),
(217,476,q),
(232,473,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
1 1 0 0 118 31 29 43 2 9 23 
CALL[ ]	/* CallFunction */";
};
width = 270;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,536,o),
(107,517,qs),
(107,486,o),
(70,418,o),
(38,392,q),
(37,390,o),
(33,393,q),
(18,408,o),
(36,432,qs),
(55,460,o),
(60,477,q),
(44,480,o),
(25,504,o),
(25,519,qs),
(25,537,o),
(49,562,o),
(66,562,qs),
(83,562,o)
);
},
{
closed = 1;
nodes = (
(255,536,o),
(255,517,qs),
(255,486,o),
(217,418,o),
(186,392,q),
(185,390,o),
(181,393,q),
(166,408,o),
(184,432,qs),
(203,460,o),
(207,477,q),
(192,480,o),
(172,504,o),
(172,519,qs),
(172,537,o),
(197,562,o),
(213,562,qs),
(231,562,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
24 6 2 0 73 3 1 2 3 0 0 39 0 78 19 18 1 0 18 35 19 35 0 17 1 17 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernRight = quotesinglbase;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,43,o),
(109,24,qs),
(109,-7,o),
(72,-75,o),
(40,-101,q),
(39,-103,o),
(35,-100,qs),
(20,-86,o),
(38,-61,qs),
(57,-34,o),
(62,-16,q),
(46,-13,o),
(27,11,o),
(27,26,qs),
(27,43,o),
(51,68,o),
(68,68,qs),
(85,68,o)
);
},
{
closed = 1;
nodes = (
(257,43,o),
(257,24,qs),
(257,-7,o),
(219,-75,o),
(188,-101,q),
(187,-103,o),
(183,-100,qs),
(168,-86,o),
(186,-61,qs),
(205,-33,o),
(209,-16,q),
(194,-13,o),
(174,11,o),
(174,26,qs),
(174,43,o),
(199,68,o),
(215,68,qs),
(233,68,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
24 6 2 0 73 3 1 2 3 0 0 118 19 18 1 0 18 35 19 35 0 17 1 17 4 9 22 
CALL[ ]	/* CallFunction */";
};
width = 275;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,309,o),
(38,315,qs),
(38,346,ls),
(38,352,o),
(43,352,qs),
(133,352,l),
(133,548,ls),
(133,554,o),
(138,554,qs),
(157,554,o),
(180,526,o),
(180,503,qs),
(180,352,l),
(271,352,ls),
(276,352,o),
(276,346,qs),
(276,315,ls),
(276,309,o),
(271,309,qs),
(180,309,l),
(180,-154,ls),
(180,-160,o),
(175,-160,qs),
(138,-160,ls),
(133,-160,o),
(133,-154,qs),
(133,309,l),
(43,309,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
20 1 2 3 25 24 11 10 4 1 2 6 1 2 0 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 0 1 0 134 0 3 3 39 77 6 5 2 1 1 2 95 4 1 2 2 42 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 0 1 0 134 4 1 2 6 5 2 1 0 2 1 103 0 3 3 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 27 0 27 19 19 21 19 19 7 9 27 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,113,o),
(38,119,qs),
(38,150,ls),
(38,156,o),
(43,156,qs),
(133,156,l),
(133,309,l),
(43,309,ls),
(38,309,o),
(38,315,qs),
(38,346,ls),
(38,352,o),
(43,352,qs),
(133,352,l),
(133,548,ls),
(133,554,o),
(138,554,qs),
(157,554,o),
(180,526,o),
(180,503,qs),
(180,352,l),
(271,352,ls),
(276,352,o),
(276,346,qs),
(276,315,ls),
(276,309,o),
(271,309,qs),
(180,309,l),
(180,156,l),
(271,156,ls),
(276,156,o),
(276,150,qs),
(276,119,ls),
(276,113,o),
(271,113,qs),
(180,113,l),
(180,-154,ls),
(180,-160,o),
(175,-160,qs),
(138,-160,ls),
(133,-160,o),
(133,-154,qs),
(133,113,l),
(43,113,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
28 1 4 5 33 32 19 18 4 3 4 41 40 11 10 4 1 2 6 1 2 0 1 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 77 0 0 0 44 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 0 134 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 77 7 1 3 3 4 95 6 1 4 4 42 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 134 6 1 4 7 1 3 2 4 3 103 8 1 2 10 9 2 1 0 2 1 103 0 5 5 39 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 43 0 43 17 21 19 19 21 17 21 19 19 11 9 31 
CALL[ ]	/* CallFunction */";
};
width = 313;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(52,238,o),
(52,279,qs),
(52,319,o),
(99,368,o),
(138,368,qs),
(178,368,o),
(226,320,o),
(226,279,qs),
(226,239,o),
(179,190,o),
(140,190,qs),
(100,190,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
2 1 0 0 1 97 0 1 1 48 0 78 1 0 7 5 0 11 1 11 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,9,o),
(56,27,qs),
(56,44,o),
(80,68,o),
(97,68,qs),
(114,68,o),
(138,44,o),
(138,27,qs),
(138,9,o),
(114,-16,o),
(97,-16,qs),
(80,-16,o)
);
},
{
closed = 1;
nodes = (
(232,9,o),
(232,27,qs),
(232,44,o),
(256,68,o),
(273,68,qs),
(290,68,o),
(314,44,o),
(314,27,qs),
(314,9,o),
(290,-16,o),
(273,-16,qs),
(256,-16,o)
);
},
{
closed = 1;
nodes = (
(407,9,o),
(407,27,qs),
(407,44,o),
(431,68,o),
(448,68,qs),
(465,68,o),
(489,44,o),
(489,27,qs),
(489,9,o),
(465,-16,o),
(448,-16,qs),
(431,-16,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 3 2 1 1 0 97 8 4 7 2 6 5 0 0 46 0 78 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 9 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,92,o),
(637,162,qs),
(637,232,o),
(598,297,o),
(555,297,qs),
(471,297,o),
(471,162,qs),
(471,93,o),
(511,29,o),
(555,29,qs),
(598,29,o)
);
},
{
closed = 1;
nodes = (
(950,92,o),
(950,162,qs),
(950,232,o),
(910,297,o),
(866,297,qs),
(784,297,o),
(784,162,qs),
(784,29,o),
(866,29,qs),
(910,29,o)
);
},
{
closed = 1;
nodes = (
(249,324,o),
(249,394,qs),
(249,464,o),
(209,528,o),
(166,528,qs),
(123,528,o),
(83,464,o),
(83,394,qs),
(83,324,o),
(123,261,o),
(166,261,qs),
(210,261,o)
);
},
{
closed = 1;
nodes = (
(185,6,qs),
(484,549,l),
(487,556,o),
(491,556,qs),
(497,556,ls),
(515,556,o),
(522,527,o),
(509,503,qs),
(237,6,ls),
(234,0,o),
(229,0,qs),
(187,0,ls),
(182,0,o)
);
},
{
closed = 1;
nodes = (
(465,32,qs),
(427,77,o),
(427,162,qs),
(427,236,o),
(456,282,qs),
(491,335,o),
(555,335,qs),
(610,335,o),
(644,294,qs),
(682,247,o),
(682,162,qs),
(682,88,o),
(653,43,qs),
(619,-9,o),
(555,-9,qs),
(498,-9,o)
);
},
{
closed = 1;
nodes = (
(777,32,qs),
(739,77,o),
(739,162,qs),
(739,236,o),
(768,282,qs),
(803,335,o),
(866,335,qs),
(922,335,o),
(956,294,qs),
(995,247,o),
(995,162,qs),
(995,88,o),
(965,43,qs),
(931,-9,o),
(866,-9,qs),
(810,-9,o)
);
},
{
closed = 1;
nodes = (
(76,263,qs),
(38,309,o),
(38,394,qs),
(38,468,o),
(68,513,qs),
(103,567,o),
(166,567,qs),
(221,567,o),
(255,525,qs),
(293,479,o),
(293,394,qs),
(293,320,o),
(264,275,qs),
(231,223,o),
(166,223,qs),
(110,223,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 0 5 5 13 97 0 13 13 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 13 0 5 9 13 5 105 11 1 9 3 1 1 4 9 1 106 16 1 4 20 1 12 0 4 12 105 0 7 7 39 77 17 1 6 6 40 77 15 2 14 3 0 0 8 97 19 10 18 3 8 8 49 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 59 values pushed */
79 78 63 62 47 46 34 33 22 21 12 11 1 0 87 85 78 93 79 93 71 69 62 77 63 77 55 53 46 61 47 61 42 39 33 45 34 45 28 26 21 32 22 32 16 14 11 20 12 20 6 4 0 10 1 10 21 9 22 
CALL[ ]	/* CallFunction */";
};
width = 1031;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,40,o),
(191,40,qs),
(147,40,ls),
(137,40,o),
(131,48,qs),
(36,170,ls),
(29,179,o),
(29,184,qs),
(29,188,o),
(36,198,qs),
(131,320,ls),
(137,328,o),
(147,328,qs),
(191,328,ls),
(199,328,o),
(194,321,qs),
(90,184,l),
(194,47,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 56 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(27,328,o),
(35,328,qs),
(79,328,ls),
(89,328,o),
(95,320,qs),
(190,198,ls),
(197,190,o),
(197,184,qs),
(197,178,o),
(190,170,qs),
(95,48,ls),
(89,40,o),
(79,40,qs),
(35,40,ls),
(27,40,o),
(32,47,qs),
(136,184,l),
(32,321,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 56 50 2 9 24 
CALL[ ]	/* CallFunction */";
};
width = 223;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,6,qs),
(303,549,l),
(306,556,o),
(310,556,qs),
(316,556,ls),
(334,556,o),
(341,527,o),
(328,503,qs),
(56,6,ls),
(53,0,o),
(48,0,qs),
(6,0,ls),
(1,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
0 1 1 39 77 2 1 0 0 40 0 78 1 0 9 6 0 12 1 12 3 9 22 
CALL[ ]	/* CallFunction */";
};
width = 337;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni20AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(3,188,o),
(6,194,qs),
(20,229,l),
(24,235,o),
(27,235,qs),
(83,235,l),
(83,240,o),
(82,249,qs),
(81,269,o),
(81,278,qs),
(81,297,o),
(82,307,q),
(18,307,ls),
(13,307,o),
(15,313,qs),
(29,348,ls),
(32,354,o),
(36,354,qs),
(89,354,l),
(107,442,o),
(166,500,qs),
(235,567,o),
(330,567,qs),
(400,567,o),
(460,533,qs),
(482,521,o),
(495,502,o),
(491,489,qs),
(486,474,ls),
(483,466,o),
(479,466,qs),
(473,466,o),
(466,472,qs),
(403,519,o),
(334,519,qs),
(264,519,o),
(215,481,qs),
(158,437,o),
(139,354,q),
(440,354,ls),
(446,354,o),
(443,348,qs),
(429,313,ls),
(426,307,o),
(422,307,qs),
(132,307,l),
(131,297,o),
(131,276,qs),
(131,266,o),
(132,248,qs),
(133,239,o),
(133,235,q),
(398,235,ls),
(404,235,o),
(401,229,qs),
(387,194,ls),
(384,188,o),
(380,188,qs),
(141,188,l),
(158,120,o),
(202,81,qs),
(253,36,o),
(331,36,qs),
(436,36,o),
(488,115,qs),
(495,125,o),
(502,125,qs),
(513,125,o),
(513,109,qs),
(513,72,o),
(473,36,qs),
(418,-11,o),
(330,-11,qs),
(246,-11,o),
(184,35,qs),
(113,88,o),
(91,188,q),
(9,188,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
69 27 2 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 4 13 12 2 3 1 4 3 103 0 7 7 9 97 0 9 9 39 77 11 1 5 5 6 95 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 7 6 7 8 6 128 0 1 3 2 3 1 2 128 0 9 0 7 8 9 7 105 0 4 13 12 2 3 1 4 3 103 11 1 5 5 6 95 10 1 6 6 42 77 0 2 2 0 97 0 0 0 46 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
0 0 0 77 0 76 65 63 59 58 55 53 34 35 36 22 36 19 34 36 35 14 9 31 
CALL[ ]	/* CallFunction */";
};
width = 544;
}
);
note = uni20AC;
unicode = 8364;
},
{
glyphname = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(34,518,o),
(34,521,qs),
(34,553,ls),
(34,556,o),
(37,556,qs),
(220,556,ls),
(235,556,o),
(235,541,qs),
(235,522,ls),
(235,518,o),
(231,518,qs),
(154,518,l),
(154,276,ls),
(154,273,o),
(152,273,qs),
(117,273,ls),
(114,273,o),
(114,276,qs),
(114,518,l),
(37,518,ls)
);
},
{
closed = 1;
nodes = (
(489,556,o),
(493,556,qs),
(517,556,ls),
(538,556,o),
(538,532,q),
(553,276,ls),
(553,273,o),
(550,273,qs),
(518,273,ls),
(513,273,o),
(513,276,qs),
(503,488,l),
(428,276,l),
(426,273,o),
(423,273,qs),
(401,273,ls),
(399,273,o),
(397,276,q),
(324,484,l),
(312,276,ls),
(312,273,o),
(309,273,qs),
(278,273,ls),
(276,273,o),
(276,276,qs),
(290,553,ls),
(290,556,o),
(293,556,qs),
(316,556,ls),
(336,556,o),
(344,536,qs),
(413,337,l),
(488,552,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
10 1 0 1 41 40 33 27 1 5 4 0 2 76 30 4 2 4 73 5 1 4 0 4 134 6 3 2 1 0 0 1 89 6 3 2 1 1 0 95 7 2 2 0 1 0 79 0 0 50 48 44 43 37 36 24 22 0 19 0 17 36 23 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 622;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,255,qs),
(41,289,ls),
(41,295,o),
(46,295,qs),
(305,295,ls),
(322,295,o),
(344,276,o),
(344,260,qs),
(344,255,ls),
(344,249,o),
(339,249,qs),
(46,249,ls),
(41,249,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
11 10 3 3 0 1 1 76 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 37 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(41,159,o),
(41,165,qs),
(41,200,ls),
(41,206,o),
(46,206,qs),
(131,206,l),
(201,333,l),
(46,333,ls),
(41,333,o),
(41,339,qs),
(41,374,ls),
(41,379,o),
(46,379,qs),
(227,379,l),
(278,472,ls),
(281,478,o),
(285,478,qs),
(290,478,ls),
(309,478,o),
(317,449,o),
(305,427,qs),
(279,379,l),
(305,379,ls),
(344,379,o),
(344,344,qs),
(344,339,ls),
(344,333,o),
(339,333,qs),
(254,333,l),
(183,206,l),
(305,206,ls),
(322,206,o),
(344,186,o),
(344,170,qs),
(344,165,ls),
(344,159,o),
(339,159,qs),
(157,159,l),
(105,67,ls),
(102,61,o),
(97,61,qs),
(56,61,ls),
(52,61,o),
(54,67,q),
(105,159,l),
(46,159,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
35 34 19 3 3 4 43 42 10 3 1 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 4 5 112 0 0 1 1 0 113 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 5 133 0 0 1 0 134 6 1 4 7 1 3 2 4 3 104 8 1 2 1 1 2 87 8 1 2 2 1 95 10 9 2 1 2 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 45 0 45 17 21 18 51 36 17 37 19 34 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 384;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,154,o),
(400,115,qs),
(400,108,ls),
(400,99,o),
(394,102,qs),
(46,246,ls),
(41,248,o),
(41,254,qs),
(41,287,ls),
(41,292,o),
(46,295,q),
(394,438,ls),
(400,441,o),
(400,433,qs),
(400,398,ls),
(400,387,o),
(387,381,qs),
(110,272,l),
(364,169,ls)
);
},
{
closed = 1;
nodes = (
(41,6,qs),
(41,41,ls),
(41,47,o),
(46,47,qs),
(395,47,ls),
(400,47,o),
(400,41,qs),
(400,6,ls),
(400,0,o),
(395,0,qs),
(46,0,ls),
(41,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
29 28 23 22 4 0 1 1 76 10 1 1 74 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 26 25 20 19 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,387,o),
(48,398,qs),
(48,433,ls),
(48,441,o),
(55,438,qs),
(403,295,l),
(408,292,o),
(408,287,qs),
(408,254,ls),
(408,248,o),
(403,246,qs),
(55,102,ls),
(48,99,o),
(48,108,qs),
(48,115,ls),
(48,154,o),
(84,169,qs),
(338,272,l),
(62,381,ls)
);
},
{
closed = 1;
nodes = (
(48,6,qs),
(48,41,ls),
(48,47,o),
(53,47,qs),
(403,47,ls),
(408,47,o),
(408,41,qs),
(408,6,ls),
(408,0,o),
(403,0,qs),
(53,0,ls),
(48,0,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
29 28 23 22 4 0 1 1 76 10 1 1 74 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 26 25 20 19 2 6 22 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni25CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,513,qs),
(245,501,o),
(261,485,o),
(272,485,qs),
(284,485,o),
(300,501,o),
(300,513,qs),
(300,538,o),
(272,541,q),
(245,538,o)
);
},
{
closed = 1;
nodes = (
(331,488,qs),
(331,477,o),
(347,460,o),
(359,460,qs),
(370,460,o),
(387,477,o),
(387,488,qs),
(387,513,o),
(359,516,q),
(332,514,o)
);
},
{
closed = 1;
nodes = (
(50,317,qs),
(50,306,o),
(67,289,o),
(78,289,qs),
(89,289,o),
(105,306,o),
(105,317,qs),
(105,343,o),
(78,345,q),
(50,343,o)
);
},
{
closed = 1;
nodes = (
(439,317,qs),
(439,306,o),
(455,289,o),
(467,289,qs),
(478,289,o),
(495,306,o),
(495,317,qs),
(495,343,o),
(467,345,q),
(440,343,o)
);
},
{
closed = 1;
nodes = (
(300,121,qs),
(300,133,o),
(284,149,o),
(272,149,qs),
(261,149,o),
(245,133,o),
(245,121,qs),
(245,96,o),
(272,93,q),
(300,96,o)
);
},
{
closed = 1;
nodes = (
(405,421,qs),
(405,410,o),
(421,393,o),
(432,393,qs),
(443,393,o),
(460,410,o),
(460,421,qs),
(460,447,o),
(432,449,q),
(405,447,o)
);
},
{
closed = 1;
nodes = (
(151,489,qs),
(151,477,o),
(168,461,o),
(179,461,qs),
(191,461,o),
(207,477,o),
(207,489,qs),
(207,514,o),
(179,517,q),
(152,514,o)
);
},
{
closed = 1;
nodes = (
(77,413,qs),
(77,401,o),
(94,385,o),
(105,385,qs),
(117,385,o),
(133,401,o),
(133,413,qs),
(133,438,o),
(105,441,q),
(78,438,o)
);
},
{
closed = 1;
nodes = (
(400,155,qs),
(400,166,o),
(383,183,o),
(372,183,qs),
(361,183,o),
(345,166,o),
(345,155,qs),
(345,129,o),
(372,127,q),
(400,129,o)
);
},
{
closed = 1;
nodes = (
(467,221,qs),
(467,233,o),
(450,249,o),
(439,249,qs),
(427,249,o),
(411,233,o),
(411,221,qs),
(412,196,o),
(439,193,q),
(467,196,o)
);
},
{
closed = 1;
nodes = (
(206,155,qs),
(206,166,o),
(190,183,o),
(179,183,qs),
(167,183,o),
(151,166,o),
(151,155,qs),
(151,129,o),
(179,127,q),
(206,129,o)
);
},
{
closed = 1;
nodes = (
(127,221,qs),
(127,233,o),
(111,249,o),
(99,249,qs),
(88,249,o),
(71,233,o),
(71,221,qs),
(72,196,o),
(99,193,q),
(127,196,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
0 0 1 0 133 6 1 1 5 1 133 0 5 7 5 133 0 7 2 7 133 3 1 2 9 2 133 11 1 9 8 9 133 10 1 8 4 8 133 0 4 4 118 116 114 106 104 96 94 40 40 40 40 40 40 40 40 36 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 545;
}
);
note = uni25CC;
unicode = 9676;
},
{
glyphname = zero.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,81,qs),
(382,138,o),
(382,277,qs),
(382,401,o),
(347,460,qs),
(312,519,o),
(238,519,qs),
(173,519,o),
(138,475,qs),
(93,417,o),
(93,277,qs),
(93,154,o),
(129,95,qs),
(164,37,o),
(238,37,qs),
(302,37,o)
);
},
{
closed = 1;
nodes = (
(43,277,qs),
(43,410,o),
(87,483,qs),
(137,567,o),
(238,567,qs),
(325,567,o),
(375,503,qs),
(433,428,o),
(433,277,qs),
(433,-10,o),
(238,-10,qs),
(43,-10,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 3 97 0 3 3 23 77 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 0 1 0 3 1 105 4 1 0 0 2 97 5 1 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 3 0 1 0 3 1 105 4 1 0 2 2 0 89 4 1 0 0 2 97 5 1 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
17 16 1 0 23 21 16 27 17 27 9 7 0 15 1 15 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = zero.tab;
unicode = 57344;
},
{
glyphname = one.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,463,ls),
(104,461,o),
(104,467,qs),
(104,506,ls),
(104,514,o),
(111,517,qs),
(198,547,ls),
(223,556,o),
(244,556,qs),
(252,556,ls),
(287,556,o),
(287,508,qs),
(287,47,l),
(403,47,ls),
(433,47,o),
(433,18,qs),
(433,7,ls),
(433,0,o),
(426,0,qs),
(100,0,ls),
(95,0,o),
(95,6,qs),
(95,41,ls),
(95,47,o),
(100,47,qs),
(237,47,l),
(237,509,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
26 23 2 0 3 4 3 2 1 0 2 76 0 3 3 23 77 2 1 0 0 1 95 0 1 1 24 1 78 50 35 37 16 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = one.tab;
unicode = 57345;
},
{
glyphname = two.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(420,47,o),
(420,18,qs),
(420,7,ls),
(420,0,o),
(412,0,qs),
(74,0,ls),
(69,0,o),
(69,6,qs),
(69,90,o),
(121,152,qs),
(153,189,o),
(233,243,qs),
(313,296,o),
(367,365,o),
(367,413,qs),
(367,461,o),
(338,489,qs),
(306,519,o),
(244,519,qs),
(168,519,o),
(100,472,qs),
(92,466,o),
(88,466,qs),
(84,466,o),
(81,474,qs),
(76,489,ls),
(69,513,o),
(107,533,qs),
(171,567,o),
(248,567,qs),
(323,567,o),
(367,532,qs),
(418,492,o),
(418,413,qs),
(418,361,o),
(388,317,qs),
(360,276,o),
(288,227,qs),
(195,162,o),
(178,148,qs),
(126,100,o),
(122,47,q),
(390,47,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
34 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 2 4 2 1 4 128 0 2 2 0 97 0 0 0 23 77 5 1 4 4 3 95 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 2 4 2 1 4 128 0 0 0 2 1 0 2 105 5 1 4 4 3 95 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 42 0 41 44 34 37 43 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = two.tab;
unicode = 57346;
},
{
glyphname = three.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(367,259,qs),
(413,219,o),
(413,151,qs),
(413,85,o),
(369,41,qs),
(317,-10,o),
(230,-10,qs),
(160,-10,o),
(54,60,o),
(54,106,qs),
(54,125,o),
(66,125,qs),
(73,125,o),
(80,115,qs),
(132,37,o),
(226,37,qs),
(283,37,o),
(320,65,qs),
(362,97,o),
(362,151,qs),
(362,209,o),
(321,240,qs),
(282,270,o),
(217,270,qs),
(165,270,ls),
(135,270,o),
(135,298,qs),
(135,308,ls),
(135,316,o),
(143,316,qs),
(231,316,ls),
(347,316,o),
(347,419,qs),
(347,519,o),
(224,519,qs),
(159,519,o),
(92,472,qs),
(83,466,o),
(79,466,qs),
(75,466,o),
(72,474,qs),
(67,489,ls),
(63,502,o),
(76,520,o),
(98,533,qs),
(158,567,o),
(224,567,qs),
(299,567,o),
(344,533,qs),
(397,494,o),
(397,423,qs),
(397,325,o),
(301,291,q),
(337,286,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 3 0 4 6 3 4 105 0 2 2 0 97 0 0 0 23 77 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 5 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 2 3 2 1 3 128 0 6 4 5 4 6 5 128 0 0 0 2 1 0 2 105 0 3 0 4 6 3 4 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
35 34 38 51 50 34 38 37 8 7 30 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = three.tab;
unicode = 57347;
},
{
glyphname = four.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,139,o),
(51,145,qs),
(51,171,ls),
(51,187,o),
(61,202,qs),
(290,539,ls),
(301,556,o),
(318,556,qs),
(332,556,ls),
(364,556,o),
(364,518,qs),
(364,186,l),
(408,186,ls),
(438,186,o),
(438,157,qs),
(438,146,ls),
(438,139,o),
(429,139,qs),
(364,139,l),
(364,6,ls),
(364,0,o),
(359,0,qs),
(318,0,ls),
(313,0,o),
(313,6,qs),
(313,139,l),
(56,139,ls)
);
},
{
closed = 1;
nodes = (
(313,498,l),
(101,186,l),
(313,186,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
28 1 2 3 24 1 1 2 6 1 2 0 1 3 76 7 5 2 2 6 4 2 1 0 2 1 104 0 3 3 23 77 0 0 0 24 0 78 27 27 0 0 27 29 27 29 0 26 0 26 50 35 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = four.tab;
unicode = 57348;
},
{
glyphname = five.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,344,o),
(241,344,qs),
(317,344,o),
(365,303,qs),
(420,257,o),
(420,172,qs),
(420,97,o),
(373,47,qs),
(319,-10,o),
(230,-10,qs),
(158,-10,o),
(107,26,qs),
(54,63,o),
(54,106,qs),
(54,125,o),
(67,125,qs),
(73,125,o),
(80,115,qs),
(133,37,o),
(226,37,qs),
(285,37,o),
(324,69,qs),
(369,106,o),
(369,168,qs),
(369,298,o),
(239,298,qs),
(166,298,o),
(92,270,q),
(82,265,o),
(82,276,qs),
(82,549,ls),
(82,556,o),
(87,556,qs),
(355,556,ls),
(385,556,o),
(385,527,qs),
(385,516,ls),
(385,508,o),
(377,508,qs),
(132,508,l),
(132,329,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 0 1 40 1 2 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 0 0 1 95 0 1 1 23 77 0 3 3 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 3 2 4 3 128 0 6 0 2 4 6 2 105 0 3 0 5 3 5 101 0 0 0 1 95 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
38 36 34 36 38 35 32 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = five.tab;
unicode = 57349;
},
{
glyphname = six.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,348,qs),
(331,348,o),
(377,304,qs),
(431,254,o),
(431,174,qs),
(431,92,o),
(385,43,qs),
(336,-10,o),
(250,-10,qs),
(177,-10,o),
(128,33,qs),
(70,83,o),
(70,167,qs),
(70,208,o),
(96,283,o),
(131,340,qs),
(263,558,ls),
(268,567,o),
(275,567,qs),
(292,567,o),
(297,549,qs),
(304,528,o),
(285,497,qs),
(184,328,l),
(218,348,o)
);
},
{
closed = 1;
nodes = (
(341,70,qs),
(379,105,o),
(379,169,qs),
(379,223,o),
(350,258,qs),
(315,301,o),
(251,301,qs),
(196,301,o),
(161,269,qs),
(120,232,o),
(120,169,qs),
(120,114,o),
(150,79,qs),
(185,37,o),
(251,37,qs),
(307,37,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 0 4 3 2 4 106 0 0 0 23 77 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 3 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 133 0 2 0 4 3 2 4 106 5 1 3 1 1 3 89 5 1 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
26 25 34 32 25 40 26 40 38 40 36 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = six.tab;
unicode = 57350;
},
{
glyphname = seven.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,508,o),
(58,514,qs),
(58,549,ls),
(58,556,o),
(63,556,qs),
(400,556,ls),
(430,556,o),
(430,527,qs),
(430,518,ls),
(430,498,o),
(420,478,qs),
(188,11,ls),
(182,0,o),
(172,0,qs),
(133,0,ls),
(125,0,o),
(129,6,q),
(379,508,l),
(63,508,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
16 15 2 2 1 1 76 3 1 2 2 1 95 0 1 1 23 77 0 0 0 24 0 78 0 0 0 18 0 18 38 50 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = seven.tab;
unicode = 57351;
},
{
glyphname = eight.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,71,qs),
(173,36,o),
(238,36,qs),
(293,36,o),
(328,63,qs),
(369,95,o),
(369,153,qs),
(369,204,o),
(333,238,qs),
(295,274,o),
(238,274,qs),
(188,274,o),
(151,246,qs),
(106,212,o),
(106,153,qs),
(106,102,o)
);
},
{
closed = 1;
nodes = (
(151,351,qs),
(184,319,o),
(238,319,qs),
(287,319,o),
(352,375,o),
(352,418,qs),
(352,463,o),
(322,490,qs),
(290,519,o),
(238,519,qs),
(186,519,o),
(123,464,o),
(123,418,qs),
(123,379,o)
);
},
{
closed = 1;
nodes = (
(75,424,qs),
(75,484,o),
(118,524,qs),
(164,567,o),
(238,567,qs),
(301,567,o),
(346,533,qs),
(400,493,o),
(400,424,qs),
(400,334,o),
(309,297,q),
(361,279,o),
(419,203,o),
(419,153,qs),
(419,85,o),
(376,40,qs),
(325,-11,o),
(238,-11,qs),
(161,-11,o),
(112,29,qs),
(56,74,o),
(56,153,qs),
(56,203,o),
(114,279,o),
(166,297,q),
(75,334,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
44 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 0 1 3 0 105 0 2 2 5 97 0 5 5 23 77 0 1 1 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 5 0 2 3 5 2 105 0 3 0 0 1 3 0 105 0 1 4 4 1 89 0 1 1 4 97 0 4 1 4 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 41 37 37 38 35 6 7 28 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = eight.tab;
unicode = 57352;
},
{
glyphname = nine.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,209,qs),
(158,209,o),
(111,251,qs),
(55,300,o),
(55,383,qs),
(55,463,o),
(102,513,qs),
(153,567,o),
(239,567,qs),
(311,567,o),
(359,524,qs),
(416,474,o),
(416,389,qs),
(416,349,o),
(390,277,o),
(354,217,qs),
(223,-1,l),
(219,-10,o),
(210,-10,qs),
(191,-10,o),
(184,32,o),
(199,58,qs),
(303,232,l),
(270,209,o)
);
},
{
closed = 1;
nodes = (
(324,288,qs),
(364,325,o),
(364,388,qs),
(364,443,o),
(336,478,qs),
(302,519,o),
(238,519,qs),
(181,519,o),
(145,487,qs),
(105,450,o),
(105,388,qs),
(105,330,o),
(135,296,qs),
(170,256,o),
(235,256,qs),
(289,256,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
36 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 1 3 0 2 0 3 2 105 0 4 4 1 97 0 1 1 23 77 0 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 4 3 1 4 105 5 1 3 0 2 0 3 2 105 0 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 0 2 0 134 0 1 0 4 3 1 4 105 5 1 3 2 2 3 89 5 1 3 3 2 97 0 2 3 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
25 24 33 31 24 39 25 39 38 40 35 6 7 25 
CALL[ ]	/* CallFunction */";
};
width = 474;
}
);
note = nine.tab;
unicode = 57353;
},
{
glyphname = Decoratedbracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(161,403,o),
(161,405,qs),
(161,409,o),
(166,409,qs),
(204,409,l),
(223,507,o),
(269,581,qs),
(318,660,o),
(387,697,qs),
(396,701,o),
(396,691,qs),
(396,670,o),
(388,650,o),
(372,634,qs),
(282,547,o),
(255,409,q),
(288,409,ls),
(291,409,o),
(291,405,qs),
(291,403,o),
(290,402,qs),
(254,353,l),
(242,360,o),
(227,360,qs),
(210,360,o),
(199,353,q),
(163,402,l)
);
},
{
closed = 1;
nodes = (
(141,293,o),
(141,277,qs),
(141,262,o),
(149,249,q),
(100,213,l),
(99,213,l),
(97,212,o),
(96,212,qs),
(93,212,o),
(93,216,qs),
(93,249,l),
(56,262,ls),
(52,264,o),
(52,269,qs),
(52,284,ls),
(52,289,o),
(56,291,qs),
(93,304,l),
(93,337,ls),
(93,341,o),
(96,341,qs),
(98,341,o),
(100,340,qs),
(149,304,l)
);
},
{
closed = 1;
nodes = (
(402,289,o),
(402,284,qs),
(402,269,ls),
(402,264,o),
(397,262,qs),
(360,249,l),
(360,216,ls),
(360,211,o),
(357,211,qs),
(356,211,o),
(354,212,qs),
(353,213,l),
(304,249,l),
(312,262,o),
(312,276,qs),
(312,293,o),
(304,303,q),
(353,339,ls),
(356,341,o),
(357,341,qs),
(360,341,o),
(360,337,qs),
(360,303,l),
(397,291,ls)
);
},
{
closed = 1;
nodes = (
(259,290,o),
(259,276,qs),
(259,263,o),
(240,243,o),
(226,243,qs),
(213,243,o),
(194,263,o),
(194,276,qs),
(194,290,o),
(213,309,o),
(226,309,qs),
(240,309,o)
);
},
{
closed = 1;
nodes = (
(283,5,o),
(372,-81,qs),
(387,-96,o),
(396,-117,o),
(396,-138,qs),
(396,-148,o),
(387,-144,qs),
(327,-112,o),
(282,-48,qs),
(226,32,o),
(204,143,q),
(166,143,ls),
(161,143,o),
(161,147,qs),
(161,149,o),
(163,151,qs),
(199,199,l),
(211,192,o),
(227,192,qs),
(241,192,o),
(254,199,q),
(290,151,l),
(291,149,o),
(291,147,qs),
(291,143,o),
(288,143,qs),
(255,143,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
24 1 0 1 54 52 4 3 3 0 72 68 61 57 51 50 46 39 36 35 32 11 4 3 96 92 42 40 4 5 4 89 1 6 5 5 76 2 1 1 0 1 133 0 0 3 0 133 0 5 4 6 4 5 6 128 9 7 2 6 6 132 8 1 3 4 4 3 89 8 1 3 3 4 97 0 4 3 4 81 87 87 76 75 87 113 87 113 102 100 95 93 82 80 75 86 76 86 27 37 33 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = Decoratedbracketleft;
unicode = 57600;
},
{
glyphname = Decoratedbracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,409,o),
(307,405,qs),
(307,403,o),
(305,402,q),
(269,353,l),
(258,360,o),
(241,360,qs),
(226,360,o),
(214,353,q),
(178,402,ls),
(177,403,o),
(177,405,qs),
(177,409,o),
(180,409,qs),
(213,409,l),
(186,547,o),
(96,634,qs),
(80,650,o),
(72,670,o),
(72,691,qs),
(72,701,o),
(81,697,qs),
(141,665,o),
(186,600,qs),
(242,521,o),
(264,409,q),
(302,409,ls)
);
},
{
closed = 1;
nodes = (
(71,262,ls),
(66,264,o),
(66,269,qs),
(66,284,ls),
(66,289,o),
(71,291,qs),
(108,303,l),
(108,337,ls),
(108,341,o),
(111,341,qs),
(112,341,o),
(115,339,qs),
(164,303,l),
(156,293,o),
(156,276,qs),
(156,262,o),
(164,249,q),
(115,213,l),
(114,213,l),
(112,211,o),
(111,211,qs),
(108,211,o),
(108,216,qs),
(108,249,l)
);
},
{
closed = 1;
nodes = (
(416,289,o),
(416,284,qs),
(416,269,ls),
(416,264,o),
(412,262,qs),
(375,249,l),
(375,216,ls),
(375,212,o),
(372,212,qs),
(371,212,o),
(369,213,q),
(368,213,l),
(319,249,l),
(327,262,o),
(327,277,qs),
(327,293,o),
(319,304,q),
(368,340,ls),
(370,341,o),
(372,341,qs),
(375,341,o),
(375,337,qs),
(375,304,l),
(412,291,ls)
);
},
{
closed = 1;
nodes = (
(209,263,o),
(209,276,qs),
(209,290,o),
(228,309,o),
(242,309,qs),
(255,309,o),
(274,290,o),
(274,276,qs),
(274,263,o),
(255,243,o),
(242,243,qs),
(228,243,o)
);
},
{
closed = 1;
nodes = (
(307,149,o),
(307,147,qs),
(307,143,o),
(302,143,qs),
(264,143,l),
(245,46,o),
(199,-28,qs),
(150,-107,o),
(81,-144,qs),
(72,-148,o),
(72,-138,qs),
(72,-117,o),
(81,-96,o),
(96,-81,qs),
(185,5,o),
(213,143,q),
(180,143,ls),
(177,143,o),
(177,147,qs),
(177,149,o),
(178,151,q),
(214,199,l),
(227,192,o),
(241,192,qs),
(257,192,o),
(269,199,q),
(305,151,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
14 1 1 0 54 52 21 17 4 4 1 72 71 68 61 57 51 50 47 43 37 33 11 3 4 91 29 27 3 5 3 111 1 6 5 5 76 8 2 2 0 1 0 133 0 1 4 1 133 0 5 3 6 3 5 6 128 7 1 6 6 132 0 4 3 3 4 89 0 4 4 3 97 9 1 3 4 3 81 76 75 0 0 109 108 97 95 90 88 82 80 75 86 76 86 0 26 0 25 38 27 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 468;
}
);
note = Decoratedbracketright;
unicode = 57601;
},
{
glyphname = aleflaminitial;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,407,ls),
(112,471,o),
(146,513,qs),
(188,564,o),
(268,564,qs),
(339,564,o),
(381,524,qs),
(425,481,o),
(425,407,qs),
(425,51,ls),
(425,0,o),
(384,0,qs),
(380,0,ls),
(374,0,o),
(374,6,qs),
(374,412,ls),
(374,454,o),
(352,482,qs),
(324,518,o),
(268,518,qs),
(220,518,o),
(163,461,o),
(163,412,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
13 1 0 4 1 76 0 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 5 2 0 4 0 81 1 0 32 30 24 22 17 15 9 7 0 33 1 33 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 495;
}
);
note = aleflaminitial;
unicode = 57602;
},
{
glyphname = exclam.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,132,o),
(62,141,qs),
(59,504,ls),
(59,528,o),
(82,556,o),
(101,556,qs),
(105,556,ls),
(111,556,o),
(111,551,qs),
(108,141,l),
(107,132,o),
(98,132,qs),
(72,132,ls)
);
},
{
closed = 1;
nodes = (
(127,44,o),
(127,27,qs),
(127,9,o),
(103,-16,o),
(86,-16,qs),
(69,-16,o),
(45,9,o),
(45,27,qs),
(45,44,o),
(69,69,o),
(86,69,qs),
(103,69,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
3 2 2 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
4 1 0 0 1 97 0 1 1 23 77 5 1 2 2 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
5 1 2 0 3 2 3 101 4 1 0 0 1 97 0 1 1 23 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
14 13 1 0 20 18 13 24 14 24 7 5 0 12 1 11 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 172;
}
);
note = exclam.ar;
unicode = 57603;
},
{
glyphname = digitfoururdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,0,o),
(160,10,qs),
(160,502,ls),
(160,551,o),
(198,554,qs),
(211,556,o),
(224,556,qs),
(316,556,o),
(357,497,qs),
(359,494,o),
(361,497,qs),
(399,556,o),
(489,556,qs),
(539,556,ls),
(544,556,o),
(544,551,qs),
(544,547,ls),
(544,515,o),
(508,511,q),
(499,509,o),
(479,509,qs),
(444,507,o),
(395,472,o),
(371,431,qs),
(365,420,o),
(359,420,qs),
(354,420,o),
(347,431,qs),
(320,474,o),
(275,507,o),
(239,508,qs),
(235,508,o),
(225,509,qs),
(218,509,o),
(216,509,qs),
(211,509,o),
(211,504,qs),
(211,10,ls),
(211,0,o),
(201,0,qs),
(171,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
29 3 2 3 1 1 76 0 3 1 0 1 3 0 128 4 2 2 1 1 5 97 6 1 5 5 23 77 7 1 0 0 24 0 78 1 0 34 32 28 25 20 18 15 13 10 8 7 5 0 40 1 39 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = digitfoururdu.tab;
unicode = 57604;
},
{
glyphname = digitsevenurdu.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(443,556,o),
(446,556,qs),
(449,556,o),
(451,551,q),
(455,532,o),
(445,494,o),
(434,486,q),
(234,311,l),
(150,230,o),
(150,159,qs),
(149,112,o),
(178,81,qs),
(211,47,o),
(267,47,qs),
(554,47,ls),
(574,47,o),
(600,27,o),
(600,11,qs),
(600,7,ls),
(600,0,o),
(592,0,qs),
(265,0,ls),
(198,0,o),
(154,33,qs),
(98,76,o),
(98,157,qs),
(98,209,o),
(151,299,o),
(218,361,qs),
(440,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 24 0 78 52 54 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = digitsevenurdu.tab;
unicode = 57605;
},
{
glyphname = lam_alefvabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,527,o),
(88,534,qs),
(45,636,l),
(42,641,o),
(50,641,qs),
(73,641,o),
(84,616,qs),
(107,563,l),
(130,616,ls),
(140,641,o),
(164,641,qs),
(171,641,o),
(169,636,qs),
(126,534,ls),
(123,527,o),
(117,527,qs),
(97,527,ls)
);
},
{
closed = 1;
nodes = (
(431,556,o),
(431,550,qs),
(431,155,ls),
(431,86,o),
(396,46,qs),
(357,0,o),
(286,0,qs),
(64,0,ls),
(56,0,o),
(56,7,qs),
(56,12,ls),
(56,28,o),
(79,49,o),
(96,49,qs),
(217,49,l),
(106,384,ls),
(93,424,o),
(115,437,qs),
(122,442,o),
(130,445,qs),
(135,447,ls),
(139,448,o),
(140,443,q),
(272,49,l),
(290,49,ls),
(332,49,o),
(380,106,o),
(380,156,qs),
(380,504,ls),
(380,528,o),
(402,556,o),
(420,556,qs),
(425,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
8 1 3 0 47 1 2 3 28 1 4 2 3 76 1 1 0 3 0 133 7 1 2 3 4 3 2 4 128 8 1 3 3 23 77 5 1 4 4 6 95 0 6 6 24 6 78 18 17 0 0 43 40 36 34 25 23 17 49 18 49 0 16 0 15 36 36 9 7 24 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = lam_alefvabovear;
unicode = 57606;
},
{
glyphname = lam_alefvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,527,o),
(88,534,qs),
(45,636,l),
(42,641,o),
(50,641,qs),
(73,641,o),
(84,616,qs),
(107,563,l),
(130,616,ls),
(140,641,o),
(164,641,qs),
(171,641,o),
(169,636,qs),
(126,534,ls),
(123,527,o),
(117,527,qs),
(97,527,ls)
);
},
{
closed = 1;
nodes = (
(550,0,l),
(519,0,ls),
(438,0,o),
(400,58,q),
(361,0,o),
(280,0,qs),
(59,0,ls),
(51,0,o),
(51,7,qs),
(51,12,ls),
(51,28,o),
(73,49,o),
(91,49,qs),
(211,49,l),
(100,384,ls),
(88,424,o),
(109,437,qs),
(116,441,o),
(125,445,qs),
(129,447,ls),
(133,448,o),
(135,443,qs),
(266,49,l),
(285,49,ls),
(326,49,o),
(374,106,o),
(374,156,qs),
(374,504,ls),
(374,528,o),
(396,556,o),
(415,556,qs),
(420,556,ls),
(425,556,o),
(425,550,qs),
(425,156,ls),
(425,106,o),
(474,49,o),
(517,49,qs),
(550,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
8 1 4 0 21 1 2 4 51 1 3 2 3 76 1 1 0 4 0 133 9 1 2 4 3 4 2 3 128 0 4 4 23 77 6 5 10 3 3 3 7 97 8 1 7 7 24 7 78 18 17 0 0 54 52 50 47 43 41 32 30 25 23 17 55 18 55 0 16 0 15 36 36 11 7 24 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = lam_alefvabovear.fina;
unicode = 57607;
},
{
glyphname = lamdotabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(476,648,o),
(476,664,qs),
(476,680,o),
(497,702,o),
(513,702,qs),
(529,702,o),
(550,680,o),
(550,664,qs),
(550,648,o),
(528,626,o),
(513,626,qs),
(498,626,o)
);
},
{
closed = 1;
nodes = (
(663,0,l),
(632,0,ls),
(574,0,o),
(538,30,q),
(535,-79,o),
(472,-145,qs),
(406,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,156,ls),
(538,106,o),
(587,49,o),
(630,49,qs),
(663,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
16 1 5 3 50 1 7 2 2 76 0 5 3 2 3 5 2 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 0 3 3 23 77 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 53 51 47 45 38 36 28 26 20 18 12 54 13 54 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = lamdotabovear.fina;
unicode = 57609;
},
{
glyphname = lamdotabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,680,o),
(175,664,qs),
(175,648,o),
(153,626,o),
(138,626,qs),
(122,626,o),
(101,648,o),
(101,664,qs),
(101,680,o),
(122,702,o),
(138,702,qs),
(153,702,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
17 1 4 3 1 76 5 1 0 0 1 3 0 1 105 0 3 3 23 77 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 27 25 21 19 12 28 13 28 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = lamdotabovear.init;
unicode = 57610;
},
{
glyphname = lamdotabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,648,o),
(101,664,qs),
(101,680,o),
(122,702,o),
(138,702,qs),
(153,702,o),
(175,680,o),
(175,664,qs),
(175,648,o),
(153,626,o),
(138,626,qs),
(122,626,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
30 16 2 2 3 1 76 0 1 7 1 0 3 1 0 105 0 3 3 23 77 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 20 18 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamdotabovear.medi;
unicode = 57611;
},
{
glyphname = lamthreedotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,728,o),
(478,743,qs),
(478,758,o),
(498,778,o),
(512,778,qs),
(527,778,o),
(547,758,o),
(547,743,qs),
(547,728,o),
(527,708,o),
(512,708,qs),
(498,708,o)
);
},
{
closed = 1;
nodes = (
(429,647,o),
(429,662,qs),
(429,677,o),
(449,697,o),
(463,697,qs),
(478,697,o),
(498,677,o),
(498,662,qs),
(498,647,o),
(478,627,o),
(463,627,qs),
(449,627,o)
);
},
{
closed = 1;
nodes = (
(547,697,o),
(561,697,qs),
(576,697,o),
(596,677,o),
(596,662,qs),
(596,647,o),
(576,627,o),
(561,627,qs),
(547,627,o),
(527,647,o),
(527,662,qs),
(527,677,o)
);
},
{
closed = 1;
nodes = (
(663,0,l),
(632,0,ls),
(574,0,o),
(538,30,q),
(535,-79,o),
(472,-145,qs),
(406,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,156,ls),
(538,106,o),
(587,49,o),
(630,49,qs),
(663,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
40 1 9 7 74 1 11 6 2 76 0 9 7 6 7 9 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 0 7 7 23 77 14 1 6 6 11 97 0 11 11 24 11 78 37 36 13 12 1 0 77 75 71 69 62 60 52 50 44 42 36 78 37 78 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = lamthreedotsabovear.fina;
unicode = 57613;
},
{
glyphname = lamthreedotsabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,729,o),
(103,744,qs),
(103,758,o),
(123,778,o),
(137,778,qs),
(152,778,o),
(172,758,o),
(172,744,qs),
(172,729,o),
(152,708,o),
(137,708,qs),
(123,708,o)
);
},
{
closed = 1;
nodes = (
(54,648,o),
(54,663,qs),
(54,677,o),
(74,697,o),
(88,697,qs),
(103,697,o),
(123,677,o),
(123,663,qs),
(123,648,o),
(103,627,o),
(88,627,qs),
(74,627,o)
);
},
{
closed = 1;
nodes = (
(152,648,o),
(152,663,qs),
(152,677,o),
(172,697,o),
(186,697,qs),
(201,697,o),
(220,677,o),
(220,663,qs),
(220,648,o),
(201,627,o),
(186,627,qs),
(172,627,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
41 1 8 7 1 76 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 7 7 23 77 0 8 8 6 97 12 1 6 6 24 6 78 37 36 25 24 13 12 1 0 51 49 45 43 36 52 37 52 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = lamthreedotsabovear.init;
unicode = 57614;
},
{
glyphname = lamthreedotsabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,729,o),
(103,744,qs),
(103,758,o),
(123,778,o),
(137,778,qs),
(152,778,o),
(172,758,o),
(172,744,qs),
(172,729,o),
(152,708,o),
(137,708,qs),
(123,708,o)
);
},
{
closed = 1;
nodes = (
(54,648,o),
(54,663,qs),
(54,677,o),
(74,697,o),
(88,697,qs),
(103,697,o),
(123,677,o),
(123,663,qs),
(123,648,o),
(103,627,o),
(88,627,qs),
(74,627,o)
);
},
{
closed = 1;
nodes = (
(172,697,o),
(186,697,qs),
(201,697,o),
(220,677,o),
(220,663,qs),
(220,648,o),
(201,627,o),
(186,627,qs),
(172,627,o),
(152,648,o),
(152,663,qs),
(152,677,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
54 40 2 6 7 1 76 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 0 7 7 23 77 8 13 2 6 6 9 97 10 1 9 9 24 9 78 37 36 13 12 1 0 57 55 53 51 50 48 44 42 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamthreedotsabovear.medi;
unicode = 57615;
},
{
glyphname = lamvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,754,o),
(457,754,qs),
(481,754,o),
(491,729,qs),
(514,677,l),
(537,729,ls),
(548,754,o),
(571,754,qs),
(578,754,o),
(576,749,qs),
(533,647,ls),
(531,641,o),
(524,641,qs),
(504,641,ls),
(498,641,o),
(495,647,qs),
(452,749,l)
);
},
{
closed = 1;
nodes = (
(646,0,l),
(615,0,ls),
(557,0,o),
(521,30,q),
(518,-79,o),
(455,-145,qs),
(389,-214,o),
(282,-214,qs),
(189,-214,o),
(124,-159,qs),
(43,-91,o),
(44,34,qs),
(44,91,o),
(89,196,o),
(125,225,qs),
(132,231,o),
(139,231,qs),
(151,231,o),
(150,219,qs),
(150,216,o),
(147,211,qs),
(96,137,o),
(94,46,qs),
(92,-53,o),
(147,-111,qs),
(200,-167,o),
(282,-167,qs),
(349,-167,o),
(400,-124,qs),
(470,-66,o),
(470,46,qs),
(470,504,ls),
(470,527,o),
(493,556,o),
(511,556,qs),
(516,556,ls),
(521,556,o),
(521,550,qs),
(521,156,ls),
(521,106,o),
(570,49,o),
(613,49,qs),
(646,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
11 1 0 1 21 1 6 4 55 1 8 3 3 76 2 1 1 0 1 133 0 0 4 0 133 0 6 4 3 4 6 3 128 0 5 0 7 5 7 101 0 4 4 23 77 9 1 3 3 8 97 0 8 8 24 8 78 18 17 58 56 52 50 43 41 33 31 25 23 17 59 18 59 36 35 49 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = lamvabovear.fina;
unicode = 57617;
},
{
glyphname = lamvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,747,qs),
(156,646,ls),
(153,639,o),
(147,639,qs),
(127,639,ls),
(121,639,o),
(118,646,qs),
(75,747,ls),
(72,753,o),
(80,753,qs),
(104,753,o),
(114,728,qs),
(137,675,l),
(160,728,ls),
(171,753,o),
(194,753,qs),
(201,753,o)
);
},
{
closed = 1;
nodes = (
(163,556,o),
(163,551,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
3 1 2 0 31 1 4 3 2 76 1 6 2 0 2 0 133 0 2 3 2 133 7 1 3 3 23 77 0 4 4 5 97 0 5 5 24 5 78 18 17 1 0 27 25 24 22 17 33 18 33 12 10 7 5 0 16 1 16 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = lamvabovear.init;
unicode = 57618;
},
{
glyphname = lamvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,753,o),
(80,753,qs),
(104,753,o),
(114,728,qs),
(137,675,l),
(160,728,ls),
(171,753,o),
(194,753,qs),
(201,753,o),
(199,747,qs),
(156,646,ls),
(153,639,o),
(147,639,qs),
(127,639,ls),
(121,639,o),
(118,646,qs),
(75,747,ls)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
11 1 0 1 35 21 2 3 4 2 76 2 1 1 0 1 133 0 0 4 0 133 0 4 4 23 77 5 8 2 3 3 6 97 7 1 6 6 24 6 78 18 17 38 36 34 32 31 29 25 23 17 39 18 39 36 36 33 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = lamvabovear.medi;
unicode = 57619;
},
{
glyphname = perthousand.ar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,0,o),
(56,8,qs),
(338,527,ls),
(354,556,o),
(372,556,qs),
(395,556,ls),
(402,556,o),
(399,548,q),
(103,6,ls),
(100,0,o),
(95,0,qs),
(60,0,ls)
);
},
{
closed = 1;
nodes = (
(192,493,o),
(192,477,qs),
(192,461,o),
(171,439,o),
(156,439,qs),
(140,439,o),
(119,461,o),
(119,477,qs),
(119,493,o),
(140,514,o),
(156,514,qs),
(171,514,o)
);
},
{
closed = 1;
nodes = (
(307,45,o),
(307,29,qs),
(307,14,o),
(286,-8,o),
(271,-8,qs),
(255,-8,o),
(234,14,o),
(234,29,qs),
(234,45,o),
(255,67,o),
(271,67,qs),
(286,67,o)
);
},
{
closed = 1;
nodes = (
(470,45,o),
(470,29,qs),
(470,14,o),
(449,-8,o),
(434,-8,qs),
(418,-8,o),
(397,14,o),
(397,29,qs),
(397,45,o),
(418,67,o),
(434,67,qs),
(449,67,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
0 0 2 0 133 8 1 1 4 5 4 1 5 128 9 1 2 0 3 4 2 3 105 11 6 10 3 4 1 5 4 89 11 6 10 3 4 4 5 97 7 1 5 4 5 81 37 36 25 24 13 12 0 0 43 41 36 47 37 47 31 29 24 35 25 35 19 17 12 23 13 23 0 11 0 10 52 12 6 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = perthousand.ar;
unicode = 57620;
},
{
glyphname = rehdotbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
},
{
closed = 1;
nodes = (
(82,-309,o),
(82,-325,qs),
(82,-341,o),
(60,-363,o),
(45,-363,qs),
(30,-363,o),
(8,-341,o),
(8,-325,qs),
(8,-309,o),
(30,-287,o),
(45,-287,qs),
(60,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
4 1 0 1 25 1 5 0 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 6 2 4 105 9 1 6 0 7 6 7 101 8 1 0 0 5 97 0 5 5 24 5 78 31 30 1 0 37 35 30 41 31 41 28 26 23 21 17 15 13 11 8 6 0 29 1 29 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = rehdotbelowar.fina;
unicode = 57621;
},
{
glyphname = rehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,547,o),
(96,547,qs),
(119,547,o),
(130,522,qs),
(153,469,l),
(176,522,ls),
(186,547,o),
(209,547,qs),
(217,547,o),
(214,541,qs),
(172,439,ls),
(169,433,o),
(163,433,qs),
(143,433,ls),
(136,433,o),
(134,439,qs),
(91,541,ls)
);
},
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 21 1 3 4 42 1 8 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 0 1 4 1 0 4 128 0 4 3 1 4 3 126 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 2 1 1 1 23 77 9 1 3 3 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 0 6 8 5 8 6 5 128 0 5 0 7 5 7 101 9 1 3 3 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
18 17 45 43 40 38 34 32 30 28 25 23 17 46 18 46 36 36 33 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = rehvabovear.fina;
unicode = 57623;
},
{
glyphname = rehvbelowar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
},
{
closed = 1;
nodes = (
(104,-298,qs),
(62,-399,ls),
(59,-406,o),
(53,-406,qs),
(33,-406,ls),
(26,-406,o),
(24,-399,q),
(-19,-298,ls),
(-22,-292,o),
(-14,-292,qs),
(9,-292,o),
(20,-317,qs),
(43,-370,l),
(66,-317,ls),
(76,-292,o),
(99,-292,qs),
(107,-292,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
4 1 0 1 25 1 5 0 33 1 8 6 3 76 0 1 0 1 133 0 3 5 2 5 3 2 128 7 10 2 6 4 8 4 6 8 128 0 8 8 132 0 2 0 4 6 2 4 105 9 1 0 0 5 97 0 5 5 24 5 78 31 30 1 0 42 40 37 35 30 46 31 46 28 26 23 21 17 15 13 11 8 6 0 29 1 29 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = rehvbelowar.fina;
unicode = 57624;
},
{
glyphname = smalltahar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,542,o),
(260,502,o),
(260,468,qs),
(260,433,o),
(218,393,o),
(182,393,qs),
(62,393,ls),
(59,393,o),
(59,397,qs),
(59,399,ls),
(59,424,o),
(92,424,qs),
(103,424,l),
(103,563,ls),
(103,603,o),
(131,603,qs),
(133,603,ls),
(136,603,o),
(136,599,qs),
(136,542,l),
(182,542,ls)
);
},
{
closed = 1;
nodes = (
(203,424,o),
(227,449,o),
(227,468,qs),
(227,486,o),
(203,512,o),
(186,512,qs),
(136,512,l),
(136,424,l),
(186,424,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
1 1 3 0 10 1 2 1 2 76 0 0 3 0 133 6 1 3 0 4 1 3 4 105 7 5 2 1 2 2 1 89 7 5 2 1 1 2 95 0 2 1 2 79 21 21 0 0 21 29 21 28 24 22 0 20 0 19 36 34 35 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 314;
}
);
note = smalltahar;
unicode = 57625;
},
{
glyphname = threedotsbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-97,o),
(121,-112,qs),
(121,-127,o),
(101,-147,o),
(87,-147,qs),
(73,-147,o),
(53,-127,o),
(53,-112,qs),
(53,-97,o),
(73,-77,o),
(87,-77,qs),
(101,-77,o)
);
},
{
closed = 1;
nodes = (
(219,-97,o),
(219,-112,qs),
(219,-127,o),
(199,-147,o),
(185,-147,qs),
(170,-147,o),
(151,-127,o),
(151,-112,qs),
(151,-97,o),
(170,-77,o),
(185,-77,qs),
(199,-77,o)
);
},
{
closed = 1;
nodes = (
(170,-178,o),
(170,-193,qs),
(170,-208,o),
(150,-228,o),
(136,-228,qs),
(122,-228,o),
(102,-208,o),
(102,-193,qs),
(102,-178,o),
(122,-158,o),
(136,-158,qs),
(150,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
7 2 6 3 0 3 1 1 4 0 1 105 8 1 4 5 5 4 89 8 1 4 4 5 97 0 5 4 5 81 25 24 13 12 1 0 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = threedotsbelowar;
unicode = 57627;
},
{
glyphname = twodotsabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,449,o),
(48,464,qs),
(48,478,o),
(68,498,o),
(82,498,qs),
(96,498,o),
(116,478,o),
(116,464,qs),
(116,449,o),
(96,428,o),
(82,428,qs),
(68,428,o)
);
},
{
closed = 1;
nodes = (
(146,449,o),
(146,464,qs),
(146,478,o),
(165,498,o),
(180,498,qs),
(194,498,o),
(214,478,o),
(214,464,qs),
(214,449,o),
(194,428,o),
(180,428,qs),
(165,428,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 1 0 0 1 89 3 1 1 1 0 97 5 2 4 3 0 1 0 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = twodotsabovear;
unicode = 57628;
},
{
glyphname = twodotsbelow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(121,-97,o),
(121,-112,qs),
(121,-127,o),
(101,-147,o),
(87,-147,qs),
(73,-147,o),
(53,-127,o),
(53,-112,qs),
(53,-97,o),
(73,-77,o),
(87,-77,qs),
(101,-77,o)
);
},
{
closed = 1;
nodes = (
(219,-97,o),
(219,-112,qs),
(219,-127,o),
(199,-147,o),
(185,-147,qs),
(170,-147,o),
(151,-127,o),
(151,-112,qs),
(151,-97,o),
(170,-77,o),
(185,-77,qs),
(199,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
5 2 4 3 0 1 1 0 89 5 2 4 3 0 0 1 97 3 1 1 0 1 81 13 12 1 0 19 17 12 23 13 23 7 5 0 11 1 11 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = twodotsbelow;
unicode = 57629;
},
{
glyphname = uni06440671;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(51,577,qs),
(61,575,ls),
(63,575,o),
(66,578,qs),
(67,579,ls),
(89,611,o),
(123,634,o),
(145,634,qs),
(170,634,o),
(202,604,o),
(202,581,qs),
(202,554,o),
(165,519,o),
(137,519,qs),
(121,519,o),
(85,533,q),
(84,534,o),
(82,535,qs),
(54,546,o),
(44,546,qs),
(33,546,o),
(24,533,qs),
(22,530,o),
(19,526,qs),
(16,521,o),
(15,519,q),
(10,513,o),
(6,520,qs),
(0,530,o),
(2,544,qs),
(7,579,o),
(39,579,qs),
(44,579,o)
);
},
{
closed = 1;
nodes = (
(165,580,qs),
(165,602,o),
(144,602,qs),
(125,602,o),
(98,563,q),
(121,552,o),
(137,552,qs),
(165,552,o)
);
},
{
closed = 1;
nodes = (
(56,0,o),
(56,7,qs),
(56,12,ls),
(56,28,o),
(78,49,o),
(96,49,qs),
(217,49,l),
(105,384,ls),
(93,424,o),
(114,437,qs),
(121,442,o),
(130,445,qs),
(134,447,ls),
(138,448,o),
(140,443,qs),
(272,49,l),
(290,49,ls),
(331,49,o),
(379,106,o),
(379,156,qs),
(379,504,ls),
(379,528,o),
(401,556,o),
(420,556,qs),
(425,556,ls),
(430,556,o),
(430,550,qs),
(430,155,ls),
(430,86,o),
(396,46,qs),
(357,0,o),
(285,0,qs),
(64,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
35 1 4 0 46 1 1 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
35 1 7 0 46 1 1 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 3 0 5 0 3 5 105 10 1 0 0 1 2 0 1 105 0 2 2 4 97 7 11 2 4 4 23 77 9 1 8 8 6 95 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 3 0 5 0 3 5 105 10 1 0 0 1 2 0 1 105 0 7 7 23 77 0 2 2 4 97 11 1 4 4 23 77 9 1 8 8 6 95 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
42 41 34 33 1 0 68 66 57 55 50 48 41 73 42 72 38 36 33 40 34 40 25 23 19 17 13 11 0 32 1 32 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uni06440671;
unicode = 57630;
},
{
glyphname = uni06440671.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,533,q),
(84,534,o),
(82,535,qs),
(54,546,o),
(44,546,qs),
(33,546,o),
(24,533,qs),
(22,530,o),
(19,526,qs),
(16,521,o),
(15,519,q),
(10,513,o),
(6,520,qs),
(0,530,o),
(2,544,qs),
(7,579,o),
(39,579,qs),
(44,579,o),
(51,577,qs),
(61,575,ls),
(63,575,o),
(66,578,qs),
(67,579,ls),
(89,611,o),
(123,634,o),
(145,634,qs),
(170,634,o),
(202,604,o),
(202,581,qs),
(202,554,o),
(165,519,o),
(137,519,qs),
(121,519,o)
);
},
{
closed = 1;
nodes = (
(98,563,q),
(121,552,o),
(137,552,qs),
(165,552,o),
(165,580,qs),
(165,602,o),
(144,602,qs),
(125,602,o)
);
},
{
closed = 1;
nodes = (
(555,0,l),
(524,0,ls),
(443,0,o),
(405,58,q),
(367,0,o),
(285,0,qs),
(64,0,ls),
(56,0,o),
(56,7,qs),
(56,12,ls),
(56,28,o),
(78,49,o),
(96,49,qs),
(217,49,l),
(105,384,ls),
(93,424,o),
(114,437,qs),
(121,442,o),
(130,445,qs),
(134,447,ls),
(138,448,o),
(140,443,qs),
(272,49,l),
(290,49,ls),
(331,49,o),
(379,106,o),
(379,156,qs),
(379,504,ls),
(379,528,o),
(401,556,o),
(420,556,qs),
(425,556,ls),
(430,556,o),
(430,550,qs),
(430,156,ls),
(430,106,o),
(479,49,o),
(522,49,qs),
(555,49,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
39 1 5 2 45 1 3 5 75 1 6 0 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
39 1 7 2 45 1 3 5 75 1 6 0 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 1 13 1 4 2 1 4 105 0 2 0 3 0 2 3 105 12 1 0 0 5 97 7 1 5 5 23 77 9 8 14 3 6 6 10 97 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 1 13 1 4 2 1 4 105 0 2 0 3 0 2 3 105 0 7 7 23 77 12 1 0 0 5 97 0 5 5 23 77 9 8 14 3 6 6 10 97 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
42 41 34 33 1 0 78 76 74 71 67 65 56 54 49 47 41 79 42 79 38 36 33 40 34 40 28 26 16 14 7 5 0 32 1 32 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uni06440671.fina;
unicode = 57631;
},
{
glyphname = uni0651064B.1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,767,qs),
(46,791,o),
(75,796,qs),
(95,799,o),
(125,799,qs),
(179,799,ls),
(207,799,o),
(207,774,qs),
(207,771,ls),
(207,766,o),
(200,766,qs),
(116,766,ls),
(85,766,o),
(61,758,q),
(60,757,o),
(58,757,q),
(52,754,o),
(51,754,qs),
(46,754,o)
);
},
{
closed = 1;
nodes = (
(46,685,qs),
(46,709,o),
(75,714,qs),
(95,718,o),
(125,718,qs),
(179,718,ls),
(207,718,o),
(207,692,qs),
(207,689,ls),
(207,684,o),
(200,684,qs),
(116,684,ls),
(85,684,o),
(61,676,q),
(60,676,o),
(58,675,qs),
(52,673,o),
(51,673,qs),
(46,673,o)
);
},
{
closed = 1;
nodes = (
(238,605,o),
(238,599,qs),
(238,546,ls),
(238,512,o),
(204,473,o),
(173,472,qs),
(143,471,o),
(126,491,q),
(107,471,o),
(81,472,qs),
(15,473,o),
(15,546,qs),
(15,564,ls),
(15,583,o),
(21,593,qs),
(29,605,o),
(44,605,qs),
(47,605,ls),
(52,605,o),
(52,599,qs),
(52,540,ls),
(52,506,o),
(80,506,qs),
(108,506,o),
(108,540,qs),
(108,564,ls),
(108,583,o),
(115,593,qs),
(122,605,o),
(137,605,qs),
(141,605,ls),
(145,605,o),
(145,599,qs),
(145,540,ls),
(145,506,o),
(173,506,qs),
(201,506,o),
(201,540,qs),
(201,564,ls),
(201,583,o),
(208,593,qs),
(216,605,o),
(231,605,qs),
(233,605,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
79 61 48 3 5 4 73 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
8 6 11 3 4 2 5 5 4 114 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
8 6 11 3 4 2 5 2 4 5 128 0 1 0 0 3 1 0 103 0 3 0 2 4 3 2 103 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
39 38 76 74 72 70 65 63 59 57 52 50 46 44 38 81 39 81 51 58 51 53 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0651064B.1;
unicode = 57632;
},
{
glyphname = uni06510652;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(91,710,o),
(91,736,qs),
(91,761,o),
(123,794,o),
(149,794,qs),
(174,794,o),
(206,761,o),
(206,736,qs),
(206,710,o),
(174,678,o),
(149,678,qs),
(124,678,o)
);
},
{
closed = 1;
nodes = (
(119,751,o),
(119,736,qs),
(119,721,o),
(136,702,o),
(149,702,qs),
(162,702,o),
(179,721,o),
(179,736,qs),
(179,751,o),
(162,770,o),
(149,770,qs),
(136,770,o)
);
},
{
closed = 1;
nodes = (
(260,604,o),
(260,599,qs),
(260,545,ls),
(260,511,o),
(226,472,o),
(195,471,qs),
(165,470,o),
(148,491,q),
(129,470,o),
(103,471,qs),
(37,473,o),
(37,545,qs),
(37,563,ls),
(37,582,o),
(43,592,qs),
(51,604,o),
(66,604,qs),
(69,604,ls),
(74,604,o),
(74,599,qs),
(74,539,ls),
(74,505,o),
(102,505,qs),
(130,505,o),
(130,539,qs),
(130,563,ls),
(130,582,o),
(137,593,qs),
(144,604,o),
(159,604,qs),
(163,604,ls),
(167,604,o),
(167,599,qs),
(167,539,ls),
(167,505,o),
(195,505,qs),
(223,505,o),
(223,539,qs),
(223,563,ls),
(223,582,o),
(230,593,qs),
(238,604,o),
(253,604,qs),
(255,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
65 47 34 3 5 4 59 1 9 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
8 6 13 3 4 0 5 5 4 114 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
8 6 13 3 4 0 5 0 4 5 128 0 1 12 1 2 3 1 2 105 0 3 11 1 0 4 3 0 105 7 1 5 9 9 5 89 7 1 5 5 9 98 10 1 9 5 9 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
25 24 13 12 1 0 62 60 58 56 51 49 45 43 38 36 32 30 24 67 25 67 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 292;
}
);
note = uni06510652;
unicode = 57633;
},
{
glyphname = uni0660.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,244,o),
(391,239,qs),
(391,234,o),
(388,231,qs),
(333,176,l),
(331,173,o),
(326,173,qs),
(322,173,o),
(318,176,q),
(263,231,ls),
(260,234,o),
(260,239,qs),
(260,244,o),
(263,246,q),
(318,301,ls),
(321,304,o),
(326,304,qs),
(330,304,o),
(333,301,qs),
(388,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
17 7 2 0 74 0 0 0 118 43 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0660.tab;
unicode = 57634;
},
{
glyphname = uni0661.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,0,o),
(300,8,qs),
(300,504,ls),
(300,527,o),
(323,556,o),
(341,556,qs),
(346,556,ls),
(351,556,o),
(351,550,qs),
(351,8,ls),
(351,0,o),
(343,0,qs),
(308,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 0 1 1 76 0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 5 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0661.tab;
unicode = 57635;
},
{
glyphname = uni0662.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,0,o),
(209,8,qs),
(209,377,ls),
(209,556,o),
(365,556,qs),
(455,556,ls),
(459,556,o),
(459,551,qs),
(459,547,ls),
(459,530,o),
(435,509,o),
(415,509,qs),
(366,509,ls),
(260,509,o),
(260,378,qs),
(260,8,ls),
(260,0,o),
(252,0,qs),
(217,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 7 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0662.tab;
unicode = 57636;
},
{
glyphname = uni0663.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(594,558,o),
(594,552,qs),
(594,441,ls),
(594,363,o),
(560,316,qs),
(522,264,o),
(449,264,qs),
(366,264,o),
(331,334,q),
(295,264,o),
(212,264,qs),
(155,264,o),
(118,298,q),
(118,8,ls),
(118,0,o),
(109,0,qs),
(75,0,ls),
(67,0,o),
(67,8,qs),
(66,504,l),
(68,556,o),
(107,556,qs),
(112,556,ls),
(117,556,o),
(117,551,qs),
(117,442,ls),
(117,313,o),
(212,313,qs),
(255,313,o),
(280,344,qs),
(307,378,o),
(307,442,qs),
(307,507,ls),
(307,528,o),
(328,557,o),
(344,557,qs),
(349,557,ls),
(354,557,o),
(354,551,qs),
(354,442,ls),
(354,380,o),
(404,313,o),
(449,313,qs),
(492,313,o),
(516,343,qs),
(544,377,o),
(544,441,qs),
(544,507,ls),
(544,530,o),
(566,558,o),
(584,558,qs),
(589,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
49 42 26 12 4 1 0 38 1 6 1 2 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 45 43 41 39 36 33 30 28 24 22 16 14 9 7 0 51 1 51 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0663.tab;
unicode = 57637;
},
{
glyphname = uni0664.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,256,o),
(236,198,o),
(236,154,qs),
(236,105,o),
(265,77,qs),
(297,47,o),
(353,47,qs),
(430,47,ls),
(450,47,o),
(476,27,o),
(476,11,qs),
(476,7,ls),
(476,0,o),
(468,0,qs),
(353,0,ls),
(286,0,o),
(242,30,qs),
(184,70,o),
(184,156,qs),
(184,196,o),
(228,264,o),
(266,282,q),
(191,318,o),
(191,412,qs),
(191,476,o),
(230,517,qs),
(274,564,o),
(349,564,qs),
(391,564,o),
(451,534,o),
(456,512,qs),
(458,497,o),
(447,497,qs),
(443,497,o),
(436,500,qs),
(394,518,o),
(356,518,qs),
(310,518,o),
(278,492,qs),
(243,462,o),
(243,414,qs),
(243,365,o),
(271,336,qs),
(302,303,o),
(362,303,qs),
(430,303,ls),
(450,303,o),
(476,283,o),
(476,267,qs),
(476,263,ls),
(476,256,o),
(468,256,qs),
(352,256,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 39 36 25 23 20 18 16 14 8 5 0 52 1 51 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0664.tab;
unicode = 57638;
},
{
glyphname = uni0665.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(490,179,qs),
(490,176,ls),
(490,95,o),
(452,46,qs),
(408,-10,o),
(325,-10,qs),
(254,-10,o),
(211,33,qs),
(161,83,o),
(161,176,qs),
(161,192,o),
(171,387,qs),
(175,463,o),
(211,510,qs),
(253,564,o),
(325,564,qs),
(389,564,o),
(429,523,qs),
(475,476,o),
(479,388,qs),
(488,231,o)
);
},
{
closed = 1;
nodes = (
(404,68,qs),
(438,104,o),
(438,177,q),
(428,384,ls),
(425,446,o),
(370,517,o),
(325,517,qs),
(283,517,o),
(256,485,qs),
(226,449,o),
(223,383,qs),
(213,177,l),
(213,110,o),
(271,37,o),
(325,37,qs),
(375,37,o)
);
},
{
closed = 1;
nodes = (
(490,176,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
22 21 30 28 21 36 22 36 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0665.tab;
unicode = 57639;
},
{
glyphname = uni0666.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(392,0,o),
(392,8,qs),
(392,378,ls),
(392,509,o),
(286,509,qs),
(237,509,ls),
(217,509,o),
(193,530,o),
(193,547,qs),
(193,551,ls),
(193,556,o),
(197,556,qs),
(287,556,ls),
(443,556,o),
(443,377,qs),
(443,8,ls),
(443,0,o),
(435,0,qs),
(400,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
8 1 2 1 1 76 0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 14 11 6 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0666.tab;
unicode = 57640;
},
{
glyphname = uni0667.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,102,q),
(462,547,ls),
(463,556,o),
(469,556,qs),
(472,556,ls),
(490,556,o),
(510,528,o),
(506,508,qs),
(442,116,ls),
(422,-7,o),
(328,-7,qs),
(235,-7,o),
(213,116,qs),
(149,508,ls),
(146,528,o),
(166,556,o),
(184,556,qs),
(187,556,ls),
(193,556,o),
(194,547,qs),
(266,102,l),
(281,41,o),
(328,41,qs),
(375,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0667.tab;
unicode = 57641;
},
{
glyphname = uni0668.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,0,o),
(142,12,q),
(212,442,ls),
(231,564,o),
(326,564,qs),
(421,564,o),
(440,442,qs),
(510,12,l),
(511,0,o),
(501,0,qs),
(470,0,ls),
(460,0,o),
(459,11,qs),
(388,456,l),
(373,516,o),
(326,516,qs),
(301,516,o),
(272,488,o),
(264,456,q),
(193,11,ls),
(192,0,o),
(182,0,qs),
(151,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 13 10 7 5 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0668.tab;
unicode = 57642;
},
{
glyphname = uni0669.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,522,qs),
(483,470,o),
(483,382,qs),
(483,8,ls),
(483,0,o),
(475,0,qs),
(440,0,ls),
(431,0,o),
(431,8,qs),
(431,201,l),
(320,201,ls),
(255,201,o),
(210,243,qs),
(157,294,o),
(157,382,qs),
(157,459,o),
(199,509,qs),
(245,564,o),
(320,564,qs),
(386,564,o)
);
},
{
closed = 1;
nodes = (
(244,485,qs),
(209,447,o),
(209,382,qs),
(209,327,o),
(236,290,qs),
(268,248,o),
(320,248,qs),
(431,248,l),
(431,383,ls),
(431,439,o),
(404,476,qs),
(372,517,o),
(320,517,qs),
(275,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0669.tab;
unicode = 57643;
},
{
glyphname = uni066E.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
4 1 3 1 32 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 2 6 2 0 0 4 98 5 1 4 4 24 4 78 1 0 35 33 31 28 23 21 15 12 8 6 0 36 1 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uni066E.fina;
unicode = 57644;
},
{
glyphname = uni066E.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 7 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uni066E.init;
unicode = 57645;
},
{
glyphname = uni066E.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 6 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uni066E.medi;
unicode = 57646;
},
{
glyphname = uni06A1.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(912,-1,l),
(696,-1,ls),
(649,-1,o),
(629,14,q),
(611,-1,o),
(564,-1,qs),
(364,-1,l),
(364,0,l),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(513,49,l),
(513,48,l),
(551,48,l),
(514,67,o),
(466,149,o),
(466,195,qs),
(465,260,o),
(503,309,qs),
(551,368,o),
(629,368,qs),
(699,368,o),
(744,321,qs),
(795,271,o),
(793,195,qs),
(792,148,o),
(745,67,o),
(708,48,q),
(912,48,l)
);
},
{
closed = 1;
nodes = (
(545,116,qs),
(578,71,o),
(629,58,q),
(677,70,o),
(742,150,o),
(742,195,qs),
(741,248,o),
(712,283,qs),
(680,321,o),
(629,321,qs),
(586,321,o),
(555,291,qs),
(518,256,o),
(518,195,qs),
(517,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
53 1 1 2 37 1 3 1 2 76 0 2 6 1 6 2 1 128 0 0 0 6 2 0 6 105 7 5 2 1 1 3 96 4 1 3 3 24 3 78 0 0 47 45 0 41 0 41 34 85 38 70 38 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uni06A1.fina;
unicode = 57647;
},
{
glyphname = uni06A1.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,322,qs),
(425,269,o),
(425,183,qs),
(425,111,o),
(387,60,qs),
(343,2,o),
(268,0,qs),
(-4,0,l),
(-4,49,l),
(152,49,l),
(99,95,o),
(99,183,qs),
(99,258,o),
(139,309,qs),
(185,368,o),
(262,368,qs),
(329,368,o)
);
},
{
closed = 1;
nodes = (
(340,85,qs),
(374,124,o),
(374,184,qs),
(374,237,o),
(348,274,qs),
(316,321,o),
(262,321,qs),
(215,321,o),
(184,285,qs),
(151,245,o),
(151,184,qs),
(151,132,o),
(177,95,qs),
(208,49,o),
(262,49,qs),
(310,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 0 0 4 1 0 4 105 6 3 2 1 1 2 95 0 2 2 24 2 78 18 17 1 0 26 24 17 32 18 32 10 8 7 6 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = uni06A1.init;
unicode = 57648;
},
{
glyphname = uni06A1.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(544,0,l),
(328,0,ls),
(281,0,o),
(262,15,q),
(243,0,o),
(196,0,qs),
(-4,0,l),
(-4,49,l),
(183,49,l),
(146,68,o),
(99,149,o),
(98,196,qs),
(97,261,o),
(136,309,qs),
(183,368,o),
(262,368,qs),
(331,368,o),
(377,322,qs),
(427,271,o),
(425,196,qs),
(425,149,o),
(377,68,o),
(340,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(177,117,qs),
(210,72,o),
(262,58,q),
(309,71,o),
(374,151,o),
(374,196,qs),
(373,248,o),
(344,283,qs),
(312,321,o),
(262,321,qs),
(218,321,o),
(187,292,qs),
(150,256,o),
(150,196,qs),
(149,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
35 1 1 5 19 1 2 1 2 76 0 0 0 5 1 0 5 105 6 4 2 1 1 2 95 3 1 2 2 24 2 78 0 0 29 27 0 23 0 23 34 33 22 38 7 7 26 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uni06A1.medi;
unicode = 57649;
},
{
glyphname = uni06C3.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,477,o),
(154,492,qs),
(154,506,o),
(174,526,o),
(188,526,qs),
(203,526,o),
(223,506,o),
(223,492,qs),
(223,477,o),
(203,456,o),
(188,456,qs),
(174,456,o)
);
},
{
closed = 1;
nodes = (
(252,477,o),
(252,492,qs),
(252,506,o),
(272,526,o),
(286,526,qs),
(301,526,o),
(321,506,o),
(321,492,qs),
(321,477,o),
(301,456,o),
(286,456,qs),
(272,456,o)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 6 5 46 1 4 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
52 51 25 24 13 12 1 0 60 58 51 64 52 64 49 47 45 43 37 35 32 30 24 50 25 50 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uni06C3.fina;
unicode = 57650;
},
{
glyphname = uni06F0.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,244,o),
(391,239,qs),
(391,235,o),
(388,231,q),
(333,176,l),
(331,173,o),
(326,173,qs),
(323,173,o),
(318,176,q),
(263,231,ls),
(260,234,o),
(260,239,qs),
(260,243,o),
(263,247,q),
(318,301,l),
(322,304,o),
(326,304,qs),
(331,304,o),
(333,301,q),
(388,247,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 43 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F0.tab;
unicode = 57651;
},
{
glyphname = uni06F1.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,0,o),
(300,8,qs),
(300,504,ls),
(300,527,o),
(323,556,o),
(341,556,qs),
(346,556,ls),
(351,556,o),
(351,550,qs),
(351,8,ls),
(351,0,o),
(343,0,qs),
(308,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 0 1 1 76 0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 5 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F1.tab;
unicode = 57652;
},
{
glyphname = uni06F2.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,0,o),
(209,8,qs),
(209,377,ls),
(209,556,o),
(365,556,qs),
(455,556,ls),
(459,556,o),
(459,551,qs),
(459,547,ls),
(459,530,o),
(435,509,o),
(415,509,qs),
(366,509,ls),
(260,509,o),
(260,378,qs),
(260,8,ls),
(260,0,o),
(252,0,qs),
(217,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 7 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F2.tab;
unicode = 57653;
},
{
glyphname = uni06F3.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(594,558,o),
(594,552,qs),
(594,441,ls),
(594,363,o),
(560,316,qs),
(522,264,o),
(449,264,qs),
(366,264,o),
(331,334,q),
(295,264,o),
(212,264,qs),
(155,264,o),
(118,298,q),
(118,8,ls),
(118,0,o),
(109,0,qs),
(75,0,ls),
(67,0,o),
(67,8,qs),
(66,504,ls),
(66,556,o),
(107,556,qs),
(112,556,ls),
(117,556,o),
(117,551,qs),
(117,442,ls),
(117,313,o),
(212,313,qs),
(255,313,o),
(280,344,qs),
(307,378,o),
(307,442,qs),
(307,507,ls),
(307,528,o),
(328,557,o),
(344,557,qs),
(349,557,ls),
(354,557,o),
(354,551,qs),
(354,442,ls),
(354,380,o),
(404,313,o),
(449,313,qs),
(492,313,o),
(516,343,qs),
(544,377,o),
(544,441,qs),
(544,507,ls),
(544,530,o),
(566,558,o),
(584,558,qs),
(589,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
49 42 26 12 4 1 0 38 1 6 1 2 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 45 43 41 39 36 33 30 28 24 22 16 14 9 7 0 51 1 51 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F3.tab;
unicode = 57654;
},
{
glyphname = uni06F4.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(486,306,qs),
(480,280,o),
(415,246,o),
(371,246,qs),
(291,247,o),
(244,291,q),
(243,10,ls),
(243,0,o),
(233,0,qs),
(203,0,ls),
(192,0,o),
(192,10,qs),
(192,504,ls),
(192,527,o),
(215,556,o),
(233,556,qs),
(238,556,ls),
(243,556,o),
(243,550,qs),
(243,511,l),
(285,565,o),
(361,564,qs),
(401,564,o),
(456,533,o),
(459,509,qs),
(462,496,o),
(450,496,qs),
(448,496,o),
(443,498,qs),
(440,499,o),
(439,499,q),
(398,517,o),
(363,516,qs),
(315,516,o),
(281,482,qs),
(245,446,o),
(244,398,qs),
(244,396,o),
(244,388,qs),
(244,355,o),
(274,328,qs),
(312,293,o),
(374,292,qs),
(415,290,o),
(463,313,q),
(474,317,o),
(478,317,qs),
(490,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 3 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 4 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 3 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 4 27 1 2 1 2 76 41 1 0 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 52 36 35 36 40 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F4.tab;
unicode = 57655;
},
{
glyphname = uni06F5.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(186,22,qs),
(158,58,o),
(160,139,qs),
(160,144,o),
(172,386,qs),
(177,463,o),
(213,510,qs),
(255,564,o),
(327,564,qs),
(390,564,o),
(431,522,qs),
(476,474,o),
(482,386,qs),
(495,145,o),
(495,139,qs),
(496,60,o),
(449,-10,o),
(394,-10,qs),
(352,-10,o),
(329,19,q),
(328,21,o),
(325,19,q),
(302,-10,o),
(260,-10,qs),
(210,-10,o)
);
},
{
closed = 1;
nodes = (
(318,85,qs),
(320,97,o),
(327,97,qs),
(335,97,o),
(336,85,q),
(345,38,o),
(385,38,qs),
(444,38,o),
(443,142,qs),
(443,165,o),
(431,383,qs),
(427,446,o),
(372,517,o),
(327,518,qs),
(285,517,o),
(259,486,qs),
(228,451,o),
(224,383,qs),
(212,174,o),
(212,142,qs),
(211,87,o),
(238,38,o),
(269,38,qs),
(309,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 46 44 42 40 35 33 25 48 26 48 16 14 7 5 0 24 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F5.tab;
unicode = 57656;
},
{
glyphname = uni06F6.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(489,292,o),
(469,284,q),
(372,253,o),
(306,181,qs),
(249,119,o),
(203,8,qs),
(200,0,o),
(192,0,qs),
(157,0,ls),
(148,0,o),
(150,9,qs),
(165,70,o),
(246,200,o),
(294,243,q),
(238,257,o),
(205,300,qs),
(171,345,o),
(171,407,qs),
(171,474,o),
(210,517,qs),
(254,564,o),
(328,564,qs),
(367,564,o),
(424,534,o),
(428,511,qs),
(431,497,o),
(419,497,qs),
(416,497,o),
(411,499,qs),
(409,500,o),
(408,500,q),
(369,517,o),
(333,517,qs),
(289,517,o),
(258,490,qs),
(222,458,o),
(222,405,qs),
(222,362,o),
(249,327,qs),
(282,284,o),
(338,278,q),
(414,326,o),
(492,342,q),
(500,345,o),
(503,336,qs),
(509,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
31 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
59 35 36 43 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F6.tab;
unicode = 57657;
},
{
glyphname = uni06F7.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,102,q),
(462,547,ls),
(463,556,o),
(469,556,qs),
(472,556,ls),
(490,556,o),
(510,528,o),
(506,508,qs),
(442,116,ls),
(422,-7,o),
(328,-7,qs),
(235,-7,o),
(213,116,qs),
(149,508,ls),
(146,528,o),
(166,556,o),
(184,556,qs),
(187,556,ls),
(193,556,o),
(194,547,qs),
(266,102,l),
(281,41,o),
(328,41,qs),
(375,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F7.tab;
unicode = 57658;
},
{
glyphname = uni06F8.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(141,0,o),
(142,12,q),
(212,442,ls),
(231,564,o),
(326,564,qs),
(421,564,o),
(440,442,qs),
(510,12,l),
(511,0,o),
(501,0,qs),
(470,0,ls),
(460,0,o),
(459,11,qs),
(388,456,l),
(373,516,o),
(326,516,qs),
(301,516,o),
(272,488,o),
(264,456,q),
(193,11,ls),
(192,0,o),
(182,0,qs),
(151,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 13 10 7 5 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F8.tab;
unicode = 57659;
},
{
glyphname = uni06F9.tab;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,522,qs),
(483,470,o),
(483,382,qs),
(483,8,ls),
(483,0,o),
(475,0,qs),
(440,0,ls),
(431,0,o),
(431,8,qs),
(431,201,l),
(320,201,ls),
(255,201,o),
(210,243,qs),
(157,294,o),
(157,382,qs),
(157,459,o),
(199,509,qs),
(245,564,o),
(320,564,qs),
(386,564,o)
);
},
{
closed = 1;
nodes = (
(244,485,qs),
(209,447,o),
(209,382,qs),
(209,327,o),
(236,290,qs),
(268,248,o),
(320,248,qs),
(431,248,l),
(431,383,ls),
(431,439,o),
(404,476,qs),
(372,517,o),
(320,517,qs),
(275,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni06F9.tab;
unicode = 57660;
},
{
glyphname = uniFB58FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,321,q),
(267,341,o),
(267,367,qs),
(267,399,o),
(306,440,o),
(336,440,qs),
(358,440,o),
(390,416,o),
(392,399,qs),
(393,391,o),
(387,391,qs),
(385,391,o),
(379,394,qs),
(377,395,o),
(377,396,q),
(358,406,o),
(344,406,qs),
(326,406,o),
(304,384,o),
(304,366,qs),
(304,348,o),
(325,324,o),
(342,324,qs),
(386,324,ls),
(413,324,o),
(413,299,qs),
(413,296,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,282,o),
(264,281,qs),
(258,279,o),
(258,279,q),
(252,279,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 136 values pushed */
44 1 1 6 35 9 2 0 1 2 76 0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 19 14 2 12 15 1 13 16 12 13 106 0 9 0 11 17 9 11 105 20 1 16 0 17 16 17 101 0 7 7 5 95 8 18 2 5 5 24 5 78 115 114 103 102 40 39 121 119 114 125 115 125 109 107 102 113 103 113 100 98 94 92 86 84 76 75 66 64 61 59 55 52 48 46 39 89 40 89 35 36 36 52 37 21 7 27 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFB58FE8A;
unicode = 57661;
},
{
glyphname = uniFB58FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 97 values pushed */
5 1 5 1 1 76 0 1 5 1 133 0 5 2 5 133 14 9 2 7 10 1 8 11 7 8 106 0 4 0 6 12 4 6 105 15 1 11 0 12 11 12 101 0 2 2 0 95 3 13 2 0 0 24 0 78 76 75 64 63 1 0 82 80 75 86 76 86 70 68 63 74 64 74 61 59 55 53 47 45 37 36 27 25 22 20 16 13 9 7 0 50 1 50 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFB58FEF0;
unicode = 57662;
},
{
glyphname = uniFB58FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 125 values pushed */
5 1 5 1 1 76 0 1 5 1 133 0 5 2 5 133 18 9 2 7 10 1 8 11 7 8 106 0 4 0 6 12 4 6 105 19 1 11 0 12 13 11 12 105 21 15 20 3 13 16 1 14 13 14 101 0 2 2 0 95 3 17 2 0 0 24 0 78 100 99 88 87 76 75 64 63 1 0 106 104 99 110 100 110 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 61 59 55 53 47 45 37 36 27 25 22 20 16 13 9 7 0 50 1 50 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFB58FEF2;
unicode = 57663;
},
{
glyphname = uniFB59FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
4 1 5 1 52 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 16 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 17 1 13 0 14 13 14 101 2 15 2 0 0 3 97 8 7 2 3 3 24 3 78 82 81 70 69 1 0 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFB59FEF0;
unicode = 57664;
},
{
glyphname = uniFB59FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
},
{
closed = 1;
nodes = (
(300,-307,o),
(300,-322,qs),
(300,-337,o),
(280,-357,o),
(266,-357,qs),
(251,-357,o),
(232,-337,o),
(232,-322,qs),
(232,-307,o),
(251,-287,o),
(266,-287,qs),
(280,-287,o)
);
},
{
closed = 1;
nodes = (
(398,-307,o),
(398,-322,qs),
(398,-337,o),
(378,-357,o),
(363,-357,qs),
(349,-357,o),
(329,-337,o),
(329,-322,qs),
(329,-307,o),
(349,-287,o),
(363,-287,qs),
(378,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
4 1 5 1 52 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 20 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 21 1 13 0 14 15 13 14 105 23 17 22 3 15 18 1 16 15 16 101 2 19 2 0 0 3 97 8 7 2 3 3 24 3 78 106 105 94 93 82 81 70 69 1 0 112 110 105 116 106 116 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 24 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFB59FEF2;
unicode = 57665;
},
{
glyphname = uniFBA8FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(841,349,o),
(841,344,qs),
(841,155,ls),
(841,66,o),
(784,26,q),
(775,14,o),
(744,-30,qs),
(725,-57,o),
(720,-75,q),
(751,-81,o),
(750,-112,qs),
(750,-127,o),
(729,-149,o),
(714,-149,qs),
(698,-149,o),
(677,-127,o),
(677,-109,qs),
(676,-59,o),
(731,3,q),
(714,0,o),
(696,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(698,49,ls),
(741,49,o),
(789,106,o),
(789,156,qs),
(789,299,ls),
(789,349,o),
(830,349,qs),
(835,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 133 values pushed */
100 1 2 6 34 9 2 1 2 83 1 8 7 93 1 13 8 4 76 0 4 3 6 3 4 6 128 15 1 6 2 3 6 2 126 14 1 0 1 10 1 0 10 128 0 10 7 1 10 7 126 0 13 8 9 8 13 9 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 9 0 11 9 11 101 0 7 7 8 95 12 1 8 8 24 8 78 39 38 1 0 89 87 82 80 77 75 67 66 57 55 52 50 46 43 38 102 39 102 30 28 25 23 20 18 14 11 7 5 0 37 1 37 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uniFBA8FE8A;
unicode = 57666;
},
{
glyphname = uniFBA8FEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(841,349,o),
(841,344,qs),
(841,155,ls),
(841,66,o),
(784,26,q),
(775,14,o),
(744,-30,qs),
(725,-57,o),
(720,-75,q),
(751,-81,o),
(750,-112,qs),
(750,-127,o),
(729,-149,o),
(714,-149,qs),
(698,-149,o),
(677,-127,o),
(677,-109,qs),
(676,-59,o),
(731,3,q),
(714,0,o),
(696,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(698,49,ls),
(741,49,o),
(789,106,o),
(789,156,qs),
(789,299,ls),
(789,349,o),
(830,349,qs),
(835,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 75 values pushed */
62 1 4 0 45 1 2 1 55 1 7 2 3 76 8 1 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 1 0 51 49 44 42 39 37 29 28 19 17 14 12 8 5 0 64 1 64 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uniFBA8FEF0;
unicode = 57667;
},
{
glyphname = uniFBA8FEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(841,349,o),
(841,344,qs),
(841,155,ls),
(841,66,o),
(784,26,q),
(775,14,o),
(744,-30,qs),
(725,-57,o),
(720,-75,q),
(751,-81,o),
(750,-112,qs),
(750,-127,o),
(729,-149,o),
(714,-149,qs),
(698,-149,o),
(677,-127,o),
(677,-109,qs),
(676,-59,o),
(731,3,q),
(714,0,o),
(696,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(698,49,ls),
(741,49,o),
(789,106,o),
(789,156,qs),
(789,299,ls),
(789,349,o),
(830,349,qs),
(835,349,ls)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
62 1 4 0 45 1 2 1 55 1 7 2 3 76 12 1 0 4 0 133 0 4 1 4 133 0 7 2 3 2 7 3 128 0 3 0 5 8 3 5 105 14 10 13 3 8 11 1 9 8 9 101 0 1 1 2 95 6 1 2 2 24 2 78 78 77 66 65 1 0 84 82 77 88 78 88 72 70 65 76 66 76 51 49 44 42 39 37 29 28 19 17 14 12 8 5 0 64 1 64 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 911;
}
);
note = uniFBA8FEF2;
unicode = 57668;
},
{
glyphname = uniFBFEFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
5 1 5 1 1 76 0 1 5 1 133 0 5 2 5 133 12 9 2 7 10 1 8 4 7 8 106 0 4 0 6 4 6 101 0 2 2 0 95 3 11 2 0 0 24 0 78 64 63 1 0 70 68 63 74 64 74 61 59 55 53 47 45 37 36 27 25 22 20 16 13 9 7 0 50 1 50 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFBFEFBFD;
unicode = 57669;
},
{
glyphname = uniFBFFFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
4 1 5 1 52 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 14 11 2 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 97 8 7 2 3 3 24 3 78 70 69 1 0 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFBFFFBFD;
unicode = 57670;
},
{
glyphname = uniFE91FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(817,349,o),
(817,344,qs),
(817,155,ls),
(817,86,o),
(783,46,qs),
(744,0,o),
(672,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(674,49,ls),
(717,49,o),
(766,106,o),
(766,156,qs),
(766,299,ls),
(766,349,o),
(807,349,qs),
(812,349,ls)
);
},
{
closed = 1;
nodes = (
(730,-96,o),
(730,-112,qs),
(730,-128,o),
(709,-149,o),
(693,-149,qs),
(678,-149,o),
(657,-128,o),
(657,-112,qs),
(657,-96,o),
(678,-74,o),
(693,-74,qs),
(709,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 132 values pushed */
86 1 2 6 34 9 2 1 2 2 76 0 4 3 6 3 4 6 128 16 1 6 2 3 6 2 126 15 1 0 1 10 1 0 10 128 0 10 7 1 10 7 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 17 1 13 0 14 9 13 14 105 0 9 0 11 9 11 101 0 7 7 8 95 12 1 8 8 24 8 78 90 89 39 38 1 0 96 94 89 100 90 100 82 80 77 75 67 66 57 55 52 50 46 43 38 88 39 88 30 28 25 23 20 18 14 11 7 5 0 37 1 37 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 887;
}
);
note = uniFE91FE8A;
unicode = 57672;
},
{
glyphname = uniFEF3FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,321,q),
(267,341,o),
(267,367,qs),
(267,399,o),
(306,440,o),
(336,440,qs),
(358,440,o),
(390,416,o),
(392,399,qs),
(393,391,o),
(387,391,qs),
(385,391,o),
(379,394,qs),
(377,395,o),
(377,396,q),
(358,406,o),
(344,406,qs),
(326,406,o),
(304,384,o),
(304,366,qs),
(304,348,o),
(325,324,o),
(342,324,qs),
(386,324,ls),
(413,324,o),
(413,299,qs),
(413,296,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,282,o),
(264,281,qs),
(258,279,o),
(258,279,q),
(252,279,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 124 values pushed */
44 1 1 6 35 9 2 0 1 2 76 0 3 2 6 2 3 6 128 0 6 1 2 6 1 126 0 10 0 7 0 10 7 128 0 4 0 2 3 4 2 105 0 1 0 0 10 1 0 103 18 14 17 3 12 15 1 13 9 12 13 106 0 9 0 11 9 11 101 0 7 7 5 95 8 16 2 5 5 24 5 78 103 102 91 90 40 39 109 107 102 113 103 113 97 95 90 101 91 101 86 84 76 75 66 64 61 59 55 52 48 46 39 89 40 89 35 36 36 52 37 19 7 27 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFEF3FE8A;
unicode = 57673;
},
{
glyphname = uniFEF4FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 153 values pushed */
42 1 2 7 34 9 2 1 2 90 1 6 11 3 76 0 4 3 7 3 4 7 128 0 7 2 3 7 2 126 19 1 0 1 11 1 0 11 128 0 11 6 1 11 6 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 22 17 21 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 8 20 2 6 6 9 97 14 13 2 9 9 24 9 78 108 107 96 95 39 38 1 0 114 112 107 118 108 118 102 100 95 106 96 106 93 91 89 87 84 82 74 73 64 62 59 57 53 50 46 44 38 94 39 94 30 28 25 23 20 18 14 11 7 5 0 37 1 37 23 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFEF4FE8A;
unicode = 57674;
},
{
glyphname = waslaar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(80,683,qs),
(90,681,ls),
(92,681,o),
(95,684,qs),
(96,685,o),
(96,686,q),
(118,717,o),
(152,741,o),
(174,741,qs),
(199,741,o),
(231,710,o),
(231,687,qs),
(231,660,o),
(194,625,o),
(166,625,qs),
(150,625,o),
(114,639,q),
(113,640,o),
(111,641,qs),
(83,652,o),
(73,652,qs),
(62,652,o),
(53,639,q),
(51,637,o),
(48,632,qs),
(45,627,o),
(44,626,qs),
(39,619,o),
(35,626,qs),
(29,636,o),
(31,650,qs),
(36,685,o),
(68,685,qs),
(73,685,o)
);
},
{
closed = 1;
nodes = (
(194,686,qs),
(194,708,o),
(173,708,qs),
(154,708,o),
(127,669,q),
(150,658,o),
(166,658,qs),
(194,658,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
36 1 4 0 1 76 0 3 0 5 0 3 5 105 7 1 4 1 2 4 89 6 1 0 0 1 2 0 1 105 7 1 4 4 2 97 0 2 4 2 81 35 34 1 0 39 37 34 41 35 41 25 23 19 17 13 11 0 33 1 33 8 6 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = waslaar;
unicode = 57675;
},
{
glyphname = wawtwodotsabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(140,464,o),
(140,479,qs),
(140,493,o),
(160,513,o),
(174,513,qs),
(188,513,o),
(208,493,o),
(208,479,qs),
(208,464,o),
(188,443,o),
(174,443,qs),
(160,443,o)
);
},
{
closed = 1;
nodes = (
(238,464,o),
(238,479,qs),
(238,493,o),
(257,513,o),
(272,513,qs),
(286,513,o),
(306,493,o),
(306,479,qs),
(306,464,o),
(286,443,o),
(272,443,qs),
(257,443,o)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(388,0,l),
(381,-80,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(327,-132,o),
(336,0,q),
(223,0,ls),
(156,0,o),
(111,45,qs),
(60,97,o),
(60,178,qs),
(60,259,o),
(100,310,qs),
(145,368,o),
(221,368,qs),
(324,368,o),
(366,272,qs),
(388,220,o),
(391,119,qs),
(391,71,o),
(390,49,q),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(138,93,qs),
(170,49,o),
(224,49,qs),
(338,49,l),
(344,195,o),
(316,257,qs),
(287,321,o),
(221,321,qs),
(175,321,o),
(146,287,qs),
(112,247,o),
(112,180,qs),
(112,130,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
49 1 6 7 1 76 0 7 5 6 5 7 6 128 3 1 1 14 2 13 3 0 4 1 0 105 0 4 0 11 10 4 11 105 0 6 0 8 6 8 101 12 15 2 10 10 5 95 9 1 5 5 24 5 78 24 24 13 12 1 0 73 71 68 66 24 62 24 62 61 60 57 55 48 46 44 42 39 37 31 29 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = wawtwodotsabovear.fina;
unicode = 57677;
},
{
glyphname = wawvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,564,o),
(164,564,qs),
(188,564,o),
(198,539,qs),
(221,486,l),
(244,539,ls),
(255,564,o),
(278,564,qs),
(285,564,o),
(283,558,qs),
(240,457,l),
(238,450,o),
(231,450,qs),
(211,450,ls),
(205,450,o),
(202,457,qs),
(159,558,ls)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(388,0,l),
(381,-80,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(327,-132,o),
(336,0,q),
(223,0,ls),
(156,0,o),
(111,45,qs),
(60,97,o),
(60,178,qs),
(60,259,o),
(100,310,qs),
(145,368,o),
(221,368,qs),
(324,368,o),
(366,272,qs),
(388,220,o),
(391,119,qs),
(391,71,o),
(390,49,q),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(138,93,qs),
(170,49,o),
(224,49,qs),
(338,49,l),
(344,195,o),
(316,257,qs),
(287,321,o),
(221,321,qs),
(175,321,o),
(146,287,qs),
(112,247,o),
(112,180,qs),
(112,130,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 0 1 42 1 5 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 0 1 3 1 0 3 128 0 6 4 5 4 6 5 128 0 3 0 10 9 3 10 106 0 5 0 7 5 7 101 2 1 1 1 23 77 11 12 2 9 9 4 95 8 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
2 1 1 0 1 133 0 0 3 0 133 0 6 4 5 4 6 5 128 0 3 0 10 9 3 10 106 0 5 0 7 5 7 101 11 12 2 9 9 4 95 8 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
17 17 66 64 61 59 17 55 17 55 19 39 34 35 38 39 36 35 49 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = wawvabovear.fina;
unicode = 57679;
},
{
glyphname = yehvabove_alefMaksuraar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,541,qs),
(808,439,ls),
(806,433,o),
(799,433,qs),
(779,433,ls),
(773,433,o),
(771,439,qs),
(727,541,ls),
(725,547,o),
(733,547,qs),
(756,547,o),
(767,522,qs),
(789,469,l),
(812,522,ls),
(823,547,o),
(846,547,qs),
(854,547,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 117 values pushed */
3 1 2 0 22 1 8 4 2 76 1 14 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 15 2 3 10 5 3 103 17 12 16 3 10 13 1 11 7 10 11 105 0 7 9 9 7 89 0 7 7 9 97 0 9 7 9 81 81 80 69 68 18 17 1 0 87 85 80 91 81 91 75 73 68 79 69 79 64 62 54 53 44 42 39 37 33 30 26 24 17 67 18 67 13 10 7 5 0 16 1 16 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = yehvabove_alefMaksuraar;
unicode = 57680;
},
{
glyphname = yehvabove_alefMaksuraar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,547,o),
(710,547,qs),
(733,547,o),
(744,522,qs),
(767,469,l),
(789,522,ls),
(800,547,o),
(823,547,qs),
(831,547,o),
(828,541,qs),
(786,439,ls),
(783,433,o),
(777,433,qs),
(757,433,ls),
(750,433,o),
(748,439,qs),
(704,541,ls)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 21 1 8 4 69 1 3 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 18 14 17 3 12 15 1 13 7 12 13 105 0 7 0 9 7 9 101 2 1 1 1 23 77 5 16 2 3 3 6 97 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 18 14 17 3 12 15 1 13 7 12 13 105 0 7 0 9 7 9 101 5 16 2 3 3 6 97 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 44 values pushed */
87 86 75 74 18 17 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 53 52 43 41 38 36 32 29 25 23 17 73 18 73 36 36 33 19 7 25 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = yehvabove_alefMaksuraar.fina;
unicode = 57681;
},
{
glyphname = yehvabove_pehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,541,qs),
(808,439,ls),
(806,433,o),
(799,433,qs),
(779,433,ls),
(773,433,o),
(771,439,qs),
(727,541,ls),
(725,547,o),
(733,547,qs),
(756,547,o),
(767,522,qs),
(789,469,l),
(812,522,ls),
(823,547,o),
(846,547,qs),
(854,547,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o),
(317,-307,o),
(317,-322,qs),
(317,-337,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
},
{
closed = 1;
nodes = (
(366,-388,o),
(366,-403,qs),
(366,-418,o),
(346,-438,o),
(331,-438,qs),
(317,-438,o),
(297,-418,o),
(297,-403,qs),
(297,-388,o),
(317,-368,o),
(331,-368,qs),
(346,-368,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 2 0 22 1 8 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 2 0 4 0 2 4 128 0 4 8 0 4 8 126 0 8 5 0 8 5 126 23 12 22 3 10 13 1 11 7 10 11 106 0 7 0 9 14 7 9 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 1 20 2 0 0 23 77 0 5 5 3 95 6 21 2 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 74 values pushed */
1 20 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 23 12 22 3 10 13 1 11 7 10 11 106 0 7 0 9 14 7 9 105 24 16 2 14 17 1 15 18 14 15 105 25 1 18 0 19 18 19 101 0 5 5 3 95 6 21 2 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 67 values pushed */
117 116 105 104 81 80 69 68 18 17 1 0 123 121 116 127 117 127 111 109 104 115 105 115 102 100 96 94 87 85 80 91 81 91 75 73 68 79 69 79 64 62 54 53 44 42 39 37 33 30 26 24 17 67 18 67 13 10 7 5 0 16 1 16 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = yehvabove_pehar;
unicode = 57683;
},
{
glyphname = yehvabove_pehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,547,o),
(710,547,qs),
(733,547,o),
(744,522,qs),
(767,469,l),
(789,522,ls),
(800,547,o),
(823,547,qs),
(831,547,o),
(828,541,qs),
(786,439,ls),
(783,433,o),
(777,433,qs),
(757,433,ls),
(750,433,o),
(748,439,qs),
(704,541,ls)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o),
(317,-307,o),
(317,-322,qs),
(317,-337,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
},
{
closed = 1;
nodes = (
(366,-388,o),
(366,-403,qs),
(366,-418,o),
(346,-438,o),
(331,-438,qs),
(317,-438,o),
(297,-418,o),
(297,-403,qs),
(297,-388,o),
(317,-368,o),
(331,-368,qs),
(346,-368,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 21 1 8 4 69 1 3 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 2 1 1 1 23 77 5 22 2 3 3 6 97 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 75 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 24 14 23 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 25 18 2 16 19 1 17 20 16 17 105 26 1 20 0 21 20 21 101 5 22 2 3 3 6 97 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 64 values pushed */
123 122 111 110 87 86 75 74 18 17 129 127 122 133 123 133 117 115 110 121 111 121 108 106 102 100 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 53 52 43 41 38 36 32 29 25 23 17 73 18 73 36 36 33 27 7 25 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = yehvabove_pehar.fina;
unicode = 57684;
},
{
glyphname = yehvabove_yehHamzaabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,541,qs),
(808,439,ls),
(806,433,o),
(799,433,qs),
(779,433,ls),
(773,433,o),
(771,439,qs),
(727,541,ls),
(725,547,o),
(733,547,qs),
(756,547,o),
(767,522,qs),
(789,469,l),
(812,522,ls),
(823,547,o),
(846,547,qs),
(854,547,o)
);
},
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 178 values pushed */
3 1 8 0 60 1 5 10 51 26 2 4 5 3 76 1 20 2 0 8 0 133 0 2 8 6 8 2 6 128 0 7 6 10 6 7 10 128 0 10 5 6 10 5 126 21 1 3 4 14 4 3 14 128 0 14 11 4 14 11 126 0 8 0 6 7 8 6 105 0 5 0 4 3 5 4 103 0 11 12 22 2 9 16 11 9 103 24 18 23 3 16 19 1 17 13 16 17 105 0 13 15 15 13 89 0 13 13 15 97 0 15 13 15 81 119 118 107 106 56 55 18 17 1 0 125 123 118 129 119 129 113 111 106 117 107 117 102 100 92 91 82 80 77 75 71 68 64 62 55 105 56 105 47 45 42 40 37 35 31 28 24 22 17 54 18 54 13 10 7 5 0 16 1 16 25 6 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = yehvabove_yehHamzaabovear;
unicode = 57685;
},
{
glyphname = yehvabove_yehHamzaabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,547,o),
(710,547,qs),
(733,547,o),
(744,522,qs),
(767,469,l),
(789,522,ls),
(800,547,o),
(823,547,qs),
(831,547,o),
(828,541,qs),
(786,439,ls),
(783,433,o),
(777,433,qs),
(757,433,ls),
(750,433,o),
(748,439,qs),
(704,541,ls)
);
},
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
11 1 8 1 59 1 5 10 51 26 2 4 5 107 1 9 14 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 95 values pushed */
0 0 8 6 8 0 6 128 0 7 6 10 6 7 10 128 0 10 5 6 10 5 126 22 1 3 4 14 4 3 14 128 0 14 9 4 14 9 126 0 8 0 6 7 8 6 105 0 5 0 4 3 5 4 103 25 20 24 3 18 21 1 19 13 18 19 105 0 13 0 15 13 15 101 2 1 1 1 23 77 11 23 2 9 9 12 97 17 16 2 12 12 24 12 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 95 values pushed */
2 1 1 8 1 133 0 0 8 6 8 0 6 128 0 7 6 10 6 7 10 128 0 10 5 6 10 5 126 22 1 3 4 14 4 3 14 128 0 14 9 4 14 9 126 0 8 0 6 7 8 6 105 0 5 0 4 3 5 4 103 25 20 24 3 18 21 1 19 13 18 19 105 0 13 0 15 13 15 101 11 23 2 9 9 12 97 17 16 2 12 12 24 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 60 values pushed */
125 124 113 112 56 55 18 17 131 129 124 135 125 135 119 117 112 123 113 123 110 108 106 104 101 99 91 90 81 79 76 74 70 67 63 61 55 111 56 111 47 45 42 40 37 35 31 28 24 22 17 54 18 54 36 36 33 26 7 25 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = yehvabove_yehHamzaabovear.fina;
unicode = 57686;
},
{
glyphname = yehvabove_yehar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,541,qs),
(808,439,ls),
(806,433,o),
(799,433,qs),
(779,433,ls),
(773,433,o),
(771,439,qs),
(727,541,ls),
(725,547,o),
(733,547,qs),
(756,547,o),
(767,522,qs),
(789,469,l),
(812,522,ls),
(823,547,o),
(846,547,qs),
(854,547,o)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 148 values pushed */
3 1 2 0 22 1 8 4 2 76 1 18 2 0 2 0 133 0 2 4 2 133 0 4 8 4 133 0 8 5 8 133 0 5 6 19 2 3 10 5 3 103 21 12 20 3 10 13 1 11 7 10 11 105 0 7 0 9 14 7 9 105 23 16 22 3 14 15 15 14 89 23 16 22 3 14 14 15 97 17 1 15 14 15 81 105 104 93 92 81 80 69 68 18 17 1 0 111 109 104 115 105 115 99 97 92 103 93 103 87 85 80 91 81 91 75 73 68 79 69 79 64 62 54 53 44 42 39 37 33 30 26 24 17 67 18 67 13 10 7 5 0 16 1 16 24 6 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = yehvabove_yehar;
unicode = 57687;
},
{
glyphname = yehvabove_yehar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,547,o),
(710,547,qs),
(733,547,o),
(744,522,qs),
(767,469,l),
(789,522,ls),
(800,547,o),
(823,547,qs),
(831,547,o),
(828,541,qs),
(786,439,ls),
(783,433,o),
(777,433,qs),
(757,433,ls),
(750,433,o),
(748,439,qs),
(704,541,ls)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
11 1 0 1 21 1 8 4 69 1 3 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 0 1 4 1 0 4 128 0 4 8 1 4 8 126 0 8 3 1 8 3 126 22 14 21 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 2 1 1 1 23 77 5 20 2 3 3 6 97 11 10 2 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 8 4 133 0 8 3 8 133 22 14 21 3 12 15 1 13 7 12 13 105 0 7 0 9 16 7 9 105 24 18 23 3 16 19 1 17 16 17 101 5 20 2 3 3 6 97 11 10 2 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 60 values pushed */
111 110 99 98 87 86 75 74 18 17 117 115 110 121 111 121 105 103 98 109 99 109 93 91 86 97 87 97 81 79 74 85 75 85 72 70 68 66 63 61 53 52 43 41 38 36 32 29 25 23 17 73 18 73 36 36 33 25 7 25 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = yehvabove_yehar.fina;
unicode = 57688;
},
{
glyphname = yehvabove_yehvar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(851,541,qs),
(808,439,ls),
(806,433,o),
(799,433,qs),
(779,433,ls),
(773,433,o),
(771,439,qs),
(727,541,ls),
(725,547,o),
(733,547,qs),
(756,547,o),
(767,522,qs),
(789,469,l),
(812,522,ls),
(823,547,o),
(846,547,qs),
(854,547,o)
);
},
{
closed = 1;
nodes = (
(273,406,o),
(281,406,qs),
(304,406,o),
(315,381,qs),
(338,328,l),
(361,381,ls),
(371,406,o),
(394,406,qs),
(402,406,o),
(399,401,q),
(357,299,ls),
(354,292,o),
(348,292,qs),
(328,292,ls),
(321,292,o),
(319,299,q),
(276,401,l)
);
},
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 135 values pushed */
3 1 2 0 39 28 2 3 7 2 76 1 17 2 0 2 0 133 0 2 4 2 133 5 1 4 7 4 133 0 7 3 7 133 0 3 11 3 133 0 11 8 11 133 0 8 9 18 2 6 13 8 6 103 20 15 19 3 13 16 1 14 10 13 14 105 0 10 12 12 10 89 0 10 10 12 97 0 12 10 12 81 98 97 86 85 35 34 1 0 104 102 97 108 98 108 92 90 85 96 86 96 81 79 71 70 61 59 56 54 50 47 43 41 34 84 35 84 32 30 26 24 20 18 13 10 7 5 0 16 1 16 21 6 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = yehvabove_yehvar;
unicode = 57689;
},
{
glyphname = yehvabove_yehvar.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,547,o),
(710,547,qs),
(733,547,o),
(744,522,qs),
(767,469,l),
(789,522,ls),
(800,547,o),
(823,547,qs),
(831,547,o),
(828,541,qs),
(786,439,ls),
(783,433,o),
(777,433,qs),
(757,433,ls),
(750,433,o),
(748,439,qs),
(704,541,ls)
);
},
{
closed = 1;
nodes = (
(273,406,o),
(281,406,qs),
(304,406,o),
(315,381,qs),
(338,328,l),
(361,381,ls),
(371,406,o),
(394,406,qs),
(402,406,o),
(399,401,q),
(357,299,ls),
(354,292,o),
(348,292,qs),
(328,292,ls),
(321,292,o),
(319,299,q),
(276,401,l)
);
},
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
11 1 0 1 38 28 2 3 7 86 1 6 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 0 1 4 1 0 4 128 5 1 4 7 1 4 7 126 0 7 3 1 7 3 126 0 3 11 1 3 11 126 0 11 6 1 11 6 126 21 17 20 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 2 1 1 1 23 77 8 19 2 6 6 9 97 14 13 2 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
2 1 1 0 1 133 0 0 4 0 133 5 1 4 7 4 133 0 7 3 7 133 0 3 11 3 133 0 11 6 11 133 21 17 20 3 15 18 1 16 10 15 16 105 0 10 0 12 10 12 101 8 19 2 6 6 9 97 14 13 2 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 47 values pushed */
104 103 92 91 35 34 110 108 103 114 104 114 98 96 91 102 92 102 89 87 85 83 80 78 70 69 60 58 55 53 49 46 42 40 34 90 35 90 36 36 35 36 36 33 22 7 28 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = yehvabove_yehvar.fina;
unicode = 57690;
},
{
glyphname = yehvabovear.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,406,o),
(281,406,qs),
(304,406,o),
(315,381,qs),
(338,328,l),
(361,381,ls),
(371,406,o),
(394,406,qs),
(402,406,o),
(399,401,q),
(357,299,ls),
(354,292,o),
(348,292,qs),
(328,292,ls),
(321,292,o),
(319,299,q),
(276,401,l)
);
},
{
closed = 1;
nodes = (
(642,0,l),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(642,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
11 1 0 1 1 76 2 1 1 0 1 133 0 0 6 0 133 0 6 3 6 133 0 5 0 7 5 7 101 9 1 3 3 4 95 8 1 4 4 24 4 78 18 17 53 52 49 47 39 38 29 27 24 22 17 54 18 54 36 36 33 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = yehvabovear.fina;
unicode = 57692;
},
{
glyphname = yehvabovear.init;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(199,541,qs),
(156,439,ls),
(154,433,o),
(147,433,qs),
(127,433,ls),
(121,433,o),
(118,439,qs),
(75,541,ls),
(72,547,o),
(80,547,qs),
(104,547,o),
(114,522,qs),
(137,469,l),
(160,522,ls),
(171,547,o),
(194,547,qs),
(201,547,o)
);
},
{
closed = 1;
nodes = (
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls)
);
},
{
closed = 1;
nodes = (
(83,-97,o),
(83,-112,qs),
(83,-127,o),
(63,-147,o),
(49,-147,qs),
(35,-147,o),
(15,-127,o),
(15,-112,qs),
(15,-97,o),
(35,-77,o),
(49,-77,qs),
(63,-77,o)
);
},
{
closed = 1;
nodes = (
(181,-97,o),
(181,-112,qs),
(181,-127,o),
(161,-147,o),
(147,-147,qs),
(132,-147,o),
(113,-127,o),
(113,-112,qs),
(113,-97,o),
(132,-77,o),
(147,-77,qs),
(161,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
3 1 2 0 17 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 0 3 0 2 3 128 0 3 4 0 3 4 126 12 8 11 3 6 9 1 7 6 7 102 1 10 2 0 0 23 77 0 4 4 5 97 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
1 10 2 0 2 0 133 0 2 3 2 133 0 3 4 3 133 12 8 11 3 6 9 1 7 6 7 102 0 4 4 5 97 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
47 46 35 34 1 0 53 51 46 57 47 57 41 39 34 45 35 45 30 28 27 25 21 19 13 10 7 5 0 16 1 16 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = yehvabovear.init;
unicode = 57693;
},
{
glyphname = yehvabovear.medi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(72,547,o),
(80,547,qs),
(104,547,o),
(114,522,qs),
(137,469,l),
(160,522,ls),
(171,547,o),
(194,547,qs),
(201,547,o),
(199,541,qs),
(156,439,ls),
(154,433,o),
(147,433,qs),
(127,433,ls),
(121,433,o),
(118,439,qs),
(75,541,ls)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(106,-97,o),
(106,-112,qs),
(106,-127,o),
(86,-147,o),
(72,-147,qs),
(57,-147,o),
(38,-127,o),
(38,-112,qs),
(38,-97,o),
(57,-77,o),
(72,-77,qs),
(86,-77,o)
);
},
{
closed = 1;
nodes = (
(204,-97,o),
(204,-112,qs),
(204,-127,o),
(184,-147,o),
(169,-147,qs),
(155,-147,o),
(135,-127,o),
(135,-112,qs),
(135,-97,o),
(155,-77,o),
(169,-77,qs),
(184,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
11 1 0 1 35 21 2 3 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 1 4 1 0 4 128 0 4 3 1 4 3 126 14 10 13 3 8 11 1 9 8 9 101 2 1 1 1 23 77 5 12 2 3 3 6 97 7 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
2 1 1 0 1 133 0 0 4 0 133 0 4 3 4 133 14 10 13 3 8 11 1 9 8 9 101 5 12 2 3 3 6 97 7 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
53 52 41 40 18 17 59 57 52 63 53 63 47 45 40 51 41 51 38 36 34 32 31 29 25 23 17 39 18 39 36 35 49 15 7 25 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = yehvabovear.medi;
unicode = 57694;
},
{
glyphname = uniE15F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(629,766,qs),
(626,776,o),
(626,784,qs),
(626,788,o),
(627,793,q),
(631,803,o),
(642,807,qs),
(647,809,o),
(649,807,qs),
(656,800,o),
(660,783,qs),
(674,717,o),
(653,685,qs),
(649,679,o),
(646,679,qs),
(642,679,o),
(642,686,qs),
(642,726,o)
);
},
{
closed = 1;
nodes = (
(534,573,qs),
(534,587,ls),
(534,606,o),
(540,616,qs),
(548,628,o),
(563,628,qs),
(566,628,ls),
(571,628,o),
(571,622,qs),
(571,567,ls),
(571,533,o),
(599,533,qs),
(627,533,o),
(627,567,qs),
(627,587,ls),
(627,606,o),
(634,616,qs),
(641,628,o),
(656,628,qs),
(659,628,ls),
(664,628,o),
(664,622,qs),
(664,567,ls),
(664,533,o),
(692,533,qs),
(720,533,o),
(720,567,qs),
(720,587,ls),
(720,606,o),
(727,616,qs),
(735,628,o),
(749,628,qs),
(752,628,ls),
(757,628,o),
(757,622,qs),
(757,573,ls),
(757,539,o),
(723,500,o),
(692,499,qs),
(662,498,o),
(645,518,q),
(626,498,o),
(599,499,qs),
(534,501,o)
);
},
{
closed = 1;
nodes = (
(956,424,o),
(956,419,qs),
(956,156,ls),
(956,86,o),
(921,46,qs),
(882,0,o),
(811,0,qs),
(765,0,ls),
(684,0,o),
(646,58,q),
(608,0,o),
(527,0,qs),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(528,49,ls),
(572,49,o),
(620,105,o),
(620,156,qs),
(620,373,ls),
(620,395,o),
(643,424,o),
(661,424,qs),
(666,424,ls),
(671,424,o),
(671,418,qs),
(671,156,ls),
(671,106,o),
(720,49,o),
(763,49,qs),
(789,49,l),
(813,49,ls),
(856,49,o),
(904,106,o),
(904,156,qs),
(904,373,ls),
(904,424,o),
(946,424,qs),
(950,424,ls)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
14 1 0 1 52 39 26 3 5 4 20 1 2 5 120 89 74 3 14 9 112 107 2 10 19 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 71 values pushed */
8 6 2 4 0 5 5 4 114 13 11 21 3 9 2 14 2 9 14 128 0 1 0 0 4 1 0 105 7 1 5 3 20 2 2 9 5 2 106 0 14 0 19 10 14 19 103 12 1 10 10 16 97 17 1 16 16 24 77 22 1 18 18 15 97 0 15 15 24 15 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 72 values pushed */
8 6 2 4 0 5 0 4 5 128 13 11 21 3 9 2 14 2 9 14 128 0 1 0 0 4 1 0 105 7 1 5 3 20 2 2 9 5 2 106 0 14 0 19 10 14 19 103 12 1 10 10 16 97 17 1 16 16 24 77 22 1 18 18 15 97 0 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
8 6 2 4 0 5 0 4 5 128 13 11 21 3 9 2 14 2 9 14 128 0 1 0 0 4 1 0 105 7 1 5 3 20 2 2 9 5 2 106 0 14 0 19 10 14 19 103 22 1 18 0 15 18 15 101 12 1 10 10 16 97 17 1 16 16 24 16 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 53 values pushed */
124 123 63 62 19 18 132 130 123 136 124 136 116 113 111 108 106 104 98 96 93 91 86 83 78 76 71 67 62 122 63 122 56 54 50 48 43 41 37 35 30 28 23 21 18 61 19 61 37 33 23 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1026;
}
);
note = uniE15F;
unicode = 57695;
},
{
glyphname = uniFB59FE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o),
(736,-97,o),
(736,-112,qs),
(736,-127,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(785,-178,o),
(785,-193,qs),
(785,-208,o),
(765,-228,o),
(751,-228,qs),
(736,-228,o),
(717,-208,o),
(717,-193,qs),
(717,-178,o),
(736,-158,o),
(751,-158,qs),
(765,-158,o)
);
},
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 165 values pushed */
4 1 17 1 127 102 2 16 17 52 1 0 5 3 76 0 19 18 1 18 19 1 128 0 1 17 18 1 17 126 24 1 15 16 5 16 15 5 128 0 5 0 16 5 0 126 0 20 0 18 19 20 18 105 0 17 0 16 15 17 16 103 22 11 2 9 12 1 10 13 9 10 105 0 4 0 6 14 4 6 105 23 1 13 0 14 13 14 101 2 21 2 0 0 3 97 8 7 2 3 3 24 3 78 94 93 82 81 70 69 1 0 123 121 118 116 113 111 107 104 100 98 93 130 94 130 88 86 81 92 82 92 76 74 69 80 70 80 67 65 61 59 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 25 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFB59FE8A;
unicode = 57696;
},
{
glyphname = uni06D5.fina;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 22 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 36 34 27 40 28 40 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uni06D5.fina;
unicode = 57697;
},
{
glyphname = uniEECD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(234,544,o),
(234,559,qs),
(234,573,o),
(254,593,o),
(268,593,qs),
(283,593,o),
(303,574,o),
(303,559,qs),
(303,544,o),
(283,523,o),
(268,523,qs),
(254,523,o)
);
},
{
closed = 1;
nodes = (
(186,463,o),
(186,478,qs),
(186,492,o),
(205,512,o),
(219,512,qs),
(234,512,o),
(254,492,o),
(254,478,qs),
(254,463,o),
(234,442,o),
(219,442,qs),
(205,442,o)
);
},
{
closed = 1;
nodes = (
(283,463,o),
(283,478,qs),
(283,492,o),
(303,512,o),
(317,512,qs),
(332,512,o),
(352,492,o),
(352,478,qs),
(352,463,o),
(332,442,o),
(317,442,qs),
(303,442,o)
);
},
{
closed = 1;
nodes = (
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o),
(148,-49,qs),
(191,0,o),
(266,0,qs),
(449,0,ls),
(458,0,o),
(458,7,qs),
(458,11,ls),
(458,28,o),
(431,49,o),
(410,49,qs),
(276,49,ls),
(219,49,o),
(184,88,qs),
(149,128,o),
(149,182,qs),
(149,243,o),
(185,281,qs),
(223,322,o),
(285,321,qs),
(340,321,o),
(383,298,qs),
(390,294,o),
(393,294,qs),
(405,295,o),
(403,308,qs),
(400,329,o),
(367,347,qs),
(327,368,o),
(280,368,qs),
(209,368,o),
(160,327,qs),
(97,275,o),
(98,183,qs),
(98,138,o),
(140,55,o),
(175,32,q),
(121,11,o),
(60,-81,o),
(60,-141,qs),
(60,-214,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 1 9 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 66 values pushed */
0 1 0 1 133 13 1 0 3 0 133 5 1 3 2 3 133 15 4 14 3 2 6 6 2 112 0 11 9 10 9 11 10 128 0 6 0 7 8 6 7 106 0 8 0 9 11 8 9 103 0 10 12 12 10 89 0 10 10 12 97 0 12 10 12 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 1 0 1 133 13 1 0 3 0 133 5 1 3 2 3 133 15 4 14 3 2 6 2 133 0 11 9 10 9 11 10 128 0 6 0 7 8 6 7 106 0 8 0 9 11 8 9 103 0 10 12 12 10 89 0 10 10 12 97 0 12 10 12 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
25 24 13 12 1 0 95 93 87 85 81 79 73 70 66 63 57 55 47 45 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 518;
}
);
note = uniEECD;
unicode = 61133;
},
{
glyphname = uniEECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(271,544,o),
(271,559,qs),
(271,573,o),
(291,593,o),
(305,593,qs),
(320,593,o),
(339,574,o),
(339,559,qs),
(339,544,o),
(320,523,o),
(305,523,qs),
(291,523,o)
);
},
{
closed = 1;
nodes = (
(222,463,o),
(222,478,qs),
(222,492,o),
(242,512,o),
(256,512,qs),
(271,512,o),
(291,492,o),
(291,478,qs),
(291,463,o),
(271,442,o),
(256,442,qs),
(242,442,o)
);
},
{
closed = 1;
nodes = (
(340,512,o),
(354,512,qs),
(368,512,o),
(388,492,o),
(388,478,qs),
(388,463,o),
(368,442,o),
(354,442,qs),
(340,442,o),
(320,463,o),
(320,478,qs),
(320,492,o)
);
},
{
closed = 1;
nodes = (
(157,-40,qs),
(113,-81,o),
(114,-142,qs),
(114,-196,o),
(147,-234,qs),
(190,-281,o),
(269,-284,qs),
(328,-286,o),
(372,-271,qs),
(403,-261,o),
(438,-241,qs),
(444,-238,o),
(449,-238,qs),
(458,-238,o),
(458,-247,qs),
(458,-254,o),
(453,-261,qs),
(432,-291,o),
(388,-310,qs),
(336,-333,o),
(264,-331,qs),
(175,-329,o),
(119,-279,qs),
(60,-226,o),
(60,-141,qs),
(60,-71,o),
(101,-21,qs),
(152,41,o),
(246,47,qs),
(248,47,l),
(136,189,ls),
(115,217,o),
(113,244,qs),
(111,294,o),
(165,330,qs),
(223,368,o),
(305,368,qs),
(375,369,o),
(430,339,qs),
(500,301,o),
(497,244,qs),
(495,216,o),
(474,189,qs),
(364,49,l),
(608,49,l),
(608,0,l),
(366,0,ls),
(323,0,o),
(306,13,q),
(290,1,o),
(261,0,qs),
(197,-2,o)
);
},
{
closed = 1;
nodes = (
(192,199,qs),
(195,195,o),
(196,194,qs),
(298,63,ls),
(305,53,o),
(312,63,qs),
(414,194,ls),
(415,195,o),
(416,197,q),
(439,225,o),
(439,241,qs),
(439,268,o),
(408,291,qs),
(368,321,o),
(305,321,qs),
(252,321,o),
(171,273,o),
(171,241,qs),
(171,225,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 124 values pushed */
54 46 2 8 14 38 1 6 10 2 76 0 12 6 13 6 12 13 128 0 1 15 1 0 3 1 0 105 5 1 3 4 16 2 2 9 3 2 105 0 9 0 14 8 9 14 105 0 8 10 6 8 87 0 10 7 17 2 6 12 10 6 105 0 13 11 11 13 89 0 13 13 11 97 0 11 13 11 81 37 36 13 12 1 0 92 90 81 79 74 73 67 65 59 57 51 49 43 42 41 39 36 87 37 87 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uniEECE;
unicode = 61134;
},
{
glyphname = uniEECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(236,544,o),
(236,559,qs),
(236,573,o),
(256,593,o),
(270,593,qs),
(284,593,o),
(304,573,o),
(304,559,qs),
(304,544,o),
(284,523,o),
(270,523,qs),
(256,523,o)
);
},
{
closed = 1;
nodes = (
(187,463,o),
(187,478,qs),
(187,492,o),
(207,512,o),
(221,512,qs),
(236,512,o),
(255,492,o),
(255,478,qs),
(255,463,o),
(236,442,o),
(221,442,qs),
(207,442,o)
);
},
{
closed = 1;
nodes = (
(305,512,o),
(319,512,qs),
(333,512,o),
(353,492,o),
(353,478,qs),
(353,463,o),
(333,442,o),
(319,442,qs),
(305,442,o),
(285,463,o),
(285,478,qs),
(285,492,o)
);
},
{
closed = 1;
nodes = (
(433,49,o),
(460,27,o),
(460,11,qs),
(460,7,ls),
(460,0,o),
(452,0,qs),
(-4,0,l),
(-4,49,l),
(156,49,l),
(100,102,o),
(100,183,qs),
(100,264,o),
(148,315,qs),
(200,368,o),
(282,368,qs),
(326,368,o),
(402,331,o),
(405,308,qs),
(407,295,o),
(395,294,qs),
(392,294,o),
(385,298,qs),
(342,321,o),
(287,321,qs),
(234,322,o),
(197,290,qs),
(152,252,o),
(152,182,qs),
(151,136,o),
(178,99,qs),
(213,49,o),
(278,49,qs),
(412,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
0 8 7 6 7 8 6 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 9 3 2 105 0 9 0 7 8 9 7 105 10 14 2 6 11 11 6 87 10 14 2 6 6 11 95 0 11 6 11 79 37 36 13 12 1 0 63 61 60 59 54 52 49 47 45 43 36 68 37 67 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 6 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniEECF;
unicode = 61135;
},
{
glyphname = uniEED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,544,o),
(256,559,qs),
(256,573,o),
(276,593,o),
(290,593,qs),
(304,593,o),
(324,573,o),
(324,559,qs),
(324,544,o),
(304,523,o),
(290,523,qs),
(276,523,o)
);
},
{
closed = 1;
nodes = (
(207,463,o),
(207,478,qs),
(207,492,o),
(227,512,o),
(241,512,qs),
(256,512,o),
(275,492,o),
(275,478,qs),
(275,463,o),
(256,442,o),
(241,442,qs),
(227,442,o)
);
},
{
closed = 1;
nodes = (
(305,463,o),
(305,478,qs),
(305,492,o),
(325,512,o),
(339,512,qs),
(353,512,o),
(373,492,o),
(373,478,qs),
(373,463,o),
(353,442,o),
(339,442,qs),
(325,442,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(231,49,l),
(121,189,ls),
(100,217,o),
(98,244,qs),
(96,294,o),
(150,330,qs),
(208,368,o),
(290,368,qs),
(359,369,o),
(415,339,qs),
(484,301,o),
(482,244,qs),
(480,216,o),
(459,189,qs),
(349,49,l),
(593,49,l),
(593,0,l),
(350,0,ls),
(308,0,o),
(290,13,q),
(271,0,o),
(227,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(290,54,o),
(297,63,qs),
(399,194,ls),
(423,225,o),
(423,241,qs),
(423,268,o),
(392,291,qs),
(352,321,o),
(290,321,qs),
(236,321,o),
(156,273,o),
(156,241,qs),
(156,225,o),
(180,194,qs),
(283,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 103 values pushed */
54 46 2 8 11 38 1 6 8 2 76 0 1 12 1 0 3 1 0 105 5 1 3 14 4 13 3 2 9 3 2 105 0 9 0 11 8 9 11 105 10 1 8 6 6 8 87 10 1 8 8 6 95 7 15 2 6 8 6 79 37 36 25 24 13 12 1 0 66 64 58 57 51 49 43 42 41 39 36 59 37 59 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 16 6 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniEED0;
unicode = 61136;
},
{
glyphname = uniF805;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,10,qs),
(70,502,ls),
(70,551,o),
(108,554,qs),
(121,556,o),
(134,556,qs),
(226,556,o),
(267,497,qs),
(269,494,o),
(271,497,qs),
(309,556,o),
(399,556,qs),
(449,556,ls),
(454,556,o),
(454,551,qs),
(454,547,ls),
(454,515,o),
(418,511,q),
(409,509,o),
(389,509,qs),
(354,507,o),
(305,472,o),
(281,431,qs),
(275,420,o),
(269,420,qs),
(264,420,o),
(257,431,qs),
(230,474,o),
(185,507,o),
(149,508,qs),
(145,508,o),
(135,509,qs),
(128,509,o),
(126,509,qs),
(121,509,o),
(121,504,qs),
(121,10,ls),
(121,0,o),
(111,0,qs),
(81,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
29 3 2 3 1 1 76 0 3 1 0 1 3 0 128 4 2 2 1 1 5 97 6 1 5 5 23 77 7 1 0 0 24 0 78 1 0 34 32 28 25 20 18 15 13 10 8 7 5 0 40 1 39 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 508;
}
);
note = uniF805;
unicode = 63493;
},
{
glyphname = uniF806;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,556,o),
(408,556,qs),
(411,556,o),
(413,551,q),
(417,532,o),
(407,494,o),
(396,486,q),
(196,311,l),
(112,230,o),
(112,159,qs),
(111,112,o),
(140,81,qs),
(173,47,o),
(229,47,qs),
(516,47,ls),
(536,47,o),
(562,27,o),
(562,11,qs),
(562,7,ls),
(562,0,o),
(554,0,qs),
(227,0,ls),
(160,0,o),
(116,33,qs),
(60,76,o),
(60,157,qs),
(60,209,o),
(113,299,o),
(180,361,qs),
(402,553,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 24 0 78 52 54 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = uniF806;
unicode = 63494;
},
{
glyphname = fi;
kernLeft = f;
kernRight = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,315,o),
(16,321,qs),
(16,354,ls),
(16,360,o),
(21,360,qs),
(84,360,l),
(84,464,ls),
(84,509,o),
(130,562,o),
(170,562,qs),
(199,562,o),
(245,521,o),
(245,495,qs),
(245,485,o),
(238,485,qs),
(234,485,o),
(230,489,qs),
(204,516,o),
(177,516,qs),
(134,516,o),
(134,461,qs),
(134,360,l),
(223,360,ls),
(228,360,o),
(228,354,qs),
(228,321,ls),
(228,315,o),
(223,315,qs),
(134,315,l),
(134,6,ls),
(134,0,o),
(129,0,qs),
(89,0,ls),
(84,0,o),
(84,6,qs),
(84,315,l),
(21,315,ls)
);
},
{
closed = 1;
nodes = (
(327,6,qs),
(327,354,ls),
(327,360,o),
(332,360,qs),
(336,360,ls),
(354,360,o),
(377,331,o),
(377,308,qs),
(377,6,ls),
(377,0,o),
(372,0,qs),
(332,0,ls),
(327,0,o)
);
},
{
closed = 1;
nodes = (
(340,492,o),
(353,492,qs),
(368,492,o),
(387,472,o),
(387,458,qs),
(387,445,o),
(367,426,o),
(353,426,qs),
(340,426,o),
(320,445,o),
(320,458,qs),
(320,472,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
34 33 11 10 4 1 2 48 40 6 1 4 0 1 2 76 0 4 11 10 11 4 10 128 0 11 0 10 2 11 10 105 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 9 6 2 2 2 42 77 8 1 0 0 40 0 78 0 0 60 58 54 52 46 43 38 37 0 36 0 36 19 35 34 34 21 19 19 13 9 29 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = f;
kernRight = l;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,315,o),
(16,321,qs),
(16,354,ls),
(16,360,o),
(21,360,qs),
(84,360,l),
(84,464,ls),
(84,509,o),
(130,562,o),
(170,562,qs),
(199,562,o),
(245,521,o),
(245,495,qs),
(245,485,o),
(238,485,qs),
(234,485,o),
(230,489,qs),
(204,516,o),
(177,516,qs),
(134,516,o),
(134,461,qs),
(134,360,l),
(223,360,ls),
(228,360,o),
(228,354,qs),
(228,321,ls),
(228,315,o),
(223,315,qs),
(134,315,l),
(134,6,ls),
(134,0,o),
(129,0,qs),
(89,0,ls),
(84,0,o),
(84,6,qs),
(84,315,l),
(21,315,ls)
);
},
{
closed = 1;
nodes = (
(327,89,qs),
(327,549,ls),
(327,556,o),
(332,556,qs),
(337,556,ls),
(355,556,o),
(377,527,o),
(377,504,qs),
(377,92,ls),
(377,41,o),
(418,41,qs),
(447,41,o),
(469,71,q),
(475,77,o),
(477,77,qs),
(485,77,o),
(485,63,qs),
(485,34,o),
(440,-9,o),
(409,-9,qs),
(327,-9,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 33 11 10 4 1 2 6 1 2 0 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
32 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 3 3 5 97 11 1 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 97 13 1 8 8 49 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 4 3 2 3 4 2 128 0 9 1 10 1 9 10 128 0 11 11 39 77 0 3 3 5 97 0 5 5 39 77 12 7 2 1 1 2 95 6 1 2 2 42 77 0 0 0 40 77 0 10 10 8 97 13 1 8 8 49 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
38 37 0 0 54 51 47 45 42 41 37 57 38 57 0 36 0 36 19 35 34 34 21 19 19 14 9 29 
CALL[ ]	/* CallFunction */";
};
width = 487;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = uniFB51;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(49,689,qs),
(59,687,l),
(61,686,o),
(64,690,qs),
(65,691,ls),
(87,723,o),
(121,746,o),
(143,746,qs),
(168,746,o),
(200,716,o),
(200,693,qs),
(200,666,o),
(163,631,o),
(135,631,qs),
(119,631,o),
(83,645,q),
(82,646,o),
(80,646,q),
(52,657,o),
(42,657,qs),
(31,657,o),
(22,645,qs),
(20,642,o),
(17,638,qs),
(14,633,o),
(13,631,q),
(8,625,o),
(4,632,qs),
(-2,642,o),
(0,656,qs),
(5,691,o),
(37,691,qs),
(42,691,o)
);
},
{
closed = 1;
nodes = (
(163,692,qs),
(163,713,o),
(142,713,qs),
(123,713,o),
(96,674,q),
(119,664,o),
(135,664,qs),
(163,664,o)
);
},
{
closed = 1;
nodes = (
(154,0,o),
(116,35,qs),
(71,76,o),
(71,155,qs),
(71,504,ls),
(71,527,o),
(94,556,o),
(112,556,qs),
(117,556,ls),
(122,556,o),
(122,550,qs),
(122,156,ls),
(122,106,o),
(171,49,o),
(214,49,qs),
(247,49,l),
(247,0,l),
(216,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
35 1 4 0 47 1 6 7 2 76 0 3 0 5 0 3 5 105 9 1 0 0 1 2 0 1 105 10 1 4 0 2 7 4 2 105 0 7 7 23 77 0 6 6 8 97 11 1 8 8 24 8 78 41 41 34 33 1 0 41 58 41 57 51 49 44 42 38 36 33 40 34 40 25 23 19 17 13 11 0 32 1 32 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = uniFB51;
unicode = 64337;
},
{
glyphname = uniFB57;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,105,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
},
{
closed = 1;
nodes = (
(340,-147,o),
(326,-147,qs),
(311,-147,o),
(292,-127,o),
(292,-112,qs),
(292,-97,o),
(311,-77,o),
(326,-77,qs),
(340,-77,o),
(360,-97,o),
(360,-112,qs),
(360,-127,o)
);
},
{
closed = 1;
nodes = (
(458,-97,o),
(458,-112,qs),
(458,-127,o),
(438,-147,o),
(423,-147,qs),
(409,-147,o),
(389,-127,o),
(389,-112,qs),
(389,-97,o),
(409,-77,o),
(423,-77,qs),
(438,-77,o)
);
},
{
closed = 1;
nodes = (
(409,-178,o),
(409,-193,qs),
(409,-208,o),
(389,-228,o),
(374,-228,qs),
(360,-228,o),
(341,-208,o),
(341,-193,qs),
(341,-178,o),
(360,-158,o),
(374,-158,qs),
(389,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 92 values pushed */
4 1 3 1 32 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 13 8 2 6 9 1 7 10 6 7 105 14 1 10 0 11 10 11 101 2 12 2 0 0 4 98 5 1 4 4 24 4 78 62 61 50 49 1 0 68 66 61 72 62 72 56 54 49 60 50 60 47 45 41 39 35 33 31 28 23 21 15 12 8 6 0 36 1 36 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFB57;
unicode = 64343;
},
{
glyphname = uniFB58;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(83,-97,o),
(83,-112,qs),
(83,-127,o),
(63,-147,o),
(49,-147,qs),
(35,-147,o),
(15,-127,o),
(15,-112,qs),
(15,-97,o),
(35,-77,o),
(49,-77,qs),
(63,-77,o)
);
},
{
closed = 1;
nodes = (
(181,-97,o),
(181,-112,qs),
(181,-127,o),
(161,-147,o),
(147,-147,qs),
(132,-147,o),
(113,-127,o),
(113,-112,qs),
(113,-97,o),
(132,-77,o),
(147,-77,qs),
(161,-77,o)
);
},
{
closed = 1;
nodes = (
(132,-178,o),
(132,-193,qs),
(132,-208,o),
(112,-228,o),
(98,-228,qs),
(83,-228,o),
(64,-208,o),
(64,-193,qs),
(64,-178,o),
(83,-158,o),
(98,-158,qs),
(112,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 80 values pushed */
5 1 2 1 1 76 0 1 2 1 133 11 5 10 3 3 6 1 4 7 3 4 106 12 1 7 0 8 7 8 101 0 2 2 0 97 9 1 0 0 24 0 78 42 41 30 29 18 17 1 0 48 46 41 52 42 52 36 34 29 40 30 40 24 22 17 28 18 28 15 13 9 7 0 16 1 16 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFB58;
unicode = 64344;
},
{
glyphname = uniFB59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(87,-147,o),
(73,-147,qs),
(58,-147,o),
(39,-127,o),
(39,-112,qs),
(39,-97,o),
(58,-77,o),
(73,-77,qs),
(87,-77,o),
(107,-97,o),
(107,-112,qs),
(107,-127,o)
);
},
{
closed = 1;
nodes = (
(205,-97,o),
(205,-112,qs),
(205,-127,o),
(185,-147,o),
(170,-147,qs),
(156,-147,o),
(137,-127,o),
(137,-112,qs),
(137,-97,o),
(156,-77,o),
(170,-77,qs),
(185,-77,o)
);
},
{
closed = 1;
nodes = (
(156,-178,o),
(156,-193,qs),
(156,-208,o),
(136,-228,o),
(122,-228,qs),
(107,-228,o),
(88,-208,o),
(88,-193,qs),
(88,-178,o),
(107,-158,o),
(122,-158,qs),
(136,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 12 7 2 5 8 1 6 9 5 6 105 13 1 9 0 10 9 10 101 2 11 2 0 0 3 97 4 1 3 3 24 3 78 48 47 36 35 1 0 54 52 47 58 48 58 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 8 6 0 22 1 22 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFB59;
unicode = 64345;
},
{
glyphname = uniFB67;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,381,o),
(300,384,qs),
(300,387,ls),
(300,412,o),
(333,412,qs),
(344,412,l),
(344,551,ls),
(344,591,o),
(372,591,qs),
(374,591,ls),
(377,591,o),
(377,587,qs),
(377,530,l),
(423,530,ls),
(459,530,o),
(501,490,o),
(501,456,qs),
(501,421,o),
(459,381,o),
(423,381,qs),
(303,381,ls)
);
},
{
closed = 1;
nodes = (
(377,412,l),
(427,412,ls),
(444,412,o),
(468,437,o),
(468,456,qs),
(468,474,o),
(444,499,o),
(427,499,qs),
(377,499,l)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 110 values pushed */
8 1 1 2 17 1 0 3 34 1 9 7 62 1 6 9 4 76 0 2 1 2 133 0 7 0 9 0 7 9 128 0 9 6 0 9 6 126 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 8 14 2 6 6 10 98 11 1 10 10 24 10 78 31 30 22 21 1 0 65 63 61 58 53 51 45 42 38 36 30 66 31 66 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFB67;
unicode = 64359;
},
{
glyphname = uniFB68;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,581,o),
(233,541,o),
(233,507,qs),
(233,472,o),
(191,432,o),
(155,432,qs),
(35,432,ls),
(32,432,o),
(32,436,qs),
(32,438,ls),
(32,463,o),
(65,463,qs),
(76,463,l),
(76,602,ls),
(76,642,o),
(104,642,qs),
(106,642,ls),
(109,642,o),
(109,638,qs),
(109,581,l),
(155,581,ls)
);
},
{
closed = 1;
nodes = (
(176,463,o),
(200,488,o),
(200,507,qs),
(200,525,o),
(176,551,o),
(159,551,qs),
(109,551,l),
(109,463,l),
(159,463,ls)
);
},
{
closed = 1;
nodes = (
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
1 1 3 0 10 1 2 1 44 1 7 6 3 76 0 0 3 0 133 11 1 6 2 7 2 6 7 128 9 1 3 0 4 1 3 4 105 10 5 2 1 0 2 6 1 2 104 0 7 7 8 97 0 8 8 24 8 78 31 30 21 21 0 0 40 38 37 35 30 46 31 46 21 29 21 28 24 22 0 20 0 19 36 34 35 12 7 25 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFB68;
unicode = 64360;
},
{
glyphname = uniFB69;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,432,o),
(32,436,qs),
(32,438,ls),
(32,463,o),
(65,463,qs),
(76,463,l),
(76,602,ls),
(76,642,o),
(104,642,qs),
(106,642,ls),
(109,642,o),
(109,638,qs),
(109,581,l),
(155,581,ls),
(191,581,o),
(233,541,o),
(233,507,qs),
(233,472,o),
(191,432,o),
(155,432,qs),
(35,432,ls)
);
},
{
closed = 1;
nodes = (
(109,463,l),
(159,463,ls),
(176,463,o),
(200,488,o),
(200,507,qs),
(200,525,o),
(176,551,o),
(159,551,qs),
(109,551,l)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
8 1 1 2 17 1 0 3 48 34 2 6 7 3 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 1 12 1 4 3 1 4 105 5 1 3 11 1 0 7 3 0 104 8 13 2 6 6 9 97 10 1 9 9 24 9 78 31 30 22 21 1 0 51 49 47 45 44 42 38 36 30 52 31 52 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFB69;
unicode = 64361;
},
{
glyphname = uniFB6B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,546,o),
(596,561,qs),
(596,575,o),
(616,595,o),
(630,595,qs),
(645,595,o),
(664,575,o),
(664,561,qs),
(664,546,o),
(645,525,o),
(630,525,qs),
(616,525,o)
);
},
{
closed = 1;
nodes = (
(547,465,o),
(547,479,qs),
(547,494,o),
(567,514,o),
(581,514,qs),
(596,514,o),
(616,494,o),
(616,479,qs),
(616,464,o),
(596,444,o),
(581,444,qs),
(567,444,o)
);
},
{
closed = 1;
nodes = (
(665,514,o),
(679,514,qs),
(693,514,o),
(713,494,o),
(713,479,qs),
(713,464,o),
(693,444,o),
(679,444,qs),
(665,444,o),
(645,465,o),
(645,479,qs),
(645,494,o)
);
},
{
closed = 1;
nodes = (
(912,-1,l),
(696,-1,ls),
(649,-1,o),
(629,14,q),
(611,-1,o),
(564,-1,qs),
(364,-1,l),
(364,0,l),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(513,49,l),
(513,48,l),
(551,48,l),
(514,67,o),
(466,149,o),
(466,195,qs),
(465,260,o),
(503,309,qs),
(551,368,o),
(629,368,qs),
(699,368,o),
(744,321,qs),
(795,271,o),
(793,195,qs),
(792,148,o),
(745,67,o),
(708,48,q),
(912,48,l)
);
},
{
closed = 1;
nodes = (
(545,116,qs),
(578,71,o),
(629,58,q),
(677,70,o),
(742,150,o),
(742,195,qs),
(741,248,o),
(712,283,qs),
(680,321,o),
(629,321,qs),
(586,321,o),
(555,291,qs),
(518,256,o),
(518,195,qs),
(517,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
89 1 7 8 73 1 9 7 2 76 0 8 12 7 12 8 7 128 0 1 13 1 0 3 1 0 105 5 1 3 4 14 2 2 6 3 2 105 0 6 0 12 8 6 12 105 15 11 2 7 7 9 96 10 1 9 9 24 9 78 36 36 13 12 1 0 83 81 36 77 36 77 76 74 72 67 62 60 54 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uniFB6B;
unicode = 64363;
},
{
glyphname = uniFB6C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,546,o),
(228,561,qs),
(228,575,o),
(247,595,o),
(262,595,qs),
(276,595,o),
(296,575,o),
(296,561,qs),
(296,545,o),
(276,525,o),
(262,525,qs),
(247,525,o)
);
},
{
closed = 1;
nodes = (
(179,465,o),
(179,479,qs),
(179,494,o),
(198,514,o),
(213,514,qs),
(227,514,o),
(247,494,o),
(247,479,qs),
(247,464,o),
(227,444,o),
(213,444,qs),
(198,444,o)
);
},
{
closed = 1;
nodes = (
(296,514,o),
(310,514,qs),
(325,514,o),
(345,494,o),
(345,479,qs),
(345,464,o),
(325,444,o),
(310,444,qs),
(296,444,o),
(277,465,o),
(277,479,qs),
(277,494,o)
);
},
{
closed = 1;
nodes = (
(374,322,qs),
(425,269,o),
(425,183,qs),
(425,111,o),
(387,60,qs),
(343,2,o),
(268,0,qs),
(-4,0,l),
(-4,49,l),
(152,49,l),
(99,95,o),
(99,183,qs),
(99,258,o),
(139,309,qs),
(185,368,o),
(262,368,qs),
(329,368,o)
);
},
{
closed = 1;
nodes = (
(340,85,qs),
(374,124,o),
(374,184,qs),
(374,237,o),
(348,274,qs),
(316,321,o),
(262,321,qs),
(215,321,o),
(184,285,qs),
(151,245,o),
(151,184,qs),
(151,132,o),
(177,95,qs),
(208,49,o),
(262,49,qs),
(310,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 6 3 2 105 13 1 6 0 10 7 6 10 105 14 9 2 7 7 8 95 0 8 8 24 8 78 54 53 37 36 13 12 1 0 62 60 53 68 54 68 46 44 43 42 36 52 37 52 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = uniFB6C;
unicode = 64364;
},
{
glyphname = uniFB6D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,546,o),
(229,561,qs),
(229,575,o),
(248,595,o),
(263,595,qs),
(277,595,o),
(297,575,o),
(297,561,qs),
(297,545,o),
(277,525,o),
(263,525,qs),
(248,525,o)
);
},
{
closed = 1;
nodes = (
(180,465,o),
(180,479,qs),
(180,494,o),
(200,514,o),
(214,514,qs),
(228,514,o),
(248,494,o),
(248,479,qs),
(248,464,o),
(228,444,o),
(214,444,qs),
(200,444,o)
);
},
{
closed = 1;
nodes = (
(297,514,o),
(312,514,qs),
(326,514,o),
(346,494,o),
(346,479,qs),
(346,464,o),
(326,444,o),
(312,444,qs),
(297,444,o),
(278,465,o),
(278,479,qs),
(278,494,o)
);
},
{
closed = 1;
nodes = (
(544,0,l),
(328,0,ls),
(281,0,o),
(262,15,q),
(243,0,o),
(196,0,qs),
(-4,0,l),
(-4,49,l),
(183,49,l),
(146,68,o),
(99,149,o),
(98,196,qs),
(97,261,o),
(136,309,qs),
(183,368,o),
(262,368,qs),
(331,368,o),
(377,322,qs),
(427,271,o),
(425,196,qs),
(425,149,o),
(377,68,o),
(340,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(177,117,qs),
(210,72,o),
(262,58,q),
(309,71,o),
(374,151,o),
(374,196,qs),
(373,248,o),
(344,283,qs),
(312,321,o),
(262,321,qs),
(218,321,o),
(187,292,qs),
(150,256,o),
(150,196,qs),
(149,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
71 1 7 11 55 1 8 7 2 76 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 6 3 2 105 0 6 0 11 7 6 11 105 14 10 2 7 7 8 95 9 1 8 8 24 8 78 36 36 13 12 1 0 65 63 36 59 36 59 58 56 54 52 51 50 44 42 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFB6D;
unicode = 64365;
},
{
glyphname = uniFB7B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(339,0,ls),
(424,0,o),
(474,38,q),
(508,0,o),
(565,0,qs),
(587,0,l),
(587,49,l),
(570,49,ls),
(538,49,o),
(516,68,qs),
(499,82,o),
(475,136,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,118,o),
(446,79,q),
(423,62,o),
(377,49,o),
(337,49,qs),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
},
{
closed = 1;
nodes = (
(283,-96,o),
(283,-111,qs),
(283,-126,o),
(263,-146,o),
(249,-146,qs),
(235,-146,o),
(215,-126,o),
(215,-111,qs),
(215,-96,o),
(235,-76,o),
(249,-76,qs),
(263,-76,o)
);
},
{
closed = 1;
nodes = (
(381,-96,o),
(381,-111,qs),
(381,-126,o),
(361,-146,o),
(347,-146,qs),
(332,-146,o),
(313,-126,o),
(313,-111,qs),
(313,-96,o),
(332,-76,o),
(347,-76,qs),
(361,-76,o)
);
},
{
closed = 1;
nodes = (
(332,-177,o),
(332,-192,qs),
(332,-207,o),
(312,-227,o),
(298,-227,qs),
(284,-227,o),
(264,-207,o),
(264,-192,qs),
(264,-177,o),
(284,-157,o),
(298,-157,qs),
(312,-157,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
44 1 5 4 30 1 3 5 62 1 8 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 5 4 3 4 5 3 128 17 12 16 3 10 8 11 8 10 114 13 1 11 14 8 11 14 126 18 1 14 15 8 14 15 126 0 15 1 0 15 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
18 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 5 4 3 4 5 3 128 17 12 16 3 10 8 11 8 10 11 128 13 1 11 14 8 11 14 126 18 1 14 15 8 14 15 126 0 15 1 0 15 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 77 values pushed */
0 5 4 3 4 5 3 128 17 12 16 3 10 8 11 8 10 11 128 13 1 11 14 8 11 14 126 18 1 14 15 8 14 15 126 0 15 1 8 15 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
94 93 82 81 70 69 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 66 63 33 37 38 38 37 54 38 36 35 19 7 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uniFB7B;
unicode = 64379;
},
{
glyphname = uniFB7C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(478,0,ls),
(525,0,o),
(525,44,qs),
(525,49,o),
(520,49,qs),
(495,50,o),
(482,64,qs),
(449,98,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(189,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(179,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,120,o),
(416,61,o),
(431,49,q),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(220,-97,o),
(220,-112,qs),
(220,-127,o),
(200,-147,o),
(185,-147,qs),
(171,-147,o),
(152,-127,o),
(152,-112,qs),
(152,-97,o),
(171,-77,o),
(185,-77,qs),
(200,-77,o)
);
},
{
closed = 1;
nodes = (
(318,-97,o),
(318,-112,qs),
(318,-127,o),
(298,-147,o),
(283,-147,qs),
(269,-147,o),
(249,-127,o),
(249,-112,qs),
(249,-97,o),
(269,-77,o),
(283,-77,qs),
(298,-77,o)
);
},
{
closed = 1;
nodes = (
(269,-178,o),
(269,-193,qs),
(269,-208,o),
(249,-228,o),
(234,-228,qs),
(220,-228,o),
(200,-208,o),
(200,-193,qs),
(200,-178,o),
(220,-158,o),
(234,-158,qs),
(249,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 1 0 29 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 1 0 3 0 1 3 128 14 8 13 3 6 4 7 4 6 114 9 1 7 10 4 7 10 126 15 1 10 11 4 10 11 126 0 11 11 132 0 2 0 0 1 2 0 105 12 5 2 3 3 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 1 0 3 0 1 3 128 14 8 13 3 6 4 7 4 6 7 128 9 1 7 10 4 7 10 126 15 1 10 11 4 10 11 126 0 11 11 132 0 2 0 0 1 2 0 105 12 5 2 3 3 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
59 58 47 46 35 34 0 0 65 63 58 69 59 69 53 51 46 57 47 57 41 39 34 45 35 45 0 33 0 33 35 20 38 38 36 16 7 27 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uniFB7C;
unicode = 64380;
},
{
glyphname = uniFB7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(304,0,ls),
(389,0,o),
(440,38,q),
(473,0,o),
(530,0,qs),
(560,0,l),
(560,49,l),
(535,49,ls),
(504,49,o),
(481,68,qs),
(464,82,o),
(441,136,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(189,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(179,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,118,o),
(411,79,q),
(388,61,o),
(342,49,o),
(302,49,qs),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(220,-97,o),
(220,-112,qs),
(220,-127,o),
(200,-147,o),
(185,-147,qs),
(171,-147,o),
(152,-127,o),
(152,-112,qs),
(152,-97,o),
(171,-77,o),
(185,-77,qs),
(200,-77,o)
);
},
{
closed = 1;
nodes = (
(318,-97,o),
(318,-112,qs),
(318,-127,o),
(298,-147,o),
(283,-147,qs),
(269,-147,o),
(249,-127,o),
(249,-112,qs),
(249,-97,o),
(269,-77,o),
(283,-77,qs),
(298,-77,o)
);
},
{
closed = 1;
nodes = (
(269,-178,o),
(269,-193,qs),
(269,-208,o),
(249,-228,o),
(234,-228,qs),
(220,-228,o),
(200,-208,o),
(200,-193,qs),
(200,-178,o),
(220,-158,o),
(234,-158,qs),
(249,-158,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
17 1 2 1 3 1 0 2 35 1 5 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 2 1 0 1 2 0 128 15 9 14 3 7 5 8 5 7 114 10 1 8 11 5 8 11 126 16 1 11 12 5 11 12 126 0 12 12 132 0 3 0 1 2 3 1 105 4 13 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 2 1 0 1 2 0 128 15 9 14 3 7 5 8 5 7 8 128 10 1 8 11 5 8 11 126 16 1 11 12 5 11 12 126 0 12 12 132 0 3 0 1 2 3 1 105 4 13 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
65 64 53 52 41 40 1 0 71 69 64 75 65 75 59 57 52 63 53 63 47 45 40 51 41 51 38 36 34 32 31 29 24 22 16 14 8 6 0 39 1 39 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFB7D;
unicode = 64381;
},
{
glyphname = uniFB89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,451,o),
(109,454,qs),
(109,457,ls),
(109,481,o),
(142,481,qs),
(153,481,l),
(153,621,ls),
(153,661,o),
(181,661,qs),
(183,661,ls),
(186,661,o),
(186,657,qs),
(186,599,l),
(232,599,ls),
(268,599,o),
(310,560,o),
(310,525,qs),
(310,491,o),
(268,451,o),
(232,451,qs),
(112,451,ls)
);
},
{
closed = 1;
nodes = (
(186,481,l),
(236,481,ls),
(253,481,o),
(277,507,o),
(277,525,qs),
(277,544,o),
(253,569,o),
(236,569,qs),
(186,569,l)
);
},
{
closed = 1;
nodes = (
(478,0,l),
(447,0,ls),
(360,0,o),
(324,64,q),
(282,0,o),
(197,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o),
(310,321,qs),
(353,268,o),
(353,175,qs),
(354,154,ls),
(355,104,o),
(402,49,o),
(445,49,qs),
(478,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
8 1 1 2 17 1 0 3 66 1 6 8 3 76 0 2 1 2 133 0 8 9 6 9 8 6 128 0 1 14 1 4 3 1 4 105 5 1 3 13 1 0 7 3 0 104 0 7 0 9 8 7 9 105 10 15 2 6 6 11 97 12 1 11 11 24 11 78 31 30 22 21 1 0 69 67 65 62 58 55 50 48 44 43 39 37 30 70 31 70 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFB89;
unicode = 64393;
},
{
glyphname = uniFB8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,522,o),
(120,537,qs),
(120,552,o),
(140,572,o),
(154,572,qs),
(168,572,o),
(188,552,o),
(188,537,qs),
(188,522,o),
(168,502,o),
(154,502,qs),
(140,502,o)
);
},
{
closed = 1;
nodes = (
(71,441,o),
(71,456,qs),
(71,471,o),
(91,491,o),
(105,491,qs),
(120,491,o),
(139,471,o),
(139,456,qs),
(139,441,o),
(120,421,o),
(105,421,qs),
(91,421,o)
);
},
{
closed = 1;
nodes = (
(189,491,o),
(203,491,qs),
(217,491,o),
(237,471,o),
(237,456,qs),
(237,441,o),
(217,421,o),
(203,421,qs),
(189,421,o),
(169,441,o),
(169,456,qs),
(169,471,o)
);
},
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
40 1 6 7 61 1 11 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 12 1 0 0 1 97 0 1 1 23 77 14 1 6 6 11 97 0 11 11 24 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
0 7 2 6 2 7 6 128 0 9 11 8 11 9 8 128 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 39 values pushed */
37 36 13 12 1 0 64 62 59 57 53 51 49 47 44 42 36 65 37 65 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = uniFB8B;
unicode = 64395;
},
{
glyphname = uniFB8D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(48,432,o),
(48,436,qs),
(48,438,ls),
(48,463,o),
(81,463,qs),
(92,463,l),
(92,602,ls),
(92,642,o),
(119,642,qs),
(122,642,ls),
(125,642,o),
(125,638,qs),
(125,581,l),
(171,581,ls),
(207,581,o),
(248,541,o),
(248,507,qs),
(248,472,o),
(207,432,o),
(171,432,qs),
(51,432,ls)
);
},
{
closed = 1;
nodes = (
(125,463,l),
(174,463,ls),
(192,463,o),
(216,488,o),
(216,507,qs),
(216,525,o),
(192,551,o),
(174,551,qs),
(125,551,l)
);
},
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 116 values pushed */
8 1 1 2 17 1 0 3 34 1 6 7 55 1 11 6 4 76 0 2 1 2 133 0 7 0 6 0 7 6 128 0 9 11 8 11 9 8 128 0 1 13 1 4 3 1 4 105 5 1 3 12 1 0 7 3 0 104 0 8 0 10 8 10 101 14 1 6 6 11 97 0 11 11 24 11 78 31 30 22 21 1 0 58 56 53 51 47 45 43 41 38 36 30 59 31 59 28 26 21 29 22 29 16 14 12 10 7 5 0 20 1 20 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = uniFB8D;
unicode = 64397;
},
{
glyphname = uniFB8F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(834,0,l),
(804,0,ls),
(717,0,o),
(681,64,q),
(638,0,o),
(554,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(551,49,ls),
(594,49,o),
(622,75,qs),
(658,108,o),
(658,176,qs),
(658,237,o),
(629,270,qs),
(601,302,o),
(551,302,qs),
(350,302,ls),
(309,302,o),
(309,334,qs),
(309,349,ls),
(309,369,o),
(323,379,qs),
(563,554,ls),
(568,557,o),
(571,555,qs),
(585,544,o),
(580,512,o),
(563,499,qs),
(367,355,ls),
(364,353,o),
(364,352,qs),
(364,349,o),
(368,349,qs),
(554,349,ls),
(616,349,o),
(656,315,qs),
(710,270,o),
(710,173,qs),
(711,154,ls),
(711,104,o),
(759,49,o),
(801,49,qs),
(834,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
53 1 0 4 1 76 0 4 2 0 2 4 0 128 0 1 0 2 4 1 2 103 3 7 2 0 0 5 98 6 1 5 5 24 5 78 1 0 56 54 52 49 44 42 36 33 27 24 9 7 0 57 1 57 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 828;
}
);
note = uniFB8F;
unicode = 64399;
},
{
glyphname = uniFB90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,75,qs),
(434,108,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(361,544,o),
(356,512,o),
(339,499,qs),
(143,355,ls),
(140,353,o),
(140,352,qs),
(140,349,o),
(144,349,qs),
(330,349,ls),
(392,349,o),
(432,315,qs),
(486,270,o),
(486,173,qs),
(486,93,o),
(443,47,qs),
(400,0,o),
(330,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 35 33 27 24 9 7 0 36 1 36 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFB90;
unicode = 64400;
},
{
glyphname = uniFB91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,0,l),
(580,0,ls),
(493,0,o),
(457,64,q),
(414,0,o),
(330,0,qs),
(-4,0,l),
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,75,qs),
(434,108,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(361,544,o),
(356,512,o),
(339,499,qs),
(143,355,ls),
(140,353,o),
(140,352,qs),
(140,349,o),
(144,349,qs),
(330,349,ls),
(392,349,o),
(432,315,qs),
(486,270,o),
(486,173,qs),
(487,154,ls),
(487,104,o),
(535,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
39 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 42 40 38 36 35 33 27 24 9 7 0 43 1 43 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFB91;
unicode = 64401;
},
{
glyphname = uniFB93;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,490,o),
(307,493,o),
(307,499,q),
(306,501,o),
(307,508,qs),
(307,512,o),
(307,513,qs),
(307,523,o),
(319,532,qs),
(506,668,ls),
(511,671,o),
(513,668,q),
(522,660,o),
(522,649,qs),
(522,637,o),
(503,623,qs),
(324,495,ls)
);
},
{
closed = 1;
nodes = (
(834,0,l),
(799,0,ls),
(716,0,o),
(682,64,q),
(640,0,o),
(554,0,qs),
(246,0,ls),
(60,0,o),
(60,152,qs),
(60,190,o),
(100,267,o),
(133,292,qs),
(142,298,o),
(147,298,qs),
(158,298,o),
(157,288,qs),
(157,282,o),
(153,277,qs),
(106,223,o),
(106,162,qs),
(106,49,o),
(247,49,qs),
(551,49,ls),
(594,49,o),
(622,74,qs),
(658,107,o),
(658,176,qs),
(658,237,o),
(629,270,qs),
(601,302,o),
(551,302,qs),
(350,302,ls),
(309,302,o),
(309,334,qs),
(309,349,ls),
(309,370,o),
(323,379,qs),
(563,554,ls),
(568,557,o),
(571,555,qs),
(581,548,o),
(581,536,q),
(587,516,o),
(563,499,qs),
(367,355,l),
(366,355,o),
(365,353,q),
(365,352,o),
(364,352,q),
(366,349,o),
(370,349,qs),
(554,349,ls),
(615,349,o),
(655,317,qs),
(708,273,o),
(710,179,qs),
(711,154,ls),
(711,104,o),
(759,49,o),
(801,49,qs),
(834,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
35 9 2 2 0 73 1 1 5 2 76 0 0 2 0 133 0 5 3 1 3 5 1 128 0 2 0 3 5 2 3 104 4 8 2 1 1 6 98 7 1 6 6 24 6 78 18 17 76 74 72 69 63 62 56 53 47 44 26 24 17 77 18 77 36 9 7 23 
CALL[ ]	/* CallFunction */";
};
width = 828;
}
);
note = uniFB93;
unicode = 64403;
},
{
glyphname = uniFB94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,490,o),
(83,493,o),
(83,499,q),
(82,501,o),
(83,508,qs),
(83,512,o),
(83,513,qs),
(83,523,o),
(95,532,qs),
(282,668,ls),
(287,671,o),
(289,668,q),
(298,660,o),
(298,649,qs),
(298,637,o),
(279,623,qs),
(100,495,ls)
);
},
{
closed = 1;
nodes = (
(392,349,o),
(432,315,qs),
(486,270,o),
(486,173,qs),
(486,91,o),
(443,45,qs),
(401,0,o),
(330,0,qs),
(-4,0,l),
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,74,qs),
(434,107,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(357,547,o),
(357,536,q),
(363,517,o),
(339,499,qs),
(143,355,l),
(140,354,o),
(140,352,q),
(143,349,o),
(146,349,qs),
(330,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
24 9 2 4 0 1 76 0 0 4 0 133 5 1 4 0 1 2 4 1 104 0 2 2 3 95 0 3 3 24 3 78 17 17 17 54 17 53 47 45 44 42 36 33 36 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFB94;
unicode = 64404;
},
{
glyphname = uniFB95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(93,490,o),
(83,493,o),
(83,499,q),
(82,501,o),
(83,508,qs),
(83,512,o),
(83,513,qs),
(83,523,o),
(95,532,qs),
(282,668,ls),
(287,671,o),
(289,668,q),
(298,660,o),
(298,649,qs),
(298,637,o),
(279,623,qs),
(100,495,ls)
);
},
{
closed = 1;
nodes = (
(610,0,l),
(575,0,ls),
(492,0,o),
(458,64,q),
(416,0,o),
(330,0,qs),
(-4,0,l),
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,74,qs),
(434,107,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(357,547,o),
(357,536,q),
(363,517,o),
(339,499,qs),
(143,355,l),
(140,354,o),
(140,352,q),
(143,349,o),
(146,349,qs),
(330,349,ls),
(391,349,o),
(431,317,qs),
(484,273,o),
(486,179,qs),
(487,154,ls),
(487,104,o),
(535,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
33 9 2 2 0 57 1 1 3 2 76 0 0 2 0 133 0 2 0 3 1 2 3 104 4 7 2 1 1 5 97 6 1 5 5 24 5 78 18 17 60 58 56 54 53 51 45 42 26 24 17 61 18 61 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFB95;
unicode = 64405;
},
{
glyphname = uniFB9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,0,l),
(632,0,ls),
(574,0,o),
(538,30,q),
(535,-79,o),
(472,-145,qs),
(406,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,298,ls),
(487,321,o),
(510,349,o),
(528,349,qs),
(533,349,ls),
(538,349,o),
(538,344,qs),
(538,156,ls),
(538,106,o),
(587,49,o),
(630,49,qs),
(663,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
4 1 3 1 38 1 5 0 2 76 0 1 3 1 133 0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 41 39 35 33 26 24 16 14 8 6 0 42 1 42 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uniFB9F;
unicode = 64415;
},
{
glyphname = uniFBA5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,468,qs),
(147,492,o),
(176,498,q),
(162,518,o),
(162,543,qs),
(162,575,o),
(201,617,o),
(231,617,qs),
(253,617,o),
(285,593,o),
(287,576,qs),
(288,568,o),
(282,568,qs),
(280,568,o),
(274,571,qs),
(272,572,ls),
(253,583,o),
(239,583,qs),
(221,583,o),
(199,560,o),
(199,543,qs),
(199,524,o),
(220,501,o),
(237,501,qs),
(281,501,ls),
(308,501,o),
(308,476,qs),
(308,473,ls),
(308,467,o),
(302,467,qs),
(219,467,ls),
(186,467,o),
(163,459,q),
(162,459,o),
(159,458,qs),
(153,456,o),
(153,456,q),
(147,456,o)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
34 9 2 0 1 42 1 7 6 60 1 5 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 12 1 5 5 9 97 0 9 9 24 77 13 1 10 10 8 97 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 3 2 1 2 3 1 128 0 6 0 7 0 6 7 128 0 4 0 2 3 4 2 105 0 1 0 0 6 1 0 103 0 7 0 11 5 7 11 103 13 1 10 0 8 10 8 101 12 1 5 5 9 97 0 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
66 65 39 38 74 72 65 78 66 78 63 61 59 57 51 49 46 44 38 64 39 64 35 35 36 52 37 14 7 27 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uniFBA5;
unicode = 64421;
},
{
glyphname = uniFBA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 22 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 36 34 27 40 28 40 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uniFBA7;
unicode = 64423;
},
{
glyphname = uniFBA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,66,o),
(107,26,q),
(97,14,o),
(67,-30,qs),
(48,-57,o),
(43,-75,q),
(74,-81,o),
(73,-112,qs),
(73,-127,o),
(51,-149,o),
(37,-149,qs),
(20,-149,o),
(0,-127,o),
(-1,-109,qs),
(-1,-59,o),
(53,3,q),
(37,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
28 1 1 0 11 1 2 1 21 1 3 2 3 76 4 1 0 1 0 133 0 3 2 3 134 0 1 1 2 97 0 2 2 24 2 78 1 0 17 15 10 8 7 5 0 30 1 30 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFBA8;
unicode = 64424;
},
{
glyphname = uniFBA9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(544,-30,ls),
(525,-56,o),
(520,-75,q),
(551,-81,o),
(550,-112,qs),
(550,-127,o),
(529,-149,o),
(514,-149,qs),
(498,-149,o),
(478,-127,o),
(477,-109,qs),
(476,-60,o),
(528,0,q),
(380,0,ls),
(366,0,o),
(367,-24,qs),
(367,-28,o),
(367,-29,qs),
(366,-111,o),
(327,-157,qs),
(284,-214,o),
(201,-214,qs),
(127,-214,o),
(84,-164,qs),
(42,-117,o),
(42,-37,qs),
(42,-16,o),
(45,2,q),
(37,0,o),
(8,0,qs),
(0,0,o),
(-4,0,q),
(-4,49,l),
(24,49,ls),
(68,49,o),
(90,68,qs),
(97,73,o),
(103,73,qs),
(111,73,o),
(109,62,qs),
(108,59,o),
(107,56,qs),
(97,13,o),
(97,-17,qs),
(95,-69,o),
(112,-103,q),
(124,-133,o),
(172,-167,o),
(201,-167,qs),
(259,-167,o),
(288,-125,qs),
(313,-90,o),
(313,-34,qs),
(314,7,o),
(317,19,qs),
(326,49,o),
(362,49,qs),
(625,49,l),
(625,0,l),
(565,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
31 1 4 0 56 1 7 4 2 76 0 2 0 2 133 0 7 4 1 4 7 1 128 0 1 0 5 1 5 101 3 1 0 0 4 95 9 8 6 3 4 4 24 4 78 0 0 0 59 0 59 36 38 38 49 35 25 38 33 10 7 30 
CALL[ ]	/* CallFunction */";
};
width = 618;
}
);
note = uniFBA9;
unicode = 64425;
},
{
glyphname = uniFBAB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(781,0,l),
(750,0,ls),
(663,0,o),
(627,64,q),
(584,0,o),
(501,0,qs),
(346,0,ls),
(299,0,o),
(281,13,q),
(264,0,o),
(217,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(211,49,l),
(175,69,o),
(131,147,o),
(131,191,qs),
(131,281,o),
(191,328,q),
(173,329,o),
(158,332,qs),
(105,341,o),
(103,383,qs),
(103,387,ls),
(103,395,o),
(112,392,qs),
(132,384,o),
(150,381,q),
(178,373,o),
(272,371,qs),
(349,368,o),
(455,368,qs),
(546,368,o),
(597,325,qs),
(656,276,o),
(656,177,qs),
(657,154,ls),
(658,104,o),
(705,49,o),
(747,49,qs),
(781,49,l)
);
},
{
closed = 1;
nodes = (
(544,49,o),
(572,79,qs),
(605,113,o),
(605,176,qs),
(605,319,o),
(451,322,qs),
(424,322,o),
(377,323,q),
(431,275,o),
(431,191,qs),
(431,147,o),
(387,69,o),
(352,49,q),
(498,49,ls)
);
},
{
closed = 1;
nodes = (
(214,289,qs),
(180,253,o),
(180,193,qs),
(180,145,o),
(236,70,o),
(281,58,q),
(326,70,o),
(383,145,o),
(383,193,qs),
(383,248,o),
(326,318,o),
(281,318,qs),
(242,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
66 41 2 0 9 36 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
66 41 2 0 7 36 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
12 1 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 7 7 2 114 0 1 12 9 2 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
61 60 46 46 1 0 60 72 61 72 46 59 46 58 54 51 44 42 40 37 35 32 28 26 21 20 11 7 0 45 1 45 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 774;
}
);
note = uniFBAB;
unicode = 64427;
},
{
glyphname = uniFBAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(563,325,qs),
(622,276,o),
(622,175,qs),
(622,99,o),
(584,52,qs),
(541,0,o),
(466,0,qs),
(312,0,ls),
(264,0,o),
(247,13,q),
(230,0,o),
(182,0,qs),
(-4,0,l),
(-4,49,l),
(176,49,l),
(140,69,o),
(97,147,o),
(97,191,qs),
(97,281,o),
(157,328,q),
(138,329,o),
(123,332,qs),
(71,341,o),
(69,383,qs),
(69,387,ls),
(69,395,o),
(77,392,qs),
(98,384,o),
(115,381,q),
(143,373,o),
(238,371,qs),
(314,368,o),
(420,368,qs),
(512,368,o)
);
},
{
closed = 1;
nodes = (
(510,49,o),
(538,79,qs),
(570,113,o),
(570,176,qs),
(570,319,o),
(417,322,qs),
(389,322,o),
(342,323,q),
(396,275,o),
(396,191,qs),
(396,147,o),
(353,69,o),
(317,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(179,289,qs),
(145,253,o),
(145,193,qs),
(145,145,o),
(202,70,o),
(247,58,q),
(292,70,o),
(349,145,o),
(349,193,qs),
(349,248,o),
(291,318,o),
(247,318,qs),
(207,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 2 7 23 1 3 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 2 5 23 1 3 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 7 1 2 1 7 114 8 1 0 5 1 1 7 0 1 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 5 5 1 114 8 1 0 10 7 2 5 2 0 5 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
49 48 34 34 3 0 48 60 49 60 34 47 34 46 42 39 27 24 22 20 19 18 13 12 0 33 3 33 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uniFBAC;
unicode = 64428;
},
{
glyphname = uniFBAD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(747,0,l),
(716,0,ls),
(628,0,o),
(593,64,q),
(550,0,o),
(466,0,qs),
(312,0,ls),
(264,0,o),
(247,13,q),
(230,0,o),
(182,0,qs),
(-4,0,l),
(-4,49,l),
(176,49,l),
(140,69,o),
(97,147,o),
(97,191,qs),
(97,281,o),
(157,328,q),
(138,329,o),
(123,332,qs),
(71,341,o),
(69,383,qs),
(69,387,ls),
(69,395,o),
(77,392,qs),
(98,384,o),
(115,381,q),
(143,373,o),
(238,371,qs),
(314,368,o),
(420,368,qs),
(511,368,o),
(562,325,qs),
(622,276,o),
(622,177,qs),
(623,154,ls),
(624,104,o),
(671,49,o),
(713,49,qs),
(747,49,l)
);
},
{
closed = 1;
nodes = (
(510,49,o),
(538,79,qs),
(570,113,o),
(570,176,qs),
(570,319,o),
(417,322,qs),
(389,322,o),
(342,323,q),
(396,275,o),
(396,191,qs),
(396,147,o),
(353,69,o),
(317,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(179,289,qs),
(145,253,o),
(145,193,qs),
(145,145,o),
(202,70,o),
(247,58,q),
(292,70,o),
(349,145,o),
(349,193,qs),
(349,248,o),
(291,318,o),
(247,318,qs),
(207,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
61 36 2 0 9 31 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
61 36 2 0 7 31 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
12 1 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 7 7 2 114 0 1 12 9 2 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 55 41 41 1 0 55 67 56 67 41 54 41 53 49 46 39 37 35 32 30 28 27 26 21 20 11 7 0 40 1 40 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = uniFBAD;
unicode = 64429;
},
{
glyphname = uniFBAF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-234,qs),
(190,-281,o),
(269,-284,qs),
(328,-286,o),
(372,-271,qs),
(403,-261,o),
(438,-241,qs),
(444,-238,o),
(449,-238,qs),
(458,-238,o),
(458,-247,qs),
(458,-254,o),
(453,-261,qs),
(432,-291,o),
(388,-310,qs),
(336,-333,o),
(264,-331,qs),
(175,-329,o),
(119,-279,qs),
(60,-226,o),
(60,-141,qs),
(60,-66,o),
(107,-14,qs),
(164,49,o),
(266,49,qs),
(534,49,l),
(534,0,l),
(266,0,ls),
(200,0,o),
(158,-39,qs),
(114,-79,o),
(114,-142,qs),
(114,-196,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 3 0 4 0 3 4 128 0 4 0 2 4 2 101 0 1 1 0 95 0 0 0 24 0 78 37 22 38 33 35 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = uniFBAF;
unicode = 64431;
},
{
glyphname = uniFBB1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,133,qs),
(179,157,o),
(208,162,q),
(194,182,o),
(194,208,qs),
(194,240,o),
(233,281,o),
(263,281,qs),
(285,281,o),
(317,257,o),
(319,240,qs),
(321,232,o),
(314,232,qs),
(312,232,o),
(306,235,qs),
(304,236,o),
(304,237,q),
(285,247,o),
(271,247,qs),
(254,247,o),
(232,225,o),
(232,207,qs),
(232,189,o),
(253,166,o),
(269,166,qs),
(313,166,ls),
(341,166,o),
(341,140,qs),
(341,137,ls),
(341,132,o),
(334,132,qs),
(252,132,ls),
(218,132,o),
(195,124,q),
(194,124,o),
(192,123,qs),
(186,121,o),
(185,121,qs),
(179,121,o)
);
},
{
closed = 1;
nodes = (
(200,0,o),
(158,-39,qs),
(114,-79,o),
(114,-142,qs),
(114,-196,o),
(147,-234,qs),
(190,-281,o),
(269,-284,qs),
(328,-286,o),
(372,-271,qs),
(403,-261,o),
(438,-241,qs),
(444,-238,o),
(449,-238,qs),
(458,-238,o),
(458,-247,qs),
(458,-254,o),
(453,-261,qs),
(432,-291,o),
(388,-310,qs),
(336,-333,o),
(264,-331,qs),
(175,-329,o),
(119,-279,qs),
(60,-226,o),
(60,-141,qs),
(60,-66,o),
(107,-14,qs),
(164,49,o),
(266,49,qs),
(534,49,l),
(534,0,l),
(266,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 99 values pushed */
35 1 1 2 1 76 0 4 3 2 3 4 2 128 11 1 0 1 6 1 0 6 128 0 8 10 9 10 8 9 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 9 0 7 9 7 101 0 6 6 10 95 12 1 10 10 24 10 78 39 39 1 0 39 71 39 70 64 62 57 56 50 48 42 40 31 29 26 24 20 18 14 11 8 5 0 38 1 38 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 528;
}
);
note = uniFBB1;
unicode = 64433;
},
{
glyphname = dotabovear;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,485,o),
(187,469,qs),
(187,453,o),
(165,431,o),
(150,431,qs),
(134,431,o),
(113,453,o),
(113,469,qs),
(113,485,o),
(134,507,o),
(150,507,qs),
(165,507,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotabovear;
unicode = 64434;
},
{
glyphname = dotbelowar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,-96,o),
(134,-112,qs),
(134,-128,o),
(113,-149,o),
(98,-149,qs),
(82,-149,o),
(61,-128,o),
(61,-112,qs),
(61,-96,o),
(82,-74,o),
(98,-74,qs),
(113,-74,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
2 1 0 1 1 0 89 2 1 0 0 1 97 0 1 0 1 81 1 0 7 5 0 11 1 11 3 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowar;
unicode = 64435;
},
{
glyphname = uniFBE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 2 1 133 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 7 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFBE8;
unicode = 64488;
},
{
glyphname = uniFBE9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 6 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFBE9;
unicode = 64489;
},
{
glyphname = uniFBFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,0,l),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(642,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 36 35 32 30 22 21 12 10 7 5 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uniFBFD;
unicode = 64509;
},
{
glyphname = uniFBFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(83,-97,o),
(83,-112,qs),
(83,-127,o),
(63,-147,o),
(49,-147,qs),
(35,-147,o),
(15,-127,o),
(15,-112,qs),
(15,-97,o),
(35,-77,o),
(49,-77,qs),
(63,-77,o)
);
},
{
closed = 1;
nodes = (
(181,-97,o),
(181,-112,qs),
(181,-127,o),
(161,-147,o),
(147,-147,qs),
(132,-147,o),
(113,-127,o),
(113,-112,qs),
(113,-97,o),
(132,-77,o),
(147,-77,qs),
(161,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
5 1 2 1 1 76 0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 102 0 2 2 0 97 7 1 0 0 24 0 78 30 29 18 17 1 0 36 34 29 40 30 40 24 22 17 28 18 28 15 13 9 7 0 16 1 16 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFBFE;
unicode = 64510;
},
{
glyphname = uniFBFF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(87,-147,o),
(73,-147,qs),
(58,-147,o),
(39,-127,o),
(39,-112,qs),
(39,-97,o),
(58,-77,o),
(73,-77,qs),
(87,-77,o),
(107,-97,o),
(107,-112,qs),
(107,-127,o)
);
},
{
closed = 1;
nodes = (
(205,-97,o),
(205,-112,qs),
(205,-127,o),
(185,-147,o),
(170,-147,qs),
(156,-147,o),
(137,-127,o),
(137,-112,qs),
(137,-97,o),
(156,-77,o),
(170,-77,qs),
(185,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 10 7 2 5 8 1 6 5 6 101 2 9 2 0 0 3 97 4 1 3 3 24 3 78 36 35 1 0 42 40 35 46 36 46 33 31 27 25 21 19 17 15 14 12 8 6 0 22 1 22 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFBFF;
unicode = 64511;
},
{
glyphname = uniFC09;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(817,349,o),
(817,344,qs),
(817,155,ls),
(817,86,o),
(783,46,qs),
(744,0,o),
(672,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(674,49,ls),
(717,49,o),
(766,106,o),
(766,156,qs),
(766,299,ls),
(766,349,o),
(807,349,qs),
(812,349,ls)
);
},
{
closed = 1;
nodes = (
(730,-96,o),
(730,-112,qs),
(730,-128,o),
(709,-149,o),
(693,-149,qs),
(678,-149,o),
(657,-128,o),
(657,-112,qs),
(657,-96,o),
(678,-74,o),
(693,-74,qs),
(709,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
48 1 4 0 1 76 9 1 0 4 0 133 0 4 1 4 133 10 1 7 0 8 3 7 8 105 0 3 0 5 3 5 101 0 1 1 2 95 6 1 2 2 24 2 78 52 51 1 0 58 56 51 62 52 62 44 42 39 37 29 28 19 17 14 12 8 5 0 50 1 50 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 887;
}
);
note = uniFC09;
unicode = 64521;
},
{
glyphname = uniFC0A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(817,349,o),
(817,344,qs),
(817,155,ls),
(817,86,o),
(783,46,qs),
(744,0,o),
(672,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(674,49,ls),
(717,49,o),
(766,106,o),
(766,156,qs),
(766,299,ls),
(766,349,o),
(807,349,qs),
(812,349,ls)
);
},
{
closed = 1;
nodes = (
(730,-96,o),
(730,-112,qs),
(730,-128,o),
(709,-149,o),
(693,-149,qs),
(678,-149,o),
(657,-128,o),
(657,-112,qs),
(657,-96,o),
(678,-74,o),
(693,-74,qs),
(709,-74,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
48 1 4 0 1 76 13 1 0 4 0 133 0 4 1 4 133 14 1 7 0 8 3 7 8 105 0 3 0 5 9 3 5 105 16 11 15 3 9 12 1 10 9 10 101 0 1 1 2 95 6 1 2 2 24 2 78 76 75 64 63 52 51 1 0 82 80 75 86 76 86 70 68 63 74 64 74 58 56 51 62 52 62 44 42 39 37 29 28 19 17 14 12 8 5 0 50 1 50 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 887;
}
);
note = uniFC0A;
unicode = 64522;
},
{
glyphname = uniFC32;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(776,463,o),
(776,479,qs),
(776,495,o),
(797,517,o),
(812,517,qs),
(828,517,o),
(849,495,o),
(849,479,qs),
(849,463,o),
(828,441,o),
(812,441,qs),
(797,441,o)
);
},
{
closed = 1;
nodes = (
(920,322,qs),
(972,269,o),
(972,183,qs),
(972,111,o),
(933,60,qs),
(889,2,o),
(814,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(698,49,l),
(645,95,o),
(645,183,qs),
(645,258,o),
(685,309,qs),
(731,368,o),
(808,368,qs),
(875,368,o)
);
},
{
closed = 1;
nodes = (
(887,85,qs),
(920,124,o),
(920,184,qs),
(920,237,o),
(894,274,qs),
(863,321,o),
(808,321,qs),
(761,321,o),
(730,285,qs),
(697,245,o),
(697,184,qs),
(697,132,o),
(723,95,qs),
(754,49,o),
(808,49,qs),
(856,49,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
0 6 10 3 10 6 3 128 0 1 15 1 0 2 1 0 105 16 1 2 0 10 6 2 10 105 0 5 0 7 11 5 7 105 19 13 18 3 11 14 1 12 11 12 101 17 9 2 3 3 4 95 8 1 4 4 24 4 78 92 91 80 79 64 63 13 12 1 0 98 96 91 102 92 102 86 84 79 90 80 90 72 70 63 78 64 78 56 54 51 49 41 40 31 29 26 24 20 18 12 62 13 62 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1032;
}
);
note = uniFC32;
unicode = 64562;
},
{
glyphname = uniFC59;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
5 1 5 1 1 76 0 1 5 1 133 0 5 2 5 133 13 9 12 3 7 10 1 8 4 7 8 106 0 4 0 6 4 6 101 0 2 2 0 95 3 11 2 0 0 24 0 78 64 63 52 51 1 0 70 68 63 74 64 74 58 56 51 62 52 62 47 45 37 36 27 25 22 20 16 13 9 7 0 50 1 50 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFC59;
unicode = 64601;
},
{
glyphname = uniFC5A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(673,49,ls),
(716,49,o),
(764,106,o),
(764,156,qs),
(764,299,ls),
(764,349,o),
(805,349,qs),
(810,349,ls),
(816,349,o),
(816,344,qs),
(816,155,ls),
(816,86,o),
(781,46,qs),
(742,0,o),
(671,0,qs),
(604,0,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 113 values pushed */
5 1 5 1 1 76 0 1 5 1 133 0 5 2 5 133 17 9 16 3 7 10 1 8 4 7 8 106 0 4 0 6 11 4 6 105 19 13 18 3 11 14 1 12 11 12 101 0 2 2 0 95 3 15 2 0 0 24 0 78 88 87 76 75 64 63 52 51 1 0 94 92 87 98 88 98 82 80 75 86 76 86 70 68 63 74 64 74 58 56 51 62 52 62 47 45 37 36 27 25 22 20 16 13 9 7 0 50 1 50 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 886;
}
);
note = uniFC5A;
unicode = 64602;
},
{
glyphname = uniFC5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(28,684,q),
(16,698,o),
(25,722,qs),
(35,743,o),
(59,743,qs),
(79,743,o),
(104,721,qs),
(116,711,o),
(122,711,qs),
(129,711,o),
(135,716,qs),
(144,723,l),
(114,750,o),
(114,779,qs),
(113,805,o),
(147,838,o),
(173,838,qs),
(199,837,o),
(232,804,o),
(232,779,qs),
(230,751,o),
(195,722,q),
(208,704,o),
(191,689,q),
(186,686,o),
(181,691,qs),
(169,702,l),
(148,686,ls),
(134,675,o),
(120,675,qs),
(106,675,o),
(82,696,qs),
(68,709,o),
(61,709,qs),
(52,709,o),
(39,685,q),
(36,677,o)
);
},
{
closed = 1;
nodes = (
(147,779,qs),
(149,762,o),
(171,743,q),
(198,764,o),
(198,779,qs),
(199,790,o),
(185,808,o),
(174,808,qs),
(146,808,o)
);
},
{
closed = 1;
nodes = (
(238,604,o),
(238,599,qs),
(238,545,ls),
(238,511,o),
(204,472,o),
(173,471,qs),
(143,470,o),
(126,491,q),
(107,470,o),
(81,471,qs),
(15,473,o),
(15,545,qs),
(15,563,ls),
(15,582,o),
(21,592,qs),
(29,604,o),
(44,604,qs),
(47,604,ls),
(52,604,o),
(52,599,qs),
(52,539,ls),
(52,505,o),
(80,505,qs),
(108,505,o),
(108,539,qs),
(108,563,ls),
(108,582,o),
(115,593,qs),
(122,604,o),
(137,604,qs),
(141,604,ls),
(145,604,o),
(145,599,qs),
(145,539,ls),
(145,505,o),
(173,505,qs),
(201,505,o),
(201,539,qs),
(201,563,ls),
(201,582,o),
(208,593,qs),
(216,604,o),
(231,604,qs),
(233,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
44 40 16 3 4 5 24 14 2 3 4 9 1 1 0 87 69 56 3 7 6 81 1 11 7 5 76 42 1 4 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
10 8 14 3 6 1 7 7 6 114 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
10 8 14 3 6 1 7 1 6 7 128 0 2 13 1 5 4 2 5 105 0 4 0 0 1 4 0 105 0 3 0 1 6 3 1 105 9 1 7 11 11 7 89 9 1 7 7 11 98 12 1 11 7 11 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
47 46 38 37 84 82 80 78 73 71 67 65 60 58 54 52 46 89 47 89 37 45 38 45 35 22 43 34 33 15 7 27 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5E;
unicode = 64606;
},
{
glyphname = uniFC5F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,809,o),
(238,803,qs),
(238,749,ls),
(238,715,o),
(204,676,o),
(173,676,qs),
(143,675,o),
(126,695,q),
(107,675,o),
(81,676,qs),
(15,677,o),
(15,749,qs),
(15,768,ls),
(15,787,o),
(21,797,qs),
(29,809,o),
(44,809,qs),
(47,809,ls),
(52,809,o),
(52,803,qs),
(52,744,ls),
(52,709,o),
(80,709,qs),
(108,709,o),
(108,744,qs),
(108,768,ls),
(108,787,o),
(115,797,qs),
(122,809,o),
(137,809,qs),
(141,809,ls),
(145,809,o),
(145,803,qs),
(145,744,ls),
(145,709,o),
(173,709,qs),
(201,709,o),
(201,744,qs),
(201,768,ls),
(201,787,o),
(208,797,qs),
(216,809,o),
(231,809,qs),
(233,809,ls)
);
},
{
closed = 1;
nodes = (
(209,592,o),
(209,566,qs),
(209,563,ls),
(209,558,o),
(202,558,qs),
(118,558,ls),
(87,558,o),
(63,550,q),
(62,550,o),
(60,549,qs),
(54,547,o),
(53,547,qs),
(48,547,o),
(48,559,qs),
(48,583,o),
(77,588,qs),
(97,592,o),
(127,592,qs),
(182,592,ls)
);
},
{
closed = 1;
nodes = (
(209,510,o),
(209,484,qs),
(209,482,ls),
(209,476,o),
(202,476,qs),
(118,476,ls),
(87,476,o),
(63,468,q),
(62,468,o),
(60,467,qs),
(54,465,o),
(53,465,qs),
(48,465,o),
(48,477,qs),
(48,501,o),
(77,507,qs),
(97,510,o),
(127,510,qs),
(182,510,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
41 23 10 3 1 0 35 1 5 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
4 2 11 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 89 13 1 9 9 10 95 0 10 9 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
4 2 11 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 12 1 7 0 8 9 7 8 104 13 1 9 10 10 9 89 13 1 9 9 10 95 0 10 9 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
64 63 45 44 1 0 77 74 63 81 64 80 58 55 44 62 45 61 38 36 34 32 27 25 21 19 14 12 8 6 0 43 1 43 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC5F;
unicode = 64607;
},
{
glyphname = uniFC60;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,689,qs),
(46,714,o),
(76,719,qs),
(96,722,o),
(126,722,qs),
(180,722,ls),
(207,722,o),
(207,697,qs),
(207,694,ls),
(207,688,o),
(201,688,qs),
(116,688,ls),
(85,688,o),
(62,681,q),
(61,680,o),
(59,679,qs),
(52,677,o),
(52,677,q),
(46,677,o)
);
},
{
closed = 1;
nodes = (
(238,604,o),
(238,599,qs),
(238,545,ls),
(238,511,o),
(204,472,o),
(173,471,qs),
(143,470,o),
(126,491,q),
(107,470,o),
(81,471,qs),
(15,473,o),
(15,545,qs),
(15,563,ls),
(15,582,o),
(21,592,qs),
(29,604,o),
(44,604,qs),
(47,604,ls),
(52,604,o),
(52,599,qs),
(52,539,ls),
(52,505,o),
(80,505,qs),
(108,505,o),
(108,539,qs),
(108,563,ls),
(108,582,o),
(115,593,qs),
(122,604,o),
(137,604,qs),
(141,604,ls),
(145,604,o),
(145,599,qs),
(145,539,ls),
(145,505,o),
(173,505,qs),
(201,505,o),
(201,539,qs),
(201,563,ls),
(201,582,o),
(208,593,qs),
(216,604,o),
(231,604,qs),
(233,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
9 1 0 1 60 42 29 3 3 2 54 1 7 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 4 9 3 2 0 3 3 2 114 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
6 4 9 3 2 0 3 0 2 3 128 0 1 0 0 2 1 0 103 5 1 3 7 7 3 89 5 1 3 3 7 98 8 1 7 3 7 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
20 19 57 55 53 51 46 44 40 38 33 31 27 25 19 62 20 62 52 37 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC60;
unicode = 64608;
},
{
glyphname = uniFC61;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(45,695,o),
(47,696,qs),
(50,698,o),
(56,701,qs),
(91,721,o),
(122,743,q),
(91,769,o),
(91,799,qs),
(90,823,o),
(123,855,o),
(148,855,qs),
(174,855,o),
(207,823,o),
(206,798,qs),
(205,771,o),
(168,742,q),
(181,724,o),
(166,710,qs),
(162,707,o),
(158,711,qs),
(144,723,l),
(102,694,o),
(89,687,qs),
(76,680,o),
(69,680,qs),
(57,680,o),
(49,689,q),
(47,693,l)
);
},
{
closed = 1;
nodes = (
(121,798,qs),
(122,780,o),
(146,760,q),
(176,780,o),
(176,798,qs),
(177,811,o),
(161,828,o),
(149,828,qs),
(119,828,o)
);
},
{
closed = 1;
nodes = (
(238,604,o),
(238,599,qs),
(238,545,ls),
(238,511,o),
(204,472,o),
(173,471,qs),
(143,470,o),
(126,491,q),
(107,470,o),
(81,471,qs),
(15,473,o),
(15,545,qs),
(15,563,ls),
(15,582,o),
(21,592,qs),
(29,604,o),
(44,604,qs),
(47,604,ls),
(52,604,o),
(52,599,qs),
(52,539,ls),
(52,505,o),
(80,505,qs),
(108,505,o),
(108,539,qs),
(108,563,ls),
(108,582,o),
(115,593,qs),
(122,604,o),
(137,604,qs),
(141,604,ls),
(145,604,o),
(145,599,qs),
(145,539,ls),
(145,505,o),
(173,505,qs),
(201,505,o),
(201,539,qs),
(201,563,ls),
(201,582,o),
(208,593,qs),
(216,604,o),
(231,604,qs),
(233,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
33 31 21 11 6 5 0 2 78 60 47 3 4 3 72 1 8 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 4 3 112 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 46 values pushed */
0 0 2 3 2 0 3 128 7 5 11 3 3 4 2 3 4 126 0 1 10 1 2 0 1 2 105 6 1 4 8 8 4 89 6 1 4 4 8 98 9 1 8 4 8 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
38 37 29 28 75 73 71 69 64 62 58 56 51 49 45 43 37 80 38 80 28 36 29 36 44 33 12 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC61;
unicode = 64609;
},
{
glyphname = uniFC62;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,715,o),
(238,709,qs),
(238,656,ls),
(238,622,o),
(204,582,o),
(173,582,qs),
(143,581,o),
(126,601,q),
(107,581,o),
(81,582,qs),
(15,583,o),
(15,656,qs),
(15,674,ls),
(15,693,o),
(21,703,qs),
(29,715,o),
(44,715,qs),
(47,715,ls),
(52,715,o),
(52,709,qs),
(52,650,ls),
(52,616,o),
(80,616,qs),
(108,616,o),
(108,650,qs),
(108,674,ls),
(108,693,o),
(115,703,qs),
(123,715,o),
(137,715,qs),
(141,715,ls),
(145,715,o),
(145,709,qs),
(145,650,ls),
(145,616,o),
(173,616,qs),
(201,616,o),
(201,650,qs),
(201,674,ls),
(201,693,o),
(208,703,qs),
(216,715,o),
(231,715,qs),
(233,715,ls)
);
},
{
closed = 1;
nodes = (
(213,507,o),
(213,483,qs),
(213,481,ls),
(213,477,o),
(208,477,qs),
(114,477,ls),
(72,477,o),
(48,468,q),
(47,468,o),
(47,467,q),
(43,466,o),
(42,466,qs),
(40,466,o),
(39,470,qs),
(38,475,o),
(39,479,qs),
(41,493,o),
(56,500,qs),
(70,507,o),
(93,507,qs),
(187,507,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
41 23 10 3 1 0 35 1 5 1 61 48 2 8 7 3 76 52 50 2 8 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
4 2 9 3 0 1 1 0 112 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
4 2 9 3 0 1 0 133 3 1 1 6 1 5 7 1 5 106 10 1 7 8 8 7 87 10 1 7 7 8 96 0 8 7 8 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
45 44 1 0 59 57 44 64 45 63 38 36 34 32 27 25 21 19 14 12 8 6 0 43 1 43 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC62;
unicode = 64610;
},
{
glyphname = uniFC63.isol;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,762,qs),
(111,772,o),
(110,776,qs),
(107,789,o),
(107,794,qs),
(107,799,o),
(108,804,q),
(112,814,o),
(123,818,qs),
(128,819,o),
(131,817,q),
(137,811,o),
(141,794,qs),
(147,767,o),
(147,747,qs),
(147,703,o),
(133,683,qs),
(129,677,o),
(127,677,qs),
(123,677,o),
(123,684,qs),
(123,686,o),
(123,688,qs),
(123,705,o),
(122,721,qs),
(120,740,o),
(116,754,qs),
(115,757,o)
);
},
{
closed = 1;
nodes = (
(238,604,o),
(238,599,qs),
(238,545,ls),
(238,511,o),
(204,472,o),
(173,471,qs),
(143,470,o),
(126,491,q),
(107,470,o),
(81,471,qs),
(15,473,o),
(15,545,qs),
(15,563,ls),
(15,582,o),
(21,592,qs),
(29,604,o),
(44,604,qs),
(47,604,ls),
(52,604,o),
(52,599,qs),
(52,539,ls),
(52,505,o),
(80,505,qs),
(108,505,o),
(108,539,qs),
(108,563,ls),
(108,582,o),
(115,593,qs),
(122,604,o),
(137,604,qs),
(141,604,ls),
(145,604,o),
(145,599,qs),
(145,539,ls),
(145,505,o),
(173,505,qs),
(201,505,o),
(201,539,qs),
(201,563,ls),
(201,582,o),
(208,593,qs),
(216,604,o),
(231,604,qs),
(233,604,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
69 51 38 3 1 0 63 1 5 1 2 76 22 18 2 3 0 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
4 2 7 3 0 1 1 0 112 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 2 7 3 0 1 0 133 3 1 1 5 5 1 89 3 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
29 28 66 64 62 60 55 53 49 47 42 40 36 34 28 71 29 71 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniFC63.isol;
unicode = 64611;
},
{
glyphname = uniFC95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
4 1 5 1 52 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 15 11 14 3 9 12 1 10 4 9 10 105 0 4 0 6 4 6 101 2 13 2 0 0 3 97 8 7 2 3 3 24 3 78 70 69 58 57 1 0 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 910;
}
);
note = uniFC95;
unicode = 64661;
},
{
glyphname = uniFC96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(917,-1,l),
(886,-1,ls),
(804,-1,o),
(767,58,q),
(728,0,o),
(647,0,qs),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(649,49,ls),
(692,49,o),
(741,106,o),
(741,156,qs),
(741,299,ls),
(741,349,o),
(782,349,qs),
(787,349,ls),
(792,349,o),
(792,344,qs),
(792,155,ls),
(792,105,o),
(841,48,o),
(884,48,qs),
(917,48,l)
);
},
{
closed = 1;
nodes = (
(736,-97,o),
(736,-112,qs),
(736,-127,o),
(716,-147,o),
(701,-147,qs),
(687,-147,o),
(667,-127,o),
(667,-112,qs),
(667,-97,o),
(687,-77,o),
(701,-77,qs),
(716,-77,o)
);
},
{
closed = 1;
nodes = (
(833,-97,o),
(833,-112,qs),
(833,-127,o),
(813,-147,o),
(799,-147,qs),
(785,-147,o),
(765,-127,o),
(765,-112,qs),
(765,-97,o),
(785,-77,o),
(799,-77,qs),
(813,-77,o)
);
},
{
closed = 1;
nodes = (
(300,-307,o),
(300,-322,qs),
(300,-337,o),
(280,-357,o),
(266,-357,qs),
(251,-357,o),
(232,-337,o),
(232,-322,qs),
(232,-307,o),
(251,-287,o),
(266,-287,qs),
(280,-287,o)
);
},
{
closed = 1;
nodes = (
(398,-307,o),
(398,-322,qs),
(398,-337,o),
(378,-357,o),
(363,-357,qs),
(349,-357,o),
(329,-337,o),
(329,-322,qs),
(329,-307,o),
(349,-287,o),
(363,-287,qs),
(378,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 123 values pushed */
4 1 5 1 52 1 0 5 2 76 0 1 5 1 133 0 5 0 5 133 19 11 18 3 9 12 1 10 4 9 10 105 0 4 0 6 13 4 6 105 21 15 20 3 13 16 1 14 13 14 101 2 17 2 0 0 3 97 8 7 2 3 3 24 3 78 94 93 82 81 70 69 58 57 1 0 100 98 93 104 94 104 88 86 81 92 82 92 76 74 69 80 70 80 64 62 57 68 58 68 55 53 51 49 46 44 36 35 26 24 21 19 15 12 8 6 0 56 1 56 22 7 22 
CALL[ ]	/* CallFunction */";
};
width = 893;
}
);
note = uniFC96;
unicode = 64662;
},
{
glyphname = uniFDF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1096,0,o),
(1096,6,qs),
(1096,504,ls),
(1096,527,o),
(1118,556,o),
(1137,556,qs),
(1142,556,ls),
(1147,556,o),
(1147,550,qs),
(1147,51,ls),
(1147,28,o),
(1125,0,o),
(1106,0,qs),
(1101,0,ls)
);
},
{
closed = 1;
nodes = (
(629,766,qs),
(626,776,o),
(626,784,qs),
(626,788,o),
(627,793,q),
(631,803,o),
(642,807,qs),
(647,809,o),
(649,807,qs),
(656,800,o),
(660,783,qs),
(674,717,o),
(653,685,qs),
(649,679,o),
(646,679,qs),
(642,679,o),
(642,686,qs),
(642,726,o)
);
},
{
closed = 1;
nodes = (
(534,573,qs),
(534,587,ls),
(534,606,o),
(540,616,qs),
(548,628,o),
(563,628,qs),
(566,628,ls),
(571,628,o),
(571,622,qs),
(571,567,ls),
(571,533,o),
(599,533,qs),
(627,533,o),
(627,567,qs),
(627,587,ls),
(627,606,o),
(634,616,qs),
(641,628,o),
(656,628,qs),
(659,628,ls),
(664,628,o),
(664,622,qs),
(664,567,ls),
(664,533,o),
(692,533,qs),
(720,533,o),
(720,567,qs),
(720,587,ls),
(720,606,o),
(727,616,qs),
(735,628,o),
(749,628,qs),
(752,628,ls),
(757,628,o),
(757,622,qs),
(757,573,ls),
(757,539,o),
(723,500,o),
(692,499,qs),
(662,498,o),
(645,518,q),
(626,498,o),
(599,499,qs),
(534,501,o)
);
},
{
closed = 1;
nodes = (
(956,424,o),
(956,419,qs),
(956,156,ls),
(956,86,o),
(921,46,qs),
(882,0,o),
(811,0,qs),
(765,0,ls),
(684,0,o),
(646,58,q),
(608,0,o),
(527,0,qs),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(528,49,ls),
(572,49,o),
(620,105,o),
(620,156,qs),
(620,373,ls),
(620,395,o),
(643,424,o),
(661,424,qs),
(666,424,ls),
(671,424,o),
(671,418,qs),
(671,156,ls),
(671,106,o),
(720,49,o),
(763,49,qs),
(789,49,l),
(813,49,ls),
(856,49,o),
(904,106,o),
(904,156,qs),
(904,373,ls),
(904,424,o),
(946,424,qs),
(950,424,ls)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
28 1 2 3 66 53 40 3 1 6 4 1 7 1 34 1 4 7 134 103 88 3 16 11 126 121 2 12 21 11 1 0 20 7 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 78 values pushed */
10 8 2 6 2 1 7 6 114 15 13 24 3 11 4 16 4 11 16 128 0 3 0 2 6 3 2 105 9 1 7 5 23 2 4 11 7 4 106 0 16 0 21 12 16 21 103 0 1 1 23 77 14 1 12 12 0 97 19 18 22 3 0 0 24 77 25 1 20 20 17 97 0 17 17 24 17 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 79 values pushed */
10 8 2 6 2 1 2 6 1 128 15 13 24 3 11 4 16 4 11 16 128 0 3 0 2 6 3 2 105 9 1 7 5 23 2 4 11 7 4 106 0 16 0 21 12 16 21 103 0 1 1 23 77 14 1 12 12 0 97 19 18 22 3 0 0 24 77 25 1 20 20 17 97 0 17 17 24 17 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 76 values pushed */
10 8 2 6 2 1 2 6 1 128 15 13 24 3 11 4 16 4 11 16 128 0 3 0 2 6 3 2 105 9 1 7 5 23 2 4 11 7 4 106 0 16 0 21 12 16 21 103 25 1 20 0 17 20 17 101 0 1 1 23 77 14 1 12 12 0 97 19 18 22 3 0 0 24 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 63 values pushed */
138 137 77 76 33 32 1 0 146 144 137 150 138 150 130 127 125 122 120 118 112 110 107 105 100 97 92 90 85 81 76 136 77 136 70 68 64 62 57 55 51 49 44 42 37 35 32 75 33 75 24 22 17 15 8 6 0 13 1 13 26 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1217;
}
);
note = uniFDF2;
unicode = 65010;
},
{
glyphname = uniFDFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(287,21,o),
(299,40,qs),
(322,76,ls),
(331,89,o),
(331,98,qs),
(331,207,l),
(431,228,l),
(431,72,l),
(655,120,l),
(665,143,o),
(671,176,q),
(483,136,l),
(483,239,l),
(655,275,l),
(667,305,o),
(671,332,q),
(483,292,l),
(483,565,l),
(457,547,o),
(431,516,q),
(431,281,l),
(331,260,l),
(331,603,l),
(307,585,o),
(279,555,q),
(279,249,l),
(105,212,l),
(93,181,o),
(89,155,q),
(279,195,l),
(279,73,l),
(69,28,l),
(57,-3,o),
(53,-29,q),
(264,16,ls)
);
},
{
closed = 1;
nodes = (
(434,-83,q),
(655,-36,l),
(667,-5,o),
(671,21,q),
(450,-26,l),
(438,-55,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
39 36 11 0 2 50 
CALL[ ]	/* CallFunction */";
};
width = 725;
}
);
note = uniFDFC;
unicode = 65020;
},
{
glyphname = uniFE82;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,669,qs),
(193,684,o),
(187,693,qs),
(183,700,o),
(178,694,q),
(177,692,o),
(174,688,qs),
(171,683,o),
(169,680,qs),
(160,668,o),
(149,668,qs),
(141,668,o),
(115,678,qs),
(67,696,o),
(51,696,qs),
(19,696,o),
(14,661,qs),
(12,647,o),
(18,637,qs),
(22,631,o),
(27,637,qs),
(28,638,o),
(31,643,qs),
(34,648,o),
(36,651,qs),
(45,663,o),
(56,663,qs),
(64,663,o),
(90,653,qs),
(138,634,o),
(154,634,qs),
(186,634,o)
);
},
{
closed = 1;
nodes = (
(154,0,o),
(116,35,qs),
(71,76,o),
(71,155,qs),
(71,504,ls),
(71,527,o),
(94,556,o),
(112,556,qs),
(117,556,ls),
(122,556,o),
(122,550,qs),
(122,156,ls),
(122,106,o),
(171,49,o),
(214,49,qs),
(247,49,l),
(247,0,l),
(216,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
38 1 4 5 1 76 0 2 3 2 133 0 3 1 3 133 0 1 0 1 133 7 1 0 5 0 133 0 5 5 23 77 0 4 4 6 97 8 1 6 6 24 6 78 32 32 1 0 32 49 32 48 42 40 35 33 21 19 17 15 5 3 0 31 1 31 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = uniFE82;
unicode = 65154;
},
{
glyphname = uniFE84;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,638,o),
(32,631,qs),
(30,630,o),
(28,629,qs),
(22,627,l),
(16,627,o),
(16,639,qs),
(16,663,o),
(45,669,q),
(30,689,o),
(30,714,qs),
(30,746,o),
(70,788,o),
(100,788,qs),
(122,788,o),
(154,764,o),
(155,747,q),
(157,739,o),
(151,739,qs),
(148,739,o),
(143,742,qs),
(141,743,o),
(140,743,q),
(122,754,o),
(108,754,qs),
(90,754,o),
(68,732,o),
(68,714,qs),
(68,696,o),
(89,672,o),
(105,672,qs),
(150,672,ls),
(177,672,o),
(177,647,qs),
(177,644,ls),
(177,638,o),
(170,638,qs),
(88,638,ls)
);
},
{
closed = 1;
nodes = (
(245,0,l),
(215,0,ls),
(153,0,o),
(115,35,qs),
(70,76,o),
(70,155,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,156,ls),
(121,106,o),
(170,49,o),
(213,49,qs),
(245,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
20 1 3 2 28 1 0 1 42 1 5 6 3 76 0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 8 1 0 6 1 0 103 0 6 6 23 77 9 1 5 5 7 97 0 7 7 24 7 78 39 38 1 0 54 52 46 44 38 55 39 55 24 22 19 17 13 11 7 4 0 37 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = uniFE84;
unicode = 65156;
},
{
glyphname = uniFE86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(142,453,qs),
(142,477,o),
(171,482,q),
(157,502,o),
(157,528,qs),
(157,560,o),
(196,601,o),
(226,601,qs),
(248,601,o),
(280,577,o),
(282,560,qs),
(283,552,o),
(277,552,qs),
(275,552,o),
(269,555,qs),
(267,556,o),
(267,557,q),
(248,567,o),
(234,567,qs),
(217,567,o),
(194,545,o),
(194,527,qs),
(194,509,o),
(215,486,o),
(232,486,qs),
(276,486,ls),
(303,486,o),
(303,460,qs),
(303,457,ls),
(303,452,o),
(297,452,qs),
(214,452,ls),
(181,452,o),
(158,444,q),
(157,444,o),
(155,443,qs),
(149,441,o),
(148,441,qs),
(142,441,o)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(388,0,l),
(381,-80,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(327,-132,o),
(336,0,q),
(223,0,ls),
(156,0,o),
(111,45,qs),
(60,97,o),
(60,178,qs),
(60,259,o),
(100,310,qs),
(145,368,o),
(221,368,qs),
(324,368,o),
(366,272,qs),
(388,220,o),
(391,119,qs),
(391,71,o),
(390,49,q),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(138,93,qs),
(170,49,o),
(224,49,qs),
(338,49,l),
(344,195,o),
(316,257,qs),
(287,321,o),
(221,321,qs),
(175,321,o),
(146,287,qs),
(112,247,o),
(112,180,qs),
(112,130,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 122 values pushed */
35 9 2 1 2 64 1 8 9 2 76 0 4 3 2 3 4 2 128 15 1 0 1 6 1 0 6 128 0 9 7 8 7 9 8 128 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 6 0 13 12 6 13 105 0 8 0 10 8 10 101 14 16 2 12 12 7 95 11 1 7 7 24 7 78 39 39 1 0 88 86 83 81 39 77 39 77 76 75 72 70 63 61 59 57 54 52 46 44 31 29 26 24 20 18 14 11 7 5 0 38 1 38 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniFE86;
unicode = 65158;
},
{
glyphname = uniFE88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,0,l),
(215,0,ls),
(153,0,o),
(115,35,qs),
(70,76,o),
(70,155,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,156,ls),
(121,106,o),
(170,49,o),
(213,49,qs),
(246,49,l)
);
},
{
closed = 1;
nodes = (
(200,-191,o),
(200,-216,qs),
(200,-219,ls),
(200,-224,o),
(193,-224,qs),
(111,-224,ls),
(78,-224,o),
(55,-232,q),
(54,-233,o),
(52,-233,q),
(45,-236,l),
(39,-236,o),
(39,-223,qs),
(39,-199,o),
(68,-194,q),
(53,-174,o),
(53,-148,qs),
(53,-116,o),
(93,-75,o),
(123,-75,qs),
(145,-75,o),
(177,-99,o),
(178,-116,q),
(180,-124,o),
(174,-124,qs),
(171,-124,o),
(166,-121,qs),
(164,-120,o),
(163,-119,q),
(145,-109,o),
(131,-109,qs),
(113,-109,o),
(91,-131,o),
(91,-149,qs),
(91,-167,o),
(112,-191,o),
(128,-191,qs),
(173,-191,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
4 1 0 1 32 1 5 4 40 1 7 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 5 4 3 2 5 114 0 6 0 4 5 6 4 105 9 1 3 0 7 3 7 99 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 5 4 3 4 5 3 128 0 6 0 4 5 6 4 105 9 1 3 0 7 3 7 99 0 1 1 23 77 8 1 0 0 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
19 18 1 0 51 48 36 34 31 29 25 23 18 55 19 54 16 14 8 6 0 17 1 17 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = uniFE88;
unicode = 65160;
},
{
glyphname = uniFE8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,292,qs),
(252,316,o),
(281,322,q),
(267,342,o),
(267,367,qs),
(267,399,o),
(306,441,o),
(336,441,qs),
(358,441,o),
(390,417,o),
(392,399,qs),
(393,392,o),
(387,392,qs),
(385,392,o),
(379,395,qs),
(377,396,ls),
(358,407,o),
(344,407,qs),
(327,407,o),
(304,384,o),
(304,367,qs),
(304,348,o),
(325,325,o),
(342,325,qs),
(386,325,ls),
(413,325,o),
(413,299,qs),
(413,297,ls),
(413,291,o),
(407,291,qs),
(324,291,ls),
(291,291,o),
(268,283,q),
(267,283,o),
(265,282,qs),
(259,280,o),
(258,280,qs),
(252,280,o)
);
},
{
closed = 1;
nodes = (
(642,0,l),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(642,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 102 values pushed */
34 9 2 1 2 1 76 0 4 3 2 3 4 2 128 12 1 0 1 9 1 0 9 128 0 9 6 1 9 6 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 0 8 0 10 8 10 101 13 1 6 6 7 95 11 1 7 7 24 7 78 39 38 1 0 74 73 70 68 60 59 50 48 45 43 38 75 39 75 30 28 25 23 20 18 14 11 7 5 0 37 1 37 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uniFE8A;
unicode = 65162;
},
{
glyphname = uniFE8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,467,o),
(217,441,qs),
(217,438,ls),
(217,433,o),
(210,433,qs),
(128,433,ls),
(94,433,o),
(71,425,q),
(70,425,o),
(68,424,qs),
(62,422,o),
(61,422,qs),
(55,422,o),
(55,434,qs),
(55,458,o),
(84,463,q),
(70,483,o),
(70,509,qs),
(70,541,o),
(109,582,o),
(139,582,qs),
(161,582,o),
(193,558,o),
(195,541,qs),
(197,533,o),
(190,533,qs),
(188,533,o),
(182,537,qs),
(180,538,ls),
(161,548,o),
(147,548,qs),
(130,548,o),
(108,526,o),
(108,508,qs),
(108,490,o),
(129,467,o),
(145,467,qs),
(189,467,ls)
);
},
{
closed = 1;
nodes = (
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 91 values pushed */
21 1 5 0 52 1 7 6 2 76 0 2 1 0 1 2 0 128 0 4 5 6 5 4 6 128 10 1 6 7 5 6 7 126 0 3 0 1 2 3 1 105 9 1 0 0 5 4 0 5 103 0 7 7 8 97 0 8 8 24 8 78 39 38 1 0 48 46 45 43 38 54 39 54 33 30 26 24 17 15 12 10 7 5 0 37 1 36 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFE8B;
unicode = 65163;
},
{
glyphname = uniFE8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,434,qs),
(55,458,o),
(84,463,q),
(70,483,o),
(70,509,qs),
(70,541,o),
(109,582,o),
(139,582,qs),
(161,582,o),
(193,558,o),
(195,541,qs),
(197,533,o),
(190,533,qs),
(188,533,o),
(182,537,qs),
(180,538,ls),
(161,548,o),
(147,548,qs),
(130,548,o),
(108,526,o),
(108,508,qs),
(108,490,o),
(129,467,o),
(145,467,qs),
(189,467,ls),
(217,467,o),
(217,441,qs),
(217,438,ls),
(217,433,o),
(210,433,qs),
(128,433,ls),
(94,433,o),
(71,425,q),
(70,425,o),
(68,424,qs),
(62,422,o),
(61,422,qs),
(55,422,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
34 1 1 2 56 42 2 6 7 2 76 0 4 3 2 3 4 2 128 11 1 0 1 7 1 0 7 128 0 7 6 1 7 6 126 0 5 0 3 4 5 3 105 0 2 0 1 0 2 1 103 8 12 2 6 6 9 97 10 1 9 9 24 9 78 39 38 1 0 59 57 55 53 52 50 46 44 38 60 39 60 30 28 25 23 20 18 14 11 8 5 0 37 1 37 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE8C;
unicode = 65164;
},
{
glyphname = uniFE8E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(153,0,o),
(115,35,qs),
(70,76,o),
(70,155,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,156,ls),
(121,106,o),
(170,49,o),
(213,49,qs),
(246,49,l),
(246,0,l),
(215,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
6 1 0 1 1 76 0 1 1 23 77 0 0 0 2 97 3 1 2 2 24 2 78 0 0 0 17 0 16 37 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = uniFE8E;
unicode = 65166;
},
{
glyphname = uniFE90;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
},
{
closed = 1;
nodes = (
(413,-96,o),
(413,-112,qs),
(413,-128,o),
(392,-150,o),
(376,-150,qs),
(361,-150,o),
(339,-128,o),
(339,-112,qs),
(339,-96,o),
(361,-74,o),
(376,-74,qs),
(392,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
4 1 3 1 32 1 0 3 2 76 0 1 3 1 133 0 3 0 3 133 9 1 6 0 7 6 7 101 2 8 2 0 0 4 98 5 1 4 4 24 4 78 38 37 1 0 44 42 37 48 38 48 35 33 31 28 23 21 15 12 8 6 0 36 1 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFE90;
unicode = 65168;
},
{
glyphname = uniFE91;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(76,-96,o),
(76,-112,qs),
(76,-128,o),
(55,-149,o),
(39,-149,qs),
(24,-149,o),
(3,-128,o),
(3,-112,qs),
(3,-96,o),
(24,-74,o),
(39,-74,qs),
(55,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
5 1 2 1 1 76 0 1 2 1 133 6 1 3 0 4 3 4 101 0 2 2 0 97 5 1 0 0 24 0 78 18 17 1 0 24 22 17 28 18 28 15 13 9 7 0 16 1 16 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFE91;
unicode = 65169;
},
{
glyphname = uniFE92;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(174,-96,o),
(174,-112,qs),
(174,-128,o),
(153,-149,o),
(138,-149,qs),
(122,-149,o),
(101,-128,o),
(101,-112,qs),
(101,-96,o),
(122,-74,o),
(138,-74,qs),
(153,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 8 1 5 0 6 5 6 101 2 7 2 0 0 3 97 4 1 3 3 24 3 78 24 23 1 0 30 28 23 34 24 34 21 19 17 15 14 12 8 6 0 22 1 22 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE92;
unicode = 65170;
},
{
glyphname = uniFE94;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,477,o),
(154,492,qs),
(154,506,o),
(174,526,o),
(188,526,qs),
(203,526,o),
(223,506,o),
(223,492,qs),
(223,477,o),
(203,456,o),
(188,456,qs),
(174,456,o)
);
},
{
closed = 1;
nodes = (
(252,477,o),
(252,492,qs),
(252,506,o),
(272,526,o),
(286,526,qs),
(301,526,o),
(321,506,o),
(321,492,qs),
(321,477,o),
(301,456,o),
(286,456,qs),
(272,456,o)
);
},
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 6 5 46 1 4 10 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 13 1 4 4 8 97 0 8 8 24 77 14 1 9 9 7 97 0 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 0 6 0 5 6 128 3 1 1 12 2 11 3 0 5 1 0 105 0 6 0 10 4 6 10 103 14 1 9 0 7 9 7 101 13 1 4 4 8 97 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 41 values pushed */
52 51 25 24 13 12 1 0 60 58 51 64 52 64 49 47 45 43 37 35 32 30 24 50 25 50 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uniFE94;
unicode = 65172;
},
{
glyphname = uniFE96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(296,391,o),
(296,406,qs),
(296,421,o),
(316,441,o),
(330,441,qs),
(345,441,o),
(364,421,o),
(364,406,qs),
(364,391,o),
(345,371,o),
(330,371,qs),
(316,371,o)
);
},
{
closed = 1;
nodes = (
(394,391,o),
(394,406,qs),
(394,421,o),
(414,441,o),
(428,441,qs),
(442,441,o),
(462,421,o),
(462,406,qs),
(462,391,o),
(442,371,o),
(428,371,qs),
(414,371,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
28 1 7 5 56 1 4 7 2 76 0 5 0 7 0 5 7 128 0 7 4 0 7 4 126 3 1 1 11 2 10 3 0 5 1 0 105 6 12 2 4 4 8 98 9 1 8 8 24 8 78 25 24 13 12 1 0 59 57 55 52 47 45 39 36 32 30 24 60 25 60 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFE96;
unicode = 65174;
},
{
glyphname = uniFE97;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,442,o),
(54,457,qs),
(54,472,o),
(74,492,o),
(88,492,qs),
(103,492,o),
(123,472,o),
(123,457,qs),
(123,442,o),
(103,422,o),
(88,422,qs),
(74,422,o)
);
},
{
closed = 1;
nodes = (
(152,442,o),
(152,457,qs),
(152,472,o),
(172,492,o),
(186,492,qs),
(201,492,o),
(220,472,o),
(220,457,qs),
(220,442,o),
(201,422,o),
(186,422,qs),
(172,422,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
29 1 6 5 1 76 0 5 0 6 0 5 6 128 3 1 1 8 2 7 3 0 5 1 0 105 0 6 6 4 97 9 1 4 4 24 4 78 25 24 13 12 1 0 39 37 33 31 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFE97;
unicode = 65175;
},
{
glyphname = uniFE98;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,442,o),
(54,457,qs),
(54,472,o),
(74,492,o),
(88,492,qs),
(103,492,o),
(123,472,o),
(123,457,qs),
(123,442,o),
(103,422,o),
(88,422,qs),
(74,422,o)
);
},
{
closed = 1;
nodes = (
(152,442,o),
(152,457,qs),
(152,472,o),
(172,492,o),
(186,492,qs),
(201,492,o),
(220,472,o),
(220,457,qs),
(220,442,o),
(201,422,o),
(186,422,qs),
(172,422,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
42 28 2 4 5 1 76 0 5 0 4 0 5 4 128 3 1 1 10 2 9 3 0 5 1 0 105 6 11 2 4 4 7 97 8 1 7 7 24 7 78 25 24 13 12 1 0 45 43 41 39 38 36 32 30 24 46 25 46 19 17 12 23 13 23 7 5 0 11 1 11 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE98;
unicode = 65176;
},
{
glyphname = uniFE9A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,472,o),
(345,487,qs),
(345,501,o),
(365,521,o),
(379,521,qs),
(393,521,o),
(413,501,o),
(413,487,qs),
(413,472,o),
(393,451,o),
(379,451,qs),
(365,451,o)
);
},
{
closed = 1;
nodes = (
(296,391,o),
(296,406,qs),
(296,420,o),
(316,440,o),
(330,440,qs),
(345,440,o),
(364,420,o),
(364,406,qs),
(364,390,o),
(345,370,o),
(330,370,qs),
(316,370,o)
);
},
{
closed = 1;
nodes = (
(414,440,o),
(428,440,qs),
(442,440,o),
(462,420,o),
(462,406,qs),
(462,391,o),
(442,370,o),
(428,370,qs),
(414,370,o),
(394,391,o),
(394,406,qs),
(394,420,o)
);
},
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,299,ls),
(631,349,o),
(671,349,qs),
(676,349,ls),
(682,349,o),
(682,344,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
40 1 9 7 68 1 6 9 2 76 0 7 2 9 2 7 9 128 0 9 6 2 9 6 126 0 1 12 1 0 3 1 0 105 5 1 3 4 13 2 2 7 3 2 105 8 14 2 6 6 10 98 11 1 10 10 24 10 78 37 36 13 12 1 0 71 69 67 64 59 57 51 48 44 42 36 72 37 72 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFE9A;
unicode = 65178;
},
{
glyphname = uniFE9B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,522,o),
(103,537,qs),
(103,552,o),
(123,572,o),
(137,572,qs),
(152,572,o),
(172,552,o),
(172,537,qs),
(172,522,o),
(152,502,o),
(137,502,qs),
(123,502,o)
);
},
{
closed = 1;
nodes = (
(54,441,o),
(54,456,qs),
(54,471,o),
(74,491,o),
(88,491,qs),
(103,491,o),
(123,471,o),
(123,456,qs),
(123,441,o),
(103,421,o),
(88,421,qs),
(74,421,o)
);
},
{
closed = 1;
nodes = (
(152,441,o),
(152,456,qs),
(152,471,o),
(172,491,o),
(186,491,qs),
(201,491,o),
(220,471,o),
(220,456,qs),
(220,441,o),
(201,421,o),
(186,421,qs),
(172,421,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
41 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 2 8 2 7 8 128 5 1 3 11 4 10 3 2 7 3 2 105 9 1 0 0 1 97 0 1 1 23 77 0 8 8 6 97 12 1 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 7 2 8 2 7 8 128 0 1 9 1 0 3 1 0 105 5 1 3 11 4 10 3 2 7 3 2 105 0 8 8 6 97 12 1 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 25 24 13 12 1 0 51 49 45 43 36 52 37 52 31 29 24 35 25 35 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFE9B;
unicode = 65179;
},
{
glyphname = uniFE9C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(103,523,o),
(103,538,qs),
(103,552,o),
(123,572,o),
(137,572,qs),
(152,572,o),
(172,552,o),
(172,538,qs),
(172,523,o),
(152,502,o),
(137,502,qs),
(123,502,o)
);
},
{
closed = 1;
nodes = (
(54,442,o),
(54,457,qs),
(54,471,o),
(74,491,o),
(88,491,qs),
(103,491,o),
(123,471,o),
(123,457,qs),
(123,442,o),
(103,421,o),
(88,421,qs),
(74,421,o)
);
},
{
closed = 1;
nodes = (
(172,491,o),
(186,491,qs),
(201,491,o),
(220,471,o),
(220,457,qs),
(220,442,o),
(201,421,o),
(186,421,qs),
(172,421,o),
(152,442,o),
(152,457,qs),
(152,471,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
54 40 2 6 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 7 2 6 2 7 6 128 5 1 3 4 12 2 2 7 3 2 105 11 1 0 0 1 97 0 1 1 23 77 8 13 2 6 6 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 7 2 6 2 7 6 128 0 1 11 1 0 3 1 0 105 5 1 3 4 12 2 2 7 3 2 105 8 13 2 6 6 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
37 36 13 12 1 0 57 55 53 51 50 48 44 42 36 58 37 58 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFE9C;
unicode = 65180;
},
{
glyphname = uniFE9E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(339,0,ls),
(424,0,o),
(474,38,q),
(508,0,o),
(565,0,qs),
(587,0,l),
(587,49,l),
(570,49,ls),
(538,49,o),
(516,68,qs),
(499,82,o),
(475,136,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,118,o),
(446,79,q),
(423,62,o),
(377,49,o),
(337,49,qs),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
},
{
closed = 1;
nodes = (
(335,-122,o),
(335,-138,qs),
(335,-154,o),
(314,-176,o),
(298,-176,qs),
(283,-176,o),
(262,-154,o),
(262,-138,qs),
(262,-122,o),
(283,-101,o),
(298,-101,qs),
(314,-101,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
44 1 5 4 30 1 3 5 62 1 8 3 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 5 4 3 4 5 3 128 12 1 10 8 11 8 10 114 0 11 1 0 11 112 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 59 values pushed */
0 5 4 3 4 5 3 128 12 1 10 8 11 8 10 11 128 0 11 1 8 11 1 126 0 1 0 8 1 0 126 0 6 0 4 5 6 4 105 0 0 0 2 0 2 102 7 1 3 3 8 97 9 1 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
70 69 76 74 69 80 70 80 66 63 33 37 38 38 37 54 38 36 35 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uniFE9E;
unicode = 65182;
},
{
glyphname = uniFE9F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(478,0,ls),
(525,0,o),
(525,44,qs),
(525,49,o),
(520,49,qs),
(495,50,o),
(482,64,qs),
(449,98,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(189,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(179,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,120,o),
(416,61,o),
(431,49,q),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(263,-96,o),
(263,-112,qs),
(263,-128,o),
(241,-149,o),
(226,-149,qs),
(211,-149,o),
(189,-128,o),
(189,-112,qs),
(189,-96,o),
(211,-74,o),
(226,-74,qs),
(241,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 1 0 29 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 0 3 0 1 3 128 9 1 6 4 7 4 6 114 0 7 7 132 0 2 0 0 1 2 0 105 8 5 2 3 3 4 95 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 1 0 3 0 1 3 128 9 1 6 4 7 4 6 7 128 0 7 7 132 0 2 0 0 1 2 0 105 8 5 2 3 3 4 95 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
35 34 0 0 41 39 34 45 35 45 0 33 0 33 35 20 38 38 36 10 7 27 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uniFE9F;
unicode = 65183;
},
{
glyphname = uniFEA0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(304,0,ls),
(389,0,o),
(440,38,q),
(473,0,o),
(530,0,qs),
(560,0,l),
(560,49,l),
(535,49,ls),
(504,49,o),
(481,68,qs),
(464,82,o),
(441,136,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(189,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(179,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,118,o),
(411,79,q),
(388,61,o),
(342,49,o),
(302,49,qs),
(-4,49,l)
);
},
{
closed = 1;
nodes = (
(263,-96,o),
(263,-112,qs),
(263,-128,o),
(241,-149,o),
(226,-149,qs),
(211,-149,o),
(189,-128,o),
(189,-112,qs),
(189,-96,o),
(211,-74,o),
(226,-74,qs),
(241,-74,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
17 1 2 1 3 1 0 2 35 1 5 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
14 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 2 1 0 1 2 0 128 10 1 7 5 8 5 7 114 0 8 8 132 0 3 0 1 2 3 1 105 4 9 2 0 0 5 97 6 1 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 0 1 2 0 128 10 1 7 5 8 5 7 8 128 0 8 8 132 0 3 0 1 2 3 1 105 4 9 2 0 0 5 97 6 1 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
41 40 1 0 47 45 40 51 41 51 38 36 34 32 31 29 24 22 16 14 8 6 0 39 1 39 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEA0;
unicode = 65184;
},
{
glyphname = uniFEA2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(339,0,ls),
(424,0,o),
(474,38,q),
(508,0,o),
(565,0,qs),
(587,0,l),
(587,49,l),
(570,49,ls),
(538,49,o),
(516,68,qs),
(499,82,o),
(475,136,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,118,o),
(446,79,q),
(423,62,o),
(377,49,o),
(337,49,qs),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
44 1 5 4 30 1 3 5 62 1 8 3 3 76 0 5 4 3 4 5 3 128 0 1 8 0 8 1 0 128 0 6 0 4 5 6 4 105 0 0 0 2 0 2 101 7 1 3 3 8 97 9 1 8 8 24 8 78 66 63 33 37 38 38 37 54 38 36 35 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uniFEA2;
unicode = 65186;
},
{
glyphname = uniFEA3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(478,0,ls),
(525,0,o),
(525,44,qs),
(525,49,o),
(520,49,qs),
(495,50,o),
(482,64,qs),
(449,98,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(188,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(180,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,120,o),
(416,61,o),
(431,49,q),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
15 1 1 0 29 1 4 3 2 76 0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 6 5 2 3 3 4 95 0 4 4 24 4 78 0 0 0 33 0 33 35 20 38 38 36 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uniFEA3;
unicode = 65187;
},
{
glyphname = uniFEA4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,0,l),
(304,0,ls),
(389,0,o),
(440,38,q),
(474,0,o),
(530,0,qs),
(560,0,l),
(560,49,l),
(535,49,ls),
(504,49,o),
(481,68,qs),
(464,82,o),
(441,136,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(188,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(180,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,118,o),
(411,79,q),
(388,61,o),
(342,49,o),
(302,49,qs),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 1 2 1 3 1 0 2 35 1 5 0 3 76 0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 38 36 34 32 31 29 24 22 16 14 8 6 0 39 1 39 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEA4;
unicode = 65188;
},
{
glyphname = uniFEA6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,503,o),
(312,487,qs),
(312,471,o),
(291,448,o),
(275,448,qs),
(260,448,o),
(238,471,o),
(238,487,qs),
(238,503,o),
(260,524,o),
(275,524,qs),
(291,524,o)
);
},
{
closed = 1;
nodes = (
(148,-49,qs),
(191,0,o),
(266,0,qs),
(339,0,ls),
(424,0,o),
(474,38,q),
(508,0,o),
(565,0,qs),
(587,0,l),
(587,49,l),
(570,49,ls),
(538,49,o),
(516,68,qs),
(499,82,o),
(475,136,o),
(457,204,qs),
(411,368,o),
(274,368,qs),
(223,368,o),
(179,342,qs),
(142,319,o),
(119,282,qs),
(114,274,o),
(114,268,qs),
(114,257,o),
(125,257,qs),
(130,257,o),
(136,261,qs),
(139,263,o),
(144,268,qs),
(155,277,o),
(160,281,qs),
(214,321,o),
(267,321,qs),
(366,321,o),
(403,197,qs),
(426,118,o),
(446,79,q),
(423,62,o),
(377,49,o),
(337,49,qs),
(266,49,ls),
(177,49,o),
(121,-1,qs),
(60,-54,o),
(60,-141,qs),
(60,-214,o),
(106,-265,qs),
(162,-329,o),
(264,-331,qs),
(336,-333,o),
(388,-310,qs),
(432,-291,o),
(453,-261,qs),
(458,-254,o),
(458,-247,qs),
(458,-238,o),
(449,-238,qs),
(444,-238,o),
(438,-241,qs),
(403,-261,o),
(372,-271,qs),
(328,-286,o),
(269,-284,qs),
(199,-282,o),
(158,-244,qs),
(114,-205,o),
(114,-142,qs),
(114,-88,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
56 1 7 6 42 1 5 7 74 1 10 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 56 values pushed */
12 1 0 1 0 133 0 1 8 8 1 112 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 97 11 1 10 10 24 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 55 values pushed */
12 1 0 1 0 133 0 1 8 1 133 0 7 6 5 6 7 5 128 0 3 10 2 10 3 2 128 0 8 0 6 7 8 6 106 0 2 0 4 2 4 101 9 1 5 5 10 97 11 1 10 10 24 10 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 78 75 73 71 70 68 63 61 55 53 47 45 40 37 31 29 23 21 17 15 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uniFEA6;
unicode = 65190;
},
{
glyphname = uniFEA7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,501,o),
(278,485,qs),
(278,469,o),
(257,447,o),
(241,447,qs),
(226,447,o),
(204,469,o),
(204,485,qs),
(204,501,o),
(226,523,o),
(241,523,qs),
(257,523,o)
);
},
{
closed = 1;
nodes = (
(-4,0,l),
(478,0,ls),
(525,0,o),
(525,44,qs),
(525,49,o),
(520,49,qs),
(495,50,o),
(482,64,qs),
(449,98,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(188,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(180,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,120,o),
(416,61,o),
(431,49,q),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
27 1 3 2 41 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
8 1 0 1 0 133 0 1 4 4 1 112 0 3 2 5 2 3 5 128 0 4 0 2 3 4 2 106 9 7 2 5 5 6 95 0 6 6 24 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
8 1 0 1 0 133 0 1 4 1 133 0 3 2 5 2 3 5 128 0 4 0 2 3 4 2 106 9 7 2 5 5 6 95 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
12 12 1 0 12 45 12 45 44 42 39 38 34 32 26 24 18 16 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uniFEA7;
unicode = 65191;
},
{
glyphname = uniFEA8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,501,o),
(278,485,qs),
(278,469,o),
(257,447,o),
(241,447,qs),
(226,447,o),
(204,469,o),
(204,485,qs),
(204,501,o),
(226,523,o),
(241,523,qs),
(257,523,o)
);
},
{
closed = 1;
nodes = (
(-4,0,l),
(304,0,ls),
(389,0,o),
(440,38,q),
(474,0,o),
(530,0,qs),
(560,0,l),
(560,49,l),
(535,49,ls),
(504,49,o),
(481,68,qs),
(464,82,o),
(441,136,o),
(422,204,qs),
(376,368,o),
(239,368,qs),
(188,368,o),
(144,342,qs),
(108,319,o),
(85,282,qs),
(80,274,o),
(80,268,qs),
(80,257,o),
(90,257,qs),
(96,257,o),
(101,261,qs),
(104,263,o),
(109,267,qs),
(121,277,o),
(125,281,q),
(180,321,o),
(233,321,qs),
(331,321,o),
(369,197,qs),
(391,118,o),
(411,79,q),
(388,61,o),
(342,49,o),
(302,49,qs),
(-4,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
29 1 4 3 15 1 2 4 47 1 7 2 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
9 1 0 1 0 133 0 1 5 5 1 112 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
9 1 0 1 0 133 0 1 5 1 133 0 4 3 2 3 4 2 128 0 5 0 3 4 5 3 106 6 10 2 2 2 7 97 8 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
13 12 1 0 50 48 46 44 43 41 36 34 28 26 20 18 12 51 13 51 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = uniFEA8;
unicode = 65192;
},
{
glyphname = uniFEAA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,0,l),
(447,0,ls),
(360,0,o),
(324,64,q),
(282,0,o),
(197,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o),
(310,321,qs),
(353,268,o),
(353,175,qs),
(354,154,ls),
(355,104,o),
(402,49,o),
(445,49,qs),
(478,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
36 1 0 2 1 76 0 2 3 0 3 2 0 128 0 1 0 3 2 1 3 105 4 7 2 0 0 5 97 6 1 5 5 24 5 78 1 0 39 37 35 32 28 25 20 18 14 13 9 7 0 40 1 40 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFEAA;
unicode = 65194;
},
{
glyphname = uniFEAC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,457,o),
(108,473,qs),
(108,489,o),
(129,511,o),
(145,511,qs),
(160,511,o),
(182,489,o),
(182,473,qs),
(182,457,o),
(160,435,o),
(145,435,qs),
(129,435,o)
);
},
{
closed = 1;
nodes = (
(478,0,l),
(447,0,ls),
(360,0,o),
(324,64,q),
(282,0,o),
(197,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(195,49,ls),
(240,49,o),
(269,79,qs),
(302,114,o),
(302,176,qs),
(302,245,o),
(246,321,o),
(195,321,qs),
(164,322,o),
(130,307,q),
(129,306,l),
(122,303,o),
(119,303,qs),
(109,303,o),
(109,313,qs),
(109,326,o),
(125,339,qs),
(157,368,o),
(205,368,qs),
(270,368,o),
(310,321,qs),
(353,268,o),
(353,175,qs),
(354,154,ls),
(355,104,o),
(402,49,o),
(445,49,qs),
(478,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
48 1 2 4 1 76 0 4 5 2 5 4 2 128 0 1 9 1 0 3 1 0 105 0 3 0 5 4 3 5 105 6 10 2 2 2 7 97 8 1 7 7 24 7 78 13 12 1 0 51 49 47 44 40 37 32 30 26 25 21 19 12 52 13 52 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 472;
}
);
note = uniFEAC;
unicode = 65196;
},
{
glyphname = uniFEAE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
4 1 0 1 25 1 5 0 2 76 0 1 0 1 133 0 3 5 2 5 3 2 128 0 2 0 4 2 4 101 6 1 0 0 5 97 0 5 5 24 5 78 1 0 28 26 23 21 17 15 13 11 8 6 0 29 1 29 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = uniFEAE;
unicode = 65198;
},
{
glyphname = uniFEB0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(119,442,o),
(119,458,qs),
(119,474,o),
(140,496,o),
(156,496,qs),
(171,496,o),
(193,474,o),
(193,458,qs),
(193,442,o),
(171,420,o),
(156,420,qs),
(140,420,o)
);
},
{
closed = 1;
nodes = (
(303,0,l),
(273,0,ls),
(216,0,o),
(179,29,q),
(179,2,ls),
(179,-215,o),
(24,-214,qs),
(-17,-214,o),
(-59,-189,qs),
(-80,-176,o),
(-83,-161,qs),
(-86,-149,o),
(-73,-149,qs),
(-69,-149,o),
(-62,-151,qs),
(-18,-167,o),
(18,-167,qs),
(128,-164,o),
(128,-13,qs),
(128,299,ls),
(128,349,o),
(169,349,qs),
(174,349,ls),
(179,349,o),
(179,344,qs),
(179,156,ls),
(179,106,o),
(228,49,o),
(271,49,qs),
(303,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
16 1 2 3 37 1 7 2 2 76 0 3 0 2 0 3 2 128 0 5 7 4 7 5 4 128 0 1 8 1 0 3 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 40 38 35 33 29 27 25 23 20 18 12 41 13 41 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = uniFEB0;
unicode = 65200;
},
{
glyphname = uniFEB2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1132,0,l),
(1101,0,ls),
(1023,0,o),
(985,53,q),
(948,-9,o),
(864,-9,qs),
(784,-9,o),
(748,48,q),
(710,-9,o),
(630,-9,qs),
(575,-9,o),
(538,20,q),
(531,-84,o),
(469,-147,qs),
(403,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,258,ls),
(487,308,o),
(528,308,qs),
(533,308,ls),
(538,308,o),
(538,303,qs),
(538,151,ls),
(538,99,o),
(587,38,o),
(629,38,qs),
(673,38,o),
(722,96,o),
(722,146,qs),
(722,278,ls),
(722,329,o),
(762,329,qs),
(767,329,ls),
(773,329,o),
(773,324,qs),
(773,151,ls),
(773,99,o),
(822,38,o),
(864,38,qs),
(908,38,o),
(956,95,o),
(956,146,qs),
(956,298,ls),
(956,321,o),
(979,349,o),
(997,349,qs),
(1002,349,ls),
(1007,349,o),
(1007,344,qs),
(1007,156,ls),
(1007,106,o),
(1056,49,o),
(1099,49,qs),
(1132,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
4 1 3 1 18 1 5 3 31 1 7 5 72 1 0 7 68 1 2 0 64 1 11 2 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 77 4 1 2 2 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 7 5 133 0 7 0 7 133 4 1 2 10 1 9 6 2 9 105 0 6 0 8 6 8 101 12 1 0 0 11 97 0 11 11 24 11 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 75 73 71 69 67 65 61 59 52 50 42 40 35 33 28 26 22 20 15 13 8 6 0 76 1 76 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1124;
}
);
note = uniFEB2;
unicode = 65202;
},
{
glyphname = uniFEB3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(632,349,o),
(632,344,qs),
(632,146,ls),
(632,77,o),
(598,36,qs),
(560,-9,o),
(489,-9,qs),
(409,-9,o),
(373,48,q),
(335,-9,o),
(255,-9,qs),
(170,-9,o),
(134,53,q),
(96,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,258,ls),
(112,308,o),
(153,308,qs),
(158,308,ls),
(163,308,o),
(163,303,qs),
(163,155,l),
(163,151,ls),
(163,99,o),
(212,38,o),
(254,38,qs),
(298,38,o),
(347,96,o),
(347,146,qs),
(347,278,ls),
(347,329,o),
(387,329,qs),
(392,329,ls),
(398,329,o),
(398,324,qs),
(398,151,ls),
(398,99,o),
(447,38,o),
(489,38,qs),
(532,38,o),
(581,95,o),
(581,146,qs),
(581,298,ls),
(581,321,o),
(604,349,o),
(622,349,qs),
(627,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
50 1 2 0 11 1 4 2 39 25 2 5 4 43 1 1 5 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 5 6 97 0 6 6 24 77 3 1 1 1 7 97 8 1 7 7 24 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
9 1 0 2 0 133 0 2 4 2 133 0 4 5 4 133 3 1 1 8 1 7 1 7 101 0 5 5 6 97 0 6 6 24 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 46 44 42 40 38 36 35 33 29 27 21 19 15 13 8 6 0 52 1 52 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = uniFEB3;
unicode = 65203;
},
{
glyphname = uniFEB4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(757,0,l),
(726,0,ls),
(648,0,o),
(610,53,q),
(573,-9,o),
(489,-9,qs),
(409,-9,o),
(373,48,q),
(335,-9,o),
(255,-9,qs),
(170,-9,o),
(134,53,q),
(96,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,258,ls),
(112,308,o),
(153,308,qs),
(158,308,ls),
(163,308,o),
(163,303,qs),
(163,155,l),
(163,151,ls),
(163,99,o),
(212,38,o),
(254,38,qs),
(298,38,o),
(347,96,o),
(347,146,qs),
(347,278,ls),
(347,329,o),
(387,329,qs),
(392,329,ls),
(398,329,o),
(398,324,qs),
(398,151,ls),
(398,99,o),
(447,38,o),
(489,38,qs),
(532,38,o),
(581,95,o),
(581,146,qs),
(581,298,ls),
(581,321,o),
(604,349,o),
(622,349,qs),
(627,349,ls),
(632,349,o),
(632,344,qs),
(632,156,ls),
(632,105,o),
(681,49,o),
(724,49,qs),
(757,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
4 1 3 1 18 1 5 3 54 46 32 3 0 5 50 1 2 0 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 6 11 2 0 0 7 97 10 1 7 7 24 77 4 1 2 2 8 97 9 1 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 1 3 1 133 0 3 5 3 133 0 5 0 5 133 4 1 2 9 1 8 2 8 101 6 11 2 0 0 7 97 10 1 7 7 24 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
1 0 57 55 53 51 49 47 45 43 42 40 36 34 28 26 22 20 15 13 8 6 0 58 1 58 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uniFEB4;
unicode = 65204;
},
{
glyphname = uniFEB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,502,o),
(714,517,qs),
(714,532,o),
(734,552,o),
(748,552,qs),
(762,552,o),
(782,532,o),
(782,517,qs),
(782,502,o),
(762,482,o),
(748,482,qs),
(734,482,o)
);
},
{
closed = 1;
nodes = (
(665,421,o),
(665,436,qs),
(665,451,o),
(685,471,o),
(699,471,qs),
(713,471,o),
(733,451,o),
(733,436,qs),
(733,421,o),
(713,401,o),
(699,401,qs),
(685,401,o)
);
},
{
closed = 1;
nodes = (
(782,471,o),
(797,471,qs),
(811,471,o),
(831,451,o),
(831,436,qs),
(831,421,o),
(811,401,o),
(797,401,qs),
(782,401,o),
(763,421,o),
(763,436,qs),
(763,451,o)
);
},
{
closed = 1;
nodes = (
(1132,0,l),
(1101,0,ls),
(1023,0,o),
(985,53,q),
(948,-9,o),
(864,-9,qs),
(784,-9,o),
(748,48,q),
(710,-9,o),
(630,-9,qs),
(575,-9,o),
(538,20,q),
(531,-84,o),
(469,-147,qs),
(403,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,258,ls),
(487,308,o),
(528,308,qs),
(533,308,ls),
(538,308,o),
(538,303,qs),
(538,151,ls),
(538,99,o),
(587,38,o),
(629,38,qs),
(673,38,o),
(722,96,o),
(722,146,qs),
(722,278,ls),
(722,329,o),
(762,329,qs),
(767,329,ls),
(773,329,o),
(773,324,qs),
(773,151,ls),
(773,99,o),
(822,38,o),
(864,38,qs),
(908,38,o),
(956,95,o),
(956,146,qs),
(956,298,ls),
(956,321,o),
(979,349,o),
(997,349,qs),
(1002,349,ls),
(1007,349,o),
(1007,344,qs),
(1007,156,ls),
(1007,106,o),
(1056,49,o),
(1099,49,qs),
(1132,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
40 1 9 7 54 1 11 9 67 1 13 11 108 1 6 13 104 1 8 6 100 1 17 8 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 82 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 5 1 3 4 19 2 2 7 3 2 105 0 12 0 14 12 14 101 18 1 0 0 1 97 0 1 1 23 77 20 1 6 6 17 97 0 17 17 24 77 10 1 8 8 15 97 16 1 15 15 24 15 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 80 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 13 2 11 13 126 0 13 6 2 13 6 126 5 1 3 4 19 2 2 7 3 2 105 10 1 8 16 1 15 12 8 15 105 0 12 0 14 12 14 101 18 1 0 0 1 97 0 1 1 23 77 20 1 6 6 17 97 0 17 17 24 17 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
37 36 13 12 1 0 111 109 107 105 103 101 97 95 88 86 78 76 71 69 64 62 58 56 51 49 44 42 36 112 37 112 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1124;
}
);
note = uniFEB6;
unicode = 65206;
},
{
glyphname = uniFEB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,503,o),
(338,518,qs),
(338,532,o),
(357,552,o),
(372,552,qs),
(386,552,o),
(406,532,o),
(406,518,qs),
(406,503,o),
(386,482,o),
(372,482,qs),
(357,482,o)
);
},
{
closed = 1;
nodes = (
(289,422,o),
(289,437,qs),
(289,451,o),
(308,471,o),
(323,471,qs),
(337,471,o),
(357,451,o),
(357,437,qs),
(357,422,o),
(337,401,o),
(323,401,qs),
(308,401,o)
);
},
{
closed = 1;
nodes = (
(406,471,o),
(420,471,qs),
(435,471,o),
(455,451,o),
(455,437,qs),
(455,422,o),
(435,401,o),
(420,401,qs),
(406,401,o),
(387,422,o),
(387,437,qs),
(387,451,o)
);
},
{
closed = 1;
nodes = (
(632,349,o),
(632,344,qs),
(632,146,ls),
(632,77,o),
(598,36,qs),
(560,-9,o),
(489,-9,qs),
(409,-9,o),
(373,48,q),
(335,-9,o),
(255,-9,qs),
(170,-9,o),
(134,53,q),
(96,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,258,ls),
(112,308,o),
(153,308,qs),
(158,308,ls),
(163,308,o),
(163,303,qs),
(163,155,l),
(163,151,ls),
(163,99,o),
(212,38,o),
(254,38,qs),
(298,38,o),
(347,96,o),
(347,146,qs),
(347,278,ls),
(347,329,o),
(387,329,qs),
(392,329,ls),
(398,329,o),
(398,324,qs),
(398,151,ls),
(398,99,o),
(447,38,o),
(489,38,qs),
(532,38,o),
(581,95,o),
(581,146,qs),
(581,298,ls),
(581,321,o),
(604,349,o),
(622,349,qs),
(627,349,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
86 1 8 6 47 1 10 8 75 61 2 11 10 79 1 7 11 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 5 1 3 4 16 2 2 6 3 2 105 15 1 0 0 1 97 0 1 1 23 77 0 11 11 12 97 0 12 12 24 77 9 1 7 7 13 97 14 1 13 13 24 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
17 1 6 2 8 2 6 8 128 0 8 10 2 8 10 126 0 10 11 2 10 11 126 5 1 3 4 16 2 2 6 3 2 105 9 1 7 14 1 13 7 13 101 15 1 0 0 1 97 0 1 1 23 77 0 11 11 12 97 0 12 12 24 12 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 45 values pushed */
37 36 13 12 1 0 82 80 78 76 74 72 71 69 65 63 57 55 51 49 44 42 36 88 37 88 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 18 7 22 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = uniFEB7;
unicode = 65207;
},
{
glyphname = uniFEB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(338,503,o),
(338,518,qs),
(338,532,o),
(357,552,o),
(372,552,qs),
(386,552,o),
(406,532,o),
(406,518,qs),
(406,503,o),
(386,482,o),
(372,482,qs),
(357,482,o)
);
},
{
closed = 1;
nodes = (
(289,422,o),
(289,437,qs),
(289,451,o),
(308,471,o),
(323,471,qs),
(337,471,o),
(357,451,o),
(357,437,qs),
(357,422,o),
(337,401,o),
(323,401,qs),
(308,401,o)
);
},
{
closed = 1;
nodes = (
(406,471,o),
(420,471,qs),
(435,471,o),
(455,451,o),
(455,437,qs),
(455,422,o),
(435,401,o),
(420,401,qs),
(406,401,o),
(387,422,o),
(387,437,qs),
(387,451,o)
);
},
{
closed = 1;
nodes = (
(757,0,l),
(726,0,ls),
(648,0,o),
(610,53,q),
(573,-9,o),
(489,-9,qs),
(409,-9,o),
(373,48,q),
(335,-9,o),
(255,-9,qs),
(170,-9,o),
(134,53,q),
(96,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,258,ls),
(112,308,o),
(153,308,qs),
(158,308,ls),
(163,308,o),
(163,303,qs),
(163,155,l),
(163,151,ls),
(163,99,o),
(212,38,o),
(254,38,qs),
(298,38,o),
(347,96,o),
(347,146,qs),
(347,278,ls),
(347,329,o),
(387,329,qs),
(392,329,ls),
(398,329,o),
(398,324,qs),
(398,151,ls),
(398,99,o),
(447,38,o),
(489,38,qs),
(532,38,o),
(581,95,o),
(581,146,qs),
(581,298,ls),
(581,321,o),
(604,349,o),
(622,349,qs),
(627,349,ls),
(632,349,o),
(632,344,qs),
(632,156,ls),
(632,105,o),
(681,49,o),
(724,49,qs),
(757,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
40 1 9 7 54 1 11 9 90 82 68 3 6 11 86 1 8 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 70 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 5 1 3 4 18 2 2 7 3 2 105 17 1 0 0 1 97 0 1 1 23 77 12 19 2 6 6 13 97 16 1 13 13 24 77 10 1 8 8 14 97 15 1 14 14 24 14 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 67 values pushed */
0 7 2 9 2 7 9 128 0 9 11 2 9 11 126 0 11 6 2 11 6 126 5 1 3 4 18 2 2 7 3 2 105 10 1 8 15 1 14 8 14 101 17 1 0 0 1 97 0 1 1 23 77 12 19 2 6 6 13 97 16 1 13 13 24 13 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 49 values pushed */
37 36 13 12 1 0 93 91 89 87 85 83 81 79 78 76 72 70 64 62 58 56 51 49 44 42 36 94 37 94 34 32 28 26 19 17 12 23 13 23 7 5 0 11 1 11 20 7 22 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uniFEB8;
unicode = 65208;
},
{
glyphname = uniFEBA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1311,0,l),
(1280,0,ls),
(1191,0,o),
(1156,67,q),
(1111,0,o),
(1025,0,qs),
(649,0,ls),
(591,0,o),
(555,30,q),
(552,-79,o),
(489,-145,qs),
(423,-214,o),
(316,-214,qs),
(223,-214,o),
(158,-159,qs),
(77,-91,o),
(78,34,qs),
(78,91,o),
(123,196,o),
(159,225,qs),
(166,231,o),
(173,231,qs),
(185,231,o),
(184,219,qs),
(184,216,o),
(181,211,qs),
(130,137,o),
(128,46,qs),
(126,-53,o),
(181,-111,qs),
(234,-167,o),
(316,-167,qs),
(383,-167,o),
(434,-124,qs),
(504,-66,o),
(504,46,qs),
(504,298,ls),
(504,321,o),
(527,349,o),
(545,349,qs),
(550,349,ls),
(555,349,o),
(555,344,qs),
(555,155,ls),
(555,106,o),
(604,49,o),
(647,49,qs),
(649,49,l),
(679,175,o),
(755,260,qs),
(852,368,o),
(989,368,qs),
(1067,368,o),
(1120,325,qs),
(1186,272,o),
(1186,177,qs),
(1186,175,l),
(1187,154,ls),
(1188,104,o),
(1235,49,o),
(1278,49,qs),
(1311,49,l)
);
},
{
closed = 1;
nodes = (
(1068,49,o),
(1099,82,qs),
(1135,119,o),
(1134,178,qs),
(1133,244,o),
(1094,282,qs),
(1053,321,o),
(988,321,qs),
(890,321,o),
(814,249,qs),
(734,173,o),
(705,49,q),
(1020,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
18 1 9 3 57 1 0 5 52 1 7 0 3 76 0 3 1 9 1 3 9 128 0 5 9 0 9 5 0 128 0 1 0 9 5 1 9 105 0 4 0 6 4 6 101 12 10 2 11 4 0 0 7 97 8 1 7 7 24 7 78 62 62 1 0 62 74 62 73 67 65 60 58 56 53 49 47 40 38 30 28 22 20 15 13 10 8 0 61 1 61 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1303;
}
);
note = uniFEBA;
unicode = 65210;
},
{
glyphname = uniFEBB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(728,325,qs),
(794,272,o),
(794,177,qs),
(794,101,o),
(753,53,qs),
(707,0,o),
(633,0,qs),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,238,ls),
(112,289,o),
(153,289,qs),
(158,289,ls),
(163,289,o),
(163,284,qs),
(163,155,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(257,49,l),
(287,175,o),
(363,260,qs),
(460,368,o),
(597,368,qs),
(675,368,o)
);
},
{
closed = 1;
nodes = (
(675,49,o),
(707,82,qs),
(743,119,o),
(742,178,qs),
(741,244,o),
(702,282,qs),
(661,322,o),
(595,322,qs),
(498,322,o),
(422,250,qs),
(342,174,o),
(313,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
23 9 2 1 2 1 76 0 2 6 1 6 2 1 128 8 1 0 0 6 2 0 6 105 9 7 3 3 1 1 4 97 5 1 4 4 24 4 78 34 34 1 0 34 46 34 45 39 37 27 24 22 20 19 17 13 11 6 4 0 33 1 33 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = uniFEBB;
unicode = 65211;
},
{
glyphname = uniFEBC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(919,0,l),
(888,0,ls),
(798,0,o),
(764,67,q),
(718,0,o),
(633,0,qs),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,238,ls),
(112,289,o),
(153,289,qs),
(158,289,ls),
(163,289,o),
(163,284,qs),
(163,155,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(257,49,l),
(287,175,o),
(363,260,qs),
(460,368,o),
(597,368,qs),
(675,368,o),
(728,325,qs),
(794,272,o),
(794,177,qs),
(794,175,l),
(795,154,ls),
(796,104,o),
(843,49,o),
(885,49,qs),
(919,49,l)
);
},
{
closed = 1;
nodes = (
(675,49,o),
(707,82,qs),
(743,119,o),
(742,178,qs),
(741,244,o),
(702,282,qs),
(661,322,o),
(595,322,qs),
(498,322,o),
(422,250,qs),
(342,174,o),
(313,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
37 32 18 3 0 3 1 76 0 3 8 0 8 3 0 128 0 1 0 8 3 1 8 105 11 9 4 2 10 5 0 0 5 97 7 6 2 5 5 24 5 78 42 42 1 0 42 54 42 53 47 45 40 38 36 33 31 29 28 26 22 20 15 13 10 8 0 41 1 41 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 912;
}
);
note = uniFEBC;
unicode = 65212;
},
{
glyphname = uniFEBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(929,468,o),
(929,484,qs),
(929,500,o),
(950,522,o),
(966,522,qs),
(982,522,o),
(1003,500,o),
(1003,484,qs),
(1003,468,o),
(982,446,o),
(966,446,qs),
(951,446,o)
);
},
{
closed = 1;
nodes = (
(1311,0,l),
(1280,0,ls),
(1191,0,o),
(1156,67,q),
(1111,0,o),
(1025,0,qs),
(649,0,ls),
(591,0,o),
(555,30,q),
(552,-79,o),
(489,-145,qs),
(423,-214,o),
(316,-214,qs),
(223,-214,o),
(158,-159,qs),
(77,-91,o),
(78,34,qs),
(78,91,o),
(123,196,o),
(159,225,qs),
(166,231,o),
(173,231,qs),
(185,231,o),
(184,219,qs),
(184,216,o),
(181,211,qs),
(130,137,o),
(128,46,qs),
(126,-53,o),
(181,-111,qs),
(234,-167,o),
(316,-167,qs),
(383,-167,o),
(434,-124,qs),
(504,-66,o),
(504,46,qs),
(504,298,ls),
(504,321,o),
(527,349,o),
(545,349,qs),
(550,349,ls),
(555,349,o),
(555,344,qs),
(555,155,ls),
(555,106,o),
(604,49,o),
(647,49,qs),
(649,49,l),
(679,175,o),
(755,260,qs),
(852,368,o),
(989,368,qs),
(1067,368,o),
(1120,325,qs),
(1186,272,o),
(1186,177,qs),
(1186,175,l),
(1187,154,ls),
(1188,104,o),
(1235,49,o),
(1278,49,qs),
(1311,49,l)
);
},
{
closed = 1;
nodes = (
(1068,49,o),
(1099,82,qs),
(1135,119,o),
(1134,178,qs),
(1133,244,o),
(1094,282,qs),
(1053,321,o),
(988,321,qs),
(890,321,o),
(814,249,qs),
(734,173,o),
(705,49,q),
(1020,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 111 values pushed */
30 1 11 5 69 1 2 7 64 1 9 2 3 76 0 5 3 11 3 5 11 128 0 7 11 2 11 7 2 128 0 1 13 1 0 3 1 0 105 0 3 0 11 7 3 11 105 0 6 0 8 6 8 101 15 12 4 14 4 2 2 9 97 10 1 9 9 24 9 78 74 74 13 12 1 0 74 86 74 85 79 77 72 70 68 65 61 59 52 50 42 40 34 32 27 25 22 20 12 73 13 73 7 5 0 11 1 11 16 7 22 
CALL[ ]	/* CallFunction */";
};
width = 1303;
}
);
note = uniFEBE;
unicode = 65214;
},
{
glyphname = uniFEBF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,468,o),
(537,484,qs),
(537,500,o),
(558,522,o),
(574,522,qs),
(590,522,o),
(611,500,o),
(611,484,qs),
(611,468,o),
(589,446,o),
(574,446,qs),
(559,446,o)
);
},
{
closed = 1;
nodes = (
(728,325,qs),
(794,272,o),
(794,177,qs),
(794,101,o),
(753,53,qs),
(707,0,o),
(633,0,qs),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,238,ls),
(112,289,o),
(153,289,qs),
(158,289,ls),
(163,289,o),
(163,284,qs),
(163,155,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(257,49,l),
(287,175,o),
(363,260,qs),
(460,368,o),
(597,368,qs),
(675,368,o)
);
},
{
closed = 1;
nodes = (
(675,49,o),
(707,82,qs),
(743,119,o),
(742,178,qs),
(741,244,o),
(702,282,qs),
(661,322,o),
(595,322,qs),
(498,322,o),
(422,250,qs),
(342,174,o),
(313,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
35 21 2 3 4 1 76 0 4 8 3 8 4 3 128 0 1 10 1 0 2 1 0 105 11 1 2 0 8 4 2 8 105 12 9 5 3 3 3 6 97 7 1 6 6 24 6 78 46 46 13 12 1 0 46 58 46 57 51 49 39 36 34 32 31 29 25 23 18 16 12 45 13 45 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 854;
}
);
note = uniFEBF;
unicode = 65215;
},
{
glyphname = uniFEC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,468,o),
(537,484,qs),
(537,500,o),
(558,522,o),
(574,522,qs),
(590,522,o),
(611,500,o),
(611,484,qs),
(611,468,o),
(589,446,o),
(574,446,qs),
(559,446,o)
);
},
{
closed = 1;
nodes = (
(919,0,l),
(888,0,ls),
(798,0,o),
(764,67,q),
(718,0,o),
(633,0,qs),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,238,ls),
(112,289,o),
(153,289,qs),
(158,289,ls),
(163,289,o),
(163,284,qs),
(163,155,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(257,49,l),
(287,175,o),
(363,260,qs),
(460,368,o),
(597,368,qs),
(675,368,o),
(728,325,qs),
(794,272,o),
(794,177,qs),
(794,175,l),
(795,154,ls),
(796,104,o),
(843,49,o),
(885,49,qs),
(919,49,l)
);
},
{
closed = 1;
nodes = (
(675,49,o),
(707,82,qs),
(743,119,o),
(742,178,qs),
(741,244,o),
(702,282,qs),
(661,322,o),
(595,322,qs),
(498,322,o),
(422,250,qs),
(342,174,o),
(313,49,q),
(628,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 90 values pushed */
49 44 30 3 2 5 1 76 0 5 10 2 10 5 2 128 0 1 12 1 0 3 1 0 105 0 3 0 10 5 3 10 105 14 11 6 4 13 5 2 2 7 97 9 8 2 7 7 24 7 78 54 54 13 12 1 0 54 66 54 65 59 57 52 50 48 45 43 41 40 38 34 32 27 25 22 20 12 53 13 53 7 5 0 11 1 11 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 912;
}
);
note = uniFEC0;
unicode = 65216;
},
{
glyphname = uniFEC2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(840,0,l),
(809,0,ls),
(719,0,o),
(685,67,q),
(639,0,o),
(553,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(182,49,l),
(182,504,ls),
(182,556,o),
(223,556,qs),
(228,556,ls),
(233,556,o),
(233,550,qs),
(233,190,l),
(277,265,o),
(341,311,qs),
(421,368,o),
(518,368,qs),
(596,368,o),
(649,325,qs),
(715,272,o),
(715,177,qs),
(715,175,l),
(716,154,ls),
(717,104,o),
(764,49,o),
(806,49,qs),
(840,49,l)
);
},
{
closed = 1;
nodes = (
(596,49,o),
(628,82,qs),
(663,119,o),
(663,179,qs),
(662,245,o),
(622,283,qs),
(582,322,o),
(516,322,qs),
(419,322,o),
(343,250,qs),
(262,174,o),
(233,49,q),
(549,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
14 1 1 2 30 13 2 0 6 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 35 35 1 0 35 47 35 46 40 38 33 31 29 26 22 20 18 16 10 8 0 34 1 34 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uniFEC2;
unicode = 65218;
},
{
glyphname = uniFEC3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,325,qs),
(644,273,o),
(644,177,qs),
(644,101,o),
(602,53,qs),
(557,0,o),
(483,0,qs),
(-4,0,l),
(-4,49,l),
(112,49,l),
(112,504,ls),
(112,528,o),
(134,556,o),
(152,556,qs),
(157,556,ls),
(163,556,o),
(163,550,qs),
(163,191,l),
(206,266,o),
(269,311,qs),
(349,368,o),
(447,368,qs),
(525,368,o)
);
},
{
closed = 1;
nodes = (
(525,49,o),
(556,82,qs),
(592,119,o),
(592,179,qs),
(591,245,o),
(551,283,qs),
(510,322,o),
(445,322,qs),
(348,322,o),
(272,251,qs),
(192,175,o),
(163,52,q),
(163,49,l),
(478,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
5 1 0 1 4 1 2 4 2 76 6 1 0 0 4 2 0 4 105 0 1 1 23 77 7 5 2 2 2 3 95 0 3 3 24 3 78 23 23 1 0 23 36 23 35 29 27 16 14 13 12 9 7 0 22 1 22 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 703;
}
);
note = uniFEC3;
unicode = 65219;
},
{
glyphname = uniFEC4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(768,0,l),
(738,0,ls),
(648,0,o),
(613,67,q),
(568,0,o),
(483,0,qs),
(-4,0,l),
(-4,49,l),
(112,49,l),
(112,504,ls),
(112,528,o),
(134,556,o),
(152,556,qs),
(157,556,ls),
(163,556,o),
(163,550,qs),
(163,191,l),
(206,266,o),
(269,311,qs),
(349,368,o),
(447,368,qs),
(525,368,o),
(578,325,qs),
(644,273,o),
(644,177,qs),
(644,175,l),
(644,154,ls),
(645,104,o),
(693,49,o),
(735,49,qs),
(768,49,l)
);
},
{
closed = 1;
nodes = (
(525,49,o),
(556,82,qs),
(592,119,o),
(592,179,qs),
(591,245,o),
(551,283,qs),
(510,322,o),
(445,322,qs),
(348,322,o),
(272,251,qs),
(192,175,o),
(163,52,q),
(163,49,l),
(478,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
14 1 1 2 26 13 2 0 6 2 76 0 1 0 6 0 1 6 105 0 2 2 23 77 9 7 3 8 4 0 0 4 97 5 1 4 4 24 4 78 31 31 1 0 31 44 31 43 37 35 29 27 25 23 22 21 18 16 10 8 0 30 1 30 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uniFEC4;
unicode = 65220;
},
{
glyphname = uniFEC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(840,0,l),
(809,0,ls),
(719,0,o),
(685,67,q),
(639,0,o),
(553,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,11,ls),
(54,28,o),
(81,49,o),
(101,49,qs),
(182,49,l),
(182,504,ls),
(182,556,o),
(223,556,qs),
(228,556,ls),
(233,556,o),
(233,550,qs),
(233,190,l),
(277,265,o),
(341,311,qs),
(421,368,o),
(518,368,qs),
(596,368,o),
(649,325,qs),
(715,272,o),
(715,177,qs),
(715,175,l),
(716,154,ls),
(717,104,o),
(764,49,o),
(806,49,qs),
(840,49,l)
);
},
{
closed = 1;
nodes = (
(458,468,o),
(458,484,qs),
(458,500,o),
(479,522,o),
(495,522,qs),
(510,522,o),
(532,500,o),
(532,484,qs),
(532,468,o),
(510,446,o),
(495,446,qs),
(479,446,o)
);
},
{
closed = 1;
nodes = (
(596,49,o),
(628,82,qs),
(663,119,o),
(663,179,qs),
(662,245,o),
(622,283,qs),
(582,322,o),
(516,322,qs),
(419,322,o),
(343,250,qs),
(262,174,o),
(233,49,q),
(549,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
14 1 7 2 30 13 2 0 8 2 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 47 47 36 35 1 0 47 59 47 58 52 50 42 40 35 46 36 46 33 31 29 26 22 20 18 16 10 8 0 34 1 34 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uniFEC6;
unicode = 65222;
},
{
glyphname = uniFEC7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,325,qs),
(644,273,o),
(644,177,qs),
(644,101,o),
(602,53,qs),
(557,0,o),
(483,0,qs),
(-4,0,l),
(-4,49,l),
(112,49,l),
(112,504,ls),
(112,528,o),
(134,556,o),
(152,556,qs),
(157,556,ls),
(163,556,o),
(163,550,qs),
(163,191,l),
(206,266,o),
(269,311,qs),
(349,368,o),
(447,368,qs),
(525,368,o)
);
},
{
closed = 1;
nodes = (
(387,468,o),
(387,484,qs),
(387,500,o),
(408,522,o),
(423,522,qs),
(439,522,o),
(460,500,o),
(460,484,qs),
(460,468,o),
(439,446,o),
(423,446,qs),
(408,446,o)
);
},
{
closed = 1;
nodes = (
(525,49,o),
(556,82,qs),
(592,119,o),
(592,179,qs),
(591,245,o),
(551,283,qs),
(510,322,o),
(445,322,qs),
(348,322,o),
(272,251,qs),
(192,175,o),
(163,52,q),
(163,49,l),
(478,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
5 1 5 1 4 1 2 6 2 76 0 5 9 1 4 0 5 4 105 8 1 0 0 6 2 0 6 105 0 1 1 23 77 10 7 2 2 2 3 95 0 3 3 24 3 78 35 35 24 23 1 0 35 48 35 47 41 39 30 28 23 34 24 34 16 14 13 12 9 7 0 22 1 22 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 703;
}
);
note = uniFEC7;
unicode = 65223;
},
{
glyphname = uniFEC8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(768,0,l),
(738,0,ls),
(648,0,o),
(613,67,q),
(568,0,o),
(483,0,qs),
(-4,0,l),
(-4,49,l),
(112,49,l),
(112,504,ls),
(112,528,o),
(134,556,o),
(152,556,qs),
(157,556,ls),
(163,556,o),
(163,550,qs),
(163,191,l),
(206,266,o),
(269,311,qs),
(349,368,o),
(447,368,qs),
(525,368,o),
(578,325,qs),
(644,273,o),
(644,177,qs),
(644,175,l),
(644,154,ls),
(645,104,o),
(693,49,o),
(735,49,qs),
(768,49,l)
);
},
{
closed = 1;
nodes = (
(387,468,o),
(387,484,qs),
(387,500,o),
(408,522,o),
(423,522,qs),
(439,522,o),
(460,500,o),
(460,484,qs),
(460,468,o),
(439,446,o),
(423,446,qs),
(408,446,o)
);
},
{
closed = 1;
nodes = (
(525,49,o),
(556,82,qs),
(592,119,o),
(592,179,qs),
(591,245,o),
(551,283,qs),
(510,322,o),
(445,322,qs),
(348,322,o),
(272,251,qs),
(192,175,o),
(163,52,q),
(163,49,l),
(478,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
14 1 7 2 26 13 2 0 8 2 76 0 7 11 1 6 1 7 6 105 0 1 0 8 0 1 8 105 0 2 2 23 77 12 9 3 10 4 0 0 4 97 5 1 4 4 24 4 78 43 43 32 31 1 0 43 56 43 55 49 47 38 36 31 42 32 42 29 27 25 23 22 21 18 16 10 8 0 30 1 30 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 761;
}
);
note = uniFEC8;
unicode = 65224;
},
{
glyphname = uniFECA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,-40,qs),
(113,-81,o),
(114,-142,qs),
(114,-196,o),
(147,-234,qs),
(190,-281,o),
(269,-284,qs),
(328,-286,o),
(372,-271,qs),
(403,-261,o),
(438,-241,qs),
(444,-238,o),
(449,-238,qs),
(458,-238,o),
(458,-247,qs),
(458,-254,o),
(453,-261,qs),
(432,-291,o),
(388,-310,qs),
(336,-333,o),
(264,-331,qs),
(175,-329,o),
(119,-279,qs),
(60,-226,o),
(60,-141,qs),
(60,-71,o),
(101,-21,qs),
(152,41,o),
(246,47,qs),
(248,47,l),
(136,189,ls),
(115,217,o),
(113,244,qs),
(111,294,o),
(165,330,qs),
(223,368,o),
(305,368,qs),
(375,369,o),
(430,339,qs),
(500,301,o),
(497,244,qs),
(495,216,o),
(474,189,qs),
(364,49,l),
(608,49,l),
(608,0,l),
(366,0,ls),
(323,0,o),
(306,13,q),
(290,1,o),
(261,0,qs),
(197,-2,o)
);
},
{
closed = 1;
nodes = (
(192,199,qs),
(195,195,o),
(196,194,qs),
(298,63,ls),
(305,53,o),
(312,63,qs),
(414,194,ls),
(415,195,o),
(416,197,q),
(439,225,o),
(439,241,qs),
(439,268,o),
(408,291,qs),
(368,321,o),
(305,321,qs),
(252,321,o),
(171,273,o),
(171,241,qs),
(171,225,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
18 10 2 2 8 2 1 0 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
18 10 2 2 8 2 1 0 4 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 7 0 6 7 128 0 3 0 8 2 3 8 105 0 7 0 5 7 5 101 4 1 2 2 0 97 1 9 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 6 0 7 0 6 7 128 0 3 0 8 2 3 8 105 0 7 0 5 7 5 101 0 2 2 0 97 1 9 2 0 0 24 77 0 4 4 0 97 1 9 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
1 0 56 54 45 43 38 37 31 29 23 21 15 13 7 6 5 3 0 51 1 51 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uniFECA;
unicode = 65226;
},
{
glyphname = uniFECB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,49,o),
(460,27,o),
(460,11,qs),
(460,7,ls),
(460,0,o),
(452,0,qs),
(-4,0,l),
(-4,49,l),
(156,49,l),
(100,102,o),
(100,183,qs),
(100,264,o),
(148,315,qs),
(200,368,o),
(282,368,qs),
(326,368,o),
(402,331,o),
(405,308,qs),
(407,295,o),
(395,294,qs),
(392,294,o),
(385,298,qs),
(342,321,o),
(287,321,qs),
(234,322,o),
(197,290,qs),
(152,252,o),
(152,182,qs),
(151,136,o),
(178,99,qs),
(213,49,o),
(278,49,qs),
(412,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 4 6 2 0 0 5 95 0 5 5 24 5 78 1 0 27 25 24 23 18 16 13 11 9 7 0 32 1 31 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniFECB;
unicode = 65227;
},
{
glyphname = uniFECC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(231,49,l),
(121,189,ls),
(100,217,o),
(98,244,qs),
(96,294,o),
(150,330,qs),
(208,368,o),
(290,368,qs),
(359,369,o),
(415,339,qs),
(484,301,o),
(482,244,qs),
(480,216,o),
(459,189,qs),
(349,49,l),
(593,49,l),
(593,0,l),
(350,0,ls),
(308,0,o),
(290,13,q),
(271,0,o),
(227,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(290,54,o),
(297,63,qs),
(399,194,ls),
(423,225,o),
(423,241,qs),
(423,268,o),
(392,291,qs),
(352,321,o),
(290,321,qs),
(236,321,o),
(156,273,o),
(156,241,qs),
(156,225,o),
(180,194,qs),
(283,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
18 10 2 2 5 2 1 0 2 2 76 0 3 0 5 2 3 5 105 4 1 2 2 0 95 1 6 2 0 0 24 0 78 1 0 30 28 22 21 15 13 7 6 5 3 0 23 1 23 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniFECC;
unicode = 65228;
},
{
glyphname = uniFECE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(267,469,o),
(267,485,qs),
(267,501,o),
(288,523,o),
(304,523,qs),
(320,523,o),
(341,501,o),
(341,485,qs),
(341,469,o),
(319,447,o),
(304,447,qs),
(289,447,o)
);
},
{
closed = 1;
nodes = (
(157,-40,qs),
(113,-81,o),
(114,-142,qs),
(114,-196,o),
(147,-234,qs),
(190,-281,o),
(269,-284,qs),
(328,-286,o),
(372,-271,qs),
(403,-261,o),
(438,-241,qs),
(444,-238,o),
(449,-238,qs),
(458,-238,o),
(458,-247,qs),
(458,-254,o),
(453,-261,qs),
(432,-291,o),
(388,-310,qs),
(336,-333,o),
(264,-331,qs),
(175,-329,o),
(119,-279,qs),
(60,-226,o),
(60,-141,qs),
(60,-71,o),
(101,-21,qs),
(152,41,o),
(246,47,qs),
(248,47,l),
(136,189,ls),
(115,217,o),
(113,244,qs),
(111,294,o),
(165,330,qs),
(223,368,o),
(305,368,qs),
(375,369,o),
(430,339,qs),
(500,301,o),
(497,244,qs),
(495,216,o),
(474,189,qs),
(364,49,l),
(608,49,l),
(608,0,l),
(366,0,ls),
(323,0,o),
(306,13,q),
(290,1,o),
(261,0,qs),
(197,-2,o)
);
},
{
closed = 1;
nodes = (
(192,199,qs),
(195,195,o),
(196,194,qs),
(298,63,ls),
(305,53,o),
(312,63,qs),
(414,194,ls),
(415,195,o),
(416,197,q),
(439,225,o),
(439,241,qs),
(439,268,o),
(408,291,qs),
(368,321,o),
(305,321,qs),
(252,321,o),
(171,273,o),
(171,241,qs),
(171,225,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
30 22 2 4 10 14 1 2 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
30 22 2 4 10 14 1 2 6 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 8 2 9 2 8 9 128 0 1 11 1 0 5 1 0 105 0 5 0 10 4 5 10 105 0 9 0 7 9 7 101 6 1 4 4 2 97 3 12 2 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 8 2 9 2 8 9 128 0 1 11 1 0 5 1 0 105 0 5 0 10 4 5 10 105 0 9 0 7 9 7 101 0 4 4 2 97 3 12 2 2 2 24 77 0 6 6 2 97 3 12 2 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
13 12 1 0 68 66 57 55 50 49 43 41 35 33 27 25 19 18 17 15 12 63 13 63 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = uniFECE;
unicode = 65230;
},
{
glyphname = uniFECF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,469,o),
(238,485,qs),
(238,501,o),
(259,523,o),
(275,523,qs),
(291,523,o),
(312,501,o),
(312,485,qs),
(312,469,o),
(291,447,o),
(275,447,qs),
(260,447,o)
);
},
{
closed = 1;
nodes = (
(433,49,o),
(460,27,o),
(460,11,qs),
(460,7,ls),
(460,0,o),
(452,0,qs),
(-4,0,l),
(-4,49,l),
(156,49,l),
(100,102,o),
(100,183,qs),
(100,264,o),
(148,315,qs),
(200,368,o),
(282,368,qs),
(326,368,o),
(402,331,o),
(405,308,qs),
(407,295,o),
(395,294,qs),
(392,294,o),
(385,298,qs),
(342,321,o),
(287,321,qs),
(234,322,o),
(197,290,qs),
(152,252,o),
(152,182,qs),
(151,136,o),
(178,99,qs),
(213,49,o),
(278,49,qs),
(412,49,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 4 3 2 3 4 2 128 0 1 8 1 0 5 1 0 105 0 5 0 3 4 5 3 105 6 9 2 2 2 7 95 0 7 7 24 7 78 13 12 1 0 39 37 36 35 30 28 25 23 21 19 12 44 13 43 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uniFECF;
unicode = 65231;
},
{
glyphname = uniFED0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,501,o),
(326,485,qs),
(326,469,o),
(304,447,o),
(289,447,qs),
(273,447,o),
(252,469,o),
(252,485,qs),
(252,501,o),
(273,523,o),
(289,523,qs),
(305,523,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(231,49,l),
(121,189,ls),
(100,217,o),
(98,244,qs),
(96,294,o),
(150,330,qs),
(208,368,o),
(290,368,qs),
(359,369,o),
(415,339,qs),
(484,301,o),
(482,244,qs),
(480,216,o),
(459,189,qs),
(349,49,l),
(593,49,l),
(593,0,l),
(350,0,ls),
(308,0,o),
(290,13,q),
(271,0,o),
(227,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(290,54,o),
(297,63,qs),
(399,194,ls),
(423,225,o),
(423,241,qs),
(423,268,o),
(392,291,qs),
(352,321,o),
(290,321,qs),
(236,321,o),
(156,273,o),
(156,241,qs),
(156,225,o),
(180,194,qs),
(283,63,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
30 22 2 4 7 14 1 2 4 2 76 8 1 0 0 1 5 0 1 105 0 5 0 7 4 5 7 105 6 1 4 4 2 95 3 9 2 2 2 24 2 78 13 12 1 0 42 40 34 33 27 25 19 18 17 15 12 35 13 35 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 586;
}
);
note = uniFED0;
unicode = 65232;
},
{
glyphname = uniFED2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,469,o),
(596,485,qs),
(596,501,o),
(617,523,o),
(633,523,qs),
(649,523,o),
(670,501,o),
(670,485,qs),
(670,469,o),
(648,447,o),
(633,447,qs),
(618,447,o)
);
},
{
closed = 1;
nodes = (
(912,-1,l),
(696,-1,ls),
(649,-1,o),
(629,14,q),
(611,-1,o),
(564,-1,qs),
(364,-1,l),
(364,0,l),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(513,49,l),
(513,48,l),
(551,48,l),
(514,67,o),
(466,149,o),
(466,195,qs),
(465,260,o),
(503,309,qs),
(551,368,o),
(629,368,qs),
(699,368,o),
(744,321,qs),
(795,271,o),
(793,195,qs),
(792,148,o),
(745,67,o),
(708,48,q),
(912,48,l)
);
},
{
closed = 1;
nodes = (
(545,116,qs),
(578,71,o),
(629,58,q),
(677,70,o),
(742,150,o),
(742,195,qs),
(741,248,o),
(712,283,qs),
(680,321,o),
(629,321,qs),
(586,321,o),
(555,291,qs),
(518,256,o),
(518,195,qs),
(517,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
65 1 3 4 49 1 5 3 2 76 0 4 8 3 8 4 3 128 0 1 9 1 0 2 1 0 105 0 2 0 8 4 2 8 105 10 7 2 3 3 5 96 6 1 5 5 24 5 78 12 12 1 0 59 57 12 53 12 53 52 50 48 43 38 36 30 26 20 18 7 5 0 11 1 11 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 906;
}
);
note = uniFED2;
unicode = 65234;
},
{
glyphname = uniFED3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,469,o),
(229,485,qs),
(229,501,o),
(251,523,o),
(266,523,qs),
(282,523,o),
(303,501,o),
(303,485,qs),
(303,469,o),
(282,447,o),
(266,447,qs),
(251,447,o)
);
},
{
closed = 1;
nodes = (
(374,322,qs),
(425,269,o),
(425,183,qs),
(425,111,o),
(387,60,qs),
(343,2,o),
(268,0,qs),
(-4,0,l),
(-4,49,l),
(152,49,l),
(99,95,o),
(99,183,qs),
(99,258,o),
(139,309,qs),
(185,368,o),
(262,368,qs),
(329,368,o)
);
},
{
closed = 1;
nodes = (
(340,85,qs),
(374,124,o),
(374,184,qs),
(374,237,o),
(348,274,qs),
(316,321,o),
(262,321,qs),
(215,321,o),
(184,285,qs),
(151,245,o),
(151,184,qs),
(151,132,o),
(177,95,qs),
(208,49,o),
(262,49,qs),
(310,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 1 7 1 0 2 1 0 105 8 1 2 0 6 3 2 6 105 9 5 2 3 3 4 95 0 4 4 24 4 78 30 29 13 12 1 0 38 36 29 44 30 44 22 20 19 18 12 28 13 28 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = uniFED3;
unicode = 65235;
},
{
glyphname = uniFED4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(227,469,o),
(227,485,qs),
(227,501,o),
(248,523,o),
(263,523,qs),
(279,523,o),
(300,501,o),
(300,485,qs),
(300,469,o),
(279,447,o),
(263,447,qs),
(248,447,o)
);
},
{
closed = 1;
nodes = (
(544,0,l),
(328,0,ls),
(281,0,o),
(262,15,q),
(243,0,o),
(196,0,qs),
(-4,0,l),
(-4,49,l),
(183,49,l),
(146,68,o),
(99,149,o),
(98,196,qs),
(97,261,o),
(136,309,qs),
(183,368,o),
(262,368,qs),
(331,368,o),
(377,322,qs),
(427,271,o),
(425,196,qs),
(425,149,o),
(377,68,o),
(340,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(177,117,qs),
(210,72,o),
(262,58,q),
(309,71,o),
(374,151,o),
(374,196,qs),
(373,248,o),
(344,283,qs),
(312,321,o),
(262,321,qs),
(218,321,o),
(187,292,qs),
(150,256,o),
(150,196,qs),
(149,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
47 1 3 7 31 1 4 3 2 76 0 1 8 1 0 2 1 0 105 0 2 0 7 3 2 7 105 9 6 2 3 3 4 95 5 1 4 4 24 4 78 12 12 1 0 41 39 12 35 12 35 34 32 30 28 27 26 20 18 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED4;
unicode = 65236;
},
{
glyphname = uniFED6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(357,464,o),
(357,479,qs),
(357,493,o),
(376,513,o),
(391,513,qs),
(405,513,o),
(425,493,o),
(425,479,qs),
(425,464,o),
(405,443,o),
(391,443,qs),
(376,443,o)
);
},
{
closed = 1;
nodes = (
(454,464,o),
(454,479,qs),
(454,493,o),
(474,513,o),
(488,513,qs),
(503,513,o),
(523,493,o),
(523,479,qs),
(523,464,o),
(503,443,o),
(488,443,qs),
(474,443,o)
);
},
{
closed = 1;
nodes = (
(467,-128,qs),
(530,-83,o),
(548,0,q),
(439,0,ls),
(372,0,o),
(327,45,qs),
(276,97,o),
(276,178,qs),
(276,259,o),
(317,310,qs),
(363,368,o),
(439,368,qs),
(541,368,o),
(582,272,qs),
(597,238,o),
(610,113,o),
(606,49,q),
(729,49,l),
(729,0,l),
(599,0,l),
(581,-97,o),
(519,-153,qs),
(449,-214,o),
(335,-214,qs),
(222,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(234,-167,o),
(335,-167,qs),
(413,-167,o)
);
},
{
closed = 1;
nodes = (
(553,53,o),
(554,61,qs),
(554,67,o),
(554,69,qs),
(561,195,o),
(533,256,qs),
(504,321,o),
(440,321,qs),
(394,321,o),
(364,287,qs),
(328,247,o),
(328,179,qs),
(328,130,o),
(355,93,qs),
(387,49,o),
(440,49,qs),
(553,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 101 values pushed */
83 1 8 5 1 76 0 5 12 8 12 5 8 128 3 1 1 14 2 13 3 0 9 1 0 105 0 9 0 12 5 9 12 105 15 1 4 0 6 4 6 101 16 11 2 8 8 7 95 10 1 7 7 24 7 78 70 69 25 24 13 12 1 0 78 76 69 85 70 84 65 63 57 55 51 50 49 48 45 43 35 34 24 68 25 68 19 17 12 23 13 23 7 5 0 11 1 11 17 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uniFED6;
unicode = 65238;
},
{
glyphname = uniFED7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,464,o),
(179,479,qs),
(179,493,o),
(199,513,o),
(213,513,qs),
(228,513,o),
(248,493,o),
(248,479,qs),
(248,464,o),
(228,443,o),
(213,443,qs),
(199,443,o)
);
},
{
closed = 1;
nodes = (
(277,464,o),
(277,479,qs),
(277,493,o),
(297,513,o),
(311,513,qs),
(326,513,o),
(345,493,o),
(345,479,qs),
(345,464,o),
(326,443,o),
(311,443,qs),
(297,443,o)
);
},
{
closed = 1;
nodes = (
(374,322,qs),
(425,269,o),
(425,183,qs),
(425,111,o),
(387,60,qs),
(343,2,o),
(268,0,qs),
(-4,0,l),
(-4,49,l),
(152,49,l),
(99,95,o),
(99,183,qs),
(99,258,o),
(139,309,qs),
(185,368,o),
(262,368,qs),
(329,368,o)
);
},
{
closed = 1;
nodes = (
(340,85,qs),
(374,124,o),
(374,184,qs),
(374,237,o),
(348,274,qs),
(316,321,o),
(262,321,qs),
(215,321,o),
(184,285,qs),
(151,245,o),
(151,184,qs),
(151,132,o),
(177,95,qs),
(208,49,o),
(262,49,qs),
(310,49,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
3 1 1 10 2 9 3 0 4 1 0 105 11 1 4 0 8 5 4 8 105 12 7 2 5 5 6 95 0 6 6 24 6 78 42 41 25 24 13 12 1 0 50 48 41 56 42 56 34 32 31 30 24 40 25 40 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = uniFED7;
unicode = 65239;
},
{
glyphname = uniFED8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,464,o),
(179,479,qs),
(179,493,o),
(199,513,o),
(213,513,qs),
(228,513,o),
(248,493,o),
(248,479,qs),
(248,464,o),
(228,443,o),
(213,443,qs),
(199,443,o)
);
},
{
closed = 1;
nodes = (
(277,464,o),
(277,479,qs),
(277,493,o),
(297,513,o),
(311,513,qs),
(326,513,o),
(345,493,o),
(345,479,qs),
(345,464,o),
(326,443,o),
(311,443,qs),
(297,443,o)
);
},
{
closed = 1;
nodes = (
(544,0,l),
(328,0,ls),
(281,0,o),
(262,15,q),
(243,0,o),
(196,0,qs),
(-4,0,l),
(-4,49,l),
(183,49,l),
(146,68,o),
(99,149,o),
(98,196,qs),
(97,261,o),
(136,309,qs),
(183,368,o),
(262,368,qs),
(331,368,o),
(377,322,qs),
(427,271,o),
(425,196,qs),
(425,149,o),
(377,68,o),
(340,49,q),
(544,49,l)
);
},
{
closed = 1;
nodes = (
(177,117,qs),
(210,72,o),
(262,58,q),
(309,71,o),
(374,151,o),
(374,196,qs),
(373,248,o),
(344,283,qs),
(312,321,o),
(262,321,qs),
(218,321,o),
(187,292,qs),
(150,256,o),
(150,196,qs),
(149,154,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 79 values pushed */
59 1 5 9 43 1 6 5 2 76 3 1 1 11 2 10 3 0 4 1 0 105 0 4 0 9 5 4 9 105 12 8 2 5 5 6 95 7 1 6 6 24 6 78 24 24 13 12 1 0 53 51 24 47 24 47 46 44 42 40 39 38 32 30 19 17 12 23 13 23 7 5 0 11 1 11 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 537;
}
);
note = uniFED8;
unicode = 65240;
},
{
glyphname = uniFEDA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(806,0,l),
(776,0,ls),
(694,0,o),
(656,58,q),
(618,0,o),
(537,0,qs),
(245,0,ls),
(60,0,o),
(60,152,qs),
(60,191,o),
(99,267,o),
(132,292,qs),
(140,298,o),
(147,298,qs),
(158,298,o),
(158,288,qs),
(158,282,o),
(154,277,qs),
(105,219,o),
(105,162,qs),
(105,49,o),
(247,49,qs),
(539,49,ls),
(582,49,o),
(631,106,o),
(631,156,qs),
(631,505,ls),
(631,556,o),
(671,556,qs),
(676,556,ls),
(682,556,o),
(682,551,qs),
(682,156,ls),
(682,106,o),
(730,49,o),
(773,49,qs),
(806,49,l)
);
},
{
closed = 1;
nodes = (
(292,263,qs),
(292,288,o),
(324,296,qs),
(325,296,o),
(327,296,qs),
(328,296,o),
(329,296,q),
(314,318,o),
(314,346,qs),
(314,380,o),
(359,426,o),
(393,426,qs),
(418,426,o),
(456,400,o),
(457,382,q),
(460,373,o),
(453,373,qs),
(450,373,o),
(444,376,q),
(442,378,l),
(416,389,o),
(401,389,qs),
(380,389,o),
(355,365,o),
(355,345,qs),
(355,324,o),
(379,299,o),
(398,299,qs),
(452,299,ls),
(481,299,o),
(481,271,qs),
(481,268,ls),
(481,262,o),
(474,262,qs),
(377,262,ls),
(334,262,o),
(309,253,q),
(308,253,o),
(307,253,q),
(299,250,o),
(298,250,qs),
(292,250,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 106 values pushed */
4 1 11 1 63 1 10 9 71 1 7 3 32 1 0 6 4 76 0 10 9 3 9 10 3 128 13 1 6 7 0 7 6 0 128 0 11 0 9 10 11 9 105 8 1 3 0 7 6 3 7 103 0 1 1 23 77 2 12 2 0 0 4 98 5 1 4 4 24 4 78 38 37 1 0 67 65 62 60 57 55 51 48 45 42 37 78 38 78 35 33 31 28 23 21 15 12 8 6 0 36 1 36 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = uniFEDA;
unicode = 65242;
},
{
glyphname = uniFEDB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,75,qs),
(434,108,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(361,544,o),
(356,512,o),
(339,499,qs),
(143,355,ls),
(140,353,o),
(140,352,qs),
(140,349,o),
(144,349,qs),
(330,349,ls),
(392,349,o),
(432,315,qs),
(486,270,o),
(486,173,qs),
(486,93,o),
(443,47,qs),
(400,0,o),
(330,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 1 0 2 3 1 2 103 0 3 3 0 95 4 1 0 0 24 0 78 1 0 35 33 27 24 9 7 0 36 1 36 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = uniFEDB;
unicode = 65243;
},
{
glyphname = uniFEDC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(610,0,l),
(580,0,ls),
(493,0,o),
(457,64,q),
(414,0,o),
(330,0,qs),
(-4,0,l),
(-4,49,l),
(327,49,ls),
(370,49,o),
(398,75,qs),
(434,108,o),
(434,176,qs),
(434,237,o),
(405,270,qs),
(377,302,o),
(327,302,qs),
(126,302,ls),
(85,302,o),
(85,334,qs),
(85,349,ls),
(85,369,o),
(99,379,qs),
(339,554,ls),
(344,557,o),
(347,555,qs),
(361,544,o),
(356,512,o),
(339,499,qs),
(143,355,ls),
(140,353,o),
(140,352,qs),
(140,349,o),
(144,349,qs),
(330,349,ls),
(392,349,o),
(432,315,qs),
(486,270,o),
(486,173,qs),
(487,154,ls),
(487,104,o),
(535,49,o),
(577,49,qs),
(610,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
39 1 0 2 1 76 0 1 0 2 0 1 2 103 3 6 2 0 0 4 97 5 1 4 4 24 4 78 1 0 42 40 38 36 35 33 27 24 9 7 0 43 1 43 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = uniFEDC;
unicode = 65244;
},
{
glyphname = uniFEDE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,0,l),
(632,0,ls),
(574,0,o),
(538,30,q),
(535,-79,o),
(472,-145,qs),
(406,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,504,ls),
(487,527,o),
(510,556,o),
(528,556,qs),
(533,556,ls),
(538,556,o),
(538,550,qs),
(538,156,ls),
(538,106,o),
(587,49,o),
(630,49,qs),
(663,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
4 1 3 1 38 1 5 0 2 76 0 3 1 0 1 3 0 128 0 2 0 4 2 4 101 0 1 1 23 77 6 1 0 0 5 97 0 5 5 24 5 78 1 0 41 39 35 33 26 24 16 14 8 6 0 42 1 42 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uniFEDE;
unicode = 65246;
},
{
glyphname = uniFEDF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
5 1 2 1 1 76 0 1 1 23 77 0 2 2 0 97 3 1 0 0 24 0 78 1 0 15 13 9 7 0 16 1 16 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFEDF;
unicode = 65247;
},
{
glyphname = uniFEE0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,505,ls),
(112,556,o),
(153,556,qs),
(158,556,ls),
(163,556,o),
(163,551,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
18 4 2 0 1 1 76 0 1 1 23 77 2 5 2 0 0 3 97 4 1 3 3 24 3 78 1 0 21 19 17 15 14 12 8 6 0 22 1 22 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEE0;
unicode = 65248;
},
{
glyphname = uniFEE2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,0,l),
(633,0,ls),
(555,0,o),
(517,52,q),
(481,-9,o),
(392,-9,qs),
(289,-9,o),
(189,49,q),
(183,49,ls),
(100,42,o),
(100,-63,qs),
(100,-237,ls),
(100,-260,o),
(78,-288,o),
(59,-288,qs),
(55,-288,ls),
(49,-288,o),
(49,-282,qs),
(49,-62,ls),
(49,81,o),
(166,97,q),
(173,108,o),
(186,137,qs),
(192,149,o),
(195,154,qs),
(247,266,o),
(263,291,qs),
(314,368,o),
(381,368,qs),
(451,368,o),
(493,315,qs),
(540,256,o),
(540,153,qs),
(540,143,ls),
(543,98,o),
(591,49,o),
(631,49,qs),
(663,49,l)
);
},
{
closed = 1;
nodes = (
(486,153,qs),
(486,235,o),
(458,279,qs),
(431,321,o),
(383,321,qs),
(349,321,o),
(317,277,qs),
(290,241,o),
(247,144,qs),
(231,106,o),
(221,89,q),
(309,38,o),
(393,38,qs),
(486,39,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
40 33 2 0 6 19 1 2 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 3 2 134 0 1 0 6 0 1 6 105 8 1 5 0 3 2 5 3 105 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
39 38 1 0 47 45 38 51 39 51 36 34 32 30 23 21 9 7 0 37 1 37 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 657;
}
);
note = uniFEE2;
unicode = 65250;
},
{
glyphname = uniFEE3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,315,qs),
(465,256,o),
(465,153,qs),
(465,-9,o),
(318,-9,qs),
(217,-9,o),
(120,46,q),
(99,18,o),
(52,0,o),
(2,0,qs),
(-4,0,l),
(-4,49,l),
(2,49,ls),
(49,49,o),
(90,85,o),
(120,154,qs),
(173,265,o),
(189,291,qs),
(240,368,o),
(307,368,qs),
(377,368,o)
);
},
{
closed = 1;
nodes = (
(412,153,qs),
(412,235,o),
(384,279,qs),
(357,321,o),
(308,321,qs),
(275,321,o),
(243,277,qs),
(215,240,o),
(173,144,qs),
(159,112,o),
(147,89,q),
(234,38,o),
(319,38,qs),
(412,39,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
23 1 1 5 13 1 4 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
6 1 0 0 5 1 0 5 105 0 1 1 2 97 0 2 2 24 77 7 1 4 4 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
6 1 0 0 5 1 0 5 105 7 1 4 0 3 4 3 101 0 1 1 2 97 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
22 21 1 0 30 28 21 34 22 34 16 14 11 9 7 6 0 20 1 20 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 535;
}
);
note = uniFEE3;
unicode = 65251;
},
{
glyphname = uniFEE4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(589,0,l),
(559,0,ls),
(482,0,o),
(443,53,q),
(408,-9,o),
(318,-9,qs),
(217,-9,o),
(120,46,q),
(99,18,o),
(52,0,o),
(2,0,qs),
(-4,0,l),
(-4,49,l),
(2,49,ls),
(49,49,o),
(90,85,o),
(120,154,qs),
(173,265,o),
(189,291,qs),
(240,368,o),
(307,368,qs),
(377,368,o),
(419,315,qs),
(465,257,o),
(465,156,qs),
(465,105,o),
(514,49,o),
(557,49,qs),
(589,49,l)
);
},
{
closed = 1;
nodes = (
(412,153,qs),
(412,235,o),
(384,279,qs),
(357,321,o),
(308,321,qs),
(275,321,o),
(243,277,qs),
(215,240,o),
(173,144,qs),
(159,112,o),
(147,89,q),
(234,38,o),
(319,38,qs),
(412,39,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
31 24 2 0 7 20 1 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 1 0 7 0 1 7 105 2 8 2 0 0 3 97 5 1 3 3 24 77 9 1 6 6 4 97 0 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 7 0 1 7 105 9 1 6 0 4 6 4 101 2 8 2 0 0 3 97 5 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
30 29 1 0 38 36 29 42 30 42 27 25 23 21 18 16 14 13 8 6 0 28 1 28 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 582;
}
);
note = uniFEE4;
unicode = 65252;
},
{
glyphname = uniFEE6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,352,o),
(273,368,qs),
(273,384,o),
(294,406,o),
(309,406,qs),
(325,406,o),
(347,384,o),
(347,368,qs),
(347,352,o),
(325,330,o),
(309,330,qs),
(294,330,o)
);
},
{
closed = 1;
nodes = (
(663,0,l),
(632,0,ls),
(574,0,o),
(538,30,q),
(535,-79,o),
(472,-145,qs),
(406,-214,o),
(299,-214,qs),
(206,-214,o),
(141,-159,qs),
(60,-91,o),
(61,34,qs),
(61,91,o),
(106,196,o),
(142,225,qs),
(149,231,o),
(156,231,qs),
(168,231,o),
(167,219,qs),
(167,216,o),
(164,211,qs),
(113,137,o),
(111,46,qs),
(109,-53,o),
(164,-111,qs),
(217,-167,o),
(299,-167,qs),
(366,-167,o),
(417,-124,qs),
(487,-66,o),
(487,46,qs),
(487,298,ls),
(487,321,o),
(510,349,o),
(528,349,qs),
(533,349,ls),
(538,349,o),
(538,344,qs),
(538,156,ls),
(538,106,o),
(587,49,o),
(630,49,qs),
(663,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
16 1 0 3 50 1 7 2 2 76 0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 1 8 1 0 5 1 0 105 0 4 0 6 4 6 101 9 1 2 2 7 97 0 7 7 24 7 78 13 12 1 0 53 51 47 45 38 36 28 26 20 18 12 54 13 54 7 5 0 11 1 11 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 655;
}
);
note = uniFEE6;
unicode = 65254;
},
{
glyphname = uniFEE7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,474,o),
(175,458,qs),
(175,442,o),
(153,420,o),
(138,420,qs),
(122,420,o),
(101,442,o),
(101,458,qs),
(101,474,o),
(122,496,o),
(138,496,qs),
(153,496,o)
);
},
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
17 1 4 3 1 76 0 3 1 4 1 3 4 128 5 1 0 0 1 3 0 1 105 0 4 4 2 97 6 1 2 2 24 2 78 13 12 1 0 27 25 21 19 12 28 13 28 7 5 0 11 1 11 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFEE7;
unicode = 65255;
},
{
glyphname = uniFEE8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,442,o),
(101,458,qs),
(101,474,o),
(122,496,o),
(138,496,qs),
(153,496,o),
(175,474,o),
(175,458,qs),
(175,442,o),
(153,420,o),
(138,420,qs),
(122,420,o)
);
},
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
30 16 2 2 3 1 76 0 3 0 2 0 3 2 128 0 1 7 1 0 3 1 0 105 4 8 2 2 2 5 97 6 1 5 5 24 5 78 13 12 1 0 33 31 29 27 26 24 20 18 12 34 13 34 7 5 0 11 1 11 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEE8;
unicode = 65256;
},
{
glyphname = uniFEEA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,0,l),
(482,0,ls),
(397,0,o),
(359,63,q),
(315,-9,o),
(224,-9,qs),
(157,-9,o),
(113,32,qs),
(60,81,o),
(60,170,qs),
(60,248,o),
(101,296,qs),
(147,349,o),
(224,349,qs),
(337,349,l),
(337,378,ls),
(337,398,o),
(360,424,o),
(378,424,qs),
(383,424,ls),
(388,424,o),
(388,419,qs),
(388,156,ls),
(388,105,o),
(437,49,o),
(480,49,qs),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(301,69,qs),
(337,105,o),
(337,170,qs),
(337,302,l),
(225,302,ls),
(178,302,o),
(147,271,qs),
(112,235,o),
(112,170,qs),
(112,113,o),
(139,78,qs),
(170,38,o),
(224,38,qs),
(271,38,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 1 22 1 0 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
44 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 7 1 0 0 4 97 0 4 4 24 77 8 1 5 5 3 97 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 1 2 1 133 0 2 0 6 0 2 6 103 8 1 5 0 3 5 3 101 7 1 0 0 4 97 0 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
28 27 1 0 36 34 27 40 28 40 25 23 21 19 13 11 8 6 0 26 1 26 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 506;
}
);
note = uniFEEA;
unicode = 65258;
},
{
glyphname = uniFEEB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(563,325,qs),
(622,276,o),
(622,175,qs),
(622,99,o),
(584,52,qs),
(541,0,o),
(466,0,qs),
(312,0,ls),
(264,0,o),
(247,13,q),
(230,0,o),
(182,0,qs),
(-4,0,l),
(-4,49,l),
(176,49,l),
(140,69,o),
(97,147,o),
(97,191,qs),
(97,281,o),
(157,328,q),
(138,329,o),
(123,332,qs),
(71,341,o),
(69,383,qs),
(69,387,ls),
(69,395,o),
(77,392,qs),
(98,384,o),
(115,381,q),
(143,373,o),
(238,371,qs),
(314,368,o),
(420,368,qs),
(512,368,o)
);
},
{
closed = 1;
nodes = (
(510,49,o),
(538,79,qs),
(570,113,o),
(570,176,qs),
(570,319,o),
(417,322,qs),
(389,322,o),
(342,323,q),
(396,275,o),
(396,191,qs),
(396,147,o),
(353,69,o),
(317,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(179,289,qs),
(145,253,o),
(145,193,qs),
(145,145,o),
(202,70,o),
(247,58,q),
(292,70,o),
(349,145,o),
(349,193,qs),
(349,248,o),
(291,318,o),
(247,318,qs),
(207,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
54 1 2 7 23 1 3 2 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 10 values pushed */
54 1 2 5 23 1 3 2 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 1 7 1 2 1 7 114 8 1 0 5 1 1 7 0 1 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 5 5 1 114 8 1 0 10 7 2 5 2 0 5 105 9 6 2 2 2 3 95 4 1 3 3 24 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
49 48 34 34 3 0 48 60 49 60 34 47 34 46 42 39 27 24 22 20 19 18 13 12 0 33 3 33 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uniFEEB;
unicode = 65259;
},
{
glyphname = uniFEEC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(747,0,l),
(716,0,ls),
(628,0,o),
(593,64,q),
(550,0,o),
(466,0,qs),
(312,0,ls),
(264,0,o),
(247,13,q),
(230,0,o),
(182,0,qs),
(-4,0,l),
(-4,49,l),
(176,49,l),
(140,69,o),
(97,147,o),
(97,191,qs),
(97,281,o),
(157,328,q),
(138,329,o),
(123,332,qs),
(71,341,o),
(69,383,qs),
(69,387,ls),
(69,395,o),
(77,392,qs),
(98,384,o),
(115,381,q),
(143,373,o),
(238,371,qs),
(314,368,o),
(420,368,qs),
(511,368,o),
(562,325,qs),
(622,276,o),
(622,177,qs),
(623,154,ls),
(624,104,o),
(671,49,o),
(713,49,qs),
(747,49,l)
);
},
{
closed = 1;
nodes = (
(510,49,o),
(538,79,qs),
(570,113,o),
(570,176,qs),
(570,319,o),
(417,322,qs),
(389,322,o),
(342,323,q),
(396,275,o),
(396,191,qs),
(396,147,o),
(353,69,o),
(317,49,q),
(464,49,ls)
);
},
{
closed = 1;
nodes = (
(179,289,qs),
(145,253,o),
(145,193,qs),
(145,145,o),
(202,70,o),
(247,58,q),
(292,70,o),
(349,145,o),
(349,193,qs),
(349,248,o),
(291,318,o),
(247,318,qs),
(207,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
61 36 2 0 9 31 1 4 0 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
61 36 2 0 7 31 1 4 0 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
12 1 9 2 0 2 9 114 0 1 7 1 2 9 1 2 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 1 7 7 2 114 0 1 12 9 2 7 0 1 7 105 11 8 3 10 4 0 0 4 95 6 5 2 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
56 55 41 41 1 0 55 67 56 67 41 54 41 53 49 46 39 37 35 32 30 28 27 26 21 20 11 7 0 40 1 40 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = uniFEEC;
unicode = 65260;
},
{
glyphname = uniFEEE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,0,l),
(388,0,l),
(381,-80,o),
(354,-132,qs),
(311,-214,o),
(206,-214,qs),
(146,-214,o),
(106,-189,qs),
(85,-176,o),
(82,-161,qs),
(82,-160,o),
(81,-159,q),
(81,-158,ls),
(81,-149,o),
(92,-149,qs),
(96,-149,o),
(102,-151,qs),
(148,-167,o),
(191,-167,qs),
(228,-167,o),
(247,-159,q),
(327,-132,o),
(336,0,q),
(223,0,ls),
(156,0,o),
(111,45,qs),
(60,97,o),
(60,178,qs),
(60,259,o),
(100,310,qs),
(145,368,o),
(221,368,qs),
(324,368,o),
(366,272,qs),
(388,220,o),
(391,119,qs),
(391,71,o),
(390,49,q),
(513,49,l)
);
},
{
closed = 1;
nodes = (
(138,93,qs),
(170,49,o),
(224,49,qs),
(338,49,l),
(344,195,o),
(316,257,qs),
(287,321,o),
(221,321,qs),
(175,321,o),
(146,287,qs),
(112,247,o),
(112,180,qs),
(112,130,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
25 1 2 3 1 76 0 3 1 2 1 3 2 128 0 0 0 7 6 0 7 105 0 2 0 4 2 4 101 8 9 2 6 6 1 95 5 1 1 1 24 1 78 0 0 49 47 44 42 0 38 0 38 19 39 34 35 38 37 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 507;
}
);
note = uniFEEE;
unicode = 65262;
},
{
glyphname = uniFEF0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,0,l),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,92,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(642,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 3 133 0 2 0 4 2 4 101 6 1 0 0 1 95 5 1 1 1 24 1 78 1 0 36 35 32 30 22 21 12 10 7 5 0 37 1 37 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uniFEF0;
unicode = 65264;
},
{
glyphname = uniFEF2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(642,0,l),
(604,0,l),
(588,-96,o),
(520,-153,qs),
(446,-214,o),
(332,-214,qs),
(220,-214,o),
(145,-151,qs),
(60,-79,o),
(60,34,qs),
(60,93,o),
(103,197,o),
(139,225,qs),
(146,231,o),
(152,231,qs),
(165,231,o),
(164,219,qs),
(164,216,o),
(161,211,qs),
(133,172,o),
(111,99,o),
(109,46,q),
(111,-45,o),
(169,-103,qs),
(233,-167,o),
(333,-167,qs),
(411,-167,o),
(468,-128,qs),
(534,-83,o),
(552,0,q),
(433,0,ls),
(425,0,o),
(425,7,qs),
(425,11,ls),
(425,28,o),
(452,49,o),
(472,49,qs),
(642,49,l)
);
},
{
closed = 1;
nodes = (
(317,-307,o),
(317,-322,qs),
(317,-337,o),
(297,-357,o),
(282,-357,qs),
(268,-357,o),
(248,-337,o),
(248,-322,qs),
(248,-307,o),
(268,-287,o),
(282,-287,qs),
(297,-287,o)
);
},
{
closed = 1;
nodes = (
(414,-307,o),
(414,-322,qs),
(414,-337,o),
(395,-357,o),
(380,-357,qs),
(366,-357,o),
(346,-337,o),
(346,-322,qs),
(346,-307,o),
(366,-287,o),
(380,-287,qs),
(395,-287,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
0 3 0 3 133 0 2 0 4 6 2 4 105 12 8 11 3 6 9 1 7 6 7 101 10 1 0 0 1 95 5 1 1 1 24 1 78 51 50 39 38 1 0 57 55 50 61 51 61 45 43 38 49 39 49 36 35 32 30 22 21 12 10 7 5 0 37 1 37 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = uniFEF2;
unicode = 65266;
},
{
glyphname = uniFEF3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,155,ls),
(163,86,o),
(129,46,qs),
(90,0,o),
(18,0,qs),
(-4,0,l)
);
},
{
closed = 1;
nodes = (
(83,-97,o),
(83,-112,qs),
(83,-127,o),
(63,-147,o),
(49,-147,qs),
(35,-147,o),
(15,-127,o),
(15,-112,qs),
(15,-97,o),
(35,-77,o),
(49,-77,qs),
(63,-77,o)
);
},
{
closed = 1;
nodes = (
(181,-97,o),
(181,-112,qs),
(181,-127,o),
(161,-147,o),
(147,-147,qs),
(132,-147,o),
(113,-127,o),
(113,-112,qs),
(113,-97,o),
(132,-77,o),
(147,-77,qs),
(161,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
5 1 2 1 1 76 0 1 2 1 133 9 5 8 3 3 6 1 4 3 4 102 0 2 2 0 97 7 1 0 0 24 0 78 30 29 18 17 1 0 36 34 29 40 30 40 24 22 17 28 18 28 15 13 9 7 0 16 1 16 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 233;
}
);
note = uniFEF3;
unicode = 65267;
},
{
glyphname = uniFEF4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,0,l),
(257,0,ls),
(176,0,o),
(138,58,q),
(99,0,o),
(18,0,qs),
(-4,0,l),
(-4,49,l),
(20,49,ls),
(63,49,o),
(112,106,o),
(112,156,qs),
(112,299,ls),
(112,349,o),
(153,349,qs),
(158,349,ls),
(163,349,o),
(163,344,qs),
(163,156,ls),
(163,106,o),
(212,49,o),
(255,49,qs),
(288,49,l)
);
},
{
closed = 1;
nodes = (
(106,-97,o),
(106,-112,qs),
(106,-127,o),
(86,-147,o),
(72,-147,qs),
(57,-147,o),
(38,-127,o),
(38,-112,qs),
(38,-97,o),
(57,-77,o),
(72,-77,qs),
(86,-77,o)
);
},
{
closed = 1;
nodes = (
(204,-97,o),
(204,-112,qs),
(204,-127,o),
(184,-147,o),
(169,-147,qs),
(155,-147,o),
(135,-127,o),
(135,-112,qs),
(135,-97,o),
(155,-77,o),
(169,-77,qs),
(184,-77,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
18 4 2 0 1 1 76 0 1 0 1 133 11 7 10 3 5 8 1 6 5 6 101 2 9 2 0 0 3 97 4 1 3 3 24 3 78 36 35 24 23 1 0 42 40 35 46 36 46 30 28 23 34 24 34 21 19 17 15 14 12 8 6 0 22 1 22 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = uniFEF4;
unicode = 65268;
},
{
glyphname = uniFEF5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,557,qs),
(193,571,o),
(187,581,qs),
(183,588,o),
(178,582,q),
(177,580,o),
(174,576,qs),
(171,571,o),
(169,568,qs),
(160,556,o),
(149,556,qs),
(141,556,o),
(115,566,qs),
(67,584,o),
(51,584,qs),
(19,584,o),
(14,549,qs),
(12,535,o),
(18,525,qs),
(22,518,o),
(27,524,q),
(28,526,o),
(31,530,qs),
(34,535,o),
(36,538,qs),
(45,551,o),
(56,551,qs),
(64,551,o),
(90,541,qs),
(138,522,o),
(154,522,qs),
(186,522,o)
);
},
{
closed = 1;
nodes = (
(56,0,o),
(56,7,qs),
(56,12,ls),
(56,28,o),
(79,49,o),
(96,49,qs),
(217,49,l),
(106,384,ls),
(93,424,o),
(115,437,qs),
(122,442,o),
(130,445,qs),
(135,447,ls),
(139,448,o),
(140,443,q),
(272,49,l),
(290,49,ls),
(332,49,o),
(380,106,o),
(380,156,qs),
(380,504,ls),
(380,528,o),
(402,556,o),
(420,556,qs),
(425,556,ls),
(431,556,o),
(431,550,qs),
(431,155,ls),
(431,86,o),
(396,46,qs),
(357,0,o),
(286,0,qs),
(64,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
37 1 0 1 51 1 6 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 2 3 2 133 0 3 1 3 133 8 1 0 1 6 1 0 6 128 5 1 1 1 23 77 7 1 6 6 4 95 9 1 4 4 24 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 2 133 0 3 5 3 133 8 1 0 1 6 1 0 6 128 0 5 5 23 77 0 1 1 23 77 7 1 6 6 4 95 9 1 4 4 24 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
33 32 1 0 59 57 48 46 41 39 32 64 33 63 21 19 17 15 5 3 0 31 1 31 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFEF5;
unicode = 65269;
},
{
glyphname = uniFEF6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,522,qs),
(138,522,o),
(97,538,qs),
(64,551,o),
(56,551,qs),
(45,551,o),
(36,538,qs),
(34,535,o),
(31,531,qs),
(28,526,o),
(27,524,q),
(22,518,o),
(18,525,qs),
(12,535,o),
(14,549,qs),
(19,584,o),
(51,584,qs),
(67,584,o),
(107,568,qs),
(141,556,o),
(149,556,qs),
(160,556,o),
(169,568,qs),
(171,571,o),
(174,575,qs),
(177,580,o),
(178,582,q),
(183,588,o),
(187,581,qs),
(193,571,o),
(191,557,qs),
(186,522,o)
);
},
{
closed = 1;
nodes = (
(555,0,l),
(525,0,ls),
(443,0,o),
(405,58,q),
(367,0,o),
(286,0,qs),
(64,0,ls),
(56,0,o),
(56,7,qs),
(56,12,ls),
(56,28,o),
(79,49,o),
(96,49,qs),
(217,49,l),
(106,384,ls),
(93,424,o),
(115,437,qs),
(122,442,o),
(130,445,qs),
(135,447,ls),
(139,448,o),
(140,443,q),
(272,49,l),
(290,49,ls),
(332,49,o),
(380,106,o),
(380,156,qs),
(380,504,ls),
(380,528,o),
(402,556,o),
(420,556,qs),
(425,556,ls),
(431,556,o),
(431,550,qs),
(431,156,ls),
(431,106,o),
(479,49,o),
(522,49,qs),
(555,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
36 1 3 2 66 50 2 4 3 2 76 0 1 0 2 3 1 2 105 0 3 3 0 97 5 1 0 0 23 77 7 6 10 3 4 4 8 97 9 1 8 8 24 8 78 33 32 69 67 65 62 58 56 47 45 40 38 32 70 33 70 34 42 34 41 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEF6;
unicode = 65270;
},
{
glyphname = uniFEF7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,527,o),
(31,519,q),
(30,519,o),
(28,518,qs),
(21,516,l),
(15,516,o),
(15,528,qs),
(15,552,o),
(44,558,qs),
(45,558,o),
(47,558,qs),
(48,558,o),
(49,558,q),
(35,579,o),
(35,603,qs),
(35,635,o),
(77,677,o),
(108,677,qs),
(131,677,o),
(166,653,o),
(168,636,qs),
(169,628,o),
(163,628,qs),
(161,628,o),
(155,631,qs),
(153,632,ls),
(131,643,o),
(116,643,qs),
(96,643,o),
(73,621,o),
(73,603,qs),
(73,584,o),
(95,561,o),
(113,561,qs),
(162,561,ls),
(189,561,o),
(189,536,qs),
(189,533,ls),
(189,527,o),
(183,527,qs),
(93,527,ls)
);
},
{
closed = 1;
nodes = (
(429,556,o),
(429,550,qs),
(429,155,ls),
(429,86,o),
(394,46,qs),
(355,0,o),
(284,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,12,ls),
(54,28,o),
(77,49,o),
(94,49,qs),
(215,49,l),
(104,384,ls),
(91,424,o),
(113,437,qs),
(120,441,o),
(128,445,qs),
(133,447,ls),
(137,448,o),
(138,443,q),
(270,49,l),
(288,49,ls),
(330,49,o),
(378,106,o),
(378,156,qs),
(378,504,ls),
(378,528,o),
(400,556,o),
(418,556,qs),
(423,556,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
71 27 2 3 4 0 52 1 6 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
27 1 5 0 71 2 2 4 5 52 1 6 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 9 1 4 4 0 97 10 5 2 0 0 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 10 1 5 5 23 77 9 1 4 4 0 97 0 0 0 23 77 7 1 6 6 8 95 0 8 8 24 8 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
42 41 0 0 67 64 60 58 49 47 41 73 42 73 0 40 0 39 35 35 36 52 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFEF7;
unicode = 65271;
},
{
glyphname = uniFEF8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,527,o),
(31,519,q),
(30,519,o),
(28,518,qs),
(21,516,l),
(15,516,o),
(15,528,qs),
(15,552,o),
(44,558,qs),
(45,558,o),
(47,558,qs),
(48,558,o),
(49,558,q),
(35,579,o),
(35,603,qs),
(35,635,o),
(77,677,o),
(108,677,qs),
(131,677,o),
(166,653,o),
(168,636,qs),
(169,628,o),
(163,628,qs),
(161,628,o),
(155,631,qs),
(153,632,ls),
(131,643,o),
(116,643,qs),
(96,643,o),
(73,621,o),
(73,603,qs),
(73,584,o),
(95,561,o),
(113,561,qs),
(162,561,ls),
(189,561,o),
(189,536,qs),
(189,533,ls),
(189,527,o),
(183,527,qs),
(93,527,ls)
);
},
{
closed = 1;
nodes = (
(537,0,l),
(506,0,ls),
(425,0,o),
(387,58,q),
(348,0,o),
(267,0,qs),
(46,0,ls),
(38,0,o),
(38,7,qs),
(38,12,ls),
(38,28,o),
(60,49,o),
(78,49,qs),
(198,49,l),
(87,384,ls),
(75,424,o),
(96,437,qs),
(103,441,o),
(112,445,qs),
(116,447,ls),
(120,448,o),
(122,443,qs),
(253,49,l),
(272,49,ls),
(313,49,o),
(361,106,o),
(361,156,qs),
(361,504,ls),
(361,528,o),
(383,556,o),
(402,556,qs),
(407,556,ls),
(412,556,o),
(412,550,qs),
(412,156,ls),
(412,106,o),
(461,49,o),
(504,49,qs),
(537,49,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
45 27 2 3 4 0 75 1 5 4 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
27 1 6 0 45 2 2 4 6 75 1 5 4 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 11 1 4 4 0 97 6 1 0 0 23 77 8 7 12 3 5 5 9 97 10 1 9 9 24 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 6 6 23 77 11 1 4 4 0 97 0 0 0 23 77 8 7 12 3 5 5 9 97 10 1 9 9 24 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
42 41 0 0 78 76 74 71 67 65 56 54 49 47 41 79 42 79 0 40 0 39 35 35 36 52 13 7 26 
CALL[ ]	/* CallFunction */";
};
width = 530;
}
);
note = uniFEF8;
unicode = 65272;
},
{
glyphname = uniFEF9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(428,556,o),
(428,550,qs),
(428,155,ls),
(428,86,o),
(394,46,qs),
(355,0,o),
(283,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,12,ls),
(54,28,o),
(76,49,o),
(94,49,qs),
(215,49,l),
(103,384,ls),
(91,424,o),
(112,437,qs),
(119,442,o),
(128,445,qs),
(132,447,ls),
(136,448,o),
(138,443,qs),
(270,49,l),
(288,49,ls),
(329,49,o),
(377,106,o),
(377,156,qs),
(377,504,ls),
(377,528,o),
(399,556,o),
(418,556,qs),
(423,556,ls)
);
},
{
closed = 1;
nodes = (
(340,-189,o),
(340,-215,qs),
(340,-218,ls),
(340,-223,o),
(333,-223,qs),
(243,-223,ls),
(204,-223,o),
(181,-231,q),
(180,-231,o),
(178,-232,qs),
(171,-234,l),
(165,-234,o),
(165,-222,qs),
(165,-198,o),
(195,-193,qs),
(197,-193,l),
(198,-192,o),
(199,-192,q),
(185,-171,o),
(185,-147,qs),
(185,-116,o),
(227,-74,o),
(258,-74,qs),
(281,-74,o),
(316,-98,o),
(318,-115,qs),
(320,-123,o),
(313,-123,qs),
(311,-123,o),
(305,-120,qs),
(303,-119,o),
(303,-118,q),
(281,-108,o),
(266,-108,qs),
(246,-108,o),
(223,-130,o),
(223,-148,qs),
(223,-167,o),
(245,-189,o),
(263,-189,qs),
(312,-189,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
30 1 1 0 55 1 8 4 2 76 0 6 5 4 5 6 4 128 0 7 0 5 6 7 5 105 10 1 4 0 8 4 8 99 9 1 0 0 23 77 2 1 1 1 3 95 0 3 3 24 3 78 34 33 1 0 69 66 51 49 46 44 40 38 33 73 34 72 26 23 19 17 8 6 0 32 1 32 11 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFEF9;
unicode = 65273;
},
{
glyphname = uniFEFA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,0,l),
(522,0,ls),
(441,0,o),
(403,58,q),
(365,0,o),
(283,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,12,ls),
(54,28,o),
(76,49,o),
(94,49,qs),
(215,49,l),
(103,384,ls),
(91,424,o),
(112,437,qs),
(119,442,o),
(128,445,qs),
(132,447,ls),
(136,448,o),
(138,443,qs),
(270,49,l),
(288,49,ls),
(329,49,o),
(377,106,o),
(377,156,qs),
(377,504,ls),
(377,528,o),
(399,556,o),
(418,556,qs),
(423,556,ls),
(428,556,o),
(428,550,qs),
(428,156,ls),
(428,105,o),
(477,49,o),
(520,49,qs),
(553,49,l)
);
},
{
closed = 1;
nodes = (
(340,-189,o),
(340,-215,qs),
(340,-218,ls),
(340,-223,o),
(333,-223,qs),
(243,-223,ls),
(204,-223,o),
(181,-231,q),
(180,-231,o),
(178,-232,qs),
(171,-234,l),
(165,-234,o),
(165,-222,qs),
(165,-198,o),
(195,-193,qs),
(197,-193,l),
(198,-192,o),
(199,-192,q),
(185,-171,o),
(185,-147,qs),
(185,-116,o),
(227,-74,o),
(258,-74,qs),
(281,-74,o),
(316,-98,o),
(318,-115,qs),
(320,-123,o),
(313,-123,qs),
(311,-123,o),
(305,-120,qs),
(303,-119,o),
(303,-118,q),
(281,-108,o),
(266,-108,qs),
(246,-108,o),
(223,-130,o),
(223,-148,qs),
(223,-167,o),
(245,-189,o),
(263,-189,qs),
(312,-189,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 88 values pushed */
34 4 2 0 1 61 1 10 6 2 76 0 8 7 6 7 8 6 128 0 9 0 7 8 9 7 105 12 1 6 0 10 6 10 99 0 1 1 23 77 3 2 11 3 0 0 4 97 5 1 4 4 24 4 78 40 39 1 0 75 72 57 55 52 50 46 44 39 79 40 78 37 35 33 30 26 24 15 13 8 6 0 38 1 38 13 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEFA;
unicode = 65274;
},
{
glyphname = uniFEFB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(54,0,o),
(54,7,qs),
(54,12,ls),
(54,28,o),
(76,49,o),
(94,49,qs),
(215,49,l),
(103,384,ls),
(91,424,o),
(112,437,qs),
(119,442,o),
(128,445,qs),
(132,447,ls),
(136,448,o),
(138,443,qs),
(270,49,l),
(288,49,ls),
(329,49,o),
(377,106,o),
(377,156,qs),
(377,504,ls),
(377,528,o),
(399,556,o),
(418,556,qs),
(423,556,ls),
(428,556,o),
(428,550,qs),
(428,155,ls),
(428,86,o),
(394,46,qs),
(355,0,o),
(283,0,qs),
(62,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
5 1 2 1 1 76 0 1 1 23 77 3 1 2 2 0 95 4 1 0 0 24 0 78 1 0 27 25 16 14 9 7 0 32 1 31 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 499;
}
);
note = uniFEFB;
unicode = 65275;
},
{
glyphname = uniFEFC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(553,0,l),
(522,0,ls),
(441,0,o),
(403,58,q),
(365,0,o),
(283,0,qs),
(62,0,ls),
(54,0,o),
(54,7,qs),
(54,12,ls),
(54,28,o),
(76,49,o),
(94,49,qs),
(215,49,l),
(103,384,ls),
(91,424,o),
(112,437,qs),
(119,442,o),
(128,445,qs),
(132,447,ls),
(136,448,o),
(138,443,qs),
(270,49,l),
(288,49,ls),
(329,49,o),
(377,106,o),
(377,156,qs),
(377,504,ls),
(377,528,o),
(399,556,o),
(418,556,qs),
(423,556,ls),
(428,556,o),
(428,550,qs),
(428,156,ls),
(428,106,o),
(477,49,o),
(520,49,qs),
(553,49,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
34 4 2 0 1 1 76 0 1 1 23 77 3 2 6 3 0 0 4 97 5 1 4 4 24 4 78 1 0 37 35 33 30 26 24 15 13 8 6 0 38 1 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = uniFEFC;
unicode = 65276;
},
{
glyphname = uni0662;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,8,qs),
(70,377,ls),
(70,556,o),
(226,556,qs),
(316,556,ls),
(320,556,o),
(320,551,qs),
(320,547,ls),
(320,530,o),
(296,509,o),
(276,509,qs),
(227,509,ls),
(121,509,o),
(121,378,qs),
(121,8,ls),
(121,0,o),
(113,0,qs),
(78,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 7 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni0662;
},
{
glyphname = uni0661;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,8,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,8,ls),
(121,0,o),
(113,0,qs),
(78,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 0 1 1 76 0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 5 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni0661;
},
{
glyphname = uni0660;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,243,o),
(182,238,qs),
(182,233,o),
(179,230,qs),
(124,175,l),
(122,172,o),
(117,172,qs),
(114,172,o),
(109,175,q),
(54,230,ls),
(51,233,o),
(51,238,qs),
(51,242,o),
(54,246,q),
(109,299,ls),
(113,303,o),
(117,303,qs),
(122,303,o),
(124,299,q),
(179,246,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
17 2 2 0 74 0 0 0 118 43 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uni0660;
},
{
glyphname = uni06F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,244,o),
(182,239,qs),
(182,234,o),
(179,231,qs),
(124,176,l),
(122,173,o),
(117,173,qs),
(113,173,o),
(109,176,q),
(54,231,ls),
(51,234,o),
(51,239,qs),
(51,244,o),
(54,246,q),
(109,301,ls),
(112,304,o),
(117,304,qs),
(121,304,o),
(124,301,qs),
(179,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
17 7 2 0 74 0 0 0 118 43 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 232;
}
);
note = uni06F0;
},
{
glyphname = uni06F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,8,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,8,ls),
(121,0,o),
(113,0,qs),
(78,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 0 1 1 76 0 1 1 23 77 2 1 0 0 24 0 78 1 0 7 5 0 12 1 11 3 7 22 
CALL[ ]	/* CallFunction */";
};
width = 191;
}
);
note = uni06F1;
},
{
glyphname = uni06F2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,0,o),
(70,8,qs),
(70,377,ls),
(70,556,o),
(226,556,qs),
(316,556,ls),
(320,556,o),
(320,551,qs),
(320,547,ls),
(320,530,o),
(296,509,o),
(276,509,qs),
(227,509,ls),
(121,509,o),
(121,378,qs),
(121,8,ls),
(121,0,o),
(113,0,qs),
(78,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 2 95 0 2 2 23 77 3 1 0 0 24 0 78 1 0 14 11 7 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 374;
}
);
note = uni06F2;
},
{
glyphname = uni0668;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,0,o),
(33,12,q),
(103,442,ls),
(122,564,o),
(217,564,qs),
(312,564,o),
(331,442,qs),
(401,12,l),
(402,0,o),
(392,0,qs),
(361,0,ls),
(351,0,o),
(350,11,qs),
(279,456,l),
(264,516,o),
(217,516,qs),
(192,516,o),
(163,488,o),
(155,456,q),
(84,11,ls),
(83,0,o),
(73,0,qs),
(42,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 13 10 7 5 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = uni0668;
},
{
glyphname = uni06F4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(364,306,qs),
(358,280,o),
(293,246,o),
(249,246,qs),
(169,247,o),
(122,291,q),
(121,10,ls),
(121,0,o),
(111,0,qs),
(81,0,ls),
(70,0,o),
(70,10,qs),
(70,504,ls),
(70,527,o),
(93,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,550,qs),
(121,511,l),
(163,565,o),
(239,564,qs),
(279,564,o),
(334,533,o),
(337,509,qs),
(340,496,o),
(328,496,qs),
(326,496,o),
(321,498,qs),
(318,499,o),
(317,499,q),
(276,517,o),
(241,516,qs),
(193,516,o),
(159,482,qs),
(123,446,o),
(122,398,qs),
(122,396,o),
(122,388,qs),
(122,355,o),
(152,328,qs),
(190,293,o),
(252,292,qs),
(293,290,o),
(341,313,q),
(352,317,o),
(356,317,qs),
(368,318,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 3 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 4 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 3 27 1 2 1 2 76 41 1 0 1 75 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
28 1 1 4 27 1 2 1 2 76 41 1 0 1 75 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 1 1 3 97 4 1 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 0 1 2 0 128 0 0 0 6 5 0 6 105 0 4 4 23 77 0 1 1 3 97 0 3 3 23 77 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 2 1 0 1 2 0 128 0 3 0 1 2 3 1 105 0 0 0 6 5 0 6 105 0 4 4 23 77 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 52 36 35 36 40 35 7 7 29 
CALL[ ]	/* CallFunction */";
};
width = 416;
}
);
note = uni06F4;
},
{
glyphname = uni06F5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,22,qs),
(60,58,o),
(62,139,qs),
(62,144,o),
(74,386,qs),
(79,463,o),
(115,510,qs),
(157,564,o),
(229,564,qs),
(292,564,o),
(333,522,qs),
(378,474,o),
(384,386,qs),
(397,145,o),
(397,139,qs),
(398,60,o),
(351,-10,o),
(296,-10,qs),
(254,-10,o),
(231,19,q),
(230,21,o),
(227,19,q),
(204,-10,o),
(162,-10,qs),
(112,-10,o)
);
},
{
closed = 1;
nodes = (
(220,85,qs),
(222,97,o),
(229,97,qs),
(237,97,o),
(238,85,q),
(247,38,o),
(287,38,qs),
(346,38,o),
(345,142,qs),
(345,165,o),
(333,383,qs),
(329,446,o),
(274,517,o),
(229,518,qs),
(187,517,o),
(161,486,qs),
(130,451,o),
(126,383,qs),
(114,174,o),
(114,142,qs),
(113,87,o),
(140,38,o),
(171,38,qs),
(211,38,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 0 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 6 4 3 4 6 3 128 0 4 4 2 97 0 2 2 23 77 5 8 2 3 3 0 97 1 7 2 0 0 24 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 4 3 4 6 3 128 5 8 2 3 1 7 2 0 3 0 101 0 4 4 2 97 0 2 2 23 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
0 6 4 3 4 6 3 128 0 2 0 4 6 2 4 105 5 8 2 3 0 0 3 89 5 8 2 3 3 0 97 1 7 2 0 3 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
26 25 1 0 46 44 42 40 35 33 25 48 26 48 16 14 7 5 0 24 1 24 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 455;
}
);
note = uni06F5;
},
{
glyphname = uni06F6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(385,292,o),
(365,284,q),
(268,253,o),
(202,181,qs),
(145,119,o),
(99,8,qs),
(96,0,o),
(88,0,qs),
(53,0,ls),
(44,0,o),
(46,9,qs),
(61,70,o),
(142,200,o),
(190,243,q),
(134,257,o),
(101,300,qs),
(67,345,o),
(67,407,qs),
(67,474,o),
(106,517,qs),
(150,564,o),
(224,564,qs),
(263,564,o),
(320,534,o),
(324,511,qs),
(327,497,o),
(315,497,qs),
(312,497,o),
(307,499,qs),
(305,500,o),
(304,500,q),
(265,517,o),
(229,517,qs),
(185,517,o),
(154,490,qs),
(118,458,o),
(118,405,qs),
(118,362,o),
(145,327,qs),
(178,284,o),
(234,278,q),
(310,326,o),
(388,342,q),
(396,345,o),
(399,336,qs),
(405,322,o)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
31 4 2 3 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 1 0 3 0 1 3 128 0 0 0 2 97 0 2 2 23 77 0 3 3 24 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 3 0 1 3 128 0 2 0 0 1 2 0 105 0 3 3 24 3 78 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
59 35 36 43 4 7 26 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni06F6;
},
{
glyphname = uni06F7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,102,q),
(348,547,ls),
(349,556,o),
(355,556,qs),
(358,556,ls),
(376,556,o),
(396,528,o),
(392,508,qs),
(328,116,ls),
(308,-7,o),
(214,-7,qs),
(121,-7,o),
(99,116,qs),
(35,508,ls),
(32,528,o),
(52,556,o),
(70,556,qs),
(73,556,ls),
(79,556,o),
(80,547,qs),
(152,102,l),
(167,41,o),
(214,41,qs),
(261,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni06F7;
},
{
glyphname = uni06F8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,0,o),
(33,12,q),
(103,442,ls),
(122,564,o),
(217,564,qs),
(312,564,o),
(331,442,qs),
(401,12,l),
(402,0,o),
(392,0,qs),
(361,0,ls),
(351,0,o),
(350,11,qs),
(279,456,l),
(264,516,o),
(217,516,qs),
(192,516,o),
(163,488,o),
(155,456,q),
(84,11,ls),
(83,0,o),
(73,0,qs),
(42,0,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 1 1 3 97 0 3 3 23 77 2 4 2 0 0 24 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 3 0 1 0 3 1 105 2 4 2 0 0 24 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
1 0 18 16 13 10 7 5 0 22 1 21 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 433;
}
);
note = uni06F8;
},
{
glyphname = uni06F9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,522,qs),
(386,470,o),
(386,382,qs),
(386,8,ls),
(386,0,o),
(378,0,qs),
(343,0,ls),
(334,0,o),
(334,8,qs),
(334,201,l),
(223,201,ls),
(158,201,o),
(113,243,qs),
(60,294,o),
(60,382,qs),
(60,459,o),
(102,509,qs),
(148,564,o),
(223,564,qs),
(289,564,o)
);
},
{
closed = 1;
nodes = (
(147,485,qs),
(112,447,o),
(112,382,qs),
(112,327,o),
(139,290,qs),
(171,248,o),
(223,248,qs),
(334,248,l),
(334,383,ls),
(334,439,o),
(307,476,qs),
(275,517,o),
(223,517,qs),
(178,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni06F9;
},
{
glyphname = uni06F3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,558,o),
(598,552,qs),
(598,441,ls),
(598,363,o),
(564,316,qs),
(526,264,o),
(453,264,qs),
(370,264,o),
(335,334,q),
(299,264,o),
(216,264,qs),
(159,264,o),
(122,298,q),
(122,8,ls),
(122,0,o),
(113,0,qs),
(79,0,ls),
(71,0,o),
(71,8,qs),
(70,504,l),
(72,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,551,qs),
(121,442,ls),
(121,313,o),
(216,313,qs),
(259,313,o),
(284,344,qs),
(311,378,o),
(311,442,qs),
(311,507,ls),
(311,528,o),
(332,557,o),
(348,557,qs),
(353,557,ls),
(358,557,o),
(358,551,qs),
(358,442,ls),
(358,380,o),
(408,313,o),
(453,313,qs),
(496,313,o),
(520,343,qs),
(548,377,o),
(548,441,qs),
(548,507,ls),
(548,530,o),
(570,558,o),
(588,558,qs),
(593,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
49 42 26 12 4 1 0 38 1 6 1 2 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 45 43 41 39 36 33 30 28 24 22 16 14 9 7 0 51 1 51 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni06F3;
},
{
glyphname = uni0669;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(333,522,qs),
(386,470,o),
(386,382,qs),
(386,8,ls),
(386,0,o),
(378,0,qs),
(343,0,ls),
(334,0,o),
(334,8,qs),
(334,201,l),
(223,201,ls),
(158,201,o),
(113,243,qs),
(60,294,o),
(60,382,qs),
(60,459,o),
(102,509,qs),
(148,564,o),
(223,564,qs),
(289,564,o)
);
},
{
closed = 1;
nodes = (
(147,485,qs),
(112,447,o),
(112,382,qs),
(112,327,o),
(139,290,qs),
(171,248,o),
(223,248,qs),
(334,248,l),
(334,383,ls),
(334,439,o),
(307,476,qs),
(275,517,o),
(223,517,qs),
(178,517,o)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 1 2 4 1 103 6 1 3 3 0 97 5 1 0 0 23 77 0 2 2 24 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
5 1 0 6 1 3 4 0 3 105 0 4 0 1 2 4 1 103 0 2 2 24 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
21 20 1 0 27 25 20 33 21 33 14 11 9 7 0 19 1 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 456;
}
);
note = uni0669;
},
{
glyphname = uni0667;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,102,q),
(348,547,ls),
(349,556,o),
(355,556,qs),
(358,556,ls),
(376,556,o),
(396,528,o),
(392,508,qs),
(328,116,ls),
(308,-7,o),
(214,-7,qs),
(121,-7,o),
(99,116,qs),
(35,508,ls),
(32,528,o),
(52,556,o),
(70,556,qs),
(73,556,ls),
(79,556,o),
(80,547,qs),
(152,102,l),
(167,41,o),
(214,41,qs),
(261,41,o)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 1 1 23 77 4 1 0 0 2 97 0 2 2 24 2 78 1 0 20 17 13 11 7 4 0 23 1 23 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 423;
}
);
note = uni0667;
},
{
glyphname = uni0666;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(259,0,o),
(259,8,qs),
(259,378,ls),
(259,509,o),
(153,509,qs),
(104,509,ls),
(84,509,o),
(60,530,o),
(60,547,qs),
(60,551,ls),
(60,556,o),
(64,556,qs),
(154,556,ls),
(310,556,o),
(310,377,qs),
(310,8,ls),
(310,0,o),
(302,0,qs),
(267,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
8 1 2 1 1 76 0 2 2 1 95 0 1 1 23 77 3 1 0 0 24 0 78 1 0 14 11 6 4 0 18 1 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 380;
}
);
note = uni0666;
},
{
glyphname = uni0665;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,179,qs),
(389,176,ls),
(389,95,o),
(351,46,qs),
(307,-10,o),
(224,-10,qs),
(153,-10,o),
(110,33,qs),
(60,83,o),
(60,176,qs),
(60,192,o),
(70,387,qs),
(74,463,o),
(110,510,qs),
(152,564,o),
(224,564,qs),
(288,564,o),
(328,523,qs),
(374,476,o),
(378,388,qs),
(387,231,o)
);
},
{
closed = 1;
nodes = (
(303,68,qs),
(337,104,o),
(337,177,q),
(327,384,ls),
(324,446,o),
(269,517,o),
(224,517,qs),
(182,517,o),
(155,485,qs),
(125,449,o),
(122,383,qs),
(112,177,l),
(112,110,o),
(170,37,o),
(224,37,qs),
(274,37,o)
);
},
{
closed = 1;
nodes = (
(389,176,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
40 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 3 3 0 97 0 0 0 23 77 4 1 2 2 1 97 0 1 1 24 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
4 1 2 0 1 2 1 101 0 3 3 0 97 0 0 0 23 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 0 0 3 2 0 3 105 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
22 21 30 28 21 36 22 36 40 35 5 7 24 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0665;
},
{
glyphname = uni0664;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,256,o),
(112,198,o),
(112,154,qs),
(112,105,o),
(141,77,qs),
(173,47,o),
(229,47,qs),
(306,47,ls),
(326,47,o),
(352,27,o),
(352,11,qs),
(352,7,ls),
(352,0,o),
(344,0,qs),
(229,0,ls),
(162,0,o),
(118,30,qs),
(60,70,o),
(60,156,qs),
(60,196,o),
(104,264,o),
(142,282,q),
(67,318,o),
(67,412,qs),
(67,476,o),
(106,517,qs),
(150,564,o),
(225,564,qs),
(267,564,o),
(327,534,o),
(332,512,qs),
(334,497,o),
(323,497,qs),
(319,497,o),
(312,500,qs),
(270,518,o),
(232,518,qs),
(186,518,o),
(154,492,qs),
(119,462,o),
(119,414,qs),
(119,365,o),
(147,336,qs),
(178,303,o),
(238,303,qs),
(306,303,ls),
(326,303,o),
(352,283,o),
(352,267,qs),
(352,263,ls),
(352,256,o),
(344,256,qs),
(228,256,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 0 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
50 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 1 2 3 1 128 0 1 7 1 0 6 1 0 103 0 2 2 4 97 0 4 4 23 77 0 6 6 5 95 0 5 5 24 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 1 2 3 1 128 0 4 0 2 3 4 2 105 0 1 7 1 0 6 1 0 103 0 6 6 5 95 0 5 5 24 5 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
1 0 46 43 39 36 25 23 20 18 16 14 8 5 0 52 1 51 8 7 22 
CALL[ ]	/* CallFunction */";
};
width = 412;
}
);
note = uni0664;
},
{
glyphname = uni0663;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(598,558,o),
(598,552,qs),
(598,441,ls),
(598,363,o),
(564,316,qs),
(526,264,o),
(453,264,qs),
(370,264,o),
(335,334,q),
(299,264,o),
(216,264,qs),
(159,264,o),
(122,298,q),
(122,8,ls),
(122,0,o),
(113,0,qs),
(79,0,ls),
(71,0,o),
(71,8,qs),
(70,504,l),
(72,556,o),
(111,556,qs),
(116,556,ls),
(121,556,o),
(121,551,qs),
(121,442,ls),
(121,313,o),
(216,313,qs),
(259,313,o),
(284,344,qs),
(311,378,o),
(311,442,qs),
(311,507,ls),
(311,528,o),
(332,557,o),
(348,557,qs),
(353,557,ls),
(358,557,o),
(358,551,qs),
(358,442,ls),
(358,380,o),
(408,313,o),
(453,313,qs),
(496,313,o),
(520,343,qs),
(548,377,o),
(548,441,qs),
(548,507,ls),
(548,530,o),
(570,558,o),
(588,558,qs),
(593,558,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
49 42 26 12 4 1 0 38 1 6 1 2 76 3 1 1 7 1 6 5 1 6 105 4 2 8 3 0 0 23 77 0 5 5 24 5 78 1 0 45 43 41 39 36 33 30 28 24 22 16 14 9 7 0 51 1 51 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni0663;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Light;
properties = (
{
key = postscriptFullName;
value = "Zain Light";
},
{
key = postscriptFontName;
value = "Zain-Light";
}
);
weightClass = 300;
}
);
kerningLTR = {
m01 = {
"@MMK_L_A" = {
"@MMK_R_A" = 14;
"@MMK_R_C" = -19;
"@MMK_R_O" = -19;
"@MMK_R_U" = -11;
"@MMK_R_Y" = -26;
"@MMK_R_a" = -11;
"@MMK_R_c" = -7;
"@MMK_R_e" = -7;
"@MMK_R_f" = -13;
"@MMK_R_o" = -7;
"@MMK_R_quoteright" = -23;
"@MMK_R_u" = -9;
"@MMK_R_y" = -16;
};
"@MMK_L_C" = {
"@MMK_R_C" = -8;
"@MMK_R_O" = -8;
"@MMK_R_S" = 6;
"@MMK_R_Z" = 4;
"@MMK_R_quoteright" = 8;
};
"@MMK_L_E" = {
"@MMK_R_A" = 4;
"@MMK_R_C" = -9;
"@MMK_R_O" = -9;
"@MMK_R_Y" = -4;
"@MMK_R_a" = -9;
"@MMK_R_c" = -11;
"@MMK_R_e" = -11;
"@MMK_R_o" = -11;
"@MMK_R_quoteright" = 6;
"@MMK_R_u" = -8;
"@MMK_R_y" = -11;
};
"@MMK_L_I" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_N" = {
"@MMK_R_Y" = -4;
};
"@MMK_L_O" = {
"@MMK_R_A" = -19;
"@MMK_R_S" = -5;
"@MMK_R_Y" = -17;
"@MMK_R_Z" = -16;
"@MMK_R_a" = -3;
"@MMK_R_c" = -3;
"@MMK_R_e" = -3;
"@MMK_R_quoteright" = -7;
"@MMK_R_s" = -4;
"@MMK_R_u" = -3;
"@MMK_R_z" = -6;
};
"@MMK_L_S" = {
"@MMK_R_Y" = -4;
"@MMK_R_a" = 4;
"@MMK_R_c" = 5;
"@MMK_R_e" = 5;
"@MMK_R_o" = 5;
"@MMK_R_y" = -7;
};
"@MMK_L_U" = {
"@MMK_R_A" = -11;
"@MMK_R_Y" = -5;
"@MMK_R_s" = -5;
"@MMK_R_z" = -7;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -19;
"@MMK_R_C" = -18;
"@MMK_R_O" = -15;
"@MMK_R_S" = -3;
"@MMK_R_Y" = 12;
"@MMK_R_a" = -42;
"@MMK_R_c" = -41;
"@MMK_R_e" = -41;
"@MMK_R_f" = -12;
"@MMK_R_n" = -26;
"@MMK_R_o" = -42;
"@MMK_R_quoteright" = 13;
"@MMK_R_r" = -26;
"@MMK_R_s" = -32;
"@MMK_R_u" = -28;
"@MMK_R_y" = -24;
"@MMK_R_z" = -29;
};
"@MMK_L_Z" = {
"@MMK_R_C" = -13;
"@MMK_R_O" = -13;
"@MMK_R_a" = -12;
"@MMK_R_c" = -16;
"@MMK_R_e" = -16;
"@MMK_R_o" = -16;
"@MMK_R_quoteright" = 7;
"@MMK_R_u" = -16;
"@MMK_R_y" = -12;
};
"@MMK_L_a" = {
"@MMK_R_y" = -5;
};
"@MMK_L_c" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = 4;
};
"@MMK_L_e" = {
"@MMK_R_quoteright" = -13;
"@MMK_R_y" = -4;
"@MMK_R_z" = -5;
};
"@MMK_L_i" = {
"@MMK_R_y" = -5;
};
"@MMK_L_l" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -4;
"@MMK_R_e" = -4;
"@MMK_R_f" = -9;
"@MMK_R_i" = -3;
"@MMK_R_o" = -4;
"@MMK_R_quoteright" = -14;
"@MMK_R_u" = -6;
"@MMK_R_y" = -13;
};
"@MMK_L_n" = {
"@MMK_R_f" = -4;
"@MMK_R_quoteright" = -22;
"@MMK_R_y" = -5;
};
"@MMK_L_o" = {
"@MMK_R_f" = -7;
"@MMK_R_quoteright" = -18;
"@MMK_R_s" = -4;
"@MMK_R_y" = -6;
"@MMK_R_z" = -11;
};
"@MMK_L_quoteleft" = {
"@MMK_R_A" = -17;
"@MMK_R_Y" = 9;
"@MMK_R_a" = -12;
"@MMK_R_c" = -13;
"@MMK_R_e" = -12;
"@MMK_R_f" = 12;
"@MMK_R_o" = -13;
"@MMK_R_s" = -5;
"@MMK_R_y" = 17;
"@MMK_R_z" = 4;
};
"@MMK_L_quotesinglbase" = {
"@MMK_R_A" = 11;
"@MMK_R_Y" = -27;
"@MMK_R_Z" = 8;
"@MMK_R_f" = -17;
};
"@MMK_L_u" = {
"@MMK_R_quoteright" = -7;
"@MMK_R_y" = -5;
};
"@MMK_L_y" = {
"@MMK_R_a" = -3;
"@MMK_R_c" = -8;
"@MMK_R_e" = -4;
"@MMK_R_f" = 7;
"@MMK_R_o" = -5;
"@MMK_R_quoteright" = 11;
"@MMK_R_y" = 5;
};
"@MMK_L_z" = {
"@MMK_R_a" = -4;
"@MMK_R_c" = -11;
"@MMK_R_e" = -5;
"@MMK_R_o" = -5;
};
A = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
AE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Aacute = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Acircumflex = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Adieresis = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Agrave = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Aring = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
Atilde = {
G = -19;
J = 11;
Q = -19;
T = -35;
V = -22;
W = -14;
comma = 8;
d = -7;
g = -6;
l = -6;
period = 8;
q = -7;
question = -25;
t = -17;
v = -16;
w = -12;
};
B = {
AE = -11;
T = -8;
V = -8;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
y = -6;
yacute = -6;
ydieresis = -6;
};
C = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
Ccedilla = {
G = -8;
Q = -8;
T = 4;
comma = 4;
period = 4;
question = 7;
};
D = {
A = -18;
AE = -27;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
J = -18;
M = -4;
T = -23;
V = -16;
W = -9;
X = -19;
Y = -22;
Yacute = -22;
Ydieresis = -22;
Z = -16;
Zcaron = -16;
comma = -18;
period = -18;
question = -12;
quotedblright = -9;
quoteright = -9;
z = -6;
zcaron = -6;
};
Decoratedbracketright = {
rehvabovear = -3;
uni0622 = 43;
uni0623 = 43;
uni0625 = 21;
uni0631 = -3;
uni0632 = -3;
uni0671 = 43;
uni0691 = -3;
uni0694 = -3;
uni0695 = -3;
uni0698 = -3;
};
E = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Eacute = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Ecircumflex = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Edieresis = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Egrave = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
F = {
A = -23;
AE = -36;
Aacute = -23;
Acircumflex = -23;
Adieresis = -23;
Agrave = -23;
Aring = -23;
Atilde = -23;
C = -6;
Ccedilla = -6;
G = -6;
J = -28;
O = -6;
OE = -6;
Oacute = -6;
Ocircumflex = -6;
Odieresis = -6;
Ograve = -6;
Oslash = -6;
Otilde = -6;
Q = -6;
T = 6;
V = 4;
W = 4;
X = -6;
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -29;
d = -9;
dotlessi = -6;
e = -9;
eacute = -9;
ecircumflex = -9;
edieresis = -9;
egrave = -9;
g = -9;
m = -6;
n = -6;
ntilde = -6;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
p = -6;
period = -29;
q = -9;
question = 6;
quotedblright = 12;
quoteright = 12;
r = -6;
s = -7;
scaron = -7;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -12;
w = -7;
x = -23;
y = -12;
yacute = -12;
ydieresis = -12;
z = -12;
zcaron = -12;
};
G = {
T = -9;
V = -11;
W = -7;
X = -4;
Y = -12;
Yacute = -12;
Ydieresis = -12;
question = -5;
y = -4;
yacute = -4;
ydieresis = -4;
};
H = {
V = -4;
Y = -4;
Yacute = -4;
Ydieresis = -4;
};
I = {
V = -4;
};
Iacute = {
V = -4;
};
Icircumflex = {
V = -4;
};
Idieresis = {
V = -4;
};
Igrave = {
V = -4;
};
J = {
A = -6;
AE = -9;
Aacute = -6;
Acircumflex = -6;
Adieresis = -6;
Agrave = -6;
Aring = -6;
Atilde = -6;
J = -6;
V = -4;
X = -10;
Y = -4;
Yacute = -4;
Ydieresis = -4;
a = -4;
aacute = -4;
acircumflex = -4;
adieresis = -4;
ae = -4;
agrave = -4;
aring = -4;
atilde = -4;
comma = -5;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -5;
};
K = {
A = 5;
Aacute = 5;
Acircumflex = 5;
Adieresis = 5;
Agrave = 5;
Aring = 5;
Atilde = 5;
C = -24;
Ccedilla = -24;
G = -24;
O = -24;
OE = -24;
Oacute = -24;
Ocircumflex = -24;
Odieresis = -24;
Ograve = -24;
Oslash = -24;
Otilde = -24;
Q = -24;
S = -13;
Scaron = -13;
T = -5;
U = -10;
Uacute = -10;
Ucircumflex = -10;
Udieresis = -10;
Ugrave = -10;
V = -5;
a = -16;
aacute = -16;
acircumflex = -16;
adieresis = -16;
ae = -16;
agrave = -16;
aring = -16;
atilde = -16;
c = -16;
ccedilla = -16;
comma = 6;
d = -16;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -16;
hyphen = -16;
l = -6;
o = -16;
oacute = -16;
ocircumflex = -16;
odieresis = -16;
oe = -16;
ograve = -16;
oslash = -16;
otilde = -16;
period = 6;
q = -16;
quotedblright = -7;
quoteright = -7;
s = -7;
scaron = -7;
t = -16;
u = -15;
uacute = -15;
ucircumflex = -15;
udieresis = -15;
ugrave = -15;
v = -19;
w = -16;
y = -19;
yacute = -19;
ydieresis = -19;
};
L = {
A = 6;
Aacute = 6;
Acircumflex = 6;
Adieresis = 6;
Agrave = 6;
Aring = 6;
Atilde = 6;
C = -29;
Ccedilla = -29;
G = -29;
J = 5;
O = -29;
OE = -29;
Oacute = -29;
Ocircumflex = -29;
Odieresis = -29;
Ograve = -29;
Oslash = -29;
Otilde = -29;
Q = -29;
S = -5;
Scaron = -5;
T = -42;
U = -19;
Uacute = -19;
Ucircumflex = -19;
Udieresis = -19;
Ugrave = -19;
V = -29;
W = -27;
Y = -38;
Yacute = -38;
Ydieresis = -38;
a = -11;
aacute = -11;
acircumflex = -11;
adieresis = -11;
ae = -11;
agrave = -11;
aring = -11;
atilde = -11;
c = -12;
ccedilla = -12;
colon = 4;
comma = 9;
d = -11;
e = -12;
eacute = -12;
ecircumflex = -12;
edieresis = -12;
egrave = -12;
g = -11;
hyphen = -19;
l = -8;
o = -12;
oacute = -12;
ocircumflex = -12;
odieresis = -12;
oe = -12;
ograve = -12;
oslash = -12;
otilde = -12;
period = 9;
q = -11;
question = -27;
quotedblright = -18;
quoteright = -18;
semicolon = 4;
t = -19;
u = -12;
uacute = -12;
ucircumflex = -12;
udieresis = -12;
ugrave = -12;
v = -23;
w = -19;
y = -22;
yacute = -22;
ydieresis = -22;
};
M = {
C = -4;
Ccedilla = -4;
G = -4;
O = -4;
OE = -4;
Oacute = -4;
Ocircumflex = -4;
Odieresis = -4;
Ograve = -4;
Oslash = -4;
Otilde = -4;
Q = -4;
S = -4;
Scaron = -4;
T = -5;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
o = -3;
oacute = -3;
ocircumflex = -3;
odieresis = -3;
oe = -3;
ograve = -3;
oslash = -3;
otilde = -3;
s = -3;
scaron = -3;
y = -3;
yacute = -3;
ydieresis = -3;
};
N = {
V = -4;
};
Ntilde = {
V = -4;
};
O = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
OE = {
G = -9;
Q = -9;
comma = 7;
d = -9;
g = -9;
period = 7;
q = -9;
v = -11;
w = -7;
};
Oacute = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ocircumflex = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Odieresis = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Ograve = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Oslash = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
Otilde = {
AE = -27;
J = -19;
M = -4;
T = -17;
V = -11;
W = -8;
X = -17;
comma = -18;
d = -3;
g = -3;
period = -18;
q = -3;
question = -12;
x = -11;
};
P = {
A = -28;
AE = -49;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
J = -32;
M = -3;
T = -8;
X = -18;
Y = -4;
Yacute = -4;
Ydieresis = -4;
Z = -9;
Zcaron = -9;
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -13;
ccedilla = -13;
comma = -29;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
g = -14;
hyphen = -6;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -29;
q = -13;
quotedblright = 3;
quoteright = 3;
s = -4;
scaron = -4;
z = -8;
zcaron = -8;
};
Q = {
A = -17;
AE = -12;
Aacute = -17;
Acircumflex = -17;
Adieresis = -17;
Agrave = -17;
Aring = -17;
Atilde = -17;
J = -15;
T = -17;
V = -11;
W = -8;
X = -15;
Y = -17;
Yacute = -17;
Ydieresis = -17;
Z = -16;
Zcaron = -16;
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -3;
ccedilla = -3;
d = -3;
e = -3;
eacute = -3;
ecircumflex = -3;
edieresis = -3;
egrave = -3;
g = -3;
s = -4;
scaron = -4;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
x = -9;
z = -6;
zcaron = -6;
};
R = {
J = -7;
T = -6;
V = -4;
Y = -7;
Yacute = -7;
Ydieresis = -7;
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
hyphen = -9;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
q = -12;
s = -7;
scaron = -7;
u = -3;
uacute = -3;
ucircumflex = -3;
udieresis = -3;
ugrave = -3;
};
S = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
Scaron = {
T = -4;
d = 5;
g = 5;
q = 5;
t = -6;
v = -7;
w = -5;
x = -9;
};
T = {
A = -28;
AE = -48;
Aacute = -28;
Acircumflex = -28;
Adieresis = -28;
Agrave = -28;
Aring = -28;
Atilde = -28;
C = -16;
Ccedilla = -16;
G = -16;
J = -34;
M = -5;
O = -15;
OE = -15;
Oacute = -15;
Ocircumflex = -15;
Odieresis = -15;
Ograve = -15;
Oslash = -15;
Otilde = -15;
Q = -15;
T = 6;
X = -5;
Y = 6;
Yacute = 6;
Ydieresis = 6;
a = -44;
aacute = -44;
acircumflex = -44;
adieresis = -44;
ae = -44;
agrave = -44;
aring = -44;
atilde = -44;
c = -43;
ccedilla = -43;
colon = -13;
comma = -24;
d = -44;
dotlessi = -29;
e = -43;
eacute = -43;
ecircumflex = -43;
edieresis = -43;
egrave = -43;
f = -18;
fi = -18;
fl = -18;
g = -44;
hyphen = -23;
m = -29;
n = -29;
ntilde = -29;
o = -43;
oacute = -43;
ocircumflex = -43;
odieresis = -43;
oe = -43;
ograve = -43;
oslash = -43;
otilde = -43;
p = -29;
period = -24;
q = -44;
question = 15;
quotedblright = 13;
quoteright = 13;
r = -29;
s = -32;
scaron = -32;
semicolon = -13;
t = -17;
u = -32;
uacute = -32;
ucircumflex = -32;
udieresis = -32;
ugrave = -32;
v = -43;
w = -39;
x = -46;
y = -43;
yacute = -43;
ydieresis = -43;
z = -33;
zcaron = -33;
};
U = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Uacute = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ucircumflex = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Udieresis = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
Ugrave = {
AE = -22;
J = -11;
V = -4;
X = -9;
comma = -11;
period = -11;
};
V = {
A = -18;
AE = -33;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
C = -12;
Ccedilla = -12;
G = -12;
J = -23;
O = -11;
OE = -11;
Oacute = -11;
Ocircumflex = -11;
Odieresis = -11;
Ograve = -11;
Oslash = -11;
Otilde = -11;
Q = -11;
T = 6;
V = 8;
Y = 9;
Yacute = 9;
Ydieresis = 9;
Z = 5;
Zcaron = 5;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
c = -31;
ccedilla = -31;
colon = -7;
comma = -24;
d = -29;
dotlessi = -11;
e = -29;
eacute = -29;
ecircumflex = -29;
edieresis = -29;
egrave = -29;
exclam = 5;
f = -6;
fi = -6;
fl = -6;
g = -29;
hyphen = -12;
m = -11;
n = -11;
ntilde = -11;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
p = -11;
period = -24;
q = -29;
question = 10;
quotedblright = 14;
quoteright = 14;
r = -11;
s = -18;
scaron = -18;
semicolon = -7;
t = -6;
u = -21;
uacute = -21;
ucircumflex = -21;
udieresis = -21;
ugrave = -21;
v = -12;
w = -8;
x = -18;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
W = {
A = -13;
AE = -29;
Aacute = -13;
Acircumflex = -13;
Adieresis = -13;
Agrave = -13;
Aring = -13;
Atilde = -13;
C = -8;
Ccedilla = -8;
G = -8;
J = -18;
O = -8;
OE = -8;
Oacute = -8;
Ocircumflex = -8;
Odieresis = -8;
Ograve = -8;
Oslash = -8;
Otilde = -8;
Q = -8;
Y = 4;
Yacute = 4;
Ydieresis = 4;
a = -23;
aacute = -23;
acircumflex = -23;
adieresis = -23;
ae = -23;
agrave = -23;
aring = -23;
atilde = -23;
c = -22;
ccedilla = -22;
colon = -6;
comma = -14;
d = -23;
dotlessi = -12;
e = -22;
eacute = -22;
ecircumflex = -22;
edieresis = -22;
egrave = -22;
f = -7;
fi = -7;
fl = -7;
g = -23;
hyphen = -9;
m = -12;
n = -12;
ntilde = -12;
o = -22;
oacute = -22;
ocircumflex = -22;
odieresis = -22;
oe = -22;
ograve = -22;
oslash = -22;
otilde = -22;
p = -12;
period = -14;
q = -23;
question = 7;
quotedblright = 13;
quoteright = 13;
r = -12;
s = -17;
scaron = -17;
semicolon = -6;
t = -8;
u = -17;
uacute = -17;
ucircumflex = -17;
udieresis = -17;
ugrave = -17;
v = -12;
w = -7;
x = -21;
y = -12;
yacute = -12;
ydieresis = -12;
z = -16;
zcaron = -16;
};
X = {
C = -19;
Ccedilla = -19;
G = -19;
O = -18;
OE = -18;
Oacute = -18;
Ocircumflex = -18;
Odieresis = -18;
Ograve = -18;
Oslash = -18;
Otilde = -18;
Q = -18;
S = -4;
Scaron = -4;
T = -6;
U = -8;
Uacute = -8;
Ucircumflex = -8;
Udieresis = -8;
Ugrave = -8;
V = -5;
Y = -5;
Yacute = -5;
Ydieresis = -5;
a = -17;
aacute = -17;
acircumflex = -17;
adieresis = -17;
ae = -17;
agrave = -17;
aring = -17;
atilde = -17;
c = -17;
ccedilla = -17;
comma = 7;
d = -17;
e = -17;
eacute = -17;
ecircumflex = -17;
edieresis = -17;
egrave = -17;
f = -10;
fi = -10;
fl = -10;
g = -16;
hyphen = -18;
o = -17;
oacute = -17;
ocircumflex = -17;
odieresis = -17;
oe = -17;
ograve = -17;
oslash = -17;
otilde = -17;
period = 7;
q = -17;
s = -5;
scaron = -5;
t = -12;
u = -13;
uacute = -13;
ucircumflex = -13;
udieresis = -13;
ugrave = -13;
v = -17;
w = -14;
y = -16;
yacute = -16;
ydieresis = -16;
};
Y = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Yacute = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Ydieresis = {
AE = -44;
G = -18;
J = -29;
Q = -18;
T = 6;
V = 9;
W = 4;
colon = -13;
comma = -22;
d = -42;
exclam = 6;
g = -42;
hyphen = -24;
m = -26;
p = -26;
period = -22;
q = -41;
question = 8;
semicolon = -13;
v = -24;
w = -20;
x = -27;
};
Z = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
Zcaron = {
G = -13;
Q = -13;
d = -12;
g = -12;
hyphen = -17;
q = -12;
t = -7;
v = -12;
w = -11;
};
a = {
question = -11;
v = -5;
};
aacute = {
question = -11;
v = -5;
};
acircumflex = {
question = -11;
v = -5;
};
adieresis = {
question = -11;
v = -5;
};
ae = {
question = -22;
t = -4;
v = -4;
x = -10;
};
agrave = {
question = -11;
v = -5;
};
aring = {
question = -11;
v = -5;
};
atilde = {
question = -11;
v = -5;
};
b = {
comma = -7;
f = -4;
fi = -4;
fl = -4;
period = -7;
question = -24;
quotedblright = -17;
quoteright = -17;
t = -5;
v = -6;
x = -11;
y = -6;
yacute = -6;
ydieresis = -6;
z = -5;
zcaron = -5;
};
braceleft = {
j = 56;
y = 16;
yacute = 16;
ydieresis = 16;
};
braceright = {
rehvabovear = -7;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -9;
uni0632 = -9;
uni0671 = 51;
uni0691 = -5;
uni0694 = -9;
uni0695 = -9;
uni0698 = -9;
};
bracketleft = {
j = 51;
uni0632 = 4;
y = 13;
yacute = 13;
ydieresis = 13;
};
bracketright = {
rehvabovear = -7;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -9;
uni0632 = -9;
uni0671 = 51;
uni0691 = -5;
uni0694 = -9;
uni0695 = -9;
uni0698 = -9;
};
c = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
ccedilla = {
comma = 7;
d = -4;
g = -4;
period = 7;
q = -4;
question = -13;
t = 3;
};
comma = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -22;
quoteright = -22;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
dollar = {
eight = 5;
eight.ar = 5;
eight.farsi = 5;
four = 14;
four.ar = 14;
four.farsi = 14;
nine = -10;
nine.ar = -10;
nine.farsi = -10;
};
dotlessi = {
v = -5;
w = -3;
};
e = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eacute = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ecircumflex = {
question = -22;
t = -4;
v = -4;
x = -10;
};
edieresis = {
question = -22;
t = -4;
v = -4;
x = -10;
};
egrave = {
question = -22;
t = -4;
v = -4;
x = -10;
};
eight = {
comma = -7;
eight = 5;
four = 7;
period = -7;
seven = -7;
two = -10;
};
eight.ar = {
comma = -7;
eight.ar = 5;
four.ar = 7;
period = -7;
seven.ar = -7;
two.ar = -10;
};
eight.farsi = {
comma = -7;
eight.farsi = 5;
four.farsi = 7;
period = -7;
seven.farsi = -7;
two.farsi = -10;
};
exclamdown = {
j = 44;
y = 8;
yacute = 8;
ydieresis = 8;
};
f = {
a = -14;
aacute = -14;
acircumflex = -14;
adieresis = -14;
ae = -14;
agrave = -14;
aring = -14;
atilde = -14;
c = -14;
ccedilla = -14;
comma = -21;
d = -14;
e = -14;
eacute = -14;
ecircumflex = -14;
edieresis = -14;
egrave = -14;
exclam = 6;
g = -14;
hyphen = -9;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = -21;
q = -14;
question = 12;
quotedblright = 13;
quoteright = 13;
};
fi = {
v = -5;
w = -3;
};
five = {
comma = -9;
four = 4;
nine = -16;
one = -5;
period = -9;
seven = -12;
two = -10;
zero = -3;
};
five.ar = {
comma = -9;
four.ar = 4;
nine.ar = -16;
one.ar = -5;
period = -9;
seven.ar = -12;
two.ar = -10;
zero.ar = -3;
};
five.farsi = {
comma = -9;
four.farsi = 4;
nine.farsi = -16;
one.farsi = -5;
period = -9;
seven.farsi = -12;
two.farsi = -10;
zero.farsi = -3;
};
fl = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -12;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
four = {
four = 6;
nine = -16;
one = -6;
seven = -10;
six = -4;
two = -5;
zero = -10;
};
four.ar = {
four.ar = 6;
nine.ar = -16;
one.ar = -6;
seven.ar = -10;
six.ar = -4;
two.ar = -5;
zero.ar = -10;
};
four.farsi = {
four.farsi = 6;
nine.farsi = -16;
one.farsi = -6;
seven.farsi = -10;
six.farsi = -4;
two.farsi = -5;
zero.farsi = -10;
};
g = {
j = 29;
question = -12;
quotedblright = -5;
quoteright = -5;
v = -4;
};
germandbls = {
f = -11;
fi = -11;
fl = -11;
t = -18;
v = -16;
w = -12;
x = -10;
y = -16;
yacute = -16;
ydieresis = -16;
};
h = {
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
hyphen = {
T = -23;
V = -12;
W = -9;
X = -18;
Y = -24;
Yacute = -24;
Ydieresis = -24;
v = -6;
x = -12;
};
i = {
v = -5;
w = -3;
};
iacute = {
v = -5;
w = -3;
};
icircumflex = {
v = -5;
w = -3;
};
idieresis = {
v = -5;
w = -3;
};
igrave = {
v = -5;
w = -3;
};
j = {
j = 31;
v = -5;
w = -3;
};
k = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 4;
d = -12;
e = -13;
eacute = -13;
ecircumflex = -13;
edieresis = -13;
egrave = -13;
g = -12;
hyphen = -8;
o = -13;
oacute = -13;
ocircumflex = -13;
odieresis = -13;
oe = -13;
ograve = -13;
oslash = -13;
otilde = -13;
period = 4;
q = -12;
question = -6;
s = -4;
scaron = -4;
};
l = {
colon = 5;
comma = 11;
d = -4;
g = -4;
hyphen = -4;
l = -4;
period = 11;
q = -4;
question = -12;
semicolon = 5;
t = -16;
v = -13;
w = -9;
};
lam_alefvabovear = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 27;
lamvabovear = 17;
lamvabovear.init = 17;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 43;
uni0623 = 43;
uni0624 = 23;
uni0625 = 26;
uni0626 = 21;
uni0627 = 17;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 43;
uni0686 = 28;
uni0691 = 38;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 26;
uniFB7C = 28;
uniFDF2 = 17;
uniFE8B = 21;
uniFE97 = 26;
uniFE9B = 26;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 0;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
lam_alefvabovear.fina = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 17;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 27;
lamvabovear = 17;
lamvabovear.init = 17;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 43;
uni0624 = 23;
uni0625 = 26;
uni0626 = 21;
uni0627 = 17;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 43;
uni0686 = 28;
uni0691 = 38;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 26;
uniFB7C = 28;
uniFDF2 = 17;
uniFE8B = 21;
uniFE9B = 26;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 17;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
m = {
f = -4;
fi = -4;
fl = -4;
question = -23;
quotedblright = -22;
quoteright = -22;
v = -5;
w = -3;
y = -5;
yacute = -5;
ydieresis = -5;
};
n = {
question = -23;
v = -5;
w = -3;
};
nine = {
comma = -27;
five = -3;
four = -8;
period = -27;
seven = -7;
six = -7;
three = -9;
two = -16;
};
nine.ar = {
comma = -27;
five.ar = -3;
four.ar = -8;
period = -27;
seven.ar = -7;
six.ar = -7;
three.ar = -9;
two.ar = -16;
};
nine.farsi = {
comma = -27;
five.farsi = -3;
four.farsi = -8;
period = -27;
seven.farsi = -7;
six.farsi = -7;
three.farsi = -9;
two.farsi = -16;
};
ntilde = {
question = -23;
v = -5;
w = -3;
};
o = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oacute = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
ocircumflex = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
odieresis = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
oe = {
question = -22;
t = -4;
v = -4;
x = -10;
};
ograve = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
one = {
eight = -11;
five = -10;
four = -16;
nine = -28;
seven = -21;
six = -16;
three = -8;
zero = -24;
};
one.ar = {
eight.ar = -11;
five.ar = -10;
four.ar = -16;
nine.ar = -28;
seven.ar = -21;
six.ar = -16;
three.ar = -8;
zero.ar = -24;
};
one.farsi = {
eight.farsi = -11;
five.farsi = -10;
four.farsi = -16;
nine.farsi = -28;
seven.farsi = -21;
six.farsi = -16;
three.farsi = -8;
zero.farsi = -24;
};
oslash = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
otilde = {
comma = -7;
period = -7;
question = -26;
t = -8;
v = -6;
w = -3;
x = -13;
};
p = {
comma = -7;
f = -7;
fi = -7;
fl = -7;
period = -7;
question = -27;
quotedblright = -18;
quoteright = -18;
t = -5;
v = -4;
x = -11;
y = -4;
yacute = -4;
ydieresis = -4;
z = -6;
zcaron = -6;
};
parenleft = {
comma = 16;
j = 51;
p = 13;
uni0631 = 4;
uni0632 = 4;
y = 38;
yacute = 38;
ydieresis = 38;
};
parenright = {
rehvabovear = -3;
uni0622 = 43;
uni0623 = 43;
uni0625 = 17;
uni0627 = 0;
uni0631 = -8;
uni0632 = -8;
uni0671 = 26;
uni0691 = -1;
uni0694 = -8;
uni0695 = -8;
uni0698 = -8;
};
period = {
eight = -7;
eight.ar = -7;
eight.farsi = -7;
nine = -33;
nine.ar = -33;
nine.farsi = -33;
quotedblright = -1;
quoteright = -1;
seven = -19;
seven.ar = -19;
seven.farsi = -19;
six = -10;
six.ar = -10;
six.farsi = -10;
zero = -23;
zero.ar = -23;
zero.farsi = -23;
};
q = {
j = 34;
};
questiondown = {
j = 74;
p = 17;
y = 38;
yacute = 38;
ydieresis = 38;
};
quotedblbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
quotedblleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0691 = 34;
uni0698 = 21;
uniFB68 = 30;
uniFE8B = 34;
uniFE97 = 27;
uniFE9B = 27;
v = 17;
w = 17;
x = 8;
};
quotedblright = {
colon = -2;
period = -2;
rehvabovear = 17;
uni0691 = 50;
uni0698 = 21;
uniFB68 = 50;
uniFE8B = 34;
uniFE97 = 32;
uniFE9B = 32;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
quoteleft = {
J = -12;
T = 7;
V = 9;
W = 4;
d = -12;
g = -13;
q = -13;
t = 14;
uni0698 = 27;
uniFE8B = 34;
uniFE97 = 5;
uniFE9B = 5;
v = 17;
w = 17;
x = 8;
};
quoteright = {
A = -18;
Aacute = -18;
Acircumflex = -18;
Adieresis = -18;
Agrave = -18;
Aring = -18;
Atilde = -18;
O = -9;
OE = -9;
Oacute = -9;
Ocircumflex = -9;
Odieresis = -9;
Ograve = -9;
Oslash = -9;
Otilde = -9;
T = 18;
V = 8;
a = -29;
aacute = -29;
acircumflex = -29;
adieresis = -29;
ae = -29;
agrave = -29;
aring = -29;
atilde = -29;
colon = -2;
comma = -23;
d = -31;
dotlessi = -12;
e = -30;
eacute = -30;
ecircumflex = -30;
edieresis = -30;
egrave = -30;
m = -12;
n = -12;
ntilde = -12;
o = -31;
oacute = -31;
ocircumflex = -31;
odieresis = -31;
oe = -31;
ograve = -31;
oslash = -31;
otilde = -31;
period = -2;
r = -12;
rehvabovear = 17;
s = -21;
scaron = -21;
uni0691 = 50;
uni0698 = 32;
uniFB68 = 50;
uniFE8B = 34;
uniFE97 = 32;
uniFE9B = 32;
yehvabove_alefMaksuraar = 17;
yehvabove_pehar = 17;
yehvabove_yehHamzaabovear = 17;
yehvabove_yehar = 17;
yehvabove_yehvar = 17;
yehvabovear.init = 17;
};
quotesinglbase = {
T = -28;
V = -23;
W = -16;
j = 38;
t = -22;
v = -18;
w = -16;
};
r = {
a = -10;
aacute = -10;
acircumflex = -10;
adieresis = -10;
ae = -10;
agrave = -10;
aring = -10;
atilde = -10;
c = -10;
ccedilla = -10;
comma = -15;
d = -10;
e = -10;
eacute = -10;
ecircumflex = -10;
edieresis = -10;
egrave = -10;
f = 4;
fi = 4;
fl = 4;
g = -10;
hyphen = -4;
o = -10;
oacute = -10;
ocircumflex = -10;
odieresis = -10;
oe = -10;
ograve = -10;
oslash = -10;
otilde = -10;
period = -15;
q = -10;
question = -11;
t = 4;
};
rehdotbelowar.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
space = 34;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvabovear = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 77;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvabovear.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
rehvbelowar.fina = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -4;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
s = {
comma = 5;
period = 5;
question = -18;
};
scaron = {
comma = 5;
period = 5;
question = -18;
};
seven = {
comma = -35;
eight = -6;
four = -19;
one = 5;
period = -35;
six = -17;
two = -12;
zero = -11;
};
seven.ar = {
comma = -35;
eight.ar = -6;
four.ar = -19;
one.ar = 5;
period = -35;
six.ar = -17;
two.ar = -12;
zero.ar = -11;
};
seven.farsi = {
comma = -35;
eight.farsi = -6;
four.farsi = -19;
one.farsi = 5;
period = -35;
six.farsi = -17;
two.farsi = -12;
zero.farsi = -11;
};
six = {
comma = -9;
four = 7;
nine = -9;
one = -7;
period = -9;
seven = -18;
two = -11;
zero = -4;
};
six.ar = {
comma = -9;
four.ar = 7;
nine.ar = -9;
one.ar = -7;
period = -9;
seven.ar = -18;
two.ar = -11;
zero.ar = -4;
};
six.farsi = {
comma = -9;
four.farsi = 7;
nine.farsi = -9;
one.farsi = -7;
period = -9;
seven.farsi = -18;
two.farsi = -11;
zero.farsi = -4;
};
space = {
uni0642 = 8;
uni0646 = 8;
uni064A = 8;
yehvabovear = 17;
};
sterling = {
eight = -5;
four = -12;
seven = 6;
six = -18;
};
t = {
a = -9;
aacute = -9;
acircumflex = -9;
adieresis = -9;
ae = -9;
agrave = -9;
aring = -9;
atilde = -9;
c = -9;
ccedilla = -9;
comma = -18;
d = -9;
e = -8;
eacute = -8;
ecircumflex = -8;
edieresis = -8;
egrave = -8;
f = 4;
fi = 4;
fl = 4;
g = -9;
o = -9;
oacute = -9;
ocircumflex = -9;
odieresis = -9;
oe = -9;
ograve = -9;
oslash = -9;
otilde = -9;
period = -18;
q = -9;
question = -6;
t = 3;
x = -5;
};
three = {
comma = -7;
four = 9;
one = -7;
period = -7;
seven = -9;
two = -10;
zero = -6;
};
three.ar = {
comma = -7;
four.ar = 9;
one.ar = -7;
period = -7;
seven.ar = -9;
two.ar = -10;
zero.ar = -6;
};
three.farsi = {
comma = -7;
four.farsi = 9;
one.farsi = -7;
period = -7;
seven.farsi = -9;
two.farsi = -10;
zero.farsi = -6;
};
two = {
comma = -7;
eight = -4;
five = -5;
four = -16;
nine = -4;
period = -7;
seven = -5;
six = -16;
three = -5;
zero = -11;
};
two.ar = {
comma = -7;
eight.ar = -4;
five.ar = -5;
four.ar = -16;
nine.ar = -4;
period = -7;
seven.ar = -5;
six.ar = -16;
three.ar = -5;
zero.ar = -11;
};
two.farsi = {
comma = -7;
eight.farsi = -4;
five.farsi = -5;
four.farsi = -16;
nine.farsi = -4;
period = -7;
seven.farsi = -5;
six.farsi = -16;
three.farsi = -5;
zero.farsi = -11;
};
u = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uacute = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ucircumflex = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
udieresis = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
ugrave = {
comma = -5;
period = -5;
question = -19;
v = -5;
x = -8;
};
uni0622 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 38;
lamdotabovear.init = 38;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 56;
lamvabovear = 34;
lamvabovear.init = 26;
parenleft = 43;
uni0622 = 68;
uni0623 = 59;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0671 = 64;
uni0686 = 8;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 8;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 44;
};
uni0623 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 26;
lamdotabovear.init = 26;
lamthreedotsabovear = 51;
lamthreedotsabovear.init = 51;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 43;
uni0622 = 59;
uni0623 = 59;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 56;
uni0639 = 8;
uni063A = 8;
uni0671 = 59;
uni0686 = 8;
uni0691 = 33;
uni0698 = 44;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 44;
uniFE97 = 56;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 56;
};
uni0625 = {
Decoratedbracketleft = 30;
braceleft = 30;
bracketleft = 30;
parenleft = 30;
uni0625 = 64;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 11;
uni0639 = 8;
uni063A = 8;
uni0686 = 8;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 11;
};
uni0627 = {
braceleft = 0;
parenleft = 0;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0686 = 8;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFB7C = 8;
uniFE8B = 22;
uniFE97 = 44;
uniFE9B = 22;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 11;
};
uni062F = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 18;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0630 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0631 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 77;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0661 = 63;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEAE = 19;
uniFECB = 51;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0632 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -36;
uni0663 = -29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F3 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFEB0 = 19;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0637 = {
uni0621 = 28;
};
uni0638 = {
uni0621 = 28;
};
uni06440671 = {
aleflaminitial = 8;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
rehvabovear = 44;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 56;
uni0644 = 22;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 95;
uni0694 = 8;
uni0695 = 8;
uni0698 = 58;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 56;
uniFE8B = 72;
uniFE97 = 440;
uniFE9B = 57;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 56;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 8;
yehvabove_pehar = 8;
yehvabove_yehHamzaabovear = 8;
yehvabove_yehar = 8;
yehvabove_yehvar = 8;
yehvabovear = 18;
yehvabovear.init = 8;
};
uni06440671.fina = {
aleflaminitial = 8;
lamdotabovear = 22;
lamdotabovear.init = 56;
lamthreedotsabovear = 22;
lamthreedotsabovear.init = 56;
lamvabovear = 22;
lamvabovear.init = 56;
rehvabovear = 44;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 56;
uni0644 = 22;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 95;
uni0694 = 8;
uni0695 = 8;
uni0698 = 58;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 56;
uniFE8B = 72;
uniFE97 = 57;
uniFE9B = 57;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 56;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 8;
yehvabove_pehar = 8;
yehvabove_yehHamzaabovear = 8;
yehvabove_yehar = 8;
yehvabove_yehvar = 51;
yehvabovear = 18;
yehvabovear.init = 8;
};
uni0660 = {
uni0666 = -101;
};
uni0661 = {
uni0667 = 17;
uni0668 = 4;
uni0691 = 5;
uni0698 = 5;
uni06F7 = 1;
};
uni0662 = {
uni0660 = -102;
uni0666 = 17;
uni0667 = 19;
uni0668 = -31;
uni0669 = -7;
uni06F9 = -2;
uniF806 = -57;
};
uni0663 = {
uni0660 = -62;
uni0665 = -8;
uni0666 = -13;
uni0667 = 21;
uni0668 = -31;
uniF806 = -67;
};
uni0664 = {
uni0666 = -4;
uni0668 = 5;
};
uni0665 = {
uni0663 = 13;
uni0666 = -15;
uni0667 = 4;
uni0668 = 3;
uniF806 = 2;
};
uni0666 = {
uni0666 = -17;
uni0667 = 7;
uni0668 = 4;
uni0691 = 36;
uni0695 = -34;
uni0698 = -7;
uniFB8B = 0;
uniFB8D = 4;
};
uni0667 = {
uni0632 = 4;
uni0661 = 17;
uni0662 = 7;
uni0663 = 27;
uni0664 = 4;
uni0665 = 4;
uni0666 = 28;
uni0667 = 54;
uni0668 = 1;
uni0669 = 12;
uni0691 = 53;
uni0694 = 4;
uni0695 = 4;
uni0698 = 11;
uni06F3 = 1;
};
uni0668 = {
uni0631 = 4;
uni0632 = 4;
uni0661 = 4;
uni0662 = 18;
uni0663 = 17;
uni0664 = 4;
uni0665 = 3;
uni0666 = -31;
uni0667 = 1;
uni0668 = 53;
uni0669 = -18;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06F7 = -2;
uniF806 = 2;
};
uni0669 = {
uni0666 = -17;
uni0667 = 4;
uni0668 = 17;
};
uni0671 = {
Decoratedbracketleft = 43;
braceleft = 51;
bracketleft = 51;
lamdotabovear = 43;
lamdotabovear.init = 43;
lamthreedotsabovear = 59;
lamthreedotsabovear.init = 59;
lamvabovear = 34;
lamvabovear.init = 34;
parenleft = 51;
uni0622 = 64;
uni0623 = 38;
uni062C = 8;
uni062D = 8;
uni062E = 8;
uni0632 = 44;
uni0639 = 8;
uni063A = 8;
uni0671 = 64;
uni0686 = 8;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFB7C = 8;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 8;
uniFEA3 = 8;
uniFEA7 = 8;
uniFECB = 8;
uniFECF = 8;
uniFEE7 = 44;
};
uni0688 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uni0691 = {
Decoratedbracketleft = 117;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0667 = 29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 5;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 30;
uniFB7C = 0;
uniFB8D = 19;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 27;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE97 = 4;
uniFE9B = 4;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0694 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0695 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0666 = 0;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni0698 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0661 = 5;
uni0662 = -17;
uni0667 = 4;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 17;
uniFB7C = 0;
uniFB8B = 19;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 3;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uni06F1 = {
uni0691 = 5;
uni0698 = 4;
uni06F7 = 17;
uni06F8 = 17;
};
uni06F2 = {
uni0660 = -7;
uni0666 = 15;
uni0667 = 1;
uni06F0 = -17;
uni06F7 = 13;
uni06F8 = -26;
uniF806 = -139;
};
uni06F3 = {
uni0632 = 4;
uni0664 = -1;
uni0698 = 7;
uni06F0 = -11;
uni06F5 = -8;
uni06F7 = 4;
uniF806 = -56;
};
uni06F4 = {
uni0632 = 4;
uni0691 = 7;
uni0698 = 7;
uni06F6 = -13;
uniF806 = -25;
};
uni06F5 = {
uni06F5 = 3;
uni06F7 = 4;
uni06F8 = 12;
};
uni06F6 = {
uni0668 = -2;
uni06F8 = -1;
};
uni06F7 = {
uni0631 = 4;
uni0632 = 4;
uni0661 = 2;
uni0691 = 7;
uni0694 = 4;
uni0695 = 4;
uni0698 = 11;
uni06F1 = 17;
uni06F2 = 7;
uni06F3 = 27;
uni06F4 = 22;
uni06F5 = 4;
uni06F6 = 11;
uni06F7 = 54;
uni06F8 = 1;
uni06F9 = 12;
uniF805 = 17;
};
uni06F8 = {
uni0631 = 4;
uni0632 = 4;
uni0667 = -1;
uni0691 = 4;
uni0694 = 4;
uni0695 = 4;
uni0698 = 4;
uni06F1 = 17;
uni06F2 = 17;
uni06F3 = 17;
uni06F4 = 17;
uni06F5 = 12;
uni06F6 = 39;
uni06F7 = 1;
uni06F8 = 53;
uni06F9 = -18;
uniF806 = 15;
};
uni06F9 = {
uni06F6 = 8;
uni06F7 = 4;
uni06F8 = 17;
};
uniF805 = {
uni0660 = -83;
uni06F0 = -7;
uni06F4 = 1;
uni06F5 = -39;
uni06F7 = 17;
uni06F8 = -22;
uni06F9 = -28;
uniF806 = -222;
};
uniF806 = {
uni0660 = -81;
uni0661 = 20;
uni0662 = 20;
uni0666 = -46;
uni0667 = -48;
uni0668 = 32;
uni0669 = -110;
uni06F0 = -81;
uni06F1 = 25;
uni06F3 = 25;
uni06F4 = 25;
uni06F6 = 48;
uni06F7 = -48;
uni06F8 = 47;
uni06F9 = -130;
uniF805 = 25;
};
uniFB51 = {
Decoratedbracketleft = 43;
braceleft = 51;
bracketleft = 51;
lamdotabovear = 43;
lamdotabovear.init = 43;
lamthreedotsabovear = 59;
lamthreedotsabovear.init = 59;
lamvabovear = 34;
lamvabovear.init = 34;
parenleft = 51;
uni0622 = 64;
uni0623 = 68;
uni0632 = 44;
uni0671 = 64;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 44;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFB89 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFB8B = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
space = 16;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -17;
uni0663 = -17;
uni0666 = -17;
uni0667 = 4;
uni0686 = 25;
uni0691 = 79;
uni0694 = 78;
uni0695 = 78;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 17;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 3;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE97 = 8;
uniFE9B = 8;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFB8D = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0667 = 29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F7 = 5;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB68 = 30;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE8B = 27;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE97 = 4;
uniFE9B = 4;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFE82 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 38;
lamdotabovear.init = 38;
lamthreedotsabovear = 56;
lamthreedotsabovear.init = 56;
lamvabovear = 34;
lamvabovear.init = 26;
parenleft = 43;
uni0622 = 68;
uni0623 = 30;
uni0632 = 44;
uni0671 = 64;
uni0691 = 44;
uni0698 = 44;
uniFB68 = 44;
uniFE8B = 33;
uniFE97 = 44;
uniFE9B = 44;
uniFEE7 = 44;
};
uniFE84 = {
Decoratedbracketleft = 43;
braceleft = 43;
bracketleft = 43;
lamdotabovear = 26;
lamdotabovear.init = 26;
lamthreedotsabovear = 51;
lamthreedotsabovear.init = 51;
lamvabovear = 17;
lamvabovear.init = 17;
parenleft = 43;
uni0622 = 59;
uni0623 = 59;
uni0632 = 56;
uni0671 = 59;
uni0691 = 33;
uni0698 = 44;
uniFB68 = 33;
uniFE8B = 44;
uniFE97 = 56;
uniFE9B = 44;
uniFEE7 = 56;
};
uniFE88 = {
Decoratedbracketleft = 17;
braceleft = 17;
bracketleft = 17;
parenleft = 17;
uni0625 = 43;
uni0632 = 11;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 11;
};
uniFE8E = {
braceleft = 0;
parenleft = 0;
uni0632 = 11;
uni0691 = 33;
uni0698 = 22;
uniFB68 = 33;
uniFE8B = 22;
uniFE97 = 22;
uniFE9B = 22;
uniFEE7 = 11;
};
uniFE91 = {
uniFEAE = 1;
uniFEB0 = 1;
};
uniFEAA = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFEAC = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
uni0621 = 28;
uni0622 = 8;
uni0623 = 8;
uni0624 = 23;
uni0625 = 8;
uni0626 = 21;
uni0627 = 8;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 21;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 8;
uni0686 = 28;
uni0691 = 8;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 21;
};
uniFEAE = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -44;
uni0663 = -38;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFEB0 = {
Decoratedbracketleft = 117;
Decoratedbracketright = -13;
braceleft = 131;
braceright = 9;
bracketleft = 131;
bracketright = 23;
lamdotabovear = 53;
lamthreedotsabovear = 53;
lamvabovear = 53;
parenleft = 134;
rehvabovear = 79;
uni0624 = 72;
uni0625 = 144;
uni0626 = 73;
uni062C = 25;
uni062D = 17;
uni062E = 17;
uni0631 = 79;
uni0632 = 79;
uni0639 = 69;
uni063A = 69;
uni0642 = 58;
uni0644 = 57;
uni0646 = 58;
uni0648 = 81;
uni0649 = 73;
uni064A = 73;
uni0660 = -4;
uni0662 = -36;
uni0663 = -29;
uni0686 = 25;
uni0691 = 79;
uni0694 = 79;
uni0695 = 79;
uni0698 = 79;
uni06CC = 69;
uni06F0 = -4;
uni06F2 = -11;
uni06F3 = -4;
uniEECD = 69;
uniEECF = 9;
uniFB58 = 101;
uniFB58FE8A = 101;
uniFB58FEF0 = 101;
uniFB58FEF2 = 101;
uniFB7C = 0;
uniFBA8 = -7;
uniFBA8FE8A = 3;
uniFBA8FEF0 = 3;
uniFBA8FEF2 = 3;
uniFBFE = 101;
uniFBFEFBFD = 101;
uniFC09 = -6;
uniFC0A = -6;
uniFC59 = 101;
uniFC5A = 101;
uniFE91 = -6;
uniFE91FE8A = -6;
uniFE9F = 0;
uniFEA3 = 0;
uniFEA7 = 0;
uniFECB = 9;
uniFECF = 9;
uniFEF3 = 101;
uniFEF3FE8A = 101;
wawtwodotsabovear = 81;
wawvabovear = 81;
yehvabove_alefMaksuraar = 101;
yehvabove_pehar = 101;
yehvabove_yehHamzaabovear = 101;
yehvabove_yehar = 101;
yehvabove_yehvar = 101;
yehvabovear = 73;
yehvabovear.init = 101;
};
uniFEC2 = {
uni0621 = 28;
};
uniFEC6 = {
uni0621 = 28;
};
uniFEF5 = {
aleflaminitial = 8;
lamdotabovear = 19;
lamdotabovear.init = 45;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 45;
lamvabovear = 19;
lamvabovear.init = 45;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 45;
uni0644 = 19;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 88;
uni0694 = 8;
uni0695 = 8;
uni0698 = 56;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 72;
uniFB7C = 28;
uniFDF2 = 47;
uniFE8B = 71;
uniFE97 = 54;
uniFE9B = 54;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 45;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 5;
yehvabove_pehar = 5;
yehvabove_yehHamzaabovear = 5;
yehvabove_yehar = 5;
yehvabove_yehvar = 5;
yehvabovear = 18;
yehvabovear.init = 5;
};
uniFEF6 = {
aleflaminitial = 8;
lamdotabovear = 19;
lamdotabovear.init = 45;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 45;
lamvabovear = 19;
lamvabovear.init = 45;
rehvabovear = 8;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 51;
uni0626 = 21;
uni0627 = 51;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 45;
uni0644 = 19;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 88;
uni0694 = 8;
uni0695 = 8;
uni0698 = 56;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 72;
uniFB7C = 28;
uniFDF2 = 47;
uniFE8B = 71;
uniFE97 = 54;
uniFE9B = 54;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 45;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 5;
yehvabove_pehar = 5;
yehvabove_yehHamzaabovear = 5;
yehvabove_yehar = 5;
yehvabove_yehvar = 5;
yehvabovear = 18;
yehvabovear.init = 5;
};
uniFEF7 = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 34;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 39;
lamvabovear = 17;
lamvabovear.init = 34;
rehvabovear = 34;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 34;
uni0626 = 21;
uni0627 = 34;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 89;
uni0694 = 8;
uni0695 = 8;
uni0698 = 44;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 34;
uniFE8B = 48;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 34;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 3;
yehvabove_pehar = 3;
yehvabove_yehHamzaabovear = 3;
yehvabove_yehar = 3;
yehvabove_yehvar = 37;
yehvabovear = 18;
yehvabovear.init = 3;
};
uniFEF8 = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 34;
lamthreedotsabovear = 19;
lamthreedotsabovear.init = 34;
lamvabovear = 17;
lamvabovear.init = 34;
rehvabovear = 34;
uni0621 = 28;
uni0622 = 51;
uni0623 = 51;
uni0624 = 23;
uni0625 = 34;
uni0626 = 21;
uni0627 = 34;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 34;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0671 = 51;
uni0686 = 28;
uni0691 = 89;
uni0694 = 8;
uni0695 = 8;
uni0698 = 44;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 77;
uniFB7C = 28;
uniFDF2 = 34;
uniFE8B = 48;
uniFE97 = 44;
uniFE9B = 44;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 34;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabove_alefMaksuraar = 3;
yehvabove_pehar = 3;
yehvabove_yehHamzaabovear = 3;
yehvabove_yehar = 3;
yehvabove_yehvar = 37;
yehvabovear = 18;
yehvabovear.init = 3;
};
uniFEF9 = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
uniFEFA = {
aleflaminitial = 8;
lamdotabovear = 8;
lamthreedotsabovear = 8;
lamvabovear = 8;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 8;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
uniFEFB = {
aleflaminitial = 8;
lamdotabovear = 17;
lamthreedotsabovear = 17;
lamvabovear = 17;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE8B = 0;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 17;
};
uniFEFC = {
aleflaminitial = 8;
lamdotabovear = 17;
lamdotabovear.init = 0;
lamthreedotsabovear = 17;
lamthreedotsabovear.init = 0;
lamvabovear = 17;
lamvabovear.init = 0;
rehvabovear = 8;
uni0621 = 28;
uni0624 = 23;
uni0626 = 21;
uni062C = 28;
uni062D = 28;
uni062E = 28;
uni0631 = 8;
uni0632 = 8;
uni0639 = 28;
uni063A = 28;
uni0642 = 17;
uni0643 = 0;
uni0644 = 17;
uni0646 = 8;
uni0648 = 23;
uni0649 = 21;
uni064A = 21;
uni0686 = 28;
uni0691 = 21;
uni0694 = 8;
uni0695 = 8;
uni0698 = 8;
uni06CC = 21;
uni06D2 = 28;
uni06D3 = 28;
uniEECD = 28;
uniEECF = 28;
uniFB68 = 21;
uniFB7C = 28;
uniFE8B = 0;
uniFE9F = 28;
uniFEA3 = 28;
uniFEA7 = 28;
uniFECB = 28;
uniFECF = 28;
uniFEDF = 0;
wawtwodotsabovear = 23;
wawvabovear = 23;
yehvabovear = 18;
};
v = {
a = -3;
aacute = -3;
acircumflex = -3;
adieresis = -3;
ae = -3;
agrave = -3;
aring = -3;
atilde = -3;
c = -5;
ccedilla = -5;
comma = -22;
d = -3;
e = -4;
eacute = -4;
ecircumflex = -4;
edieresis = -4;
egrave = -4;
g = -3;
hyphen = -6;
o = -4;
oacute = -4;
ocircumflex = -4;
odieresis = -4;
oe = -4;
ograve = -4;
oslash = -4;
otilde = -4;
period = -22;
q = -3;
question = -5;
quotedblright = 8;
quoteright = 8;
t = 4;
v = 5;
w = 3;
y = 5;
yacute = 5;
ydieresis = 5;
};
w = {
comma = -11;
period = -11;
question = -6;
quotedblright = 11;
quoteright = 11;
t = 4;
v = 3;
y = 3;
yacute = 3;
ydieresis = 3;
};
x = {
a = -12;
aacute = -12;
acircumflex = -12;
adieresis = -12;
ae = -12;
agrave = -12;
aring = -12;
atilde = -12;
c = -13;
ccedilla = -13;
comma = 7;
d = -12;
e = -16;
eacute = -16;
ecircumflex = -16;
edieresis = -16;
egrave = -16;
g = -12;
hyphen = -12;
o = -14;
oacute = -14;
ocircumflex = -14;
odieresis = -14;
oe = -14;
ograve = -14;
oslash = -14;
otilde = -14;
period = 7;
q = -12;
question = -12;
t = -3;
u = -7;
uacute = -7;
ucircumflex = -7;
udieresis = -7;
ugrave = -7;
v = -7;
w = -4;
y = -7;
yacute = -7;
ydieresis = -7;
};
y = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yacute = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
ydieresis = {
comma = -22;
d = -3;
g = -3;
period = -22;
q = -3;
question = -5;
t = 4;
v = 5;
w = 3;
};
yen = {
five = 7;
seven = 12;
six = -6;
two = -7;
};
z = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zcaron = {
comma = 4;
d = -4;
g = -4;
period = 4;
q = -4;
question = -11;
};
zero = {
comma = -23;
five = -4;
one = -8;
period = -23;
seven = -19;
six = -5;
three = -7;
two = -17;
};
zero.ar = {
comma = -23;
five.ar = -4;
one.ar = -8;
period = -23;
seven.ar = -19;
six.ar = -5;
three.ar = -7;
two.ar = -17;
};
zero.farsi = {
comma = -23;
five.farsi = -4;
one.farsi = -8;
period = -23;
seven.farsi = -19;
six.farsi = -5;
three.farsi = -7;
two.farsi = -17;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) - Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Mobile Telecommunications Company (Zain), 2024";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Zain,Boutros";
}
);
},
{
key = manufacturerURL;
value = "http://www.zain.com";
},
{
key = designerURL;
value = "http://www.zain.com";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 800;
versionMajor = 2;
versionMinor = 0;
}
